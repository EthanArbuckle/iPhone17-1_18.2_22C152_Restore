BOOL CUIKShouldShowTimezoneClarification(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  BOOL v6;

  v3 = a1;
  v4 = a2;
  v5 = (void *)CalCopyTimeZone();
  v6 = v3 && ([v3 isUTC] & 1) == 0 && CUIKTimezonesDivergeAtDate(v3, v5, v4);

  return v6;
}

BOOL CUIKTimezonesDivergeAtDate(void *a1, void *a2, void *a3)
{
  uint64_t v5 = RegisterForInvalidation_onceToken;
  id v6 = a3;
  id v7 = a2;
  id v8 = a1;
  if (v5 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  BOOL v9 = _CUIKTimezonesDivergeAtDate(v8, v7, v6);

  return v9;
}

BOOL _CUIKTimezonesDivergeAtDate(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  uint64_t v7 = [a1 secondsFromGMTForDate:v5];
  uint64_t v8 = [v6 secondsFromGMTForDate:v5];

  return v7 != v8;
}

uint64_t CUIKEventDisplaysAsNeedsReply(void *a1)
{
  id v1 = a1;
  if ([v1 isSelfOrganizedInvitation]) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = CUIKEventCommonPartStatDisplayTestsAndSpecificTest(v1, &__block_literal_global_11_0);
  }

  return v2;
}

id CUIKBundle()
{
  v0 = (void *)CUIKBundle___Bundle;
  if (!CUIKBundle___Bundle)
  {
    uint64_t v1 = [MEMORY[0x1E4F28B50] bundleWithIdentifier:@"com.apple.CalendarUIKit"];
    uint64_t v2 = (void *)CUIKBundle___Bundle;
    CUIKBundle___Bundle = v1;

    v0 = (void *)CUIKBundle___Bundle;
  }

  return v0;
}

id CUIKDisplayedTitleForEvent(void *a1)
{
  id v1 = a1;
  int v2 = [v1 isProposedTimeEvent];
  BOOL v3 = [v1 status] == 3;
  int v4 = CUIKEventDisplaysAsDeclined(v1);
  id v5 = CUIKDisplayedTitleForEventWithOptions(v1, v2, v3, v4);

  return v5;
}

uint64_t CUIKEventDisplaysAsDeclined(void *a1)
{
  id v1 = a1;
  if ([v1 isProposedTimeEvent]) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = CUIKEventCommonPartStatDisplayTestsAndSpecificTest(v1, &__block_literal_global_14);
  }

  return v2;
}

uint64_t CUIKEventCommonPartStatDisplayTestsAndSpecificTest(void *a1, void *a2)
{
  id v3 = a1;
  int v4 = a2;
  if ([v3 hasAttendees]) {
    uint64_t v5 = v4[2](v4, [v3 selfParticipantStatus]);
  }
  else {
    uint64_t v5 = 0;
  }

  return v5;
}

__CFString *CUIKDisplayedTitleForEventWithOptions(void *a1, int a2, int a3, int a4)
{
  id v7 = a1;
  uint64_t v8 = [v7 title];
  if (!v8
    || ([v7 title],
        BOOL v9 = objc_claimAutoreleasedReturnValue(),
        int v10 = [v9 isEqualToString:&stru_1F187C430],
        v9,
        v10))
  {

    uint64_t v8 = @" ";
  }
  if (a2)
  {
    v11 = NSString;
    v12 = CUIKBundle();
    v13 = v12;
    v14 = @"PROPOSED: %@";
  }
  else if (a3)
  {
    v11 = NSString;
    v12 = CUIKBundle();
    v13 = v12;
    v14 = @"CANCELED: %@";
  }
  else
  {
    if (!a4) {
      goto LABEL_11;
    }
    v11 = NSString;
    v12 = CUIKBundle();
    v13 = v12;
    v14 = @"DECLINED: %@";
  }
  v15 = [v12 localizedStringForKey:v14 value:&stru_1F187C430 table:0];
  uint64_t v16 = objc_msgSend(v11, "localizedStringWithFormat:", v15, v8);

  uint64_t v8 = (__CFString *)v16;
LABEL_11:

  return v8;
}

id CUIKSymbolicColorWithName(void *a1)
{
  uint64_t v1 = CUIKSymbolicColorWithName_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&CUIKSymbolicColorWithName_onceToken, &__block_literal_global_41);
  }
  id v3 = [(id)CUIKSymbolicColorWithName_kColors objectForKeyedSubscript:v2];

  return v3;
}

id CUIKOccurrenceSecondaryTextColor(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, char a8, char a9, uint64_t a10)
{
  id v17 = a1;
  v18 = v17;
  int v19 = a2 | a3;
  if (a4)
  {
    uint64_t v20 = CUIKOccurrenceSelectedTextColor(v17, a10, v19 | a5);
    goto LABEL_18;
  }
  if (v19)
  {
    v21 = (void *)MEMORY[0x1E4FB1618];
LABEL_5:
    uint64_t v20 = [v21 tertiaryLabelColor];
    goto LABEL_18;
  }
  if (a5)
  {
    uint64_t v20 = CUIKInvitationTitleColor();
  }
  else
  {
    if (!a6)
    {
      if (v17)
      {
        uint64_t v20 = CUIKSecondaryTextColorForCalendarColorForStyle(v17, a10);
      }
      else
      {
        if (a9) {
          CUIKBirthdayMonthCalendarColor();
        }
        else {
        uint64_t v20 = [MEMORY[0x1E4FB1618] colorWithRed:0.0549019608 green:0.380392157 blue:0.725490196 alpha:1.0];
        }
      }
      goto LABEL_18;
    }
    v21 = (void *)MEMORY[0x1E4FB1618];
    if (a7 || (a8 & 1) == 0) {
      goto LABEL_5;
    }
    uint64_t v20 = [MEMORY[0x1E4FB1618] secondaryLabelColor];
  }
LABEL_18:
  v22 = (void *)v20;

  return v22;
}

id CUIKSecondaryTextColorForCalendarColorForStyle(void *a1, uint64_t a2)
{
  id v3 = a1;
  int v4 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F575C8] dark:a2 == 2];
  if ([v4 integerValue] == 1)
  {
    BOOL v5 = a2 == 2;
    id v6 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F575C0] dark:v5];
    id v7 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F575B8] dark:v5];
    uint64_t v8 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F575A8] dark:v5];
    CUIKColorAdjustSaturationBrightnessAlpha(v3, v6, v7, v8);
    id v9 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    uint64_t v21 = 0;
    v22 = &v21;
    uint64_t v23 = 0x3032000000;
    v24 = __Block_byref_object_copy__1;
    v25 = __Block_byref_object_dispose__1;
    id v26 = 0;
    if (a2 == 1)
    {
      int v10 = [MEMORY[0x1E4FB1618] labelColor];
      v18[0] = (void (*)(void, void))MEMORY[0x1E4F143A8];
      v18[1] = (void (*)(void, void))3221225472;
      v18[2] = (void (*)(void, void))__CUIKSecondaryTextColorForCalendarColorForStyle_block_invoke;
      v18[3] = (void (*)(void, void))&unk_1E6369740;
      uint64_t v20 = &v21;
      id v19 = v3;
      CUIKPerformWithResolvedColorForDynamicColor(v10, 1, v18);

      id v9 = (id)v22[5];
      v11 = v19;
    }
    else
    {
      v12 = [MEMORY[0x1E4FB1618] blackColor];
      v14[0] = (void (*)(void, void))MEMORY[0x1E4F143A8];
      v14[1] = (void (*)(void, void))3221225472;
      v14[2] = (void (*)(void, void))__CUIKSecondaryTextColorForCalendarColorForStyle_block_invoke_2;
      v14[3] = (void (*)(void, void))&unk_1E6369768;
      uint64_t v16 = &v21;
      id v15 = v3;
      uint64_t v17 = a2;
      CUIKPerformWithResolvedColorForDynamicColor(v12, a2, v14);

      id v9 = (id)v22[5];
      v11 = v15;
    }

    _Block_object_dispose(&v21, 8);
  }

  return v9;
}

void sub_1BDF0D9E0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void CUIKPerformWithResolvedColorForDynamicColor(void *a1, uint64_t a2, void (**a3)(void, void))
{
  id v6 = (void *)MEMORY[0x1E4FB1E20];
  id v7 = a3;
  id v8 = a1;
  id v10 = [v6 traitCollectionWithUserInterfaceStyle:a2];
  id v9 = [v8 resolvedColorWithTraitCollection:v10];

  ((void (**)(void, void *))a3)[2](v7, v9);
}

void __CUIKSecondaryTextColorForCalendarColorForStyle_block_invoke(uint64_t a1, void *a2)
{
  id v12 = a2;
  id v3 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F575B0] dark:0];
  int v4 = v3;
  if (v3)
  {
    [v3 floatValue];
    double v6 = v5;
  }
  else
  {
    double v6 = 0.25;
  }
  id v7 = *(void **)(a1 + 32);
  id v8 = [v12 colorWithAlphaComponent:v6];
  uint64_t v9 = CUIKBlendColorsSourceOver(v7, v8);
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;
}

uint64_t CUIKRoundToScreenScale(double a1)
{
  if ((double)(int)a1 != a1) {
    return UIRoundToViewScale();
  }
  return result;
}

BOOL CUIKColorIsWhite(void *a1)
{
  double v6 = 0.0;
  double v4 = 0.0;
  double v5 = 0.0;
  uint64_t v3 = 0;
  objc_msgSend(a1, "cuik_getRed:green:blue:alpha:", &v6, &v5, &v4, &v3);
  BOOL v1 = v6 > 0.95;
  if (v5 <= 0.95) {
    BOOL v1 = 0;
  }
  return v4 > 0.95 && v1;
}

id CUIKBlendColorsSourceOver(void *a1, void *a2)
{
  double v12 = 0.0;
  double v13 = 0.0;
  double v10 = 0.0;
  double v11 = 0.0;
  id v3 = a2;
  objc_msgSend(a1, "cuik_getRed:green:blue:alpha:", &v13, &v12, &v11, &v10);
  double v8 = 0.0;
  double v9 = 0.0;
  double v6 = 0.0;
  double v7 = 0.0;
  objc_msgSend(v3, "cuik_getRed:green:blue:alpha:", &v9, &v8, &v7, &v6);

  double v4 = [MEMORY[0x1E4FB1618] colorWithRed:v13 * (1.0 - v6) + v9 * v6 green:(1.0 - v6) * v12 + v8 * v6 blue:(1.0 - v6) * v11 + v7 * v6 alpha:v10];

  return v4;
}

id CUIKColorBarColor(void *a1, uint64_t a2, int a3, int a4, int a5, int a6, int a7)
{
  char v9 = a4;
  double v11 = CUIKBaseColor(a1, a2, a3, a4, a5);
  double v12 = v11;
  if (a6)
  {
    if (!a3 || (a7 & 1) != 0)
    {
      id v13 = [MEMORY[0x1E4FB1618] clearColor];
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  if ((v9 & 1) == 0 && !a7)
  {
LABEL_7:
    id v13 = v11;
    goto LABEL_9;
  }
  id v13 = [MEMORY[0x1E4FB1618] colorWithWhite:0.78 alpha:1.0];
LABEL_9:
  v14 = v13;

  return v14;
}

id CUIKBaseColor(void *a1, uint64_t a2, int a3, int a4, int a5)
{
  id v9 = a1;
  double v10 = v9;
  if (a3) {
    goto LABEL_2;
  }
  if (a4)
  {
    if (CUIKDeclinedEventBaseColor_onceToken != -1) {
      dispatch_once(&CUIKDeclinedEventBaseColor_onceToken, &__block_literal_global_68);
    }
    id v11 = (id)CUIKDeclinedEventBaseColor_sDeclinedEventBaseColor;
    goto LABEL_7;
  }
  if (!a5)
  {
    if (!v9)
    {
      id v11 = [MEMORY[0x1E4FB1618] colorWithRed:0.0549019608 green:0.380392157 blue:0.725490196 alpha:1.0];
      goto LABEL_7;
    }
LABEL_2:
    CUIKAdjustedColorForColor(v9, a2);
    id v11 = (id)objc_claimAutoreleasedReturnValue();
LABEL_7:
    double v12 = v11;
    goto LABEL_8;
  }
  v14 = [MEMORY[0x1E4FB1618] whiteColor];
  double v12 = CUIKAdjustedColorForColor(v14, a2);

LABEL_8:

  return v12;
}

id CUIKAdjustedColorForColor(void *a1, uint64_t a2)
{
  id v3 = a1;
  double v4 = v3;
  if (CUIKColorIsWhite(v3))
  {
    double v4 = [MEMORY[0x1E4FB1618] colorWithWhite:0.8 alpha:1.0];
  }
  if (a2 == 2)
  {
    if (CUIKColorIsBlack(v3))
    {
      uint64_t v5 = [MEMORY[0x1E4FB1618] colorWithWhite:0.25 alpha:1.0];

      double v4 = (void *)v5;
    }
    uint64_t v6 = CUIKAdjustColorLuminanceIfNeeded(v4);

    double v4 = (void *)v6;
  }

  return v4;
}

double CUIKOccurrenceLeadingIconAlphaScale(uint64_t a1)
{
  double result = 0.85;
  if (a1 == 2) {
    return 1.0;
  }
  return result;
}

void sub_1BDF0EB8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id CUIKCalendarWithoutRegisteringForInvalidation()
{
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  v0 = _CUIKCalendar();
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v0;
}

id _CUIKCalendar()
{
  if (_CUIKCalendarCache_onceToken != -1) {
    dispatch_once(&_CUIKCalendarCache_onceToken, &__block_literal_global_291);
  }
  id v0 = (id)_CUIKCalendarCache_calendarCache;
  BOOL v1 = [v0 objectForKeyedSubscript:@"com.apple.mobilecal.calendarGeneration"];
  id v2 = v1;
  if (v1)
  {
    unint64_t v3 = [v1 unsignedIntegerValue];
    uint64_t v4 = __calendarGeneration;
    if (v3 >= __calendarGeneration) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = __calendarGeneration;
  }
  uint64_t v5 = [NSNumber numberWithUnsignedInteger:v4];
  [v0 setObject:v5 forKeyedSubscript:@"com.apple.mobilecal.calendarGeneration"];

  id v6 = objc_alloc(MEMORY[0x1E4F1C9A8]);
  double v7 = (void *)[v6 initWithCalendarIdentifier:*MEMORY[0x1E4F1C318]];
  double v8 = [MEMORY[0x1E4F1CA20] currentLocale];
  [v7 setLocale:v8];

  id v9 = [MEMORY[0x1E4F1CAF0] calendarTimeZone];
  [v7 setTimeZone:v9];

  if ((__isWeekStartValid & 1) == 0) {
    _CUIKDetermineWeekStart();
  }
  [v7 setFirstWeekday:__weekStart];
  [v0 setObject:v7 forKeyedSubscript:@"com.apple.mobilecal.calendar"];

LABEL_10:
  double v10 = [v0 objectForKeyedSubscript:@"com.apple.mobilecal.calendar"];

  return v10;
}

double CUIKRoundRectToScreenScale(double a1, double a2, double a3, double a4)
{
  double v7 = a1;
  if (a1 != (double)(int)a1)
  {
    UIRoundToViewScale();
    double v7 = v8;
  }
  if (a2 != (double)(int)a2) {
    UIRoundToViewScale();
  }
  if (a3 != (double)(int)a3) {
    UIRoundToViewScale();
  }
  if (a4 != (double)(int)a4) {
    UIRoundToViewScale();
  }
  return v7;
}

id CUIKCalendar()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }

  return CUIKCalendarWithoutRegisteringForInvalidation();
}

void __CUIKTextColorForCalendarColorForStyle_block_invoke(uint64_t a1, void *a2)
{
  id v12 = a2;
  unint64_t v3 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F575F8] dark:0];
  uint64_t v4 = v3;
  if (v3)
  {
    [v3 floatValue];
    double v6 = v5;
  }
  else
  {
    double v6 = 0.5;
  }
  double v7 = *(void **)(a1 + 32);
  double v8 = [v12 colorWithAlphaComponent:v6];
  uint64_t v9 = CUIKBlendColorsSourceOver(v7, v8);
  uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;
}

void __CUIKBackgroundColorForCalendarColorWithOpaqueForStyle_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = (void *)MEMORY[0x1E4F57780];
  uint64_t v5 = *MEMORY[0x1E4F57590];
  id v6 = a2;
  [v4 getDebugColorNumberForPreference:v5 dark:v3 == 2];
  id v19 = (id)objc_claimAutoreleasedReturnValue();
  double v7 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F57598] dark:v3 == 2];
  if (v19)
  {
    [v19 floatValue];
    double v9 = v8;
  }
  else
  {
    double v9 = dbl_1BE0792F0[v3 == 2];
  }
  double v10 = dbl_1BE079300[v3 == 2];
  if (*(unsigned char *)(a1 + 56)) {
    double v10 = 1.0;
  }
  if (v7)
  {
    objc_msgSend(v7, "floatValue", v10);
    double v10 = v11;
  }
  double v12 = 0.8;
  if (v3 != 2) {
    double v12 = v10;
  }
  if (*(unsigned char *)(a1 + 57)) {
    double v13 = v12;
  }
  else {
    double v13 = v10;
  }
  v14 = objc_msgSend(*(id *)(a1 + 32), "colorWithAlphaComponent:", v9, v12);
  id v15 = CUIKBlendColorsSourceOver(v6, v14);

  uint64_t v16 = [v15 colorWithAlphaComponent:v13];
  uint64_t v17 = *(void *)(*(void *)(a1 + 40) + 8);
  v18 = *(void **)(v17 + 40);
  *(void *)(v17 + 40) = v16;
}

void sub_1BDF10634(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL CUIKShow24Hours()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  int v0 = __Show24Hours;
  if (!__Show24Hours)
  {
    _CUIKDetermineShortTimeParameters();
    int v0 = __Show24Hours;
  }
  BOOL v1 = v0 == 2;
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  return v1;
}

id CUIKOccurrenceTextColor(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, char a8, char a9, uint64_t a10)
{
  id v17 = a1;
  v18 = v17;
  int v19 = a2 | a3;
  if (a4)
  {
    uint64_t v20 = CUIKOccurrenceSelectedTextColor(v17, a10, v19 | a5);
    goto LABEL_18;
  }
  if (v19)
  {
    uint64_t v21 = (void *)MEMORY[0x1E4FB1618];
LABEL_5:
    uint64_t v20 = [v21 tertiaryLabelColor];
    goto LABEL_18;
  }
  if (a5)
  {
    uint64_t v20 = CUIKInvitationTitleColor();
  }
  else
  {
    if (!a6)
    {
      if (v17)
      {
        uint64_t v20 = CUIKTextColorForCalendarColorForStyle(v17, a10);
      }
      else
      {
        if (a9) {
          CUIKBirthdayMonthCalendarColor();
        }
        else {
        uint64_t v20 = [MEMORY[0x1E4FB1618] colorWithRed:0.0549019608 green:0.380392157 blue:0.725490196 alpha:1.0];
        }
      }
      goto LABEL_18;
    }
    uint64_t v21 = (void *)MEMORY[0x1E4FB1618];
    if (a7 || (a8 & 1) == 0) {
      goto LABEL_5;
    }
    uint64_t v20 = [MEMORY[0x1E4FB1618] labelColor];
  }
LABEL_18:
  v22 = (void *)v20;

  return v22;
}

id CUIKTextColorForCalendarColorForStyle(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F57610] dark:a2 == 2];
  if ([v4 intValue] == 1)
  {
    BOOL v5 = a2 == 2;
    id v6 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F57608] dark:v5];
    double v7 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F57600] dark:v5];
    float v8 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F575F0] dark:v5];
    CUIKColorAdjustSaturationBrightnessAlpha(v3, v6, v7, v8);
    id v9 = (id)objc_claimAutoreleasedReturnValue();
  }
  else if (a2 == 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = &v15;
    uint64_t v17 = 0x3032000000;
    v18 = __Block_byref_object_copy__1;
    int v19 = __Block_byref_object_dispose__1;
    id v20 = 0;
    double v10 = [MEMORY[0x1E4FB1618] labelColor];
    v12[0] = (void (*)(void, void))MEMORY[0x1E4F143A8];
    v12[1] = (void (*)(void, void))3221225472;
    v12[2] = (void (*)(void, void))__CUIKTextColorForCalendarColorForStyle_block_invoke;
    v12[3] = (void (*)(void, void))&unk_1E6369740;
    v14 = &v15;
    id v13 = v3;
    CUIKPerformWithResolvedColorForDynamicColor(v10, 1, v12);

    id v9 = (id)v16[5];
    _Block_object_dispose(&v15, 8);
  }
  else
  {
    CUIKAdjustedColorForColor(v3, a2);
    id v9 = (id)objc_claimAutoreleasedReturnValue();
  }

  return v9;
}

void sub_1BDF111EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double CUIKScaleFactor()
{
  int v0 = [MEMORY[0x1E4FB1BA8] mainScreen];
  BOOL v1 = [v0 traitCollection];
  [v1 displayScale];
  double v3 = v2;

  return v3;
}

void _CUIKDetermineShortTimeParameters()
{
  CFLocaleRef v0 = CFLocaleCopyCurrent();
  if (v0)
  {
    CFLocaleRef v1 = v0;
    double v2 = CFDateFormatterCreate(0, v0, kCFDateFormatterNoStyle, kCFDateFormatterFullStyle);
    if (!v2)
    {
LABEL_45:
      CFRelease(v1);
      return;
    }
    double v3 = v2;
    CFStringRef Format = CFDateFormatterGetFormat(v2);
    CFAllocatorRef v5 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFDateFormatterRef v6 = CFDateFormatterCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v1, kCFDateFormatterNoStyle, kCFDateFormatterShortStyle);
    if (v6)
    {
      double v7 = v6;
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      StringWithAbsoluteTime = (__CFString *)CFDateFormatterCreateStringWithAbsoluteTime(v5, v7, Current);
      double v10 = StringWithAbsoluteTime;
      if (StringWithAbsoluteTime
        && (float v11 = malloc_type_malloc(2 * [(__CFString *)StringWithAbsoluteTime length], 0x1000040BDFB0063uLL)) != 0)
      {
        double v12 = v11;
        [(__CFString *)v10 getCharacters:v11];
        ubidi_openSized();
        ubidi_setPara();
        int v13 = ubidi_getParaLevel() & 1;
        ubidi_close();
        free(v12);
      }
      else
      {
        int v13 = 0;
      }
      CFRelease(v7);
    }
    else
    {
      int v13 = 0;
    }
    CFRange v14 = CFStringFind(Format, @"a", 0);
    CFIndex location = v14.location;
    if (v14.location == -1)
    {
      __DesignatorsBeforeHour = 1;
      __SpaceAroundDesignator = 1;
    }
    CFIndex v16 = CFStringFind(Format, @"H", 0).location;
    if (v16 == -1)
    {
      CFIndex v19 = CFStringFind(Format, @"h", 0).location;
      if (v19 != -1 || (CFIndex v19 = CFStringFind(Format, @"K", 0).location, v19 != -1))
      {
        __Show24Hours = 1;
        if (v14.location >= v19 || v14.location == -1) {
          int v18 = 1;
        }
        else {
          int v18 = 2;
        }
LABEL_29:
        __DesignatorsBeforeHour = v18;
        if (v14.location == -1)
        {
LABEL_44:
          CFRelease(v3);
          goto LABEL_45;
        }
        __SpaceAroundDesignator = 1;
        CFIndex Length = CFStringGetLength(Format);
        if (v14.location && __DesignatorsBeforeHour == 1)
        {
          v22.CFIndex location = 0;
          CFStringCompareFlags v23 = 12;
        }
        else
        {
          if (__DesignatorsBeforeHour != 2
            || (v22.CFIndex location = v14.location + v14.length, v14.location + v14.length == -1)
            || Length <= v22.location)
          {
LABEL_39:
            if (v13)
            {
              if (__DesignatorsBeforeHour == 2) {
                int v24 = 1;
              }
              else {
                int v24 = 2;
              }
              __DesignatorsBeforeHour = v24;
            }
            goto LABEL_44;
          }
          CFIndex location = Length - v22.location;
          CFStringCompareFlags v23 = 8;
        }
        v22.length = location;
        if (CFStringFindWithOptions(Format, @" ", v22, v23, 0)) {
          __SpaceAroundDesignator = 2;
        }
        goto LABEL_39;
      }
      CFIndex v16 = CFStringFind(Format, @"k", 0).location;
      if (v16 == -1)
      {
        int v18 = 1;
        __Show24Hours = 1;
        goto LABEL_29;
      }
    }
    __Show24Hours = 2;
    if (v14.location >= v16 || v14.location == -1) {
      int v18 = 1;
    }
    else {
      int v18 = 2;
    }
    goto LABEL_29;
  }
}

id CUIKStringForHour(unsigned int a1)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  if (!__HourSymbols)
  {
    int v2 = __Show24Hours;
    if (!__Show24Hours)
    {
      _CUIKDetermineShortTimeParameters();
      int v2 = __Show24Hours;
    }
    if (v2 == 2)
    {
      _initStandardTimeFormatter();
      double v3 = (__CFDateFormatter *)__standardTimeFormatter;
      CFRetain((CFTypeRef)__standardTimeFormatter);
      if (!v3) {
        goto LABEL_19;
      }
      goto LABEL_14;
    }
    CPDateFormatStringForFormatType();
    uint64_t v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
    if (v4)
    {
      CFAllocatorRef v5 = (__CFDateFormatter *)_SharedDateFormatter();
      double v3 = v5;
      if (v5)
      {
        CFRetain(v5);
        CFDateFormatterSetFormat(v3, v4);
      }
    }
    else
    {
      double v3 = 0;
    }

    if (v3)
    {
LABEL_14:
      CFDateFormatterRef v6 = (const void *)CalTimeZoneCopyCFTimeZone();
      CFStringRef v7 = (const __CFString *)*MEMORY[0x1E4F1D0F8];
      CFDateFormatterSetProperty(v3, (CFStringRef)*MEMORY[0x1E4F1D0F8], v6);
      uint64_t v8 = 24;
      id v9 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:24];
      uint64_t v10 = 0x50B000007D7;
      do
      {
        CalGregorianDateGetAbsoluteTimeWithFallbackToDefaultTimeZone();
        StringWithAbsoluteTime = (__CFString *)CFDateFormatterCreateStringWithAbsoluteTime(0, v3, v11);
        [v9 addObject:StringWithAbsoluteTime];

        v10 += 0x1000000000000;
        --v8;
      }
      while (v8);
      if (v6) {
        CFRelease(v6);
      }
      int v13 = (const void *)CalCopySystemTimeZone();
      CFDateFormatterSetProperty(v3, v7, v13);
      CFRelease(v13);
      CFRelease(v3);
      CFRange v14 = (void *)__HourSymbols;
      __HourSymbols = (uint64_t)v9;
    }
  }
LABEL_19:
  if (a1 <= 0x17) {
    uint64_t v15 = a1;
  }
  else {
    uint64_t v15 = a1 - 24;
  }
  CFIndex v16 = [(id)__HourSymbols objectAtIndex:v15];
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v16;
}

void sub_1BDF14AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a46, 8);
  _Block_object_dispose(&a52, 8);
  _Block_object_dispose(&a67, 8);
  _Block_object_dispose(&a71, 8);
  _Block_object_dispose(&STACK[0x220], 8);
  _Unwind_Resume(a1);
}

void sub_1BDF15160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDF15228(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1BDF15828(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDF15A54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDF15DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
}

uint64_t CUIKCompareEKEvents(void *a1, void *a2, uint64_t a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v5;
  id v8 = v6;
  LODWORD(v6) = [v7 isAllDay];
  if (v6 == [v8 isAllDay])
  {
    if (!a3
      || ![v7 isAllDay]
      || (([v7 duration],
           unint64_t v11 = (unint64_t)v10,
           [v8 duration],
           BOOL v13 = v11 == (unint64_t)v12,
           v11 > (unint64_t)v12)
        ? (uint64_t v9 = -1)
        : (uint64_t v9 = 1),
          v13))
    {
      uint64_t v9 = [v7 compareStartDateIncludingTravelWithEvent:v8];
      if (!v9)
      {
        CFRange v14 = [v7 calendar];
        uint64_t v15 = [v8 calendar];
        uint64_t v9 = CUIKCompareEKCalendars(v14, v15);

        if (!v9)
        {
          CFIndex v16 = [v7 title];
          uint64_t v17 = [v8 title];
          uint64_t v9 = [v16 compare:v17 options:129];
        }
      }
    }
  }
  else if ([v7 isAllDay])
  {
    uint64_t v9 = -1;
  }
  else
  {
    uint64_t v9 = 1;
  }

  return v9;
}

CFComparisonResult __CompareCachedDays(void *a1, void *a2)
{
  double v3 = CUIKOccurrenceCacheDayKey;
  id v4 = a2;
  CFDateRef v5 = [a1 objectForKey:v3];
  CFDateRef v6 = [v4 objectForKey:CUIKOccurrenceCacheDayKey];

  CFComparisonResult v7 = CFDateCompare(v5, v6, 0);
  return v7;
}

void sub_1BDF17CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void CUIKMultiwindowAssert(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10 = a2;
  if (_shouldAssertOnUnknownWindow_onceToken != -1) {
    dispatch_once(&_shouldAssertOnUnknownWindow_onceToken, &__block_literal_global_15);
  }
  if (_shouldAssertOnUnknownWindow_shouldAssert)
  {
    unint64_t v11 = (void *)[[NSString alloc] initWithFormat:v10 arguments:&a9];
    if ((a1 & 1) == 0) {
      [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3C8], @"CUIKDeviceCapabilities assertion failed: %@", v11 format];
    }
  }
}

double CUIKCeilToScreenScale(double a1)
{
  uint64_t v2 = CUIKCeilToScreenScale___scale;
  if (*(double *)&CUIKCeilToScreenScale___scale == -1.0)
  {
    *(double *)&uint64_t v2 = CUIKScaleFactor();
    CUIKCeilToScreenScale___scale = v2;
  }
  if (a1 != 0.0) {
    return ceil(*(double *)&v2 * a1) / *(double *)&v2;
  }
  return a1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

void __CUIKSymbolicColorWithName_block_invoke()
{
  v24[7] = *MEMORY[0x1E4F143B8];
  v23[0] = *MEMORY[0x1E4FB8310];
  CFLocaleRef v0 = (void *)MEMORY[0x1E4FB1618];
  CFRange v22 = CUIKBundle();
  uint64_t v21 = [v0 colorNamed:@"CalendarPurple" inBundle:v22 compatibleWithTraitCollection:0];
  v24[0] = v21;
  v23[1] = *MEMORY[0x1E4FB8300];
  uint64_t v1 = (void *)MEMORY[0x1E4FB1618];
  id v20 = CUIKBundle();
  CFIndex v19 = [v1 colorNamed:@"CalendarGreen" inBundle:v20 compatibleWithTraitCollection:0];
  v24[1] = v19;
  v23[2] = *MEMORY[0x1E4FB82E8];
  uint64_t v2 = (void *)MEMORY[0x1E4FB1618];
  double v3 = CUIKBundle();
  id v4 = [v2 colorNamed:@"CalendarBlue" inBundle:v3 compatibleWithTraitCollection:0];
  v24[2] = v4;
  v23[3] = *MEMORY[0x1E4FB8320];
  CFDateRef v5 = (void *)MEMORY[0x1E4FB1618];
  CFDateRef v6 = CUIKBundle();
  CFComparisonResult v7 = [v5 colorNamed:@"CalendarYellow" inBundle:v6 compatibleWithTraitCollection:0];
  v24[3] = v7;
  v23[4] = *MEMORY[0x1E4FB82F0];
  id v8 = (void *)MEMORY[0x1E4FB1618];
  uint64_t v9 = CUIKBundle();
  id v10 = [v8 colorNamed:@"CalendarBrown" inBundle:v9 compatibleWithTraitCollection:0];
  v24[4] = v10;
  v23[5] = *MEMORY[0x1E4FB8318];
  unint64_t v11 = (void *)MEMORY[0x1E4FB1618];
  double v12 = CUIKBundle();
  BOOL v13 = [v11 colorNamed:@"CalendarRed" inBundle:v12 compatibleWithTraitCollection:0];
  v24[5] = v13;
  v23[6] = *MEMORY[0x1E4FB8308];
  CFRange v14 = (void *)MEMORY[0x1E4FB1618];
  uint64_t v15 = CUIKBundle();
  CFIndex v16 = [v14 colorNamed:@"CalendarOrange" inBundle:v15 compatibleWithTraitCollection:0];
  v24[6] = v16;
  uint64_t v17 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v24 forKeys:v23 count:7];
  int v18 = (void *)CUIKSymbolicColorWithName_kColors;
  CUIKSymbolicColorWithName_kColors = v17;
}

id CUIKBackgroundColorForCalendarColorWithOpaqueForStyle(void *a1, char a2, uint64_t a3, char a4)
{
  id v7 = a1;
  uint64_t v20 = 0;
  uint64_t v21 = &v20;
  uint64_t v22 = 0x3032000000;
  CFStringCompareFlags v23 = __Block_byref_object_copy__1;
  int v24 = __Block_byref_object_dispose__1;
  id v25 = 0;
  id v8 = (void *)MEMORY[0x1E4FB1618];
  uint64_t v9 = CUIKBundle();
  id v10 = [v8 colorNamed:@"backgroundColorForMixingWithOccurrenceColors" inBundle:v9 compatibleWithTraitCollection:0];

  v14[0] = (void (*)(void, void))MEMORY[0x1E4F143A8];
  v14[1] = (void (*)(void, void))3221225472;
  v14[2] = (void (*)(void, void))__CUIKBackgroundColorForCalendarColorWithOpaqueForStyle_block_invoke;
  v14[3] = (void (*)(void, void))&unk_1E6369790;
  char v18 = a2;
  char v19 = a4;
  CFIndex v16 = &v20;
  uint64_t v17 = a3;
  id v11 = v7;
  id v15 = v11;
  CUIKPerformWithResolvedColorForDynamicColor(v10, a3, v14);
  id v12 = (id)v21[5];

  _Block_object_dispose(&v20, 8);

  return v12;
}

void sub_1BDF19A50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDF19C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t CUIKEventDisplaysAsTentative(void *a1)
{
  id v1 = a1;
  if ([v1 isProposedTimeEvent])
  {
    uint64_t v2 = 1;
  }
  else
  {
    double v3 = [v1 calendar];
    if ([v3 isSuggestedEventCalendar])
    {
      uint64_t v2 = 1;
    }
    else if ([v1 isSelfOrganizedInvitation])
    {
      uint64_t v2 = 0;
    }
    else
    {
      uint64_t v2 = CUIKEventCommonPartStatDisplayTestsAndSpecificTest(v1, &__block_literal_global_9_0);
    }
  }
  return v2;
}

void sub_1BDF1A1CC(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

id CUIKNowComponents()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFLocaleRef v0 = _CUIKNowComponents();
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v0;
}

id CUIKTodayComponents()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  _CUIKComputeTodayCachesIfNeeded();
  CFLocaleRef v0 = (void *)[(id)__TodayComponents copy];
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v0;
}

id CUIKNowDate()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFLocaleRef v0 = _CUIKNowDate();
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v0;
}

id _CUIKNowDate()
{
  CFLocaleRef v0 = _CUIKNowComponents();
  uint64_t v1 = _CUIKCalendar();
  uint64_t v2 = [v1 dateFromComponents:v0];

  return v2;
}

id _CUIKNowComponents()
{
  CFLocaleRef v0 = _CUIKCalendar();
  uint64_t v1 = _CUIKNowComponentsInCalendar(v0);

  return v1;
}

id _CUIKNowComponentsInCalendar(void *a1)
{
  id v1 = a1;
  _CUIKComputeTodayCachesIfNeeded();
  uint64_t v2 = (void *)[(id)__TodayComponents copy];
  double v3 = (void *)[v2 copy];

  if ([(id)*MEMORY[0x1E4FB2608] launchedToTest])
  {
    [v3 setHour:11];
    [v3 setMinute:15];
    [v3 setSecond:0];
  }
  else
  {
    id v4 = [MEMORY[0x1E4F1C9C8] CalSimulatedDateForNow];
    CFDateRef v5 = [v1 components:224 fromDate:v4];

    objc_msgSend(v3, "setHour:", objc_msgSend(v5, "hour"));
    objc_msgSend(v3, "setMinute:", objc_msgSend(v5, "minute"));
    objc_msgSend(v3, "setSecond:", objc_msgSend(v5, "second"));
  }

  return v3;
}

void _CUIKComputeTodayCachesIfNeeded()
{
  CFLocaleRef v0 = [MEMORY[0x1E4F1C9C8] CalSimulatedDateForNow];
  id v1 = (void *)__TodayComponents;
  if (__TodayComponents) {
    BOOL v2 = _CUIKComputeTodayCachesIfNeeded_s_lastComputeTime == 0;
  }
  else {
    BOOL v2 = 1;
  }
  id obj = v0;
  if (!v2)
  {
    objc_msgSend(v0, "timeIntervalSinceDate:");
    if (v3 < 300.0) {
      goto LABEL_12;
    }
    id v1 = (void *)__TodayComponents;
  }
  __TodayComponents = 0;

  id v4 = (void *)__TodayDate;
  __TodayDate = 0;

  objc_storeStrong((id *)&_CUIKComputeTodayCachesIfNeeded_s_lastComputeTime, obj);
  CFDateRef v5 = _CUIKCalendar();
  CFDateRef v6 = [MEMORY[0x1E4F1C9C8] CalSimulatedDateForNow];
  if ([(id)*MEMORY[0x1E4FB2608] launchedToTest])
  {
    id v7 = [v5 components:30 fromDate:v6];
    [v7 setMonth:5];
    [v7 setDay:1];
    uint64_t v8 = [v5 dateFromComponents:v7];

    CFDateRef v6 = (void *)v8;
  }
  if (!__TodayComponents)
  {
    uint64_t v9 = [v5 components:30 fromDate:v6];
    id v10 = (void *)__TodayComponents;
    __TodayComponents = v9;

    uint64_t v11 = [v5 dateFromComponents:__TodayComponents];
    id v12 = (void *)__TodayDate;
    __TodayDate = v11;
  }
LABEL_12:
}

id CUIKStringForMonthNumber(int a1)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  BOOL v2 = (__CFDateFormatter *)_SharedDateFormatter();
  CFLocaleRef Locale = CFDateFormatterGetLocale(v2);
  id v4 = MEMORY[0x1C1889990](Locale);
  int v5 = [&unk_1F1892228 containsObject:v4];
  CFDateRef v6 = (void *)__MonthNames;
  if (!__MonthNames)
  {
    if (v5) {
      CFStringRef v7 = (const __CFString *)*MEMORY[0x1E4F1D0B0];
    }
    else {
      CFStringRef v7 = (const __CFString *)*MEMORY[0x1E4F1D0E0];
    }
    CFTypeRef v8 = CFDateFormatterCopyProperty(v2, v7);
    uint64_t v9 = (void *)__MonthNames;
    __MonthNames = (uint64_t)v8;

    CFDateRef v6 = (void *)__MonthNames;
  }
  if ([v6 count] >= (unint64_t)a1)
  {
    id v10 = [(id)__MonthNames objectAtIndex:a1 - 1];
  }
  else
  {
    id v10 = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v10;
}

id CUIKStringForYear(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  double v3 = (__CFDateFormatter *)_SharedDateFormatter();
  CFStringRef v4 = (const __CFString *)CPDateFormatStringForFormatType();
  CFDateFormatterSetFormat(v3, v4);
  id v5 = (id)CalCopyTimeZone();
  CFDateRef v6 = _stringForFormatterInTimeZone(v2, v3, v5, 0);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v6;
}

id CUIKLongEmDashDayStringForDate(void *a1, char a2)
{
  id v3 = a1;
  BOOL v4 = CUIKIsWeekdayNameFirst();
  id v5 = CUIKCalendar();
  CFDateRef v6 = [v5 components:512 fromDate:v3];

  CFStringRef v7 = CUIKStringForDayOfWeek([v6 weekday] - 1);
  if (a2) {
    CUIKStringMonthDayYearWithComma(v3);
  }
  else {
  CFTypeRef v8 = CUIKAbbreviatedStringMonthAndDay(v3);
  }

  uint64_t v9 = NSString;
  id v10 = CUIKBundle();
  uint64_t v11 = v10;
  if (v4)
  {
    id v12 = [v10 localizedStringForKey:@"DAY_OF_WEEK_DASH_DAY_STRING_FORMAT" value:@"%@ — %@" table:0];
    objc_msgSend(v9, "stringWithFormat:", v12, v7, v8);
  }
  else
  {
    id v12 = [v10 localizedStringForKey:@"DAY_STRING_DASH_DAY_OF_WEEK_FORMAT" value:@"%@ — %@" table:0];
    objc_msgSend(v9, "stringWithFormat:", v12, v8, v7);
  BOOL v13 = };

  return v13;
}

id CUIKStringMonthDayYearWithComma(void *a1)
{
  id v1 = a1;
  _initDateFormatterWithCommaAndYear();
  _initLongDateFormatterWithCommaAndYear();
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v2 = 0;
  uint64_t v3 = __dateFormatterWithCommaAndYear;
  if (__dateFormatterWithCommaAndYear && __longDateFormatterWithCommaAndYear)
  {
    BOOL v4 = CFDateFormatterGetFormat((CFDateFormatterRef)__dateFormatterWithCommaAndYear);
    if ([v4 rangeOfString:@"[a-zA-Z]+\\U0000200F\\/[a-zA-Z]+\\U0000200F\\/[a-zA-Z]+" options:1024] == 0x7FFFFFFFFFFFFFFFLL)id v5 = (__CFDateFormatter *)v3; {
    else
    }
      id v5 = (__CFDateFormatter *)__longDateFormatterWithCommaAndYear;
    id v6 = (id)CalCopyTimeZone();
    id v2 = _stringForFormatterInTimeZone(v1, v5, v6, 0);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v2;
}

__CFString *_stringForFormatterInTimeZone(void *a1, __CFDateFormatter *a2, const void *a3, unint64_t a4)
{
  CFDateRef v7 = a1;
  if (!__dateFormattersForTimeZones)
  {
    uint64_t v8 = [MEMORY[0x1E4F1CA60] dictionary];
    uint64_t v9 = (void *)__dateFormattersForTimeZones;
    __dateFormattersForTimeZones = v8;
  }
  CFStringRef Format = (__CFString *)CFDateFormatterGetFormat(a2);
  uint64_t v11 = [(__CFString *)Format stringByAppendingString:MEMORY[0x1C1889AE0](a3)];
  id v12 = v11;
  if (a4)
  {
    uint64_t v13 = objc_msgSend(v11, "stringByAppendingFormat:", @"%ld", a4);

    id v12 = (void *)v13;
  }
  CFRange v14 = objc_msgSend(NSNumber, "numberWithUnsignedInteger:", objc_msgSend(v12, "hash"));
  id v15 = (__CFDateFormatter *)[(id)__dateFormattersForTimeZones objectForKey:v14];
  if (!v15)
  {
    CFLocaleRef v16 = CFLocaleCopyCurrent();
    id v15 = CFDateFormatterCreate(0, v16, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
    CFRelease(v16);
    if (v15)
    {
      CFDateFormatterSetProperty(v15, (CFStringRef)*MEMORY[0x1E4F1D0F8], a3);
      CFStringRef v17 = CFDateFormatterGetFormat(a2);
      CFDateFormatterSetFormat(v15, v17);
      if (a4)
      {
        if (a4 > 5) {
          uint64_t v18 = 256;
        }
        else {
          uint64_t v18 = dword_1BE0794E8[a4 - 1];
        }
        CFDateFormatterSetProperty(v15, @"kCFDateFormatterFormattingContextKey", (CFTypeRef)[NSNumber numberWithInt:v18]);
      }
      [(id)__dateFormattersForTimeZones setObject:v15 forKey:v14];
      CFRelease(v15);
    }
  }
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, v15, v7);

  return StringWithDate;
}

void _initLongDateFormatterWithCommaAndYear()
{
  if (!__longDateFormatterWithCommaAndYear)
  {
    CFLocaleRef v0 = CFLocaleCopyCurrent();
    id v1 = CFDateFormatterCreate(0, v0, kCFDateFormatterLongStyle, kCFDateFormatterNoStyle);
    __longDateFormatterWithCommaAndYear = (uint64_t)v1;
    CFStringRef v2 = (const __CFString *)*MEMORY[0x1E4F1D0F8];
    id v3 = (id)CalCopyTimeZone();
    CFDateFormatterSetProperty(v1, v2, v3);
    CFRelease(v0);
  }
}

void _initDateFormatterWithCommaAndYear()
{
  if (!__dateFormatterWithCommaAndYear)
  {
    CFLocaleRef v0 = CFLocaleCopyCurrent();
    __dateFormatterWithCommaAndYear = (uint64_t)CFDateFormatterCreate(0, v0, kCFDateFormatterMediumStyle, kCFDateFormatterNoStyle);
    CFRelease(v0);
  }
}

id CUIKStringForDayOfWeek(unsigned int a1)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFStringRef v2 = (__CFDateFormatter *)_SharedDateFormatter();
  CFDateFormatterSetProperty(v2, @"kCFDateFormatterFormattingContextKey", (CFTypeRef)[NSNumber numberWithInt:260]);
  id v3 = (void *)CFDateFormatterCopyProperty(v2, (CFDateFormatterKey)*MEMORY[0x1E4F1D0F0]);
  if ([v3 count] <= (unint64_t)a1)
  {
    BOOL v4 = 0;
  }
  else
  {
    BOOL v4 = [v3 objectAtIndex:a1];
  }
  CFDateFormatterSetProperty(v2, @"kCFDateFormatterFormattingContextKey", (CFTypeRef)[NSNumber numberWithInt:256]);
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v4;
}

uint64_t _SharedDateFormatter()
{
  uint64_t result = __formatter;
  if (!__formatter)
  {
    _CUIKDetermineWeekStart();
    CFLocaleRef v1 = CFLocaleCopyCurrent();
    CFStringRef v2 = CFDateFormatterCreate(0, v1, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
    __formatter = (uint64_t)v2;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    CFStringRef StringWithAbsoluteTime = CFDateFormatterCreateStringWithAbsoluteTime(0, v2, Current);
    if (StringWithAbsoluteTime) {
      CFRelease(StringWithAbsoluteTime);
    }
    CFRelease(v1);
    return __formatter;
  }
  return result;
}

BOOL CUIKIsWeekdayNameFirst()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  if (!__IsWeekdayNameFirst)
  {
    CFLocaleRef v0 = CFLocaleCopyCurrent();
    if (v0)
    {
      CFLocaleRef v1 = v0;
      CFStringRef DateFormatFromTemplate = CFDateFormatterCreateDateFormatFromTemplate(0, @"EEEEMMMdy", 0, v0);
      if (DateFormatFromTemplate)
      {
        CFStringRef v3 = DateFormatFromTemplate;
        if (CFStringHasPrefix(DateFormatFromTemplate, @"E"))
        {
          int v4 = 2;
        }
        else
        {
          CFStringHasSuffix(v3, @"E");
          int v4 = 1;
        }
        __IsWeekdayNameFirst = v4;
        CFRelease(v3);
      }
      CFRelease(v1);
    }
  }
  BOOL v5 = __IsWeekdayNameFirst != 1;
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  return v5;
}

void sub_1BDF1D88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id CUIKTodayDate()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFLocaleRef v0 = _CUIKTodayDate();
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v0;
}

id _CUIKTodayDate()
{
  _CUIKComputeTodayCachesIfNeeded();
  id v0 = (id)__TodayDate;

  return v0;
}

void sub_1BDF1E1CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL CUIKDayOfWeekIsWeekend(int a1)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  _CUIKFindWeekendsIfNeeded();
  BOOL v3 = __weekendDays == a1 || HIDWORD(__weekendDays) == a1;
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  return v3;
}

void _CUIKFindWeekendsIfNeeded()
{
  if ((__areWeekendDaysValid & 1) == 0)
  {
    id v0 = +[CUIKPreferences sharedPreferences];
    int v1 = [v0 overrideLocaleWeekends];

    if (v1)
    {
      __weekendDays = 6;
    }
    else
    {
      CFStringRef v2 = _CUIKCalendar();
      BOOL v3 = [MEMORY[0x1E4F1C9C8] date];
      uint64_t v4 = 0;
      uint64_t v5 = 1;
      do
      {
        if (v5 == 8) {
          break;
        }
        id v6 = objc_alloc_init(MEMORY[0x1E4F1C9D8]);
        [v6 setWeekday:v5];
        CFDateRef v7 = [v2 nextDateAfterDate:v3 matchingComponents:v6 options:1024];
        if ([v2 isDateInWeekend:v7]) {
          *((_DWORD *)&__weekendDays + v4++) = v5 - 1;
        }

        ++v5;
      }
      while (v4 < 2);
    }
    __areWeekendDaysValid = 1;
  }
}

id CUIKGetOverlayCalendar()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  if (_CUIKOverlayCalendarCache_onceToken != -1) {
    dispatch_once(&_CUIKOverlayCalendarCache_onceToken, &__block_literal_global_22);
  }
  id v0 = (id)_CUIKOverlayCalendarCache_overlayCalendarCache;
  int v1 = [v0 objectForKeyedSubscript:@"com.apple.mobilecal.overlayCalendarGeneration"];
  CFStringRef v2 = v1;
  if (!v1)
  {
    uint64_t v4 = __overlayCalendarGeneration;
    goto LABEL_9;
  }
  unint64_t v3 = [v1 unsignedIntegerValue];
  uint64_t v4 = __overlayCalendarGeneration;
  if (v3 < __overlayCalendarGeneration)
  {
LABEL_9:
    uint64_t v5 = [NSNumber numberWithUnsignedInteger:v4];
    [v0 setObject:v5 forKeyedSubscript:@"com.apple.mobilecal.overlayCalendarGeneration"];

    id v6 = +[CUIKPreferences sharedPreferences];
    CFDateRef v7 = [v6 overlayCalendarID];
    uint64_t v8 = [MEMORY[0x1E4F1CAF0] calendarTimeZone];
    uint64_t v9 = +[CUIKOverlayCalendar overlayCalendarForCalendarIdentifier:v7 timezone:v8];

    if (v9) {
      [v0 setObject:v9 forKeyedSubscript:@"com.apple.com.mobilecal.overlayCalendar"];
    }
    else {
      [v0 removeObjectForKey:@"com.apple.com.mobilecal.overlayCalendar"];
    }
  }
  id v10 = [v0 objectForKeyedSubscript:@"com.apple.com.mobilecal.overlayCalendar"];

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v10;
}

void ___shouldAssertOnUnknownWindow_block_invoke()
{
  id v0 = +[CUIKPreferences sharedPreferences];
  _shouldAssertOnUnknownWindow_shouldAssert = [v0 enableMultiwindowAsserts];
}

void _CUIKDetermineWeekStart()
{
  id v0 = +[CUIKPreferences sharedPreferences];
  id v4 = [v0 weekStart];

  unint64_t v1 = [v4 longValue];
  if (!v1)
  {
    CFStringRef v2 = [MEMORY[0x1E4F1C9A8] currentCalendar];
    unint64_t v1 = [v2 firstWeekday];
  }
  if (v1 <= 1) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = v1;
  }
  __weekStart = v3;
  __isWeekStartValid = 1;
}

BOOL CUIKShouldSaveStateInPreferences()
{
  id v0 = [MEMORY[0x1E4FB1BA8] mainScreen];
  unint64_t v1 = [v0 traitCollection];
  BOOL v2 = [v1 userInterfaceIdiom] != 1;

  return v2;
}

void __RegisterForInvalidation_block_invoke()
{
  LocalCenter = CFNotificationCenterGetLocalCenter();
  CFNotificationCenterAddObserver(LocalCenter, 0, (CFNotificationCallback)InvalidateFormatter, (CFStringRef)*MEMORY[0x1E4F578C0], 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  unint64_t v1 = CFNotificationCenterGetLocalCenter();
  CFNotificationCenterAddObserver(v1, 0, (CFNotificationCallback)InvalidateFormatter, (CFStringRef)*MEMORY[0x1E4F1D200], 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  BOOL v2 = CFNotificationCenterGetLocalCenter();
  CFNotificationCenterAddObserver(v2, 0, (CFNotificationCallback)InvalidateFormatter, @"com.apple.mobilecal.preference.notification.weekStart", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  uint64_t v3 = CFNotificationCenterGetLocalCenter();
  CFNotificationCenterAddObserver(v3, 0, (CFNotificationCallback)InvalidateFormatter, @"com.apple.mobilecal.preference.notification.overlayCalendarID", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  id v4 = CFNotificationCenterGetLocalCenter();
  CFNotificationCenterAddObserver(v4, 0, (CFNotificationCallback)InvalidateFormatter, @"com.apple.mobilecal.preference.notification.OverrideLocaleWeekends", 0, CFNotificationSuspensionBehaviorDeliverImmediately);
  CUIKCalendarWithoutRegisteringForInvalidation();
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v5 = [[CUIKTodayInvalidationTimerWrapper alloc] initWithCalendar:v7];
  id v6 = (void *)__todayInvalidationTimerWrapper;
  __todayInvalidationTimerWrapper = (uint64_t)v5;
}

BOOL CUIKLocaleIsRightToLeft()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  int v0 = __IsLocaleRightToLeft;
  if (!__IsLocaleRightToLeft)
  {
    unint64_t v1 = [MEMORY[0x1E4F1CA20] currentLocale];
    BOOL v2 = (void *)MEMORY[0x1E4F1CA20];
    uint64_t v3 = [v1 objectForKey:*MEMORY[0x1E4F1C438]];
    uint64_t v4 = [v2 characterDirectionForLanguage:v3];

    if (v4 == 2) {
      int v5 = 2;
    }
    else {
      int v5 = 1;
    }
    __IsLocaleRightToLeft = v5;

    int v0 = __IsLocaleRightToLeft;
  }
  BOOL v6 = v0 == 2;
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  return v6;
}

void sub_1BDF22978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  _Block_object_dispose(&a51, 8);
  _Block_object_dispose(&a55, 8);
  _Block_object_dispose(&a59, 8);
  _Block_object_dispose(&a63, 8);
  _Block_object_dispose(&a69, 8);
  _Block_object_dispose(&STACK[0x210], 8);
  _Block_object_dispose((const void *)(v69 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_1BDF22E98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Block_object_dispose((const void *)(v33 - 128), 8);
  _Unwind_Resume(a1);
}

uint64_t CUIKZeroIndexedWeekStart()
{
  return CUIKOneIndexedWeekStart() - 1;
}

uint64_t CUIKOneIndexedWeekStart()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  if ((__isWeekStartValid & 1) == 0) {
    _CUIKDetermineWeekStart();
  }
  uint64_t v0 = __weekStart;
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  return v0;
}

__CFString *CUIKLocalizedStringForInteger(unint64_t a1)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  unint64_t valuePtr = a1;
  if (a1 <= 0x1F && (__localizedIntStringLoadFlags & (1 << a1)) != 0)
  {
    StringWithNumber = (__CFString *)__localizedIntStrings[a1];
  }
  else
  {
    CFNumberRef v3 = CFNumberCreate(0, kCFNumberNSIntegerType, &valuePtr);
    uint64_t v4 = (__CFNumberFormatter *)__numberFormatter;
    if (!__numberFormatter)
    {
      CFLocaleRef v5 = CFLocaleCopyCurrent();
      __numberFormatter = (uint64_t)CFNumberFormatterCreate(0, v5, kCFNumberFormatterDecimalStyle);
      CFRelease(v5);
      uint64_t v4 = (__CFNumberFormatter *)__numberFormatter;
    }
    StringWithNumber = (__CFString *)CFNumberFormatterCreateStringWithNumber(0, v4, v3);
    CFRelease(v3);
    if (a1 <= 0x1F)
    {
      objc_storeStrong(&__localizedIntStrings[valuePtr], StringWithNumber);
      __localizedIntStringLoadFlags |= 1 << valuePtr;
    }
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithNumber;
}

id CUIKWeekdayVeryShortAbbreviations()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  uint64_t v0 = (void *)__WeekdayVeryShortAbbreviations;
  if (!__WeekdayVeryShortAbbreviations)
  {
    unint64_t v1 = (__CFDateFormatter *)_SharedDateFormatter();
    CFTypeRef v2 = CFDateFormatterCopyProperty(v1, (CFDateFormatterKey)*MEMORY[0x1E4F1D120]);
    CFNumberRef v3 = (void *)__WeekdayVeryShortAbbreviations;
    __WeekdayVeryShortAbbreviations = (uint64_t)v2;

    uint64_t v0 = (void *)__WeekdayVeryShortAbbreviations;
  }
  id v4 = v0;
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v4;
}

void sub_1BDF27A2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_3(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_2_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_1BDF2C5E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va1, a8);
  va_start(va, a8);
  uint64_t v9 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

id CUIKInvitationTitleColor()
{
  if (CUIKInvitationTitleColor_onceToken != -1) {
    dispatch_once(&CUIKInvitationTitleColor_onceToken, &__block_literal_global_0);
  }
  uint64_t v0 = (void *)CUIKInvitationTitleColor_sInvitationTitleColor;

  return v0;
}

void __CUIKInvitationTitleColor_block_invoke()
{
  uint64_t v0 = (void *)MEMORY[0x1E4FB1618];
  CUIKBundle();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = [v0 colorNamed:@"calendarInvitationTitleColor" inBundle:v3 compatibleWithTraitCollection:0];
  CFTypeRef v2 = (void *)CUIKInvitationTitleColor_sInvitationTitleColor;
  CUIKInvitationTitleColor_sInvitationTitleColor = v1;
}

id CUIKAppTintColor()
{
  if (CUIKAppTintColor_onceToken != -1) {
    dispatch_once(&CUIKAppTintColor_onceToken, &__block_literal_global_12);
  }
  uint64_t v0 = (void *)CUIKAppTintColor_sAppTintColor;

  return v0;
}

void __CUIKAppTintColor_block_invoke()
{
  uint64_t v0 = [MEMORY[0x1E4FB1618] systemRedColor];
  uint64_t v1 = (void *)CUIKAppTintColor_sAppTintColor;
  CUIKAppTintColor_sAppTintColor = v0;
}

id CUIKBirthdayMonthCalendarColor()
{
  if (CUIKBirthdayMonthCalendarColor_onceToken != -1) {
    dispatch_once(&CUIKBirthdayMonthCalendarColor_onceToken, &__block_literal_global_14);
  }
  uint64_t v0 = (void *)CUIKBirthdayMonthCalendarColor_sBirthdayMonthCalendarColor;

  return v0;
}

void __CUIKBirthdayMonthCalendarColor_block_invoke()
{
  uint64_t v0 = (void *)MEMORY[0x1E4FB1618];
  CUIKBundle();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = [v0 colorNamed:@"birthdayMonthCalendarColor" inBundle:v3 compatibleWithTraitCollection:0];
  CFTypeRef v2 = (void *)CUIKBirthdayMonthCalendarColor_sBirthdayMonthCalendarColor;
  CUIKBirthdayMonthCalendarColor_sBirthdayMonthCalendarColor = v1;
}

uint64_t CUIKDeclinedEventBackgroundColor()
{
  return [MEMORY[0x1E4FB1618] colorWithWhite:0.82 alpha:0.25];
}

uint64_t CUIKIntegrationEventBackgroundColor()
{
  return [MEMORY[0x1E4FB1618] whiteColor];
}

id CUIKAllDayBackgroundColor()
{
  uint64_t v0 = (void *)CUIKAllDayBackgroundColor_color;
  if (!CUIKAllDayBackgroundColor_color)
  {
    uint64_t v1 = objc_msgSend(MEMORY[0x1E4FB1618], "cuik_systemBackgroundColor");
    CFTypeRef v2 = (void *)CUIKAllDayBackgroundColor_color;
    CUIKAllDayBackgroundColor_color = v1;

    uint64_t v0 = (void *)CUIKAllDayBackgroundColor_color;
  }

  return v0;
}

id CUIKSelectedNeedsReplyBackgroundColor()
{
  uint64_t v0 = (void *)CUIKSelectedNeedsReplyBackgroundColor_color;
  if (!CUIKSelectedNeedsReplyBackgroundColor_color)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4FB1618];
    CFTypeRef v2 = CUIKBundle();
    uint64_t v3 = [v1 colorNamed:@"selectedNeedsReplyBGColor" inBundle:v2 compatibleWithTraitCollection:0];
    id v4 = (void *)CUIKSelectedNeedsReplyBackgroundColor_color;
    CUIKSelectedNeedsReplyBackgroundColor_color = v3;

    uint64_t v0 = (void *)CUIKSelectedNeedsReplyBackgroundColor_color;
  }

  return v0;
}

id CUIKNeedsReplyBackgroundColor()
{
  uint64_t v0 = (void *)CUIKNeedsReplyBackgroundColor_color;
  if (!CUIKNeedsReplyBackgroundColor_color)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4FB1618];
    CFTypeRef v2 = CUIKBundle();
    uint64_t v3 = [v1 colorNamed:@"needsReplyBGColor" inBundle:v2 compatibleWithTraitCollection:0];
    id v4 = (void *)CUIKNeedsReplyBackgroundColor_color;
    CUIKNeedsReplyBackgroundColor_color = v3;

    uint64_t v0 = (void *)CUIKNeedsReplyBackgroundColor_color;
  }

  return v0;
}

id CUIKSelectedNeedsReplyStripeColor()
{
  uint64_t v0 = (void *)CUIKSelectedNeedsReplyStripeColor_color;
  if (!CUIKSelectedNeedsReplyStripeColor_color)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4FB1618];
    CFTypeRef v2 = CUIKBundle();
    uint64_t v3 = [v1 colorNamed:@"selectedNeedsReplyStripeColor" inBundle:v2 compatibleWithTraitCollection:0];
    id v4 = (void *)CUIKSelectedNeedsReplyStripeColor_color;
    CUIKSelectedNeedsReplyStripeColor_color = v3;

    uint64_t v0 = (void *)CUIKSelectedNeedsReplyStripeColor_color;
  }

  return v0;
}

id CUIKNeedsReplyStripeColor()
{
  uint64_t v0 = (void *)CUIKNeedsReplyStripeColor_color;
  if (!CUIKNeedsReplyStripeColor_color)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4FB1618];
    CFTypeRef v2 = CUIKBundle();
    uint64_t v3 = [v1 colorNamed:@"needsReplyStripeColor" inBundle:v2 compatibleWithTraitCollection:0];
    id v4 = (void *)CUIKNeedsReplyStripeColor_color;
    CUIKNeedsReplyStripeColor_color = v3;

    uint64_t v0 = (void *)CUIKNeedsReplyStripeColor_color;
  }

  return v0;
}

id CUIKSelectedTentativeStripeColor()
{
  uint64_t v0 = (void *)CUIKSelectedTentativeStripeColor_color;
  if (!CUIKSelectedTentativeStripeColor_color)
  {
    uint64_t v1 = (void *)MEMORY[0x1E4FB1618];
    CFTypeRef v2 = CUIKBundle();
    uint64_t v3 = [v1 colorNamed:@"selectedTentativeStripeColor" inBundle:v2 compatibleWithTraitCollection:0];
    id v4 = (void *)CUIKSelectedTentativeStripeColor_color;
    CUIKSelectedTentativeStripeColor_color = v3;

    uint64_t v0 = (void *)CUIKSelectedTentativeStripeColor_color;
  }

  return v0;
}

uint64_t CUIKSelectedDeclinedBackgroundColor()
{
  return [MEMORY[0x1E4FB1618] colorWithWhite:0.6 alpha:1.0];
}

id CUIKOccurrenceSelectedTextColor(void *a1, uint64_t a2, char a3)
{
  id v5 = a1;
  BOOL v6 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F575E8] dark:a2 == 2];
  if ([v6 intValue])
  {
    if ([v6 intValue] != 1)
    {
      BOOL v18 = a2 == 2;
      id v15 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F575E0] dark:v18];
      CFLocaleRef v16 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F575D8] dark:v18];
      char v19 = [MEMORY[0x1E4F57780] getDebugColorNumberForPreference:*MEMORY[0x1E4F575D0] dark:v18];
      CFStringRef v17 = CUIKColorAdjustSaturationBrightnessAlpha(v5, v15, v16, v19);

      goto LABEL_11;
    }
    if ((a3 & 1) == 0)
    {
      double v24 = 0.0;
      double v25 = 0.0;
      uint64_t v22 = 0;
      double v23 = 0.0;
      id v7 = v5;
      objc_msgSend(v7, "cuik_getRed:green:blue:alpha:", &v25, &v24, &v23, &v22);
      double v8 = v24 * 0.587000012 + v25 * 0.298999995 + v23 * 0.114;
      objc_msgSend(v7, "cuik_alphaComponent", v22);
      double v10 = v9;

      if (v8 * (1.0 / v10) < 0.2)
      {
        uint64_t v11 = [MEMORY[0x1E4FB1618] whiteColor];
LABEL_9:
        id v15 = v11;
        CFLocaleRef v16 = [v11 colorWithAlphaComponent:0.6];
        CFStringRef v17 = CUIKBlendColorsSourceOver(v7, v16);
LABEL_11:

        goto LABEL_15;
      }
    }
    uint64_t v20 = [MEMORY[0x1E4FB1618] blackColor];
  }
  else
  {
    if ((a3 & 1) == 0)
    {
      double v24 = 0.0;
      double v25 = 0.0;
      uint64_t v22 = 0;
      double v23 = 0.0;
      id v7 = v5;
      objc_msgSend(v7, "cuik_getRed:green:blue:alpha:", &v25, &v24, &v23, &v22);
      double v12 = v24 * 0.587000012 + v25 * 0.298999995 + v23 * 0.114;
      objc_msgSend(v7, "cuik_alphaComponent", v22);
      double v14 = v13;

      if (v12 * (1.0 / v14) > 0.85)
      {
        uint64_t v11 = [MEMORY[0x1E4FB1618] blackColor];
        goto LABEL_9;
      }
    }
    uint64_t v20 = [MEMORY[0x1E4FB1618] whiteColor];
  }
  CFStringRef v17 = (void *)v20;
LABEL_15:

  return v17;
}

id CUIKColorAdjustSaturationBrightnessAlpha(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a4;
  double v23 = 0.0;
  double v24 = 0.0;
  double v22 = 0.0;
  id v8 = a3;
  id v9 = a2;
  [a1 getHue:&v24 saturation:&v23 brightness:&v22 alpha:0];
  [v9 floatValue];
  float v11 = v10;

  double v12 = fmax(v23 + v11, 0.0);
  double v13 = 1.0;
  if (v12 > 1.0) {
    double v12 = 1.0;
  }
  double v23 = v12;
  [v8 floatValue];
  float v15 = v14;

  double v16 = fmax(v22 + v15, 0.0);
  if (v16 <= 1.0) {
    double v17 = v16;
  }
  else {
    double v17 = 1.0;
  }
  double v22 = v17;
  BOOL v18 = objc_msgSend(MEMORY[0x1E4FB1618], "colorWithHue:saturation:brightness:alpha:", v24, v23);
  if (v7)
  {
    [v7 floatValue];
    double v13 = v19;
  }
  uint64_t v20 = [v18 colorWithAlphaComponent:v13];

  return v20;
}

id CUIKStrikethroughColor(int a1)
{
  if (a1) {
    [MEMORY[0x1E4FB1618] colorWithWhite:1.0 alpha:0.75];
  }
  else {
  uint64_t v1 = [MEMORY[0x1E4FB1618] tertiaryLabelColor];
  }

  return v1;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void __CUIKSecondaryTextColorForCalendarColorForStyle_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)MEMORY[0x1E4F57780];
  uint64_t v4 = *MEMORY[0x1E4F575B0];
  id v5 = a2;
  BOOL v6 = [v3 getDebugColorNumberForPreference:v4 dark:0];
  id v14 = v6;
  if (v6)
  {
    [v6 floatValue];
    double v8 = v7;
  }
  else
  {
    double v8 = 0.2;
  }
  id v9 = CUIKAdjustedColorForColor(*(void **)(a1 + 32), *(void *)(a1 + 48));
  float v10 = [v5 colorWithAlphaComponent:v8];

  uint64_t v11 = CUIKBlendColorsSourceOver(v9, v10);
  uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8);
  double v13 = *(void **)(v12 + 40);
  *(void *)(v12 + 40) = v11;
}

id CUIKLightStripeColorForColor(void *a1)
{
  double v5 = 0.0;
  double v3 = 0.0;
  double v4 = 0.0;
  objc_msgSend(a1, "cuik_getRed:green:blue:alpha:", &v5, &v4, &v3, 0);
  double v5 = v5 * 0.16 + 0.84;
  double v3 = v3 * 0.16 + 0.84;
  double v4 = v4 * 0.16 + 0.84;
  uint64_t v1 = objc_msgSend(MEMORY[0x1E4FB1618], "colorWithRed:green:blue:alpha:");

  return v1;
}

double CUIKLuminance(void *a1)
{
  double v5 = 0.0;
  double v3 = 0.0;
  double v4 = 0.0;
  uint64_t v2 = 0;
  objc_msgSend(a1, "cuik_getRed:green:blue:alpha:", &v5, &v4, &v3, &v2);
  return v4 * 0.587000012 + v5 * 0.298999995 + v3 * 0.114;
}

double CUIKGetYUVA(void *a1, double *a2, double *a3, double *a4, uint64_t a5)
{
  double v10 = 0.0;
  double v11 = 0.0;
  double v9 = 0.0;
  objc_msgSend(a1, "cuik_getRed:green:blue:alpha:", &v11, &v10, &v9, a5);
  if (a2)
  {
    double result = v10 * 0.587000012 + v11 * 0.298999995 + v9 * 0.114;
    *a2 = result;
  }
  if (a3)
  {
    double result = v10 * -0.331999987 + v11 * -0.169 + v9 * 0.5 + 0.5;
    *a3 = result;
  }
  if (a4)
  {
    double result = v10 * -0.419 + v11 * 0.5 + v9 * -0.0812999979 + 0.5;
    *a4 = result;
  }
  return result;
}

uint64_t CUIKColorWithYUVA(double a1, double a2, double a3)
{
  return objc_msgSend(MEMORY[0x1E4FB1618], "colorWithRed:green:blue:alpha:", a1 + a3 * 1.40750003 + -0.703750014, a1 + a2 * -0.345499992 + a3 * -0.716899991 + 0.531199992, a1 + a2 * 1.77900004 + -0.889500022);
}

id CUIKAdjustColorToMinimumLuminance(void *a1, double a2)
{
  id v3 = a1;
  double v8 = 0.0;
  double v9 = 0.0;
  double v6 = 0.0;
  double v7 = 0.0;
  CUIKGetYUVA(v3, &v9, &v8, &v7, (uint64_t)&v6);
  double v4 = v3;
  if (v9 < a2)
  {
    double v9 = a2;
    double v4 = [MEMORY[0x1E4FB1618] colorWithRed:a2 + v7 * 1.40750003 + -0.703750014 green:a2 + v8 * -0.345499992 + v7 * -0.716899991 + 0.531199992 blue:a2 + v8 * 1.77900004 + -0.889500022 alpha:v6];
  }

  return v4;
}

id CUIKAdjustColorLuminanceIfNeeded(void *a1)
{
  id v1 = a1;
  double v14 = 0.0;
  double v15 = 0.0;
  uint64_t v12 = 0;
  double v13 = 0.0;
  objc_msgSend(v1, "cuik_getRed:green:blue:alpha:", &v15, &v14, &v13, &v12);
  HIDWORD(v3) = HIDWORD(v13);
  HIDWORD(v4) = 1069362970;
  double v5 = v14 * 0.587000012 + v15 * 0.298999995 + v13 * 0.114;
  double v6 = v1;
  if (v5 < 0.5)
  {
    double v7 = v5 + v5;
    LODWORD(v4) = 1038174126;
    LODWORD(v2) = 1061494456;
    LODWORD(v3) = 1.0;
    double v8 = [MEMORY[0x1E4F39C10] functionWithControlPoints:0.0 :v3 :v4 :v2];
    *(float *)&double v9 = v7;
    [v8 _solveForInput:v9];
    double v6 = CUIKAdjustColorToMinimumLuminance(v1, v10 * 0.5);
  }

  return v6;
}

BOOL CUIKColorIsBlack(void *a1)
{
  double v6 = 0.0;
  double v4 = 0.0;
  double v5 = 0.0;
  uint64_t v3 = 0;
  objc_msgSend(a1, "cuik_getRed:green:blue:alpha:", &v6, &v5, &v4, &v3);
  BOOL v1 = v6 < 0.05;
  if (v5 >= 0.05) {
    BOOL v1 = 0;
  }
  return v4 < 0.05 && v1;
}

id CUIKAdjustedColorForBackgroundColor(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v3;
  double v6 = v5;
  if (CUIKColorIsWhite(v5))
  {
    double v6 = v5;
    if (CUIKColorIsWhite(v4))
    {
      double v6 = [MEMORY[0x1E4FB1618] colorWithWhite:0.8 alpha:1.0];
    }
  }
  if (CUIKColorIsBlack(v5) && CUIKColorIsBlack(v4))
  {
    uint64_t v7 = [MEMORY[0x1E4FB1618] colorWithWhite:0.25 alpha:1.0];

    double v6 = (void *)v7;
  }

  return v6;
}

id CUIKSummaryColorForColor(void *a1, uint64_t a2)
{
  id v3 = CUIKAdjustedColorForColor(a1, a2);
  id v4 = v3;
  if (a2 == 2) {
    CUIKColorDarkenedToPercentageWithFinalAlpha(v3, 0.7);
  }
  else {
  id v5 = CUIKColorLightenedToPercentageWithFinalAlpha(v3, 0.5, 1.0);
  }

  return v5;
}

id CUIKColorDarkenedToPercentageWithFinalAlpha(void *a1, double a2)
{
  double v6 = 0.0;
  double v7 = 0.0;
  double v5 = 0.0;
  objc_msgSend(a1, "cuik_getRed:green:blue:alpha:", &v7, &v6, &v5, 0);
  double v6 = v6 * a2;
  double v7 = v7 * a2;
  double v5 = v5 * a2;
  id v3 = objc_msgSend(MEMORY[0x1E4FB1618], "colorWithRed:green:blue:alpha:");

  return v3;
}

id CUIKColorLightenedToPercentageWithFinalAlpha(void *a1, double a2, double a3)
{
  double v9 = 0.0;
  double v10 = 0.0;
  double v8 = 0.0;
  objc_msgSend(a1, "cuik_getRed:green:blue:alpha:", &v10, &v9, &v8, 0);
  double v5 = 1.0 - a2 / a3;
  double v9 = v5 + v9 * (a2 / a3);
  double v10 = v5 + v10 * (a2 / a3);
  double v8 = v5 + v8 * (a2 / a3);
  double v6 = objc_msgSend(MEMORY[0x1E4FB1618], "colorWithRed:green:blue:alpha:");

  return v6;
}

id CUIKColorFromString()
{
  CalGetRGBAFromString();
  LODWORD(v0) = 0;
  LODWORD(v2) = 0;
  LODWORD(v1) = 0;
  LODWORD(v3) = 0;
  id v4 = [MEMORY[0x1E4FB1618] colorWithRed:(double)v0 / 255.0 green:(double)v1 / 255.0 blue:(double)v2 / 255.0 alpha:(double)v3 / 255.0];

  return v4;
}

void __CUIKDeclinedEventBaseColor_block_invoke()
{
  unint64_t v0 = (void *)MEMORY[0x1E4FB1618];
  CUIKBundle();
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = [v0 colorNamed:@"declinedEventBaseColor" inBundle:v3 compatibleWithTraitCollection:0];
  unint64_t v2 = (void *)CUIKDeclinedEventBaseColor_sDeclinedEventBaseColor;
  CUIKDeclinedEventBaseColor_sDeclinedEventBaseColor = v1;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void sub_1BDF315F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose(&a38, 8);
  _Block_object_dispose((const void *)(v38 - 200), 8);
  _Block_object_dispose((const void *)(v38 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void sub_1BDF32154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BDF32F9C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1BDF341C0(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x2B0], 8);
  _Block_object_dispose(&STACK[0x2D0], 8);
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1BDF35010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  objc_destroyWeak(v25);
  objc_destroyWeak((id *)(v27 - 104));
  _Unwind_Resume(a1);
}

void sub_1BDF3602C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(v17);
  objc_destroyWeak((id *)(v20 - 72));
  _Unwind_Resume(a1);
}

void sub_1BDF364CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDF378B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1BDF38CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

id CalShortDisplayStringForNotificationIdentity(void *a1, int a2, uint64_t a3)
{
  return _CUIKDisplayStringForNotificationIdentity(a1, a2, 1, a3);
}

id _CUIKDisplayStringForNotificationIdentity(void *a1, int a2, int a3, uint64_t a4)
{
  id v7 = a1;
  if (a3) {
    +[CUIKAttendeeUtils displayShortStringForIdentityWithDecomposedName:v7 useAddressAsFallback:1 contactIdentifier:a4 outFirstName:0 outLastName:0 outDepartment:0];
  }
  else {
  double v8 = +[CUIKAttendeeUtils displayStringForIdentityWithDecomposedName:v7 useAddressAsFallback:1 contactIdentifier:a4 outFirstName:0 outLastName:0 outDepartment:0];
  }
  if (!v8)
  {
    double v9 = CUIKBundle();
    double v10 = v9;
    if (a2) {
      double v11 = @"Somebody";
    }
    else {
      double v11 = @"somebody";
    }
    double v8 = [v9 localizedStringForKey:v11 value:&stru_1F187C430 table:0];
  }

  return v8;
}

id CUIKDisplayStringForNotificationIdentity(void *a1, int a2, uint64_t a3)
{
  return _CUIKDisplayStringForNotificationIdentity(a1, a2, 0, a3);
}

__CFString *CUIKMessageStringForNotification(void *a1)
{
  uint64_t v1 = [a1 allDescriptionStringsWithOptions:1];
  if ([v1 count])
  {
    uint64_t v2 = [v1 objectAtIndexedSubscript:0];
  }
  else
  {
    uint64_t v2 = &stru_1F187C430;
  }

  return v2;
}

id CUIKMessageStringForEventInvitationNotification(void *a1, uint64_t a2)
{
  id v3 = a1;
  if ([v3 type] != 3)
  {
    if ([v3 type] == 2)
    {
      id v16 = 0;
    }
    else
    {
      BOOL v18 = NSString;
      CFDateRef v19 = [v3 startDate];
      CFLocaleRef v20 = CFLocaleCopyCurrent();
      uint64_t v21 = CFDateFormatterCreate(0, v20, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
      CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
      CFStringRef StringWithAbsoluteTime = CFDateFormatterCreateStringWithAbsoluteTime(0, v21, Current);
      if (StringWithAbsoluteTime) {
        CFRelease(StringWithAbsoluteTime);
      }
      CFRelease(v20);
      CFLocaleRef Locale = CFDateFormatterGetLocale(v21);
      CFStringRef DateFormatFromTemplate = CFDateFormatterCreateDateFormatFromTemplate(0, @"EEEEMMMMdjma", 0, Locale);
      CFDateFormatterSetFormat(v21, DateFormatFromTemplate);
      CFRelease(DateFormatFromTemplate);
      StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, v21, v19);
      CFRelease(v21);
      id v16 = [v18 stringWithFormat:@"%@\n", StringWithDate];

      uint64_t v27 = [v3 location];
      if (v27)
      {
        v28 = (void *)v27;
        v29 = [v3 location];
        uint64_t v30 = [v29 length];

        if (v30)
        {
          v31 = NSString;
          v32 = [v3 location];
          uint64_t v33 = [v31 stringWithFormat:@"%@%@\n", v16, v32];

          id v16 = (id)v33;
        }
      }
    }
    goto LABEL_100;
  }
  id v4 = objc_opt_new();
  double v5 = objc_opt_new();
  double v6 = objc_opt_new();
  uint64_t v84 = 0;
  v85 = &v84;
  uint64_t v86 = 0x2020000000;
  char v87 = 0;
  id v7 = [v3 attendees];
  v79[0] = MEMORY[0x1E4F143A8];
  v79[1] = 3221225472;
  v79[2] = __CUIKMessageStringForEventInvitationNotification_block_invoke;
  v79[3] = &unk_1E636A418;
  id v8 = v4;
  id v80 = v8;
  id v9 = v5;
  id v81 = v9;
  id v10 = v6;
  id v82 = v10;
  v83 = &v84;
  [v7 enumerateObjectsUsingBlock:v79];

  if (*((unsigned char *)v85 + 24))
  {
    double v11 = [v3 owner];
    uint64_t v12 = _CUIKDisplayStringForNotificationIdentity(v11, 1, 1, a2);

    id v13 = v12;
    double v14 = CUIKBundle();
    double v15 = [v14 localizedStringForKey:@"%@ declined to move the event to your proposed time" value:&stru_1F187C430 table:0];

    objc_msgSend(NSString, "localizedStringWithFormat:", v15, v13);
    id v16 = (id)objc_claimAutoreleasedReturnValue();
    double v17 = v13;
LABEL_4:

LABEL_97:
    goto LABEL_98;
  }
  if ([v8 count] == 1 && !objc_msgSend(v9, "count") && !objc_msgSend(v10, "count"))
  {
    double v17 = [v8 firstObject];
    if (![v3 isLocationDecline])
    {
      double v15 = _CUIKDisplayStringForNotificationIdentity(v17, 1, 1, a2);
      uint64_t v38 = CalInviteeDeclinedLocalizedString(v15);
      goto LABEL_96;
    }
    double v15 = [v17 name];
    v49 = NSString;
    CUIKBundle();
    id v13 = (id)objc_claimAutoreleasedReturnValue();
    v50 = [v13 localizedStringForKey:@"%@ is unavailable" value:&stru_1F187C430 table:0];
    uint64_t v51 = objc_msgSend(v49, "localizedStringWithFormat:", v50, v15);
    goto LABEL_94;
  }
  if (![v8 count] && objc_msgSend(v9, "count") == 1 && !objc_msgSend(v10, "count"))
  {
    double v17 = [v9 firstObject];
    double v15 = _CUIKDisplayStringForNotificationIdentity(v17, 1, 1, a2);
    v52 = [v17 comment];
    id v13 = +[CUIKNotificationDescriptionGenerator stringWithAutoCommentRemoved:v52];

    uint64_t v36 = CalInviteeCommentedLocalizedString(v15, v13);
    goto LABEL_89;
  }
  if (![v8 count] && !objc_msgSend(v9, "count") && objc_msgSend(v10, "count") == 1)
  {
    double v17 = [v10 firstObject];
    double v15 = _CUIKDisplayStringForNotificationIdentity(v17, 1, 1, a2);
    v34 = +[CUIKDateDescriptionGenerator sharedGenerator];
    v35 = [v17 proposedStartDate];
    id v13 = [v34 dateStringForDate:v35 allDay:0 standalone:0 shortFormat:0];

    uint64_t v36 = CalInviteeProposedNewTimeLocalizedString(v15, v13);
LABEL_89:
    id v16 = (id)v36;
    goto LABEL_4;
  }
  if ((unint64_t)[v8 count] < 2 || objc_msgSend(v9, "count") || objc_msgSend(v10, "count"))
  {
    if (![v8 count] && (unint64_t)objc_msgSend(v9, "count") >= 2 && !objc_msgSend(v10, "count"))
    {
      v56 = NSString;
      double v17 = CUIKBundle();
      double v15 = [v17 localizedStringForKey:@"invitees_commented" value:&stru_1F187C430 table:0];
      uint64_t v38 = objc_msgSend(v56, "localizedStringWithFormat:", v15, objc_msgSend(v9, "count"));
      goto LABEL_96;
    }
    if (![v8 count] && !objc_msgSend(v9, "count") && (unint64_t)objc_msgSend(v10, "count") >= 2)
    {
      v37 = NSString;
      double v17 = CUIKBundle();
      double v15 = [v17 localizedStringForKey:@"invitees_proposed_time" value:&stru_1F187C430 table:0];
      uint64_t v38 = objc_msgSend(v37, "localizedStringWithFormat:", v15, objc_msgSend(v10, "count"));
LABEL_96:
      id v16 = (id)v38;
      goto LABEL_97;
    }
    if ([v8 count] == 1 && objc_msgSend(v9, "count") == 1 && !objc_msgSend(v10, "count"))
    {
      v53 = [v8 firstObject];
      v54 = [v9 firstObject];

      if (v53 == v54)
      {
        double v17 = [v8 firstObject];
        double v15 = _CUIKDisplayStringForNotificationIdentity(v17, 1, 1, a2);
        v57 = [v17 comment];
        id v13 = +[CUIKNotificationDescriptionGenerator stringWithAutoCommentRemoved:v57];

        uint64_t v36 = CalInviteeDeclinedWithCommentLocalizedString(v15, v13);
        goto LABEL_89;
      }
    }
    else
    {
      if ([v8 count] == 1 && !objc_msgSend(v9, "count") && objc_msgSend(v10, "count") == 1)
      {
        v39 = [v8 firstObject];
        v40 = [v10 firstObject];

        if (v39 == v40)
        {
          double v17 = [v8 firstObject];
          double v15 = _CUIKDisplayStringForNotificationIdentity(v17, 1, 1, a2);
          v67 = +[CUIKDateDescriptionGenerator sharedGenerator];
          v68 = [v17 proposedStartDate];
          id v13 = [v67 dateStringForDate:v68 allDay:0 standalone:0 shortFormat:0];

          uint64_t v36 = CalInviteeDeclinedAndProposedNewTimeLocalizedString(v15, v13);
          goto LABEL_89;
        }
        goto LABEL_39;
      }
      if (![v8 count] && objc_msgSend(v9, "count") == 1 && objc_msgSend(v10, "count") == 1)
      {
        v42 = [v9 firstObject];
        v43 = [v10 firstObject];

        if (v42 != v43) {
          goto LABEL_44;
        }
        double v17 = [v9 firstObject];
        double v15 = _CUIKDisplayStringForNotificationIdentity(v17, 1, 1, a2);
        v70 = +[CUIKDateDescriptionGenerator sharedGenerator];
        v71 = [v17 proposedStartDate];
        id v13 = [v70 dateStringForDate:v71 allDay:0 standalone:0 shortFormat:0];

        v72 = [v17 comment];
        v50 = +[CUIKNotificationDescriptionGenerator stringWithAutoCommentRemoved:v72];

        uint64_t v51 = CalInviteeCommentedAndProposedNewTimeLocalizedString(v15, v13, v50);
LABEL_94:
        id v16 = (id)v51;

        goto LABEL_4;
      }
      if ([v8 count] == 1 && objc_msgSend(v9, "count") == 1 && objc_msgSend(v10, "count") == 1)
      {
        v45 = [v9 firstObject];
        v46 = [v10 firstObject];
        if (v45 == v46)
        {
          v58 = [v8 firstObject];
          v59 = [v10 firstObject];

          if (v58 == v59)
          {
            double v17 = [v9 firstObject];
            double v15 = _CUIKDisplayStringForNotificationIdentity(v17, 1, 1, a2);
            v74 = [v17 comment];
            id v13 = +[CUIKNotificationDescriptionGenerator stringWithAutoCommentRemoved:v74];

            v75 = +[CUIKDateDescriptionGenerator sharedGenerator];
            v76 = [v17 proposedStartDate];
            v50 = [v75 dateStringForDate:v76 allDay:0 standalone:0 shortFormat:0];

            uint64_t v51 = CalInviteeDeclinedCommentedAndProposedNewTimeLocalizedString(v15, v50, v13);
            goto LABEL_94;
          }
        }
        else
        {
        }
        v60 = [v9 firstObject];
        v61 = [v10 firstObject];

        if (v60 == v61)
        {
          uint64_t v69 = NSString;
          double v17 = CUIKBundle();
          double v15 = [v17 localizedStringForKey:@"%lu invitees declined, %lu invitees commented and proposed a new time", &stru_1F187C430, 0 value table];
          uint64_t v38 = objc_msgSend(v69, "localizedStringWithFormat:", v15, objc_msgSend(v8, "count"), objc_msgSend(v9, "count"));
        }
        else
        {
          v62 = [v8 firstObject];
          v63 = [v10 firstObject];

          if (v62 == v63)
          {
            v73 = NSString;
            double v17 = CUIKBundle();
            double v15 = [v17 localizedStringForKey:@"%lu invitees commented, %lu invitees declined and proposed a new time", &stru_1F187C430, 0 value table];
            uint64_t v38 = objc_msgSend(v73, "localizedStringWithFormat:", v15, objc_msgSend(v9, "count"), objc_msgSend(v8, "count"));
          }
          else
          {
            v64 = [v8 firstObject];
            v65 = [v9 firstObject];

            v66 = NSString;
            CUIKBundle();
            if (v64 == v65) {
              double v17 = {;
            }
              double v15 = [v17 localizedStringForKey:@"%lu invitees proposed a new time, %lu invitees declined and commented", &stru_1F187C430, 0 value table];
              objc_msgSend(v66, "localizedStringWithFormat:", v15, objc_msgSend(v10, "count"), objc_msgSend(v8, "count"));
            }
            else {
              double v17 = {;
            }
              double v15 = [v17 localizedStringForKey:@"%lu invitees declined, %lu invitees commented, %lu invitees proposed a new time", &stru_1F187C430, 0 value table];
              objc_msgSend(v66, "localizedStringWithFormat:", v15, objc_msgSend(v8, "count"), objc_msgSend(v9, "count"), objc_msgSend(v10, "count"));
            uint64_t v38 = };
          }
        }
        goto LABEL_96;
      }
      if ((unint64_t)[v8 count] >= 2 && !objc_msgSend(v9, "count"))
      {
LABEL_39:
        v41 = NSString;
        double v17 = CUIKBundle();
        double v15 = [v17 localizedStringForKey:@"%lu invitees declined, %lu invitees proposed a new time", &stru_1F187C430, 0 value table];
        uint64_t v38 = objc_msgSend(v41, "localizedStringWithFormat:", v15, objc_msgSend(v8, "count"), objc_msgSend(v10, "count"));
        goto LABEL_96;
      }
      if (((unint64_t)[v8 count] < 2 || objc_msgSend(v10, "count"))
        && ((unint64_t)[v9 count] < 2 || objc_msgSend(v10, "count")))
      {
        if (((unint64_t)[v9 count] < 2 || objc_msgSend(v8, "count"))
          && ((unint64_t)[v10 count] < 2 || objc_msgSend(v8, "count")))
        {
          if ((unint64_t)[v10 count] < 2 || objc_msgSend(v9, "count"))
          {
            if ((unint64_t)[v8 count] < 2
              || (unint64_t)[v10 count] < 2
              || (unint64_t)[v9 count] < 2)
            {
              id v16 = 0;
              char v48 = 0;
              goto LABEL_99;
            }
            v47 = NSString;
            double v17 = CUIKBundle();
            double v15 = [v17 localizedStringForKey:@"%lu invitees declined, %lu invitees commented, %lu invitees proposed a new time", &stru_1F187C430, 0 value table];
            uint64_t v38 = objc_msgSend(v47, "localizedStringWithFormat:", v15, objc_msgSend(v8, "count"), objc_msgSend(v9, "count"), objc_msgSend(v10, "count"));
            goto LABEL_96;
          }
          goto LABEL_39;
        }
LABEL_44:
        v44 = NSString;
        double v17 = CUIKBundle();
        double v15 = [v17 localizedStringForKey:@"%lu invitees commented, %lu invitees proposed a new time", &stru_1F187C430, 0 value table];
        uint64_t v38 = objc_msgSend(v44, "localizedStringWithFormat:", v15, objc_msgSend(v9, "count"), objc_msgSend(v10, "count"));
        goto LABEL_96;
      }
    }
    v55 = NSString;
    double v17 = CUIKBundle();
    double v15 = [v17 localizedStringForKey:@"%lu invitees declined, %lu invitees commented", &stru_1F187C430, 0 value table];
    uint64_t v38 = objc_msgSend(v55, "localizedStringWithFormat:", v15, objc_msgSend(v8, "count"), objc_msgSend(v9, "count"));
    goto LABEL_96;
  }
  CalInviteesDeclinedLocalizedString([v8 count]);
  id v16 = (id)objc_claimAutoreleasedReturnValue();
LABEL_98:
  char v48 = 1;
LABEL_99:

  _Block_object_dispose(&v84, 8);
  if (v48)
  {
LABEL_100:
    id v16 = v16;
    v77 = v16;
    goto LABEL_102;
  }
  v77 = 0;
LABEL_102:

  return v77;
}

void sub_1BDF3FD54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __CUIKMessageStringForEventInvitationNotification_block_invoke(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v9 = a2;
  if ([v9 statusChanged] && objc_msgSend(v9, "participantStatus") == 3) {
    [*(id *)(a1 + 32) addObject:v9];
  }
  double v6 = [v9 comment];
  id v7 = +[CUIKNotificationDescriptionGenerator stringWithAutoCommentRemoved:v6];

  if ([v9 commentChanged] && objc_msgSend(v7, "length")) {
    [*(id *)(a1 + 40) addObject:v9];
  }
  if ([v9 proposedStartDateChanged])
  {
    id v8 = [v9 proposedStartDate];

    if (v8)
    {
      [*(id *)(a1 + 48) addObject:v9];
      if ([v9 proposedStartDateDeclined])
      {
        if ([v9 isCurrentUser])
        {
          *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
          *a4 = 1;
        }
      }
    }
  }
}

id CalInviteeDeclinedLocalizedString(void *a1)
{
  id v1 = a1;
  uint64_t v2 = CUIKBundle();
  id v3 = [v2 localizedStringForKey:@"%@ declined" value:&stru_1F187C430 table:0];

  id v4 = objc_msgSend(NSString, "localizedStringWithFormat:", v3, v1);

  return v4;
}

id CalInviteeCommentedLocalizedString(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  double v5 = CUIKBundle();
  double v6 = [v5 localizedStringForKey:@"%@: “%@”" value:&stru_1F187C430 table:0];

  id v7 = objc_msgSend(NSString, "localizedStringWithFormat:", v6, v4, v3);

  return v7;
}

id CalInviteeProposedNewTimeLocalizedString(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  double v5 = CUIKBundle();
  double v6 = [v5 localizedStringForKey:@"%@ proposed moving event to %@" value:&stru_1F187C430 table:0];

  id v7 = objc_msgSend(NSString, "localizedStringWithFormat:", v6, v4, v3);

  return v7;
}

id CalInviteesDeclinedLocalizedString(uint64_t a1)
{
  uint64_t v2 = CUIKBundle();
  id v3 = [v2 localizedStringForKey:@"invitees_declined_long" value:&stru_1F187C430 table:0];

  id v4 = objc_msgSend(NSString, "localizedStringWithFormat:", v3, a1);

  return v4;
}

id CalInviteeDeclinedWithCommentLocalizedString(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  double v5 = CUIKBundle();
  double v6 = [v5 localizedStringForKey:@"%@ declined: “%@”" value:&stru_1F187C430 table:0];

  id v7 = objc_msgSend(NSString, "localizedStringWithFormat:", v6, v4, v3);

  return v7;
}

id CalInviteeDeclinedAndProposedNewTimeLocalizedString(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  double v5 = CUIKBundle();
  double v6 = [v5 localizedStringForKey:@"%@ declined, but proposed moving event to %@", &stru_1F187C430, 0 value table];

  id v7 = objc_msgSend(NSString, "localizedStringWithFormat:", v6, v4, v3);

  return v7;
}

id CalInviteeCommentedAndProposedNewTimeLocalizedString(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = a1;
  id v8 = CUIKBundle();
  id v9 = [v8 localizedStringForKey:@"%@ proposed moving event to %@: “%@”" value:&stru_1F187C430 table:0];

  id v10 = objc_msgSend(NSString, "localizedStringWithFormat:", v9, v7, v6, v5);

  return v10;
}

id CalInviteeDeclinedCommentedAndProposedNewTimeLocalizedString(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = a1;
  id v8 = CUIKBundle();
  id v9 = [v8 localizedStringForKey:@"%@ declined, but proposed moving event to %@: “%@”", &stru_1F187C430, 0 value table];

  id v10 = objc_msgSend(NSString, "localizedStringWithFormat:", v9, v7, v6, v5);

  return v10;
}

uint64_t CUIKLaunchURLForInbox()
{
  return [MEMORY[0x1E4F1CB10] URLWithString:@"calinvitelist:"];
}

id CUIKLaunchURLForEvent(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 externalURL];
    if (v3) {
      goto LABEL_8;
    }
    id v4 = +[CUIKLogSubsystem defaultCategory];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      CUIKLaunchURLForEvent_cold_2();
    }
  }
  else
  {
    id v4 = +[CUIKLogSubsystem defaultCategory];
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      CUIKLaunchURLForEvent_cold_1();
    }
  }

  id v3 = 0;
LABEL_8:

  return v3;
}

id CUIKLaunchURLForEventInvitation(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    uint64_t v3 = [v1 externalURL];
    if (v3)
    {
      id v4 = (void *)v3;
      id v5 = (void *)MEMORY[0x1E4F1CB10];
      id v6 = [NSString stringWithFormat:@"calinvite:%@", v3];
      id v7 = [v5 URLWithString:v6];

      goto LABEL_9;
    }
    id v8 = +[CUIKLogSubsystem defaultCategory];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      CUIKLaunchURLForEventInvitation_cold_2();
    }
  }
  else
  {
    id v8 = +[CUIKLogSubsystem defaultCategory];
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      CUIKLaunchURLForEventInvitation_cold_1();
    }
  }

  id v7 = 0;
LABEL_9:

  return v7;
}

id CUIKNewTimeProposerForNotification(void *a1)
{
  id v1 = [a1 descriptionStrings:0];
  uint64_t v2 = [v1 objectForKeyedSubscript:@"ImportantAttendee"];
  uint64_t v3 = v2;
  if (!v2 || ![v2 proposedStartDateChanged]) {
    goto LABEL_5;
  }
  id v4 = [v3 proposedStartDate];
  if (!v4) {
    goto LABEL_6;
  }
  char v5 = [v3 proposedStartDateDeclined];

  if ((v5 & 1) == 0) {
    id v4 = v3;
  }
  else {
LABEL_5:
  }
    id v4 = 0;
LABEL_6:

  return v4;
}

void sub_1BDF40DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

void sub_1BDF41038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1BDF4120C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1BDF413EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1BDF41658(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1BDF41908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose((const void *)(v33 - 160), 8);
  _Block_object_dispose((const void *)(v33 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1BDF41D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1BDF425E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1BDF42C44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void sub_1BDF432A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_2_1(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_4(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x12u);
}

void sub_1BDF4C0F0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDF4CC64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double CUIKFloorToScreenScale(double a1)
{
  uint64_t v2 = CUIKFloorToScreenScale___scale;
  if (*(double *)&CUIKFloorToScreenScale___scale == -1.0)
  {
    *(double *)&uint64_t v2 = CUIKScaleFactor();
    CUIKFloorToScreenScale___scale = v2;
  }
  if (a1 != 0.0) {
    return floor(*(double *)&v2 * a1) / *(double *)&v2;
  }
  return a1;
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__7(uint64_t a1)
{
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__8(uint64_t a1)
{
}

id __GetDateFormatter()
{
  unint64_t v0 = (void *)__DateFormatter;
  if (!__DateFormatter)
  {
    id v1 = objc_alloc_init(MEMORY[0x1E4F28C10]);
    uint64_t v2 = (void *)__DateFormatter;
    __DateFormatter = (uint64_t)v1;

    [(id)__DateFormatter setDateStyle:1];
    [(id)__DateFormatter setTimeStyle:1];
    unint64_t v0 = (void *)__DateFormatter;
  }

  return v0;
}

void OUTLINED_FUNCTION_1_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

uint64_t OUTLINED_FUNCTION_2_2()
{
  return v0;
}

void OUTLINED_FUNCTION_3_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return v0;
}

uint64_t OUTLINED_FUNCTION_6_0()
{
  return *(void *)(v0 + 2504);
}

void OUTLINED_FUNCTION_7_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

BOOL __CUIKEventDisplaysAsDeclined_block_invoke(uint64_t a1, uint64_t a2)
{
  return a2 == 3;
}

BOOL __CUIKEventDisplaysAsTentative_block_invoke(uint64_t a1, uint64_t a2)
{
  return a2 == 4;
}

uint64_t __CUIKEventDisplaysAsNeedsReply_block_invoke(uint64_t a1, uint64_t a2)
{
  return [MEMORY[0x1E4F255B8] needsResponseForParticipantStatus:a2];
}

uint64_t CUIKEventParticipantStatusForDisplay(void *a1)
{
  id v1 = a1;
  if (![v1 hasAttendees]) {
    goto LABEL_9;
  }
  uint64_t v2 = [v1 selfParticipantStatus];
  if (v2 != 3)
  {
    if ([MEMORY[0x1E4F255B8] needsResponseForParticipantStatus:v2]
      && ![v1 isSelfOrganizedInvitation])
    {
      uint64_t v2 = 2;
      goto LABEL_10;
    }
    if (v2 == 4 && ![v1 isSelfOrganizedInvitation]
      || ([v1 calendar],
          uint64_t v3 = objc_claimAutoreleasedReturnValue(),
          int v4 = [v3 isSuggestedEventCalendar],
          v3,
          v4))
    {
      uint64_t v2 = 1;
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v2 = 0;
  }
LABEL_10:

  return v2;
}

id CUIKDisplayedTitleForCalendar(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [v1 source];
  uint64_t v3 = v2;
  if (v2)
  {
    if ([v2 sourceType] == 5)
    {
      if ([v1 isSuggestedEventCalendar])
      {
        int v4 = CUIKBundle();
        id v5 = v4;
        id v6 = @"Siri Suggestions";
LABEL_8:
        id v10 = [v4 localizedStringForKey:v6 value:&stru_1F187C430 table:0];
        goto LABEL_26;
      }
LABEL_10:
      CUIKBirthdayCalendarLocalizedString();
      id v10 = (id)objc_claimAutoreleasedReturnValue();
      if (v10) {
        goto LABEL_28;
      }
      goto LABEL_27;
    }
    if (([v1 isFacebookBirthdayCalendar] & 1) == 0)
    {
      id v7 = [v1 source];
      id v8 = [v7 constraints];
      int v9 = [v8 isFacebook];

      if (v9)
      {
        int v4 = CUIKBundle();
        id v5 = v4;
        id v6 = @"Facebook Events";
        goto LABEL_8;
      }
    }
    if ([v1 isFacebookBirthdayCalendar]) {
      goto LABEL_10;
    }
    uint64_t v11 = [v3 sourceType];
    uint64_t v12 = [v1 title];
    uint64_t v13 = [v3 externalID];
    id v5 = v12;
    id v14 = v13;
    double v15 = v14;
    if (v11 == 2
      && v14
      && (([v5 isEqualToString:@"Work"] & 1) != 0
       || [v5 isEqualToString:@"Home"]))
    {
      id v16 = +[CUIKAccountsController sharedInstance];
      double v17 = [v16 accountTypeTitleForSourceWithExternalId:v15];

      if (v17 && [v17 isEqualToString:@"iCloud"])
      {
        if ([v5 isEqualToString:@"Work"])
        {
          BOOL v18 = CUIKBundle();
          CFDateRef v19 = v18;
          CFLocaleRef v20 = @"Name of default iCloud 'work' calendar";
          uint64_t v21 = @"Work";
LABEL_22:
          id v10 = [v18 localizedStringForKey:v20 value:v21 table:0];

LABEL_25:
LABEL_26:

          if (v10) {
            goto LABEL_28;
          }
          goto LABEL_27;
        }
        if ([v5 isEqualToString:@"Home"])
        {
          BOOL v18 = CUIKBundle();
          CFDateRef v19 = v18;
          CFLocaleRef v20 = @"Name of default iCloud 'home' calendar";
          uint64_t v21 = @"Home";
          goto LABEL_22;
        }
      }
    }
    id v10 = v5;
    goto LABEL_25;
  }
LABEL_27:
  id v10 = [v1 title];
LABEL_28:
  if (![v10 length])
  {
    double v22 = CUIKBundle();
    uint64_t v23 = [v22 localizedStringForKey:@"Untitled Calendar" value:&stru_1F187C430 table:0];

    id v10 = (id)v23;
  }

  return v10;
}

id CUIKBirthdayCalendarLocalizedString()
{
  uint64_t v0 = CUIKBundle();
  id v1 = [v0 localizedStringForKey:@"Birthdays" value:&stru_1F187C430 table:0];

  return v1;
}

id CUIKDisplayedTitleForSource(void *a1, uint64_t a2)
{
  id v3 = a1;
  int v4 = +[CUIKAccountsController sharedInstance];
  id v5 = [v4 titleForSource:v3 forBeginningOfSentence:a2];

  return v5;
}

id CUIKDisplayedStoreTypeTitleForSource(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    uint64_t v2 = +[CUIKAccountsController sharedInstance];
    id v3 = [v2 accountTypeTitleForSource:v1];
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

BOOL CUIKShouldDisplayNotes(void *a1)
{
  id v1 = a1;
  int v2 = CUIKShouldDisplayNotes___ShouldDisplayNotes;
  if (CUIKShouldDisplayNotes___ShouldDisplayNotes < 0)
  {
    id v3 = (void *)CFPreferencesCopyValue(@"HideNotes", (CFStringRef)*MEMORY[0x1E4F1D3D8], (CFStringRef)*MEMORY[0x1E4F1D3F0], (CFStringRef)*MEMORY[0x1E4F1D3E0]);
    CUIKShouldDisplayNotes___ShouldDisplayNotes = [v3 BOOLValue] ^ 1;

    int v2 = CUIKShouldDisplayNotes___ShouldDisplayNotes;
  }
  BOOL v4 = 0;
  if (v1 && v2 == 1)
  {
    CFCharacterSetRef InvertedSet = (const __CFCharacterSet *)CUIKShouldDisplayNotes___NonWhitespaceSet;
    if (!CUIKShouldDisplayNotes___NonWhitespaceSet)
    {
      CFCharacterSetRef Predefined = CFCharacterSetGetPredefined(kCFCharacterSetWhitespaceAndNewline);
      CFCharacterSetRef InvertedSet = CFCharacterSetCreateInvertedSet((CFAllocatorRef)*MEMORY[0x1E4F1CF80], Predefined);
      CUIKShouldDisplayNotes___NonWhitespaceSet = (uint64_t)InvertedSet;
    }
    v8.length = [(__CFString *)v1 length];
    v8.CFIndex location = 0;
    BOOL v4 = CFStringFindCharacterFromSet(v1, InvertedSet, v8, 0, 0) != 0;
  }

  return v4;
}

void *CUIKNotesFieldHasInlineExchangeAttachments(void *result)
{
  if (result)
  {
    id v1 = result;
    int v2 = _CUIKNotesFieldCIDNotationPattern();
    uint64_t v3 = objc_msgSend(v2, "rangeOfFirstMatchInString:options:range:", v1, 0, 0, objc_msgSend(v1, "length"));

    return (void *)(v3 != 0x7FFFFFFFFFFFFFFFLL);
  }
  return result;
}

id CUIKStripInlineExchangeAttachmentsFromNotes(void *a1)
{
  if (a1)
  {
    id v1 = a1;
    int v2 = _CUIKNotesFieldCIDNotationPattern();
    uint64_t v3 = [v1 length];
    BOOL v4 = CUIKBundle();
    id v5 = [v4 localizedStringForKey:@"<inline attachment not shown>" value:&stru_1F187C430 table:0];
    id v6 = objc_msgSend(v2, "stringByReplacingMatchesInString:options:range:withTemplate:", v1, 0, 0, v3, v5);
  }
  else
  {
    id v6 = 0;
  }

  return v6;
}

uint64_t CUIKGregorianUnitsForRecurrenceTypeAndInterval@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  if (a2 >= 1)
  {
    switch(result)
    {
      case 0:
        *(_DWORD *)(a3 + 8) = a2;
        break;
      case 1:
        *(_DWORD *)(a3 + 8) = 7 * a2;
        break;
      case 2:
        *(_DWORD *)(a3 + 4) = a2;
        break;
      case 3:
        *(_DWORD *)a3 = a2;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t CUIKCheckEventStartDateAgainstOccurrenceCacheBounds()
{
  uint64_t v0 = (const void *)CalCopyTimeZone();
  CalEventOccurrenceCacheCopyBoundsForTimeZone();
  if (v0) {
    CFRelease(v0);
  }
  return 1;
}

uint64_t CUIKStringForRecurrenceRule(void *a1, const char *a2)
{
  return [a1 humanReadableDescriptionWithStartDate:a2 isConcise:1];
}

id CUIKStringForRecurrenceRuleAndDate(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = a1;
  id v5 = objc_opt_new();
  id v6 = [v5 naturalLanguageDescriptionForRecurrenceRule:v4 withStartDate:v3];

  return v6;
}

uint64_t CUIKRecurrenceDateMatchesAnyDaySpecifiedInByDayList(void *a1, void *a2, void *a3)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (v6)
  {
    CFRange v8 = [MEMORY[0x1E4F1C9A8] currentCalendar];
    [v8 setTimeZone:v7];
    long long v21 = 0u;
    long long v22 = 0u;
    long long v19 = 0u;
    long long v20 = 0u;
    id v9 = v5;
    uint64_t v10 = [v9 countByEnumeratingWithState:&v19 objects:v23 count:16];
    if (v10)
    {
      id v18 = v5;
      uint64_t v11 = *(void *)v20;
      while (2)
      {
        for (uint64_t i = 0; i != v10; ++i)
        {
          if (*(void *)v20 != v11) {
            objc_enumerationMutation(v9);
          }
          uint64_t v13 = *(void **)(*((void *)&v19 + 1) + 8 * i);
          id v14 = [v8 components:512 fromDate:v6];
          uint64_t v15 = [v13 dayOfTheWeek];
          uint64_t v16 = [v14 weekday];

          if (v15 == v16)
          {
            uint64_t v10 = 1;
            goto LABEL_12;
          }
        }
        uint64_t v10 = [v9 countByEnumeratingWithState:&v19 objects:v23 count:16];
        if (v10) {
          continue;
        }
        break;
      }
LABEL_12:
      id v5 = v18;
    }
  }
  else
  {
    uint64_t v10 = 0;
  }

  return v10;
}

uint64_t CUIKRecurrenceDateMatchesAnyDaySpecifiedInByMonthDayList(void *a1, void *a2, void *a3)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  if (v6)
  {
    CFRange v8 = [MEMORY[0x1E4F1C9A8] currentCalendar];
    [v8 setTimeZone:v7];
    id v9 = [v8 components:16 fromDate:v6];
    uint64_t v10 = [v9 day];

    [v8 rangeOfUnit:16 inUnit:8 forDate:v6];
    uint64_t v12 = v11;
    long long v23 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    long long v26 = 0u;
    id v13 = v5;
    uint64_t v14 = [v13 countByEnumeratingWithState:&v23 objects:v27 count:16];
    if (v14)
    {
      uint64_t v15 = v14;
      uint64_t v16 = *(void *)v24;
      uint64_t v17 = v12 + 1;
      while (2)
      {
        for (uint64_t i = 0; i != v15; ++i)
        {
          if (*(void *)v24 != v16) {
            objc_enumerationMutation(v13);
          }
          uint64_t v19 = objc_msgSend(*(id *)(*((void *)&v23 + 1) + 8 * i), "integerValue", (void)v23);
          if (v19 < 0)
          {
            if (v19 == v10 || v17 + v19 == v10)
            {
LABEL_17:
              uint64_t v21 = 1;
              goto LABEL_18;
            }
          }
          else if (v19 == v10)
          {
            goto LABEL_17;
          }
        }
        uint64_t v15 = [v13 countByEnumeratingWithState:&v23 objects:v27 count:16];
        if (v15) {
          continue;
        }
        break;
      }
    }
    uint64_t v21 = 0;
LABEL_18:
  }
  else
  {
    uint64_t v21 = 0;
  }

  return v21;
}

uint64_t CUIKRecurrenceMonthMatchesAnyMonthSpecifiedInByMonthList(void *a1, void *a2, void *a3)
{
  if (!a2) {
    return 0;
  }
  id v5 = (void *)MEMORY[0x1E4F1C9A8];
  id v6 = a3;
  id v7 = a2;
  id v8 = a1;
  id v9 = [v5 currentCalendar];
  [v9 setTimeZone:v6];

  uint64_t v10 = NSNumber;
  uint64_t v11 = [v9 components:8 fromDate:v7];

  uint64_t v12 = objc_msgSend(v10, "numberWithInteger:", objc_msgSend(v11, "month"));

  uint64_t v13 = [v8 containsObject:v12];
  return v13;
}

id CUIKDisplayStringForAvailability(uint64_t a1)
{
  switch(a1)
  {
    case -1:
    case 0:
      id v1 = CUIKBusyLocalizedString();
      break;
    case 1:
      int v2 = CUIKBundle();
      id v3 = v2;
      id v4 = @"Free";
      goto LABEL_6;
    case 2:
      int v2 = CUIKBundle();
      id v3 = v2;
      id v4 = @"Tentative";
      goto LABEL_6;
    case 3:
      int v2 = CUIKBundle();
      id v3 = v2;
      id v4 = @"Out of office";
LABEL_6:
      id v1 = [v2 localizedStringForKey:v4 value:&stru_1F187C430 table:0];

      break;
    default:
      break;
  }

  return v1;
}

id CUIKBusyLocalizedString()
{
  uint64_t v0 = CUIKBundle();
  id v1 = [v0 localizedStringForKey:@"Busy" value:&stru_1F187C430 table:0];

  return v1;
}

id CUIKDisplayStringForTravelTimeUsingShortFormat(int a1, double a2)
{
  id v4 = CUIKBundle();
  id v5 = [v4 localizedStringForKey:@"None" value:&stru_1F187C430 table:0];
  id v6 = CUIKDurationStringForTimeInterval(0, v5, a1, 0, 1, a2);

  return v6;
}

id CUIKDisplayStringTravelTimeAndDuration(double a1)
{
  id v1 = CUIKDisplayStringForTravelTimeUsingShortFormat(1, a1);
  int v2 = CUIKDisplayStringTravelTimeFormat(v1);

  return v2;
}

id CUIKDisplayStringTravelTimeFormat(void *a1)
{
  id v1 = a1;
  int v2 = CUIKBundle();
  id v3 = [v2 localizedStringForKey:@"%@ travel time" value:&stru_1F187C430 table:0];

  id v4 = objc_msgSend(NSString, "localizedStringWithFormat:", v3, v1);

  return v4;
}

id CUIKDisplayStringTravelToLocationWithRoutingModeAndDuration(void *a1, uint64_t a2, double a3)
{
  id v5 = a1;
  if (a3 <= 0.0)
  {
    uint64_t v10 = 0;
  }
  else
  {
    id v6 = CUIKDisplayStringForTravelTimeUsingShortFormat(1, a3);
    id v7 = v5;
    if ([v7 length])
    {
      id v8 = [v7 componentsSeparatedByString:@"\n"];
      id v9 = [v8 firstObject];
    }
    else
    {
      id v9 = 0;
    }
    if ([v9 length])
    {
      uint64_t v11 = [v9 componentsSeparatedByString:@","];
      uint64_t v12 = [v11 firstObject];
    }
    else
    {
      uint64_t v12 = 0;
    }

    if (v12)
    {
      uint64_t v13 = CUIKBundle();
      uint64_t v14 = [v13 localizedStringForKey:@"%@ from %@ (%@)" value:&stru_1F187C430 table:0];

      switch(a2)
      {
        case -1:
        case 0:
          uint64_t v15 = NSString;
          uint64_t v16 = CUIKBundle();
          uint64_t v17 = [v16 localizedStringForKey:@"Travel to %@ (%@)" value:&stru_1F187C430 table:0];
          objc_msgSend(v15, "localizedStringWithFormat:", v17, v12, v6, v22);
          goto LABEL_19;
        case 1:
          id v18 = NSString;
          uint64_t v19 = CUIKBundle();
          uint64_t v16 = v19;
          long long v20 = @"drive";
          goto LABEL_18;
        case 2:
          id v18 = NSString;
          uint64_t v19 = CUIKBundle();
          uint64_t v16 = v19;
          long long v20 = @"walk";
          goto LABEL_18;
        case 3:
          id v18 = NSString;
          uint64_t v19 = CUIKBundle();
          uint64_t v16 = v19;
          long long v20 = @"take transit";
          goto LABEL_18;
        case 4:
          id v18 = NSString;
          uint64_t v19 = CUIKBundle();
          uint64_t v16 = v19;
          long long v20 = @"bike";
LABEL_18:
          uint64_t v17 = [v19 localizedStringForKey:v20 value:&stru_1F187C430 table:0];
          objc_msgSend(v18, "localizedStringWithFormat:", v14, v17, v12, v6);
          uint64_t v10 = LABEL_19:;

          break;
        default:
          uint64_t v10 = 0;
          break;
      }
    }
    else
    {
      uint64_t v10 = CUIKDisplayStringTravelTimeFormat(v6);
    }
  }

  return v10;
}

uint64_t CUIKDayRangeForOccurenceDates(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = a1;
  id v8 = a2;
  id v9 = a3;
  id v10 = a4;
  [v7 absoluteTime];
  double v12 = v11;
  [v9 absoluteTime];
  if (v12 < v13)
  {
    id v14 = v9;

    id v7 = v14;
  }
  [v8 absoluteTime];
  double v16 = v15;
  [v10 absoluteTime];
  if (v16 > v17)
  {
    id v18 = v10;

    id v8 = v18;
  }
  uint64_t v19 = [v7 calendarDateForDay];
  uint64_t v20 = [v7 differenceInDays:v9];
  [v8 differenceInDays:v19];

  return v20;
}

uint64_t CUIKCompareEKCalendars(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = +[CUIKAccountsController sharedInstance];
  id v6 = [v3 source];
  int v7 = [v5 sortOrderForSource:v6];

  id v8 = +[CUIKAccountsController sharedInstance];
  id v9 = [v4 source];
  int v10 = [v8 sortOrderForSource:v9];

  if (v7 == v10)
  {
    double v11 = [v3 source];
    double v12 = [v11 sourceIdentifier];
    double v13 = [v4 source];
    id v14 = [v13 sourceIdentifier];
    uint64_t v15 = [v12 compare:v14];

    if (!v15)
    {
      int v16 = [v3 isSharingInvitation];
      int v17 = [v4 isSharingInvitation];
      if ((v16 & 1) == 0 && v17)
      {
LABEL_13:
        uint64_t v15 = -1;
        goto LABEL_17;
      }
      if ((v16 ^ 1 | v17) != 1) {
        goto LABEL_19;
      }
      int v18 = [v3 displayOrder];
      int v19 = [v4 displayOrder];
      if (v18 == -1) {
        int v20 = 0x7FFFFFFF;
      }
      else {
        int v20 = v18;
      }
      if (v19 == -1) {
        int v21 = 0x7FFFFFFF;
      }
      else {
        int v21 = v19;
      }
      if (v20 < v21) {
        goto LABEL_13;
      }
      if (v20 > v21)
      {
LABEL_19:
        uint64_t v15 = 1;
        goto LABEL_17;
      }
      long long v23 = [v3 title];
      uint64_t v24 = [v4 title];
      long long v25 = (void *)v24;
      if (v23 && v24)
      {
        uint64_t v15 = [v23 localizedCompare:v24];
      }
      else if (v23)
      {
        uint64_t v15 = -1;
      }
      else
      {
        uint64_t v15 = 1;
      }
    }
  }
  else if (v7 < v10)
  {
    uint64_t v15 = -1;
  }
  else
  {
    uint64_t v15 = 1;
  }
LABEL_17:

  return v15;
}

uint64_t CUIKCompareEKEventsAsReminders(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v3;
  id v6 = v4;
  LODWORD(v4) = [v6 completed];
  if (v4 != [v5 completed])
  {
    int v7 = [v6 completed];
LABEL_5:
    BOOL v9 = v7 == 0;
    goto LABEL_6;
  }
  int v8 = objc_msgSend(v5, "CUIK_reminderShouldBeEditable");
  if (v8 != objc_msgSend(v6, "CUIK_reminderShouldBeEditable"))
  {
    int v7 = objc_msgSend(v5, "CUIK_reminderShouldBeEditable");
    goto LABEL_5;
  }
  double v12 = [v5 startDate];
  double v13 = [v6 startDate];
  char v14 = [v12 isEqualToDate:v13];

  if (v14)
  {
    uint64_t v15 = [v5 uniqueID];
    int v16 = [v6 uniqueID];
    uint64_t v10 = [v15 compare:v16];

    goto LABEL_9;
  }
  int v17 = [v5 startDate];
  int v18 = [v6 startDate];
  int v19 = [v17 isBeforeDate:v18];

  BOOL v9 = v19 == 0;
LABEL_6:
  if (v9) {
    uint64_t v10 = 1;
  }
  else {
    uint64_t v10 = -1;
  }
LABEL_9:

  return v10;
}

id CUIKGetAttributedStringForEventDetailWithURL(void *a1)
{
  v39[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  int v2 = [MEMORY[0x1E4F29088] componentsWithURL:v1 resolvingAgainstBaseURL:1];
  id v3 = [v2 scheme];

  if (!v3)
  {
    id v4 = [v1 absoluteString];
    uint64_t v5 = [v4 length];
    if (v5)
    {
      uint64_t v6 = v5;
      int v7 = (void *)[objc_alloc(MEMORY[0x1E4F5F160]) initWithScannerType:1 passiveIntent:1];
      int v8 = objc_msgSend(MEMORY[0x1E4F5F158], "scanString:range:configuration:", v4, 0, v6, v7);
      BOOL v9 = [v8 firstObject];

      if (v9
        && ![v9 urlificationRange]
        && v10 == v6
        && [v9 category] - 1 <= 1)
      {
        double v11 = [v9 url];
        if (v11)
        {
          uint64_t v12 = [MEMORY[0x1E4F29088] componentsWithURL:v11 resolvingAgainstBaseURL:1];

          int v2 = (void *)v12;
        }
      }
    }
    double v13 = [v2 scheme];

    if (v13) {
      goto LABEL_16;
    }
    [v2 setScheme:@"http"];
    char v14 = [v2 path];
    if ([v14 length])
    {
      uint64_t v15 = [v2 path];
      char v16 = [v15 hasPrefix:@"//"];

      if (v16)
      {
LABEL_16:

        goto LABEL_17;
      }
      char v14 = [v2 path];
      int v17 = [@"//" stringByAppendingString:v14];
      [v2 setPath:v17];
    }
    goto LABEL_16;
  }
LABEL_17:
  int v18 = objc_msgSend(v1, "_lp_userVisibleString");
  int v19 = [v2 scheme];
  int v20 = [v19 lowercaseString];

  int v21 = [v2 URL];
  uint64_t v22 = [v21 absoluteString];

  if ([v20 isEqualToString:@"message"])
  {
    long long v23 = CUIKBundle();
    uint64_t v24 = v23;
    long long v25 = @"Show in Mail";
  }
  else if ([v20 isEqualToString:@"sms"])
  {
    long long v23 = CUIKBundle();
    uint64_t v24 = v23;
    long long v25 = @"Show in Messages";
  }
  else
  {
    if (!objc_msgSend(v22, "cal_isWalletURL")) {
      goto LABEL_24;
    }
    long long v23 = CUIKBundle();
    uint64_t v24 = v23;
    long long v25 = @"Show in Wallet";
  }
  uint64_t v26 = [v23 localizedStringForKey:v25 value:&stru_1F187C430 table:0];

  int v18 = (void *)v26;
LABEL_24:
  if (v18)
  {
    uint64_t v27 = [v2 URL];

    id v28 = objc_alloc(MEMORY[0x1E4F28B18]);
    if (v27)
    {
      uint64_t v38 = *MEMORY[0x1E4FB0720];
      v29 = [v2 URL];
      v39[0] = v29;
      uint64_t v30 = (void *)MEMORY[0x1E4F1C9E8];
      v31 = (void **)v39;
      v32 = &v38;
    }
    else
    {
      uint64_t v36 = *MEMORY[0x1E4FB0700];
      v29 = [MEMORY[0x1E4FB1618] secondaryLabelColor];
      v37 = v29;
      uint64_t v30 = (void *)MEMORY[0x1E4F1C9E8];
      v31 = &v37;
      v32 = &v36;
    }
    v34 = [v30 dictionaryWithObjects:v31 forKeys:v32 count:1];
    uint64_t v33 = (void *)[v28 initWithString:v18 attributes:v34];
  }
  else
  {
    uint64_t v33 = 0;
  }

  return v33;
}

id _CUIKNotesFieldCIDNotationPattern()
{
  if (_CUIKNotesFieldCIDNotationPattern_onceToken != -1) {
    dispatch_once(&_CUIKNotesFieldCIDNotationPattern_onceToken, &__block_literal_global_124);
  }
  uint64_t v0 = (void *)_CUIKNotesFieldCIDNotationPattern_cidNotationPattern;

  return v0;
}

void _CUIKDateDescriptionGeneratorDateTimeFormatChanged()
{
  id v0 = +[CUIKDateDescriptionGenerator sharedGenerator];
  [v0 _initializeFormatters];
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__9(uint64_t a1)
{
}

__CFString *gylphForCUIKParticipantDisplayImageState(int a1)
{
  if ((a1 - 1) > 6) {
    return @"?⃝";
  }
  else {
    return off_1E636AB88[a1 - 1];
  }
}

__CFString *gylphNameForCUIKParticipantDisplayImageState(int a1)
{
  if ((a1 - 1) > 6) {
    return @"questionmark.circle";
  }
  else {
    return off_1E636ABC0[a1 - 1];
  }
}

uint64_t stateForParticipationStatus(uint64_t a1)
{
  if ((unint64_t)(a1 - 2) >= 3) {
    return 6;
  }
  else {
    return (a1 + 1);
  }
}

id colorForParticipationState(void *a1)
{
  switch((int)a1)
  {
    case 0:
    case 1:
    case 2:
    case 6:
      a1 = objc_msgSend(MEMORY[0x1E4FB1618], "systemGrayColor", v1);
      goto LABEL_9;
    case 3:
      a1 = objc_msgSend(MEMORY[0x1E4FB1618], "systemGreenColor", v1);
      goto LABEL_9;
    case 4:
    case 7:
      a1 = objc_msgSend(MEMORY[0x1E4FB1618], "systemRedColor", v1);
      goto LABEL_9;
    case 5:
      a1 = objc_msgSend(MEMORY[0x1E4FB1618], "systemOrangeColor", v1);
LABEL_9:
      break;
    default:
      break;
  }
  return a1;
}

id glyphWithAttributes(int a1, void *a2)
{
  if ((a1 - 1) > 6) {
    uint64_t v2 = @"questionmark.circle";
  }
  else {
    uint64_t v2 = off_1E636ABC0[a1 - 1];
  }
  id v3 = (void *)MEMORY[0x1E4FB1830];
  uint64_t v4 = *MEMORY[0x1E4FB06F8];
  id v5 = a2;
  uint64_t v6 = [v5 objectForKeyedSubscript:v4];
  int v7 = [v3 configurationWithFont:v6 scale:1];

  int v8 = [MEMORY[0x1E4FB1818] systemImageNamed:v2 withConfiguration:v7];
  BOOL v9 = [v8 imageWithRenderingMode:2];

  uint64_t v10 = objc_opt_new();
  [v10 setImage:v9];
  double v11 = [MEMORY[0x1E4F28B18] attributedStringWithAttachment:v10];
  uint64_t v12 = (void *)[v11 mutableCopy];
  objc_msgSend(v12, "addAttributes:range:", v5, 0, objc_msgSend(v12, "length"));

  return v12;
}

id attributedStateGlyph(void *a1, void *a2)
{
  v9[2] = *MEMORY[0x1E4F143B8];
  v8[0] = *MEMORY[0x1E4FB0700];
  id v3 = a2;
  uint64_t v4 = colorForParticipationState(a1);
  v8[1] = *MEMORY[0x1E4FB06F8];
  v9[0] = v4;
  v9[1] = v3;
  id v5 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v9 forKeys:v8 count:2];

  uint64_t v6 = glyphWithAttributes((int)a1, v5);

  return v6;
}

id attributedStatusGlyph(uint64_t a1, void *a2)
{
  if ((unint64_t)(a1 - 2) >= 3) {
    uint64_t v2 = 6;
  }
  else {
    uint64_t v2 = (a1 + 1);
  }
  return attributedStateGlyph((void *)v2, a2);
}

id CUIKDescriptorForRequiredKeysForLabeledDisplayString()
{
  v4[2] = *MEMORY[0x1E4F143B8];
  id v0 = [MEMORY[0x1E4F1B910] descriptorForRequiredKeysForStyle:0];
  uint64_t v1 = *MEMORY[0x1E4F1AFA8];
  v4[0] = v0;
  v4[1] = v1;
  uint64_t v2 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:2];

  return v2;
}

void CUIKDecomposedAttendeeName(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = +[CUIKAttendeeUtils _filteredAttendeeName:parenthesizedPart:](CUIKAttendeeUtils, "_filteredAttendeeName:parenthesizedPart:", a1);
  uint64_t v6 = 0;
  id v7 = 0;
  objc_msgSend(v5, "CUIK_attendeeFirstName:middleName:lastName:extension:", a2, &v7, a3, &v6);
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return NSRequestConcreteImplementation();
}

void sub_1BDF60F0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__10(uint64_t a1)
{
}

void _initStandardTimeFormatter()
{
  if (!__standardTimeFormatter)
  {
    CFLocaleRef v0 = CFLocaleCopyCurrent();
    __standardTimeFormatter = (uint64_t)CFDateFormatterCreate(0, v0, kCFDateFormatterNoStyle, kCFDateFormatterShortStyle);
    CFRelease(v0);
  }
}

void _initShortDayFormatter()
{
  if (!__shortDayFormatter)
  {
    CFLocaleRef v0 = CFLocaleCopyCurrent();
    __shortDayFormatter = (uint64_t)CFDateFormatterCreate(0, v0, kCFDateFormatterShortStyle, kCFDateFormatterNoStyle);
    CFRelease(v0);
  }
}

void _initFullDayFormatter()
{
  if (!__fullDayFormatter)
  {
    CFLocaleRef v0 = CFLocaleCopyCurrent();
    __fullDayFormatter = (uint64_t)CFDateFormatterCreate(0, v0, kCFDateFormatterFullStyle, kCFDateFormatterNoStyle);
    CFRelease(v0);
  }
}

void _initTimeWithoutDesignatorFormatter()
{
  if (!__timeWithoutDesignatorFormatter)
  {
    CFLocaleRef v0 = CFLocaleCopyCurrent();
    uint64_t v1 = CFDateFormatterCreate(0, v0, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
    __timeWithoutDesignatorFormatter = (uint64_t)v1;
    CFStringRef v2 = (const __CFString *)CPDateFormatStringForFormatType();
    CFDateFormatterSetFormat(v1, v2);
    CFRelease(v0);
  }
}

id _CUIKTimeZoneForChoice(void *a1)
{
  if (a1 == (void *)2)
  {
    a1 = CFTimeZoneCreateWithName(0, @"GMT", 1u);
  }
  else if (a1 == (void *)1)
  {
    a1 = (void *)CalCopyTimeZone();
  }
  else if (!a1)
  {
    a1 = (void *)CalCopySystemTimeZone();
  }

  return a1;
}

void CUIKDetermineWeekStart()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  _CUIKDetermineWeekStart();

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
}

id CUIKTimeZoneForChoice(void *a1)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }

  return _CUIKTimeZoneForChoice(a1);
}

uint64_t CUIKCurrentLocaleRequiresUnabbrevatedMonthNames()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  if (CUIKCurrentLocaleRequiresUnabbrevatedMonthNames_hasChecked != 1
    || __languagesRequiringUnabbreviatedMonthNames == 0)
  {
    uint64_t v1 = [MEMORY[0x1E4F1CA20] currentLocale];
    CFStringRef v2 = [v1 objectForKey:*MEMORY[0x1E4F1C438]];

    id v3 = (void *)__languagesRequiringUnabbreviatedMonthNames;
    if (!__languagesRequiringUnabbreviatedMonthNames)
    {
      __languagesRequiringUnabbreviatedMonthNames = (uint64_t)&unk_1F18921F8;

      id v3 = (void *)__languagesRequiringUnabbreviatedMonthNames;
    }
    CUIKCurrentLocaleRequiresUnabbrevatedMonthNames_usesFullLengthMonthNames = [v3 containsObject:v2];
    CUIKCurrentLocaleRequiresUnabbrevatedMonthNames_hasChecked = 1;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  return CUIKCurrentLocaleRequiresUnabbrevatedMonthNames_usesFullLengthMonthNames;
}

uint64_t CUIKCurrentLocaleRequiresIndianLanguageAdjustments()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  if (CUIKCurrentLocaleRequiresIndianLanguageAdjustments_hasChecked != 1
    || __languagesAlwaysRequiringIndianLanguageAdjustments == 0)
  {
    uint64_t v1 = [MEMORY[0x1E4F1CA20] currentLocale];
    CFStringRef v2 = [v1 objectForKey:*MEMORY[0x1E4F1C438]];

    id v3 = (void *)__languagesAlwaysRequiringIndianLanguageAdjustments;
    if (!__languagesAlwaysRequiringIndianLanguageAdjustments)
    {
      __languagesAlwaysRequiringIndianLanguageAdjustments = (uint64_t)&unk_1F1892210;

      id v3 = &unk_1F1892210;
    }
    CUIKCurrentLocaleRequiresIndianLanguageAdjustments_usesIndianLanguageAdjustments = [v3 containsObject:v2];
    CUIKCurrentLocaleRequiresIndianLanguageAdjustments_hasChecked = 1;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  return CUIKCurrentLocaleRequiresIndianLanguageAdjustments_usesIndianLanguageAdjustments;
}

id CUIKStringVeryShortAbbreviationForMonth(int a1)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFStringRef v2 = (void *)__MonthVeryShortAbbreviationsStandalone;
  if (!__MonthVeryShortAbbreviationsStandalone)
  {
    id v3 = (__CFDateFormatter *)_SharedDateFormatter();
    CFTypeRef v4 = CFDateFormatterCopyProperty(v3, (CFDateFormatterKey)*MEMORY[0x1E4F1D118]);
    id v5 = (void *)__MonthVeryShortAbbreviationsStandalone;
    __MonthVeryShortAbbreviationsStandalone = (uint64_t)v4;

    CFStringRef v2 = (void *)__MonthVeryShortAbbreviationsStandalone;
  }
  if ([v2 count] >= (unint64_t)a1)
  {
    uint64_t v6 = [(id)__MonthVeryShortAbbreviationsStandalone objectAtIndex:a1 - 1];
  }
  else
  {
    uint64_t v6 = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v6;
}

id CUIKStringAbbreviationForMonth(int a1)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFStringRef v2 = (void *)__MonthAbbreviationsStandalone;
  if (!__MonthAbbreviationsStandalone)
  {
    id v3 = (__CFDateFormatter *)_SharedDateFormatter();
    CFTypeRef v4 = CFDateFormatterCopyProperty(v3, (CFDateFormatterKey)*MEMORY[0x1E4F1D0C0]);
    id v5 = (void *)__MonthAbbreviationsStandalone;
    __MonthAbbreviationsStandalone = (uint64_t)v4;

    CFStringRef v2 = (void *)__MonthAbbreviationsStandalone;
  }
  if ([v2 count] >= (unint64_t)a1)
  {
    uint64_t v6 = [(id)__MonthAbbreviationsStandalone objectAtIndex:a1 - 1];
  }
  else
  {
    uint64_t v6 = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v6;
}

id CUIKStringForDayOfWeekNotStandalone(unsigned int a1)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFStringRef v2 = (__CFDateFormatter *)_SharedDateFormatter();
  id v3 = (void *)CFDateFormatterCopyProperty(v2, (CFDateFormatterKey)*MEMORY[0x1E4F1D130]);
  if ([v3 count] <= (unint64_t)a1)
  {
    CFTypeRef v4 = 0;
  }
  else
  {
    CFTypeRef v4 = [v3 objectAtIndex:a1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v4;
}

id CUIKWeekdayAbbreviations()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFLocaleRef v0 = _CUIKWeekdayAbbreviations();
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v0;
}

id _CUIKWeekdayAbbreviations()
{
  CFLocaleRef v0 = (void *)__WeekdayAbbreviations;
  if (!__WeekdayAbbreviations)
  {
    uint64_t v1 = (__CFDateFormatter *)_SharedDateFormatter();
    CFTypeRef v2 = CFDateFormatterCopyProperty(v1, (CFDateFormatterKey)*MEMORY[0x1E4F1D0D0]);
    id v3 = (void *)__WeekdayAbbreviations;
    __WeekdayAbbreviations = (uint64_t)v2;

    CFLocaleRef v0 = (void *)__WeekdayAbbreviations;
  }
  id v4 = v0;

  return v4;
}

id CUIKStringAbbreviationForDayOfWeek(unsigned int a1)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFTypeRef v2 = _CUIKWeekdayAbbreviations();
  if ([v2 count] <= (unint64_t)a1)
  {
    id v3 = 0;
  }
  else
  {
    id v3 = [v2 objectAtIndexedSubscript:a1];
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v3;
}

id CUIKStringForHourWithoutDesignator(unsigned int a1)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  if (!__HourSymbolsWithoutDesignator)
  {
    int v2 = __Show24Hours;
    if (!__Show24Hours)
    {
      _CUIKDetermineShortTimeParameters();
      int v2 = __Show24Hours;
    }
    if (v2 == 2)
    {
      _initStandardTimeFormatter();
      id v3 = (__CFDateFormatter *)__standardTimeFormatter;
      CFRetain((CFTypeRef)__standardTimeFormatter);
      if (!v3) {
        goto LABEL_19;
      }
      goto LABEL_14;
    }
    CPDateFormatStringForFormatType();
    id v4 = (__CFString *)objc_claimAutoreleasedReturnValue();
    if (v4)
    {
      id v5 = (__CFDateFormatter *)_SharedDateFormatter();
      id v3 = v5;
      if (v5)
      {
        CFRetain(v5);
        CFDateFormatterSetFormat(v3, v4);
      }
    }
    else
    {
      id v3 = 0;
    }

    if (v3)
    {
LABEL_14:
      uint64_t v6 = (const void *)CalTimeZoneCopyCFTimeZone();
      CFStringRef v7 = (const __CFString *)*MEMORY[0x1E4F1D0F8];
      CFDateFormatterSetProperty(v3, (CFStringRef)*MEMORY[0x1E4F1D0F8], v6);
      uint64_t v8 = 24;
      BOOL v9 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:24];
      uint64_t v10 = 0x50B000007D7;
      do
      {
        CalGregorianDateGetAbsoluteTimeWithFallbackToDefaultTimeZone();
        CFStringRef StringWithAbsoluteTime = (__CFString *)CFDateFormatterCreateStringWithAbsoluteTime(0, v3, v11);
        [v9 addObject:StringWithAbsoluteTime];

        v10 += 0x1000000000000;
        --v8;
      }
      while (v8);
      if (v6) {
        CFRelease(v6);
      }
      double v13 = (const void *)CalCopySystemTimeZone();
      CFDateFormatterSetProperty(v3, v7, v13);
      CFRelease(v13);
      CFRelease(v3);
      char v14 = (void *)__HourSymbolsWithoutDesignator;
      __HourSymbolsWithoutDesignator = (uint64_t)v9;
    }
  }
LABEL_19:
  if (a1 == 24) {
    uint64_t v15 = 0;
  }
  else {
    uint64_t v15 = a1;
  }
  char v16 = [(id)__HourSymbolsWithoutDesignator objectAtIndex:v15];
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v16;
}

id CUIKStringForDate(void *a1, int a2)
{
  id v3 = a1;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v4 = (void *)CalCopyTimeZone();
  id v5 = v3;
  id v6 = v4;
  if (a2) {
    CFStringRef v7 = &__dateFormatterWithYear;
  }
  else {
    CFStringRef v7 = &__dateFormatterWithoutYear;
  }
  uint64_t v8 = (__CFDateFormatter *)*v7;
  if (!*v7)
  {
    CFLocaleRef v9 = CFLocaleCopyCurrent();
    uint64_t v10 = CFDateFormatterCreate(0, v9, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
    *CFStringRef v7 = (uint64_t)v10;
    CFStringRef v11 = (const __CFString *)CPDateFormatStringForFormatType();
    CFDateFormatterSetFormat(v10, v11);
    CFRelease(v9);
    uint64_t v8 = (__CFDateFormatter *)*v7;
  }
  uint64_t v12 = _stringForFormatterInTimeZone(v5, v8, v6, 0);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v12;
}

id CUIKShortStringForDateWithMonthAndYear(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v3 = (__CFDateFormatter *)_SharedDateFormatter();
  CFStringRef v4 = (const __CFString *)CPDateFormatStringForFormatType();
  CFDateFormatterSetFormat(v3, v4);
  id v5 = (id)CalCopyTimeZone();
  id v6 = _stringForFormatterInTimeZone(v2, v3, v5, 0);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v6;
}

__CFString *CUIKStringForDateWithCommaAndYear(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  CFDateRef v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  _initDateFormatterWithCommaAndYear();
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, (CFDateFormatterRef)__dateFormatterWithCommaAndYear, v2);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

__CFString *CUIKLongStringForDateWithCommaAndYear(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  CFDateRef v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  _initLongDateFormatterWithCommaAndYear();
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, (CFDateFormatterRef)__longDateFormatterWithCommaAndYear, v2);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

__CFString *CUIKStringForDateComponents(void *a1, void *a2, int a3)
{
  id v5 = a1;
  id v6 = a2;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  if (a3) {
    CFStringRef v7 = &__dateFormatterWithYear;
  }
  else {
    CFStringRef v7 = &__dateFormatterWithoutYear;
  }
  uint64_t v8 = (__CFDateFormatter *)*v7;
  if (!*v7)
  {
    CFLocaleRef v9 = CFLocaleCopyCurrent();
    uint64_t v10 = CFDateFormatterCreate(0, v9, kCFDateFormatterNoStyle, kCFDateFormatterNoStyle);
    *CFStringRef v7 = (uint64_t)v10;
    CFStringRef v11 = (const __CFString *)CPDateFormatStringForFormatType();
    CFDateFormatterSetFormat(v10, v11);
    uint64_t v12 = [v6 timeZone];

    if (v12)
    {
      double v13 = (__CFDateFormatter *)*v7;
      CFStringRef v14 = (const __CFString *)*MEMORY[0x1E4F1D0F8];
      uint64_t v15 = [v6 timeZone];
      CFDateFormatterSetProperty(v13, v14, v15);
    }
    CFRelease(v9);
    uint64_t v8 = (__CFDateFormatter *)*v7;
  }
  CFDateRef v16 = [v6 dateFromComponents:v5];
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, v8, v16);
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

id CUIKDayOfMonthStringForDate(void *a1)
{
  uint64_t v1 = (objc_class *)MEMORY[0x1E4F28C10];
  id v2 = a1;
  id v3 = objc_alloc_init(v1);
  [v3 setDateFormat:@"d"];
  CFStringRef v4 = [v3 stringFromDate:v2];

  return v4;
}

__CFString *CUIKShortStringForDay(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  CFDateRef v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  _initShortDayFormatter();
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, (CFDateFormatterRef)__shortDayFormatter, v2);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

__CFString *CUIKLongStringForWeekday(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  CFDateRef v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v3 = (__CFDateFormatter *)_SharedDateFormatter();
  CFStringRef v4 = (const __CFString *)CPDateFormatStringForFormatType();
  CFDateFormatterSetFormat(v3, v4);
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, v3, v2);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

id CUIKStringForMonth(void *a1)
{
  id v1 = a1;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFDateRef v2 = (void *)__monthNameFormatter;
  if (!__monthNameFormatter)
  {
    id v3 = objc_alloc_init(MEMORY[0x1E4F28C10]);
    CFStringRef v4 = (void *)__monthNameFormatter;
    __monthNameFormatter = (uint64_t)v3;

    [(id)__monthNameFormatter setDateFormat:@"LLL"];
    id v5 = (void *)__monthNameFormatter;
    id v6 = (void *)CalCopyTimeZone();
    [v5 setTimeZone:v6];

    CFDateRef v2 = (void *)__monthNameFormatter;
  }
  CFStringRef v7 = [v2 stringFromDate:v1];
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v7;
}

id CUIKLongStringForMonth(void *a1)
{
  return CUIKLongStringForMonthWithFormattingContext(a1, 0);
}

id CUIKLongStringForMonthWithFormattingContext(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFStringRef v4 = (void *)__longMonthNameFormatter;
  if (!__longMonthNameFormatter)
  {
    id v5 = objc_alloc_init(MEMORY[0x1E4F28C10]);
    id v6 = (void *)__longMonthNameFormatter;
    __longMonthNameFormatter = (uint64_t)v5;

    [(id)__longMonthNameFormatter setDateFormat:@"LLLL"];
    CFStringRef v7 = (void *)__longMonthNameFormatter;
    uint64_t v8 = (void *)CalCopyTimeZone();
    [v7 setTimeZone:v8];

    CFStringRef v4 = (void *)__longMonthNameFormatter;
  }
  [v4 setFormattingContext:a2];
  CFLocaleRef v9 = [(id)__longMonthNameFormatter stringFromDate:v3];
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v9;
}

__CFString *CUIKShortStringMonthAndDay(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  CFDateRef v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v3 = (__CFDateFormatter *)_SharedDateFormatter();
  CFStringRef v4 = (const __CFString *)CPDateFormatStringForFormatType();
  CFDateFormatterSetFormat(v3, v4);
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, v3, v2);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

__CFString *CUIKAbbreviatedStringMonthAndDay(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  CFDateRef v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v3 = (__CFDateFormatter *)_SharedDateFormatter();
  CFStringRef v4 = (const __CFString *)CPDateFormatStringForFormatType();
  CFDateFormatterSetFormat(v3, v4);
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, v3, v2);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

id CUIKStringForDateAndDayOfWeekInTimezone(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = RegisterForInvalidation_onceToken;
  id v6 = a3;
  id v7 = a1;
  if (v5 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  uint64_t v8 = _CUIKStringForDateAndDayOfWeekInTimezone(v7, a2, v6);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v8;
}

id _CUIKStringForDateAndDayOfWeekInTimezone(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  id v6 = (__CFDateFormatter *)_SharedDateFormatter();
  CFStringRef v7 = (const __CFString *)CPDateFormatStringForFormatType();
  CFDateFormatterSetFormat(v6, v7);
  uint64_t v8 = _stringForFormatterInTimeZone(v5, v6, v4, 0);

  return v8;
}

id CUIKStringForDateAndDayOfWeekSystemTime(void *a1, uint64_t a2)
{
  uint64_t v3 = RegisterForInvalidation_onceToken;
  id v4 = a1;
  if (v3 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v5 = (void *)CalCopySystemTimeZone();
  id v6 = _CUIKStringForDateAndDayOfWeekInTimezone(v4, a2, v5);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v6;
}

id CUIKStringForDateAndDayOfWeekInCalendarTimezone(void *a1, uint64_t a2)
{
  uint64_t v3 = RegisterForInvalidation_onceToken;
  id v4 = a1;
  if (v3 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v5 = (void *)CalCopyTimeZone();
  id v6 = _CUIKStringForDateAndDayOfWeekInTimezone(v4, a2, v5);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v6;
}

id CUIKStringForDateAndDayOfWeekInCalendarTimezoneWithFormattingContext(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = RegisterForInvalidation_onceToken;
  id v5 = a1;
  if (v4 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v6 = (__CFDateFormatter *)_SharedDateFormatter();
  CFStringRef v7 = (const __CFString *)CPDateFormatStringForFormatType();
  CFDateFormatterSetFormat(v6, v7);
  id v8 = (id)CalCopyTimeZone();
  CFLocaleRef v9 = _stringForFormatterInTimeZone(v5, v6, v8, a3);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v9;
}

id CUIKLongDayStringForDateNoYear(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  uint64_t v3 = (__CFDateFormatter *)_SharedDateFormatter();
  CFStringRef v4 = (const __CFString *)CPDateFormatStringForFormatType();
  CFDateFormatterSetFormat(v3, v4);
  id v5 = (id)CalCopyTimeZone();
  id v6 = _stringForFormatterInTimeZone(v2, v3, v5, 0);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v6;
}

id CUIKLongDayStringForDate(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  uint64_t v3 = (__CFDateFormatter *)_SharedDateFormatter();
  CFStringRef v4 = (const __CFString *)CPDateFormatStringForFormatType();
  CFDateFormatterSetFormat(v3, v4);
  id v5 = (id)CalCopyTimeZone();
  id v6 = _stringForFormatterInTimeZone(v2, v3, v5, 0);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v6;
}

id CUIKAbbreviatedEmDashDayStringForDate(void *a1, char a2)
{
  id v3 = a1;
  BOOL v4 = CUIKIsWeekdayNameFirst();
  id v5 = CUIKCalendar();
  id v6 = [v5 components:512 fromDate:v3];

  CFStringRef v7 = CUIKStringAbbreviationForDayOfWeek([v6 weekday] - 1);
  if (a2) {
    CUIKStringMonthDayYearWithComma(v3);
  }
  else {
  id v8 = CUIKAbbreviatedStringMonthAndDay(v3);
  }

  CFLocaleRef v9 = NSString;
  uint64_t v10 = CUIKBundle();
  CFStringRef v11 = v10;
  if (v4)
  {
    uint64_t v12 = [v10 localizedStringForKey:@"DAY_OF_WEEK_DASH_DAY_STRING_FORMAT" value:@"%@ — %@" table:0];
    objc_msgSend(v9, "stringWithFormat:", v12, v7, v8);
  }
  else
  {
    uint64_t v12 = [v10 localizedStringForKey:@"DAY_STRING_DASH_DAY_OF_WEEK_FORMAT" value:@"%@ — %@" table:0];
    objc_msgSend(v9, "stringWithFormat:", v12, v8, v7);
  double v13 = };

  return v13;
}

__CFString *CUIKLongDayLongMonthStringForDate(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  CFDateRef v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  _initFullDayFormatter();
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, (CFDateFormatterRef)__fullDayFormatter, v2);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

__CFString *CUIKStringForDateAndTime(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  CFDateRef v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v3 = (__CFDateFormatter *)_SharedDateFormatter();
  CFStringRef v4 = (const __CFString *)CPDateFormatStringForFormatType();
  CFDateFormatterSetFormat(v3, v4);
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, v3, v2);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

__CFString *CUIKLongStringForDateAndTime(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  CFDateRef v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v3 = (__CFDateFormatter *)_SharedDateFormatter();
  CFLocaleRef Locale = CFDateFormatterGetLocale(v3);
  CFStringRef DateFormatFromTemplate = CFDateFormatterCreateDateFormatFromTemplate(0, @"EEE  MMM d, jmm", 0, Locale);
  CFDateFormatterSetFormat(v3, DateFormatFromTemplate);
  CFRelease(DateFormatFromTemplate);
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, v3, v2);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

__CFString *CUIKStringMonthDayYearTime(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  CFDateRef v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v3 = (__CFDateFormatter *)_SharedDateFormatter();
  CFLocaleRef Locale = CFDateFormatterGetLocale(v3);
  CFStringRef DateFormatFromTemplate = CFDateFormatterCreateDateFormatFromTemplate(0, @"MMM d, yyyy, jmm", 0, Locale);
  CFDateFormatterSetFormat(v3, DateFormatFromTemplate);
  CFRelease(DateFormatFromTemplate);
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, v3, v2);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

id CUIKShortTZString(void *a1, void *a2)
{
  uint64_t v3 = RegisterForInvalidation_onceToken;
  id v4 = a2;
  id v5 = a1;
  if (v3 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  id v6 = [v5 abbreviationForDate:v4];

  return v6;
}

id CUIKStringForSystemTime(void *a1, char a2)
{
  uint64_t v3 = RegisterForInvalidation_onceToken;
  id v4 = a1;
  if (v3 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v5 = (void *)CalCopySystemTimeZone();
  id v6 = _CUIKStringForTimeInTimeZoneWithFormatter(v4, a2, v5, 0);

  id v7 = v6;
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v7;
}

id CUIKStringForGMTTime(void *a1, char a2)
{
  uint64_t v3 = RegisterForInvalidation_onceToken;
  id v4 = a1;
  if (v3 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFTimeZoneRef v5 = CFTimeZoneCreateWithName(0, @"GMT", 1u);
  id v6 = _CUIKStringForTimeInTimeZoneWithFormatter(v4, a2, v5, 0);

  id v7 = v6;
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v7;
}

id CUIKStringForTime(void *a1, char a2)
{
  uint64_t v3 = RegisterForInvalidation_onceToken;
  id v4 = a1;
  if (v3 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFTimeZoneRef v5 = _CUIKStringForTimeWithSharedFormatter(v4, a2, 0);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v5;
}

id CUIKStringForTimeWithTZ(void *a1, char a2, void *a3, __CFDateFormatter *a4)
{
  uint64_t v7 = RegisterForInvalidation_onceToken;
  id v8 = a3;
  id v9 = a1;
  if (v7 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  uint64_t v10 = _CUIKStringForTimeWithTZ(v9, a2, v8, a4);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v10;
}

id _CUIKStringForTimeWithTZ(void *a1, char a2, void *a3, __CFDateFormatter *a4)
{
  uint64_t v7 = NSString;
  id v8 = a3;
  id v9 = a1;
  uint64_t v10 = CUIKBundle();
  CFStringRef v11 = [v10 localizedStringForKey:@"Time string annotated with short timezone, for instance '4:00PM (PST)'", @"%@ (%@)", 0 value table];
  uint64_t v12 = _CUIKStringForTimeInTimeZoneWithFormatter(v9, a2, v8, a4);
  double v13 = [v8 abbreviationForDate:v9];

  CFStringRef v14 = objc_msgSend(v7, "localizedStringWithFormat:", v11, v12, v13);

  return v14;
}

id CUIKStringForTimeWithTZIfDivergent(void *a1, char a2, __CFDateFormatter *a3)
{
  id v5 = a1;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  if (_CUIKSystemAndCalendarTimezonesDiverge(v5))
  {
    id v6 = (void *)CalCopyTimeZone();
    uint64_t v7 = _CUIKStringForTimeWithTZ(v5, a2, v6, a3);
  }
  else
  {
    uint64_t v7 = _CUIKStringForTimeWithSharedFormatter(v5, a2, a3);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v7;
}

BOOL _CUIKSystemAndCalendarTimezonesDiverge(void *a1)
{
  id v1 = a1;
  CFDateRef v2 = (void *)CalCopySystemTimeZone();
  uint64_t v3 = (void *)CalCopyTimeZone();
  BOOL v4 = _CUIKTimezonesDivergeAtDate(v2, v3, v1);

  return v4;
}

id _CUIKStringForTimeWithSharedFormatter(void *a1, char a2, __CFDateFormatter *a3)
{
  id v5 = a1;
  id v6 = (void *)CalCopyTimeZone();
  uint64_t v7 = _CUIKStringForTimeInTimeZoneWithFormatter(v5, a2, v6, a3);

  return v7;
}

__CFString *CUIKStringForTimeWithoutDesignator(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  CFDateRef v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  _initTimeWithoutDesignatorFormatter();
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, (CFDateFormatterRef)__timeWithoutDesignatorFormatter, v2);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

id CUIKDurationStringForDates(void *a1, void *a2, char a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = v5;
  id v8 = v6;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v9 = _CUIKStringForTimeWithSharedFormatter(v7, 0, 0);
  uint64_t v10 = _CUIKStringForTimeWithSharedFormatter(v8, 0, 0);
  if (_CUIKSystemAndCalendarTimezonesDiverge(v7))
  {
    if (a3) {
      _CUIKDurationFormatNoFromWithShortOneTimeZone();
    }
    else {
    uint64_t v15 = _CUIKDurationFormatWithShortOneTimeZone();
    }
    CFDateRef v16 = NSString;
    id v17 = v7;
    int v18 = (void *)CalCopyTimeZone();
    int v19 = [v18 abbreviationForDate:v17];

    int v20 = [v16 localizedStringWithValidatedFormat:v15, @"%@%@%@", 0, v9, v10, v19 validFormatSpecifiers error];
  }
  else
  {
    CFStringRef v11 = CUIKBundle();
    uint64_t v12 = v11;
    if (a3)
    {
      double v13 = @"Detail duration format no 'from'";
      CFStringRef v14 = @"%@ to %@";
    }
    else
    {
      double v13 = @"from %@ to %@";
      CFStringRef v14 = &stru_1F187C430;
    }
    uint64_t v15 = [v11 localizedStringForKey:v13 value:v14 table:0];

    int v20 = [NSString localizedStringWithValidatedFormat:v15, @"%@%@", 0, v9, v10 validFormatSpecifiers error];
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v20;
}

id CUIKDurationStringForTimeInterval(int a1, void *a2, int a3, int a4, int a5, double a6)
{
  id v11 = a2;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v12 = v11;
  double v13 = v12;
  double v14 = -a6;
  if (a6 >= 0.0) {
    double v14 = a6;
  }
  if (v14 >= 86400.0)
  {
    uint64_t v15 = (int)vcvtmd_s64_f64(v14 / 86400.0);
    double v14 = v14 - (double)(unint64_t)(86400 * v15);
  }
  else
  {
    uint64_t v15 = 0;
  }
  if (v14 >= 3600.0)
  {
    uint64_t v16 = (int)vcvtmd_s64_f64(v14 / 3600.0);
    double v14 = v14 - (double)(unint64_t)(3600 * v16);
  }
  else
  {
    uint64_t v16 = 0;
  }
  if (v14 >= 60.0)
  {
    uint64_t v17 = (int)vcvtmd_s64_f64(v14 / 60.0);
    double v14 = v14 - (double)(unint64_t)(60 * v17);
  }
  else
  {
    uint64_t v17 = 0;
  }
  unint64_t v18 = (unint64_t)v14;
  if (v15 || v16 || v17 || v18)
  {
    id v55 = v12;
    int v53 = a5;
    int v54 = a1;
    id v21 = objc_alloc_init(MEMORY[0x1E4F28E78]);
    if (v15)
    {
      uint64_t v22 = CUIKBundle();
      long long v23 = v22;
      int v24 = a3;
      if (a3) {
        long long v25 = @"interval_days_short";
      }
      else {
        long long v25 = @"interval_days_long";
      }
      uint64_t v26 = [v22 localizedStringForKey:v25 value:&stru_1F187C430 table:0];

      uint64_t v27 = objc_msgSend(NSString, "localizedStringWithFormat:", v26, v15);
      [v21 appendString:v27];

      if (!v16) {
        goto LABEL_32;
      }
      id v28 = _CUIKIntervalSeparatorLocalizedString();
      [v21 appendString:v28];

      a3 = v24;
    }
    else if (!v16)
    {
      if (!v17)
      {
        if (!a5) {
          goto LABEL_54;
        }
        int v24 = a3;
        if (!v18) {
          goto LABEL_54;
        }
        goto LABEL_50;
      }
      goto LABEL_42;
    }
    v29 = CUIKBundle();
    uint64_t v30 = v29;
    int v24 = a3;
    if (a3) {
      v31 = @"interval_hours_short";
    }
    else {
      v31 = @"interval_hours_long";
    }
    v32 = [v29 localizedStringForKey:v31 value:&stru_1F187C430 table:0];

    uint64_t v33 = objc_msgSend(NSString, "localizedStringWithFormat:", v32, v16);
    [v21 appendString:v33];

LABEL_32:
    if (v15) {
      goto LABEL_33;
    }
    if (!v17)
    {
      if (!v53) {
        goto LABEL_54;
      }
LABEL_48:
      if (!v18) {
        goto LABEL_54;
      }
      v45 = _CUIKIntervalSeparatorLocalizedString();
      [v21 appendString:v45];

LABEL_50:
      v46 = CUIKBundle();
      v47 = v46;
      if (v24) {
        char v48 = @"interval_seconds_short";
      }
      else {
        char v48 = @"interval_seconds_long";
      }
      v49 = [v46 localizedStringForKey:v48 value:&stru_1F187C430 table:0];

      v50 = objc_msgSend(NSString, "localizedStringWithFormat:", v49, v18);
      [v21 appendString:v50];

      goto LABEL_54;
    }
    uint64_t v38 = _CUIKIntervalSeparatorLocalizedString();
    [v21 appendString:v38];

    a3 = v24;
LABEL_42:
    v40 = CUIKBundle();
    v41 = v40;
    int v24 = a3;
    if (a3) {
      v42 = @"interval_minutes_short";
    }
    else {
      v42 = @"interval_minutes_long";
    }
    v43 = [v40 localizedStringForKey:v42 value:&stru_1F187C430 table:0];

    v44 = objc_msgSend(NSString, "localizedStringWithFormat:", v43, v17);
    [v21 appendString:v44];

    if (!v53)
    {
LABEL_54:
      if (a6 < 0.0 && a4)
      {
        uint64_t v51 = NSString;
        uint64_t v36 = CUIKBundle();
        v39 = [v36 localizedStringForKey:@"%@ before travel time" value:&stru_1F187C430 table:0];
        objc_msgSend(v51, "localizedStringWithFormat:", v39, v21);
        id v20 = (id)objc_claimAutoreleasedReturnValue();
        goto LABEL_57;
      }
LABEL_33:
      if (!v54)
      {
        id v20 = v21;
LABEL_58:
        double v13 = v55;

        goto LABEL_59;
      }
      v34 = NSString;
      v35 = CUIKBundle();
      uint64_t v36 = v35;
      if (a6 >= 0.0) {
        v37 = @"%@ after";
      }
      else {
        v37 = @"%@ before";
      }
      v39 = [v35 localizedStringForKey:v37 value:&stru_1F187C430 table:0];
      objc_msgSend(v34, "stringWithFormat:", v39, v21);
      id v20 = (id)objc_claimAutoreleasedReturnValue();
LABEL_57:

      goto LABEL_58;
    }
    goto LABEL_48;
  }
  if (a4)
  {
    int v19 = CUIKBundle();
    id v20 = [v19 localizedStringForKey:@"At start of travel time" value:&stru_1F187C430 table:0];
  }
  else
  {
    id v20 = v12;
  }
LABEL_59:

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v20;
}

id CUIKTimezoneClarificationStringForDates(void *a1, void *a2, void *a3, void *a4, int a5)
{
  id v9 = a1;
  id v10 = a2;
  id v11 = a3;
  id v12 = a4;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  if (v11)
  {
    id v13 = v11;
  }
  else
  {
    id v13 = [MEMORY[0x1E4F1CAF0] calendarTimeZone];
  }
  double v14 = v13;
  if (v12) {
    uint64_t v15 = v12;
  }
  else {
    uint64_t v15 = v13;
  }
  id v16 = v15;
  id v17 = _CUIKStringForTimeInTimeZoneWithFormatter(v9, 0, v14, 0);
  id v18 = _CUIKStringForTimeInTimeZoneWithFormatter(v10, 0, v16, 0);
  v32 = v12;
  if ([v14 isEquivalentTo:v16])
  {
    if (a5) {
      _CUIKDurationFormatNoFromWithShortOneTimeZone();
    }
    else {
    uint64_t v22 = _CUIKDurationFormatWithShortOneTimeZone();
    }
    v29 = NSString;
    int v24 = [v14 abbreviationForDate:v9];
    id v28 = [v29 localizedStringWithValidatedFormat:v22, @"%@%@%@", 0, v17, v18, v24 validFormatSpecifiers error];
  }
  else
  {
    int v19 = CUIKBundle();
    id v20 = v19;
    if (a5) {
      id v21 = @"%@ (%@) to %@ (%@)";
    }
    else {
      id v21 = @"from %@ (%@) to %@ (%@)";
    }
    uint64_t v22 = [v19 localizedStringForKey:v21 value:&stru_1F187C430 table:0];

    long long v23 = NSString;
    int v24 = [v14 abbreviationForDate:v9];
    [v16 abbreviationForDate:v10];
    id v31 = v11;
    id v25 = v9;
    v27 = id v26 = v10;
    id v28 = [v23 localizedStringWithValidatedFormat:v22, @"%@%@%@%@", 0, v17, v24, v18, v27 validFormatSpecifiers error];

    id v18 = v17;
    id v17 = (id)v27;
    id v10 = v26;
    id v9 = v25;
    id v11 = v31;
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v28;
}

id _CUIKDurationFormatNoFromWithShortOneTimeZone()
{
  CFLocaleRef v0 = CUIKBundle();
  uint64_t v1 = [v0 localizedStringForKey:@"%@ to %@ (%@)" value:&stru_1F187C430 table:0];

  return v1;
}

id _CUIKDurationFormatWithShortOneTimeZone()
{
  CFLocaleRef v0 = CUIKBundle();
  uint64_t v1 = [v0 localizedStringForKey:@"from %@ to %@ (%@)" value:&stru_1F187C430 table:0];

  return v1;
}

id CUIKTimeIntervalStringForDates(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  int v5 = __Show24Hours;
  if (!__Show24Hours)
  {
    _CUIKDetermineShortTimeParameters();
    int v5 = __Show24Hours;
  }
  if (v5 == 2) {
    id v6 = @"Hm";
  }
  else {
    id v6 = @"jm";
  }
  id v7 = (void *)__intervalFormatters;
  if (!__intervalFormatters)
  {
    id v8 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
    id v9 = (void *)__intervalFormatters;
    __intervalFormatters = (uint64_t)v8;

    id v7 = (void *)__intervalFormatters;
  }
  id v10 = [v7 objectForKey:v6];
  if (!v10)
  {
    id v10 = objc_alloc_init(MEMORY[0x1E4F28C20]);
    [v10 setDateTemplate:v6];
    [(id)__intervalFormatters setObject:v10 forKey:v6];
  }
  id v11 = [v10 stringFromDate:v3 toDate:v4];
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v11;
}

__CFString *CUIKStringForWeekdayNoYear(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  CFDateRef v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  id v3 = (__CFDateFormatter *)_SharedDateFormatter();
  CFStringRef v4 = (const __CFString *)CPDateFormatStringForFormatType();
  CFDateFormatterSetFormat(v3, v4);
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, v3, v2);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

id CUIKStringForMonthYear(void *a1)
{
  return CUIKStringForMonthYearWithFormattingContext(a1, 0);
}

id CUIKStringForMonthYearWithFormattingContext(void *a1, uint64_t a2)
{
  id v3 = a1;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFStringRef v4 = (void *)__monthYearFormatter;
  if (!__monthYearFormatter)
  {
    id v5 = objc_alloc_init(MEMORY[0x1E4F28C10]);
    id v6 = (void *)__monthYearFormatter;
    __monthYearFormatter = (uint64_t)v5;

    id v7 = (void *)__monthYearFormatter;
    id v8 = CPDateFormatStringForFormatType();
    [v7 setDateFormat:v8];

    id v9 = (void *)__monthYearFormatter;
    id v10 = (void *)CalCopyTimeZone();
    [v9 setTimeZone:v10];

    CFStringRef v4 = (void *)__monthYearFormatter;
  }
  [v4 setFormattingContext:a2];
  id v11 = [(id)__monthYearFormatter stringFromDate:v3];
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v11;
}

id CUIKShortStringForMonthYear(void *a1)
{
  id v1 = a1;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  if (!__monthYearShortFormatString)
  {
    CFDateRef v2 = (void *)MEMORY[0x1E4F28C10];
    id v3 = [MEMORY[0x1E4F1CA20] currentLocale];
    uint64_t v4 = [v2 dateFormatFromTemplate:@"MMMy" options:0 locale:v3];
    id v5 = (void *)__monthYearShortFormatString;
    __monthYearShortFormatString = v4;

    id v6 = objc_alloc_init(MEMORY[0x1E4F28C10]);
    id v7 = (void *)CUIKShortStringForMonthYear__shortMonthYearFormatter;
    CUIKShortStringForMonthYear__shortMonthYearFormatter = (uint64_t)v6;

    [(id)CUIKShortStringForMonthYear__shortMonthYearFormatter setDateFormat:__monthYearShortFormatString];
    id v8 = (void *)CUIKShortStringForMonthYear__shortMonthYearFormatter;
    id v9 = (void *)CalCopyTimeZone();
    [v8 setTimeZone:v9];
  }
  id v10 = [(id)CUIKShortStringForMonthYear__shortMonthYearFormatter stringFromDate:v1];
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v10;
}

__CFString *CUIKVeryShortStringForMonthYear(void *a1)
{
  CFDateRef v1 = a1;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFDateRef v2 = (__CFDateFormatter *)_SharedDateFormatter();
  CFStringRef v3 = (const __CFString *)__monthYearVeryShortFormatString;
  if (!__monthYearVeryShortFormatString)
  {
    CFLocaleRef v4 = CFLocaleCopyCurrent();
    __monthYearVeryShortFormatString = (uint64_t)CFDateFormatterCreateDateFormatFromTemplate(0, @"My", 0, v4);
    CFRelease(v4);
    CFStringRef v3 = (const __CFString *)__monthYearVeryShortFormatString;
  }
  CFDateFormatterSetFormat(v2, v3);
  StringWithDate = (__CFString *)CFDateFormatterCreateStringWithDate(0, v2, v1);
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return StringWithDate;
}

void CUIKGetHourDesignators(void *a1, void *a2)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  if (a1)
  {
    CFLocaleRef v4 = (void *)__AMDesignator;
    if (!__AMDesignator)
    {
      id v5 = (__CFDateFormatter *)_SharedDateFormatter();
      CFTypeRef v6 = CFDateFormatterCopyProperty(v5, (CFDateFormatterKey)*MEMORY[0x1E4F1D058]);
      id v7 = (void *)__AMDesignator;
      __AMDesignator = (uint64_t)v6;

      CFLocaleRef v4 = (void *)__AMDesignator;
    }
    *a1 = v4;
  }
  if (a2)
  {
    id v8 = (void *)__PMDesignator;
    if (!__PMDesignator)
    {
      id v9 = (__CFDateFormatter *)_SharedDateFormatter();
      CFTypeRef v10 = CFDateFormatterCopyProperty(v9, (CFDateFormatterKey)*MEMORY[0x1E4F1D0A0]);
      id v11 = (void *)__PMDesignator;
      __PMDesignator = (uint64_t)v10;

      id v8 = (void *)__PMDesignator;
    }
    *a2 = v8;
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
}

void CUIKInvalidateToday()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFLocaleRef v0 = (void *)__TodayComponents;
  __TodayComponents = 0;

  CFDateRef v1 = (void *)__TodayDate;
  __TodayDate = 0;

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
}

uint64_t CUIKInvalidateTodayAndDetermineIfChanged()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  CFLocaleRef v0 = (void *)__todayInvalidationTimerWrapper;

  return [v0 todayChangedAfterInvalidation];
}

id CUIKNowComponentsSystemTime()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFLocaleRef v0 = [MEMORY[0x1E4F1C9A8] currentCalendar];
  CFDateRef v1 = _CUIKNowComponentsInCalendar(v0);

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v1;
}

uint64_t CUIKNSDateIsToday(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFStringRef v3 = _CUIKCalendar();
  CFLocaleRef v4 = _CUIKTodayDate();
  id v5 = [v3 components:30 fromDate:v4];
  CFTypeRef v6 = [v3 components:30 fromDate:v2];

  uint64_t v7 = [v5 isEqual:v6];
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v7;
}

uint64_t CUIKNSDateIsThisYear(void *a1)
{
  uint64_t v1 = RegisterForInvalidation_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFStringRef v3 = _CUIKCalendar();
  CFLocaleRef v4 = _CUIKTodayDate();
  id v5 = [v3 components:6 fromDate:v4];
  CFTypeRef v6 = [v3 components:6 fromDate:v2];

  uint64_t v7 = [v5 isEqual:v6];
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v7;
}

uint64_t CUIKNumberOfSecondsForCurrentTime()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  CFLocaleRef v0 = _CUIKTodayDate();
  [v0 timeIntervalSinceReferenceDate];
  double v2 = v1;

  CFStringRef v3 = _CUIKNowDate();
  [v3 timeIntervalSinceReferenceDate];
  double v5 = v4;

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  return (int)(v5 - v2);
}

BOOL CUIKSpaceBetweenDesignatorsAndHour()
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  int v0 = __SpaceAroundDesignator;
  if (!__SpaceAroundDesignator)
  {
    _CUIKDetermineShortTimeParameters();
    int v0 = __SpaceAroundDesignator;
  }
  BOOL v1 = v0 == 2;
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  return v1;
}

id CUIKLocalizedStringForIntegerWithMinimumTwoDigits(uint64_t a1)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  double v2 = (void *)__numberFormatterWithTwoDigitsMinimum;
  if (!__numberFormatterWithTwoDigitsMinimum)
  {
    id v3 = objc_alloc_init(MEMORY[0x1E4F28EE0]);
    double v4 = (void *)__numberFormatterWithTwoDigitsMinimum;
    __numberFormatterWithTwoDigitsMinimum = (uint64_t)v3;

    double v5 = [MEMORY[0x1E4F1CA20] currentLocale];
    [(id)__numberFormatterWithTwoDigitsMinimum setLocale:v5];

    [(id)__numberFormatterWithTwoDigitsMinimum setMinimumIntegerDigits:2];
    double v2 = (void *)__numberFormatterWithTwoDigitsMinimum;
  }
  CFTypeRef v6 = [NSNumber numberWithInteger:a1];
  uint64_t v7 = [v2 stringFromNumber:v6];

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v7;
}

void CUIKGetDefaultStartAndEndTimeForDate(void *a1, void *a2, void *a3)
{
  id v14 = a1;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  double v5 = _CUIKCalendar();
  CFTypeRef v6 = _CUIKNowComponents();
  uint64_t v7 = [v5 components:254 fromDate:v14];
  objc_msgSend(v7, "setHour:", objc_msgSend(v6, "hour"));
  [v7 setMinute:0];
  [v7 setSecond:0];
  id v8 = [v5 dateFromComponents:v7];
  id v9 = v8;
  if (a2) {
    *a2 = v8;
  }
  if (a3)
  {
    CFTypeRef v10 = [MEMORY[0x1E4F57710] shared];
    [v10 defaultEventDuration];
    double v12 = v11;

    id v13 = [v9 dateByAddingTimeInterval:v12];
    *a3 = v13;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
}

id CUIKGetDefaultTimeForDate(void *a1)
{
  id v1 = a1;
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  double v2 = _CUIKCalendar();
  id v3 = _CUIKNowComponents();
  double v4 = [v2 components:254 fromDate:v1];
  double v5 = [MEMORY[0x1E4F1CAF0] calendarTimeZone];
  CFTypeRef v6 = [v1 dateForStartOfDayInTimeZone:v5];
  uint64_t v7 = [MEMORY[0x1E4F1C9C8] CalSimulatedDateForNow];
  id v8 = [v7 dateForStartOfDayInTimeZone:v5];

  objc_msgSend(v4, "setHour:", objc_msgSend(v3, "hour"));
  [v4 setMinute:0];
  [v4 setSecond:0];
  if ([v6 isEqualToDate:v8])
  {
    objc_msgSend(v4, "setHour:", objc_msgSend(v3, "hour") + 1);
    id v9 = [v2 dateFromComponents:v4];
    CFTypeRef v10 = [v9 dateForStartOfDayInTimeZone:v5];
    if (([v10 isEqualToDate:v8] & 1) == 0) {
      objc_msgSend(v4, "setHour:", objc_msgSend(v3, "hour"));
    }
  }
  double v11 = [v2 dateFromComponents:v4];
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);

  return v11;
}

void CUIKGetWeekendDays(_DWORD *a1, _DWORD *a2)
{
  if (RegisterForInvalidation_onceToken != -1) {
    dispatch_once(&RegisterForInvalidation_onceToken, &__block_literal_global_208);
  }
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  _CUIKFindWeekendsIfNeeded();
  if (a1) {
    *a1 = __weekendDays;
  }
  if (a2) {
    *a2 = HIDWORD(__weekendDays);
  }

  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
}

void InvalidateFormatter()
{
  os_unfair_lock_lock((os_unfair_lock_t)&lock);
  ++__calendarGeneration;
  ++__overlayCalendarGeneration;
  if (__formatter)
  {
    CFRelease((CFTypeRef)__formatter);
    __formatter = 0;
  }
  if (__standardTimeFormatter)
  {
    CFRelease((CFTypeRef)__standardTimeFormatter);
    __standardTimeFormatter = 0;
  }
  if (__shortDayFormatter)
  {
    CFRelease((CFTypeRef)__shortDayFormatter);
    __shortDayFormatter = 0;
  }
  if (__fullDayFormatter)
  {
    CFRelease((CFTypeRef)__fullDayFormatter);
    __fullDayFormatter = 0;
  }
  if (__numberFormatter)
  {
    CFRelease((CFTypeRef)__numberFormatter);
    __numberFormatter = 0;
  }
  int v0 = (void *)__numberFormatterWithTwoDigitsMinimum;
  if (__numberFormatterWithTwoDigitsMinimum)
  {
    __numberFormatterWithTwoDigitsMinimum = 0;
  }
  if (__dateFormatterWithYear)
  {
    CFRelease((CFTypeRef)__dateFormatterWithYear);
    __dateFormatterWithYear = 0;
  }
  if (__dateFormatterWithoutYear)
  {
    CFRelease((CFTypeRef)__dateFormatterWithoutYear);
    __dateFormatterWithoutYear = 0;
  }
  if (__dateFormatterWithCommaAndYear)
  {
    CFRelease((CFTypeRef)__dateFormatterWithCommaAndYear);
    __dateFormatterWithCommaAndYear = 0;
  }
  if (__longDateFormatterWithCommaAndYear)
  {
    CFRelease((CFTypeRef)__longDateFormatterWithCommaAndYear);
    __longDateFormatterWithCommaAndYear = 0;
  }
  if (__timeWithoutDesignatorFormatter)
  {
    CFRelease((CFTypeRef)__timeWithoutDesignatorFormatter);
    __timeWithoutDesignatorFormatter = 0;
  }
  id v1 = (void *)__MonthAbbreviationsStandalone;
  __MonthAbbreviationsStandalone = 0;

  double v2 = (void *)__MonthVeryShortAbbreviationsStandalone;
  __MonthVeryShortAbbreviationsStandalone = 0;

  id v3 = (void *)__MonthNames;
  __MonthNames = 0;

  double v4 = (void *)__WeekdayAbbreviations;
  __WeekdayAbbreviations = 0;

  double v5 = (void *)__WeekdayVeryShortAbbreviations;
  __WeekdayVeryShortAbbreviations = 0;

  CFTypeRef v6 = (void *)__HourSymbols;
  __HourSymbols = 0;

  uint64_t v7 = (void *)__HourSymbolsWithoutDesignator;
  __HourSymbolsWithoutDesignator = 0;

  id v8 = (void *)__PMDesignator;
  __PMDesignator = 0;

  id v9 = (void *)__AMDesignator;
  __AMDesignator = 0;

  CFTypeRef v10 = (void *)__intervalFormatters;
  __intervalFormatters = 0;

  double v11 = (void *)__dateFormattersForTimeZones;
  __dateFormattersForTimeZones = 0;

  uint64_t v12 = 0;
  __DesignatorsBeforeHour = 0;
  __Show24Hours = 0;
  __SpaceAroundDesignator = 0;
  __IsWeekdayNameFirst = 0;
  __IsLocaleRightToLeft = 0;
  int v13 = __localizedIntStringLoadFlags;
  do
  {
    if ((v13 << v12))
    {
      id v14 = __localizedIntStrings[v12];
      __localizedIntStrings[v12] = 0;

      int v13 = __localizedIntStringLoadFlags;
    }
    ++v12;
  }
  while (v12 != 32);
  __localizedIntStringLoadFlags = 0;
  uint64_t v15 = (void *)__monthYearShortFormatString;
  __monthYearShortFormatString = 0;

  __monthYearVeryShortFormatString = 0;
  id v16 = (void *)__monthNameFormatter;
  __monthNameFormatter = 0;

  id v17 = (void *)__longMonthNameFormatter;
  __longMonthNameFormatter = 0;

  id v18 = (void *)__monthYearFormatter;
  __monthYearFormatter = 0;

  int v19 = (void *)__languagesRequiringUnabbreviatedMonthNames;
  __languagesRequiringUnabbreviatedMonthNames = 0;

  __isWeekStartValid = 0;
  __areWeekendDaysValid = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)&lock);
  [(id)__todayInvalidationTimerWrapper invalidateTodayAndNotifyIfChanged];
  [MEMORY[0x1E4F576C8] rebuildFormatters];
  id v20 = [MEMORY[0x1E4F28EB8] defaultCenter];
  [v20 postNotificationName:@"CalLocaleChangedNotification" object:0];
}

id _CUIKStringForTimeInTimeZoneWithFormatter(void *a1, char a2, void *a3, __CFDateFormatter *a4)
{
  id v7 = a1;
  id v8 = a3;
  int v9 = __Show24Hours;
  if (!__Show24Hours)
  {
    _CUIKDetermineShortTimeParameters();
    int v9 = __Show24Hours;
  }
  if (v9 == 2) {
    goto LABEL_10;
  }
  if (a2) {
    goto LABEL_10;
  }
  [v7 timeIntervalSinceReferenceDate];
  if ((unint64_t)MEMORY[0x1C1889E40](v8) >> 56) {
    goto LABEL_10;
  }
  uint64_t v10 = CPDateFormatStringForFormatType();
  if (!v10) {
    goto LABEL_10;
  }
  double v11 = (__CFString *)v10;
  if (!a4) {
    a4 = (__CFDateFormatter *)_SharedDateFormatter();
  }
  CFDateFormatterSetFormat(a4, v11);
  uint64_t v12 = _stringForFormatterInTimeZone(v7, a4, v8, 0);

  if (!v12)
  {
LABEL_10:
    _initStandardTimeFormatter();
    uint64_t v12 = _stringForFormatterInTimeZone(v7, (__CFDateFormatter *)__standardTimeFormatter, v8, 0);
  }

  return v12;
}

id _CUIKIntervalSeparatorLocalizedString()
{
  int v0 = CUIKBundle();
  id v1 = [v0 localizedStringForKey:@", ", &stru_1F187C430, 0 value table];

  return v1;
}

void sub_1BDF687D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location, id *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  objc_destroyWeak(v73);
  objc_destroyWeak(location);
  _Block_object_dispose(&a60, 8);
  objc_destroyWeak(v72);
  _Block_object_dispose(&a66, 8);
  objc_destroyWeak(v74);
  _Block_object_dispose(&a72, 8);
  _Block_object_dispose(&STACK[0x218], 8);
  _Block_object_dispose(&STACK[0x238], 8);
  _Block_object_dispose(&STACK[0x268], 8);
  _Block_object_dispose((const void *)(v75 - 160), 8);
  objc_destroyWeak(a16);
  objc_destroyWeak((id *)(v75 - 200));
  _Block_object_dispose((const void *)(v75 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__11(uint64_t a1)
{
}

void __Block_byref_object_copy__41(uint64_t a1, uint64_t a2)
{
}

void __Block_byref_object_dispose__42(uint64_t a1)
{
}

uint64_t CUIKParticipantDisplaySort(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = [v7 objectForKeyedSubscript:@"Event"];
  int v9 = [v7 objectForKeyedSubscript:@"Organizer"];
  id v10 = v5;
  id v11 = v6;
  if ([v9 isEqualToParticipant:v10])
  {
    uint64_t v12 = -1;
    goto LABEL_23;
  }
  if ([v9 isEqualToParticipant:v11])
  {
    uint64_t v12 = 1;
    goto LABEL_23;
  }
  int v13 = +[CUIKAttendeeHeuristics _participantRoleSortPriority];
  id v14 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v10, "participantRole"));
  uint64_t v15 = [v13 objectForKeyedSubscript:v14];
  uint64_t v16 = [v15 integerValue];

  id v17 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v11, "participantRole"));
  uint64_t v36 = v13;
  id v18 = [v13 objectForKeyedSubscript:v17];
  uint64_t v19 = [v18 integerValue];

  if (v16 != v19)
  {
    if (v16 < v19) {
      uint64_t v12 = -1;
    }
    else {
      uint64_t v12 = 1;
    }
LABEL_22:

    goto LABEL_23;
  }
  id v20 = +[CUIKAttendeeHeuristics _participantStatusSortPriority];
  id v21 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v10, "participantStatus"));
  uint64_t v22 = [v20 objectForKeyedSubscript:v21];
  uint64_t v35 = [v22 integerValue];

  long long v23 = objc_msgSend(NSNumber, "numberWithInteger:", objc_msgSend(v11, "participantStatus"));
  int v24 = [v20 objectForKeyedSubscript:v23];
  uint64_t v25 = [v24 integerValue];

  if (v35 < v25) {
    uint64_t v12 = -1;
  }
  else {
    uint64_t v12 = 1;
  }
  if (v35 != v25) {
    goto LABEL_22;
  }

  id v26 = [v7 objectForKeyedSubscript:@"DisplayNameCache"];
  uint64_t v27 = [v10 URL];
  uint64_t v28 = [v27 absoluteString];

  if (!v28
    || ([v26 objectForKeyedSubscript:v28], (v29 = objc_claimAutoreleasedReturnValue()) == 0))
  {
    v29 = +[CUIKAttendeeDescriptionGenerator displayNameForParticipant:event:options:](CUIKAttendeeDescriptionGenerator, "displayNameForParticipant:event:options:", v10, v8, 0, v35);
    if (v28) {
      [v26 setObject:v29 forKeyedSubscript:v28];
    }
  }
  uint64_t v30 = (void *)v28;
  id v31 = objc_msgSend(v11, "URL", v35);
  v32 = [v31 absoluteString];

  if (!v32
    || ([v26 objectForKeyedSubscript:v32], (uint64_t v33 = objc_claimAutoreleasedReturnValue()) == 0))
  {
    uint64_t v33 = +[CUIKAttendeeDescriptionGenerator displayNameForParticipant:v11 event:v8 options:0];
    if (v32) {
      [v26 setObject:v33 forKeyedSubscript:v32];
    }
  }
  v37 = v26;
  uint64_t v12 = [v29 compare:v33 options:65];

LABEL_23:
  return v12;
}

void sub_1BDF749CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a31, 8);
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 224), 8);
  _Block_object_dispose((const void *)(v37 - 192), 8);
  _Block_object_dispose((const void *)(v37 - 160), 8);
  _Block_object_dispose((const void *)(v37 - 128), 8);
  _Block_object_dispose((const void *)(v37 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__12(uint64_t a1)
{
}

double CUIKScreenScale()
{
  int v0 = [MEMORY[0x1E4FB1BA8] mainScreen];
  [v0 scale];
  double v2 = v1;

  return v2;
}

double CUIKFloatFloorForScale(double a1, double a2)
{
  if (fabs(a2) < 2.22044605e-16) {
    a2 = CUIKScreenScale();
  }
  return floor(a2 * a1) / a2;
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__13(uint64_t a1)
{
}

CGImageRef CUIKCreateStripedImage(CGColor *a1, CGColor *a2, CGFloat a3)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  v14.origin.x = 0.0;
  v14.origin.y = 0.0;
  v14.size.width = 9.0;
  v14.size.height = 9.0;
  double Width = CGRectGetWidth(v14);
  v15.origin.x = 0.0;
  v15.origin.y = 0.0;
  v15.size.width = 9.0;
  v15.size.height = 9.0;
  double Height = CGRectGetHeight(v15);
  if (_GetGenericRGBColorSpace_onceToken != -1) {
    dispatch_once(&_GetGenericRGBColorSpace_onceToken, &__block_literal_global_31);
  }
  id v8 = CGBitmapContextCreate(0, (unint64_t)(Width * a3), (unint64_t)(Height * a3), 8uLL, 0, (CGColorSpaceRef)_GetGenericRGBColorSpace_genericRGBColorSpace, 2u);
  v16.origin.x = 0.0;
  v16.origin.y = 0.0;
  v16.size.width = 9.0;
  v16.size.height = 9.0;
  CGFloat v9 = CGRectGetHeight(v16);
  CGContextTranslateCTM(v8, 0.0, v9 * a3);
  CGContextScaleCTM(v8, a3, -a3);
  CGContextSetFillColorWithColor(v8, a1);
  v17.origin.x = 0.0;
  v17.origin.y = 0.0;
  v17.size.width = 9.0;
  v17.size.height = 9.0;
  CGContextFillRect(v8, v17);
  CGContextSetLineWidth(v8, 3.0);
  CGContextSetStrokeColorWithColor(v8, a2);
  v12[0] = (CGPoint)xmmword_1BE0795A0;
  v12[1] = (CGPoint)xmmword_1BE0795B0;
  v12[2] = (CGPoint)xmmword_1BE0795C0;
  v12[3] = (CGPoint)xmmword_1BE0795D0;
  v12[4] = (CGPoint)xmmword_1BE0795E0;
  v12[5] = (CGPoint)xmmword_1BE0795F0;
  CGContextStrokeLineSegments(v8, v12, 6uLL);
  CGContextFlush(v8);
  CGImageRef Image = CGBitmapContextCreateImage(v8);
  CGContextRelease(v8);
  return Image;
}

id CUIKCreateStripedUIImage(void *a1, void *a2, CGFloat a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = (CGColor *)[v5 CGColor];
  id v8 = v6;
  CGFloat v9 = (CGColor *)[v8 CGColor];

  CGImageRef v10 = CUIKCreateStripedImage(v7, v9, a3);
  id v11 = [MEMORY[0x1E4FB1818] imageWithCGImage:v10 scale:0 orientation:a3];
  CFRelease(v10);

  return v11;
}

uint64_t CUIKRecurrenceFrequencyForRepeatType(uint64_t a1)
{
  if ((unint64_t)(a1 - 2) > 3) {
    return 0;
  }
  else {
    return qword_1BE079600[a1 - 2];
  }
}

uint64_t CUIKIntervalForRepeatType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5) {
    return 0;
  }
  else {
    return qword_1BE079620[a1 - 1];
  }
}

id CUIKStringForRepeatType(unint64_t a1)
{
  double v2 = CUIKBundle();
  id v3 = v2;
  if (a1 > 6)
  {
    double v4 = 0;
  }
  else
  {
    double v4 = [v2 localizedStringForKey:off_1E636B130[a1] value:&stru_1F187C430 table:0];
  }

  return v4;
}

id CUIKStringForRepeatTypeDetail(uint64_t a1)
{
  double v2 = CUIKBundle();
  id v3 = v2;
  switch(a1)
  {
    case 0:
      double v4 = @"Never - repeat type detail";
      id v5 = @"Never";
      goto LABEL_10;
    case 1:
      double v4 = @"Every Day";
      goto LABEL_9;
    case 2:
      double v4 = @"Every Week";
      goto LABEL_9;
    case 3:
      double v4 = @"Every 2 Weeks";
      goto LABEL_9;
    case 4:
      double v4 = @"Every Month";
      goto LABEL_9;
    case 5:
      double v4 = @"Every Year";
LABEL_9:
      id v5 = &stru_1F187C430;
      goto LABEL_10;
    case 6:
      double v4 = @"Custom - repeat type detail";
      id v5 = @"Custom";
LABEL_10:
      id v6 = [v2 localizedStringForKey:v4 value:v5 table:0];
      break;
    default:
      id v6 = 0;
      break;
  }

  return v6;
}

void CUIKGetTypeAndEndDateForRecurrenceRules(void *a1, void *a2, void *a3, uint64_t a4, uint64_t *a5, void *a6)
{
  id v48 = a1;
  id v10 = a2;
  id v11 = a3;
  uint64_t v12 = [v48 count];
  uint64_t v13 = v12;
  if (!v12)
  {
    id v18 = 0;
    if (!a5) {
      goto LABEL_77;
    }
    goto LABEL_76;
  }
  if (v12 != 1)
  {
    id v18 = 0;
    uint64_t v13 = 6;
    if (!a5) {
      goto LABEL_77;
    }
LABEL_76:
    *a5 = v13;
    goto LABEL_77;
  }
  CGRect v14 = [v48 objectAtIndex:0];
  CGRect v15 = [v14 recurrenceEnd];
  uint64_t v16 = [v15 occurrenceCount];

  CGRect v17 = [v14 monthsOfTheYear];
  if (v16)
  {
    uint64_t v13 = 6;
    goto LABEL_71;
  }
  uint64_t v19 = [v14 daysOfTheWeek];
  uint64_t v20 = [v19 count];
  uint64_t v21 = [v14 interval];
  switch([v14 frequency])
  {
    case 0:
      uint64_t v13 = 6;
      if (v21 == 1 && !v20)
      {
        if ([v17 count]) {
          goto LABEL_45;
        }
        uint64_t v22 = [v14 daysOfTheMonth];
        if ([v22 count]) {
          uint64_t v13 = 6;
        }
        else {
          uint64_t v13 = 1;
        }
        goto LABEL_69;
      }
      goto LABEL_70;
    case 1:
      if ((unint64_t)(v21 - 1) > 1 || [v17 count]) {
        goto LABEL_45;
      }
      v45 = [v14 setPositions];
      if ([v45 count]
        || v20 && (v20 != 1 || !CUIKRecurrenceDateMatchesAnyDaySpecifiedInByDayList(v19, v10, v11)))
      {
        uint64_t v13 = 6;
      }
      else if (v21 == 1)
      {
        uint64_t v13 = 2;
      }
      else
      {
        uint64_t v13 = 3;
      }
      uint64_t v22 = v45;
      goto LABEL_69;
    case 2:
      uint64_t v13 = 6;
      if (v21 != 1 || v20) {
        goto LABEL_70;
      }
      if ([v17 count]) {
        goto LABEL_45;
      }
      long long v23 = [v14 daysOfTheMonth];
      uint64_t v24 = [v23 count];
      v46 = v23;
      int v25 = CUIKRecurrenceDateMatchesAnyDaySpecifiedInByMonthDayList(v23, v10, v11);
      int v26 = v25;
      if (v24 == 1) {
        int v27 = v25;
      }
      else {
        int v27 = 0;
      }
      v44 = [v14 setPositions];
      if (![v44 count]) {
        goto LABEL_30;
      }
      int v42 = v26;
      int v43 = v27;
      uint64_t v28 = [v44 objectAtIndex:0];
      uint64_t v29 = [v28 integerValue];

      if (v29 == -1)
      {
        if (v42) {
          uint64_t v13 = 4;
        }
        else {
          uint64_t v13 = 6;
        }
        goto LABEL_58;
      }
      int v27 = v43;
      if (v29) {
        goto LABEL_46;
      }
LABEL_30:
      if (v24) {
        int v30 = v27;
      }
      else {
        int v30 = 1;
      }
      if (v30 != 1)
      {
LABEL_46:
        uint64_t v13 = 6;
        goto LABEL_58;
      }
      id v31 = [MEMORY[0x1E4F1C9A8] currentCalendar];
      [v31 setTimeZone:v11];
      v32 = [v31 components:16 fromDate:v10];
      uint64_t v33 = [v32 day];

      if ((unint64_t)(v33 - 29) >= 3) {
        uint64_t v13 = 4;
      }
      else {
        uint64_t v13 = 6;
      }

LABEL_58:
      uint64_t v22 = v46;

LABEL_69:
LABEL_70:

LABEL_71:
      v40 = [v14 recurrenceEnd];
      v41 = v40;
      if (v40)
      {
        id v18 = [v40 endDate];

        if (v18)
        {
          id v18 = [v41 endDate];
        }
      }
      else
      {
        id v18 = 0;
      }

      if (a5) {
        goto LABEL_76;
      }
LABEL_77:
      if (a6) {
        *a6 = v18;
      }

      return;
    case 3:
      uint64_t v34 = [v17 count];
      uint64_t v13 = 6;
      if (v21 != 1 || v20) {
        goto LABEL_70;
      }
      if (v34 && (v34 != 1 || !CUIKRecurrenceMonthMatchesAnyMonthSpecifiedInByMonthList(v17, v10, v11)))
      {
LABEL_45:
        uint64_t v13 = 6;
        goto LABEL_70;
      }
      uint64_t v22 = [v14 daysOfTheYear];
      if ([v22 count])
      {
        uint64_t v13 = 6;
      }
      else
      {
        uint64_t v35 = [v14 setPositions];
        if ([v35 count])
        {
          uint64_t v13 = 6;
        }
        else
        {
          v47 = v22;
          uint64_t v36 = [v14 weeksOfTheYear];
          if ([v36 count])
          {
            uint64_t v13 = 6;
          }
          else
          {
            uint64_t v37 = [v14 daysOfTheMonth];
            uint64_t v38 = [v37 count];
            if (!v38
              || v38 == 1 && CUIKRecurrenceDateMatchesAnyDaySpecifiedInByMonthDayList(v37, v10, v11))
            {
              v39 = v37;
              uint64_t v13 = 5;
            }
            else
            {
              v39 = v37;
              uint64_t v13 = 6;
            }
          }
          uint64_t v22 = v47;
        }
      }
      goto LABEL_69;
    default:
      goto LABEL_45;
  }
}

void sub_1BDF7A348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__14(uint64_t a1)
{
}

void sub_1BDF7AB88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDF7B4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDF7B8C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1BDF7C42C(void *a1)
{
  objc_begin_catch(a1);
  os_unfair_lock_unlock(v1);
  objc_exception_rethrow();
}

void sub_1BDF7C440(_Unwind_Exception *a1)
{
}

void __CUIKReminderColorDeserializer_block_invoke()
{
  uint64_t v5 = 0;
  id v6 = &v5;
  uint64_t v7 = 0x2050000000;
  int v0 = (void *)getCUIKIReminderColorDeserializerClass_softClass;
  uint64_t v8 = getCUIKIReminderColorDeserializerClass_softClass;
  if (!getCUIKIReminderColorDeserializerClass_softClass)
  {
    v4[0] = MEMORY[0x1E4F143A8];
    v4[1] = 3221225472;
    v4[2] = __getCUIKIReminderColorDeserializerClass_block_invoke;
    void v4[3] = &unk_1E636B288;
    v4[4] = &v5;
    __getCUIKIReminderColorDeserializerClass_block_invoke((uint64_t)v4);
    int v0 = (void *)v6[3];
  }
  double v1 = v0;
  _Block_object_dispose(&v5, 8);
  id v2 = objc_alloc_init(v1);
  id v3 = (void *)CUIKReminderColorDeserializer_deserializer;
  CUIKReminderColorDeserializer_deserializer = (uint64_t)v2;
}

void sub_1BDF7D35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getCUIKIReminderColorDeserializerClass_block_invoke(uint64_t a1)
{
  if (!CalendarUIKitInternalLibraryCore_frameworkLibrary) {
    CalendarUIKitInternalLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  Class result = objc_getClass("CUIKIReminderColorDeserializer");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCUIKIReminderColorDeserializerClass_softClass = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __CalendarUIKitInternalLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CalendarUIKitInternalLibraryCore_frameworkLibrary = result;
  return result;
}

id CUIKUserFriendlyStringForCLLocation(void *a1)
{
  id v1 = a1;
  [v1 coordinate];
  double v4 = CreateCoordinateComponentString(1, v2, v3);
  [v1 coordinate];
  double v6 = v5;
  double v8 = v7;

  CGFloat v9 = CreateCoordinateComponentString(0, v6, v8);
  id v10 = NSString;
  id v11 = CUIKBundle();
  uint64_t v12 = [v11 localizedStringForKey:@"%@, %@", &stru_1F187C430, 0 value table];
  uint64_t v13 = objc_msgSend(v10, "localizedStringWithFormat:", v12, v4, v9);

  return v13;
}

id CreateCoordinateComponentString(int a1, double a2, double a3)
{
  if (!a1) {
    a2 = a3;
  }
  uint64_t v4 = (uint64_t)(a2 * 3600.0);
  BOOL v5 = v4 < 0;
  if (v4 >= 0) {
    double v6 = @"N";
  }
  else {
    double v6 = @"S";
  }
  double v7 = @"E";
  if (v5) {
    double v7 = @"W";
  }
  if (a1) {
    double v8 = v6;
  }
  else {
    double v8 = v7;
  }
  CGFloat v9 = CUIKBundle();
  id v10 = [v9 localizedStringForKey:v8 value:&stru_1F187C430 table:0];
  uint64_t v11 = (uint64_t)a2;
  double v12 = fabs((a2 - (double)(uint64_t)a2) * 60.0);
  uint64_t v13 = (uint64_t)v12;
  double v14 = (double)(uint64_t)((v12 - (double)(uint64_t)v12) * 60.0);
  if (v11 >= 0) {
    uint64_t v15 = v11;
  }
  else {
    uint64_t v15 = -v11;
  }

  id v16 = v10;
  id v17 = v16;
  id v18 = [NSString alloc];
  uint64_t v19 = CUIKBundle();
  uint64_t v20 = [v19 localizedStringForKey:@"%ld°%ld'%.0f'' %@" value:&stru_1F187C430 table:0];
  uint64_t v21 = objc_msgSend(v18, "initWithFormat:", v20, v15, v13, *(void *)&v14, v17, 0);

  return v21;
}

id CUIKImageForAttributes(void *a1)
{
  id v1 = (void *)MEMORY[0x1E4F30EB8];
  id v2 = a1;
  double v3 = [v1 imageForStyle:v2 size:3 forScale:0 format:_scaleFactor()];

  return v3;
}

id CUIKMapPinImage()
{
  int v0 = [MEMORY[0x1E4F645A0] markerStyleAttributes];
  id v1 = [MEMORY[0x1E4F30EB8] imageForStyle:v0 size:4 forScale:0 format:_scaleFactor()];

  return v1;
}

id CUIKImageForMapItem(void *a1)
{
  id v1 = (void *)MEMORY[0x1E4F30EB8];
  id v2 = a1;
  double v3 = [v1 imageForMapItem:v2 forScale:0 fallbackToBundleIcon:_scaleFactor()];

  if (!v3)
  {
    double v3 = CUIKMapPinImage();
  }

  return v3;
}

double _scaleFactor()
{
  int v0 = [MEMORY[0x1E4FB1BA8] mainScreen];
  id v1 = [v0 traitCollection];
  [v1 displayScale];
  double v3 = v2;

  return v3;
}

void sub_1BDF7E024(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDF7E13C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1BDF7E838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__15(uint64_t a1)
{
}

BOOL sub_1BDF7FEC8(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1BDF7FED8()
{
  return sub_1BE070FC0();
}

uint64_t sub_1BDF7FF00(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E657265666E6F63 && a2 == 0xEE006D6F6F526563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1BDF80018()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDF80060(char a1)
{
  if (a1) {
    return 0x6E657265666E6F63;
  }
  else {
    return 0x6E6F697461636F6CLL;
  }
}

BOOL sub_1BDF800A4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BDF7FEC8(*a1, *a2);
}

uint64_t sub_1BDF800BC()
{
  return sub_1BDF80018();
}

uint64_t sub_1BDF800D0()
{
  return sub_1BDF7FED8();
}

uint64_t sub_1BDF800E4()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDF80130()
{
  return sub_1BDF80060(*v0);
}

uint64_t sub_1BDF80144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDF7FF00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDF80178()
{
  return 0;
}

uint64_t sub_1BDF80184@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BDF83C70();
  *a1 = result;
  return result;
}

uint64_t sub_1BDF801B8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1BDF8020C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1BDF80260(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1BDF802D0()
{
  return 1;
}

uint64_t sub_1BDF802E0()
{
  return 12383;
}

uint64_t sub_1BDF802F0@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_1BDF804AC(a1, (uint64_t (*)(void, void, void, void))sub_1BDF83E28, a2);
}

uint64_t sub_1BDF80308(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1BDF8035C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t sub_1BDF803B0()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDF803F4()
{
  return sub_1BE070FC0();
}

uint64_t sub_1BDF8041C()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDF8045C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDF80260(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BDF80494@<X0>(void *a1@<X1>, unsigned char *a2@<X8>)
{
  return sub_1BDF804AC(a1, (uint64_t (*)(void, void, void, void))sub_1BDF802D0, a2);
}

uint64_t sub_1BDF804AC@<X0>(void *a1@<X1>, uint64_t (*a2)(void, void, void, void)@<X3>, unsigned char *a3@<X8>)
{
  uint64_t result = a2(a1[2], a1[3], a1[4], a1[5]);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BDF804EC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862A8](a1, WitnessTable);
}

uint64_t sub_1BDF80540(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x1F41862B0](a1, WitnessTable);
}

uint64_t static EventRecentLocation<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v41 = a6;
  uint64_t v42 = a8;
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v45 = *(void *)(a4 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  v40 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v9);
  v39 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v13;
  uint64_t v50 = v14;
  uint64_t v46 = v14;
  uint64_t v51 = v15;
  uint64_t v52 = v16;
  uint64_t v17 = type metadata accessor for EventRecentLocation();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  long long v23 = (char *)&v39 - v22;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v43 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  int v27 = (char *)&v39 - v26;
  uint64_t v28 = (char *)&v39 + *(int *)(v25 + 48) - v26;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v29((char *)&v39 - v26, v47, v17);
  v29(v28, v48, v17);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v29(v23, (uint64_t)v27, v17);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v35 = v44;
      uint64_t v36 = v39;
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v39, v28, a3);
      char v33 = sub_1BE070440();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v35 + 8);
      v37(v36, a3);
      v37(v23, a3);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v44 + 8))(v23, a3);
    goto LABEL_7;
  }
  v29(v21, (uint64_t)v27, v17);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v21, v46);
LABEL_7:
    char v33 = 0;
    uint64_t v18 = v43;
    uint64_t v17 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  uint64_t v31 = v45;
  uint64_t v30 = v46;
  v32 = v40;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v40, v28, v46);
  char v33 = sub_1BE070440();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v31 + 8);
  v34(v32, v30);
  v34(v21, v30);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
  return v33 & 1;
}

uint64_t type metadata accessor for EventRecentLocation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1BDF809F0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return static EventRecentLocation<>.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], *(void *)(a4 - 8), a3[5], *(void *)(a4 - 16));
}

uint64_t EventRecentLocation<>.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[1] = a4;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v7);
  uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v17, v19, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v17, v5);
    sub_1BE070FC0();
    sub_1BE070410();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v17, v11);
    sub_1BE070FC0();
    sub_1BE070410();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t EventRecentLocation<>.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BE070FB0();
  EventRecentLocation<>.hash(into:)((uint64_t)v7, a1, a2, a3);
  return sub_1BE070FF0();
}

uint64_t sub_1BDF80CE4(uint64_t a1, uint64_t a2)
{
  return EventRecentLocation<>.hashValue.getter(a1, *(void *)(a2 - 8), *(void *)(a2 - 16));
}

uint64_t sub_1BDF80CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return EventRecentLocation<>.hash(into:)(a1, a2, *(void *)(a3 - 8), *(void *)(a3 - 16));
}

uint64_t sub_1BDF80CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 16);
  uint64_t v4 = *(void *)(a3 - 8);
  sub_1BE070FB0();
  EventRecentLocation<>.hash(into:)((uint64_t)v7, a2, v4, v5);
  return sub_1BE070FF0();
}

uint64_t EventRecentLocation<>.encode(to:)(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v51 = a4;
  uint64_t v52 = a6;
  uint64_t v9 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v11 = a2[5];
  uint64_t v58 = a2[2];
  uint64_t v8 = v58;
  uint64_t v59 = v9;
  uint64_t v60 = v10;
  uint64_t v61 = v11;
  uint64_t v47 = type metadata accessor for EventRecentLocation.ConferenceRoomCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = sub_1BE070EC0();
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v50 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v46 = (char *)&v37 - v14;
  uint64_t v48 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v45 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = v8;
  uint64_t v59 = v9;
  uint64_t v60 = v10;
  uint64_t v61 = v11;
  uint64_t v16 = type metadata accessor for EventRecentLocation.LocationCodingKeys();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v40 = v16;
  uint64_t v37 = v17;
  uint64_t v18 = sub_1BE070EC0();
  uint64_t v42 = *(void *)(v18 - 8);
  uint64_t v43 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  v39 = (char *)&v37 - v20;
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v38 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(a2 - 1);
  MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v9;
  uint64_t v54 = v8;
  uint64_t v58 = v8;
  uint64_t v59 = v9;
  uint64_t v60 = v10;
  uint64_t v61 = v11;
  type metadata accessor for EventRecentLocation.CodingKeys();
  swift_getWitnessTable();
  uint64_t v26 = sub_1BE070EC0();
  uint64_t v55 = *(void *)(v26 - 8);
  uint64_t v56 = v26;
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v37 - v27;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE071030();
  (*(void (**)(char *, uint64_t, void *))(v23 + 16))(v25, v57, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = v48;
    uint64_t v30 = v45;
    uint64_t v31 = v53;
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v25, v53);
    LOBYTE(v58) = 1;
    v32 = v46;
    uint64_t v33 = v56;
    sub_1BE070E20();
    uint64_t v34 = v50;
    sub_1BE070EB0();
    uint64_t v35 = v49;
  }
  else
  {
    uint64_t v29 = v41;
    uint64_t v30 = v38;
    uint64_t v31 = v54;
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v38, v25, v54);
    LOBYTE(v58) = 0;
    v32 = v39;
    uint64_t v33 = v56;
    sub_1BE070E20();
    uint64_t v34 = v43;
    sub_1BE070EB0();
    uint64_t v35 = v42;
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v28, v33);
}

uint64_t type metadata accessor for EventRecentLocation.ConferenceRoomCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for EventRecentLocation.LocationCodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for EventRecentLocation.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t EventRecentLocation<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, char *a8@<X8>)
{
  uint64_t v59 = a7;
  uint64_t v58 = a5;
  v68 = a8;
  *(void *)&long long v76 = a2;
  *((void *)&v76 + 1) = a3;
  *(void *)&long long v77 = a4;
  *((void *)&v77 + 1) = a6;
  uint64_t v13 = type metadata accessor for EventRecentLocation.ConferenceRoomCodingKeys();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v66 = v13;
  uint64_t v56 = sub_1BE070E10();
  uint64_t v61 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  v67 = (char *)&v51 - v14;
  *(void *)&long long v76 = a2;
  *((void *)&v76 + 1) = a3;
  *(void *)&long long v77 = a4;
  *((void *)&v77 + 1) = a6;
  uint64_t v15 = type metadata accessor for EventRecentLocation.LocationCodingKeys();
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v63 = v15;
  uint64_t v55 = sub_1BE070E10();
  uint64_t v60 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  v64 = (char *)&v51 - v16;
  *(void *)&long long v76 = a2;
  *((void *)&v76 + 1) = a3;
  *(void *)&long long v77 = a4;
  *((void *)&v77 + 1) = a6;
  type metadata accessor for EventRecentLocation.CodingKeys();
  uint64_t v73 = swift_getWitnessTable();
  uint64_t v72 = sub_1BE070E10();
  uint64_t v70 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v18 = (char *)&v51 - v17;
  uint64_t v57 = a2;
  *(void *)&long long v76 = a2;
  *((void *)&v76 + 1) = a3;
  uint64_t v71 = a3;
  *(void *)&long long v77 = a4;
  *((void *)&v77 + 1) = a6;
  uint64_t v69 = type metadata accessor for EventRecentLocation();
  uint64_t v54 = *(void *)(v69 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v69);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v51 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v51 - v25;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v27 = v78;
  sub_1BE071010();
  uint64_t v28 = (uint64_t)a1;
  if (!v27)
  {
    uint64_t v53 = v24;
    uint64_t v73 = (uint64_t)v21;
    uint64_t v52 = v26;
    uint64_t v29 = v72;
    v78 = a1;
    uint64_t v30 = v18;
    *(void *)&long long v74 = sub_1BE070E00();
    sub_1BE0707A0();
    swift_getWitnessTable();
    *(void *)&long long v76 = sub_1BE070AA0();
    *((void *)&v76 + 1) = v31;
    *(void *)&long long v77 = v32;
    *((void *)&v77 + 1) = v33;
    sub_1BE070A90();
    swift_getWitnessTable();
    sub_1BE0708A0();
    char v34 = v74;
    if (v74 == 2 || (long long v51 = v76, v74 = v76, v75 = v77, (sub_1BE0708B0() & 1) == 0))
    {
      uint64_t v39 = sub_1BE070C00();
      swift_allocError();
      uint64_t v41 = v40;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EA0E2278);
      uint64_t *v41 = v69;
      sub_1BE070D40();
      sub_1BE070BF0();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v39 - 8) + 104))(v41, *MEMORY[0x1E4FBBA70], v39);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v30, v29);
    }
    else
    {
      if (v34)
      {
        LOBYTE(v74) = 1;
        uint64_t v43 = v67;
        sub_1BE070D30();
        uint64_t v50 = v68;
        uint64_t v44 = v73;
        uint64_t v45 = v56;
        sub_1BE070DF0();
        uint64_t v46 = v70;
        (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v45);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v18, v72);
        uint64_t v47 = v69;
        swift_storeEnumTagMultiPayload();
        uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
        uint64_t v49 = v52;
        v48(v52, v44, v47);
      }
      else
      {
        LOBYTE(v74) = 0;
        uint64_t v35 = v64;
        sub_1BE070D30();
        uint64_t v36 = v53;
        uint64_t v37 = v55;
        sub_1BE070DF0();
        uint64_t v38 = v70;
        (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v37);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v29);
        uint64_t v47 = v69;
        swift_storeEnumTagMultiPayload();
        uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 32);
        uint64_t v49 = v52;
        v48(v52, (uint64_t)v36, v47);
        uint64_t v50 = v68;
      }
      v48(v50, (uint64_t)v49, v47);
    }
    uint64_t v28 = (uint64_t)v78;
  }
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t sub_1BDF81B8C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BDF81BD8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  return EventRecentLocation<>.init(from:)(a1, a2[2], a2[3], a2[4], *(void *)(a3 - 8), a2[5], *(void *)(a3 - 24), a4);
}

uint64_t sub_1BDF81C0C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return EventRecentLocation<>.encode(to:)(a1, a2, a3, *(void *)(a3 - 16), a5, *(void *)(a3 - 32));
}

uint64_t dispatch thunk of EventLocationSearchResultsModel.contactsSearchResults.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventLocationSearchResultsModel.recentsSearchResults.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EventLocationSearchResultsModel.frequentsSearchResults.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EventLocationSearchResultsModel.eventsSearchResults.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EventLocationSearchResultsModel.textualSearchResults.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EventLocationSearchResultsModel.conferenceRoomSearchResults.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_1BDF81CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1BDF81CAC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_1BDF81D78(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_21;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_21:
          int v15 = (v14 | (v12 << (8 * v6))) + 2;
          unsigned int v11 = v14 + 2;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *))(v5 + 16))(a1);
      *((unsigned char *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v6) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    *char v3 = *(void *)a2;
    char v3 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1BDF81F4C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24) - 8;
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(*(void *)v2 + 64);
  if (v4 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  }
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t sub_1BDF82088(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_1BDF821FC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_1BDF8243C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_1BDF825B0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_1BDF827F0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_1BDF82934(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1BDF82B0CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1BDF82B34(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_1BDF82C00(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v6 + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
      size_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    a1[v5] = a2;
  }
}

void type metadata accessor for CUIKRepeatType(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
}

void type metadata accessor for EKEventAvailability(uint64_t a1)
{
}

void type metadata accessor for EKEventStatus(uint64_t a1)
{
}

void type metadata accessor for EKLocationRoutingMode(uint64_t a1)
{
}

void type metadata accessor for EKPrivacyLevel(uint64_t a1)
{
}

void type metadata accessor for EKSourceType(uint64_t a1)
{
}

void type metadata accessor for EKWeekday(uint64_t a1)
{
}

void type metadata accessor for EKVirtualConferenceSource(uint64_t a1)
{
}

void type metadata accessor for EKRecurrenceFrequency(uint64_t a1)
{
}

void type metadata accessor for RTLocationOfInterestType(uint64_t a1)
{
}

void type metadata accessor for EKSharingStatus(uint64_t a1)
{
}

void type metadata accessor for EKCalendarType(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for EKScheduleAgent(uint64_t a1)
{
}

void type metadata accessor for EKParticipantType(uint64_t a1)
{
}

void type metadata accessor for EKParticipantRole(uint64_t a1)
{
}

void type metadata accessor for EKParticipantStatus(uint64_t a1)
{
}

void type metadata accessor for EKAvailabilitySpanType(uint64_t a1)
{
}

uint64_t sub_1BDF82EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for WeekDayViewModel.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_1BDF82F58(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDF83024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_1BDF8304C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1BDF83054(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

uint64_t sub_1BDF8306C()
{
  return 0;
}

uint64_t getEnumTagSinglePayload for CreateFamilyCalendarViewModel.FamilyCalendarScreens(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_1BDF830C4(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1BDF83160);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDF83188()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BDF831A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BDF831C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BDF831DC()
{
  return sub_1BDF835D4(&qword_1EA0E26F8, type metadata accessor for EKAvailabilitySpanType);
}

uint64_t sub_1BDF8322C(uint64_t a1, uint64_t a2)
{
  return sub_1BDF83398(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1BDF83244(uint64_t a1, id *a2)
{
  uint64_t result = sub_1BE0704E0();
  *a2 = 0;
  return result;
}

uint64_t sub_1BDF832BC(uint64_t a1, id *a2)
{
  char v3 = sub_1BE0704F0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1BDF8333C@<X0>(uint64_t *a1@<X8>)
{
  sub_1BE070500();
  uint64_t v2 = sub_1BE0704C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BDF83380(uint64_t a1, uint64_t a2)
{
  return sub_1BDF83398(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1BDF83398(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1BE070500();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BDF833DC()
{
  sub_1BE070500();
  sub_1BE070590();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDF83430()
{
  sub_1BE070500();
  sub_1BE070FB0();
  sub_1BE070590();
  uint64_t v0 = sub_1BE070FF0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BDF834A4()
{
  return sub_1BE070FC0();
}

void *sub_1BDF834D0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1BDF834E0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1BDF834EC()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDF83534()
{
  return sub_1BE070FF0();
}

BOOL sub_1BDF83578(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BDF8358C()
{
  return sub_1BDF835D4(&qword_1EA0E2700, type metadata accessor for EKParticipantStatus);
}

uint64_t sub_1BDF835D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDF8361C()
{
  return sub_1BDF835D4(&qword_1EA0E2708, type metadata accessor for EKParticipantRole);
}

uint64_t sub_1BDF83664()
{
  return sub_1BDF835D4(&qword_1EA0E2710, type metadata accessor for EKParticipantType);
}

uint64_t sub_1BDF836AC()
{
  return sub_1BDF835D4(&qword_1EA0E2718, type metadata accessor for EKScheduleAgent);
}

uint64_t sub_1BDF836F4()
{
  return sub_1BDF835D4(&qword_1EA0E2720, type metadata accessor for EKCalendarType);
}

uint64_t sub_1BDF8373C()
{
  uint64_t v0 = sub_1BE070500();
  uint64_t v2 = v1;
  if (v0 == sub_1BE070500() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1BE070EF0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1BDF837C8()
{
  return sub_1BDF835D4(&qword_1EA0E2728, type metadata accessor for EKSharingStatus);
}

uint64_t sub_1BDF83810()
{
  return sub_1BDF835D4(&qword_1EA0E2730, type metadata accessor for RTLocationOfInterestType);
}

uint64_t sub_1BDF83858()
{
  return sub_1BDF835D4(&qword_1EA0E2738, type metadata accessor for EKRecurrenceFrequency);
}

uint64_t sub_1BDF838A0()
{
  return sub_1BDF835D4(&qword_1EA0E2740, type metadata accessor for EKVirtualConferenceSource);
}

uint64_t sub_1BDF838E8()
{
  return sub_1BDF835D4(&qword_1EA0E2748, type metadata accessor for EKWeekday);
}

uint64_t sub_1BDF83930()
{
  return sub_1BDF835D4(&qword_1EA0E2750, type metadata accessor for EKSourceType);
}

uint64_t sub_1BDF83978()
{
  return sub_1BDF835D4(&qword_1EA0E2758, type metadata accessor for EKPrivacyLevel);
}

uint64_t sub_1BDF839C0()
{
  return sub_1BDF835D4(&qword_1EA0E2760, type metadata accessor for EKLocationRoutingMode);
}

uint64_t sub_1BDF83A08()
{
  return sub_1BDF835D4(&qword_1EA0E2768, type metadata accessor for EKEventStatus);
}

uint64_t sub_1BDF83A50()
{
  return sub_1BDF835D4((unint64_t *)&unk_1EA0E2770, type metadata accessor for EKEventAvailability);
}

uint64_t sub_1BDF83A98()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BDF83AB4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BDF83AD0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BDF83AEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BDF83B08()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BDF83B24()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BDF83B40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1BE0704C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BDF83B88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BE070500();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BDF83BB4(uint64_t a1)
{
  uint64_t v2 = sub_1BDF835D4(&qword_1EA0E1918, type metadata accessor for Key);
  uint64_t v3 = sub_1BDF835D4(&qword_1EA0E2790, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1BDF83C70()
{
  return 2;
}

void type metadata accessor for Key(uint64_t a1)
{
}

uint64_t sub_1BDF83C8C()
{
  return sub_1BDF835D4(&qword_1EA0E2780, type metadata accessor for Key);
}

uint64_t sub_1BDF83CD4()
{
  return sub_1BDF835D4(&qword_1EA0E2788, type metadata accessor for Key);
}

uint64_t sub_1BDF83D1C()
{
  return sub_1BDF835D4(&qword_1EA0E1920, type metadata accessor for Key);
}

void type metadata accessor for EKShareeAccessLevel(uint64_t a1)
{
}

uint64_t getEnumTagSinglePayload for EventRecurrenceDayOfWeekModelObject(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for EventRecurrenceDayOfWeekModelObject(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for MKCoordinateSpan(uint64_t a1)
{
}

void sub_1BDF83DD4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1BDF83E3C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BDF83EF8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v7 + ((v6 + 48) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v19 = ~v6;
    uint64_t v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    uint64_t v12 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    int v13 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v12 = *v13;
    v12[1] = v13[1];
    unint64_t v14 = ((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v15 = (uint64_t *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v16 = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v16 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
    }
    else
    {
      uint64_t v17 = *v15;
      sub_1BDF840AC(*v15, v16);
      *(void *)unint64_t v14 = v17;
      *(void *)(v14 + 8) = v16;
    }
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))((v14 + v6 + 16) & v19, ((unint64_t)v15 + v6 + 16) & v19, v4);
    *(void *)((v7 + ((v14 + v6 + 16) & v19)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v7
                                                                                    + (((unint64_t)v15 + v6 + 16) & v19)) & 0xFFFFFFFFFFFFFFF8);
  }
  return a1;
}

uint64_t sub_1BDF840AC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1BDF84104(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t *)((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = v4[1];
  if ((v5 & 0x3000000000000000) == 0) {
    sub_1BDF841A4(*v4, v5);
  }
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t))(v6 + 8);
  unint64_t v8 = ((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v8);
}

uint64_t sub_1BDF841A4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

void *sub_1BDF841FC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  unint64_t v8 = ((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  unsigned int v9 = (uint64_t *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v10 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_1BDF840AC(*v9, v10);
    *(void *)unint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 16;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v8 + v14 + 16) & ~v14;
  uint64_t v16 = ((unint64_t)v9 + v14 + 16) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v15, v16);
  *(void *)((*(void *)(v13 + 48) + 7 + v15) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v13 + 48)
                                                                                       + 7
                                                                                       + v16) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1BDF8431C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  v6[1] = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v8 = (uint64_t *)(((unint64_t)v6 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = ((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = v8[1];
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t v12 = v11 & 0x3000000000000000;
  if ((v10 & 0x3000000000000000) == 0)
  {
    if (!v12)
    {
      uint64_t v20 = *(void *)v9;
      sub_1BDF840AC(*(void *)v9, *(void *)(v9 + 8));
      uint64_t v21 = *v8;
      unint64_t v22 = v8[1];
      *unint64_t v8 = v20;
      v8[1] = v11;
      sub_1BDF841A4(v21, v22);
      goto LABEL_7;
    }
    sub_1BDF841A4(*v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    *(_OWORD *)unint64_t v8 = *(_OWORD *)v9;
    goto LABEL_7;
  }
  uint64_t v13 = *(void *)v9;
  sub_1BDF840AC(*(void *)v9, *(void *)(v9 + 8));
  *unint64_t v8 = v13;
  v8[1] = v11;
LABEL_7:
  uint64_t v14 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v15 = v14 + 24;
  uint64_t v16 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = ((unint64_t)v8 + v16 + 16) & ~v16;
  uint64_t v18 = (v9 + v16 + 16) & ~v16;
  (*(void (**)(uint64_t, uint64_t))(v14 + 24))(v17, v18);
  *(void *)((*(void *)(v15 + 40) + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v15 + 40)
                                                                                       + 7
                                                                                       + v18) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

_OWORD *sub_1BDF8448C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = (_OWORD *)(((unint64_t)v4 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (_OWORD *)(((unint64_t)v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v6 = *v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v11, v12);
  *(void *)((*(void *)(v9 + 32) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1BDF84558(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (uint64_t *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (uint64_t *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = v9[1];
  if ((v11 & 0x3000000000000000) == 0)
  {
    uint64_t v12 = v10[1];
    if ((v12 & 0x3000000000000000) == 0)
    {
      uint64_t v19 = *v9;
      *uint64_t v9 = *v10;
      v9[1] = v12;
      sub_1BDF841A4(v19, v11);
      goto LABEL_5;
    }
    sub_1BDF841A4(*v9, v11);
  }
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
LABEL_5:
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = v13 + 40;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = ((unint64_t)v9 + v15 + 16) & ~v15;
  uint64_t v17 = ((unint64_t)v10 + v15 + 16) & ~v15;
  (*(void (**)(uint64_t, uint64_t))(v13 + 40))(v16, v17);
  *(void *)((*(void *)(v14 + 24) + 7 + v16) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v14 + 24)
                                                                                       + 7
                                                                                       + v17) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BDF84688(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 48) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)(a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)(a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1BDF847F0);
      case 4:
        int v14 = *(_DWORD *)(a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *(_DWORD *)a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v4 + 48))((((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
  }
                                                                  + v6
                                                                  + 16) & ~v6);
  unint64_t v17 = *(void *)(a1 + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1BDF84804(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 48) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              unint64_t v18 = (((((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~v9;
              uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
              v19(v18);
            }
            else if ((a2 & 0x80000000) != 0)
            {
              *(void *)a1 = a2 ^ 0x80000000;
              *((void *)a1 + 1) = 0;
            }
            else
            {
              *((void *)a1 + 1) = a2 - 1;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 48) & ~v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 48) & ~v9) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 48) & ~v9) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v17 = ~v8 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1BDF84A08);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for MemberItemView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BDF84A48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDF84A8C(uint64_t a1)
{
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2A70);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2A78);
  uint64_t v20 = MEMORY[0x1E4F3ED98];
  uint64_t v21 = *(void *)(a1 + 16);
  uint64_t v3 = v21;
  swift_getTupleTypeMetadata();
  sub_1BE070390();
  swift_getWitnessTable();
  uint64_t v4 = sub_1BE070190();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  unsigned int v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  size_t v10 = &v14[-v9];
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v15 = v3;
  uint64_t v16 = v11;
  uint64_t v17 = v1;
  sub_1BE06F740();
  sub_1BE070180();
  swift_getWitnessTable();
  sub_1BDF9DEF0(v8);
  unsigned int v12 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  sub_1BDF9DEF0(v10);
  return ((uint64_t (*)(unsigned char *, uint64_t))v12)(v10, v4);
}

uint64_t sub_1BDF84CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v32 = a4;
  uint64_t v33 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v31 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v30 = (char *)&v29 - v9;
  uint64_t v10 = sub_1BE070070();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v38 = 0;
  uint64_t v39 = 0;
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v40 = a1;
  unint64_t v16 = *(void *)(a1 + 40);
  if (v16 >> 60 != 15)
  {
    uint64_t v29 = a3;
    uint64_t v17 = *(void *)(v40 + 32);
    id v18 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
    sub_1BDF840AC(v17, v16);
    sub_1BDF840AC(v17, v16);
    uint64_t v19 = (void *)sub_1BE06EE40();
    id v20 = objc_msgSend(v18, sel_initWithData_, v19);

    if (!v20) {
      objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_init);
    }
    sub_1BE070050();
    sub_1BDF859DC(v17, v16);
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E4F3EBF0], v10);
    uint64_t v14 = sub_1BE070080();
    swift_release();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    a3 = v29;
    type metadata accessor for MemberItemView();
    sub_1BE070320();
    sub_1BE06F390();
    uint64_t v38 = v58;
    uint64_t v39 = v57;
    uint64_t v36 = v60;
    uint64_t v37 = v59;
    uint64_t v34 = v62;
    uint64_t v35 = v61;
    sub_1BDF859DC(v17, v16);
    uint64_t v15 = 1;
  }
  uint64_t v21 = sub_1BE06F7E0();
  uint64_t v22 = v40;
  sub_1BDF851F0(v40, (uint64_t)v52);
  *(_OWORD *)&v53[103] = v52[6];
  *(_OWORD *)&v53[119] = v52[7];
  *(_OWORD *)&v53[135] = v52[8];
  *(_OWORD *)&v53[151] = v52[9];
  *(_OWORD *)&v53[39] = v52[2];
  *(_OWORD *)&v53[55] = v52[3];
  *(_OWORD *)&v53[71] = v52[4];
  *(_OWORD *)&v53[87] = v52[5];
  *(_OWORD *)&v53[7] = v52[0];
  char v54 = 1;
  *(_OWORD *)&v53[23] = v52[1];
  uint64_t v23 = v22 + *(int *)(type metadata accessor for MemberItemView() + 44);
  uint64_t v24 = v30;
  sub_1BDF9DEF0(v23);
  *(_OWORD *)&v49[113] = *(_OWORD *)&v53[112];
  *(_OWORD *)&v49[129] = *(_OWORD *)&v53[128];
  *(_OWORD *)&v49[145] = *(_OWORD *)&v53[144];
  *(_OWORD *)&v49[49] = *(_OWORD *)&v53[48];
  *(_OWORD *)&v49[65] = *(_OWORD *)&v53[64];
  *(_OWORD *)&v49[81] = *(_OWORD *)&v53[80];
  *(_OWORD *)&v49[97] = *(_OWORD *)&v53[96];
  *(_OWORD *)&v49[1] = *(_OWORD *)v53;
  *(_OWORD *)&v49[17] = *(_OWORD *)&v53[16];
  v50[0] = v14;
  v50[1] = 0;
  v50[2] = v15;
  v50[3] = v39;
  v50[4] = v38;
  v50[5] = v37;
  v50[6] = v36;
  v50[7] = v35;
  long long v48 = (unint64_t)v21;
  v49[0] = 1;
  *(void *)&v49[160] = *(void *)&v53[159];
  *(_OWORD *)&v49[33] = *(_OWORD *)&v53[32];
  v50[8] = v34;
  v51[0] = v50;
  uint64_t v46 = 0;
  char v47 = 1;
  v51[1] = &v48;
  v51[2] = &v46;
  uint64_t v25 = v33;
  uint64_t v26 = v31;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v31, v24, a2);
  v51[3] = v26;
  swift_retain();
  sub_1BDF8548C((uint64_t)v52);
  v45[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2A70);
  v45[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2A78);
  v45[2] = MEMORY[0x1E4F3ED98];
  v45[3] = a2;
  unint64_t v41 = sub_1BDF855EC();
  unint64_t v42 = sub_1BDF85750();
  uint64_t v43 = MEMORY[0x1E4F3ED88];
  uint64_t v44 = a3;
  sub_1BE034C24((uint64_t)v51, 4uLL, (uint64_t)v45);
  swift_release();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v25 + 8);
  v27(v24, a2);
  sub_1BDF857AC((uint64_t)v52);
  v27(v26, a2);
  v55[8] = *(_OWORD *)&v49[112];
  v55[9] = *(_OWORD *)&v49[128];
  v55[10] = *(_OWORD *)&v49[144];
  uint64_t v56 = *(void *)&v49[160];
  v55[4] = *(_OWORD *)&v49[48];
  v55[5] = *(_OWORD *)&v49[64];
  v55[6] = *(_OWORD *)&v49[80];
  v55[7] = *(_OWORD *)&v49[96];
  v55[0] = v48;
  v55[1] = *(_OWORD *)v49;
  v55[2] = *(_OWORD *)&v49[16];
  v55[3] = *(_OWORD *)&v49[32];
  sub_1BDF8590C((uint64_t)v55);
  return swift_release();
}

uint64_t sub_1BDF851F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BDF859F0();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1BE06FD30();
  uint64_t v25 = v5;
  uint64_t v26 = v6;
  char v8 = v7;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = sub_1BE06FB40();
  uint64_t v9 = swift_getKeyPath();
  uint64_t v24 = sub_1BE070010();
  uint64_t v10 = *(void *)(a1 + 24);
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1BE06FD30();
    uint64_t v22 = v12;
    uint64_t v23 = v11;
    uint64_t v21 = v13;
    uint64_t v15 = v14 & 1;
    uint64_t v20 = swift_getKeyPath();
    uint64_t v18 = sub_1BE06FB30();
    uint64_t v19 = swift_getKeyPath();
    uint64_t v10 = sub_1BE070020();
    uint64_t v16 = 1;
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v15 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v16 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
  }
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v25;
  *(unsigned char *)(a2 + 16) = v8 & 1;
  *(void *)(a2 + 24) = v26;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = 1;
  *(unsigned char *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v9;
  *(void *)(a2 + 64) = v27;
  *(void *)(a2 + 72) = v24;
  *(void *)(a2 + 80) = v23;
  *(void *)(a2 + 88) = v22;
  *(void *)(a2 + 96) = v15;
  *(void *)(a2 + 104) = v21;
  *(void *)(a2 + 112) = v20;
  *(void *)(a2 + 120) = v16;
  *(void *)(a2 + 128) = 0;
  *(void *)(a2 + 136) = v19;
  *(void *)(a2 + 144) = v18;
  *(void *)(a2 + 152) = v10;
  sub_1BDF8555C(v4, v25, v8 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BDF8556C(v23, v22, v15, v21);
  sub_1BDF8588C(v23, v22, v15, v21);
  sub_1BDF8587C(v4, v25, v8 & 1);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDF85460()
{
  return sub_1BE06FDF0();
}

uint64_t sub_1BDF85480@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDF84CA4(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1BDF8548C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 104);
  sub_1BDF8555C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1BDF8556C(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_1BDF8555C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1BDF8556C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1BDF8555C(result, a2, a3 & 1);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_1BDF855EC()
{
  unint64_t result = qword_1EA0E2A80;
  if (!qword_1EA0E2A80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2A70);
    sub_1BDF85660();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2A80);
  }
  return result;
}

unint64_t sub_1BDF85660()
{
  unint64_t result = qword_1EA0E2A88;
  if (!qword_1EA0E2A88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2A90);
    sub_1BDF856DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2A88);
  }
  return result;
}

unint64_t sub_1BDF856DC()
{
  unint64_t result = qword_1EA0E2A98;
  if (!qword_1EA0E2A98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2AA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2A98);
  }
  return result;
}

unint64_t sub_1BDF85750()
{
  unint64_t result = qword_1EA0E2AA8;
  if (!qword_1EA0E2AA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2A78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2AA8);
  }
  return result;
}

uint64_t sub_1BDF857AC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 88);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 104);
  sub_1BDF8587C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BDF8588C(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_1BDF8587C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BDF8588C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1BDF8587C(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BDF8590C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 120);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 128);
  sub_1BDF8587C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BDF8588C(v6, v5, v2, v3);
  return a1;
}

uint64_t sub_1BDF859DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1BDF841A4(a1, a2);
  }
  return a1;
}

unint64_t sub_1BDF859F0()
{
  unint64_t result = qword_1EA0E14D8;
  if (!qword_1EA0E14D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E14D8);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1BDF85A84()
{
  return swift_getWitnessTable();
}

uint64_t initializeBufferWithCopyOfBuffer for OrganizerView(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for OrganizerView(id *a1)
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for OrganizerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for OrganizerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for OrganizerView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for OrganizerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OrganizerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OrganizerView()
{
  return &type metadata for OrganizerView;
}

uint64_t sub_1BDF85D9C()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_1BDF85DB8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = sub_1BE06F740();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2AC8);
  return sub_1BDF85E08(a1, a2 + *(int *)(v4 + 44));
}

id sub_1BDF85E08@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2AD0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  char v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1568);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BE07ABD0;
  id result = objc_msgSend(a1, sel_emailAddress);
  if (result)
  {
    uint64_t v12 = result;
    uint64_t v13 = sub_1BE070500();
    uint64_t v15 = v14;

    *(void *)(v10 + 32) = v13;
    *(void *)(v10 + 40) = v15;
    sub_1BE070320();
    sub_1BE06F390();
    uint64_t v16 = v26;
    LOBYTE(v13) = v27;
    uint64_t v17 = v28;
    char v18 = v29;
    uint64_t v19 = v30;
    uint64_t v25 = v31;
    *(void *)uint64_t v9 = sub_1BE06F7E0();
    *((void *)v9 + 1) = 0;
    v9[16] = 1;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2AD8);
    sub_1BDF86018(a1, (uint64_t *)&v9[*(int *)(v20 + 44)]);
    sub_1BDF86808((uint64_t)v9, (uint64_t)v7, &qword_1EA0E2AD0);
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v16;
    *(unsigned char *)(a2 + 16) = v13;
    *(void *)(a2 + 24) = v17;
    *(unsigned char *)(a2 + 32) = v18;
    uint64_t v21 = v25;
    *(void *)(a2 + 40) = v19;
    *(void *)(a2 + 48) = v21;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2AE0);
    sub_1BDF86808((uint64_t)v7, a2 + *(int *)(v22 + 48), &qword_1EA0E2AD0);
    uint64_t v23 = a2 + *(int *)(v22 + 64);
    *(void *)uint64_t v23 = 0;
    *(unsigned char *)(v23 + 8) = 1;
    swift_bridgeObjectRetain();
    sub_1BDF8686C((uint64_t)v9, &qword_1EA0E2AD0);
    sub_1BDF8686C((uint64_t)v7, &qword_1EA0E2AD0);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDF86018@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v54 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2AE8);
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2AF0);
  uint64_t v6 = MEMORY[0x1F4188790](v53);
  uint64_t v58 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v49 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v55 = (uint64_t)&v49 - v11;
  sub_1BE06F7A0();
  uint64_t v12 = sub_1BE06FD20();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_1BE070020();
  uint64_t v17 = sub_1BE06FCD0();
  uint64_t v50 = v18;
  uint64_t v51 = v17;
  char v20 = v19;
  uint64_t v52 = v21;
  swift_release();
  sub_1BDF8587C(v12, v14, v16);
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(a1, sel_name);
  if (v22)
  {
    id v23 = v22;
    uint64_t v24 = sub_1BE070500();
  }
  else
  {
    id v23 = CUIKBundle();
    uint64_t v24 = sub_1BE06ED00();
  }
  uint64_t v26 = v24;
  uint64_t v27 = v25;

  char v28 = v20 & 1;
  uint64_t v59 = v26;
  uint64_t v60 = v27;
  sub_1BDF859F0();
  uint64_t v29 = sub_1BE06FD30();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  char v35 = v34 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v59 = v29;
  uint64_t v60 = v31;
  char v61 = v35;
  uint64_t v62 = v33;
  uint64_t v63 = KeyPath;
  uint64_t v64 = 1;
  char v65 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1270);
  sub_1BDF866F8();
  sub_1BE06FEB0();
  sub_1BDF8587C(v29, v31, v35);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_1BE070010();
  uint64_t v38 = swift_getKeyPath();
  uint64_t v40 = v56;
  uint64_t v39 = v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v10, v5, v57);
  unint64_t v41 = (uint64_t *)&v10[*(int *)(v53 + 36)];
  uint64_t *v41 = v38;
  v41[1] = v37;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v5, v39);
  uint64_t v42 = v55;
  sub_1BDF867A0((uint64_t)v10, v55);
  uint64_t v43 = v58;
  sub_1BDF86808(v42, v58, &qword_1EA0E2AF0);
  uint64_t v44 = v54;
  uint64_t v46 = v50;
  uint64_t v45 = v51;
  uint64_t *v54 = v51;
  v44[1] = v46;
  *((unsigned char *)v44 + 16) = v28;
  v44[3] = v52;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2AF8);
  sub_1BDF86808(v43, (uint64_t)v44 + *(int *)(v47 + 48), &qword_1EA0E2AF0);
  sub_1BDF8555C(v45, v46, v28);
  swift_bridgeObjectRetain();
  sub_1BDF8686C(v42, &qword_1EA0E2AF0);
  sub_1BDF8686C(v43, &qword_1EA0E2AF0);
  sub_1BDF8587C(v45, v46, v28);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDF86464@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    char v4 = *(unsigned char *)(v1 + 24);
    uint64_t v7 = v1 + 8;
    uint64_t v5 = *(void *)(v1 + 8);
    uint64_t v6 = *(void *)(v7 + 8);
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v5;
    *(void *)(v8 + 32) = v6;
    *(unsigned char *)(v8 + 40) = v4;
    MEMORY[0x1F4188790](v8);
    swift_retain();
    swift_retain();
    id v9 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2AB8);
    sub_1BDF86964(&qword_1EA0E2AC0, &qword_1EA0E2AB8);
    sub_1BE070150();

    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2AB0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2AB0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    return v13(a1, 1, 1, v12);
  }
}

uint64_t sub_1BDF86648()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 41, 7);
}

uint64_t sub_1BDF86690()
{
  return sub_1BE070210();
}

id sub_1BDF866E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDF85DB8(*(void **)(v1 + 16), a1);
}

unint64_t sub_1BDF866F8()
{
  unint64_t result = qword_1EA0E1268;
  if (!qword_1EA0E1268)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1270);
    sub_1BDF86964(&qword_1EA0E1430, &qword_1EA0E1438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1268);
  }
  return result;
}

uint64_t sub_1BDF867A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2AF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDF86808(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDF8686C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1BDF868CC()
{
  unint64_t result = qword_1EA0E2B08;
  if (!qword_1EA0E2B08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2B10);
    sub_1BDF86964(&qword_1EA0E2B18, &qword_1EA0E2AB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2B08);
  }
  return result;
}

uint64_t sub_1BDF86964(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for AvailabilityView()
{
  swift_release();

  return swift_release();
}

void *_s13CalendarUIKit16AvailabilityViewVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for AvailabilityView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AvailabilityView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for AvailabilityView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AvailabilityView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AvailabilityView()
{
  return &type metadata for AvailabilityView;
}

uint64_t sub_1BDF86B84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDF86BA0()
{
  return sub_1BE070270();
}

id sub_1BDF86C84@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  id result = CUIKDisplayStringForAvailability(v3 - 1);
  if (result)
  {
    uint64_t v5 = result;
    sub_1BE070500();

    sub_1BDF859F0();
    id result = (id)sub_1BE06FD30();
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v6;
    *(unsigned char *)(a2 + 16) = v7 & 1;
    *(void *)(a2 + 24) = v8;
    *(unsigned char *)(a2 + 32) = v3;
    *(unsigned char *)(a2 + 33) = v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDF86D20()
{
  return sub_1BE0701A0();
}

unint64_t sub_1BDF86E30()
{
  unint64_t result = qword_1EA0E2B30;
  if (!qword_1EA0E2B30)
  {
    type metadata accessor for EKEventAvailability(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2B30);
  }
  return result;
}

unint64_t sub_1BDF86E88()
{
  unint64_t result = qword_1EA0E2B38;
  if (!qword_1EA0E2B38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2B28);
    sub_1BDF86EFC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2B38);
  }
  return result;
}

unint64_t sub_1BDF86EFC()
{
  unint64_t result = qword_1EA0E2B40;
  if (!qword_1EA0E2B40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2B48);
    sub_1BDF86F9C();
    sub_1BDF86964(&qword_1EA0E2B70, &qword_1EA0E2B78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2B40);
  }
  return result;
}

unint64_t sub_1BDF86F9C()
{
  unint64_t result = qword_1EA0E2B50;
  if (!qword_1EA0E2B50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2B58);
    sub_1BDF86964(&qword_1EA0E2B60, &qword_1EA0E2B68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2B50);
  }
  return result;
}

unint64_t sub_1BDF8703C()
{
  unint64_t result = qword_1EA0E2B90;
  if (!qword_1EA0E2B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2B90);
  }
  return result;
}

uint64_t sub_1BDF87090()
{
  return sub_1BDF86964(&qword_1EA0E2B98, &qword_1EA0E2BA0);
}

uint64_t EventConferenceRoomModelObject.location.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 56) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 EventConferenceRoomModelObject.location.setter(long long *a1)
{
  long long v6 = a1[1];
  long long v7 = *a1;
  __n128 v5 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v1 = v7;
  *(_OWORD *)(v1 + 16) = v6;
  __n128 result = v5;
  *(__n128 *)(v1 + 32) = v5;
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v3;
  return result;
}

uint64_t (*EventConferenceRoomModelObject.location.modify())()
{
  return nullsub_1;
}

uint64_t EventConferenceRoomModelObject.supportsAvailability.getter()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t EventConferenceRoomModelObject.supportsAvailability.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 64) = result;
  return result;
}

uint64_t (*EventConferenceRoomModelObject.supportsAvailability.modify())()
{
  return nullsub_1;
}

uint64_t EventConferenceRoomModelObject.availabilityRequestInProgress.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t EventConferenceRoomModelObject.availabilityRequestInProgress.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 65) = result;
  return result;
}

uint64_t (*EventConferenceRoomModelObject.availabilityRequestInProgress.modify())()
{
  return nullsub_1;
}

uint64_t EventConferenceRoomModelObject.availability.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t EventConferenceRoomModelObject.availability.setter(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t (*EventConferenceRoomModelObject.availability.modify())()
{
  return nullsub_1;
}

__n128 EventConferenceRoomModelObject.init(location:supportsAvailability:availabilityRequestInProgress:availability:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  long long v7 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v7;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a5 + 32) = result;
  *(void *)(a5 + 48) = v5;
  *(void *)(a5 + 56) = v6;
  *(unsigned char *)(a5 + 64) = a2;
  *(unsigned char *)(a5 + 65) = a3;
  *(void *)(a5 + 72) = a4;
  return result;
}

uint64_t EventConferenceRoomModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 24);
  v20[3] = swift_getAssociatedTypeWitness();
  v20[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(v20);
  v6(v4, v5);
  EventDirectoryRecordModelObject.init(_:)(v20, (uint64_t *)v21);
  long long v18 = v21[1];
  long long v19 = v21[0];
  long long v17 = v21[2];
  uint64_t v7 = v22;
  uint64_t v8 = v23;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  LOBYTE(v11) = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 40))(v11, v12);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(v13, v14);
  *(_OWORD *)a2 = v19;
  *(_OWORD *)(a2 + 16) = v18;
  *(_OWORD *)(a2 + 32) = v17;
  *(void *)(a2 + 48) = v7;
  *(void *)(a2 + 56) = v8;
  *(unsigned char *)(a2 + 64) = v9 & 1;
  *(unsigned char *)(a2 + 65) = v11 & 1;
  *(void *)(a2 + 72) = v15;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t EventConferenceRoomModelObject.hash(into:)()
{
  return sub_1BE070FC0();
}

uint64_t EventConferenceRoomModelObject.hashValue.getter()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDF875B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 40);
  *(void *)(a1 + 56) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDF87634()
{
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_1BDF8763C()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t sub_1BDF87644()
{
  return *(void *)(v0 + 72);
}

uint64_t sub_1BDF87650()
{
  return sub_1BE070FC0();
}

uint64_t sub_1BDF876D0()
{
  return sub_1BE070FF0();
}

void EventConferenceRoomModelObject.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  EventDirectoryRecordModelObject.init(_:)(objc_msgSend(a1, sel_location), (uint64_t)v15);
  uint64_t v4 = v18;
  if (v18)
  {
    uint64_t v5 = v16;
    long long v14 = v15[1];
    long long v12 = v17;
    long long v13 = v15[0];
    unsigned int v6 = objc_msgSend(a1, sel_supportsAvailability);
    unsigned int v7 = objc_msgSend(a1, sel_availabilityRequestInProgress);
    id v8 = objc_msgSend(a1, sel_availability);

    long long v9 = v12;
    uint64_t v10 = 256;
    if (!v7) {
      uint64_t v10 = 0;
    }
    uint64_t v11 = v10 | v6;
    *(_OWORD *)a2 = v13;
    *(_OWORD *)(a2 + 16) = v14;
    *(void *)(a2 + 32) = v5;
  }
  else
  {

    uint64_t v11 = 0;
    id v8 = 0;
    *(void *)(a2 + 32) = 0;
    long long v9 = 0uLL;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  *(_OWORD *)(a2 + 40) = v9;
  *(void *)(a2 + 56) = v4;
  *(void *)(a2 + 64) = v11;
  *(void *)(a2 + 72) = v8;
}

BOOL sub_1BDF8789C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s13CalendarUIKit12CUIKDateViewV7StylingV16FirstLineContentO9hashValueSivg_0()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDF878F8()
{
  return sub_1BE070FC0();
}

uint64_t sub_1BDF87924()
{
  return sub_1BE070FF0();
}

unint64_t sub_1BDF87968()
{
  unint64_t result = 0x6E6F697461636F6CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0x6962616C69617661;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDF87A10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDF888E8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDF87A38(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1BDF87A44(uint64_t a1)
{
  unint64_t v2 = sub_1BDF88208();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDF87A80(uint64_t a1)
{
  unint64_t v2 = sub_1BDF88208();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventConferenceRoomModelObject.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2BA8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDF88208();
  sub_1BE071010();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v35 = 0;
  sub_1BDF8825C();
  sub_1BE070DF0();
  uint64_t v10 = v27;
  uint64_t v23 = v26;
  uint64_t v24 = a2;
  uint64_t v11 = v29;
  uint64_t v12 = v31;
  uint64_t v21 = v30;
  uint64_t v22 = v28;
  uint64_t v13 = v33;
  uint64_t v20 = v32;
  LOBYTE(v26) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v34 = sub_1BE070DC0();
  LOBYTE(v26) = 2;
  int v19 = sub_1BE070D60();
  type metadata accessor for EKAvailabilitySpanType(0);
  char v35 = 3;
  sub_1BDF88AB0(&qword_1EA0E2BC0);
  sub_1BE070DA0();
  v34 &= 1u;
  char v14 = v19 & 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v25;
  uint64_t v15 = v26;
  if ((_BYTE)v27) {
    uint64_t v15 = 0;
  }
  long long v17 = v24;
  *uint64_t v24 = v23;
  v17[1] = v16;
  v17[2] = v22;
  v17[3] = v11;
  v17[4] = v21;
  v17[5] = v12;
  v17[6] = v20;
  v17[7] = v13;
  *((unsigned char *)v17 + 64) = v34;
  *((unsigned char *)v17 + 65) = v14;
  v17[9] = v15;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t EventConferenceRoomModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2BC8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v16 = v1[1];
  long long v17 = v7;
  long long v15 = v1[2];
  uint64_t v9 = *((void *)v1 + 6);
  uint64_t v8 = *((void *)v1 + 7);
  int v24 = *((unsigned __int8 *)v1 + 64);
  int v14 = *((unsigned __int8 *)v1 + 65);
  uint64_t v13 = *((void *)v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDF88208();
  sub_1BE071030();
  long long v19 = v17;
  long long v20 = v16;
  long long v21 = v15;
  uint64_t v22 = v9;
  uint64_t v23 = v8;
  char v25 = 0;
  sub_1BDF882B0();
  uint64_t v10 = v18;
  sub_1BE070EB0();
  if (!v10)
  {
    uint64_t v11 = v13;
    LOBYTE(v19) = 1;
    sub_1BE070E70();
    LOBYTE(v19) = 2;
    sub_1BE070E70();
    *(void *)&long long v19 = v11;
    char v25 = 3;
    type metadata accessor for EKAvailabilitySpanType(0);
    sub_1BDF88AB0(&qword_1EA0E2BD8);
    sub_1BE070EB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BDF8803C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return EventConferenceRoomModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BDF88054(void *a1)
{
  return EventConferenceRoomModelObject.encode(to:)(a1);
}

uint64_t sub_1BDF8806C()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BDF880E8()
{
  return sub_1BE0706A0();
}

BOOL _s13CalendarUIKit30EventConferenceRoomModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 64);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 65);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 64);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 65);
  uint64_t v11 = *(void *)(a2 + 72);
  long long v12 = *(_OWORD *)(a1 + 16);
  v19[0] = *(_OWORD *)a1;
  v19[1] = v12;
  v19[2] = *(_OWORD *)(a1 + 32);
  uint64_t v20 = v2;
  uint64_t v21 = v3;
  long long v13 = *(_OWORD *)(a2 + 16);
  v16[0] = *(_OWORD *)a2;
  v16[1] = v13;
  v16[2] = *(_OWORD *)(a2 + 32);
  uint64_t v17 = v7;
  uint64_t v18 = v8;
  if ((_s13CalendarUIKit31EventDirectoryRecordModelObjectV2eeoiySbAC_ACtFZ_0(v19, v16) & 1) == 0) {
    return 0;
  }
  BOOL v14 = ((v5 ^ v10) & 1) == 0 && v6 == v11;
  return ((v4 ^ v9) & 1) == 0 && v14;
}

unint64_t sub_1BDF88208()
{
  unint64_t result = qword_1EA0E2BB0;
  if (!qword_1EA0E2BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2BB0);
  }
  return result;
}

unint64_t sub_1BDF8825C()
{
  unint64_t result = qword_1EA0E2BB8;
  if (!qword_1EA0E2BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2BB8);
  }
  return result;
}

unint64_t sub_1BDF882B0()
{
  unint64_t result = qword_1EA0E2BD0;
  if (!qword_1EA0E2BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2BD0);
  }
  return result;
}

_UNKNOWN **sub_1BDF88304()
{
  return &protocol witness table for EventDirectoryRecordModelObject;
}

unint64_t sub_1BDF88314()
{
  unint64_t result = qword_1EA0E2BE0;
  if (!qword_1EA0E2BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2BE0);
  }
  return result;
}

uint64_t destroy for EventDirectoryRecordModelObject()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EventConferenceRoomModelObject(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EventConferenceRoomModelObject(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for EventConferenceRoomModelObject(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventConferenceRoomModelObject(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventConferenceRoomModelObject(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventConferenceRoomModelObject()
{
  return &type metadata for EventConferenceRoomModelObject;
}

uint64_t getEnumTagSinglePayload for EventConferenceRoomModelObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventConferenceRoomModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDF887A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

unsigned char *sub_1BDF887C8(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for EventConferenceRoomModelObject.CodingKeys()
{
  return &type metadata for EventConferenceRoomModelObject.CodingKeys;
}

unint64_t sub_1BDF887E4()
{
  unint64_t result = qword_1EA0E2BE8;
  if (!qword_1EA0E2BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2BE8);
  }
  return result;
}

unint64_t sub_1BDF8883C()
{
  unint64_t result = qword_1EA0E2BF0;
  if (!qword_1EA0E2BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2BF0);
  }
  return result;
}

unint64_t sub_1BDF88894()
{
  unint64_t result = qword_1EA0E2BF8;
  if (!qword_1EA0E2BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2BF8);
  }
  return result;
}

uint64_t sub_1BDF888E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BE08BB30 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001BE08BB50 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6962616C69617661 && a2 == 0xEC0000007974696CLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1BDF88AB0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for EKAvailabilitySpanType(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for CUIKEventEditorView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for CUIKEventEditorView()
{
  return swift_release();
}

void *assignWithCopy for CUIKEventEditorView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for CUIKEventEditorView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CUIKEventEditorView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CUIKEventEditorView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CUIKEventEditorView()
{
  return &type metadata for CUIKEventEditorView;
}

uint64_t sub_1BDF88C38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDF88C54@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C30);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  unsigned __int8 v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v22 - v10;
  sub_1BDF88E74(a1, a2, (void *)((char *)v22 - v10));
  type metadata accessor for CUIKEventEditorViewModel(0);
  sub_1BDF8A434();
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v12 = v22[7];
  uint64_t v13 = v22[8];
  uint64_t v14 = v22[9];
  swift_getKeyPath();
  v22[1] = v12;
  v22[2] = v13;
  v22[3] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C38);
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = v22[4];
  uint64_t v16 = v22[5];
  uint64_t v17 = (void *)v22[6];
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BDF8A49C((uint64_t)v11, (uint64_t)v9);
  sub_1BDF8A49C((uint64_t)v9, a3);
  uint64_t v19 = a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C40) + 48);
  *(void *)uint64_t v19 = v15;
  *(void *)(v19 + 8) = v16;
  *(void *)(v19 + 16) = v17;
  *(void *)(v19 + 24) = KeyPath;
  *(unsigned char *)(v19 + 32) = 0;
  id v20 = v17;
  swift_retain();
  swift_retain();
  sub_1BDF8A504(KeyPath, 0);
  sub_1BDF8A510((uint64_t)v11);

  swift_release();
  swift_release();
  sub_1BDF8A570(KeyPath, 0);
  return sub_1BDF8A510((uint64_t)v9);
}

void sub_1BDF88E74(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  v93 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v125 = (uint64_t)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TimeAndDateView();
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v116 = (uint64_t)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v129 = (uint64_t)&v83 - v10;
  id v124 = (id)a2[2];
  id v117 = objc_msgSend(v124, sel_organizer);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1BE06F220();
  swift_release();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  swift_release();
  v115 = v143;
  uint64_t v11 = type metadata accessor for CUIKEventEditorViewModel(0);
  sub_1BDF8A434();
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v12 = (uint64_t)v147;
  uint64_t v13 = v148;
  double v14 = *(double *)&v149;
  swift_getKeyPath();
  uint64_t v140 = v12;
  uint64_t v141 = v13;
  double v142 = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C38);
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v113 = v143;
  uint64_t v112 = v144;
  v92 = v145;
  uint64_t v111 = v146;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v16 = (uint64_t)v143;
  uint64_t v17 = v144;
  double v18 = *(double *)&v145;
  swift_getKeyPath();
  uint64_t v140 = v16;
  uint64_t v141 = v17;
  double v142 = v18;
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v109 = v147;
  uint64_t v108 = v148;
  id v114 = v149;
  uint64_t v95 = v11;
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v126 = v140;
  uint64_t v127 = v141;
  int v91 = LOBYTE(v142);
  uint64_t v128 = swift_getKeyPath();
  uint64_t v130 = a1;
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v19 = v143;
  uint64_t v20 = v144;
  uint64_t v21 = v145;
  swift_getKeyPath();
  v147 = v19;
  uint64_t v148 = v20;
  v149 = v21;
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v96 = a2;
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v22 = v147;
  uint64_t v23 = v148;
  uint64_t v24 = (uint64_t)v149;
  swift_getKeyPath();
  id v137 = v22;
  uint64_t v138 = v23;
  uint64_t v139 = v24;
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v25 = v140;
  uint64_t v123 = v141;
  double v26 = v142;
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  id v27 = v137;
  uint64_t v28 = v138;
  uint64_t v29 = v139;
  swift_getKeyPath();
  id v131 = v27;
  uint64_t v132 = v28;
  uint64_t v133 = v29;
  uint64_t v94 = v15;
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BDFB98B4(v125, v25, v123, v134, v135, v136, v129, v26);
  uint64_t v30 = v96;
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v31 = (uint64_t)v143;
  uint64_t v32 = v144;
  double v33 = *(double *)&v145;
  swift_getKeyPath();
  uint64_t v140 = v31;
  uint64_t v141 = v32;
  double v142 = v33;
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v34 = v148;
  char v35 = v149;
  uint64_t v107 = v30[7];
  uint64_t v140 = (uint64_t)v147;
  uint64_t v141 = v148;
  double v142 = *(double *)&v149;
  v120 = v147;
  swift_retain();
  uint64_t v125 = v34;
  swift_retain();
  id v36 = v35;
  id v105 = v36;
  swift_bridgeObjectRetain();
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C50);
  MEMORY[0x1C1888A00](&v137, v37);
  id v38 = v137;
  id v39 = objc_msgSend(v137, sel_calendarIdentifier);

  uint64_t v90 = sub_1BE070500();
  uint64_t v106 = v40;

  swift_release();
  swift_release();
  id v104 = objc_msgSend(v124, sel_organizer);
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  v102 = v143;
  uint64_t v103 = v144;
  int v89 = v145;
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v41 = (uint64_t)v143;
  uint64_t v42 = v144;
  double v43 = *(double *)&v145;
  swift_getKeyPath();
  uint64_t v140 = v41;
  uint64_t v141 = v42;
  double v142 = v43;
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v121 = v147;
  uint64_t v122 = v148;
  uint64_t v123 = (uint64_t)v149;
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v100 = v140;
  uint64_t v101 = v141;
  int v88 = LOBYTE(v142);
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v44 = v143;
  uint64_t v45 = v144;
  uint64_t v46 = v145;
  swift_getKeyPath();
  v147 = v44;
  uint64_t v148 = v45;
  v149 = v46;
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  id v124 = v137;
  uint64_t v119 = v138;
  int v87 = v139;
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v47 = (uint64_t)v147;
  uint64_t v48 = v148;
  double v49 = *(double *)&v149;
  swift_getKeyPath();
  uint64_t v140 = v47;
  uint64_t v141 = v48;
  double v142 = v49;
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  id v98 = v131;
  uint64_t v99 = v132;
  int v86 = v133;
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v50 = (uint64_t)v143;
  uint64_t v51 = v144;
  double v52 = *(double *)&v145;
  swift_getKeyPath();
  uint64_t v140 = v50;
  uint64_t v141 = v51;
  double v142 = v52;
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v118 = v147;
  uint64_t v97 = v148;
  v85 = v149;
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v53 = (uint64_t)v147;
  uint64_t v54 = v148;
  double v55 = *(double *)&v149;
  swift_getKeyPath();
  uint64_t v140 = v53;
  uint64_t v141 = v54;
  double v142 = v55;
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v96 = v143;
  uint64_t v95 = v144;
  uint64_t v84 = v145;
  uint64_t v94 = v146;
  uint64_t v130 = swift_getKeyPath();
  LOBYTE(v143) = 0;
  LOBYTE(v147) = 0;
  uint64_t v56 = v116;
  sub_1BDF8A5D4(v129, v116);
  uint64_t v57 = v93;
  uint64_t v58 = v115;
  void *v93 = v117;
  v57[1] = v58;
  uint64_t v59 = v112;
  v57[2] = v113;
  v57[3] = v59;
  uint64_t v60 = v111;
  v57[4] = v92;
  v57[5] = v60;
  uint64_t v61 = KeyPath;
  v57[6] = KeyPath;
  *((unsigned char *)v57 + 56) = 0;
  uint64_t v62 = v108;
  v57[8] = v109;
  v57[9] = v62;
  uint64_t v63 = v126;
  v57[10] = v114;
  v57[11] = v63;
  v57[12] = v127;
  *((unsigned char *)v57 + 104) = v91;
  v57[14] = v128;
  *((unsigned char *)v57 + 120) = 0;
  uint64_t v64 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C58);
  sub_1BDF8A5D4(v56, (uint64_t)v57 + v64[20]);
  char v65 = (void *)((char *)v57 + v64[24]);
  uint64_t v66 = v125;
  void *v65 = v120;
  v65[1] = v66;
  uint64_t v67 = v107;
  v65[2] = v105;
  v65[3] = v67;
  uint64_t v68 = v106;
  v65[4] = v90;
  v65[5] = v68;
  v65[6] = 0;
  uint64_t v69 = (char *)v57 + v64[28];
  uint64_t v70 = v102;
  *(void *)uint64_t v69 = v104;
  *((void *)v69 + 1) = v70;
  *((void *)v69 + 2) = v103;
  v69[24] = v89;
  uint64_t v71 = (char *)v57 + v64[32];
  uint64_t v72 = v122;
  *(void *)uint64_t v71 = v121;
  *((void *)v71 + 1) = v72;
  uint64_t v73 = v100;
  *((void *)v71 + 2) = v123;
  *((void *)v71 + 3) = v73;
  *((void *)v71 + 4) = v101;
  v71[40] = v88;
  long long v74 = (char *)v57 + v64[36];
  uint64_t v75 = v119;
  *(void *)long long v74 = v124;
  *((void *)v74 + 1) = v75;
  v74[16] = v87;
  uint64_t v76 = v99;
  *((void *)v74 + 3) = v98;
  *((void *)v74 + 4) = v76;
  v74[40] = v86;
  long long v77 = (void *)((char *)v57 + v64[40]);
  uint64_t v78 = v97;
  void *v77 = v118;
  v77[1] = v78;
  v77[2] = v85;
  v79 = (char *)v57 + v64[44];
  uint64_t v80 = v95;
  *(void *)v79 = v96;
  *((void *)v79 + 1) = v80;
  uint64_t v81 = v94;
  *((void *)v79 + 2) = v84;
  *((void *)v79 + 3) = v81;
  *((void *)v79 + 4) = v130;
  v79[40] = 0;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  id v117 = v117;
  swift_bridgeObjectRetain();
  sub_1BDF8A504(v61, 0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v114 = v114;
  sub_1BDF8A504(v128, 0);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v93 = v105;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v105 = v104;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v82 = v130;
  sub_1BDF8A504(v130, 0);
  sub_1BDF8A638(v129);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BDF8A570(v82, 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BDF8A638(v116);
  LOBYTE(v58) = (_BYTE)v147;
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  sub_1BDF8A570(v128, (char)v58);
  LOBYTE(v58) = (_BYTE)v143;
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BDF8A570(KeyPath, (char)v58);
  swift_bridgeObjectRelease();
}

uint64_t sub_1BDF8A114@<X0>(unsigned char *a1@<X8>)
{
  sub_1BDF8A3E0();
  uint64_t result = sub_1BE06F6E0();
  *a1 = v3;
  return result;
}

uint64_t sub_1BDF8A164()
{
  return sub_1BE06F6F0();
}

uint64_t sub_1BDF8A1B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = v1[1];
  uint64_t v13 = *v1;
  uint64_t v14 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C10);
  sub_1BDF86964(&qword_1EA0E2C18, &qword_1EA0E2C10);
  sub_1BE06FC50();
  uint64_t KeyPath = swift_getKeyPath();
  char v9 = *(unsigned char *)(v7 + 49);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 16))(a1, v6, v3);
  uint64_t v10 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C20) + 36);
  *(void *)uint64_t v10 = KeyPath;
  *(unsigned char *)(v10 + 8) = v9;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BDF8A33C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDF88C54(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1BDF8A344@<X0>(unsigned char *a1@<X8>)
{
  sub_1BDF8A3E0();
  uint64_t result = sub_1BE06F6E0();
  *a1 = v3;
  return result;
}

uint64_t sub_1BDF8A394()
{
  return sub_1BE06F6F0();
}

unint64_t sub_1BDF8A3E0()
{
  unint64_t result = qword_1EA0E2C28;
  if (!qword_1EA0E2C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2C28);
  }
  return result;
}

unint64_t sub_1BDF8A434()
{
  unint64_t result = qword_1EA0E33A0;
  if (!qword_1EA0E33A0)
  {
    type metadata accessor for CUIKEventEditorViewModel(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E33A0);
  }
  return result;
}

uint64_t sub_1BDF8A49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDF8A504(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BDF8A510(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDF8A570(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1BDF8A5D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimeAndDateView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDF8A638(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TimeAndDateView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BDF8A698()
{
  unint64_t result = qword_1EA0E2C60;
  if (!qword_1EA0E2C60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2C20);
    sub_1BDF86964(&qword_1EA0E2C68, &qword_1EA0E2C08);
    sub_1BDF86964(&qword_1EA0E2C70, &qword_1EA0E2C78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2C60);
  }
  return result;
}

uint64_t dispatch thunk of EventConferenceRoomModel.location.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventConferenceRoomModel.supportsAvailability.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventConferenceRoomModel.availabilityRequestInProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventConferenceRoomModel.availability.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

ValueMetadata *type metadata accessor for FamilyCalendarFlowButtonModifier()
{
  return &type metadata for FamilyCalendarFlowButtonModifier;
}

uint64_t sub_1BDF8A7C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDF8A7DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v69 = a2;
  uint64_t v68 = sub_1BE06F510() - 8;
  MEMORY[0x1F4188790](v68);
  uint64_t v67 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1BE06F9D0();
  uint64_t v66 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v61 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1BE06F300();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C80);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C88);
  uint64_t v62 = *(void *)(v11 - 8);
  uint64_t v63 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C90);
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C98) - 8;
  MEMORY[0x1F4188790](v60);
  double v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F3C600], v4);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v20 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2CA0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))((char *)v20 + *(int *)(v21 + 28), v7, v4);
  *uint64_t v20 = KeyPath;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2CA8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v10, v65, v22);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v23 = v61;
  sub_1BE06F9C0();
  sub_1BDF8ADE0();
  sub_1BDF8AEA4();
  uint64_t v24 = v59;
  uint64_t v25 = v64;
  sub_1BE06FD90();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v23, v25);
  sub_1BDF8686C((uint64_t)v10, &qword_1EA0E2C80);
  double v26 = v67;
  id v27 = &v67[*(int *)(v68 + 28)];
  uint64_t v28 = *MEMORY[0x1E4F3D498];
  uint64_t v29 = sub_1BE06F7C0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v27, v28, v29);
  __asm { FMOV            V0.2D, #14.0 }
  *double v26 = _Q0;
  uint64_t v35 = (uint64_t)&v16[*(int *)(v14 + 44)];
  sub_1BDF8AEFC((uint64_t)v26, v35);
  *(_WORD *)(v35 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2CD0) + 36)) = 256;
  uint64_t v37 = v62;
  uint64_t v36 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v16, v24, v63);
  sub_1BDF8AF60((uint64_t)v26);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v36);
  LOBYTE(v26) = sub_1BE06FAC0();
  sub_1BE06F2D0();
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  sub_1BDF86808((uint64_t)v16, (uint64_t)v18, &qword_1EA0E2C90);
  uint64_t v46 = &v18[*(int *)(v60 + 44)];
  char *v46 = (char)v26;
  *((void *)v46 + 1) = v39;
  *((void *)v46 + 2) = v41;
  *((void *)v46 + 3) = v43;
  *((void *)v46 + 4) = v45;
  v46[40] = 0;
  sub_1BDF8686C((uint64_t)v16, &qword_1EA0E2C90);
  LOBYTE(v26) = sub_1BE06FAE0();
  sub_1BE06F2D0();
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v55 = v69;
  sub_1BDF86808((uint64_t)v18, v69, &qword_1EA0E2C98);
  uint64_t v56 = v55 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2CD8) + 36);
  *(unsigned char *)uint64_t v56 = (_BYTE)v26;
  *(void *)(v56 + 8) = v48;
  *(void *)(v56 + 16) = v50;
  *(void *)(v56 + 24) = v52;
  *(void *)(v56 + 32) = v54;
  *(unsigned char *)(v56 + 40) = 0;
  return sub_1BDF8686C((uint64_t)v18, &qword_1EA0E2C98);
}

uint64_t sub_1BDF8ADB8()
{
  return sub_1BE06F380();
}

unint64_t sub_1BDF8ADE0()
{
  unint64_t result = qword_1EA0E2CB0;
  if (!qword_1EA0E2CB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2C80);
    sub_1BDF86964(&qword_1EA0E2CB8, &qword_1EA0E2CA8);
    sub_1BDF86964(&qword_1EA0E2CC0, &qword_1EA0E2CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2CB0);
  }
  return result;
}

unint64_t sub_1BDF8AEA4()
{
  unint64_t result = qword_1EA0E2CC8;
  if (!qword_1EA0E2CC8)
  {
    sub_1BE06F9D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2CC8);
  }
  return result;
}

uint64_t sub_1BDF8AEFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06F510();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDF8AF60(uint64_t a1)
{
  uint64_t v2 = sub_1BE06F510();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDF8AFBC()
{
  return sub_1BDF8B020(&qword_1EA0E2CE0, &qword_1EA0E2CD8, (void (*)(void))sub_1BDF8AFF8);
}

uint64_t sub_1BDF8AFF8()
{
  return sub_1BDF8B020(&qword_1EA0E2CE8, &qword_1EA0E2C98, (void (*)(void))sub_1BDF8B0A0);
}

uint64_t sub_1BDF8B020(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDF8B0A0()
{
  unint64_t result = qword_1EA0E2CF0;
  if (!qword_1EA0E2CF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2C90);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2C80);
    sub_1BE06F9D0();
    sub_1BDF8ADE0();
    sub_1BDF8AEA4();
    swift_getOpaqueTypeConformance2();
    sub_1BDF86964(&qword_1EA0E2CF8, &qword_1EA0E2CD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2CF0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CUIKProposedTimeView()
{
  return &type metadata for CUIKProposedTimeView;
}

uint64_t sub_1BDF8B1A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDF8B1C0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TimeAndDateView();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v34 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - v9;
  type metadata accessor for CUIKProposedTimeViewModel();
  sub_1BDF8B7B8();
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v31 = v40;
  uint64_t v32 = v39;
  double v33 = v41;
  uint64_t v30 = v42;
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v11 = v39;
  uint64_t v12 = v40;
  double v13 = v41;
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  sub_1BDFB98B4((uint64_t)v5, v11, v12, v36, v37, v38, (uint64_t)v10, v13);
  id v27 = *(id *)(a1 + OBJC_IVAR____TtC13CalendarUIKit25CUIKProposedTimeViewModel_organizer);
  id v28 = v27;
  sub_1BE06F450();
  swift_getKeyPath();
  sub_1BE06F460();
  swift_release();
  swift_release();
  uint64_t v14 = v39;
  uint64_t v15 = v40;
  char v16 = LOBYTE(v41);
  double v26 = v10;
  uint64_t v17 = v34;
  sub_1BDF8A5D4((uint64_t)v10, v34);
  uint64_t v18 = v31;
  uint64_t v19 = (double *)v35;
  uint64_t *v35 = v32;
  *((void *)v19 + 1) = v18;
  uint64_t v21 = KeyPath;
  uint64_t v20 = v30;
  v19[2] = v33;
  *((void *)v19 + 3) = v20;
  *((void *)v19 + 4) = v21;
  *((unsigned char *)v19 + 40) = 0;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2D30);
  sub_1BDF8A5D4(v17, (uint64_t)v19 + *(int *)(v22 + 48));
  uint64_t v23 = (char *)v19 + *(int *)(v22 + 64);
  *(void *)uint64_t v23 = v27;
  *((void *)v23 + 1) = v14;
  *((void *)v23 + 2) = v15;
  v23[24] = v16;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BDF8A504(v21, 0);
  swift_retain();
  swift_retain();
  id v24 = v28;
  sub_1BDF8A638((uint64_t)v26);
  swift_release();
  swift_release();

  sub_1BDF8A638(v17);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_1BDF8A570(v21, 0);
}

uint64_t sub_1BDF8B5B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2D00);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = v1[1];
  uint64_t v12 = *v1;
  uint64_t v13 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2D08);
  sub_1BDF8B718();
  sub_1BE06FC50();
  uint64_t KeyPath = swift_getKeyPath();
  LOBYTE(v7) = *(unsigned char *)(v7 + 32);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 16))(a1, v6, v3);
  uint64_t v9 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2D28) + 36);
  *(void *)uint64_t v9 = KeyPath;
  *(unsigned char *)(v9 + 8) = v7;
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BDF8B710@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BDF8B1C0(*(void *)(v1 + 24), a1);
}

unint64_t sub_1BDF8B718()
{
  unint64_t result = qword_1EA0E2D10;
  if (!qword_1EA0E2D10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2D08);
    sub_1BDF86964(&qword_1EA0E2D18, &qword_1EA0E2D20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2D10);
  }
  return result;
}

unint64_t sub_1BDF8B7B8()
{
  unint64_t result = qword_1EA0E37C0;
  if (!qword_1EA0E37C0)
  {
    type metadata accessor for CUIKProposedTimeViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E37C0);
  }
  return result;
}

unint64_t sub_1BDF8B83C()
{
  unint64_t result = qword_1EA0E2D38;
  if (!qword_1EA0E2D38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2D28);
    sub_1BDF86964(&qword_1EA0E2D40, &qword_1EA0E2D00);
    sub_1BDF86964(&qword_1EA0E2C70, &qword_1EA0E2C78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2D38);
  }
  return result;
}

id EKAlarmModelWrapper.ekAlarm.getter()
{
  return *v0;
}

void EKAlarmModelWrapper.ekAlarm.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*EKAlarmModelWrapper.ekAlarm.modify())()
{
  return nullsub_1;
}

uint64_t EKAlarmModelWrapper.trigger.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - v11;
  id v13 = *v1;
  id v14 = objc_msgSend(*v1, sel_absoluteDate);
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_5;
  }
  uint64_t v15 = v14;
  sub_1BE06EEC0();

  char v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v16(v5, v10, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_5:
    sub_1BDF8BBAC((uint64_t)v5);
    objc_msgSend(v13, sel_relativeOffset);
    *(void *)a1 = v17;
    type metadata accessor for EventAlarmTrigger();
    return swift_storeEnumTagMultiPayload();
  }
  v16(v12, v5, v6);
  v16(a1, v12, v6);
  type metadata accessor for EventAlarmTrigger();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BDF8BBAC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id EKAlarmModelWrapper.isDefault.getter()
{
  return objc_msgSend(*v0, sel_isDefaultAlarm);
}

CalendarUIKit::EKAlarmModelWrapper __swiftcall EKAlarmModelWrapper.init(_:)(CalendarUIKit::EKAlarmModelWrapper result)
{
  v1->ekAlarm.super.super.isa = result.ekAlarm.super.super.isa;
  return result;
}

id sub_1BDF8BC3C()
{
  return objc_msgSend(*v0, sel_isDefaultAlarm);
}

ValueMetadata *type metadata accessor for EKAlarmModelWrapper()
{
  return &type metadata for EKAlarmModelWrapper;
}

BOOL EventAttendeeModel.hasRealComment.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 40))();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = (void *)sub_1BE0704C0();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v3, sel_CalStringByRemovingAutoComment);

  if (!v4) {
    return 0;
  }
  uint64_t v5 = sub_1BE070500();
  unint64_t v7 = v6;

  swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  return v8 != 0;
}

unint64_t EventAttendeeModel.statusImageName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 16))();
  unint64_t v3 = 0xD000000000000018;
  unint64_t v4 = 0xD000000000000013;
  if (v2 == 3) {
    unint64_t v4 = 0xD000000000000011;
  }
  if (v2 != 4) {
    unint64_t v3 = v4;
  }
  if (v2 == 2) {
    return 0xD000000000000015;
  }
  else {
    return v3;
  }
}

uint64_t EventAttendeeModel.statusColor.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 16))();
  switch(v2)
  {
    case 4:
      return MEMORY[0x1F40FC410]();
    case 3:
      return sub_1BE06FF90();
    case 2:
      return sub_1BE06FFE0();
    default:
      return sub_1BE06FFA0();
  }
}

BOOL EventAttendeeModel.isRealPerson.getter(uint64_t a1, uint64_t a2)
{
  return ((*(uint64_t (**)(void))(a2 + 32))() & 0xFFFFFFFFFFFFFFFELL) != 2;
}

uint64_t (*EventParticipantModelObject.name.modify())()
{
  return nullsub_1;
}

uint64_t (*EventParticipantModelObject.emailAddress.modify())()
{
  return nullsub_1;
}

uint64_t (*EventParticipantModelObject.phoneNumber.modify())()
{
  return nullsub_1;
}

uint64_t EventParticipantModelObject.url.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDF8CC0C(type metadata accessor for EventParticipantModelObject, a1);
}

uint64_t type metadata accessor for EventParticipantModelObject(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E1960);
}

uint64_t sub_1BDF8BF34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t EventParticipantModelObject.url.setter(uint64_t a1)
{
  return sub_1BDF8CC70(a1, type metadata accessor for EventParticipantModelObject);
}

uint64_t sub_1BDF8BFB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*EventParticipantModelObject.url.modify())()
{
  return nullsub_1;
}

uint64_t EventParticipantModelObject.id.getter()
{
  return sub_1BDF8CD18(type metadata accessor for EventParticipantModelObject);
}

uint64_t EventParticipantModelObject.id.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BDF8CD78(a1, a2, type metadata accessor for EventParticipantModelObject);
}

uint64_t (*EventParticipantModelObject.id.modify())()
{
  return nullsub_1;
}

uint64_t EventParticipantModelObject.isCurrentUser.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventParticipantModelObject(0) + 36));
}

uint64_t EventParticipantModelObject.isCurrentUser.setter(char a1)
{
  return sub_1BDF8CE48(a1, type metadata accessor for EventParticipantModelObject);
}

uint64_t (*EventParticipantModelObject.isCurrentUser.modify())()
{
  return nullsub_1;
}

uint64_t EventParticipantModelObject.contactID.getter()
{
  return sub_1BDF8CEDC(type metadata accessor for EventParticipantModelObject);
}

uint64_t EventParticipantModelObject.contactID.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BDF8CF3C(a1, a2, type metadata accessor for EventParticipantModelObject);
}

uint64_t (*EventParticipantModelObject.contactID.modify())()
{
  return nullsub_1;
}

uint64_t EventParticipantModelObject.init(name:emailAddress:phoneNumber:url:id:isCurrentUser:contactID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13)
{
  uint64_t v19 = (int *)type metadata accessor for EventParticipantModelObject(0);
  uint64_t v20 = (uint64_t)a9 + v19[7];
  uint64_t v21 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v22 = (void *)((char *)a9 + v19[10]);
  void *v22 = 0;
  v22[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  sub_1BDF8BFB4(a7, v20);
  uint64_t v23 = (void *)((char *)a9 + v19[8]);
  *uint64_t v23 = a8;
  v23[1] = a10;
  *((unsigned char *)a9 + v19[9]) = a11;
  uint64_t result = swift_bridgeObjectRelease();
  void *v22 = a12;
  v22[1] = a13;
  return result;
}

uint64_t EventParticipantModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EventParticipantModelObject(0);
  uint64_t v8 = (int *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *(_OWORD *)uint64_t v10 = 0u;
  uint64_t v11 = (uint64_t)&v10[v8[9]];
  uint64_t v12 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  id v13 = (uint64_t *)&v10[v8[12]];
  uint64_t *v13 = 0;
  v13[1] = 0;
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  *(void *)uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  *((void *)v10 + 1) = v16;
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  *((void *)v10 + 2) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 32))(v17, v18);
  *((void *)v10 + 3) = v19;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  *((void *)v10 + 4) = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 40))(v20, v21);
  *((void *)v10 + 5) = v22;
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  (*(void (**)(uint64_t, uint64_t))(v24 + 48))(v23, v24);
  sub_1BDF8BFB4((uint64_t)v6, v11);
  uint64_t v25 = a1[3];
  uint64_t v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  id v28 = (uint64_t *)&v10[v8[10]];
  uint64_t *v28 = v27;
  v28[1] = v29;
  uint64_t v30 = a1[3];
  uint64_t v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  v10[v8[11]] = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 56))(v30, v31) & 1;
  uint64_t v32 = a1[3];
  uint64_t v33 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v32);
  uint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 64))(v32, v33);
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  uint64_t *v13 = v34;
  v13[1] = v36;
  sub_1BDF91508((uint64_t)v10, a2, type metadata accessor for EventParticipantModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BDF91570((uint64_t)v10, type metadata accessor for EventParticipantModelObject);
}

uint64_t EventParticipantModelObject.hash(into:)()
{
  uint64_t v1 = sub_1BE06EE10();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[1])
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    if (v0[3]) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1BE070FD0();
    if (v0[5]) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_1BE070FD0();
  if (!v0[3]) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  if (v0[5])
  {
LABEL_4:
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  sub_1BE070FD0();
LABEL_8:
  uint64_t v8 = type metadata accessor for EventParticipantModelObject(0);
  sub_1BDF8BF34((uint64_t)v0 + *(int *)(v8 + 28), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1BE070FD0();
    sub_1BDF9217C(&qword_1EA0E2D48, MEMORY[0x1E4F276F0]);
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  sub_1BE070FD0();
  if (!*(void *)((char *)v0 + *(int *)(v8 + 40) + 8)) {
    return sub_1BE070FD0();
  }
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  return swift_bridgeObjectRelease();
}

uint64_t EventParticipantModelObject.hashValue.getter()
{
  return sub_1BDF8E8E8((void (*)(unsigned char *))EventParticipantModelObject.hash(into:));
}

uint64_t (*sub_1BDF8C984())()
{
  return nullsub_1;
}

uint64_t (*sub_1BDF8C9A8())()
{
  return nullsub_1;
}

uint64_t (*sub_1BDF8C9CC())()
{
  return nullsub_1;
}

uint64_t (*sub_1BDF8C9F0())()
{
  return nullsub_1;
}

uint64_t (*sub_1BDF8CA10())()
{
  return nullsub_1;
}

uint64_t (*sub_1BDF8CA34())()
{
  return nullsub_1;
}

uint64_t (*sub_1BDF8CA5C())()
{
  return nullsub_1;
}

uint64_t sub_1BDF8CA80(uint64_t a1, uint64_t a2)
{
  return sub_1BDF8E9C8(a1, a2, (void (*)(unsigned char *))EventParticipantModelObject.hash(into:));
}

uint64_t sub_1BDF8CA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDF8EA2C(a1, a2, a3, (void (*)(unsigned char *))EventParticipantModelObject.hash(into:));
}

uint64_t EventAttendeeModelObject.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventAttendeeModelObject.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*EventAttendeeModelObject.name.modify())()
{
  return nullsub_1;
}

uint64_t EventAttendeeModelObject.emailAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*EventAttendeeModelObject.emailAddress.modify())()
{
  return nullsub_1;
}

uint64_t EventAttendeeModelObject.phoneNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*EventAttendeeModelObject.phoneNumber.modify())()
{
  return nullsub_1;
}

uint64_t EventAttendeeModelObject.url.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDF8CC0C(type metadata accessor for EventAttendeeModelObject, a1);
}

uint64_t sub_1BDF8CC0C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1(0) + 28);

  return sub_1BDF8BF34(v4, a2);
}

uint64_t EventAttendeeModelObject.url.setter(uint64_t a1)
{
  return sub_1BDF8CC70(a1, type metadata accessor for EventAttendeeModelObject);
}

uint64_t sub_1BDF8CC70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = v2 + *(int *)(a2(0) + 28);

  return sub_1BDF8BFB4(a1, v4);
}

uint64_t (*EventAttendeeModelObject.url.modify())()
{
  return nullsub_1;
}

uint64_t EventAttendeeModelObject.id.getter()
{
  return sub_1BDF8CD18(type metadata accessor for EventAttendeeModelObject);
}

uint64_t sub_1BDF8CD18(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t EventAttendeeModelObject.id.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BDF8CD78(a1, a2, type metadata accessor for EventAttendeeModelObject);
}

uint64_t sub_1BDF8CD78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3(0) + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*EventAttendeeModelObject.id.modify())()
{
  return nullsub_1;
}

uint64_t EventAttendeeModelObject.isCurrentUser.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventAttendeeModelObject(0) + 36));
}

uint64_t EventAttendeeModelObject.isCurrentUser.setter(char a1)
{
  return sub_1BDF8CE48(a1, type metadata accessor for EventAttendeeModelObject);
}

uint64_t sub_1BDF8CE48(char a1, uint64_t (*a2)(void))
{
  uint64_t result = a2(0);
  *(unsigned char *)(v2 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*EventAttendeeModelObject.isCurrentUser.modify())()
{
  return nullsub_1;
}

uint64_t EventAttendeeModelObject.contactID.getter()
{
  return sub_1BDF8CEDC(type metadata accessor for EventAttendeeModelObject);
}

uint64_t sub_1BDF8CEDC(uint64_t (*a1)(void))
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1(0) + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t EventAttendeeModelObject.contactID.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BDF8CF3C(a1, a2, type metadata accessor for EventAttendeeModelObject);
}

uint64_t sub_1BDF8CF3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3(0) + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*EventAttendeeModelObject.contactID.modify())()
{
  return nullsub_1;
}

uint64_t EventAttendeeModelObject.status.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventAttendeeModelObject(0) + 44));
}

uint64_t EventAttendeeModelObject.status.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for EventAttendeeModelObject(0);
  *(void *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*EventAttendeeModelObject.status.modify())()
{
  return nullsub_1;
}

uint64_t EventAttendeeModelObject.role.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventAttendeeModelObject(0) + 48));
}

uint64_t EventAttendeeModelObject.role.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for EventAttendeeModelObject(0);
  *(void *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*EventAttendeeModelObject.role.modify())()
{
  return nullsub_1;
}

uint64_t EventAttendeeModelObject.type.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventAttendeeModelObject(0) + 52));
}

uint64_t EventAttendeeModelObject.type.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for EventAttendeeModelObject(0);
  *(void *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*EventAttendeeModelObject.type.modify())()
{
  return nullsub_1;
}

uint64_t EventAttendeeModelObject.comment.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EventAttendeeModelObject(0) + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventAttendeeModelObject.comment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for EventAttendeeModelObject(0) + 56));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EventAttendeeModelObject.comment.modify())()
{
  return nullsub_1;
}

uint64_t EventAttendeeModelObject.init(name:emailAddress:phoneNumber:url:id:isCurrentUser:contactID:status:role:type:comment:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v23 = (int *)type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v24 = (uint64_t)a9 + v23[7];
  uint64_t v25 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  uint64_t v26 = (void *)((char *)a9 + v23[10]);
  *uint64_t v26 = 0;
  v26[1] = 0;
  uint64_t v27 = (void *)((char *)a9 + v23[14]);
  *uint64_t v27 = 0;
  v27[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  sub_1BDF8BFB4(a7, v24);
  id v28 = (void *)((char *)a9 + v23[8]);
  void *v28 = a8;
  v28[1] = a10;
  *((unsigned char *)a9 + v23[9]) = a11;
  swift_bridgeObjectRelease();
  *uint64_t v26 = a12;
  v26[1] = a13;
  *(void *)((char *)a9 + v23[11]) = a14;
  *(void *)((char *)a9 + v23[12]) = a15;
  *(void *)((char *)a9 + v23[13]) = a16;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v27 = a17;
  v27[1] = a18;
  return result;
}

uint64_t EventAttendeeModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v8 = (int *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *(_OWORD *)uint64_t v10 = 0u;
  uint64_t v11 = (uint64_t)&v10[v8[9]];
  uint64_t v12 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  id v13 = (uint64_t *)&v10[v8[12]];
  uint64_t *v13 = 0;
  v13[1] = 0;
  uint64_t v14 = (uint64_t *)&v10[v8[16]];
  uint64_t *v14 = 0;
  v14[1] = 0;
  uint64_t v16 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  *(void *)uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(v15 + 8) + 24))(v16);
  *((void *)v10 + 1) = v17;
  uint64_t v19 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  *((void *)v10 + 2) = (*(uint64_t (**)(uint64_t))(*(void *)(v18 + 8) + 32))(v19);
  *((void *)v10 + 3) = v20;
  uint64_t v22 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  *((void *)v10 + 4) = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 40))(v22);
  *((void *)v10 + 5) = v23;
  uint64_t v25 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  (*(void (**)(uint64_t))(*(void *)(v24 + 8) + 48))(v25);
  sub_1BDF8BFB4((uint64_t)v6, v11);
  uint64_t v27 = a1[3];
  uint64_t v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(*(void *)(v26 + 8) + 16))(v27);
  uint64_t v29 = (uint64_t *)&v10[v8[10]];
  uint64_t *v29 = v28;
  v29[1] = v30;
  uint64_t v32 = a1[3];
  uint64_t v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v32);
  v10[v8[11]] = (*(uint64_t (**)(uint64_t))(*(void *)(v31 + 8) + 56))(v32) & 1;
  uint64_t v34 = a1[3];
  uint64_t v33 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v34);
  uint64_t v35 = (*(uint64_t (**)(uint64_t))(*(void *)(v33 + 8) + 64))(v34);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  uint64_t *v13 = v35;
  v13[1] = v37;
  uint64_t v38 = a1[3];
  uint64_t v39 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v38);
  *(void *)&v10[v8[13]] = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 16))(v38, v39);
  uint64_t v40 = a1[3];
  uint64_t v41 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v40);
  *(void *)&v10[v8[14]] = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 24))(v40, v41);
  uint64_t v42 = a1[3];
  uint64_t v43 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v42);
  *(void *)&v10[v8[15]] = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 32))(v42, v43);
  uint64_t v44 = a1[3];
  uint64_t v45 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v44);
  uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 40))(v44, v45);
  uint64_t v48 = v47;
  swift_bridgeObjectRelease();
  uint64_t *v14 = v46;
  v14[1] = v48;
  sub_1BDF91508((uint64_t)v10, a2, type metadata accessor for EventAttendeeModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BDF91570((uint64_t)v10, type metadata accessor for EventAttendeeModelObject);
}

uint64_t EventAttendeeModelObject.hash(into:)()
{
  uint64_t v1 = sub_1BE06EE10();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[1])
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    if (v0[3]) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1BE070FD0();
    if (v0[5]) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_1BE070FD0();
  if (!v0[3]) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  if (v0[5])
  {
LABEL_4:
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  sub_1BE070FD0();
LABEL_8:
  uint64_t v8 = (int *)type metadata accessor for EventAttendeeModelObject(0);
  sub_1BDF8BF34((uint64_t)v0 + v8[7], (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1BE070FD0();
    sub_1BDF9217C(&qword_1EA0E2D48, MEMORY[0x1E4F276F0]);
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  sub_1BE070FD0();
  if (*(void *)((char *)v0 + v8[10] + 8))
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BE070FD0();
  }
  sub_1BE070FC0();
  sub_1BE070FC0();
  sub_1BE070FC0();
  if (!*(void *)((char *)v0 + v8[14] + 8)) {
    return sub_1BE070FD0();
  }
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  return swift_bridgeObjectRelease();
}

uint64_t EventAttendeeModelObject.hashValue.getter()
{
  return sub_1BDF8E8E8((void (*)(unsigned char *))EventAttendeeModelObject.hash(into:));
}

uint64_t sub_1BDF8DBF4(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_1BDF8DC00(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 48));
}

uint64_t sub_1BDF8DC0C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 52));
}

uint64_t sub_1BDF8DC18(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 56));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BDF8DC50(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t sub_1BDF8DC88(uint64_t a1, uint64_t a2)
{
  return sub_1BDF8BFB4(a1, v2 + *(int *)(a2 + 28));
}

uint64_t sub_1BDF8DC94(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 36)) = result;
  return result;
}

uint64_t sub_1BDF8DCA0(uint64_t a1, uint64_t a2)
{
  return sub_1BDF8E9C8(a1, a2, (void (*)(unsigned char *))EventAttendeeModelObject.hash(into:));
}

uint64_t sub_1BDF8DCBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDF8EA2C(a1, a2, a3, (void (*)(unsigned char *))EventAttendeeModelObject.hash(into:));
}

uint64_t sub_1BDF8DCD4()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDF8DD04()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDF8DD34()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDF8DD64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF8BF34(v2 + *(int *)(a1 + 28), a2);
}

uint64_t sub_1BDF8DD74(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t (*EventOrganizerModelObject.name.modify())()
{
  return nullsub_1;
}

uint64_t _s13CalendarUIKit27EventParticipantModelObjectV12emailAddressSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*EventOrganizerModelObject.emailAddress.modify())()
{
  return nullsub_1;
}

uint64_t _s13CalendarUIKit27EventParticipantModelObjectV11phoneNumberSSSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*EventOrganizerModelObject.phoneNumber.modify())()
{
  return nullsub_1;
}

uint64_t EventOrganizerModelObject.url.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDF8CC0C(type metadata accessor for EventOrganizerModelObject, a1);
}

uint64_t EventOrganizerModelObject.url.setter(uint64_t a1)
{
  return sub_1BDF8CC70(a1, type metadata accessor for EventOrganizerModelObject);
}

uint64_t (*EventOrganizerModelObject.url.modify())()
{
  return nullsub_1;
}

uint64_t EventOrganizerModelObject.id.getter()
{
  return sub_1BDF8CD18(type metadata accessor for EventOrganizerModelObject);
}

uint64_t EventOrganizerModelObject.id.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BDF8CD78(a1, a2, type metadata accessor for EventOrganizerModelObject);
}

uint64_t (*EventOrganizerModelObject.id.modify())()
{
  return nullsub_1;
}

uint64_t EventOrganizerModelObject.isCurrentUser.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventOrganizerModelObject(0) + 36));
}

uint64_t EventOrganizerModelObject.isCurrentUser.setter(char a1)
{
  return sub_1BDF8CE48(a1, type metadata accessor for EventOrganizerModelObject);
}

uint64_t (*EventOrganizerModelObject.isCurrentUser.modify())()
{
  return nullsub_1;
}

uint64_t EventOrganizerModelObject.contactID.getter()
{
  return sub_1BDF8CEDC(type metadata accessor for EventOrganizerModelObject);
}

uint64_t EventOrganizerModelObject.contactID.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BDF8CF3C(a1, a2, type metadata accessor for EventOrganizerModelObject);
}

uint64_t (*EventOrganizerModelObject.contactID.modify())()
{
  return nullsub_1;
}

uint64_t EventOrganizerModelObject.scheduleAgent.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventOrganizerModelObject(0) + 44));
}

uint64_t EventOrganizerModelObject.scheduleAgent.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for EventOrganizerModelObject(0);
  *(void *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*EventOrganizerModelObject.scheduleAgent.modify())()
{
  return nullsub_1;
}

uint64_t EventOrganizerModelObject.init(name:emailAddress:phoneNumber:url:id:isCurrentUser:contactID:scheduleAgent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v20 = (int *)type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v21 = (uint64_t)a9 + v20[7];
  uint64_t v22 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v23 = (void *)((char *)a9 + v20[10]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  sub_1BDF8BFB4(a7, v21);
  uint64_t v24 = (void *)((char *)a9 + v20[8]);
  *uint64_t v24 = a8;
  v24[1] = a10;
  *((unsigned char *)a9 + v20[9]) = a11;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v23 = a12;
  v23[1] = a13;
  *(void *)((char *)a9 + v20[11]) = a14;
  return result;
}

uint64_t EventOrganizerModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v8 = (int *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *(_OWORD *)uint64_t v10 = 0u;
  uint64_t v11 = (uint64_t)&v10[v8[9]];
  uint64_t v12 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  id v13 = (uint64_t *)&v10[v8[12]];
  uint64_t *v13 = 0;
  v13[1] = 0;
  uint64_t v15 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  *(void *)uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(v14 + 8) + 24))(v15);
  *((void *)v10 + 1) = v16;
  uint64_t v18 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  *((void *)v10 + 2) = (*(uint64_t (**)(uint64_t))(*(void *)(v17 + 8) + 32))(v18);
  *((void *)v10 + 3) = v19;
  uint64_t v21 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  *((void *)v10 + 4) = (*(uint64_t (**)(uint64_t))(*(void *)(v20 + 8) + 40))(v21);
  *((void *)v10 + 5) = v22;
  uint64_t v24 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  (*(void (**)(uint64_t))(*(void *)(v23 + 8) + 48))(v24);
  sub_1BDF8BFB4((uint64_t)v6, v11);
  uint64_t v26 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)(v25 + 8) + 16))(v26);
  uint64_t v28 = (uint64_t *)&v10[v8[10]];
  uint64_t *v28 = v27;
  v28[1] = v29;
  uint64_t v31 = a1[3];
  uint64_t v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v31);
  v10[v8[11]] = (*(uint64_t (**)(uint64_t))(*(void *)(v30 + 8) + 56))(v31) & 1;
  uint64_t v33 = a1[3];
  uint64_t v32 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v33);
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(*(void *)(v32 + 8) + 64))(v33);
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  uint64_t *v13 = v34;
  v13[1] = v36;
  uint64_t v37 = a1[3];
  uint64_t v38 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v37);
  *(void *)&v10[v8[13]] = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
  sub_1BDF91508((uint64_t)v10, a2, type metadata accessor for EventOrganizerModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BDF91570((uint64_t)v10, type metadata accessor for EventOrganizerModelObject);
}

uint64_t EventOrganizerModelObject.hash(into:)()
{
  uint64_t v1 = sub_1BE06EE10();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[1])
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    if (v0[3]) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1BE070FD0();
    if (v0[5]) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_1BE070FD0();
  if (!v0[3]) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  if (v0[5])
  {
LABEL_4:
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  sub_1BE070FD0();
LABEL_8:
  uint64_t v8 = type metadata accessor for EventOrganizerModelObject(0);
  sub_1BDF8BF34((uint64_t)v0 + *(int *)(v8 + 28), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1BE070FD0();
    sub_1BDF9217C(&qword_1EA0E2D48, MEMORY[0x1E4F276F0]);
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  sub_1BE070FD0();
  if (*(void *)((char *)v0 + *(int *)(v8 + 40) + 8))
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BE070FD0();
  }
  return sub_1BE070FC0();
}

uint64_t EventOrganizerModelObject.hashValue.getter()
{
  return sub_1BDF8E8E8((void (*)(unsigned char *))EventOrganizerModelObject.hash(into:));
}

uint64_t sub_1BDF8E8E8(void (*a1)(unsigned char *))
{
  sub_1BE070FB0();
  a1(v3);
  return sub_1BE070FF0();
}

uint64_t sub_1BDF8E930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t sub_1BDF8E970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t sub_1BDF8E9B0(uint64_t a1, uint64_t a2)
{
  return sub_1BDF8E9C8(a1, a2, (void (*)(unsigned char *))EventOrganizerModelObject.hash(into:));
}

uint64_t sub_1BDF8E9C8(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_1BE070FB0();
  a3(v5);
  return sub_1BE070FF0();
}

uint64_t sub_1BDF8EA14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BDF8EA2C(a1, a2, a3, (void (*)(unsigned char *))EventOrganizerModelObject.hash(into:));
}

uint64_t sub_1BDF8EA2C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_1BE070FB0();
  a4(v6);
  return sub_1BE070FF0();
}

uint64_t sub_1BDF8EA70(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BDF8EAA8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BDF8EAE4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a1 + 32));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDF8EB00()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6464416C69616D65;
      break;
    case 2:
      uint64_t result = 0x6D754E656E6F6870;
      break;
    case 3:
      uint64_t result = 7107189;
      break;
    case 4:
      uint64_t result = 25705;
      break;
    case 5:
      uint64_t result = 0x6E65727275437369;
      break;
    case 6:
      uint64_t result = 0x49746361746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDF8EBE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDF95090(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDF8EC10(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1BDF8EC1C(uint64_t a1)
{
  unint64_t v2 = sub_1BDF92128();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDF8EC58(uint64_t a1)
{
  unint64_t v2 = sub_1BDF92128();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventParticipantModelObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2D50);
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EventParticipantModelObject(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v12 + 1) = 0u;
  *((_OWORD *)v12 + 2) = 0u;
  *(_OWORD *)uint64_t v12 = 0u;
  uint64_t v13 = (uint64_t)&v12[*(int *)(v10 + 28)];
  uint64_t v14 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v34 = v9;
  uint64_t v15 = &v12[*(int *)(v9 + 40)];
  *(void *)uint64_t v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v36 = a1;
  uint64_t v37 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDF92128();
  uint64_t v35 = v8;
  uint64_t v16 = v38;
  sub_1BE071010();
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDF8686C(v13, &qword_1EB678020);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v32;
    uint64_t v18 = v33;
    char v45 = 0;
    *(void *)uint64_t v12 = sub_1BE070D50();
    *((void *)v12 + 1) = v19;
    char v44 = 1;
    *((void *)v12 + 2) = sub_1BE070D50();
    *((void *)v12 + 3) = v20;
    char v43 = 2;
    *((void *)v12 + 4) = sub_1BE070D50();
    *((void *)v12 + 5) = v21;
    char v42 = 3;
    sub_1BDF9217C(&qword_1EA0E2D60, MEMORY[0x1E4F276F0]);
    sub_1BE070DA0();
    sub_1BDF8BFB4((uint64_t)v5, v13);
    char v41 = 4;
    uint64_t v22 = sub_1BE070DB0();
    uint64_t v23 = v34;
    uint64_t v24 = (uint64_t *)&v12[*(int *)(v34 + 32)];
    *uint64_t v24 = v22;
    v24[1] = v25;
    char v40 = 5;
    v12[*(int *)(v23 + 36)] = sub_1BE070D60() & 1;
    char v39 = 6;
    uint64_t v26 = sub_1BE070D50();
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v35, v18);
    uint64_t v29 = (uint64_t *)v37;
    swift_bridgeObjectRelease();
    uint64_t *v29 = v26;
    v29[1] = v28;
    sub_1BDF91508((uint64_t)v12, v31, type metadata accessor for EventParticipantModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    return sub_1BDF91570((uint64_t)v12, type metadata accessor for EventParticipantModelObject);
  }
}

uint64_t EventParticipantModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2D68);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDF92128();
  sub_1BE071030();
  v8[15] = 0;
  sub_1BE070E30();
  if (!v1)
  {
    v8[14] = 1;
    sub_1BE070E30();
    v8[13] = 2;
    sub_1BE070E30();
    type metadata accessor for EventParticipantModelObject(0);
    v8[12] = 3;
    sub_1BE06EE10();
    sub_1BDF9217C(&qword_1EA0E2D70, MEMORY[0x1E4F276F0]);
    sub_1BE070E50();
    v8[11] = 4;
    sub_1BE070E60();
    v8[10] = 5;
    sub_1BE070E70();
    v8[9] = 6;
    sub_1BE070E30();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BDF8F3C4(char a1)
{
  uint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6464416C69616D65;
      break;
    case 2:
      uint64_t result = 0x6D754E656E6F6870;
      break;
    case 3:
      uint64_t result = 7107189;
      break;
    case 4:
      uint64_t result = 25705;
      break;
    case 5:
      uint64_t result = 0x6E65727275437369;
      break;
    case 6:
      uint64_t result = 0x49746361746E6F63;
      break;
    case 7:
      uint64_t result = 0x737574617473;
      break;
    case 8:
      uint64_t result = 1701605234;
      break;
    case 9:
      uint64_t result = 1701869940;
      break;
    case 10:
      uint64_t result = 0x746E656D6D6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDF8F504@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventParticipantModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BDF8F51C(void *a1)
{
  return EventParticipantModelObject.encode(to:)(a1);
}

uint64_t sub_1BDF8F534()
{
  return sub_1BDF8F3C4(*v0);
}

uint64_t sub_1BDF8F53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDF953A0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDF8F564(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_1BDF8F570(uint64_t a1)
{
  unint64_t v2 = sub_1BDF921C4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDF8F5AC(uint64_t a1)
{
  unint64_t v2 = sub_1BDF921C4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventAttendeeModelObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2D78);
  uint64_t v7 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  *(_OWORD *)uint64_t v13 = 0u;
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 28)];
  uint64_t v15 = sub_1BE06EE10();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v46 = v14;
  v16(v14, 1, 1, v15);
  uint64_t v17 = &v13[*(int *)(v10 + 40)];
  *(void *)uint64_t v17 = 0;
  *((void *)v17 + 1) = 0;
  char v44 = a1;
  char v45 = v17;
  uint64_t v47 = (int *)v10;
  uint64_t v18 = &v13[*(int *)(v10 + 56)];
  *(void *)uint64_t v18 = 0;
  *((void *)v18 + 1) = 0;
  char v43 = v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDF921C4();
  char v42 = v9;
  sub_1BE071010();
  if (v2)
  {
    uint64_t v20 = v46;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDF8686C(v20, &qword_1EB678020);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = (uint64_t)v6;
    uint64_t v39 = v7;
    LOBYTE(v49) = 0;
    *(void *)uint64_t v13 = sub_1BE070D50();
    *((void *)v13 + 1) = v21;
    LOBYTE(v49) = 1;
    uint64_t v22 = sub_1BE070D50();
    uint64_t v23 = v47;
    *((void *)v13 + 2) = v22;
    *((void *)v13 + 3) = v24;
    LOBYTE(v49) = 2;
    *((void *)v13 + 4) = sub_1BE070D50();
    *((void *)v13 + 5) = v25;
    LOBYTE(v49) = 3;
    sub_1BDF9217C(&qword_1EA0E2D60, MEMORY[0x1E4F276F0]);
    sub_1BE070DA0();
    sub_1BDF8BFB4(v19, v46);
    LOBYTE(v49) = 4;
    uint64_t v26 = sub_1BE070DB0();
    uint64_t v27 = (uint64_t *)&v13[v23[8]];
    *uint64_t v27 = v26;
    v27[1] = v28;
    LOBYTE(v49) = 5;
    char v29 = sub_1BE070D60();
    uint64_t v30 = (uint64_t *)v45;
    v13[v23[9]] = v29 & 1;
    LOBYTE(v49) = 6;
    uint64_t v31 = sub_1BE070D50();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    *uint64_t v30 = v31;
    v30[1] = v33;
    type metadata accessor for EKParticipantStatus(0);
    char v48 = 7;
    sub_1BDF9217C(&qword_1EA0E2D88, type metadata accessor for EKParticipantStatus);
    sub_1BE070DF0();
    *(void *)&v13[v23[11]] = v49;
    type metadata accessor for EKParticipantRole(0);
    char v48 = 8;
    sub_1BDF9217C(&qword_1EA0E2D90, type metadata accessor for EKParticipantRole);
    sub_1BE070DF0();
    *(void *)&v13[v23[12]] = v49;
    type metadata accessor for EKParticipantType(0);
    char v48 = 9;
    sub_1BDF9217C(&qword_1EA0E2D98, type metadata accessor for EKParticipantType);
    sub_1BE070DF0();
    *(void *)&v13[v47[13]] = v49;
    LOBYTE(v49) = 10;
    uint64_t v34 = sub_1BE070D50();
    uint64_t v36 = v35;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v41);
    uint64_t v37 = (uint64_t *)v43;
    swift_bridgeObjectRelease();
    uint64_t *v37 = v34;
    v37[1] = v36;
    sub_1BDF91508((uint64_t)v13, v40, type metadata accessor for EventAttendeeModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    return sub_1BDF91570((uint64_t)v13, type metadata accessor for EventAttendeeModelObject);
  }
}

uint64_t EventAttendeeModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2DA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDF921C4();
  sub_1BE071030();
  LOBYTE(v12) = 0;
  sub_1BE070E30();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1BE070E30();
    LOBYTE(v12) = 2;
    sub_1BE070E30();
    uint64_t v9 = (int *)type metadata accessor for EventAttendeeModelObject(0);
    LOBYTE(v12) = 3;
    sub_1BE06EE10();
    sub_1BDF9217C(&qword_1EA0E2D70, MEMORY[0x1E4F276F0]);
    sub_1BE070E50();
    LOBYTE(v12) = 4;
    sub_1BE070E60();
    LOBYTE(v12) = 5;
    sub_1BE070E70();
    LOBYTE(v12) = 6;
    sub_1BE070E30();
    uint64_t v12 = *(void *)(v3 + v9[11]);
    HIBYTE(v11) = 7;
    type metadata accessor for EKParticipantStatus(0);
    sub_1BDF9217C(&qword_1EA0E2DA8, type metadata accessor for EKParticipantStatus);
    sub_1BE070EB0();
    uint64_t v12 = *(void *)(v3 + v9[12]);
    HIBYTE(v11) = 8;
    type metadata accessor for EKParticipantRole(0);
    sub_1BDF9217C(&qword_1EA0E2DB0, type metadata accessor for EKParticipantRole);
    sub_1BE070EB0();
    uint64_t v12 = *(void *)(v3 + v9[13]);
    HIBYTE(v11) = 9;
    type metadata accessor for EKParticipantType(0);
    sub_1BDF9217C(&qword_1EA0E2DB8, type metadata accessor for EKParticipantType);
    sub_1BE070EB0();
    LOBYTE(v12) = 10;
    sub_1BE070E30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BDF90118@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventAttendeeModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BDF90130(void *a1)
{
  return EventAttendeeModelObject.encode(to:)(a1);
}

uint64_t sub_1BDF90148()
{
  uint64_t result = 1701667182;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6464416C69616D65;
      break;
    case 2:
      uint64_t result = 0x6D754E656E6F6870;
      break;
    case 3:
      uint64_t result = 7107189;
      break;
    case 4:
      uint64_t result = 25705;
      break;
    case 5:
      uint64_t result = 0x6E65727275437369;
      break;
    case 6:
      uint64_t result = 0x49746361746E6F63;
      break;
    case 7:
      uint64_t result = 0x656C756465686373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDF90258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDF95818(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDF90280(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1BDF9028C(uint64_t a1)
{
  unint64_t v2 = sub_1BDF92218();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDF902C8(uint64_t a1)
{
  unint64_t v2 = sub_1BDF92218();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventOrganizerModelObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v33 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2DC0);
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_OWORD *)v10 + 1) = 0u;
  *((_OWORD *)v10 + 2) = 0u;
  *(_OWORD *)uint64_t v10 = 0u;
  uint64_t v11 = (uint64_t)&v10[*(int *)(v8 + 28)];
  uint64_t v12 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v37 = a1;
  uint64_t v38 = (int *)v7;
  uint64_t v13 = &v10[*(int *)(v7 + 40)];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  uint64_t v14 = (uint64_t *)v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDF92218();
  uint64_t v35 = v6;
  uint64_t v15 = v39;
  sub_1BE071010();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDF8686C(v11, &qword_1EB678020);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = v34;
    LOBYTE(v40) = 0;
    *(void *)uint64_t v10 = sub_1BE070D50();
    *((void *)v10 + 1) = v18;
    LOBYTE(v40) = 1;
    uint64_t v19 = sub_1BE070D50();
    uint64_t v20 = v38;
    *((void *)v10 + 2) = v19;
    *((void *)v10 + 3) = v21;
    LOBYTE(v40) = 2;
    uint64_t v22 = sub_1BE070D50();
    uint64_t v23 = (uint64_t)v37;
    *((void *)v10 + 4) = v22;
    *((void *)v10 + 5) = v24;
    LOBYTE(v40) = 3;
    sub_1BDF9217C(&qword_1EA0E2D60, MEMORY[0x1E4F276F0]);
    sub_1BE070DA0();
    sub_1BDF8BFB4(v33, v11);
    LOBYTE(v40) = 4;
    uint64_t v25 = sub_1BE070DB0();
    uint64_t v26 = (uint64_t *)&v10[v20[8]];
    *uint64_t v26 = v25;
    v26[1] = v27;
    LOBYTE(v40) = 5;
    v10[v20[9]] = sub_1BE070D60() & 1;
    LOBYTE(v40) = 6;
    uint64_t v28 = sub_1BE070D50();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t *v14 = v28;
    v14[1] = v30;
    type metadata accessor for EKScheduleAgent(0);
    char v42 = 7;
    sub_1BDF9217C(&qword_1EA0E2DD0, type metadata accessor for EKScheduleAgent);
    sub_1BE070DA0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v35, v36);
    uint64_t v31 = v40;
    if (v41) {
      uint64_t v31 = 0;
    }
    *(void *)&v10[v20[11]] = v31;
    sub_1BDF91508((uint64_t)v10, v32, type metadata accessor for EventOrganizerModelObject);
    __swift_destroy_boxed_opaque_existential_1(v23);
    return sub_1BDF91570((uint64_t)v10, type metadata accessor for EventOrganizerModelObject);
  }
}

uint64_t EventOrganizerModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2DD8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDF92218();
  sub_1BE071030();
  LOBYTE(v12) = 0;
  sub_1BE070E30();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1BE070E30();
    LOBYTE(v12) = 2;
    sub_1BE070E30();
    uint64_t v9 = type metadata accessor for EventOrganizerModelObject(0);
    LOBYTE(v12) = 3;
    sub_1BE06EE10();
    sub_1BDF9217C(&qword_1EA0E2D70, MEMORY[0x1E4F276F0]);
    sub_1BE070E50();
    LOBYTE(v12) = 4;
    sub_1BE070E60();
    LOBYTE(v12) = 5;
    sub_1BE070E70();
    LOBYTE(v12) = 6;
    sub_1BE070E30();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 44));
    v11[7] = 7;
    type metadata accessor for EKScheduleAgent(0);
    sub_1BDF9217C(&qword_1EA0E2DE0, type metadata accessor for EKScheduleAgent);
    sub_1BE070EB0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BDF90B50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventOrganizerModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BDF90B68(void *a1)
{
  return EventOrganizerModelObject.encode(to:)(a1);
}

uint64_t sub_1BDF90B80()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BDF90C10()
{
  return sub_1BE0706A0();
}

uint64_t sub_1BDF90C90()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BDF90D20()
{
  return sub_1BE0706A0();
}

uint64_t sub_1BDF90DA0()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BDF90E30()
{
  return sub_1BE0706A0();
}

uint64_t sub_1BDF90EB0()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BDF90F40()
{
  return sub_1BE0706A0();
}

uint64_t _s13CalendarUIKit27EventParticipantModelObjectV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2E98);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v47 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v47 - v18;
  uint64_t v20 = a1[1];
  uint64_t v21 = a2[1];
  if (!v20)
  {
    if (v21) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v21) {
    return 0;
  }
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_1BE070EF0(), uint64_t result = 0, (v22 & 1) != 0))
  {
LABEL_8:
    uint64_t v24 = a1[3];
    uint64_t v25 = a2[3];
    if (v24)
    {
      if (!v25) {
        return 0;
      }
      if (a1[2] != a2[2] || v24 != v25)
      {
        char v26 = sub_1BE070EF0();
        uint64_t result = 0;
        if ((v26 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v25)
    {
      return 0;
    }
    uint64_t v27 = a1[5];
    uint64_t v28 = a2[5];
    if (v27)
    {
      if (!v28) {
        return 0;
      }
      if (a1[4] != a2[4] || v27 != v28)
      {
        char v29 = sub_1BE070EF0();
        uint64_t result = 0;
        if ((v29 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v28)
    {
      return 0;
    }
    uint64_t v30 = type metadata accessor for EventParticipantModelObject(0);
    uint64_t v50 = v5;
    uint64_t v31 = v30;
    sub_1BDF8BF34((uint64_t)a1 + *(int *)(v30 + 28), (uint64_t)v19);
    uint64_t v48 = v31;
    sub_1BDF8BF34((uint64_t)a2 + *(int *)(v31 + 28), (uint64_t)v17);
    uint64_t v32 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1BDF8BF34((uint64_t)v19, (uint64_t)v10);
    uint64_t v49 = v32;
    sub_1BDF8BF34((uint64_t)v17, v32);
    uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
    if (v33((uint64_t)v10, 1, v4) == 1)
    {
      sub_1BDF8686C((uint64_t)v17, &qword_1EB678020);
      sub_1BDF8686C((uint64_t)v19, &qword_1EB678020);
      if (v33(v49, 1, v4) == 1)
      {
        sub_1BDF8686C((uint64_t)v10, &qword_1EB678020);
LABEL_29:
        uint64_t v36 = v48;
        uint64_t v37 = *(int *)(v48 + 32);
        uint64_t v38 = *(void *)((char *)a1 + v37);
        uint64_t v39 = *(void *)((char *)a1 + v37 + 8);
        uint64_t v40 = (void *)((char *)a2 + v37);
        if (v38 != *v40 || v39 != v40[1])
        {
          char v41 = sub_1BE070EF0();
          uint64_t result = 0;
          if ((v41 & 1) == 0) {
            return result;
          }
        }
        if (*((unsigned __int8 *)a1 + *(int *)(v36 + 36)) == *((unsigned __int8 *)a2 + *(int *)(v36 + 36)))
        {
          uint64_t v42 = *(int *)(v36 + 40);
          char v43 = (void *)((char *)a1 + v42);
          uint64_t v44 = *(void *)((char *)a1 + v42 + 8);
          char v45 = (void *)((char *)a2 + v42);
          uint64_t v46 = v45[1];
          if (v44)
          {
            if (!v46 || (*v43 != *v45 || v44 != v46) && (sub_1BE070EF0() & 1) == 0) {
              return 0;
            }
          }
          else if (v46)
          {
            return 0;
          }
          return 1;
        }
        return 0;
      }
    }
    else
    {
      sub_1BDF8BF34((uint64_t)v10, (uint64_t)v14);
      if (v33(v49, 1, v4) != 1)
      {
        uint64_t v34 = v50;
        (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v7, v49, v4);
        sub_1BDF9217C((unint64_t *)&qword_1EA0E2EA0, MEMORY[0x1E4F276F0]);
        LODWORD(v49) = sub_1BE070440();
        uint64_t v35 = *(void (**)(char *, uint64_t))(v34 + 8);
        v35(v7, v4);
        sub_1BDF8686C((uint64_t)v17, &qword_1EB678020);
        sub_1BDF8686C((uint64_t)v19, &qword_1EB678020);
        v35(v14, v4);
        sub_1BDF8686C((uint64_t)v10, &qword_1EB678020);
        if ((v49 & 1) == 0) {
          return 0;
        }
        goto LABEL_29;
      }
      sub_1BDF8686C((uint64_t)v17, &qword_1EB678020);
      sub_1BDF8686C((uint64_t)v19, &qword_1EB678020);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v4);
    }
    sub_1BDF8686C((uint64_t)v10, &qword_1EA0E2E98);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for EventAttendeeModelObject(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E15F0);
}

uint64_t sub_1BDF91508(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDF91570(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL _s13CalendarUIKit25EventOrganizerModelObjectV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2E98);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v47 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v47 - v18;
  uint64_t v20 = a1[1];
  uint64_t v21 = a2[1];
  if (!v20)
  {
    if (v21) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v21) {
    return 0;
  }
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_1BE070EF0(), BOOL result = 0, (v22 & 1) != 0))
  {
LABEL_8:
    uint64_t v24 = a1[3];
    uint64_t v25 = a2[3];
    if (v24)
    {
      if (!v25) {
        return 0;
      }
      if (a1[2] != a2[2] || v24 != v25)
      {
        char v26 = sub_1BE070EF0();
        BOOL result = 0;
        if ((v26 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v25)
    {
      return 0;
    }
    uint64_t v27 = a1[5];
    uint64_t v28 = a2[5];
    if (v27)
    {
      if (!v28) {
        return 0;
      }
      if (a1[4] != a2[4] || v27 != v28)
      {
        char v29 = sub_1BE070EF0();
        BOOL result = 0;
        if ((v29 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v28)
    {
      return 0;
    }
    uint64_t v30 = type metadata accessor for EventOrganizerModelObject(0);
    uint64_t v49 = v5;
    uint64_t v31 = v30;
    sub_1BDF8BF34((uint64_t)a1 + *(int *)(v30 + 28), (uint64_t)v19);
    uint64_t v47 = (int *)v31;
    sub_1BDF8BF34((uint64_t)a2 + *(int *)(v31 + 28), (uint64_t)v17);
    uint64_t v32 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1BDF8BF34((uint64_t)v19, (uint64_t)v10);
    uint64_t v50 = v32;
    sub_1BDF8BF34((uint64_t)v17, v32);
    uint64_t v33 = v49;
    uint64_t v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
    if (v48((uint64_t)v10, 1, v4) == 1)
    {
      sub_1BDF8686C((uint64_t)v17, &qword_1EB678020);
      sub_1BDF8686C((uint64_t)v19, &qword_1EB678020);
      if (v48(v50, 1, v4) == 1)
      {
        sub_1BDF8686C((uint64_t)v10, &qword_1EB678020);
LABEL_29:
        uint64_t v35 = v47;
        uint64_t v36 = v47[8];
        uint64_t v37 = *(void *)((char *)a1 + v36);
        uint64_t v38 = *(void *)((char *)a1 + v36 + 8);
        uint64_t v39 = (void *)((char *)a2 + v36);
        if (v37 != *v39 || v38 != v39[1])
        {
          char v40 = sub_1BE070EF0();
          BOOL result = 0;
          if ((v40 & 1) == 0) {
            return result;
          }
        }
        if (*((unsigned __int8 *)a1 + v35[9]) == *((unsigned __int8 *)a2 + v35[9]))
        {
          uint64_t v41 = v35[10];
          uint64_t v42 = (void *)((char *)a1 + v41);
          uint64_t v43 = *(void *)((char *)a1 + v41 + 8);
          uint64_t v44 = (void *)((char *)a2 + v41);
          uint64_t v45 = v44[1];
          if (v43)
          {
            if (!v45) {
              return 0;
            }
            if (*v42 != *v44 || v43 != v45)
            {
              char v46 = sub_1BE070EF0();
              BOOL result = 0;
              if ((v46 & 1) == 0) {
                return result;
              }
            }
          }
          else if (v45)
          {
            return 0;
          }
          return *(void *)((char *)a1 + v35[11]) == *(void *)((char *)a2 + v35[11]);
        }
        return 0;
      }
    }
    else
    {
      sub_1BDF8BF34((uint64_t)v10, (uint64_t)v14);
      if (v48(v50, 1, v4) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v7, v50, v4);
        sub_1BDF9217C((unint64_t *)&qword_1EA0E2EA0, MEMORY[0x1E4F276F0]);
        LODWORD(v50) = sub_1BE070440();
        uint64_t v34 = *(void (**)(char *, uint64_t))(v33 + 8);
        v34(v7, v4);
        sub_1BDF8686C((uint64_t)v17, &qword_1EB678020);
        sub_1BDF8686C((uint64_t)v19, &qword_1EB678020);
        v34(v14, v4);
        sub_1BDF8686C((uint64_t)v10, &qword_1EB678020);
        if ((v50 & 1) == 0) {
          return 0;
        }
        goto LABEL_29;
      }
      sub_1BDF8686C((uint64_t)v17, &qword_1EB678020);
      sub_1BDF8686C((uint64_t)v19, &qword_1EB678020);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v4);
    }
    sub_1BDF8686C((uint64_t)v10, &qword_1EA0E2E98);
    return 0;
  }
  return result;
}

uint64_t _s13CalendarUIKit24EventAttendeeModelObjectV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2E98);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v53 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v53 - v18;
  uint64_t v20 = a1[1];
  uint64_t v21 = a2[1];
  if (!v20)
  {
    if (v21) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v21) {
    return 0;
  }
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_1BE070EF0(), uint64_t result = 0, (v22 & 1) != 0))
  {
LABEL_8:
    uint64_t v24 = a1[3];
    uint64_t v25 = a2[3];
    if (v24)
    {
      if (!v25) {
        return 0;
      }
      if (a1[2] != a2[2] || v24 != v25)
      {
        char v26 = sub_1BE070EF0();
        uint64_t result = 0;
        if ((v26 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v25)
    {
      return 0;
    }
    uint64_t v27 = a1[5];
    uint64_t v28 = a2[5];
    if (v27)
    {
      if (!v28) {
        return 0;
      }
      if (a1[4] != a2[4] || v27 != v28)
      {
        char v29 = sub_1BE070EF0();
        uint64_t result = 0;
        if ((v29 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v28)
    {
      return 0;
    }
    uint64_t v30 = type metadata accessor for EventAttendeeModelObject(0);
    uint64_t v56 = v5;
    uint64_t v31 = v30;
    sub_1BDF8BF34((uint64_t)a1 + *(int *)(v30 + 28), (uint64_t)v19);
    uint64_t v54 = (int *)v31;
    sub_1BDF8BF34((uint64_t)a2 + *(int *)(v31 + 28), (uint64_t)v17);
    uint64_t v32 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1BDF8BF34((uint64_t)v19, (uint64_t)v10);
    uint64_t v55 = v32;
    sub_1BDF8BF34((uint64_t)v17, v32);
    uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
    if (v33((uint64_t)v10, 1, v4) == 1)
    {
      sub_1BDF8686C((uint64_t)v17, &qword_1EB678020);
      sub_1BDF8686C((uint64_t)v19, &qword_1EB678020);
      if (v33(v55, 1, v4) == 1)
      {
        sub_1BDF8686C((uint64_t)v10, &qword_1EB678020);
LABEL_29:
        uint64_t v36 = v54;
        uint64_t v37 = v54[8];
        uint64_t v38 = *(void *)((char *)a1 + v37);
        uint64_t v39 = *(void *)((char *)a1 + v37 + 8);
        char v40 = (void *)((char *)a2 + v37);
        if (v38 != *v40 || v39 != v40[1])
        {
          char v41 = sub_1BE070EF0();
          uint64_t result = 0;
          if ((v41 & 1) == 0) {
            return result;
          }
        }
        if (*((unsigned __int8 *)a1 + v36[9]) == *((unsigned __int8 *)a2 + v36[9]))
        {
          uint64_t v42 = v36[10];
          uint64_t v43 = (void *)((char *)a1 + v42);
          uint64_t v44 = *(void *)((char *)a1 + v42 + 8);
          uint64_t v45 = (void *)((char *)a2 + v42);
          uint64_t v46 = v45[1];
          if (v44)
          {
            if (!v46) {
              return 0;
            }
            if (*v43 != *v45 || v44 != v46)
            {
              char v47 = sub_1BE070EF0();
              uint64_t result = 0;
              if ((v47 & 1) == 0) {
                return result;
              }
            }
          }
          else if (v46)
          {
            return 0;
          }
          if (*(void *)((char *)a1 + v36[11]) != *(void *)((char *)a2 + v36[11])
            || *(void *)((char *)a1 + v36[12]) != *(void *)((char *)a2 + v36[12])
            || *(void *)((char *)a1 + v36[13]) != *(void *)((char *)a2 + v36[13]))
          {
            return 0;
          }
          uint64_t v48 = v36[14];
          uint64_t v49 = (void *)((char *)a1 + v48);
          uint64_t v50 = *(void *)((char *)a1 + v48 + 8);
          uint64_t v51 = (void *)((char *)a2 + v48);
          uint64_t v52 = v51[1];
          if (v50)
          {
            if (!v52 || (*v49 != *v51 || v50 != v52) && (sub_1BE070EF0() & 1) == 0) {
              return 0;
            }
          }
          else if (v52)
          {
            return 0;
          }
          return 1;
        }
        return 0;
      }
    }
    else
    {
      sub_1BDF8BF34((uint64_t)v10, (uint64_t)v14);
      if (v33(v55, 1, v4) != 1)
      {
        uint64_t v34 = v56;
        (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v7, v55, v4);
        sub_1BDF9217C((unint64_t *)&qword_1EA0E2EA0, MEMORY[0x1E4F276F0]);
        LODWORD(v55) = sub_1BE070440();
        uint64_t v35 = *(void (**)(char *, uint64_t))(v34 + 8);
        v35(v7, v4);
        sub_1BDF8686C((uint64_t)v17, &qword_1EB678020);
        sub_1BDF8686C((uint64_t)v19, &qword_1EB678020);
        v35(v14, v4);
        sub_1BDF8686C((uint64_t)v10, &qword_1EB678020);
        if ((v55 & 1) == 0) {
          return 0;
        }
        goto LABEL_29;
      }
      sub_1BDF8686C((uint64_t)v17, &qword_1EB678020);
      sub_1BDF8686C((uint64_t)v19, &qword_1EB678020);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v4);
    }
    sub_1BDF8686C((uint64_t)v10, &qword_1EA0E2E98);
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for EventOrganizerModelObject(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E1608);
}

uint64_t sub_1BDF920F0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1BDF92128()
{
  unint64_t result = qword_1EA0E2D58;
  if (!qword_1EA0E2D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2D58);
  }
  return result;
}

uint64_t sub_1BDF9217C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDF921C4()
{
  unint64_t result = qword_1EA0E2D80;
  if (!qword_1EA0E2D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2D80);
  }
  return result;
}

unint64_t sub_1BDF92218()
{
  unint64_t result = qword_1EA0E2DC8;
  if (!qword_1EA0E2DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2DC8);
  }
  return result;
}

uint64_t sub_1BDF9226C(uint64_t a1)
{
  uint64_t result = sub_1BDF9217C(&qword_1EA0E2DE8, (void (*)(uint64_t))type metadata accessor for EventParticipantModelObject);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BDF922C4()
{
  return sub_1BDF9217C(&qword_1EA0E2DF0, (void (*)(uint64_t))type metadata accessor for EventParticipantModelObject);
}

uint64_t sub_1BDF9230C(uint64_t a1)
{
  uint64_t result = sub_1BDF9217C(&qword_1EA0E2DF8, (void (*)(uint64_t))type metadata accessor for EventParticipantModelObject);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BDF92364()
{
  return MEMORY[0x1E4FBB1B0];
}

uint64_t sub_1BDF92370(uint64_t a1)
{
  uint64_t result = sub_1BDF9217C(&qword_1EA0E2E00, (void (*)(uint64_t))type metadata accessor for EventAttendeeModelObject);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BDF923C8()
{
  return sub_1BDF9217C(&qword_1EA0E2E08, (void (*)(uint64_t))type metadata accessor for EventAttendeeModelObject);
}

uint64_t sub_1BDF92410(uint64_t a1)
{
  uint64_t result = sub_1BDF9217C(&qword_1EA0E2E10, (void (*)(uint64_t))type metadata accessor for EventAttendeeModelObject);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BDF92468(uint64_t a1)
{
  uint64_t result = sub_1BDF9217C(&qword_1EA0E2E18, (void (*)(uint64_t))type metadata accessor for EventOrganizerModelObject);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BDF924C0()
{
  return sub_1BDF9217C(&qword_1EA0E2E20, (void (*)(uint64_t))type metadata accessor for EventOrganizerModelObject);
}

uint64_t sub_1BDF92508(uint64_t a1)
{
  uint64_t result = sub_1BDF9217C(&qword_1EA0E2E28, (void (*)(uint64_t))type metadata accessor for EventOrganizerModelObject);
  *(void *)(a1 + 8) = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for EventParticipantModelObject(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v12 = sub_1BE06EE10();
    uint64_t v13 = *(void *)(v12 - 8);
    char v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    uint64_t v18 = (void *)((char *)v4 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
    uint64_t v21 = a3[10];
    char v22 = (void *)((char *)v4 + v21);
    uint64_t v23 = (void *)((char *)a2 + v21);
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

void *initializeWithCopy for EventParticipantModelObject(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = sub_1BE06EE10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EventParticipantModelObject(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BE06EE10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for EventParticipantModelObject(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1BE06EE10();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  return a1;
}

void *assignWithTake for EventParticipantModelObject(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1BE06EE10();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventParticipantModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t storeEnumTagSinglePayload for EventParticipantModelObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

void sub_1BDF92EB0()
{
  sub_1BDF92F60();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1BDF92F60()
{
  if (!qword_1EA0E15B8)
  {
    sub_1BE06EE10();
    unint64_t v0 = sub_1BE0709E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA0E15B8);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for EventAttendeeModelObject(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v12 = sub_1BE06EE10();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    uint64_t v18 = (void *)((char *)v4 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
    uint64_t v21 = a3[10];
    uint64_t v22 = a3[11];
    uint64_t v23 = (void *)((char *)v4 + v21);
    uint64_t v24 = (void *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    *(void *)((char *)v4 + v22) = *(void *)((char *)a2 + v22);
    uint64_t v26 = a3[13];
    *(void *)((char *)v4 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    *(void *)((char *)v4 + v26) = *(void *)((char *)a2 + v26);
    uint64_t v27 = a3[14];
    uint64_t v28 = (void *)((char *)v4 + v27);
    char v29 = (void *)((char *)a2 + v27);
    uint64_t v30 = v29[1];
    void *v28 = *v29;
    v28[1] = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for EventAttendeeModelObject(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1BE06EE10();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EventAttendeeModelObject(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = a3[7];
  __dst = (char *)a1 + v9;
  uint64_t v10 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v11 = sub_1BE06EE10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(__dst, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v19 = a3[10];
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  uint64_t v24 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v25 = a3[14];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EventAttendeeModelObject(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BE06EE10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  uint64_t v21 = a3[14];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  void *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for EventAttendeeModelObject(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1BE06EE10();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  uint64_t v14 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v15 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)((char *)a2 + a3[14]);
  return a1;
}

void *assignWithTake for EventAttendeeModelObject(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1BE06EE10();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
  uint64_t v29 = a3[14];
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventAttendeeModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_0);
}

uint64_t storeEnumTagSinglePayload for EventAttendeeModelObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_0);
}

void sub_1BDF93B34()
{
  sub_1BDF92F60();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for EventOrganizerModelObject(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = a3[7];
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v12 = sub_1BE06EE10();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(__dst, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    uint64_t v18 = (void *)((char *)v4 + v16);
    uint64_t v19 = (void *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    *((unsigned char *)v4 + v17) = *((unsigned char *)a2 + v17);
    uint64_t v21 = a3[10];
    uint64_t v22 = a3[11];
    uint64_t v23 = (void *)((char *)v4 + v21);
    uint64_t v24 = (void *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    *(void *)((char *)v4 + v22) = *(void *)((char *)a2 + v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s13CalendarUIKit27EventParticipantModelObjectVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1BE06EE10();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EventOrganizerModelObject(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = sub_1BE06EE10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)((char *)a1 + v14);
  uint64_t v17 = (void *)((char *)a2 + v14);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v19 = a3[10];
  uint64_t v20 = a3[11];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EventOrganizerModelObject(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BE06EE10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  return a1;
}

_OWORD *initializeWithTake for EventOrganizerModelObject(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1BE06EE10();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  uint64_t v14 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  return a1;
}

void *assignWithTake for EventOrganizerModelObject(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1BE06EE10();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventOrganizerModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BDF9464C);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for EventOrganizerModelObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BDF94730);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 28);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = (a2 - 1);
  }
  return result;
}

void sub_1BDF947FC()
{
  sub_1BDF92F60();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for EventOrganizerModelObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventOrganizerModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDF94A18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventOrganizerModelObject.CodingKeys()
{
  return &type metadata for EventOrganizerModelObject.CodingKeys;
}

uint64_t getEnumTagSinglePayload for EventAttendeeModelObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventAttendeeModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDF94BACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventAttendeeModelObject.CodingKeys()
{
  return &type metadata for EventAttendeeModelObject.CodingKeys;
}

uint64_t getEnumTagSinglePayload for EventParticipantModelObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventParticipantModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDF94D40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventParticipantModelObject.CodingKeys()
{
  return &type metadata for EventParticipantModelObject.CodingKeys;
}

unint64_t sub_1BDF94D7C()
{
  unint64_t result = qword_1EA0E2E30;
  if (!qword_1EA0E2E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2E30);
  }
  return result;
}

unint64_t sub_1BDF94DD4()
{
  unint64_t result = qword_1EA0E2E38;
  if (!qword_1EA0E2E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2E38);
  }
  return result;
}

unint64_t sub_1BDF94E2C()
{
  unint64_t result = qword_1EA0E2E40;
  if (!qword_1EA0E2E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2E40);
  }
  return result;
}

unint64_t sub_1BDF94E84()
{
  unint64_t result = qword_1EA0E2E48;
  if (!qword_1EA0E2E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2E48);
  }
  return result;
}

unint64_t sub_1BDF94EDC()
{
  unint64_t result = qword_1EA0E2E50;
  if (!qword_1EA0E2E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2E50);
  }
  return result;
}

unint64_t sub_1BDF94F34()
{
  unint64_t result = qword_1EA0E2E58;
  if (!qword_1EA0E2E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2E58);
  }
  return result;
}

unint64_t sub_1BDF94F8C()
{
  unint64_t result = qword_1EA0E2E60;
  if (!qword_1EA0E2E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2E60);
  }
  return result;
}

unint64_t sub_1BDF94FE4()
{
  unint64_t result = qword_1EA0E2E68;
  if (!qword_1EA0E2E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2E68);
  }
  return result;
}

unint64_t sub_1BDF9503C()
{
  unint64_t result = qword_1EA0E2E70;
  if (!qword_1EA0E2E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2E70);
  }
  return result;
}

uint64_t sub_1BDF95090(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6464416C69616D65 && a2 == 0xEC00000073736572 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E65727275437369 && a2 == 0xED00007265735574 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xE900000000000044)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1BDF953A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6464416C69616D65 && a2 == 0xEC00000073736572 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E65727275437369 && a2 == 0xED00007265735574 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xE900000000000044 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x746E656D6D6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_1BDF95818(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6464416C69616D65 && a2 == 0xEC00000073736572 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E65727275437369 && a2 == 0xED00007265735574 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x49746361746E6F63 && a2 == 0xE900000000000044 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656C756465686373 && a2 == 0xED0000746E656741)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

CalendarUIKit::EventSourceConstraintsModelObject __swiftcall EventSourceConstraintsModelObject.init(maxAlarmsAllowed:requiresOutgoingInvitationsInDefaultCalendar:eventDurationConstrainedToRecurrenceInterval:occurrencesMustOccurOnSeparateDays:supportsPrivateEvents:supportsAlarmTriggerDates:supportsMultipleAlarms:requiresOccurrencesConformToRecurrenceRule:supportsURLField:supportsFloatingTimeZone:prohibitsMultipleDaysInMonthlyRecurrence:prohibitsMultipleMonthsInYearlyRecurrence:prohibitsYearlyRecurrenceInterval:canSetAvailability:eventAvailabilityLimited:supportsStructuredLocations:)(Swift::UInt maxAlarmsAllowed, Swift::Bool requiresOutgoingInvitationsInDefaultCalendar, Swift::Bool eventDurationConstrainedToRecurrenceInterval, Swift::Bool occurrencesMustOccurOnSeparateDays, Swift::Bool supportsPrivateEvents, Swift::Bool supportsAlarmTriggerDates, Swift::Bool supportsMultipleAlarms, Swift::Bool requiresOccurrencesConformToRecurrenceRule, Swift::Bool supportsURLField, Swift::Bool supportsFloatingTimeZone, Swift::Bool prohibitsMultipleDaysInMonthlyRecurrence, Swift::Bool prohibitsMultipleMonthsInYearlyRecurrence, Swift::Bool prohibitsYearlyRecurrenceInterval, Swift::Bool canSetAvailability, Swift::Bool eventAvailabilityLimited, Swift::Bool supportsStructuredLocations)
{
  *(void *)uint64_t v16 = maxAlarmsAllowed;
  *(unsigned char *)(v16 + 8) = requiresOutgoingInvitationsInDefaultCalendar;
  *(unsigned char *)(v16 + 9) = eventDurationConstrainedToRecurrenceInterval;
  *(unsigned char *)(v16 + 10) = occurrencesMustOccurOnSeparateDays;
  *(unsigned char *)(v16 + 11) = supportsPrivateEvents;
  *(unsigned char *)(v16 + 12) = supportsAlarmTriggerDates;
  *(unsigned char *)(v16 + 13) = supportsMultipleAlarms;
  *(unsigned char *)(v16 + 14) = requiresOccurrencesConformToRecurrenceRule;
  *(unsigned char *)(v16 + 15) = supportsURLField;
  *(unsigned char *)(v16 + 16) = supportsFloatingTimeZone;
  *(unsigned char *)(v16 + 17) = prohibitsMultipleDaysInMonthlyRecurrence;
  *(unsigned char *)(v16 + 18) = prohibitsMultipleMonthsInYearlyRecurrence;
  *(unsigned char *)(v16 + 19) = prohibitsYearlyRecurrenceInterval;
  *(unsigned char *)(v16 + 20) = canSetAvailability;
  *(unsigned char *)(v16 + 21) = eventAvailabilityLimited;
  *(unsigned char *)(v16 + 22) = supportsStructuredLocations;
  result.maxAlarmsAllowed = maxAlarmsAllowed;
  result.supportsFloatingTimeZone = eventDurationConstrainedToRecurrenceInterval;
  result.requiresOutgoingInvitationsInDefaultCalendar = requiresOutgoingInvitationsInDefaultCalendar;
  return result;
}

double static EventSourceConstraintsModelObject.sharedDefaults.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = -1;
  *(void *)(a1 + 8) = 0x100010101000000;
  *(void *)&double result = 0x100000001;
  *(_DWORD *)(a1 + 16) = 1;
  *(_WORD *)(a1 + 20) = 257;
  *(unsigned char *)(a1 + 22) = 1;
  return result;
}

uint64_t EventSourceConstraintsModelObject.maxAlarmsAllowed.getter()
{
  return *(void *)v0;
}

uint64_t EventSourceConstraintsModelObject.requiresOutgoingInvitationsInDefaultCalendar.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t EventSourceConstraintsModelObject.eventDurationConstrainedToRecurrenceInterval.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t EventSourceConstraintsModelObject.occurrencesMustOccurOnSeparateDays.getter()
{
  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t EventSourceConstraintsModelObject.supportsPrivateEvents.getter()
{
  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t EventSourceConstraintsModelObject.supportsAlarmTriggerDates.getter()
{
  return *(unsigned __int8 *)(v0 + 12);
}

uint64_t EventSourceConstraintsModelObject.supportsMultipleAlarms.getter()
{
  return *(unsigned __int8 *)(v0 + 13);
}

uint64_t EventSourceConstraintsModelObject.requiresOccurrencesConformToRecurrenceRule.getter()
{
  return *(unsigned __int8 *)(v0 + 14);
}

uint64_t EventSourceConstraintsModelObject.supportsURLField.getter()
{
  return *(unsigned __int8 *)(v0 + 15);
}

uint64_t EventSourceConstraintsModelObject.supportsFloatingTimeZone.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t EventSourceConstraintsModelObject.prohibitsMultipleDaysInMonthlyRecurrence.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t EventSourceConstraintsModelObject.prohibitsMultipleMonthsInYearlyRecurrence.getter()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t EventSourceConstraintsModelObject.prohibitsYearlyRecurrenceInterval.getter()
{
  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t EventSourceConstraintsModelObject.canSetAvailability.getter()
{
  return *(unsigned __int8 *)(v0 + 20);
}

uint64_t EventSourceConstraintsModelObject.eventAvailabilityLimited.getter()
{
  return *(unsigned __int8 *)(v0 + 21);
}

uint64_t EventSourceConstraintsModelObject.supportsStructuredLocations.getter()
{
  return *(unsigned __int8 *)(v0 + 22);
}

uint64_t EventSourceConstraintsModelObject.supportsStructuredLocations.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 22) = result;
  return result;
}

uint64_t (*EventSourceConstraintsModelObject.supportsStructuredLocations.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceConstraintsModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  char v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  char v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  char v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 32))(v10, v11);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  char v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  char v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 48))(v14, v15);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  char v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 56))(v16, v17);
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  char v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 64))(v18, v19);
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  char v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 72))(v20, v21);
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  char v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 80))(v22, v23);
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  LOBYTE(v24) = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 88))(v24, v25);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  LOBYTE(v26) = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 96))(v26, v27);
  uint64_t v28 = a1[3];
  uint64_t v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  LOBYTE(v28) = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 104))(v28, v29);
  uint64_t v31 = a1[3];
  uint64_t v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v31);
  LOBYTE(v31) = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 112))(v31, v30);
  uint64_t v32 = a1[3];
  uint64_t v33 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v32);
  LOBYTE(v32) = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 120))(v32, v33);
  uint64_t v34 = a1[3];
  uint64_t v35 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v34);
  char v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 128))(v34, v35);
  *(void *)a2 = v47;
  *(unsigned char *)(a2 + 8) = v46 & 1;
  *(unsigned char *)(a2 + 9) = v45 & 1;
  *(unsigned char *)(a2 + 10) = v44 & 1;
  *(unsigned char *)(a2 + 11) = v43 & 1;
  *(unsigned char *)(a2 + 12) = v42 & 1;
  *(unsigned char *)(a2 + 13) = v41 & 1;
  *(unsigned char *)(a2 + 14) = v40 & 1;
  *(unsigned char *)(a2 + 15) = v39 & 1;
  *(unsigned char *)(a2 + 16) = v38 & 1;
  *(unsigned char *)(a2 + 17) = v24 & 1;
  *(unsigned char *)(a2 + 18) = v26 & 1;
  *(unsigned char *)(a2 + 19) = v28 & 1;
  *(unsigned char *)(a2 + 20) = v31 & 1;
  *(unsigned char *)(a2 + 21) = v32 & 1;
  *(unsigned char *)(a2 + 22) = v36 & 1;

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t EventSourceConstraintsModelObject.hash(into:)()
{
  return sub_1BE070FD0();
}

uint64_t EventSourceConstraintsModelObject.hashValue.getter()
{
  return sub_1BE070FF0();
}

unint64_t sub_1BDF96360(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 2:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000022;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    case 10:
      unint64_t result = 0xD000000000000028;
      break;
    case 11:
      unint64_t result = 0xD000000000000029;
      break;
    case 12:
      unint64_t result = 0xD000000000000021;
      break;
    case 13:
      unint64_t result = 0xD000000000000012;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    case 15:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDF964D4()
{
  return *(void *)v0;
}

uint64_t sub_1BDF964DC()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1BDF964E4()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t sub_1BDF964EC()
{
  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t sub_1BDF964F4()
{
  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t sub_1BDF964FC()
{
  return *(unsigned __int8 *)(v0 + 12);
}

uint64_t sub_1BDF96504()
{
  return *(unsigned __int8 *)(v0 + 13);
}

uint64_t sub_1BDF9650C()
{
  return *(unsigned __int8 *)(v0 + 14);
}

uint64_t sub_1BDF96514()
{
  return *(unsigned __int8 *)(v0 + 15);
}

uint64_t sub_1BDF9651C()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1BDF96524()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_1BDF9652C()
{
  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_1BDF96534()
{
  return *(unsigned __int8 *)(v0 + 19);
}

uint64_t sub_1BDF9653C()
{
  return *(unsigned __int8 *)(v0 + 20);
}

uint64_t sub_1BDF96544()
{
  return *(unsigned __int8 *)(v0 + 21);
}

uint64_t sub_1BDF9654C()
{
  return *(unsigned __int8 *)(v0 + 22);
}

uint64_t sub_1BDF96554()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDF9661C()
{
  return sub_1BE070FF0();
}

unint64_t sub_1BDF966E0()
{
  return sub_1BDF96360(*v0);
}

uint64_t sub_1BDF966E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDF9765C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDF96710(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_1BDF9671C(uint64_t a1)
{
  unint64_t v2 = sub_1BDF97250();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDF96758(uint64_t a1)
{
  unint64_t v2 = sub_1BDF97250();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventSourceConstraintsModelObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EA8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDF97250();
  sub_1BE071010();
  if (!v2)
  {
    char v45 = 0;
    uint64_t v9 = sub_1BE070D90();
    if (v10) {
      uint64_t v11 = -1;
    }
    else {
      uint64_t v11 = v9;
    }
    char v45 = 1;
    char v12 = sub_1BE070D60();
    char v45 = 2;
    int v44 = sub_1BE070D60();
    char v45 = 3;
    int v43 = sub_1BE070D60();
    char v45 = 4;
    int v13 = sub_1BE070D60();
    int v41 = v13 == 2;
    int v42 = v13;
    char v45 = 5;
    int v14 = sub_1BE070D60();
    int v39 = v14 == 2;
    int v40 = v14;
    char v45 = 6;
    int v15 = sub_1BE070D60();
    int v37 = v15 == 2;
    int v38 = v15;
    char v45 = 7;
    int v36 = sub_1BE070D60();
    char v45 = 8;
    int v16 = sub_1BE070D60();
    BOOL v33 = v16 == 2;
    int v34 = v16;
    char v45 = 9;
    int v35 = sub_1BE070D60();
    BOOL v32 = v35 == 2;
    char v45 = 10;
    int v31 = sub_1BE070D60();
    char v45 = 11;
    int v30 = sub_1BE070D60();
    char v45 = 12;
    int v29 = sub_1BE070D60();
    char v45 = 13;
    int v28 = sub_1BE070D60();
    BOOL v27 = v28 == 2;
    char v45 = 14;
    int v26 = sub_1BE070D60();
    char v45 = 15;
    char v17 = sub_1BE070D60();
    int v24 = v44 & 1;
    int v25 = v12 & 1;
    HIDWORD(v21) = v41 | v42;
    int v22 = v39 | v40;
    int v23 = v43 & 1;
    int v39 = v37 | v38;
    int v38 = v33 | v34;
    int v41 = v32 | v35;
    int v44 = v31 & 1;
    int v42 = v30 & 1;
    int v43 = v36 & 1;
    int v40 = v29 & 1;
    int v37 = v27 | v28;
    char v19 = (v26 == 2) | v26;
    char v20 = (v17 == 2) | v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v11;
    *(unsigned char *)(a2 + 8) = v25;
    *(unsigned char *)(a2 + 9) = v24;
    *(unsigned char *)(a2 + 10) = v23;
    *(unsigned char *)(a2 + 11) = BYTE4(v21) & 1;
    *(unsigned char *)(a2 + 12) = v22 & 1;
    *(unsigned char *)(a2 + 13) = v39 & 1;
    *(unsigned char *)(a2 + 14) = v43;
    *(unsigned char *)(a2 + 15) = v38 & 1;
    *(unsigned char *)(a2 + 16) = v41 & 1;
    *(unsigned char *)(a2 + 17) = v44;
    *(unsigned char *)(a2 + 18) = v42;
    *(unsigned char *)(a2 + 19) = v40;
    *(unsigned char *)(a2 + 20) = v37 & 1;
    *(unsigned char *)(a2 + 21) = v19 & 1;
    *(unsigned char *)(a2 + 22) = v20 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t EventSourceConstraintsModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EB8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v18 = v1[8];
  int v7 = v1[9];
  v16[12] = v1[10];
  v16[13] = v7;
  int v8 = v1[11];
  v16[10] = v1[12];
  v16[11] = v8;
  int v9 = v1[13];
  v16[8] = v1[14];
  v16[9] = v9;
  int v10 = v1[15];
  v16[6] = v1[16];
  v16[7] = v10;
  int v11 = v1[17];
  v16[4] = v1[18];
  v16[5] = v11;
  int v12 = v1[19];
  v16[2] = v1[20];
  _OWORD v16[3] = v12;
  v16[1] = v1[21];
  int v13 = v1[22];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDF97250();
  sub_1BE071030();
  char v19 = 0;
  uint64_t v14 = v17;
  sub_1BE070EA0();
  if (!v14)
  {
    LODWORD(v17) = v13;
    char v19 = 1;
    sub_1BE070E70();
    char v19 = 2;
    sub_1BE070E70();
    char v19 = 3;
    sub_1BE070E70();
    char v19 = 4;
    sub_1BE070E70();
    char v19 = 5;
    sub_1BE070E70();
    char v19 = 6;
    sub_1BE070E70();
    char v19 = 7;
    sub_1BE070E70();
    char v19 = 8;
    sub_1BE070E70();
    char v19 = 9;
    sub_1BE070E70();
    char v19 = 10;
    sub_1BE070E70();
    char v19 = 11;
    sub_1BE070E70();
    char v19 = 12;
    sub_1BE070E70();
    char v19 = 13;
    sub_1BE070E70();
    char v19 = 14;
    sub_1BE070E70();
    char v19 = 15;
    sub_1BE070E70();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BDF97114@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventSourceConstraintsModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BDF9712C(void *a1)
{
  return EventSourceConstraintsModelObject.encode(to:)(a1);
}

uint64_t _s13CalendarUIKit33EventSourceConstraintsModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = 0;
  if (*(void *)a1 == *(void *)a2
    && ((*(unsigned __int8 *)(a1 + 8) ^ *(unsigned __int8 *)(a2 + 8)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 9) ^ *(unsigned __int8 *)(a2 + 9)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 10) ^ *(unsigned __int8 *)(a2 + 10)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 11) ^ *(unsigned __int8 *)(a2 + 11)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 12) ^ *(unsigned __int8 *)(a2 + 12)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 13) ^ *(unsigned __int8 *)(a2 + 13)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 14) ^ *(unsigned __int8 *)(a2 + 14)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 15) ^ *(unsigned __int8 *)(a2 + 15)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 17) ^ *(unsigned __int8 *)(a2 + 17)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 18) ^ *(unsigned __int8 *)(a2 + 18)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 19) ^ *(unsigned __int8 *)(a2 + 19)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 20) ^ *(unsigned __int8 *)(a2 + 20)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 21) ^ *(unsigned __int8 *)(a2 + 21)) & 1) == 0)
  {
    char v2 = *(unsigned char *)(a2 + 22) ^ *(unsigned char *)(a1 + 22) ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1BDF97250()
{
  unint64_t result = qword_1EA0E2EB0;
  if (!qword_1EA0E2EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2EB0);
  }
  return result;
}

unint64_t sub_1BDF972A8()
{
  unint64_t result = qword_1EA0E2EC0;
  if (!qword_1EA0E2EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2EC0);
  }
  return result;
}

__n128 __swift_memcpy23_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 15) = *(void *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for EventSourceConstraintsModelObject(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 23)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EventSourceConstraintsModelObject(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 22) = 0;
    *(_WORD *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 23) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 23) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventSourceConstraintsModelObject()
{
  return &type metadata for EventSourceConstraintsModelObject;
}

uint64_t getEnumTagSinglePayload for EventSourceConstraintsModelObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventSourceConstraintsModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *__n128 result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDF9751CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventSourceConstraintsModelObject.CodingKeys()
{
  return &type metadata for EventSourceConstraintsModelObject.CodingKeys;
}

unint64_t sub_1BDF97558()
{
  unint64_t result = qword_1EA0E2EC8;
  if (!qword_1EA0E2EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2EC8);
  }
  return result;
}

unint64_t sub_1BDF975B0()
{
  unint64_t result = qword_1EA0E2ED0;
  if (!qword_1EA0E2ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2ED0);
  }
  return result;
}

unint64_t sub_1BDF97608()
{
  unint64_t result = qword_1EA0E2ED8;
  if (!qword_1EA0E2ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2ED8);
  }
  return result;
}

uint64_t sub_1BDF9765C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001BE08BBF0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000002CLL && a2 == 0x80000001BE08BC10 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000002CLL && a2 == 0x80000001BE08BC40 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001BE08BC70 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BE08BCA0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001BE08BCC0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BE08BCE0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001BE08BD00 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BE08BD30 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BE08BD50 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001BE08BD70 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001BE08BDA0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001BE08BDD0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BE08BE00 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BE08BE20 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001BE08BE40)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    char v5 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 15;
    }
    else {
      return 16;
    }
  }
}

id EKLocationModelWrapper.ekStructuredLocation.getter()
{
  return *v0;
}

void EKLocationModelWrapper.ekStructuredLocation.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*EKLocationModelWrapper.ekStructuredLocation.modify())()
{
  return nullsub_1;
}

uint64_t EKLocationModelWrapper.title.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_title);
}

id EKLocationModelWrapper.geoLocation.getter()
{
  id v1 = objc_msgSend(*v0, sel_geoLocation);

  return v1;
}

id EKLocationModelWrapper.radius.getter()
{
  return objc_msgSend(*v0, sel_radius);
}

uint64_t EKLocationModelWrapper.address.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_address);
}

uint64_t EKLocationModelWrapper.contactLabel.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_contactLabel);
}

uint64_t sub_1BDF97CBC(SEL *a1)
{
  id v2 = [*v1 *a1];
  if (!v2) {
    return 0;
  }
  int v3 = v2;
  uint64_t v4 = sub_1BE070500();

  return v4;
}

uint64_t EKLocationModelWrapper.mapKitHandle.getter()
{
  id v1 = objc_msgSend(*v0, sel_mapKitHandle);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1BE06EE50();

  return v3;
}

id EKLocationModelWrapper.isImprecise.getter()
{
  return objc_msgSend(*v0, sel_isImprecise);
}

id EKLocationModelWrapper.predictedLOI.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_predictedLOI);
  *a1 = result;
  return result;
}

CalendarUIKit::EKLocationModelWrapper __swiftcall EKLocationModelWrapper.init(_:)(CalendarUIKit::EKLocationModelWrapper result)
{
  v1->ekStructuredLocation.super.super.isa = result.ekStructuredLocation.super.super.isa;
  return result;
}

CalendarUIKit::EKLocationModelWrapper_optional __swiftcall EKLocationModelWrapper.init(_:)(CalendarUIKit::EKLocationModelWrapper_optional result)
{
  *id v1 = result.value.ekStructuredLocation.super.super.isa;
  return result;
}

uint64_t sub_1BDF97DFC(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_title);
}

id sub_1BDF97E08()
{
  id v1 = objc_msgSend(*v0, sel_geoLocation);

  return v1;
}

id sub_1BDF97E40()
{
  return objc_msgSend(*v0, sel_radius);
}

uint64_t sub_1BDF97E50(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_address);
}

uint64_t sub_1BDF97E5C(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_contactLabel);
}

uint64_t sub_1BDF97E68(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  if (!v4) {
    return 0;
  }
  char v5 = v4;
  uint64_t v6 = sub_1BE070500();

  return v6;
}

uint64_t sub_1BDF97ECC()
{
  id v1 = objc_msgSend(*v0, sel_mapKitHandle);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1BE06EE50();

  return v3;
}

id sub_1BDF97F34()
{
  return objc_msgSend(*v0, sel_isImprecise);
}

id sub_1BDF97F58@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_predictedLOI);
  *a1 = result;
  return result;
}

_UNKNOWN **sub_1BDF97F94()
{
  return &protocol witness table for EKLocationPredictedLOIModelWrapper;
}

ValueMetadata *type metadata accessor for EKLocationModelWrapper()
{
  return &type metadata for EKLocationModelWrapper;
}

uint64_t sub_1BDF97FB0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    uint64_t v4 = v12 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    char v7 = *((unsigned char *)a2 + 8);
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = v7;
    uint64_t v8 = a3[5];
    int v9 = (void *)(a1 + v8);
    int v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_1BE06F3D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *int v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    int v15 = (void *)(v4 + v13);
    int v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    int v18 = (void *)(v4 + v14);
    char v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    void *v18 = *v19;
    v18[1] = v20;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1BDF9811C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1BE06F3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1BDF981F8(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  int v9 = (void *)(a2 + v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1BE06F3D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  int v16 = (void *)(a1 + v12);
  uint64_t v17 = (void *)(a2 + v12);
  uint64_t v18 = v17[1];
  *int v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1BDF98318(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)(a1 + v7);
    int v9 = (void *)(a2 + v7);
    sub_1BDF8686C(a1 + v7, &qword_1EA0E2EE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_1BE06F3D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v12 + 8) = *(void *)(v13 + 8);
  swift_retain();
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_retain();
  swift_release();
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BDF98494(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1BE06F3D0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_1BDF98594(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_1BDF8686C(a1 + v7, &qword_1EA0E2EE0);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_1BE06F3D0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRelease();
  *(void *)(v13 + 8) = *(void *)(v14 + 8);
  swift_release();
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = (void *)(a2 + v15);
  *(void *)(a1 + v15) = *v17;
  swift_release();
  *(void *)(v16 + 8) = v17[1];
  swift_release();
  return a1;
}

uint64_t sub_1BDF986F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BDF9870C);
}

uint64_t sub_1BDF9870C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1BDF987D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BDF987E8);
}

uint64_t sub_1BDF987E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for CreateFamilyCalendarShareeView()
{
  uint64_t result = qword_1EA0E2EF0;
  if (!qword_1EA0E2EF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BDF988F8()
{
  sub_1BDF989A4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1BDF989A4()
{
  if (!qword_1EA0E2F00)
  {
    sub_1BE06F3D0();
    unint64_t v0 = sub_1BE06F310();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA0E2F00);
    }
  }
}

uint64_t sub_1BDF989FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDF98A18()
{
  uint64_t v1 = v0;
  type metadata accessor for CreateFamilyCalendarShareeView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F80);
  sub_1BE070110();
  unint64_t v12 = MEMORY[0x1E4FBC860];
  if (!(v13 >> 62))
  {
    uint64_t v2 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    unint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_1BDF9CB18(v8);
    swift_bridgeObjectRelease();
    char v10 = *(unsigned char *)(v1 + 8);
    uint64_t v11 = swift_retain();
    sub_1BDFCD744(v11, v10);
    swift_release();
    sub_1BDFD6540(v9);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1BE070CB0();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v13 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = MEMORY[0x1C18893C0](i);
      }
      else
      {
        uint64_t v5 = *(void *)(v13 + 8 * i + 32);
        swift_retain();
      }
      id v6 = objc_msgSend(*(id *)(v5 + 16), sel_duplicate);
      uint64_t v7 = swift_release();
      if (v6)
      {
        MEMORY[0x1C1888EF0](v7);
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1BE070740();
        }
        sub_1BE070770();
        sub_1BE070720();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v8 = v12;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDF98C20(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (a3 >> 62) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1BE070CB0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C18893C0](i - 4, a3) : *(id *)(a3 + 8 * i);
      unint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v7;
      a1(&v12, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v12)
      {
        MEMORY[0x1C1888EF0]();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1BE070740();
        }
        sub_1BE070770();
        sub_1BE070720();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1BDF98DC0()
{
  uint64_t v1 = v0;
  char v2 = *(unsigned char *)(v0 + 8);
  uint64_t v3 = swift_retain();
  uint64_t v4 = sub_1BDFCD744(v3, v2);
  swift_release();
  swift_getKeyPath();
  uint64_t v15 = v4;
  sub_1BDF9D89C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v5 = *(void **)(v4 + 120);
  id v6 = v5;
  uint64_t result = swift_release();
  if (v5)
  {
    unint64_t v8 = sub_1BE070900();

    MEMORY[0x1F4188790](v9);
    v14[2] = v1;
    uint64_t v10 = sub_1BDF98C20((void (*)(uint64_t *__return_ptr, id *))sub_1BDF9D414, (uint64_t)v14, v8);
    swift_bridgeObjectRelease();
    uint64_t v11 = (uint64_t *)(v1 + *(int *)(type metadata accessor for CreateFamilyCalendarShareeView() + 24));
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    uint64_t v15 = v13;
    uint64_t v16 = v12;
    v14[4] = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F80);
    return sub_1BE070120();
  }
  return result;
}

uint64_t sub_1BDF98F3C@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v4 = *a1;
  id v5 = objc_msgSend(*a1, sel_fullName);
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = sub_1BE070500();
    uint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v9 = 0;
  }
  id v10 = objc_msgSend(v4, sel_appleID);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = sub_1BE070500();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  id v15 = objc_msgSend(v4, sel_memberPhoneNumbers);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_1BE070500();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  sub_1BDF9D430();
  uint64_t result = (uint64_t)sub_1BDF99260(v7, v9, v12, v14, v17, v19);
  if (result)
  {
    uint64_t v21 = (void *)result;
    id v22 = objc_msgSend(v4, sel_firstName);
    objc_msgSend(v21, sel_setFirstName_, v22);

    id v23 = objc_msgSend(v4, sel_lastName);
    objc_msgSend(v21, sel_setLastName_, v23);

    char v24 = *(unsigned char *)(a2 + 8);
    uint64_t v25 = swift_retain();
    uint64_t v26 = sub_1BDFCD744(v25, v24);
    swift_release();
    swift_getKeyPath();
    sub_1BDF9D89C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
    sub_1BE06F160();
    swift_release();
    BOOL v27 = *(void **)(v26 + 112);
    swift_unknownObjectRetain();
    swift_release();
    if (v27)
    {
      id v28 = objc_msgSend(v27, sel_profilePictureForFamilyMember_pictureDiameter_, v4, 38.0);
      swift_unknownObjectRelease();
      int v29 = a3;
      if (v28)
      {
        BOOL v27 = (void *)sub_1BE06EE50();
        unint64_t v31 = v30;
      }
      else
      {
        BOOL v27 = 0;
        unint64_t v31 = 0xF000000000000000;
      }
    }
    else
    {
      unint64_t v31 = 0xF000000000000000;
      int v29 = a3;
    }
    type metadata accessor for EKShareeWithData();
    uint64_t v32 = swift_allocObject();
    sub_1BDF9D478((uint64_t)v27, v31);
    sub_1BE06F170();
    *(void *)(v32 + 16) = v21;
    *(void *)(v32 + 24) = v27;
    *(void *)(v32 + 32) = v31;
    *(unsigned char *)(v32 + 40) = objc_msgSend(v21, sel_shareeAccessLevel) == (id)2;
    uint64_t result = sub_1BDF859DC((uint64_t)v27, v31);
    uint64_t *v29 = v32;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BDF99260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    uint64_t v8 = (void *)sub_1BE0704C0();
    swift_bridgeObjectRelease();
    if (a4) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v9 = 0;
    if (a6) {
      goto LABEL_4;
    }
LABEL_7:
    id v10 = 0;
    goto LABEL_8;
  }
  uint64_t v8 = 0;
  if (!a4) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v9 = (void *)sub_1BE0704C0();
  swift_bridgeObjectRelease();
  if (!a6) {
    goto LABEL_7;
  }
LABEL_4:
  id v10 = (void *)sub_1BE0704C0();
  swift_bridgeObjectRelease();
LABEL_8:
  id v11 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_shareeWithName_emailAddress_phoneNumber_, v8, v9, v10);

  return v11;
}

uint64_t sub_1BDF99348@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v32 = sub_1BE070800();
  uint64_t v2 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  id v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t FamilyCalendarShareeView = type metadata accessor for CreateFamilyCalendarShareeView();
  uint64_t v6 = FamilyCalendarShareeView - 8;
  uint64_t v7 = *(void *)(FamilyCalendarShareeView - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](FamilyCalendarShareeView);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F20);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F28);
  uint64_t v31 = v13;
  MEMORY[0x1F4188790](v13);
  BOOL v27 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v12 = sub_1BE06F7D0();
  *((void *)v12 + 1) = 0;
  unsigned char v12[16] = 1;
  id v15 = (uint64_t *)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F30) + 44)];
  uint64_t v28 = v1;
  sub_1BDF99790(v1, v15);
  sub_1BDF9B9C8(v1, (uint64_t)v9);
  uint64_t v16 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = (v16 + 16) & ~v16;
  uint64_t v29 = v16 | 7;
  uint64_t v30 = v17 + v8;
  uint64_t v18 = swift_allocObject();
  sub_1BDF9BA30((uint64_t)v9, v18 + v17);
  sub_1BE0707E0();
  uint64_t v19 = (uint64_t)v27;
  uint64_t v20 = &v27[*(int *)(v13 + 36)];
  uint64_t v21 = sub_1BE06F400();
  uint64_t v22 = v32;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(&v20[*(int *)(v21 + 20)], v4, v32);
  *(void *)uint64_t v20 = &unk_1EA0E2F40;
  *((void *)v20 + 1) = v18;
  sub_1BDF86808((uint64_t)v12, v19, &qword_1EA0E2F20);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v22);
  sub_1BDF8686C((uint64_t)v12, &qword_1EA0E2F20);
  uint64_t v23 = v28;
  long long v34 = *(_OWORD *)(v28 + *(int *)(v6 + 36));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F48);
  sub_1BE070130();
  sub_1BDF9B9C8(v23, (uint64_t)v9);
  uint64_t v24 = swift_allocObject();
  sub_1BDF9BA30((uint64_t)v9, v24 + v17);
  type metadata accessor for EKShareeWithData();
  type metadata accessor for EditShareeView();
  sub_1BDF9BC70();
  sub_1BDF9D89C(&qword_1EA0E2F68, (void (*)(uint64_t))type metadata accessor for EKShareeWithData);
  sub_1BDF9D89C(&qword_1EA0E2F70, (void (*)(uint64_t))type metadata accessor for EditShareeView);
  sub_1BE06FEE0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return sub_1BDF8686C(v19, &qword_1EA0E2F28);
}

uint64_t sub_1BDF99790@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t FamilyCalendarShareeView = type metadata accessor for CreateFamilyCalendarShareeView();
  uint64_t v85 = *(void *)(FamilyCalendarShareeView - 8);
  uint64_t v84 = *(void *)(v85 + 64);
  MEMORY[0x1F4188790](FamilyCalendarShareeView - 8);
  uint64_t v82 = &v66[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F90);
  uint64_t v87 = *(void *)(v5 - 8);
  uint64_t v88 = v5;
  MEMORY[0x1F4188790](v5);
  int v86 = &v66[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F98);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v83 = &v66[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v94 = &v66[-v10];
  uint64_t v80 = sub_1BE06F4E0();
  uint64_t v81 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v69 = &v66[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2FA0);
  uint64_t v75 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v13 = &v66[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2FA8);
  uint64_t v79 = *(void *)(v77 - 8);
  MEMORY[0x1F4188790](v77);
  id v15 = &v66[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2FB0);
  uint64_t v93 = *(void *)(v73 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v73);
  int v91 = &v66[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v16);
  v92 = &v66[-v18];
  uint64_t v19 = sub_1BE070490();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v20 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v21 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v76 = sub_1BE070060();
  uint64_t v74 = sub_1BE06FB20();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BE070450();
  id v22 = CUIKBundle();
  sub_1BE06EF70();
  uint64_t v71 = sub_1BE070530();
  uint64_t v90 = v23;
  sub_1BE070480();
  sub_1BE070470();
  char v24 = *(unsigned char *)(a1 + 8);
  uint64_t v25 = swift_retain();
  uint64_t v26 = sub_1BDFCD744(v25, v24);
  swift_release();
  swift_getKeyPath();
  uint64_t v96 = v26;
  sub_1BDF9D89C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  swift_bridgeObjectRetain();
  swift_release();
  sub_1BE070460();
  swift_bridgeObjectRelease();
  sub_1BE070470();
  sub_1BE0704A0();
  id v27 = CUIKBundle();
  sub_1BE06EF70();
  uint64_t v68 = sub_1BE070530();
  uint64_t v89 = v28;
  int v67 = sub_1BE06FAE0();
  sub_1BE06F2D0();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v95 = a1;
  uint64_t v37 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2FB8);
  sub_1BDF9D4D4();
  sub_1BE06FC30();
  int v38 = v69;
  sub_1BE070360();
  uint64_t v39 = sub_1BDF86964(&qword_1EA0E3018, &qword_1EA0E2FA0);
  uint64_t v40 = sub_1BDF9D89C(&qword_1EA0E3020, MEMORY[0x1E4F3CCF0]);
  uint64_t v41 = v70;
  uint64_t v42 = v80;
  sub_1BE06FF50();
  (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v38, v42);
  (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v13, v41);
  uint64_t v96 = v41;
  uint64_t v97 = v42;
  uint64_t v98 = v39;
  uint64_t v99 = v40;
  swift_getOpaqueTypeConformance2();
  int v43 = v91;
  uint64_t v44 = v77;
  sub_1BE06FEA0();
  (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v15, v44);
  char v46 = v92;
  uint64_t v45 = v93;
  uint64_t v47 = v73;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v93 + 32))(v92, v43, v73);
  uint64_t v48 = v37;
  uint64_t v49 = v82;
  sub_1BDF9B9C8(v48, (uint64_t)v82);
  unint64_t v50 = (*(unsigned __int8 *)(v85 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
  uint64_t v51 = swift_allocObject();
  sub_1BDF9BA30((uint64_t)v49, v51 + v50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3028);
  sub_1BDF9D7C0();
  uint64_t v52 = v86;
  sub_1BE070150();
  uint64_t v54 = v87;
  uint64_t v53 = v88;
  uint64_t v55 = (uint64_t)v83;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v87 + 16))(v83, v52, v88);
  (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v52, v53);
  uint64_t v56 = v94;
  sub_1BDF9D834(v55, (uint64_t)v94);
  uint64_t v57 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v45 + 16);
  v57(v43, v46, v47);
  sub_1BDF86808((uint64_t)v56, v55, &qword_1EA0E2F98);
  uint64_t v58 = v78;
  uint64_t v59 = KeyPath;
  uint64_t *v78 = v76;
  v58[1] = v59;
  uint64_t v60 = v71;
  v58[2] = v74;
  v58[3] = v60;
  uint64_t v61 = v68;
  v58[4] = v90;
  v58[5] = v61;
  v58[6] = v89;
  *((unsigned char *)v58 + 56) = v67;
  v58[8] = v30;
  v58[9] = v32;
  v58[10] = v34;
  v58[11] = v36;
  *((unsigned char *)v58 + 96) = 0;
  uint64_t v62 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3038);
  v57((unsigned char *)v58 + v62[12], v43, v47);
  uint64_t v63 = (char *)v58 + v62[16];
  *(void *)uint64_t v63 = 0;
  v63[8] = 1;
  sub_1BDF86808(v55, (uint64_t)v58 + v62[20], &qword_1EA0E2F98);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1BDF8686C((uint64_t)v94, &qword_1EA0E2F98);
  uint64_t v64 = *(void (**)(unsigned char *, uint64_t))(v93 + 8);
  v64(v92, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BDF8686C(v55, &qword_1EA0E2F98);
  v64(v91, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BDF9A348(uint64_t a1)
{
  uint64_t FamilyCalendarShareeView = type metadata accessor for CreateFamilyCalendarShareeView();
  uint64_t v3 = *(void *)(FamilyCalendarShareeView - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(MEMORY[0x1F4188790](FamilyCalendarShareeView - 8) + 32));
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v11[2] = v7;
  v11[3] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F80);
  sub_1BE070110();
  swift_getKeyPath();
  sub_1BDF9B9C8(a1, (uint64_t)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  sub_1BDF9BA30((uint64_t)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2FD0);
  sub_1BDF86964(&qword_1EA0E3050, &qword_1EA0E2F10);
  sub_1BDF9DB00();
  sub_1BDF9D548();
  return sub_1BE070260();
}

void sub_1BDF9A508(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_emailAddress);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1BE070500();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_1BDF9A570@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v37 = a3;
  uint64_t v5 = sub_1BE06F970();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  uint64_t v36 = v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t FamilyCalendarShareeView = type metadata accessor for CreateFamilyCalendarShareeView();
  uint64_t v9 = *(void *)(FamilyCalendarShareeView - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](FamilyCalendarShareeView - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2FF0);
  uint64_t v12 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2FD8);
  MEMORY[0x1F4188790](v31);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3068);
  uint64_t v17 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  sub_1BDF9B9C8(a2, (uint64_t)v11);
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v22 = (v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_1BDF9BA30((uint64_t)v11, v23 + v21);
  *(void *)(v23 + v22) = v20;
  sub_1BDF9DDA0();
  swift_retain();
  sub_1BE070150();
  id v24 = objc_msgSend(self, sel_cuik_tertiaryGroupedBackgroundColor);
  uint64_t v38 = MEMORY[0x1C1888840](v24);
  swift_retain();
  uint64_t v25 = sub_1BE0701F0();
  uint64_t v26 = v32;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v14, v32);
  swift_release();
  *(void *)&v16[*(int *)(v31 + 36)] = v25;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v26);
  id v27 = v34;
  sub_1BE06F960();
  sub_1BDF9D648();
  sub_1BDF9D89C(&qword_1EA0E3008, MEMORY[0x1E4F3D8A8]);
  uint64_t v28 = v35;
  sub_1BE06FD90();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v28);
  sub_1BDF8686C((uint64_t)v16, &qword_1EA0E2FD8);
  uint64_t v29 = v33;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v37, v19, v33);
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v29);
}

uint64_t sub_1BDF9AA00()
{
  return sub_1BE070120();
}

id sub_1BDF9AA68@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (void *)a1[2];
  id result = objc_msgSend(v4, sel_name);
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = sub_1BE070500();
    uint64_t v9 = v8;

    uint64_t v11 = a1[3];
    unint64_t v10 = a1[4];
    sub_1BDF9D478(v11, v10);
    id result = objc_msgSend(v4, sel_shareeAccessLevel);
    *a2 = v7;
    a2[1] = v9;
    a2[2] = v11;
    a2[3] = v10;
    a2[4] = (uint64_t)result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

__n128 sub_1BDF9AB00@<Q0>(uint64_t a1@<X8>)
{
  sub_1BE06F7A0();
  id v2 = CUIKBundle();
  uint64_t v3 = sub_1BE06FD20();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  uint64_t v8 = sub_1BE06FD00();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_1BDF8587C(v3, v5, v7);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_1BE070320();
  sub_1BDF9AC90(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v21, 0.0, 1, 0.0, 1, v15, v16, v8, v10, v14, v12);
  sub_1BDF8587C(v8, v10, v14);
  swift_bridgeObjectRelease();
  long long v17 = v21[7];
  *(_OWORD *)(a1 + 96) = v21[6];
  *(_OWORD *)(a1 + 112) = v17;
  *(_OWORD *)(a1 + 128) = v21[8];
  long long v18 = v21[3];
  *(_OWORD *)(a1 + 32) = v21[2];
  *(_OWORD *)(a1 + 48) = v18;
  long long v19 = v21[5];
  *(_OWORD *)(a1 + 64) = v21[4];
  *(_OWORD *)(a1 + 80) = v19;
  __n128 result = (__n128)v21[1];
  *(_OWORD *)a1 = v21[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BDF9AC90@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1BE0708F0();
    uint64_t v31 = (void *)sub_1BE06FA80();
    sub_1BE06F190();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  sub_1BE06F530();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_1BDF8555C(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDF9AE84(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  sub_1BE0707D0();
  *(void *)(v1 + 32) = sub_1BE0707C0();
  uint64_t v3 = sub_1BE0707B0();
  return MEMORY[0x1F4188298](sub_1BDF9AF1C, v3, v2);
}

uint64_t sub_1BDF9AF1C()
{
  uint64_t v1 = v0[3];
  swift_release();
  sub_1BDF98DC0();
  char v2 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = swift_retain();
  uint64_t v4 = sub_1BDFCD744(v3, v2);
  swift_release();
  swift_getKeyPath();
  v0[2] = v4;
  sub_1BDF9D89C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v5 = *(void *)(v4 + 40);
  unint64_t v6 = *(void *)(v4 + 48);
  swift_release();
  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    uint64_t v8 = *(void *)v0[3];
    char v9 = *(unsigned char *)(v1 + 8);
    uint64_t v10 = swift_retain();
    uint64_t v11 = sub_1BDFCD744(v10, v9);
    uint64_t v12 = sub_1BDFCD744(v8, v9);
    swift_release();
    uint64_t v13 = *(void *)(v12 + 24);
    uint64_t v14 = *(void *)(v12 + 32);
    swift_bridgeObjectRetain();
    swift_release();
    swift_getKeyPath();
    uint64_t v15 = (void *)swift_task_alloc();
    _OWORD v15[2] = v11;
    v15[3] = v13;
    v15[4] = v14;
    v0[2] = v11;
    sub_1BE06F150();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_task_dealloc();
  }
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1BDF9B130@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t FamilyCalendarShareeView = type metadata accessor for CreateFamilyCalendarShareeView();
  uint64_t v7 = *(void *)(FamilyCalendarShareeView - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](FamilyCalendarShareeView - 8);
  uint64_t v9 = *a1;
  sub_1BDF9B9C8(a2, (uint64_t)&v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  sub_1BDF9BA30((uint64_t)&v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], v11 + v10);
  *(void *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v9;
  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = type metadata accessor for EditShareeView();
  type metadata accessor for EKShareeWithData();
  sub_1BDF9D89C((unint64_t *)&qword_1EA0E2F78, (void (*)(uint64_t))type metadata accessor for EKShareeWithData);
  swift_retain_n();
  sub_1BE0702E0();
  uint64_t v13 = (uint64_t (**)())((char *)a3 + *(int *)(v12 + 24));
  unsigned char *v13 = sub_1BDF9BD44;
  v13[1] = (uint64_t (*)())v11;
  uint64_t v14 = (char *)a3 + *(int *)(v12 + 28);
  v17[15] = 0;
  uint64_t result = sub_1BE070100();
  uint64_t v16 = v18;
  char *v14 = v17[16];
  *((void *)v14 + 1) = v16;
  return result;
}

uint64_t sub_1BDF9B324(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06F3D0();
  v14[0] = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)(a1 + *(int *)(type metadata accessor for CreateFamilyCalendarShareeView() + 24));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  uint64_t v15 = *v7;
  uint64_t v16 = v9;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F80);
  sub_1BE070110();
  int64_t v10 = sub_1BDF9CDA0(&v17, a2);
  swift_release();
  if (!(v17 >> 62))
  {
    uint64_t v11 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v11 >= v10) {
      goto LABEL_3;
    }
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1BE070CB0();
  swift_bridgeObjectRelease();
  if (v11 < v10) {
    goto LABEL_9;
  }
LABEL_3:
  sub_1BDF9D0D8(v10, v11);
  uint64_t v15 = v8;
  uint64_t v16 = v9;
  v14[1] = v17;
  sub_1BE070120();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v15 = v8;
  uint64_t v16 = v9;
  sub_1BE070110();
  if (!(v17 >> 62))
  {
    uint64_t v12 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_5;
  }
LABEL_10:
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1BE070CB0();
  swift_bridgeObjectRelease();
LABEL_5:
  uint64_t result = swift_bridgeObjectRelease();
  if (!v12)
  {
    sub_1BDFCD954((uint64_t)v6);
    sub_1BE06F3C0();
    return (*(uint64_t (**)(char *, uint64_t))(v14[0] + 8))(v6, v4);
  }
  return result;
}

double sub_1BDF9B570@<D0>(uint64_t a1@<X8>)
{
  type metadata accessor for CreateFamilyCalendarViewModel();
  sub_1BDF9D89C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  *(void *)a1 = sub_1BE06F320();
  *(unsigned char *)(a1 + 8) = v2 & 1;
  uint64_t FamilyCalendarShareeView = (int *)type metadata accessor for CreateFamilyCalendarShareeView();
  uint64_t v4 = (uint64_t *)(a1 + FamilyCalendarShareeView[5]);
  *uint64_t v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = (_OWORD *)(a1 + FamilyCalendarShareeView[6]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F10);
  sub_1BE070100();
  *uint64_t v5 = v8;
  uint64_t v6 = FamilyCalendarShareeView[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F18);
  sub_1BE070100();
  double result = *(double *)&v8;
  *(_OWORD *)(a1 + v6) = v8;
  return result;
}

uint64_t sub_1BDF9B6A4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDF9D89C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  *a2 = *(void *)(v3 + 112);
  return swift_unknownObjectRetain();
}

uint64_t sub_1BDF9B750()
{
  return swift_unknownObjectRelease();
}

id sub_1BDF9B830@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDF9D89C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v4 = *(void **)(v3 + 120);
  *a2 = v4;

  return v4;
}

void sub_1BDF9B8E8(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1BDF9D89C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  id v2 = v1;
  sub_1BE06F150();
  swift_release();
}

uint64_t sub_1BDF9B9C8(uint64_t a1, uint64_t a2)
{
  uint64_t FamilyCalendarShareeView = type metadata accessor for CreateFamilyCalendarShareeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(FamilyCalendarShareeView - 8) + 16))(a2, a1, FamilyCalendarShareeView);
  return a2;
}

uint64_t sub_1BDF9BA30(uint64_t a1, uint64_t a2)
{
  uint64_t FamilyCalendarShareeView = type metadata accessor for CreateFamilyCalendarShareeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(FamilyCalendarShareeView - 8) + 32))(a2, a1, FamilyCalendarShareeView);
  return a2;
}

uint64_t sub_1BDF9BA94()
{
  uint64_t v2 = *(void *)(type metadata accessor for CreateFamilyCalendarShareeView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1BDF9BB60;
  return sub_1BDF9AE84(v3);
}

uint64_t sub_1BDF9BB60()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1BDF9BC58(uint64_t a1)
{
  return sub_1BDF9DA6C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1BDF9B130);
}

unint64_t sub_1BDF9BC70()
{
  unint64_t result = qword_1EA0E2F50;
  if (!qword_1EA0E2F50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2F28);
    sub_1BDF86964(&qword_1EA0E2F58, &qword_1EA0E2F20);
    sub_1BDF9D89C(&qword_1EA0E2F60, MEMORY[0x1E4F3C908]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2F50);
  }
  return result;
}

uint64_t sub_1BDF9BD44()
{
  return sub_1BDF9DCF8((uint64_t (*)(unint64_t, uint64_t))sub_1BDF9B324);
}

uint64_t sub_1BDF9BD5C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_1BE070B00();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1BDF9D430();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v26;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1BE070AF0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v21 = sub_1BDF9BFDC(v7, result + 1);
    uint64_t v27 = v21;
    if (*(void *)(v21 + 24) <= *(void *)(v21 + 16))
    {
      id v25 = v8;
      sub_1BDF9C1C4();
      uint64_t v22 = v27;
    }
    else
    {
      uint64_t v22 = v21;
      id v23 = v8;
    }
    sub_1BDF9C464((uint64_t)v8, v22);
    *uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1BE070980();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      sub_1BDF9D430();
      id v14 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
      char v15 = sub_1BE070990();

      if (v15)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        long long v19 = *(void **)(*(void *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        id v20 = v19;
        return 0;
      }
      uint64_t v16 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v16;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v6 + 48) + 8 * v13);
        char v18 = sub_1BE070990();

        if (v18) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    id v8 = a2;
    sub_1BDF9C4E8((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1BDF9BFDC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3048);
    uint64_t v2 = sub_1BE070B50();
    uint64_t v14 = v2;
    sub_1BE070AE0();
    if (sub_1BE070B10())
    {
      sub_1BDF9D430();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1BDF9C1C4();
          uint64_t v2 = v14;
        }
        uint64_t result = sub_1BE070980();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1BE070B10());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1BDF9C1C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3048);
  uint64_t v3 = sub_1BE070B40();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_1BE070980();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1BDF9C464(uint64_t a1, uint64_t a2)
{
  sub_1BE070980();
  unint64_t result = sub_1BE070AD0();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void sub_1BDF9C4E8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1BDF9C1C4();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1BDF9C660();
      goto LABEL_14;
    }
    sub_1BDF9C80C();
  }
  uint64_t v8 = *v3;
  uint64_t v9 = sub_1BE070980();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1BDF9D430();
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1BE070990();

    if (v12)
    {
LABEL_13:
      sub_1BE070F50();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1BE070990();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

id sub_1BDF9C660()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3048);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1BE070B30();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BDF9C80C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3048);
  uint64_t v3 = sub_1BE070B40();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v27 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    id v19 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1BE070980();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v27;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1BDF9CA88(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BE070CB0();
    swift_bridgeObjectRelease();
  }

  JUMPOUT(0x1C18893D0);
}

uint64_t sub_1BDF9CB04(unint64_t a1)
{
  return sub_1BE054CC8(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1BDF9CB18(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BE070CB0();
    swift_bridgeObjectRelease();
  }
  sub_1BDF9D430();
  sub_1BDF9D89C(&qword_1EA0E3040, (void (*)(uint64_t))sub_1BDF9D430);
  uint64_t result = sub_1BE070840();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1BE070CB0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)MEMORY[0x1C18893C0](i, a1);
        sub_1BDF9BD5C(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        unint64_t v8 = *v7++;
        sub_1BDF9BD5C(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDF9CC8C(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v5 = 0;
    if (!v4) {
      return v5;
    }
  }
  a2 = *(void *)(a2 + 16);
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = MEMORY[0x1C18893C0](v5, a1);
    }
    else
    {
      uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
      swift_retain();
    }
    unsigned __int8 v7 = objc_msgSend(*(id *)(v6 + 16), sel_isEqualToSharee_, a2);
    swift_release();
    if (v7) {
      return v5;
    }
    uint64_t v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_13;
    }
    ++v5;
    if (v8 == v4) {
      return 0;
    }
  }
}

unint64_t sub_1BDF9CDA0(unint64_t *a1, uint64_t a2)
{
  unint64_t v5 = swift_bridgeObjectRetain();
  unint64_t v6 = sub_1BDF9CC8C(v5, a2);
  char v8 = v7;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    if (v8)
    {
      unint64_t v23 = *a1;
      if (v23 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v6 = sub_1BE070CB0();
        swift_bridgeObjectRelease();
      }
      else
      {
        return *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
    }
    else
    {
      unint64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_54;
      }
      if (*a1 >> 62)
      {
LABEL_55:
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1BE070CB0();
        swift_bridgeObjectRelease();
        if (v9 != v25) {
          goto LABEL_6;
        }
      }
      else if (v9 != *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_6:
        a2 = *(void *)(a2 + 16);
        unint64_t v10 = v6 + 5;
        uint64_t v11 = &selRef_footer;
        while (1)
        {
          unint64_t v12 = v10 - 4;
          unint64_t v13 = *a1;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            uint64_t v14 = MEMORY[0x1C18893C0](v10 - 4);
          }
          else
          {
            if ((v12 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_45:
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
LABEL_49:
              __break(1u);
LABEL_50:
              __break(1u);
LABEL_51:
              __break(1u);
LABEL_52:
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
              goto LABEL_55;
            }
            if (v12 >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_45;
            }
            uint64_t v14 = *(void *)(v13 + 8 * v10);
            swift_retain();
          }
          unint64_t v9 = (unint64_t)objc_msgSend(*(id *)(v14 + 16), v11[166], a2);
          swift_release();
          if ((v9 & 1) == 0) {
            break;
          }
LABEL_32:
          unint64_t v9 = v10 - 3;
          if (__OFADD__(v12, 1)) {
            goto LABEL_46;
          }
          if (*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v22 = sub_1BE070CB0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v22 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          ++v10;
          if (v9 == v22) {
            return v6;
          }
        }
        if (v12 == v6)
        {
LABEL_31:
          if (__OFADD__(v6++, 1)) {
            goto LABEL_47;
          }
          goto LABEL_32;
        }
        unint64_t v9 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          uint64_t v15 = MEMORY[0x1C18893C0](v6, *a1);
          unint64_t v9 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_17:
            if ((v12 & 0x8000000000000000) != 0) {
              goto LABEL_50;
            }
            if (v12 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_51;
            }
            uint64_t v16 = *(void *)(v9 + 8 * v10);
            swift_retain();
            goto LABEL_20;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_48;
          }
          if (v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_49;
          }
          uint64_t v15 = *(void *)(v9 + 8 * v6 + 32);
          swift_retain();
          if ((v9 & 0xC000000000000001) == 0) {
            goto LABEL_17;
          }
        }
        uint64_t v16 = MEMORY[0x1C18893C0](v10 - 4, v9);
        unint64_t v9 = *a1;
LABEL_20:
        int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!isUniquelyReferenced_nonNull_bridgeObject
          || (v9 & 0x8000000000000000) != 0
          || (v9 & 0x4000000000000000) != 0)
        {
          sub_1BDF9CA88(v9);
          unint64_t v9 = v18;
          *a1 = v18;
        }
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v16;
        swift_release();
        sub_1BE070720();
        unint64_t v9 = *a1;
        int v19 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v9;
        if (!v19 || (v9 & 0x8000000000000000) != 0 || (v9 & 0x4000000000000000) != 0)
        {
          sub_1BDF9CA88(v9);
          unint64_t v9 = v20;
          *a1 = v20;
        }
        uint64_t v11 = &selRef_footer;
        if ((v12 & 0x8000000000000000) != 0) {
          goto LABEL_52;
        }
        if (v12 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_53;
        }
        *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v10) = v15;
        swift_release();
        sub_1BE070720();
        goto LABEL_31;
      }
    }
  }
  return v6;
}

uint64_t sub_1BDF9D0D8(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1BE070CB0();
  swift_bridgeObjectRelease();
  if (v21 < v2) {
    goto LABEL_33;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_8;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
    unint64_t v9 = *v3;
    goto LABEL_15;
  }
  if (*v3 >> 62) {
    goto LABEL_36;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_38;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v9 & 0x8000000000000000) == 0 && (v9 & 0x4000000000000000) == 0)
  {
    uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_18;
    }
    uint64_t v7 = 1;
  }
  if (v9 >> 62) {
    goto LABEL_39;
  }
  uint64_t v12 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v8) {
    uint64_t v12 = v8;
  }
  swift_bridgeObjectRetain();
  *uint64_t v3 = MEMORY[0x1C18893D0](v7, v12, 1, v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  uint64_t v13 = v11 + 32;
  uint64_t v14 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for EKShareeWithData();
  swift_arrayDestroy();
  if (v5)
  {
    if (*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1BE070CB0();
      swift_bridgeObjectRelease();
      uint64_t v16 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_21:
        if (v16 < 0)
        {
LABEL_46:
          uint64_t result = sub_1BE070D00();
          __break(1u);
          return result;
        }
        unint64_t v17 = (char *)(v13 + 8 * v2);
        if (v4 != v2 || v14 >= &v17[8 * v16]) {
          memmove(v14, v17, 8 * v16);
        }
        if (!(*v3 >> 62))
        {
          uint64_t v18 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v19 = v18 + v5;
          if (!__OFADD__(v18, v5))
          {
LABEL_27:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
            goto LABEL_28;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_1BE070CB0();
        swift_bridgeObjectRelease();
        uint64_t v19 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_27;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v16 = v15 - v2;
      if (!__OFSUB__(v15, v2)) {
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_28:

  return sub_1BE070720();
}

uint64_t sub_1BDF9D3EC()
{
  return sub_1BDFD72D8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1BDF9D414@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BDF98F3C(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_1BDF9D430()
{
  unint64_t result = qword_1EA0E2F88;
  if (!qword_1EA0E2F88)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA0E2F88);
  }
  return result;
}

uint64_t sub_1BDF9D478(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1BDF840AC(a1, a2);
  }
  return a1;
}

uint64_t sub_1BDF9D48C()
{
  return sub_1BDFD73C8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1BDF9D4A8()
{
  sub_1BDFD7404(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1BDF9D4CC()
{
  return sub_1BDF9A348(*(void *)(v0 + 16));
}

unint64_t sub_1BDF9D4D4()
{
  unint64_t result = qword_1EA0E2FC0;
  if (!qword_1EA0E2FC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2FB8);
    sub_1BDF9D548();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2FC0);
  }
  return result;
}

unint64_t sub_1BDF9D548()
{
  unint64_t result = qword_1EA0E2FC8;
  if (!qword_1EA0E2FC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2FD0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2FD8);
    sub_1BE06F970();
    sub_1BDF9D648();
    sub_1BDF9D89C(&qword_1EA0E3008, MEMORY[0x1E4F3D8A8]);
    swift_getOpaqueTypeConformance2();
    sub_1BDF9D70C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2FC8);
  }
  return result;
}

unint64_t sub_1BDF9D648()
{
  unint64_t result = qword_1EA0E2FE0;
  if (!qword_1EA0E2FE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E2FD8);
    sub_1BDF86964(&qword_1EA0E2FE8, &qword_1EA0E2FF0);
    sub_1BDF86964(&qword_1EA0E2FF8, &qword_1EA0E3000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2FE0);
  }
  return result;
}

unint64_t sub_1BDF9D70C()
{
  unint64_t result = qword_1EA0E3010;
  if (!qword_1EA0E3010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3010);
  }
  return result;
}

uint64_t sub_1BDF9D764()
{
  return sub_1BDF98A18();
}

unint64_t sub_1BDF9D7C0()
{
  unint64_t result = qword_1EA0E3030;
  if (!qword_1EA0E3030)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3030);
  }
  return result;
}

uint64_t sub_1BDF9D834(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDF9D89C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *keypath_get_selector_emailAddress()
{
  return sel_emailAddress;
}

uint64_t objectdestroyTm()
{
  uint64_t FamilyCalendarShareeView = type metadata accessor for CreateFamilyCalendarShareeView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(FamilyCalendarShareeView - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(FamilyCalendarShareeView - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(FamilyCalendarShareeView + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1BE06F3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1BDF9DA54(uint64_t a1)
{
  return sub_1BDF9DA6C(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1BDF9A570);
}

uint64_t sub_1BDF9DA6C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for CreateFamilyCalendarShareeView() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_1BDF9DB00()
{
  unint64_t result = qword_1EA0E3058;
  if (!qword_1EA0E3058)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3058);
  }
  return result;
}

uint64_t objectdestroy_7Tm()
{
  uint64_t FamilyCalendarShareeView = type metadata accessor for CreateFamilyCalendarShareeView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(FamilyCalendarShareeView - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(FamilyCalendarShareeView - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(FamilyCalendarShareeView + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1BE06F3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1BDF9DCE0()
{
  return sub_1BDF9DCF8((uint64_t (*)(unint64_t, uint64_t))sub_1BDF9AA00);
}

uint64_t sub_1BDF9DCF8(uint64_t (*a1)(unint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for CreateFamilyCalendarShareeView() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a1(v1 + v3, v4);
}

id sub_1BDF9DD98@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BDF9AA68(v1, a1);
}

unint64_t sub_1BDF9DDA0()
{
  unint64_t result = qword_1EA0E3070;
  if (!qword_1EA0E3070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3070);
  }
  return result;
}

uint64_t sub_1BDF9DDF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDF9DEF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_1BDF9DF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a2;
  uint64_t v2 = sub_1BE06F2F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1BE06EFA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E10B0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1BDFF61E8((uint64_t)&unk_1F18787C0);
  swift_arrayDestroy();
  sub_1BE06EFB0();
  sub_1BE06EF90();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v14 = sub_1BE06EF60();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1BDF8686C((uint64_t)v12, &qword_1EA0E10B0);
    return sub_1BE06FFF0();
  }
  uint64_t v16 = sub_1BE06EF50();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
  LOBYTE(v16) = sub_1BDF9E290(v16, v18, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0) {
    return sub_1BE06FFF0();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v22, v2);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v19 == *MEMORY[0x1E4F3C5C8]) {
    return sub_1BE06FFF0();
  }
  if (v19 == *MEMORY[0x1E4F3C5B0]) {
    return sub_1BE06FFC0();
  }
  uint64_t result = sub_1BE070C90();
  __break(1u);
  return result;
}

uint64_t sub_1BDF9E290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1BE070FB0();
    sub_1BE070590();
    uint64_t v6 = sub_1BE070FF0();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1BE070EF0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1BE070EF0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1BDF9E3C8()
{
  uint64_t v0 = sub_1BE06EFA0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E10B0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1BDFF61E8((uint64_t)&unk_1F1878450);
  swift_arrayDestroy();
  sub_1BE06EFB0();
  sub_1BE06EF90();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v8 = sub_1BE06EF60();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1BDF8686C((uint64_t)v6, &qword_1EA0E10B0);
  }
  else
  {
    uint64_t v10 = sub_1BE06EF50();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
    LOBYTE(v10) = sub_1BDF9E290(v10, v12, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10) {
      return sub_1BE06FFA0();
    }
  }
  return sub_1BE06FFC0();
}

BOOL static CUIKMonthDimmingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CUIKMonthDimmingMode.hash(into:)()
{
  return sub_1BE070FC0();
}

uint64_t CUIKMonthDimmingMode.hashValue.getter()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDF9E678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, int a8, unsigned __int8 a9, unsigned __int8 *a10)
{
  LODWORD(v263) = a8;
  uint64_t v255 = a7;
  uint64_t v243 = a6;
  uint64_t v258 = a3;
  uint64_t v257 = a2;
  uint64_t v247 = a1;
  uint64_t v290 = sub_1BE06F0E0();
  uint64_t v12 = *(void *)(v290 - 8);
  uint64_t v13 = v12;
  MEMORY[0x1F4188790](v290);
  v280 = (char *)&v218 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v248 = sub_1BE06F140();
  v275 = *(char **)(v248 - 8);
  MEMORY[0x1F4188790](v248);
  v242 = (char *)&v218 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v260 = sub_1BE06F100();
  uint64_t v274 = *(void *)(v260 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v260);
  v231 = (char *)&v218 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  v230 = (char *)&v218 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
  MEMORY[0x1F4188790](v19 - 8);
  v287 = (char *)&v218 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1110);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  v241 = (char *)&v218 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  v286 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v218 - v24);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  v273 = (char *)&v218 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v254 = (uint64_t)&v218 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v256 = (uint64_t)&v218 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  v284 = (void (**)(char *, uint64_t))((char *)&v218 - v33);
  MEMORY[0x1F4188790](v32);
  unint64_t v295 = (unint64_t)&v218 - v34;
  uint64_t v292 = sub_1BE06EEE0();
  uint64_t v259 = *(void *)(v292 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v292);
  v270 = (char *)&v218 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  v237 = (char *)&v218 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  v236 = (char *)&v218 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  v291 = (char *)&v218 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  v224 = (char *)&v218 - v44;
  MEMORY[0x1F4188790](v43);
  v235 = (char *)&v218 - v45;
  uint64_t v285 = sub_1BE06EC50();
  uint64_t v294 = *(void *)(v285 - 8);
  uint64_t v46 = MEMORY[0x1F4188790](v285);
  v293 = (char *)&v218 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = MEMORY[0x1F4188790](v46);
  v269 = (char *)&v218 - v49;
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  v271 = (char *)&v218 - v51;
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  v223 = (char *)&v218 - v53;
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  v222 = (char *)&v218 - v55;
  uint64_t v56 = MEMORY[0x1F4188790](v54);
  v229 = (char *)&v218 - v57;
  uint64_t v58 = MEMORY[0x1F4188790](v56);
  uint64_t v60 = (char *)&v218 - v59;
  uint64_t v61 = MEMORY[0x1F4188790](v58);
  v232 = (char *)&v218 - v62;
  MEMORY[0x1F4188790](v61);
  v240 = (char *)&v218 - v63;
  uint64_t v64 = type metadata accessor for WeekDayViewModel(0);
  uint64_t v249 = *(void *)(v64 - 8);
  uint64_t v65 = MEMORY[0x1F4188790](v64 - 8);
  v272 = (uint64_t *)((char *)&v218 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v65);
  uint64_t v68 = (char *)&v218 - v67;
  int v253 = *a10;
  uint64_t v69 = (void *)sub_1BE06F020();
  id v70 = objc_msgSend(v69, sel_daysInWeek);

  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  uint64_t v72 = *(void *)(v71 - 8);
  uint64_t v73 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v72 + 56);
  uint64_t v252 = v71;
  v251 = v73;
  uint64_t v250 = v72 + 56;
  ((void (*)(char *, uint64_t, uint64_t))v73)(v68, 1, 1);
  uint64_t v281 = sub_1BDFA0504((uint64_t)v68, (uint64_t)v70);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1558);
  uint64_t v75 = *(void *)(v12 + 72);
  uint64_t v76 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v77 = (v76 + 32) & ~v76;
  uint64_t v279 = v74;
  uint64_t v276 = v76 | 7;
  uint64_t v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = xmmword_1BE07C310;
  uint64_t v277 = v77;
  uint64_t v79 = v78 + v77;
  unsigned int v80 = *MEMORY[0x1E4F27C30];
  v262 = (void (**)(char *, char *, uint64_t))v12;
  uint64_t v81 = *(void (**)(uint64_t))(v12 + 104);
  unsigned int v238 = v80;
  uint64_t v82 = v290;
  v81(v79);
  uint64_t v278 = v75;
  ((void (*)(uint64_t, void, uint64_t))v81)(v79 + v75, *MEMORY[0x1E4F27C20], v82);
  *(void *)&long long v268 = 2 * v75;
  uint64_t v83 = *MEMORY[0x1E4F27C00];
  v282 = v81;
  uint64_t v283 = v13 + 104;
  ((void (*)(uint64_t, uint64_t, uint64_t))v81)(v79 + 2 * v75, v83, v82);
  sub_1BDFF638C(v78);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v84 = v240;
  sub_1BE06F000();
  uint64_t v85 = v84;
  uint64_t v86 = v292;
  swift_bridgeObjectRelease();
  unint64_t v87 = v295;
  sub_1BE06F050();
  uint64_t v88 = v87;
  uint64_t v89 = (char *)(v259 + 48);
  uint64_t v90 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v259 + 48);
  if (v90(v88, 1, v86) == 1)
  {
    sub_1BDF8686C(v88, &qword_1EB677CC0);
    os_log_type_t v91 = sub_1BE0708E0();
    uint64_t v92 = v294;
    uint64_t v93 = v285;
    (*(void (**)(char *, char *, uint64_t))(v294 + 16))(v293, v85, v285);
    sub_1BDFB7B1C(0, &qword_1EA0E3130);
    uint64_t v94 = sub_1BE0709D0();
    os_log_type_t v95 = v91;
    if (os_log_type_enabled(v94, v91))
    {
      uint64_t v96 = (uint8_t *)swift_slowAlloc();
      uint64_t v97 = swift_slowAlloc();
      unint64_t v297 = v97;
      *(_DWORD *)uint64_t v96 = 136315138;
      unint64_t v295 = (unint64_t)(v96 + 4);
      sub_1BDFB4C20(&qword_1EA0E3138, MEMORY[0x1E4F26F90]);
      uint64_t v98 = v293;
      uint64_t v99 = sub_1BE070ED0();
      uint64_t v296 = sub_1BDFCDF38(v99, v100, (uint64_t *)&v297);
      sub_1BE070A00();
      swift_bridgeObjectRelease();
      uint64_t v101 = *(void (**)(char *, uint64_t))(v92 + 8);
      v101(v98, v93);
      _os_log_impl(&dword_1BDF08000, v94, v95, "Couldn't generate startOfMonth from components: %s", v96, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C188ACF0](v97, -1, -1);
      MEMORY[0x1C188ACF0](v96, -1, -1);
    }
    else
    {
      uint64_t v101 = *(void (**)(char *, uint64_t))(v92 + 8);
      v101(v293, v93);
    }

    v101(v85, v93);
    return v281;
  }
  v288 = *(void (**)(char *, uint64_t, uint64_t))(v259 + 32);
  uint64_t v289 = v259 + 32;
  v288(v235, v88, v86);
  v102 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v274 + 56);
  uint64_t v234 = v274 + 56;
  v233 = v102;
  v102((char *)v286, 1, 1, v260);
  (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v275 + 7))(v287, 1, 1, v248);
  unint64_t v295 = sub_1BE06EBD0();
  LODWORD(v293) = v103 & 1;
  v267 = (void (**)(char *, uint64_t))sub_1BE06EBF0();
  unsigned int v266 = v104 & 1;
  uint64_t v265 = sub_1BE06EC10();
  id v105 = a5;
  sub_1BE06EFE0();
  uint64_t v106 = v232;
  uint64_t v107 = v292;
  sub_1BE06EC40();
  uint64_t v108 = (uint64_t)v284;
  sub_1BE06F050();
  if (v90(v108, 1, v107) == 1)
  {
    sub_1BDF8686C(v108, &qword_1EB677CC0);
    os_log_type_t v109 = sub_1BE0708E0();
    uint64_t v110 = v294;
    uint64_t v111 = v269;
    (*(void (**)(char *, char *, uint64_t))(v294 + 16))(v269, v106, v285);
    uint64_t v112 = v259;
    v113 = v270;
    id v114 = v235;
    (*(void (**)(char *, char *, uint64_t))(v259 + 16))(v270, v235, v107);
    sub_1BDFB7B1C(0, &qword_1EA0E3130);
    uint64_t v115 = v107;
    uint64_t v116 = sub_1BE0709D0();
    int v117 = v109;
    uint64_t v118 = v112;
    if (os_log_type_enabled(v116, v109))
    {
      uint64_t v119 = swift_slowAlloc();
      unint64_t v295 = swift_slowAlloc();
      unint64_t v297 = v295;
      *(_DWORD *)uint64_t v119 = 136315394;
      sub_1BDFB4C20(&qword_1EA0E3138, MEMORY[0x1E4F26F90]);
      LODWORD(v293) = v117;
      uint64_t v120 = v285;
      uint64_t v121 = sub_1BE070ED0();
      uint64_t v296 = sub_1BDFCDF38(v121, v122, (uint64_t *)&v297);
      sub_1BE070A00();
      swift_bridgeObjectRelease();
      uint64_t v123 = v113;
      uint64_t v124 = v118;
      uint64_t v125 = *(void (**)(char *, uint64_t))(v110 + 8);
      v125(v111, v120);
      *(_WORD *)(v119 + 12) = 2080;
      sub_1BDFB4C20(&qword_1EA0E3140, MEMORY[0x1E4F27928]);
      uint64_t v126 = v292;
      uint64_t v127 = sub_1BE070ED0();
      uint64_t v296 = sub_1BDFCDF38(v127, v128, (uint64_t *)&v297);
      sub_1BE070A00();
      swift_bridgeObjectRelease();
      uint64_t v129 = *(void (**)(char *, uint64_t))(v124 + 8);
      v129(v123, v126);
      _os_log_impl(&dword_1BDF08000, v116, (os_log_type_t)v293, "Couldn't find a week starting with components: %s after date: %s", (uint8_t *)v119, 0x16u);
      unint64_t v130 = v295;
      swift_arrayDestroy();
      MEMORY[0x1C188ACF0](v130, -1, -1);
      MEMORY[0x1C188ACF0](v119, -1, -1);

      uint64_t v131 = v285;
      v125(v232, v285);
      v129(v235, v126);
      v125(v240, v131);
    }
    else
    {

      v214 = *(void (**)(char *, uint64_t))(v112 + 8);
      v214(v113, v115);
      v215 = *(void (**)(char *, uint64_t))(v110 + 8);
      uint64_t v216 = v285;
      v215(v111, v285);
      v215(v232, v216);
      v214(v114, v115);
      v215(v240, v216);
    }
    return v281;
  }
  v286 = v90;
  v287 = v89;
  uint64_t v132 = v107;
  uint64_t v133 = v224;
  v288(v224, v108, v132);
  uint64_t v134 = *(void (**)(char *, char *, uint64_t))(v259 + 16);
  uint64_t v135 = v291;
  uint64_t v246 = v259 + 16;
  v245 = v134;
  v134(v291, v133, v132);
  uint64_t v136 = v277;
  v269 = (char *)(v277 + v268);
  uint64_t v137 = swift_allocObject();
  long long v268 = xmmword_1BE079670;
  *(_OWORD *)(v137 + 16) = xmmword_1BE079670;
  unsigned int v138 = *MEMORY[0x1E4F27BF0];
  uint64_t v139 = v282;
  ((void (*)(uint64_t, void, uint64_t))v282)(v137 + v136, *MEMORY[0x1E4F27BF0], v290);
  LODWORD(v265) = *MEMORY[0x1E4F27BD8];
  v139(v137 + v136 + v278);
  uint64_t v140 = v135;
  sub_1BDFF638C(v137);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BE06F000();
  swift_bridgeObjectRelease();
  uint64_t v264 = *(void *)(v281 + 16);
  if (!v264)
  {
    v211 = *(void (**)(char *, uint64_t))(v294 + 8);
    uint64_t v212 = v285;
    uint64_t v213 = v292;
LABEL_66:
    v211(v60, v212);
    v217 = *(void (**)(char *, uint64_t))(v259 + 8);
    v217(v140, v213);
    v217(v224, v213);
    v211(v232, v212);
    v217(v235, v213);
    v211(v240, v212);
    return v281;
  }
  unsigned int v266 = v138;
  v293 = v105;
  unint64_t v295 = 0;
  v284 = (void (**)(char *, uint64_t))(v259 + 8);
  int v261 = a9;
  v228 = (void (**)(char *, uint64_t))(v275 + 8);
  v225 = (void (**)(char *, char *, uint64_t))(v274 + 32);
  v221 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v274 + 48);
  v220 = (void (**)(char *, char *, uint64_t))(v294 + 16);
  uint64_t v141 = v294 + 8;
  v219 = (void (**)(char *, uint64_t))(v274 + 8);
  v270 = (char *)(v262 + 1);
  int v244 = v263 & 1;
  v262 = (void (**)(char *, char *, uint64_t))(v294 + 32);
  uint64_t v263 = a4;
  v275 = v60;
  v267 = (void (**)(char *, uint64_t))(v294 + 8);
  while (1)
  {
    uint64_t v142 = sub_1BE06EBA0();
    uint64_t v294 = v141 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    if (v143)
    {
      uint64_t v144 = v292;
    }
    else
    {
      uint64_t v144 = v292;
      if (v142 == a4) {
        goto LABEL_17;
      }
    }
    if ((v261 & 1) == 0)
    {
      v145 = v282;
      goto LABEL_58;
    }
LABEL_17:
    uint64_t v146 = v256;
    sub_1BDF86808(v257, v256, &qword_1EB677CC0);
    v147 = v286;
    if (v286(v146, 1, v144) == 1)
    {
      sub_1BDF8686C(v146, &qword_1EB677CC0);
      LODWORD(v274) = 0;
    }
    else
    {
      v149 = v236;
      v288(v236, v146, v144);
      LODWORD(v274) = sub_1BE06F080();
      (*v284)(v149, v144);
    }
    uint64_t v148 = v254;
    sub_1BDF86808(v258, v254, &qword_1EB677CC0);
    if (v147(v148, 1, v144) == 1)
    {
      sub_1BDF8686C(v148, &qword_1EB677CC0);
      int v150 = v274;
      v151 = v291;
      if (!v255) {
        goto LABEL_35;
      }
    }
    else
    {
      v185 = v237;
      v288(v237, v148, v144);
      v151 = v291;
      int v150 = sub_1BE06F080();
      (*v284)(v185, v144);
      if (!v255)
      {
LABEL_35:
        v186 = v151;
        BOOL v187 = 0;
        if (v253 != 1)
        {
          LOBYTE(v183) = 0;
          LOBYTE(v169) = 0;
          if (v253 == 2)
          {
            LOBYTE(v183) = 0;
            LOBYTE(v169) = 0;
            BOOL v187 = 1;
          }
          goto LABEL_53;
        }
        int v239 = v150;
        int v226 = 0;
        BOOL v227 = 0;
LABEL_52:
        v190 = v280;
        uint64_t v191 = v238;
        uint64_t v192 = v290;
        v183 = (void (*)(char *, uint64_t, uint64_t))v282;
        ((void (*)(char *, void, uint64_t))v282)(v280, v238, v290);
        uint64_t v193 = sub_1BE06F0F0();
        v194 = *(void (**)(char *, uint64_t))v270;
        (*(void (**)(char *, uint64_t))v270)(v190, v192);
        v183(v190, v191, v192);
        uint64_t v195 = sub_1BE06F0F0();
        v194(v190, v192);
        BOOL v187 = v193 != v195;
        LOBYTE(v150) = v239;
        LOBYTE(v169) = v227;
        LOBYTE(v183) = v226;
        goto LABEL_53;
      }
    }
    v152 = self;
    v153 = (void *)sub_1BE0704C0();
    v154 = v242;
    sub_1BE06F0C0();
    v155 = (void *)sub_1BE06F120();
    (*v228)(v154, v248);
    id v156 = objc_msgSend(v152, sel_overlayCalendarForCalendarIdentifier_timezone_, v153, v155);

    if (!v156)
    {
      uint64_t v159 = (uint64_t)v241;
      v233(v241, 1, 1, v260);
LABEL_39:
      sub_1BDF8686C(v159, &qword_1EA0E1110);
      LOBYTE(v183) = 0;
      if (v253 != 1)
      {
        v186 = v151;
        if (v253 == 2)
        {
          BOOL v187 = 1;
        }
        else
        {
          BOOL v187 = 0;
          LOBYTE(v183) = 0;
        }
        LOBYTE(v169) = 0;
        goto LABEL_53;
      }
      int v239 = v150;
      v186 = v151;
      int v226 = 0;
      BOOL v227 = 0;
      goto LABEL_52;
    }
    v157 = v231;
    sub_1BE06F040();

    v158 = *v225;
    uint64_t v159 = (uint64_t)v241;
    uint64_t v160 = v260;
    (*v225)(v241, v157, v260);
    v233((char *)v159, 0, 1, v160);
    if ((*v221)(v159, 1, v160) == 1) {
      goto LABEL_39;
    }
    int v239 = v150;
    v158(v230, (char *)v159, v160);
    uint64_t v161 = swift_allocObject();
    *(_OWORD *)(v161 + 16) = v268;
    uint64_t v162 = v161 + v277;
    uint64_t v163 = v290;
    v164 = v282;
    ((void (*)(uint64_t, void, uint64_t))v282)(v161 + v277, v266, v290);
    ((void (*)(uint64_t, void, uint64_t))v164)(v162 + v278, v238, v163);
    sub_1BDFF638C(v161);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v165 = v229;
    sub_1BE06F000();
    swift_bridgeObjectRelease();
    uint64_t v166 = sub_1BE06EBB0();
    BOOL v169 = (v167 & 1) == 0 && v166 == 1;
    v170 = *v220;
    v171 = v222;
    v172 = v165;
    uint64_t v173 = v285;
    (*v220)(v222, v172, v285);
    if (!v169)
    {
      v177 = *v267;
      (*v267)(v171, v173);
LABEL_47:
      v188 = v223;
      v179 = v229;
      LOBYTE(v150) = v239;
      v170(v223, v229, v173);
      v189 = v188;
      uint64_t v184 = v294;
      goto LABEL_48;
    }
    uint64_t v174 = sub_1BE06EC10();
    char v176 = v175;
    v177 = *v267;
    (*v267)(v171, v173);
    if (v176) {
      goto LABEL_47;
    }
    v178 = v223;
    v179 = v229;
    v170(v223, v229, v173);
    if (v174 == 1)
    {
      v180 = v178;
      char v181 = sub_1BE06EB90();
      v182 = v180;
      v151 = v291;
      v177(v182, v173);
      v177(v179, v173);
      (*v219)(v230, v260);
      LODWORD(v183) = (v181 & 1) == 0;
      uint64_t v184 = v294;
      LOBYTE(v150) = v239;
      goto LABEL_49;
    }
    v189 = v178;
    uint64_t v184 = v294;
    LOBYTE(v150) = v239;
LABEL_48:
    v177(v189, v173);
    v177(v179, v173);
    (*v219)(v230, v260);
    LODWORD(v183) = 0;
LABEL_49:
    uint64_t v294 = v184;
    v186 = v151;
    if (v253 == 2)
    {
      BOOL v187 = 1;
    }
    else
    {
      if (v253 == 1)
      {
        int v226 = (int)v183;
        BOOL v227 = v169;
        goto LABEL_52;
      }
      BOOL v187 = 0;
    }
LABEL_53:
    uint64_t result = sub_1BE06EBB0();
    if (v197) {
      goto LABEL_70;
    }
    uint64_t v198 = v252;
    v199 = v272;
    v200 = (char *)v272 + *(int *)(v252 + 160);
    uint64_t *v272 = result;
    *((unsigned char *)v199 + 8) = sub_1BE06F010() & 1;
    *((unsigned char *)v199 + 9) = v274 & 1;
    *((unsigned char *)v199 + 10) = v150 & 1;
    *((unsigned char *)v199 + 11) = v244;
    *((unsigned char *)v199 + 12) = v169;
    *((unsigned char *)v199 + 13) = (_BYTE)v183;
    *((unsigned char *)v199 + 14) = v187;
    v201 = v186;
    uint64_t v144 = v292;
    v245(v200, v201, v292);
    v251(v199, 0, 1, v198);
    unint64_t v202 = v281;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1BDF9CB04(v202);
      unint64_t v202 = result;
    }
    v145 = v282;
    if (v295 >= *(void *)(v202 + 16)) {
      break;
    }
    unint64_t v203 = (*(unsigned __int8 *)(v249 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v249 + 80);
    uint64_t v281 = v202;
    sub_1BDFB7B58((uint64_t)v272, v202 + v203 + *(void *)(v249 + 72) * v295);
LABEL_58:
    v204 = v280;
    uint64_t v205 = v266;
    uint64_t v206 = v290;
    ((void (*)(char *, void, uint64_t))v145)(v280, v266, v290);
    v207 = v273;
    uint64_t v140 = v291;
    sub_1BE06F060();
    (*(void (**)(char *, uint64_t))v270)(v204, v206);
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v286)(v207, 1, v144);
    if (result == 1) {
      goto LABEL_69;
    }
    ++v295;
    (*v284)(v140, v144);
    v288(v140, (uint64_t)v207, v144);
    uint64_t v208 = swift_allocObject();
    *(_OWORD *)(v208 + 16) = v268;
    uint64_t v209 = v208 + v277;
    ((void (*)(uint64_t, uint64_t, uint64_t))v145)(v208 + v277, v205, v206);
    ((void (*)(uint64_t, void, uint64_t))v145)(v209 + v278, v265, v206);
    sub_1BDFF638C(v208);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v210 = v271;
    sub_1BE06F000();
    swift_bridgeObjectRelease();
    uint64_t v141 = (uint64_t)v267;
    v211 = *v267;
    uint64_t v60 = v275;
    uint64_t v212 = v285;
    (*v267)(v275, v285);
    (*v262)(v60, v210, v212);
    a4 = v263;
    if (v264 == v295)
    {
      uint64_t v213 = v292;
      goto LABEL_66;
    }
  }
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
  return result;
}

uint64_t sub_1BDFA0504(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = sub_1BE070C80();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      uint64_t v4 = type metadata accessor for WeekDayViewModel(0);
      uint64_t v5 = sub_1BE070750();
      *(void *)(v5 + 16) = a2;
      uint64_t v6 = *(void *)(v4 - 8);
      unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      sub_1BDFAC88C(a1, v5 + v7, type metadata accessor for WeekDayViewModel);
      uint64_t v8 = a2 - 1;
      if (a2 != 1)
      {
        uint64_t v9 = *(void *)(v6 + 72);
        uint64_t v10 = v5 + v9 + v7;
        do
        {
          sub_1BDFAC88C(a1, v10, type metadata accessor for WeekDayViewModel);
          v10 += v9;
          --v8;
        }
        while (v8);
      }
    }
    else
    {
      uint64_t v5 = MEMORY[0x1E4FBC860];
    }
    sub_1BDFB6454(a1, type metadata accessor for WeekDayViewModel);
    return v5;
  }
  return result;
}

id sub_1BDFA0670()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EE0]), sel_init);
  qword_1EA0F6B60 = (uint64_t)result;
  return result;
}

id sub_1BDFA06A4()
{
  uint64_t v1 = type metadata accessor for WeekDayViewModel(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFAC88C(v0, (uint64_t)v3, type metadata accessor for WeekDayViewModel);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4) == 1) {
    return 0;
  }
  uint64_t v6 = *(int *)(v4 + 160);
  if (v3[11])
  {
    uint64_t v5 = 9666786;
LABEL_9:
    uint64_t v10 = sub_1BE06EEE0();
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(&v3[v6], v10);
    return (id)v5;
  }
  id v7 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)v3);
  if (qword_1EA0E2210 != -1) {
    swift_once();
  }
  id result = objc_msgSend((id)qword_1EA0F6B60, sel_stringFromNumber_, v7);
  if (result)
  {
    uint64_t v9 = result;
    uint64_t v5 = sub_1BE070500();

    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDFA0884(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WeekDayViewModel(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFAC88C(v1, (uint64_t)v8, type metadata accessor for WeekDayViewModel);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) == 1) {
    return sub_1BE06FFD0();
  }
  uint64_t v11 = &v8[*(int *)(v9 + 160)];
  if (v8[9] != 1 || (v8[11] & 1) != 0)
  {
    if (v8[11] & 1 | ((v8[10] & 1) == 0)) {
      uint64_t v14 = sub_1BE06FFD0();
    }
    else {
      uint64_t v14 = sub_1BDF9E3C8();
    }
    uint64_t v10 = v14;
  }
  else
  {
    uint64_t v12 = sub_1BE06EFC0();
    uint64_t v13 = *(void *)(v12 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v5, a1, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v5, 0, 1, v12);
    uint64_t v10 = sub_1BE035548((uint64_t)v5);
    sub_1BDF8686C((uint64_t)v5, &qword_1EB678018);
  }
  uint64_t v15 = sub_1BE06EEE0();
  (*(void (**)(char *, uint64_t))(*(void *)(v15 - 8) + 8))(v11, v15);
  return v10;
}

uint64_t sub_1BDFA0AE8()
{
  uint64_t v1 = type metadata accessor for WeekDayViewModel(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFAC88C(v0, (uint64_t)v3, type metadata accessor for WeekDayViewModel);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4) != 1)
  {
    int v6 = v3[9];
    int v7 = v3[10];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1568);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BE07ABD0;
    *(void *)(v8 + 32) = 0x62616C2D65746164;
    *(void *)(v8 + 40) = 0xEA00000000006C65;
    if (v6 == 1)
    {
      unint64_t v9 = 2;
      uint64_t v8 = (uint64_t)sub_1BE054CEC((void *)1, 2, 1, (void *)v8);
      *(void *)(v8 + 16) = 2;
      *(void *)(v8 + 48) = 0x7961646F74;
      *(void *)(v8 + 56) = 0xE500000000000000;
      if (!v7) {
        goto LABEL_10;
      }
    }
    else
    {
      unint64_t v9 = 1;
      if (!v7)
      {
LABEL_10:
        uint64_t v13 = &v3[*(int *)(v4 + 160)];
        v17[1] = v8;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1AA0);
        sub_1BDF86964((unint64_t *)&qword_1EA0E1AA8, &qword_1EA0E1AA0);
        uint64_t v5 = sub_1BE070430();
        swift_bridgeObjectRelease();
        uint64_t v14 = sub_1BE06EEE0();
        (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
        return v5;
      }
    }
    unint64_t v10 = *(void *)(v8 + 24);
    unint64_t v11 = v9 + 1;
    if (v9 >= v10 >> 1)
    {
      v17[0] = v9 + 1;
      uint64_t v16 = sub_1BE054CEC((void *)(v10 > 1), v9 + 1, 1, (void *)v8);
      unint64_t v11 = v17[0];
      uint64_t v8 = (uint64_t)v16;
    }
    *(void *)(v8 + 16) = v11;
    unint64_t v12 = v8 + 16 * v9;
    *(void *)(v12 + 32) = 0x64657463656C6573;
    *(void *)(v12 + 40) = 0xE800000000000000;
    goto LABEL_10;
  }
  return 0;
}

uint64_t sub_1BDFA0D74()
{
  uint64_t v1 = sub_1BE06EEE0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WeekDayViewModel(0);
  MEMORY[0x1F4188790](v5 - 8);
  int v7 = (unsigned __int8 *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFAC88C(v0, (uint64_t)v7, type metadata accessor for WeekDayViewModel);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1) {
    return sub_1BE070FC0();
  }
  int v10 = v7[12];
  v12[0] = v7[11];
  v12[1] = v10;
  int v11 = v7[14];
  v12[2] = v7[13];
  v12[3] = v11;
  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v2 + 32))(v4, &v7[*(int *)(v8 + 160)], v1);
  sub_1BE070FC0();
  sub_1BE070FC0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BDFB4C20(&qword_1EA0E10E0, MEMORY[0x1E4F27928]);
  sub_1BE070410();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

unint64_t sub_1BDFA0FE8(char a1)
{
  unint64_t result = 0x6F706D6F43796164;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E656B6565576E69;
      break;
    case 2:
      unint64_t result = 0x7961646F547369;
      break;
    case 3:
      unint64_t result = 0x7463656C65537369;
      break;
    case 4:
      unint64_t result = 0x686563616C507369;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x747865546D6964;
      break;
    case 8:
      unint64_t result = 1702125924;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDFA1128(void *a1)
{
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1550);
  uint64_t v27 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v34 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1BE06EEE0();
  uint64_t v31 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v30 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1548);
  uint64_t v4 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WeekDayViewModel(0);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (unsigned __int8 *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1540);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDFB4C68();
  sub_1BE071030();
  sub_1BDFAC88C(v33, (uint64_t)v9, type metadata accessor for WeekDayViewModel);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v9, 1, v14) == 1)
  {
    char v36 = 0;
    sub_1BDFB4D10();
    sub_1BE070E20();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    uint64_t v33 = v11;
    LODWORD(v28) = v9[8];
    int v16 = v9[9];
    v26[6] = v9[10];
    v26[7] = v16;
    v26[5] = v9[11];
    int v17 = v9[12];
    int v18 = v9[13];
    int v19 = v9[14];
    (*(void (**)(char *, unsigned __int8 *, uint64_t))(v31 + 32))(v30, &v9[*(int *)(v14 + 160)], v29);
    char v46 = 1;
    sub_1BDFB4CBC();
    sub_1BE070E20();
    char v45 = 0;
    uint64_t v20 = v32;
    sub_1BE070E90();
    uint64_t v21 = v13;
    if (v20)
    {
      (*(void (**)(char *, uint64_t))(v27 + 8))(v34, v35);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v29);
      uint64_t v24 = v33;
    }
    else
    {
      LODWORD(v32) = v17;
      v26[3] = v19;
      v26[4] = v18;
      uint64_t v23 = v30;
      uint64_t v22 = v31;
      char v44 = 1;
      sub_1BE070E70();
      char v43 = 2;
      sub_1BE070E70();
      char v42 = 3;
      sub_1BE070E70();
      char v41 = 4;
      sub_1BE070E70();
      uint64_t v24 = v33;
      char v40 = 5;
      sub_1BE070E70();
      char v39 = 6;
      sub_1BE070E70();
      uint64_t v25 = v29;
      char v38 = 7;
      sub_1BE070E70();
      char v37 = 8;
      sub_1BDFB4C20(&qword_1EA0E10D8, MEMORY[0x1E4F27928]);
      sub_1BE070EB0();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v34, v35);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v25);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v21, v10);
  }
}

BOOL sub_1BDFA17EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1BDFA1804()
{
  if (*v0) {
    return 0x656C6269736956;
  }
  else {
    return 0x6E6564646948;
  }
}

uint64_t sub_1BDFA183C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFB8274(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDFA1864(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BDFA1870(uint64_t a1)
{
  unint64_t v2 = sub_1BDFB4C68();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFA18AC(uint64_t a1)
{
  unint64_t v2 = sub_1BDFB4C68();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1BDFA18E8()
{
  return 0;
}

uint64_t sub_1BDFA18F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

void sub_1BDFA1924(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BDFA1930(uint64_t a1)
{
  unint64_t v2 = sub_1BDFB4D10();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFA196C(uint64_t a1)
{
  unint64_t v2 = sub_1BDFB4D10();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1BDFA19A8()
{
  return sub_1BDFA0FE8(*v0);
}

uint64_t sub_1BDFA19B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFB8360(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDFA19D8(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1BDFA19E4(uint64_t a1)
{
  unint64_t v2 = sub_1BDFB4CBC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFA1A20(uint64_t a1)
{
  unint64_t v2 = sub_1BDFB4CBC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1BDFA1A5C()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFA1AA0()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFA1ADC(void *a1)
{
  return sub_1BDFA1128(a1);
}

void sub_1BDFA1AF8(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
}

__n128 CUIKWeekLabelRow.init(currentDate:styling:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  __n128 v19 = a2[8];
  __n128 v20 = a2[9];
  __n128 v21 = a2[10];
  __n128 v15 = a2[4];
  __n128 v16 = a2[5];
  __n128 v17 = a2[6];
  __n128 v18 = a2[7];
  __n128 v11 = *a2;
  __n128 v12 = a2[1];
  __n128 v13 = a2[2];
  __n128 v14 = a2[3];
  uint64_t v5 = (int *)type metadata accessor for CUIKWeekLabelRow(0);
  uint64_t v6 = (uint64_t *)(a3 + v5[6]);
  *uint64_t v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = (uint64_t *)(a3 + v5[7]);
  *uint64_t v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a3, a1, v8);
  unint64_t v9 = (__n128 *)(a3 + v5[5]);
  v9[8] = v19;
  v9[9] = v20;
  v9[10] = v21;
  v9[4] = v15;
  v9[5] = v16;
  v9[6] = v17;
  v9[7] = v18;
  *unint64_t v9 = v11;
  v9[1] = v12;
  __n128 result = v14;
  v9[2] = v13;
  void v9[3] = v14;
  return result;
}

uint64_t type metadata accessor for CUIKWeekLabelRow(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E1140);
}

uint64_t sub_1BDFA1C70()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WeekDayViewModel(0);
  uint64_t v58 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v67 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v68 = (uint64_t)&v56 - v5;
  uint64_t v6 = sub_1BE06F500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v62 = v6;
  uint64_t v63 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  __n128 v12 = (char *)&v56 - v11;
  uint64_t v13 = sub_1BE06F100();
  unint64_t v65 = *(void *)(v13 - 8);
  uint64_t v66 = v13;
  MEMORY[0x1F4188790](v13);
  __n128 v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  __n128 v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  __n128 v21 = (char *)&v56 - v20;
  uint64_t v22 = sub_1BE06EEE0();
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, v0, v22);
  uint64_t v57 = v23;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  v24(v21, 0, 1, v22);
  uint64_t v64 = v22;
  v24(v19, 1, 1, v22);
  uint64_t v25 = type metadata accessor for CUIKWeekLabelRow(0);
  sub_1BDFCD994((uint64_t)v15);
  uint64_t v26 = (void *)(v1 + *(int *)(v25 + 20));
  uint64_t v61 = v26[10];
  uint64_t v27 = v26[11];
  uint64_t v59 = v1;
  uint64_t v60 = v27;
  sub_1BDFCDC80((uint64_t)v12);
  sub_1BE06F4F0();
  sub_1BDFB4C20(&qword_1EA0E1368, MEMORY[0x1E4F3CD50]);
  uint64_t v28 = v62;
  LOBYTE(v24) = sub_1BE070AB0();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v63 + 8);
  v29(v10, v28);
  v29(v12, v28);
  unsigned __int8 v69 = 0;
  uint64_t v30 = sub_1BDF9E678(v59, (uint64_t)v21, (uint64_t)v19, 2, v15, v61, v60, v24 & 1, 0, &v69);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v15, v66);
  sub_1BDF8686C((uint64_t)v19, &qword_1EB677CC0);
  sub_1BDF8686C((uint64_t)v21, &qword_1EB677CC0);
  uint64_t result = sub_1BDFDAC74();
  uint64_t v32 = result;
  uint64_t v33 = v26[21];
  unint64_t v34 = *(void *)(result + 16);
  if (!v34)
  {
    swift_retain();
    char v43 = (void *)MEMORY[0x1E4FBC860];
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return (uint64_t)v43;
  }
  if (v34 <= *(void *)(v30 + 16))
  {
    uint64_t v35 = v26[17];
    uint64_t v36 = v26[18];
    uint64_t v38 = v26[19];
    uint64_t v37 = v26[20];
    uint64_t v39 = *(unsigned __int8 *)(v58 + 80);
    uint64_t v60 = v30;
    uint64_t v40 = v30 + ((v39 + 32) & ~v39);
    uint64_t v66 = *(void *)(v58 + 72);
    uint64_t v63 = v57 + 8;
    uint64_t v58 = v35;
    swift_retain();
    uint64_t v57 = v36;
    swift_retain();
    uint64_t v56 = v38;
    swift_retain();
    uint64_t v61 = v37;
    swift_retain();
    uint64_t v62 = v33;
    swift_retain();
    uint64_t v41 = 0;
    uint64_t v59 = v32;
    char v42 = (uint64_t *)(v32 + 40);
    char v43 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v65 = v34;
    do
    {
      uint64_t v45 = *(v42 - 1);
      uint64_t v44 = *v42;
      uint64_t v46 = v68;
      sub_1BDFAC88C(v40, v68, type metadata accessor for WeekDayViewModel);
      uint64_t v47 = v67;
      sub_1BDFAC88C(v46, v67, type metadata accessor for WeekDayViewModel);
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v47, 1, v48) == 1)
      {
        swift_bridgeObjectRetain();
        uint64_t v49 = sub_1BE06FFD0();
      }
      else
      {
        char v50 = *(unsigned char *)(v47 + 8);
        uint64_t v51 = v47 + *(int *)(v48 + 160);
        swift_bridgeObjectRetain();
        if (v50)
        {
          uint64_t v49 = v62;
          if (!v62) {
            uint64_t v49 = sub_1BE070020();
          }
        }
        else
        {
          uint64_t v49 = v61;
          if (!v61) {
            uint64_t v49 = sub_1BE070010();
          }
        }
        uint64_t v52 = *(void (**)(uint64_t, uint64_t))v63;
        swift_retain();
        v52(v51, v64);
      }
      sub_1BDFB6454(v68, type metadata accessor for WeekDayViewModel);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v43 = sub_1BE054DFC(0, v43[2] + 1, 1, v43);
      }
      unint64_t v54 = v43[2];
      unint64_t v53 = v43[3];
      if (v54 >= v53 >> 1) {
        char v43 = sub_1BE054DFC((void *)(v53 > 1), v54 + 1, 1, v43);
      }
      uint64_t v55 = &v43[4 * v54];
      v55[6] = v49;
      v55[7] = v41;
      v42 += 2;
      v43[2] = v54 + 1;
      v55[4] = v45;
      v55[5] = v44;
      v40 += v66;
      ++v41;
    }
    while (v65 != v41);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

double CUIKWeekLabelRow.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CUIKWeekLabelRow(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  sub_1BDFAC88C(v1, (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CUIKWeekLabelRow);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  sub_1BDFAC8F8((uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for CUIKWeekLabelRow);
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v8 = v13;
  char v9 = v14;
  uint64_t v10 = v15;
  char v11 = v16;
  *(void *)a1 = sub_1BDFAC6A4;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v11;
  double result = *(double *)&v17;
  *(_OWORD *)(a1 + 48) = v17;
  return result;
}

uint64_t sub_1BDFA24E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1BE06F3F0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = type metadata accessor for CUIKWeekLabelRow(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  __n128 v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)a3 = sub_1BE06F740();
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1208);
  v17[1] = sub_1BDFA1C70();
  sub_1BDFAC88C(a2, (uint64_t)v12, type metadata accessor for CUIKWeekLabelRow);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v14 = (v11 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  sub_1BDFAC8F8((uint64_t)v12, v15 + v13, type metadata accessor for CUIKWeekLabelRow);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v15 + v14, (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E14E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1358);
  sub_1BDF86964(&qword_1EA0E14F0, &qword_1EA0E14E8);
  sub_1BDFB70A8(&qword_1EA0E1350, &qword_1EA0E1358, (void (*)(void))sub_1BDFB7F5C);
  sub_1BDFB81BC();
  return sub_1BE070270();
}

uint64_t sub_1BDFA27BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v82 = a3;
  uint64_t v84 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1448);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v78 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1BE06F500();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  __n128 v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  unint64_t v14 = (char *)&v63 - v13;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1460);
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  char v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E12A0);
  MEMORY[0x1F4188790](v65);
  uint64_t v71 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1308);
  MEMORY[0x1F4188790](v70);
  uint64_t v74 = (uint64_t)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1338);
  MEMORY[0x1F4188790](v73);
  uint64_t v75 = (uint64_t)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1348);
  MEMORY[0x1F4188790](v72);
  uint64_t v79 = (uint64_t)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1358);
  MEMORY[0x1F4188790](v76);
  uint64_t v77 = (uint64_t)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  unint64_t v23 = a1[1];
  uint64_t v24 = a1[2];
  uint64_t v64 = type metadata accessor for CUIKWeekLabelRow(0);
  uint64_t v25 = *(int *)(v64 + 28);
  uint64_t v83 = a2;
  uint64_t v67 = a2 + v25;
  sub_1BDFCDC80((uint64_t)v14);
  sub_1BE06F4F0();
  uint64_t v66 = sub_1BDFB4C20(&qword_1EA0E1368, MEMORY[0x1E4F3CD50]);
  LOBYTE(a1) = sub_1BE070AB0();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v9 + 8);
  v26(v12, v8);
  uint64_t v81 = v8;
  uint64_t v80 = v9 + 8;
  v26(v14, v8);
  if (a1)
  {
    unint64_t v23 = 0xA300000000000000;
    uint64_t v22 = 9666786;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  *(void *)&long long v85 = v22;
  *((void *)&v85 + 1) = v23;
  sub_1BDF859F0();
  uint64_t v27 = sub_1BE06FD30();
  uint64_t v29 = v28;
  *(void *)&long long v85 = v27;
  *((void *)&v85 + 1) = v28;
  char v31 = v30 & 1;
  LOBYTE(v86) = v30 & 1;
  *((void *)&v86 + 1) = v32;
  sub_1BE06FD80();
  sub_1BDF8587C(v27, v29, v31);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v34 = v68;
  uint64_t v35 = (uint64_t)v71;
  uint64_t v36 = v69;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v71, v16, v69);
  uint64_t v37 = (uint64_t *)(v35 + *(int *)(v65 + 36));
  uint64_t *v37 = KeyPath;
  v37[1] = v24;
  uint64_t v38 = *(void (**)(char *, uint64_t))(v34 + 8);
  swift_retain();
  v38(v16, v36);
  uint64_t v39 = (long long *)(v83 + *(int *)(v64 + 20));
  long long v40 = v39[9];
  long long v93 = v39[8];
  long long v94 = v40;
  long long v95 = v39[10];
  long long v41 = v39[5];
  long long v89 = v39[4];
  long long v42 = v39[6];
  long long v92 = v39[7];
  long long v90 = v41;
  long long v91 = v42;
  long long v43 = v39[1];
  long long v85 = *v39;
  long long v86 = v43;
  long long v44 = v39[2];
  long long v88 = v39[3];
  long long v87 = v44;
  sub_1BDFB63B4((uint64_t)&v85);
  sub_1BE06FB70();
  uint64_t v45 = *MEMORY[0x1E4F3E080];
  uint64_t v46 = sub_1BE06FB50();
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 104))(v78, v45, v46);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
  uint64_t v49 = sub_1BE06FB80();
  sub_1BDF8686C(v48, &qword_1EA0E1448);
  sub_1BDFB7790((uint64_t)&v85);
  uint64_t v50 = swift_getKeyPath();
  uint64_t v51 = v74;
  sub_1BDF86808(v35, v74, &qword_1EA0E12A0);
  uint64_t v52 = (uint64_t *)(v51 + *(int *)(v70 + 36));
  uint64_t *v52 = v50;
  v52[1] = v49;
  sub_1BDF8686C(v35, &qword_1EA0E12A0);
  sub_1BDFCDC80((uint64_t)v14);
  sub_1BE06F4F0();
  uint64_t v53 = v81;
  LOBYTE(v49) = sub_1BE070AB0();
  v26(v12, v53);
  v26(v14, v53);
  if (v49) {
    double v54 = 0.8;
  }
  else {
    double v54 = 1.0;
  }
  uint64_t v55 = v75;
  sub_1BDF86808(v51, v75, &qword_1EA0E1308);
  *(double *)(v55 + *(int *)(v73 + 36)) = v54;
  sub_1BDF8686C(v51, &qword_1EA0E1308);
  uint64_t v56 = swift_getKeyPath();
  uint64_t v57 = v79;
  sub_1BDF86808(v55, v79, &qword_1EA0E1338);
  uint64_t v58 = v57 + *(int *)(v72 + 36);
  *(void *)uint64_t v58 = v56;
  *(void *)(v58 + 8) = 1;
  *(unsigned char *)(v58 + 16) = 0;
  sub_1BDF8686C(v55, &qword_1EA0E1338);
  sub_1BE06F3E0();
  sub_1BDFA1C70();
  swift_bridgeObjectRelease();
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v59 = v77;
  sub_1BDF86808(v57, v77, &qword_1EA0E1348);
  uint64_t v60 = (_OWORD *)(v59 + *(int *)(v76 + 36));
  long long v61 = v97;
  _OWORD *v60 = v96;
  v60[1] = v61;
  v60[2] = v98;
  sub_1BDF8686C(v57, &qword_1EA0E1348);
  return sub_1BDFB8210(v59, v84, &qword_1EA0E1358);
}

double sub_1BDFA30A8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](a1);
  sub_1BDFAC88C(v2, (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CUIKWeekLabelRow);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  sub_1BDFAC8F8((uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for CUIKWeekLabelRow);
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v8 = v13;
  char v9 = v14;
  uint64_t v10 = v15;
  char v11 = v16;
  *(void *)a2 = sub_1BDFAC6A4;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v8;
  *(unsigned char *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v10;
  *(unsigned char *)(a2 + 40) = v11;
  double result = *(double *)&v17;
  *(_OWORD *)(a2 + 48) = v17;
  return result;
}

uint64_t View.reverseMask<A>(alignment:_:)()
{
  return sub_1BE06FEC0();
}

uint64_t sub_1BDFA3380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v26 = a7;
  uint64_t v27 = a4;
  uint64_t v24 = a5;
  uint64_t v25 = a3;
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  char v30 = a9;
  sub_1BE06F520();
  sub_1BE06F4A0();
  uint64_t v39 = a8;
  uint64_t v40 = MEMORY[0x1E4F3CE08];
  swift_getWitnessTable();
  sub_1BE06F540();
  uint64_t v11 = sub_1BE06F4A0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  long long v17 = (char *)&v23 - v16;
  uint64_t v31 = v24;
  uint64_t v32 = a6;
  uint64_t v33 = v26;
  uint64_t v34 = a8;
  uint64_t v35 = v25;
  uint64_t v36 = v27;
  unint64_t v18 = sub_1BDFAC6E4();
  sub_1BE06FEF0();
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v37 = v18;
  uint64_t v38 = WitnessTable;
  swift_getWitnessTable();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v20(v17, v15, v11);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v12 + 8);
  v21(v15, v11);
  v20(v30, v17, v11);
  return ((uint64_t (*)(char *, uint64_t))v21)(v17, v11);
}

uint64_t sub_1BDFA35D4@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X3>, uint64_t a3@<X5>, char *a4@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v27 = a4;
  uint64_t v6 = sub_1BE070350();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE06F520();
  uint64_t v13 = sub_1BE06F4A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  long long v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v24 = (char *)&v24 - v19;
  v26(v18);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, *MEMORY[0x1E4F3EFD0], v6);
  sub_1BE06FF40();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v12, a2);
  uint64_t v28 = a3;
  uint64_t v29 = MEMORY[0x1E4F3CE08];
  swift_getWitnessTable();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v21 = v24;
  v20(v24, v17, v13);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v14 + 8);
  v22(v17, v13);
  v20(v27, v21, v13);
  return ((uint64_t (*)(char *, uint64_t))v22)(v21, v13);
}

__n128 CUIKWeekRow.init(displayedDate:currentDate:selectedDate:weekIndex:styling:tapAction:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  __n128 v31 = a5[8];
  __n128 v32 = a5[9];
  __n128 v33 = a5[10];
  __n128 v27 = a5[4];
  __n128 v28 = a5[5];
  __n128 v29 = a5[6];
  __n128 v30 = a5[7];
  __n128 v23 = *a5;
  __n128 v24 = a5[1];
  __n128 v25 = a5[2];
  __n128 v26 = a5[3];
  uint64_t v15 = (int *)type metadata accessor for CUIKWeekRow(0);
  uint64_t v16 = (uint64_t *)(a8 + v15[10]);
  *uint64_t v16 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  swift_storeEnumTagMultiPayload();
  long long v17 = (uint64_t *)(a8 + v15[11]);
  *long long v17 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  swift_storeEnumTagMultiPayload();
  uint64_t v18 = (uint64_t *)(a8 + v15[12]);
  uint64_t *v18 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11E0);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(a8, a1, v19);
  sub_1BDFB8210(a2, a8 + v15[5], &qword_1EB677CC0);
  sub_1BDFB8210(a3, a8 + v15[6], &qword_1EB677CC0);
  *(void *)(a8 + v15[7]) = a4;
  uint64_t v20 = (__n128 *)(a8 + v15[8]);
  v20[8] = v31;
  v20[9] = v32;
  v20[10] = v33;
  v20[4] = v27;
  uint64_t v20[5] = v28;
  v20[6] = v29;
  v20[7] = v30;
  *uint64_t v20 = v23;
  v20[1] = v24;
  __n128 result = v26;
  v20[2] = v25;
  v20[3] = v26;
  uint64_t v22 = (void *)(a8 + v15[9]);
  void *v22 = a6;
  v22[1] = a7;
  return result;
}

uint64_t sub_1BDFA3AC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v252 = a1;
  uint64_t v226 = a2;
  uint64_t v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A50);
  MEMORY[0x1F4188790](v214);
  uint64_t v215 = (uint64_t)&v189 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A08);
  MEMORY[0x1F4188790](v242);
  uint64_t v212 = (uint64_t)&v189 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A28);
  uint64_t v5 = MEMORY[0x1F4188790](v213);
  uint64_t v205 = (char *)&v189 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v206 = (uint64_t)&v189 - v7;
  uint64_t v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A78);
  MEMORY[0x1F4188790](v225);
  uint64_t v216 = (char *)&v189 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A58);
  MEMORY[0x1F4188790](v218);
  uint64_t v224 = (uint64_t)&v189 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1BE070350();
  uint64_t v201 = *(void *)(v10 - 8);
  uint64_t v202 = v10;
  MEMORY[0x1F4188790](v10);
  v200 = (char *)&v189 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E19F8);
  MEMORY[0x1F4188790](v193);
  char v197 = (char *)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A30);
  MEMORY[0x1F4188790](v194);
  uint64_t v195 = (uint64_t)&v189 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A40);
  MEMORY[0x1F4188790](v198);
  v199 = (char *)&v189 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E19E0);
  uint64_t v15 = MEMORY[0x1F4188790](v210);
  v196 = (char *)&v189 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v203 = (uint64_t)&v189 - v17;
  uint64_t v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A48);
  MEMORY[0x1F4188790](v207);
  uint64_t v209 = (uint64_t)&v189 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A18);
  MEMORY[0x1F4188790](v208);
  uint64_t v192 = (uint64_t)&v189 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A68);
  MEMORY[0x1F4188790](v217);
  v220 = (char *)&v189 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for WeekDayViewModel(0);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v204 = (uint64_t)&v189 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  v211 = (char *)&v189 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v219 = (uint64_t)&v189 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A88);
  MEMORY[0x1F4188790](v27 - 8);
  v223 = (char *)&v189 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = sub_1BE06F500();
  uint64_t v240 = *(void *)(v247 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v247);
  int v239 = (char *)&v189 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v238 = (uint64_t)&v189 - v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1448);
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v34 = (char *)&v189 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1460);
  uint64_t v231 = *(void *)(v35 - 8);
  uint64_t v232 = v35;
  MEMORY[0x1F4188790](v35);
  v230 = (char *)&v189 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1290);
  MEMORY[0x1F4188790](v228);
  uint64_t v234 = (char *)&v189 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E12F8);
  MEMORY[0x1F4188790](v233);
  uint64_t v235 = (uint64_t)&v189 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1328);
  MEMORY[0x1F4188790](v237);
  v236 = (char *)&v189 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E19F0);
  MEMORY[0x1F4188790](v40 - 8);
  uint64_t v253 = (uint64_t)&v189 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1BE06F2F0();
  uint64_t v245 = *(void *)(v42 - 8);
  uint64_t v246 = (void (*)(uint64_t, uint64_t))v42;
  MEMORY[0x1F4188790](v42);
  uint64_t v244 = (uint64_t)&v189 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  uint64_t v45 = MEMORY[0x1F4188790](v44 - 8);
  uint64_t v191 = (char *)&v189 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  v241 = (char *)&v189 - v48;
  MEMORY[0x1F4188790](v47);
  uint64_t v50 = (char *)&v189 - v49;
  uint64_t v51 = sub_1BE06F100();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  uint64_t v190 = (uint64_t)&v189 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  uint64_t v229 = (uint64_t)&v189 - v56;
  MEMORY[0x1F4188790](v55);
  uint64_t v58 = (char *)&v189 - v57;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1450);
  uint64_t v221 = *(void *)(v59 - 8);
  uint64_t v222 = v59;
  MEMORY[0x1F4188790](v59);
  v251 = (char *)&v189 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for CUIKWeekRow(0);
  uint64_t v62 = (unsigned __int8 *)(v2 + *(int *)(v61 + 32));
  int v63 = *v62;
  uint64_t v243 = v51;
  uint64_t v249 = v2;
  uint64_t v250 = v52;
  uint64_t v248 = v61;
  if (v63 == 1)
  {
    sub_1BDFCD994((uint64_t)v58);
    sub_1BE06F090();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v58, v51);
    uint64_t v64 = sub_1BE06EFC0();
    uint64_t v65 = *(void *)(v64 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48))(v50, 1, v64);
    if (result == 1)
    {
LABEL_30:
      __break(1u);
      return result;
    }
    uint64_t v67 = v244;
    sub_1BDFCDCB8(v244);
    uint64_t v68 = sub_1BDFA0884((uint64_t)v50);
    (*(void (**)(uint64_t, void))(v245 + 8))(v67, v246);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v50, v64);
  }
  else
  {
    uint64_t v68 = sub_1BE070010();
  }
  uint64_t v69 = *((void *)v62 + 3);
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v254 = v68;
  LOWORD(v255) = 256;
  *((void *)&v255 + 1) = v270;
  LOBYTE(v256) = v271;
  uint64_t v257 = v272;
  LOBYTE(v258) = v273;
  *(_OWORD *)uint64_t v259 = v274;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1250);
  sub_1BDFB76F0();
  sub_1BE06FD40();
  swift_release();
  uint64_t v254 = (uint64_t)sub_1BDFA06A4();
  *(void *)&long long v255 = v70;
  sub_1BDF859F0();
  uint64_t v71 = sub_1BE06FD30();
  uint64_t v73 = v72;
  uint64_t v254 = v71;
  *(void *)&long long v255 = v72;
  char v75 = v74 & 1;
  BYTE8(v255) = v74 & 1;
  uint64_t v256 = v76;
  uint64_t v77 = v230;
  sub_1BE06FD80();
  sub_1BDF8587C(v71, v73, v75);
  swift_bridgeObjectRelease();
  uint64_t v78 = *((void *)v62 + 4);
  uint64_t v79 = *((void *)v62 + 5);
  unsigned __int8 v80 = v62[48];
  unsigned __int8 v81 = v62[49];
  unsigned __int8 v82 = v62[50];
  uint64_t v83 = *((void *)v62 + 9);
  uint64_t v84 = *((void *)v62 + 12);
  unsigned __int8 v85 = v62[104];
  uint64_t v86 = *((void *)v62 + 14);
  uint64_t v87 = *((void *)v62 + 15);
  unsigned __int8 v88 = v62[128];
  uint64_t v89 = *((void *)v62 + 21);
  LOBYTE(v254) = *v62;
  long long v227 = *(_OWORD *)(v62 + 8);
  long long v255 = v227;
  uint64_t v256 = v69;
  uint64_t v257 = v78;
  uint64_t v258 = v79;
  v259[0] = v80;
  v259[1] = v81;
  v259[2] = v82;
  *(_OWORD *)&v259[8] = *(_OWORD *)(v62 + 56);
  uint64_t v260 = v83;
  long long v261 = *((_OWORD *)v62 + 5);
  uint64_t v262 = v84;
  unsigned __int8 v263 = v85;
  uint64_t v264 = v86;
  uint64_t v265 = v87;
  unsigned __int8 v266 = v88;
  long long v267 = *(_OWORD *)(v62 + 136);
  long long v268 = *(_OWORD *)(v62 + 152);
  uint64_t v269 = v89;
  sub_1BDFB63B4((uint64_t)&v254);
  sub_1BE06FB70();
  uint64_t v90 = *MEMORY[0x1E4F3E080];
  uint64_t v91 = sub_1BE06FB50();
  uint64_t v92 = *(void *)(v91 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 104))(v34, v90, v91);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v92 + 56))(v34, 0, 1, v91);
  uint64_t v93 = sub_1BE06FB80();
  sub_1BDF8686C((uint64_t)v34, &qword_1EA0E1448);
  sub_1BDFB7790((uint64_t)&v254);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v96 = v231;
  uint64_t v95 = v232;
  uint64_t v97 = (uint64_t)v234;
  (*(void (**)(char *, char *, uint64_t))(v231 + 16))(v234, v77, v232);
  long long v98 = (uint64_t *)(v97 + *(int *)(v228 + 36));
  *long long v98 = KeyPath;
  v98[1] = v93;
  (*(void (**)(char *, uint64_t))(v96 + 8))(v77, v95);
  uint64_t v99 = v248;
  uint64_t v100 = v238;
  sub_1BDFCDC80(v238);
  uint64_t v101 = v239;
  sub_1BE06F4F0();
  sub_1BDFB4C20(&qword_1EA0E1368, MEMORY[0x1E4F3CD50]);
  uint64_t v102 = v247;
  LOBYTE(v93) = sub_1BE070AB0();
  char v103 = *(void (**)(char *, uint64_t))(v240 + 8);
  v103(v101, v102);
  v103((char *)v100, v102);
  if (v93) {
    double v104 = 0.8;
  }
  else {
    double v104 = 1.0;
  }
  uint64_t v105 = v235;
  sub_1BDF86808(v97, v235, &qword_1EA0E1290);
  *(double *)(v105 + *(int *)(v233 + 36)) = v104;
  sub_1BDF8686C(v97, &qword_1EA0E1290);
  uint64_t v106 = swift_getKeyPath();
  uint64_t v107 = v236;
  sub_1BDF86808(v105, (uint64_t)v236, &qword_1EA0E12F8);
  uint64_t v108 = &v107[*(int *)(v237 + 36)];
  *(void *)uint64_t v108 = v106;
  *((void *)v108 + 1) = 1;
  v108[16] = 0;
  sub_1BDF8686C(v105, &qword_1EA0E12F8);
  uint64_t v109 = v252;
  sub_1BDFA0AE8();
  sub_1BDFB6EA0();
  sub_1BE06FE90();
  swift_bridgeObjectRelease();
  sub_1BDF8686C((uint64_t)v107, &qword_1EA0E1328);
  uint64_t v110 = *((void *)v62 + 17);
  uint64_t v111 = *((void *)v62 + 18);
  uint64_t v113 = *((void *)v62 + 19);
  uint64_t v112 = *((void *)v62 + 20);
  uint64_t v114 = v249 + *(int *)(v99 + 40);
  int v239 = (char *)*((void *)v62 + 21);
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v247 = v113;
  swift_retain();
  uint64_t v240 = v112;
  swift_retain();
  uint64_t v115 = v229;
  uint64_t v237 = v114;
  sub_1BDFCD994(v229);
  uint64_t v116 = (uint64_t)v241;
  sub_1BE06F090();
  int v117 = *(char **)(v250 + 8);
  v250 += 8;
  v236 = v117;
  ((void (*)(uint64_t, uint64_t))v117)(v115, v243);
  uint64_t v118 = sub_1BE06EFC0();
  uint64_t v119 = *(void *)(v118 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v116, 1, v118);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v120 = v244;
  sub_1BDFCDCB8(v244);
  uint64_t v248 = v110;
  uint64_t v238 = v111;
  uint64_t v249 = sub_1BDFB7830(v116, v120, v110, v111, v247);
  (*(void (**)(uint64_t, void))(v245 + 8))(v120, v246);
  (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v116, v118);
  uint64_t v121 = v219;
  sub_1BDFAC88C(v109, v219, type metadata accessor for WeekDayViewModel);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  uint64_t v123 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 48);
  int v124 = v123(v121, 1, v122);
  uint64_t v125 = (uint64_t)v220;
  if (v124 == 1
    || (int v126 = *(unsigned __int8 *)(v121 + 10),
        uint64_t v127 = v121 + *(int *)(v122 + 160),
        uint64_t v128 = sub_1BE06EEE0(),
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v128 - 8) + 8))(v127, v128),
        v126 != 1))
  {
    uint64_t v139 = v211;
    sub_1BDFAC88C(v109, (uint64_t)v211, type metadata accessor for WeekDayViewModel);
    if (v123((uint64_t)v139, 1, v122) == 1
      || (char v144 = v139[9],
          char v145 = v139[11],
          int v146 = v139[12],
          v147 = &v139[*(int *)(v122 + 160)],
          uint64_t v148 = sub_1BE06EEE0(),
          uint64_t v246 = *(void (**)(uint64_t, uint64_t))(*(void *)(v148 - 8) + 8),
          v246((uint64_t)v147, v148),
          v146 != 1)
      || (v145 & 1) != 0
      || (v144 & 1) != 0)
    {
      uint64_t v140 = v212;
      sub_1BDF86808(v253, v212, &qword_1EA0E19F0);
      *(void *)(v140 + *(int *)(v242 + 36)) = v249;
      sub_1BDF86808(v140, v215, &qword_1EA0E1A08);
      swift_storeEnumTagMultiPayload();
      sub_1BDFB7160();
      sub_1BDFB6D54();
      swift_retain();
      uint64_t v141 = (uint64_t)v216;
      sub_1BE06F8E0();
      sub_1BDF8686C(v140, &qword_1EA0E1A08);
      uint64_t v142 = v226;
      uint64_t v143 = v224;
    }
    else
    {
      uint64_t v149 = v204;
      sub_1BDFAC88C(v252, v204, type metadata accessor for WeekDayViewModel);
      if (v123(v149, 1, v122) != 1) {
        v246(v149 + *(int *)(v122 + 160), v148);
      }
      uint64_t v174 = v249;
      sub_1BE070320();
      sub_1BE06F390();
      char v175 = *v62;
      uint64_t v143 = v224;
      uint64_t v176 = v243;
      uint64_t v252 = v275;
      LODWORD(v250) = v276;
      uint64_t v246 = v277;
      LODWORD(v245) = v278;
      uint64_t v244 = v279;
      v241 = v280;
      if (v175)
      {
        uint64_t v177 = v190;
        sub_1BDFCD994(v190);
        uint64_t v178 = (uint64_t)v191;
        sub_1BE06F090();
        ((void (*)(uint64_t, uint64_t))v236)(v177, v176);
        uint64_t v237 = sub_1BE035548(v178);
        sub_1BDF8686C(v178, &qword_1EB678018);
      }
      else
      {
        uint64_t v237 = sub_1BE070010();
      }
      uint64_t v179 = (uint64_t)v205;
      uint64_t v180 = swift_getKeyPath();
      uint64_t v181 = v212;
      sub_1BDF86808(v253, v212, &qword_1EA0E19F0);
      *(void *)(v181 + *(int *)(v242 + 36)) = v174;
      swift_retain();
      uint64_t v182 = sub_1BE070310();
      uint64_t v184 = v183;
      sub_1BDF86808(v181, v179, &qword_1EA0E1A08);
      uint64_t v185 = v179 + *(int *)(v213 + 36);
      *(void *)uint64_t v185 = v252;
      *(unsigned char *)(v185 + 8) = v250;
      *(void *)(v185 + 16) = v246;
      *(unsigned char *)(v185 + 24) = v245;
      v186 = v241;
      *(void *)(v185 + 32) = v244;
      *(void *)(v185 + 40) = v186;
      uint64_t v243 = v180;
      *(void *)(v185 + 48) = v180;
      *(void *)(v185 + 56) = v237;
      *(_OWORD *)(v185 + 64) = xmmword_1BE07C320;
      *(void *)(v185 + 80) = v182;
      *(void *)(v185 + 88) = v184;
      swift_retain();
      swift_retain();
      sub_1BDF8686C(v181, &qword_1EA0E1A08);
      uint64_t v187 = v179;
      uint64_t v188 = v206;
      sub_1BDFB8210(v187, v206, &qword_1EA0E1A28);
      sub_1BDF86808(v188, v215, &qword_1EA0E1A28);
      swift_storeEnumTagMultiPayload();
      sub_1BDFB7160();
      sub_1BDFB6D54();
      uint64_t v141 = (uint64_t)v216;
      sub_1BE06F8E0();
      swift_release();
      swift_release();
      sub_1BDF8686C(v188, &qword_1EA0E1A28);
      uint64_t v142 = v226;
    }
    sub_1BDF86808(v141, v143, &qword_1EA0E1A78);
    swift_storeEnumTagMultiPayload();
    sub_1BDFB6BF0();
    sub_1BDFB7124();
    uint64_t v173 = (uint64_t)v223;
    sub_1BE06F8E0();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1BDF8686C(v141, &qword_1EA0E1A78);
    uint64_t v135 = v221;
    uint64_t v134 = v222;
  }
  else
  {
    if (*v62 == 1)
    {
      uint64_t v129 = v192;
      sub_1BDF86808(v253, v192, &qword_1EA0E19F0);
      *(void *)(v129 + *(int *)(v242 + 36)) = v249;
      swift_retain();
      uint64_t v130 = sub_1BE070320();
      uint64_t v132 = v131;
      uint64_t v133 = v129 + *(int *)(v208 + 36);
      uint64_t v135 = v221;
      uint64_t v134 = v222;
      (*(void (**)(uint64_t, char *, uint64_t))(v221 + 16))(v133, v251, v222);
      uint64_t v136 = (uint64_t *)(v133 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1388) + 36));
      *uint64_t v136 = v130;
      v136[1] = v132;
      uint64_t v137 = &qword_1EA0E1A18;
      sub_1BDF86808(v129, v209, &qword_1EA0E1A18);
      swift_storeEnumTagMultiPayload();
      sub_1BDFB6CB4();
      sub_1BDFB6FDC();
      sub_1BE06F8E0();
      uint64_t v138 = v129;
    }
    else
    {
      sub_1BE070320();
      sub_1BE06F390();
      uint64_t v252 = v275;
      LODWORD(v250) = v276;
      uint64_t v246 = v277;
      LODWORD(v245) = v278;
      uint64_t v243 = (uint64_t)v280;
      uint64_t v244 = v279;
      uint64_t v150 = sub_1BE070320();
      v241 = v151;
      uint64_t v242 = v150;
      uint64_t v235 = sub_1BE070320();
      uint64_t v153 = v152;
      uint64_t v154 = sub_1BE070320();
      v236 = v155;
      uint64_t v237 = v154;
      uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E19D0);
      uint64_t v157 = (uint64_t)v199;
      v158 = (uint64_t *)&v199[*(int *)(v156 + 36)];
      uint64_t v159 = (uint64_t)v158 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A90) + 36);
      uint64_t v161 = v200;
      uint64_t v160 = v201;
      uint64_t v162 = v202;
      (*(void (**)(char *, void, uint64_t))(v201 + 104))(v200, *MEMORY[0x1E4F3EFD0], v202);
      uint64_t v163 = (uint64_t)v197;
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(&v197[*(int *)(v193 + 36)], v161, v162);
      sub_1BDF86808(v253, v163, &qword_1EA0E19F0);
      (*(void (**)(char *, uint64_t))(v160 + 8))(v161, v162);
      uint64_t v164 = v195;
      sub_1BDFB8210(v163, v195, &qword_1EA0E19F8);
      v165 = (void *)(v164 + *(int *)(v194 + 36));
      void *v165 = v235;
      v165[1] = v153;
      sub_1BDF86808(v164, v159, &qword_1EA0E1A30);
      sub_1BDF8686C(v164, &qword_1EA0E1A30);
      uint64_t v166 = v236;
      uint64_t *v158 = v237;
      v158[1] = (uint64_t)v166;
      uint64_t v135 = v221;
      uint64_t v134 = v222;
      (*(void (**)(uint64_t, char *, uint64_t))(v221 + 16))(v157, v251, v222);
      char v167 = (uint64_t *)(v157 + *(int *)(v198 + 36));
      v168 = v241;
      *char v167 = v242;
      v167[1] = (uint64_t)v168;
      uint64_t v169 = (uint64_t)v196;
      sub_1BDF86808(v157, (uint64_t)&v196[*(int *)(v210 + 36)], &qword_1EA0E1A40);
      *(void *)uint64_t v169 = v252;
      *(unsigned char *)(v169 + 8) = v250;
      *(void *)(v169 + 16) = v246;
      *(unsigned char *)(v169 + 24) = v245;
      uint64_t v170 = v243;
      *(void *)(v169 + 32) = v244;
      *(void *)(v169 + 40) = v170;
      sub_1BDF8686C(v157, &qword_1EA0E1A40);
      uint64_t v137 = &qword_1EA0E19E0;
      uint64_t v171 = v203;
      sub_1BDFB8210(v169, v203, &qword_1EA0E19E0);
      sub_1BDF86808(v171, v209, &qword_1EA0E19E0);
      swift_storeEnumTagMultiPayload();
      sub_1BDFB6CB4();
      sub_1BDFB6FDC();
      sub_1BE06F8E0();
      uint64_t v138 = v171;
    }
    sub_1BDF8686C(v138, v137);
    uint64_t v172 = v226;
    uint64_t v173 = (uint64_t)v223;
    sub_1BDF86808(v125, v224, &qword_1EA0E1A68);
    swift_storeEnumTagMultiPayload();
    sub_1BDFB6BF0();
    sub_1BDFB7124();
    sub_1BE06F8E0();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1BDF8686C(v125, &qword_1EA0E1A68);
    uint64_t v142 = v172;
  }
  sub_1BDFB8210(v173, v142, &qword_1EA0E1A88);
  sub_1BDF8686C(v253, &qword_1EA0E19F0);
  return (*(uint64_t (**)(char *, uint64_t))(v135 + 8))(v251, v134);
}

double CUIKWeekRow.body.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CUIKWeekRow(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](v3);
  sub_1BDFAC88C(v1, (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CUIKWeekRow);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  sub_1BDFAC8F8((uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for CUIKWeekRow);
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v8 = v13;
  char v9 = v14;
  uint64_t v10 = v15;
  char v11 = v16;
  *(void *)a1 = sub_1BDFAC960;
  *(void *)(a1 + 8) = v7;
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v11;
  double result = *(double *)&v17;
  *(_OWORD *)(a1 + 48) = v17;
  return result;
}

uint64_t sub_1BDFA57F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  uint64_t v4 = sub_1BE06F3F0();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  uint64_t v50 = *(void *)(v48 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CUIKWeekRow(0);
  uint64_t v7 = (int *)(v6 - 8);
  uint64_t v46 = *(void *)(v6 - 8);
  uint64_t v45 = *(void *)(v46 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v44 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1BE06F500();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v43 = sub_1BE06F100();
  uint64_t v16 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v7[8];
  uint64_t v41 = a1 + v7[7];
  uint64_t v42 = a1 + v19;
  uint64_t v40 = *(void *)(a1 + v7[9]);
  sub_1BDFCD994((uint64_t)v18);
  uint64_t v20 = a1 + v7[10];
  uint64_t v21 = *(void *)(v20 + 80);
  uint64_t v38 = *(void *)(v20 + 88);
  uint64_t v39 = v21;
  sub_1BDFCDC80((uint64_t)v15);
  sub_1BE06F4F0();
  sub_1BDFB4C20(&qword_1EA0E1368, MEMORY[0x1E4F3CD50]);
  char v22 = sub_1BE070AB0();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v13, v9);
  v23(v15, v9);
  unsigned __int8 v24 = *(unsigned char *)(v20 + 50);
  LOBYTE(v53[0]) = *(unsigned char *)(v20 + 128);
  uint64_t v25 = sub_1BDF9E678(a1, v41, v42, v40, v18, v39, v38, v22 & 1, v24, (unsigned __int8 *)v53);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v43);
  v53[2] = v25;
  swift_getKeyPath();
  uint64_t v26 = v44;
  sub_1BDFAC88C(a1, v44, type metadata accessor for CUIKWeekRow);
  uint64_t v28 = v47;
  uint64_t v27 = v48;
  uint64_t v29 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v51, v49);
  unint64_t v30 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v31 = v27;
  unint64_t v32 = (v45 + *(unsigned __int8 *)(v27 + 80) + v30) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v33 = (v50 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  sub_1BDFAC8F8(v26, v34 + v30, type metadata accessor for CUIKWeekRow);
  (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v34 + v32, v28, v29);
  *(void *)(v34 + v33) = v25;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E14F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A98);
  sub_1BDF86964(&qword_1EA0E1500, &qword_1EA0E14F8);
  sub_1BDFB4C20(&qword_1EA0E1198, (void (*)(uint64_t))type metadata accessor for WeekDayViewModel);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E19B8);
  unint64_t v36 = sub_1BDFB6B3C();
  v53[0] = v35;
  v53[1] = v36;
  swift_getOpaqueTypeConformance2();
  return sub_1BE070260();
}

uint64_t sub_1BDFA5D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v24[1] = a3;
  v24[2] = a4;
  uint64_t v27 = a5;
  uint64_t v7 = type metadata accessor for WeekDayViewModel(0);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v26 + 64);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = type metadata accessor for CUIKWeekRow(0);
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v25 + 64);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1A88);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E19B8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFA3AC0(a1, (uint64_t)v14);
  sub_1BE06F3E0();
  sub_1BE070320();
  sub_1BE06F390();
  sub_1BDF86808((uint64_t)v14, (uint64_t)v17, &qword_1EA0E1A88);
  uint64_t v18 = &v17[*(int *)(v15 + 36)];
  long long v19 = v29;
  *(_OWORD *)uint64_t v18 = v28;
  *((_OWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 2) = v30;
  sub_1BDF8686C((uint64_t)v14, &qword_1EA0E1A88);
  sub_1BDFAC88C(a2, (uint64_t)v11, type metadata accessor for CUIKWeekRow);
  sub_1BDFAC88C(a1, (uint64_t)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for WeekDayViewModel);
  unint64_t v20 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v21 = (v10 + *(unsigned __int8 *)(v26 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v22 = swift_allocObject();
  sub_1BDFAC8F8((uint64_t)v11, v22 + v20, type metadata accessor for CUIKWeekRow);
  sub_1BDFAC8F8((uint64_t)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21, type metadata accessor for WeekDayViewModel);
  sub_1BDFB6B3C();
  sub_1BE06FDD0();
  swift_release();
  return sub_1BDF8686C((uint64_t)v17, &qword_1EA0E19B8);
}

uint64_t sub_1BDFA60C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WeekDayViewModel(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for CUIKWeekRow(0);
  uint64_t v12 = *(void (**)(char *))(a1 + *(int *)(result + 36));
  if (v12)
  {
    sub_1BDFAC88C(a2, (uint64_t)v10, type metadata accessor for WeekDayViewModel);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v10, 1, v13);
    if (result != 1)
    {
      char v14 = v10[11];
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, &v10[*(int *)(v13 + 160)], v4);
      if ((v14 & 1) == 0)
      {
        swift_retain();
        v12(v7);
        sub_1BDFB76E0((uint64_t)v12);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  return result;
}

double sub_1BDFA62B0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](a1);
  sub_1BDFAC88C(v2, (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CUIKWeekRow);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  sub_1BDFAC8F8((uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for CUIKWeekRow);
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v8 = v13;
  char v9 = v14;
  uint64_t v10 = v15;
  char v11 = v16;
  *(void *)a2 = sub_1BDFAC960;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = v8;
  *(unsigned char *)(a2 + 24) = v9;
  *(void *)(a2 + 32) = v10;
  *(unsigned char *)(a2 + 40) = v11;
  double result = *(double *)&v17;
  *(_OWORD *)(a2 + 48) = v17;
  return result;
}

uint64_t sub_1BDFA642C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v62 = a2;
  uint64_t v3 = sub_1BE06F480();
  uint64_t v60 = *(void *)(v3 - 8);
  uint64_t v61 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v59 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v58 = (char *)&v49 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E16E8);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1778);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  char v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E17A8);
  MEMORY[0x1F4188790](v53);
  char v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1860);
  uint64_t v54 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v52 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E18D0);
  uint64_t v19 = v18 - 8;
  MEMORY[0x1F4188790](v18);
  uint64_t v51 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1748);
  MEMORY[0x1F4188790](v57);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v2;
  uint64_t v23 = *v2;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1848);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v10, v55, v25);
  uint64_t v26 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  *uint64_t v26 = KeyPath;
  v26[1] = v23;
  uint64_t v27 = v2[1];
  uint64_t v28 = swift_getKeyPath();
  sub_1BDF86808((uint64_t)v10, (uint64_t)v14, &qword_1EA0E16E8);
  long long v29 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  uint64_t *v29 = v28;
  v29[1] = v27;
  swift_retain();
  swift_retain();
  sub_1BDF8686C((uint64_t)v10, &qword_1EA0E16E8);
  uint64_t v30 = swift_getKeyPath();
  sub_1BDF86808((uint64_t)v14, (uint64_t)v16, &qword_1EA0E1778);
  uint64_t v31 = &v16[*(int *)(v53 + 36)];
  *(void *)uint64_t v31 = v30;
  *((void *)v31 + 1) = 1;
  v31[16] = 0;
  sub_1BDF8686C((uint64_t)v14, &qword_1EA0E1778);
  uint64_t v32 = type metadata accessor for MonthTextStyleModifier(0);
  unint64_t v33 = v50;
  sub_1BDFB55B0();
  uint64_t v34 = v52;
  sub_1BE06FDE0();
  sub_1BDF8686C((uint64_t)v16, &qword_1EA0E17A8);
  uint64_t v35 = (void *)((char *)v33 + *(int *)(v32 + 28));
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  uint64_t v38 = v54;
  uint64_t v39 = (uint64_t)v51;
  uint64_t v40 = v56;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v51, v34, v56);
  uint64_t v41 = (void *)(v39 + *(int *)(v19 + 60));
  void *v41 = v37;
  v41[1] = v36;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
  swift_bridgeObjectRetain();
  v42(v34, v40);
  uint64_t v43 = v58;
  sub_1BE06F470();
  uint64_t v44 = v60;
  uint64_t v45 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v59, v43, v61);
  sub_1BDFB4C20(&qword_1EA0E1220, MEMORY[0x1E4F3CA10]);
  uint64_t v46 = v45;
  uint64_t v47 = sub_1BE06F3B0();
  sub_1BDF86808(v39, (uint64_t)v22, &qword_1EA0E18D0);
  *(void *)&v22[*(int *)(v57 + 36)] = v47;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v46);
  sub_1BDF8686C(v39, &qword_1EA0E18D0);
  sub_1BDFB57B4();
  sub_1BE06FD40();
  return sub_1BDF8686C((uint64_t)v22, &qword_1EA0E1748);
}

uint64_t sub_1BDFA69CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v53 = a2;
  uint64_t v3 = sub_1BE06F480();
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v50 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v49 = (char *)&v44 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E30A0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E30A8);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  char v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E30B0);
  MEMORY[0x1F4188790](v45);
  char v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E30B8);
  uint64_t v46 = *(void *)(v17 - 8);
  uint64_t v47 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E30C0);
  uint64_t v21 = v20 - 8;
  MEMORY[0x1F4188790](v20);
  uint64_t v44 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *v2;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E30C8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v10, v48, v25);
  uint64_t v26 = (uint64_t *)&v10[*(int *)(v8 + 44)];
  *uint64_t v26 = KeyPath;
  v26[1] = v23;
  swift_retain();
  LODWORD(KeyPath) = sub_1BE06F990();
  sub_1BDF86808((uint64_t)v10, (uint64_t)v14, &qword_1EA0E30A0);
  *(_DWORD *)&v14[*(int *)(v12 + 44)] = KeyPath;
  sub_1BDF8686C((uint64_t)v10, &qword_1EA0E30A0);
  uint64_t v27 = swift_getKeyPath();
  sub_1BDF86808((uint64_t)v14, (uint64_t)v16, &qword_1EA0E30A8);
  uint64_t v28 = &v16[*(int *)(v45 + 36)];
  *(void *)uint64_t v28 = v27;
  *((void *)v28 + 1) = 1;
  v28[16] = 0;
  sub_1BDF8686C((uint64_t)v14, &qword_1EA0E30A8);
  uint64_t v29 = type metadata accessor for AltCalendarDateStyleModifier(0);
  sub_1BDFB5354();
  sub_1BE06FDE0();
  sub_1BDF8686C((uint64_t)v16, &qword_1EA0E30B0);
  uint64_t v30 = (uint64_t *)((char *)v2 + *(int *)(v29 + 24));
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  uint64_t v34 = v46;
  uint64_t v33 = v47;
  uint64_t v35 = (uint64_t)v44;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v44, v19, v47);
  uint64_t v36 = (void *)(v35 + *(int *)(v21 + 60));
  *uint64_t v36 = v32;
  v36[1] = v31;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v34 + 8);
  swift_bridgeObjectRetain();
  v37(v19, v33);
  uint64_t v38 = v49;
  sub_1BE06F470();
  uint64_t v39 = v51;
  uint64_t v40 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v50, v38, v52);
  sub_1BDFB4C20(&qword_1EA0E1220, MEMORY[0x1E4F3CA10]);
  uint64_t v41 = sub_1BE06F3B0();
  uint64_t v42 = v53;
  sub_1BDF86808(v35, v53, &qword_1EA0E30C0);
  *(void *)(v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E30F0) + 36)) = v41;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v38, v40);
  return sub_1BDF8686C(v35, &qword_1EA0E30C0);
}

__n128 CUIKMonthView.init(currentDate:styling:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, __n128 *a3@<X8>)
{
  __n128 v25 = a2[7];
  __n128 v26 = a2[8];
  __n128 v27 = a2[9];
  __n128 v28 = a2[10];
  __n128 v22 = a2[4];
  __n128 v23 = a2[5];
  __n128 v24 = a2[6];
  __n128 v18 = *a2;
  __n128 v19 = a2[1];
  __n128 v20 = a2[2];
  __n128 v21 = a2[3];
  strcpy((char *)&a3[11], "EEEE, MMMM dd");
  a3[11].n128_u16[7] = -4864;
  uint64_t v5 = (int *)type metadata accessor for CUIKMonthView(0);
  uint64_t v6 = (unint64_t *)((char *)a3->n128_u64 + v5[9]);
  sub_1BE070100();
  *uint64_t v6 = v16;
  v6[1] = v17;
  uint64_t v7 = (uint64_t *)((char *)a3 + v5[10]);
  *uint64_t v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (uint64_t *)((char *)a3 + v5[11]);
  *uint64_t v8 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = (uint64_t *)((char *)a3 + v5[12]);
  *uint64_t v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1688);
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = (uint64_t)a3 + v5[6];
  uint64_t v11 = sub_1BE06EEE0();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, a1, v11);
  uint64_t v13 = (uint64_t)a3 + v5[7];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v13, a1, v11);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v13, 0, 1, v11);
  a3[8] = v26;
  a3[9] = v27;
  a3[10] = v28;
  a3[4] = v22;
  a3[5] = v23;
  a3[6] = v24;
  a3[7] = v25;
  *a3 = v18;
  a3[1] = v19;
  __n128 result = v21;
  a3[2] = v20;
  a3[3] = v21;
  uint64_t v15 = (unint64_t *)((char *)a3->n128_u64 + v5[8]);
  void *v15 = 0;
  v15[1] = 0;
  return result;
}

uint64_t CUIKMonthView.init(displayedDate:todayDate:styling:tapAction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  long long v29 = a3[7];
  long long v30 = a3[8];
  long long v31 = a3[9];
  long long v32 = a3[10];
  long long v26 = a3[4];
  long long v27 = a3[5];
  long long v28 = a3[6];
  long long v22 = *a3;
  long long v23 = a3[1];
  long long v24 = a3[2];
  long long v25 = a3[3];
  strcpy((char *)(a6 + 176), "EEEE, MMMM dd");
  *(_WORD *)(a6 + 190) = -4864;
  uint64_t v11 = (int *)type metadata accessor for CUIKMonthView(0);
  uint64_t v12 = (void *)(a6 + v11[9]);
  sub_1BE070100();
  void *v12 = v20;
  v12[1] = v21;
  uint64_t v13 = (uint64_t *)(a6 + v11[10]);
  uint64_t *v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  swift_storeEnumTagMultiPayload();
  char v14 = (uint64_t *)(a6 + v11[11]);
  uint64_t *v14 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = (uint64_t *)(a6 + v11[12]);
  uint64_t *v15 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1688);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a6 + v11[6];
  uint64_t v17 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a1, v17);
  *(_OWORD *)(a6 + 128) = v30;
  *(_OWORD *)(a6 + 144) = v31;
  *(_OWORD *)(a6 + 160) = v32;
  *(_OWORD *)(a6 + 64) = v26;
  *(_OWORD *)(a6 + 80) = v27;
  *(_OWORD *)(a6 + 96) = v28;
  *(_OWORD *)(a6 + 112) = v29;
  *(_OWORD *)a6 = v22;
  *(_OWORD *)(a6 + 16) = v23;
  *(_OWORD *)(a6 + 32) = v24;
  *(_OWORD *)(a6 + 48) = v25;
  uint64_t result = sub_1BDFB8210(a2, a6 + v11[7], &qword_1EB677CC0);
  __n128 v19 = (void *)(a6 + v11[8]);
  *__n128 v19 = a4;
  v19[1] = a5;
  return result;
}

double CUIKMonthView.Styling.init(fullColor:gridFontSize:gridRowHeight:todayCircleSize:dateLabelFont:dateLabelPadding:allowKashida:showHeader:showOutOfMonthDays:dividerPadding:dividerHeight:altCalendarUnderlineWidth:altCalendarID:altCalendarFont:hideAltCalendarLabel:monthNameFormat:dimmingMode:)@<D0>(char a1@<W0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, char a17, uint64_t a18, uint64_t a19, char *a20)
{
  char v20 = *a20;
  *(unsigned char *)a9 = a1;
  *(double *)(a9 + 8) = a10;
  *(double *)(a9 + 16) = a11;
  *(double *)(a9 + 24) = a12;
  *(void *)(a9 + 32) = a2;
  *(double *)(a9 + 40) = a13;
  *(unsigned char *)(a9 + 48) = a3;
  *(unsigned char *)(a9 + 49) = a4;
  *(unsigned char *)(a9 + 50) = a5;
  *(double *)(a9 + 56) = a14;
  *(double *)(a9 + 64) = a15;
  *(double *)(a9 + 72) = a16;
  *(void *)(a9 + 80) = a6;
  *(void *)(a9 + 88) = a7;
  *(void *)(a9 + 96) = a8;
  *(unsigned char *)(a9 + 104) = a17;
  *(void *)(a9 + 112) = a18;
  *(void *)(a9 + 120) = a19;
  *(unsigned char *)(a9 + 128) = v20;
  *(void *)(a9 + 168) = 0;
  double result = 0.0;
  *(_OWORD *)(a9 + 152) = 0u;
  *(_OWORD *)(a9 + 136) = 0u;
  return result;
}

uint64_t CUIKMonthView.Styling.init(fullColor:gridFontSize:gridRowHeight:todayCircleSize:dateLabelFont:dateLabelPadding:allowKashida:showHeader:showOutOfMonthDays:dividerPadding:dividerHeight:altCalendarUnderlineWidth:altCalendarID:altCalendarFont:hideAltCalendarLabel:monthNameFormat:dimmingMode:numberColor:weekendNumberColor:dimmedNumberColor:dayHeaderColor:dayHeaderWeekendColor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, char a17, uint64_t a18, uint64_t a19, char *a20,long long a21,long long a22,uint64_t a23)
{
  char v23 = *a20;
  *(unsigned char *)a9 = result;
  *(double *)(a9 + 8) = a10;
  *(double *)(a9 + 16) = a11;
  *(double *)(a9 + 24) = a12;
  *(void *)(a9 + 32) = a2;
  *(double *)(a9 + 40) = a13;
  *(unsigned char *)(a9 + 48) = a3;
  *(unsigned char *)(a9 + 49) = a4;
  *(unsigned char *)(a9 + 50) = a5;
  *(double *)(a9 + 56) = a14;
  *(double *)(a9 + 64) = a15;
  *(double *)(a9 + 72) = a16;
  *(void *)(a9 + 80) = a6;
  *(void *)(a9 + 88) = a7;
  *(void *)(a9 + 96) = a8;
  *(unsigned char *)(a9 + 104) = a17;
  *(void *)(a9 + 112) = a18;
  *(void *)(a9 + 120) = a19;
  *(unsigned char *)(a9 + 128) = v23;
  *(_OWORD *)(a9 + 136) = a21;
  *(_OWORD *)(a9 + 152) = a22;
  *(void *)(a9 + 168) = a23;
  return result;
}

uint64_t sub_1BDFA7408(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  MEMORY[0x1F4188790](v3 - 8);
  long long v32 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1BE06F140();
  uint64_t v5 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1BE06F100();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  char v14 = (char *)&v31 - v13;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  uint64_t v33 = type metadata accessor for CUIKMonthView(0);
  uint64_t v36 = v2;
  sub_1BDFCD994((uint64_t)v14);
  uint64_t v16 = (void *)sub_1BE06F020();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v14, v8);
  objc_msgSend(v15, sel_setCalendar_, v16);

  sub_1BDFCD994((uint64_t)v14);
  sub_1BE06F0C0();
  v17(v14, v8);
  __n128 v18 = (void *)sub_1BE06F120();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v31);
  objc_msgSend(v15, sel_setTimeZone_, v18);

  __n128 v19 = v32;
  sub_1BDFCD994((uint64_t)v12);
  sub_1BE06F090();
  v17(v12, v8);
  uint64_t v20 = sub_1BE06EFC0();
  uint64_t v21 = *(void *)(v20 - 8);
  long long v22 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) != 1)
  {
    long long v22 = (void *)sub_1BE06EF40();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
  }
  objc_msgSend(v15, sel_setLocale_, v22, v31);

  char v23 = (void *)sub_1BE0704C0();
  objc_msgSend(v15, sel_setLocalizedDateFormatFromTemplate_, v23);

  long long v24 = (void *)sub_1BE06EEA0();
  id v25 = objc_msgSend(v15, sel_stringFromDate_, v24);

  uint64_t v26 = sub_1BE070500();
  uint64_t v28 = v27;

  uint64_t v37 = v26;
  uint64_t v38 = v28;
  sub_1BDF859F0();
  uint64_t v29 = sub_1BE070A30();
  swift_bridgeObjectRelease();

  return v29;
}

void sub_1BDFA780C()
{
  uint64_t v34 = sub_1BE06F140();
  uint64_t v1 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1BE06F100();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1110);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v35 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v31 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v38 = (uint64_t)&v31 - v14;
  id v15 = self;
  uint64_t v16 = (void *)sub_1BE0704C0();
  uint64_t v33 = type metadata accessor for CUIKMonthView(0);
  uint64_t v36 = v0;
  sub_1BDFCD994((uint64_t)v7);
  sub_1BE06F0C0();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  uint64_t v37 = v4;
  long long v32 = v17;
  v17((uint64_t)v7, v4);
  __n128 v18 = (void *)sub_1BE06F120();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v34);
  id v19 = objc_msgSend(v15, sel_overlayCalendarForCalendarIdentifier_timezone_, v16, v18);

  if (v19)
  {
    sub_1BE06F040();

    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = 1;
  }
  uint64_t v21 = v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, v20, 1, v37);
  uint64_t v22 = (uint64_t)v13;
  uint64_t v23 = v38;
  sub_1BDFB8210(v22, v38, &qword_1EA0E1110);
  long long v24 = (void *)sub_1BE06EEA0();
  uint64_t v25 = v35;
  sub_1BDF86808(v23, v35, &qword_1EA0E1110);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v25, 1, v21) == 1)
  {
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = (void *)sub_1BE06F020();
    v32(v25, v21);
  }
  id v27 = objc_msgSend(self, sel_monthDayStringForDate_inCalendar_, v24, v26);

  if (v27)
  {
    uint64_t v28 = sub_1BE070500();
    uint64_t v30 = v29;

    uint64_t v39 = v28;
    uint64_t v40 = v30;
    sub_1BDF859F0();
    sub_1BE070A30();
    swift_bridgeObjectRelease();
    sub_1BDF8686C(v23, &qword_1EA0E1110);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BDFA7C08()
{
  uint64_t v1 = sub_1BE06F0E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v27 = sub_1BE06F100();
  uint64_t v8 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CUIKMonthView(0);
  sub_1BDFCD994((uint64_t)v10);
  uint64_t v12 = *(void (**)(char *, void, uint64_t))(v2 + 104);
  v12(v7, *MEMORY[0x1E4F27BD8], v1);
  v12(v5, *MEMORY[0x1E4F27C30], v1);
  uint64_t v25 = v11;
  uint64_t v26 = v0;
  uint64_t v13 = sub_1BE06F070();
  uint64_t v15 = v14;
  char v17 = v16;
  __n128 v18 = *(void (**)(char *, uint64_t))(v2 + 8);
  v18(v5, v1);
  v18(v7, v1);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v27);
  if (v17) {
    uint64_t v20 = 0;
  }
  else {
    uint64_t v20 = v15;
  }
  if (v17) {
    uint64_t v21 = 0;
  }
  else {
    uint64_t v21 = v13;
  }
  if (__OFSUB__(v20, v21))
  {
    __break(1u);
  }
  else if (*(unsigned char *)(v26 + 49) == 1)
  {
    uint64_t v22 = (uint64_t *)(v26 + *(int *)(v25 + 36));
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v28 = v23;
    uint64_t v29 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1478);
    return sub_1BE070110();
  }
  return result;
}

uint64_t sub_1BDFA7ED4()
{
  uint64_t v0 = sub_1BE06EF30();
  uint64_t v35 = *(void *)(v0 - 8);
  uint64_t v36 = v0;
  MEMORY[0x1F4188790](v0);
  uint64_t v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E10F8);
  MEMORY[0x1F4188790](v33);
  uint64_t v34 = (uint64_t)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E10F0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v32 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = sub_1BE06EFA0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  char v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1BE06EFC0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v37[48] == 1)
  {
    uint64_t v37 = v7;
    long long v32 = v2;
    sub_1BE06EF70();
    sub_1BE06EFB0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    sub_1BE06EF80();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    sub_1BE06EF20();
    uint64_t v22 = v35;
    uint64_t v21 = v36;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v10, 0, 1, v36);
    uint64_t v23 = v34;
    uint64_t v24 = v34 + *(int *)(v33 + 48);
    uint64_t v25 = &qword_1EA0E10F0;
    sub_1BDF86808((uint64_t)v12, v34, &qword_1EA0E10F0);
    sub_1BDF86808((uint64_t)v10, v24, &qword_1EA0E10F0);
    uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
    if (v26(v23, 1, v21) == 1)
    {
      sub_1BDF8686C((uint64_t)v10, &qword_1EA0E10F0);
      sub_1BDF8686C((uint64_t)v12, &qword_1EA0E10F0);
      if (v26(v24, 1, v21) == 1)
      {
        char v27 = -1;
      }
      else
      {
        uint64_t v25 = &qword_1EA0E10F8;
        char v27 = 0;
      }
    }
    else
    {
      uint64_t v28 = (uint64_t)v37;
      sub_1BDF86808(v23, (uint64_t)v37, &qword_1EA0E10F0);
      if (v26(v24, 1, v21) == 1)
      {
        sub_1BDF8686C((uint64_t)v10, &qword_1EA0E10F0);
        sub_1BDF8686C((uint64_t)v12, &qword_1EA0E10F0);
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v28, v21);
        char v27 = 0;
        uint64_t v25 = &qword_1EA0E10F8;
      }
      else
      {
        uint64_t v29 = v32;
        (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v32, v24, v21);
        sub_1BDFB4C20(&qword_1EA0E10E8, MEMORY[0x1E4F279D8]);
        char v27 = sub_1BE070440();
        uint64_t v30 = *(void (**)(char *, uint64_t))(v22 + 8);
        v30(v29, v21);
        sub_1BDF8686C((uint64_t)v10, &qword_1EA0E10F0);
        sub_1BDF8686C((uint64_t)v12, &qword_1EA0E10F0);
        v30((char *)v28, v21);
      }
    }
    sub_1BDF8686C(v23, v25);
  }
  else
  {
    char v27 = 0;
  }
  return v27 & 1;
}

double sub_1BDFA83F0()
{
  uint64_t v0 = sub_1BE06FBC0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CUIKMonthView(0);
  sub_1BDFCDCF4((uint64_t)v3);
  uint64_t v4 = (const __CTFont *)sub_1BE06FB10();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  CTFontDescriptorRef v5 = CTFontCopyFontDescriptor(v4);
  double Size = CTFontGetSize(v4);
  id v7 = objc_msgSend(self, sel_fontWithDescriptor_size_, v5, Size);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1950);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BE07ABD0;
  uint64_t v9 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  *(void *)(inited + 64) = sub_1BDFB7B1C(0, &qword_1EA0E1938);
  *(void *)(inited + 40) = v7;
  swift_bridgeObjectRetain();
  id v10 = v9;
  id v11 = v7;
  sub_1BDFA86D4(inited);
  id v12 = objc_allocWithZone(MEMORY[0x1E4F28B18]);
  uint64_t v13 = (void *)sub_1BE0704C0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BDFB4C20(&qword_1EA0E1918, type metadata accessor for Key);
  uint64_t v14 = (void *)sub_1BE0703F0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v12, sel_initWithString_attributes_, v13, v14);

  CFAttributedStringRef v16 = (const __CFAttributedString *)v15;
  uint64_t v17 = CTFramesetterCreateWithAttributedString(v16);
  id v18 = [(__CFAttributedString *)v16 length];

  v23.width = 1.79769313e308;
  v22.CFIndex location = 0;
  v22.length = (CFIndex)v18;
  v23.height = 1.79769313e308;
  *(void *)&double v19 = *(_OWORD *)&CTFramesetterSuggestFrameSizeWithConstraints(v17, v22, 0, v23, 0);

  return v19;
}

unint64_t sub_1BDFA86D4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1940);
  uint64_t v2 = sub_1BE070CF0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BDF86808(v6, (uint64_t)&v13, &qword_1EA0E1930);
    uint64_t v7 = v13;
    unint64_t result = sub_1BDFC7AF4(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1BDFB64B4(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BDFA8804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = sub_1BE06F740();
  *(void *)(a5 + 8) = 0;
  *(unsigned char *)(a5 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return a4(a2, a1);
}

uint64_t sub_1BDFA8870@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v119 = a3;
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E18A0);
  MEMORY[0x1F4188790](v106);
  uint64_t v91 = (uint64_t *)((char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E17D0);
  MEMORY[0x1F4188790](v102);
  uint64_t v104 = (uint64_t)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E18B0);
  MEMORY[0x1F4188790](v103);
  uint64_t v89 = (uint64_t *)((char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1820);
  MEMORY[0x1F4188790](v118);
  uint64_t v105 = (char *)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_1BE06F480();
  uint64_t v100 = *(void *)(v101 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v101);
  long long v98 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v99 = (char *)&v89 - v10;
  uint64_t v95 = sub_1BE070250();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v93 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1768);
  MEMORY[0x1F4188790](v92);
  uint64_t v97 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1798);
  MEMORY[0x1F4188790](v96);
  uint64_t v107 = (uint64_t)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E17E0);
  MEMORY[0x1F4188790](v114);
  uint64_t v115 = (uint64_t)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1838);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v117 = (uint64_t)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v116 = (char *)&v89 - v18;
  uint64_t v19 = type metadata accessor for MonthTextStyleModifier(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (uint64_t *)((char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v113 = sub_1BE06F720();
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  CGSize v23 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_1BE06F100();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E16F8);
  MEMORY[0x1F4188790](v121);
  uint64_t v120 = (uint64_t)&v89 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v128 = sub_1BDFA7408(*(void *)(a1 + 112), *(void *)(a1 + 120));
  *((void *)&v128 + 1) = v32;
  sub_1BDF859F0();
  uint64_t v33 = sub_1BE06FD30();
  BOOL v34 = *(unsigned char *)a1 == 1;
  uint64_t v111 = v35;
  uint64_t v110 = v33;
  int v109 = v36;
  uint64_t v38 = v37;
  if (v34)
  {
    type metadata accessor for CUIKMonthView(0);
    sub_1BDFCD994((uint64_t)v30);
    sub_1BE06F090();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    uint64_t v39 = sub_1BE035548((uint64_t)v26);
    sub_1BDF8686C((uint64_t)v26, &qword_1EB678018);
  }
  else
  {
    uint64_t v39 = sub_1BE070010();
  }
  uint64_t v40 = *(void *)(a1 + 32);
  if (sub_1BDFA7ED4()) {
    sub_1BE06F710();
  }
  else {
    sub_1BE06F700();
  }
  uint64_t v108 = v23;
  uint64_t v41 = sub_1BDFA7408(*(void *)(a1 + 112), *(void *)(a1 + 120));
  uint64_t v43 = v42;
  uint64_t v44 = (char *)v21 + *(int *)(v19 + 24);
  uint64_t v45 = v112;
  uint64_t v46 = v23;
  uint64_t v47 = v21;
  uint64_t v48 = v113;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v44, v46, v113);
  uint64_t *v47 = v39;
  v47[1] = v40;
  uint64_t v49 = (uint64_t *)((char *)v47 + *(int *)(v19 + 28));
  uint64_t *v49 = v41;
  v49[1] = v43;
  uint64_t v50 = v120;
  sub_1BDFAC88C((uint64_t)v47, v120 + *(int *)(v121 + 36), type metadata accessor for MonthTextStyleModifier);
  uint64_t v51 = v110;
  *(void *)uint64_t v50 = v110;
  *(void *)(v50 + 8) = v38;
  LOBYTE(v41) = v109 & 1;
  *(unsigned char *)(v50 + 16) = v109 & 1;
  *(void *)(v50 + 24) = v111;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BDF8555C(v51, v38, v41);
  sub_1BDFB6454((uint64_t)v47, type metadata accessor for MonthTextStyleModifier);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v108, v48);
  sub_1BDF8587C(v51, v38, v41);
  swift_bridgeObjectRelease();
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v52 = v122;
  unsigned __int8 v53 = v123;
  uint64_t v113 = v124;
  LODWORD(v112) = v125;
  uint64_t v54 = v126;
  uint64_t v111 = v127;
  if (*(void *)(a1 + 88) && *(unsigned char *)(a1 + 104) != 1)
  {
    int v109 = v123;
    uint64_t v110 = v122;
    sub_1BDFA780C();
    uint64_t v108 = (char *)v57;
    uint64_t v59 = v58;
    uint64_t v60 = v93;
    sub_1BE070240();
    sub_1BE070320();
    sub_1BE06F390();
    uint64_t v61 = v94;
    uint64_t v62 = (uint64_t)v97;
    uint64_t v63 = v95;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v97, v60, v95);
    uint64_t v64 = (_OWORD *)(v62 + *(int *)(v92 + 36));
    long long v65 = v129;
    _OWORD *v64 = v128;
    v64[1] = v65;
    v64[2] = v130;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v63);
    uint64_t v66 = v99;
    sub_1BE06F470();
    uint64_t v67 = v100;
    uint64_t v68 = v101;
    (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v98, v66, v101);
    sub_1BDFB4C20(&qword_1EA0E1220, MEMORY[0x1E4F3CA10]);
    uint64_t v69 = sub_1BE06F3B0();
    uint64_t v70 = v107;
    sub_1BDF86808(v62, v107, &qword_1EA0E1768);
    *(void *)(v70 + *(int *)(v96 + 36)) = v69;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v68);
    sub_1BDF8686C(v62, &qword_1EA0E1768);
    LOBYTE(v68) = sub_1BDFA7ED4();
    uint64_t v71 = *(void *)(a1 + 56);
    uint64_t v72 = sub_1BE06F740();
    if (v68)
    {
      uint64_t v73 = (uint64_t)v89;
      *uint64_t v89 = v72;
      *(void *)(v73 + 8) = v71;
      *(unsigned char *)(v73 + 16) = 0;
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3100);
      sub_1BDFA9688(a1, v90, v70, (uint64_t)v108, v59, v73 + *(int *)(v74 + 44));
      swift_bridgeObjectRelease();
      sub_1BDF86808(v73, v104, &qword_1EA0E18B0);
      swift_storeEnumTagMultiPayload();
      sub_1BDF86964(&qword_1EA0E18A8, &qword_1EA0E18B0);
      sub_1BDF86964(&qword_1EA0E1898, &qword_1EA0E18A0);
      uint64_t v75 = (uint64_t)v105;
      sub_1BE06F8E0();
      uint64_t v76 = v73;
      uint64_t v77 = &qword_1EA0E18B0;
    }
    else
    {
      uint64_t v78 = (uint64_t)v91;
      *uint64_t v91 = v72;
      *(void *)(v78 + 8) = v71;
      *(unsigned char *)(v78 + 16) = 0;
      uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E30F8);
      sub_1BDFAA2E0(v120, v107, (uint64_t)v108, v59, a1, v78 + *(int *)(v79 + 44));
      swift_bridgeObjectRelease();
      sub_1BDF86808(v78, v104, &qword_1EA0E18A0);
      swift_storeEnumTagMultiPayload();
      sub_1BDF86964(&qword_1EA0E18A8, &qword_1EA0E18B0);
      sub_1BDF86964(&qword_1EA0E1898, &qword_1EA0E18A0);
      uint64_t v75 = (uint64_t)v105;
      sub_1BE06F8E0();
      uint64_t v76 = v78;
      uint64_t v70 = v107;
      uint64_t v77 = &qword_1EA0E18A0;
    }
    sub_1BDF8686C(v76, v77);
    sub_1BDF86808(v75, v115, &qword_1EA0E1820);
    swift_storeEnumTagMultiPayload();
    sub_1BDFB64C4();
    sub_1BDFB6584();
    uint64_t v55 = v116;
    sub_1BE06F8E0();
    sub_1BDF8686C(v75, &qword_1EA0E1820);
    sub_1BDF8686C(v70, &qword_1EA0E1798);
    uint64_t v56 = v120;
    uint64_t v52 = v110;
    unsigned __int8 v53 = v109;
  }
  else
  {
    sub_1BDF86808(v50, v115, &qword_1EA0E16F8);
    swift_storeEnumTagMultiPayload();
    sub_1BDFB64C4();
    sub_1BDFB6584();
    uint64_t v55 = v116;
    sub_1BE06F8E0();
    uint64_t v56 = v50;
  }
  uint64_t v80 = *(void *)(a1 + 40);
  uint64_t v81 = (uint64_t)v55;
  uint64_t v82 = (uint64_t)v55;
  uint64_t v83 = v117;
  sub_1BDF86808(v81, v117, &qword_1EA0E1838);
  uint64_t v84 = v119;
  *uint64_t v119 = 0;
  *((unsigned char *)v84 + 8) = 1;
  v84[2] = v52;
  *((unsigned char *)v84 + 24) = v53;
  v84[4] = v113;
  *((unsigned char *)v84 + 40) = v112;
  uint64_t v85 = v111;
  v84[6] = v54;
  v84[7] = v85;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1760);
  sub_1BDF86808(v83, (uint64_t)v84 + *(int *)(v86 + 48), &qword_1EA0E1838);
  uint64_t v87 = (char *)v84 + *(int *)(v86 + 64);
  *(void *)uint64_t v87 = v80;
  v87[8] = 0;
  sub_1BDF8686C(v82, &qword_1EA0E1838);
  sub_1BDF8686C(v56, &qword_1EA0E16F8);
  return sub_1BDF8686C(v83, &qword_1EA0E1838);
}

uint64_t sub_1BDFA9688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v124 = a5;
  uint64_t v115 = a4;
  uint64_t v109 = a3;
  uint64_t v120 = a6;
  uint64_t v114 = type metadata accessor for AltCalendarDateStyleModifier(0);
  MEMORY[0x1F4188790](v114);
  uint64_t v111 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3108);
  uint64_t v9 = MEMORY[0x1F4188790](v113);
  uint64_t v119 = (uint64_t)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v116 = (char *)&v92 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v117 = (uint64_t)&v92 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1798);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v118 = (uint64_t)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v125 = (uint64_t)&v92 - v17;
  uint64_t v108 = type metadata accessor for MonthTextStyleModifier(0);
  MEMORY[0x1F4188790](v108);
  uint64_t v19 = (uint64_t *)((char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v123 = sub_1BE06F720();
  uint64_t v20 = *(char **)(v123 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v123);
  uint64_t v122 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v126 = (char *)&v92 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v95 = (char *)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = (void (*)(char *, char *, uint64_t))sub_1BE06F100();
  uint64_t v93 = *((void *)v94 - 1);
  MEMORY[0x1F4188790](v94);
  uint64_t v27 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3110);
  uint64_t v28 = MEMORY[0x1F4188790](v106);
  uint64_t v112 = (uint64_t)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v92 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v121 = (uint64_t)&v92 - v33;
  uint64_t v35 = *(void *)(a1 + 112);
  uint64_t v34 = *(void *)(a1 + 120);
  uint64_t v133 = sub_1BDFA7408(v35, v34);
  uint64_t v134 = v36;
  unint64_t v107 = sub_1BDF859F0();
  uint64_t v104 = sub_1BE06FD30();
  uint64_t v103 = v37;
  int v102 = v38;
  uint64_t v105 = v39;
  uint64_t v110 = a2;
  sub_1BE06F3E0();
  sub_1BDFA7408(v35, v34);
  sub_1BDFA83F0();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88) && (*(unsigned char *)(a1 + 104) & 1) == 0)
  {
    sub_1BDFA780C();
    sub_1BDFA83F0();
    swift_bridgeObjectRelease();
  }
  sub_1BDFA7408(v35, v34);
  sub_1BDFA83F0();
  swift_bridgeObjectRelease();
  sub_1BE070330();
  sub_1BE06F390();
  BOOL v40 = *(unsigned char *)a1 == 1;
  uint64_t v101 = v127;
  int v100 = v128;
  uint64_t v99 = v129;
  int v98 = v130;
  uint64_t v97 = v131;
  uint64_t v96 = v132;
  if (v40)
  {
    type metadata accessor for CUIKMonthView(0);
    sub_1BDFCD994((uint64_t)v27);
    uint64_t v41 = (uint64_t)v95;
    sub_1BE06F090();
    (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v93 + 8))(v27, v94);
    uint64_t v42 = sub_1BE035548(v41);
    sub_1BDF8686C(v41, &qword_1EB678018);
  }
  else
  {
    uint64_t v42 = sub_1BE070010();
  }
  uint64_t v43 = v126;
  uint64_t v44 = *(void *)(a1 + 32);
  if (sub_1BDFA7ED4()) {
    sub_1BE06F710();
  }
  else {
    sub_1BE06F700();
  }
  uint64_t v45 = sub_1BDFA7408(*(void *)(a1 + 112), *(void *)(a1 + 120));
  uint64_t v47 = v46;
  uint64_t v48 = v108;
  uint64_t v49 = (char *)v19 + *(int *)(v108 + 24);
  uint64_t v50 = v20 + 16;
  uint64_t v51 = (void (*)(char *, char *, uint64_t))*((void *)v20 + 2);
  uint64_t v126 = v20;
  uint64_t v52 = v123;
  uint64_t v95 = v50;
  uint64_t v94 = v51;
  v51(v49, v43, v123);
  *uint64_t v19 = v42;
  v19[1] = v44;
  unsigned __int8 v53 = (uint64_t *)((char *)v19 + *(int *)(v48 + 28));
  uint64_t *v53 = v45;
  v53[1] = v47;
  sub_1BDFAC88C((uint64_t)v19, (uint64_t)&v32[*(int *)(v106 + 36)], type metadata accessor for MonthTextStyleModifier);
  uint64_t v54 = v104;
  uint64_t v55 = v103;
  *(void *)uint64_t v32 = v104;
  *((void *)v32 + 1) = v55;
  LOBYTE(v45) = v102 & 1;
  v32[16] = v102 & 1;
  uint64_t v56 = v101;
  *((void *)v32 + 3) = v105;
  *((void *)v32 + 4) = v56;
  v32[40] = v100;
  *((void *)v32 + 6) = v99;
  v32[56] = v98;
  uint64_t v57 = v96;
  *((void *)v32 + 8) = v97;
  *((void *)v32 + 9) = v57;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BDF8555C(v54, v55, v45);
  sub_1BDFB6454((uint64_t)v19, type metadata accessor for MonthTextStyleModifier);
  uint64_t v58 = (void (*)(char *, uint64_t))*((void *)v126 + 1);
  v126 += 8;
  uint64_t v108 = (uint64_t)v58;
  v58(v43, v52);
  sub_1BDF8587C(v54, v55, v45);
  swift_bridgeObjectRelease();
  sub_1BDFB8210((uint64_t)v32, v121, &qword_1EA0E3110);
  sub_1BDF86808(v109, v125, &qword_1EA0E1798);
  uint64_t v59 = v115;
  uint64_t v133 = v115;
  uint64_t v134 = v124;
  swift_bridgeObjectRetain();
  uint64_t v60 = sub_1BE06FD30();
  uint64_t v109 = v61;
  char v63 = v62;
  uint64_t v65 = v64;
  sub_1BE06F3E0();
  sub_1BDFA7408(*(void *)(a1 + 112), *(void *)(a1 + 120));
  sub_1BDFA83F0();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 88))
  {
    uint64_t v66 = v122;
    if ((*(unsigned char *)(a1 + 104) & 1) == 0)
    {
      sub_1BDFA780C();
      sub_1BDFA83F0();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v66 = v122;
  }
  uint64_t v67 = *(void *)(a1 + 96);
  sub_1BDFA83F0();
  sub_1BE070340();
  sub_1BE06F390();
  uint64_t v68 = v133;
  int v69 = v134;
  unint64_t v107 = v135;
  LODWORD(v106) = v136;
  uint64_t v105 = v137;
  uint64_t v104 = v138;
  char v70 = sub_1BDFA7ED4();
  LODWORD(v110) = v69;
  uint64_t v71 = v68;
  uint64_t v72 = v60;
  uint64_t v73 = v65;
  if (v70) {
    sub_1BE06F710();
  }
  else {
    sub_1BE06F700();
  }
  char v74 = v63 & 1;
  uint64_t v75 = v114;
  uint64_t v76 = v111;
  uint64_t v77 = v66;
  uint64_t v78 = v123;
  v94(&v111[*(int *)(v114 + 20)], v77, v123);
  void *v76 = v67;
  uint64_t v79 = (void *)((char *)v76 + *(int *)(v75 + 24));
  uint64_t *v79 = v59;
  v79[1] = v124;
  uint64_t v80 = (uint64_t)v116;
  sub_1BDFAC88C((uint64_t)v76, (uint64_t)&v116[*(int *)(v113 + 36)], type metadata accessor for AltCalendarDateStyleModifier);
  uint64_t v81 = v109;
  *(void *)uint64_t v80 = v72;
  *(void *)(v80 + 8) = v81;
  *(unsigned char *)(v80 + 16) = v74;
  *(void *)(v80 + 24) = v73;
  *(void *)(v80 + 32) = v71;
  *(unsigned char *)(v80 + 40) = v110;
  *(void *)(v80 + 48) = v107;
  *(unsigned char *)(v80 + 56) = v106;
  uint64_t v82 = v104;
  *(void *)(v80 + 64) = v105;
  *(void *)(v80 + 72) = v82;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BDF8555C(v72, v81, v74);
  swift_bridgeObjectRetain();
  sub_1BDFB6454((uint64_t)v76, type metadata accessor for AltCalendarDateStyleModifier);
  ((void (*)(char *, uint64_t))v108)(v122, v78);
  sub_1BDF8587C(v72, v81, v74);
  swift_bridgeObjectRelease();
  uint64_t v83 = v117;
  sub_1BDFB8210(v80, v117, &qword_1EA0E3108);
  uint64_t v84 = v121;
  uint64_t v85 = v112;
  sub_1BDF86808(v121, v112, &qword_1EA0E3110);
  uint64_t v86 = v125;
  uint64_t v87 = v118;
  sub_1BDF86808(v125, v118, &qword_1EA0E1798);
  uint64_t v88 = v119;
  sub_1BDF86808(v83, v119, &qword_1EA0E3108);
  uint64_t v89 = v120;
  sub_1BDF86808(v85, v120, &qword_1EA0E3110);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3118);
  sub_1BDF86808(v87, v89 + *(int *)(v90 + 48), &qword_1EA0E1798);
  sub_1BDF86808(v88, v89 + *(int *)(v90 + 64), &qword_1EA0E3108);
  sub_1BDF8686C(v83, &qword_1EA0E3108);
  sub_1BDF8686C(v86, &qword_1EA0E1798);
  sub_1BDF8686C(v84, &qword_1EA0E3110);
  sub_1BDF8686C(v88, &qword_1EA0E3108);
  sub_1BDF8686C(v87, &qword_1EA0E1798);
  return sub_1BDF8686C(v85, &qword_1EA0E3110);
}

uint64_t sub_1BDFAA2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v61 = (char *)a1;
  uint64_t v62 = a2;
  uint64_t v66 = a6;
  uint64_t v57 = type metadata accessor for AltCalendarDateStyleModifier(0);
  MEMORY[0x1F4188790](v57);
  uint64_t v10 = (char **)((char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v58 = sub_1BE06F720();
  uint64_t v11 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3120);
  uint64_t v14 = MEMORY[0x1F4188790](v55);
  uint64_t v65 = (uint64_t)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v53 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v64 = (uint64_t)&v53 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1798);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v63 = (uint64_t)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v53 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E16F8);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  uint64_t v60 = (uint64_t)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v56 = (uint64_t)&v53 - v28;
  sub_1BDF86808((uint64_t)v61, (uint64_t)&v53 - v28, &qword_1EA0E16F8);
  uint64_t v61 = v24;
  sub_1BDF86808(v62, (uint64_t)v24, &qword_1EA0E1798);
  uint64_t v59 = a3;
  uint64_t v67 = a3;
  uint64_t v68 = a4;
  sub_1BDF859F0();
  uint64_t v62 = a4;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1BE06FD30();
  uint64_t v31 = v30;
  char v33 = v32;
  uint64_t v54 = v34;
  uint64_t v35 = *(void *)(a5 + 96);
  if (sub_1BDFA7ED4()) {
    sub_1BE06F710();
  }
  else {
    sub_1BE06F700();
  }
  char v36 = v33 & 1;
  uint64_t v37 = v57;
  int v38 = (char *)v10 + *(int *)(v57 + 20);
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  unsigned __int8 v53 = v13;
  BOOL v40 = v13;
  uint64_t v41 = v58;
  v39(v38, v40, v58);
  *uint64_t v10 = v35;
  uint64_t v42 = (void *)((char *)v10 + *(int *)(v37 + 24));
  uint64_t v43 = v62;
  void *v42 = v59;
  v42[1] = v43;
  sub_1BDFAC88C((uint64_t)v10, (uint64_t)&v18[*(int *)(v55 + 36)], type metadata accessor for AltCalendarDateStyleModifier);
  *(void *)uint64_t v18 = v29;
  *((void *)v18 + 1) = v31;
  v18[16] = v36;
  *((void *)v18 + 3) = v54;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BDF8555C(v29, v31, v36);
  swift_bridgeObjectRetain();
  sub_1BDFB6454((uint64_t)v10, type metadata accessor for AltCalendarDateStyleModifier);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v53, v41);
  sub_1BDF8587C(v29, v31, v36);
  swift_bridgeObjectRelease();
  uint64_t v44 = v64;
  sub_1BDFB8210((uint64_t)v18, v64, &qword_1EA0E3120);
  uint64_t v45 = v56;
  uint64_t v46 = v60;
  sub_1BDF86808(v56, v60, &qword_1EA0E16F8);
  uint64_t v47 = (uint64_t)v61;
  uint64_t v48 = v63;
  sub_1BDF86808((uint64_t)v61, v63, &qword_1EA0E1798);
  uint64_t v49 = v65;
  sub_1BDF86808(v44, v65, &qword_1EA0E3120);
  uint64_t v50 = v66;
  sub_1BDF86808(v46, v66, &qword_1EA0E16F8);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3128);
  sub_1BDF86808(v48, v50 + *(int *)(v51 + 48), &qword_1EA0E1798);
  sub_1BDF86808(v49, v50 + *(int *)(v51 + 64), &qword_1EA0E3120);
  sub_1BDF8686C(v44, &qword_1EA0E3120);
  sub_1BDF8686C(v47, &qword_1EA0E1798);
  sub_1BDF8686C(v45, &qword_1EA0E16F8);
  sub_1BDF8686C(v49, &qword_1EA0E3120);
  sub_1BDF8686C(v48, &qword_1EA0E1798);
  return sub_1BDF8686C(v46, &qword_1EA0E16F8);
}

uint64_t sub_1BDFAA810@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E18D8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = *(double *)(a1 + 16);
  uint64_t v8 = 0;
  if (v7 >= 1.0)
  {
    sub_1BE06F3E0();
    sub_1BDFA7C08();
    uint64_t v8 = v9;
  }
  *(void *)uint64_t v6 = sub_1BE06F7D0();
  *((void *)v6 + 1) = v8;
  v6[16] = v7 < 1.0;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E16B0);
  sub_1BDFAA90C(a1, (uint64_t)&v6[*(int *)(v10 + 44)]);
  return sub_1BDFB8210((uint64_t)v6, a2, &qword_1EA0E18D8);
}

uint64_t sub_1BDFAA90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v114 = a2;
  uint64_t v108 = sub_1BE06F0E0();
  uint64_t v107 = *(void *)(v108 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v108);
  uint64_t v106 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v105 = (char *)&v84 - v5;
  uint64_t v104 = sub_1BE06F100();
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  uint64_t v102 = (uint64_t)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1498);
  uint64_t v112 = *(void *)(v113 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v113);
  uint64_t v111 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v109 = (char *)&v84 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v110 = (char *)&v84 - v11;
  uint64_t v12 = sub_1BE06EEE0();
  uint64_t v97 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v96 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for CUIKWeekLabelRow(0);
  uint64_t v14 = MEMORY[0x1F4188790](v95);
  uint64_t v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v84 - v17;
  uint64_t v19 = type metadata accessor for CUIKMonthView(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E18E8);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  uint64_t v26 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v115 = (uint64_t)&v84 - v27;
  BOOL v28 = *(unsigned char *)(a1 + 49) == 1;
  uint64_t v101 = v26;
  int v100 = v22;
  uint64_t v99 = v20;
  uint64_t v98 = v21;
  if (v28)
  {
    uint64_t v85 = type metadata accessor for CUIKMonthView;
    sub_1BDFAC88C(a1, (uint64_t)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CUIKMonthView);
    unint64_t v29 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v86 = v19;
    uint64_t v94 = swift_allocObject();
    uint64_t v93 = v18;
    uint64_t v30 = (uint64_t)v26;
    sub_1BDFAC8F8((uint64_t)v22, v94 + v29, type metadata accessor for CUIKMonthView);
    sub_1BDFA7408(*(void *)(a1 + 112), *(void *)(a1 + 120));
    uint64_t v84 = v12;
    sub_1BDFA83F0();
    swift_bridgeObjectRelease();
    sub_1BE070320();
    sub_1BE06F390();
    uint64_t v92 = v127;
    int v91 = v128;
    uint64_t v90 = v129;
    int v89 = v130;
    uint64_t v88 = v131;
    uint64_t v87 = v132;
    sub_1BDFAC88C(a1, (uint64_t)v22, v85);
    uint64_t v31 = swift_allocObject();
    sub_1BDFAC8F8((uint64_t)v22, v31 + v29, type metadata accessor for CUIKMonthView);
    uint64_t v32 = v97;
    char v33 = v96;
    uint64_t v34 = v84;
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v96, a1 + *(int *)(v86 + 24), v84);
    long long v35 = *(_OWORD *)(a1 + 144);
    long long v124 = *(_OWORD *)(a1 + 128);
    long long v125 = v35;
    long long v126 = *(_OWORD *)(a1 + 160);
    long long v36 = *(_OWORD *)(a1 + 80);
    long long v120 = *(_OWORD *)(a1 + 64);
    long long v37 = *(_OWORD *)(a1 + 96);
    long long v123 = *(_OWORD *)(a1 + 112);
    long long v121 = v36;
    long long v122 = v37;
    long long v38 = *(_OWORD *)(a1 + 32);
    long long v119 = *(_OWORD *)(a1 + 48);
    long long v118 = v38;
    long long v39 = *(_OWORD *)a1;
    long long v117 = *(_OWORD *)(a1 + 16);
    uint64_t v40 = v95;
    uint64_t v41 = (uint64_t *)&v16[*(int *)(v95 + 24)];
    long long v116 = v39;
    uint64_t *v41 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = (uint64_t *)&v16[*(int *)(v40 + 28)];
    uint64_t *v42 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v16, v33, v34);
    uint64_t v43 = &v16[*(int *)(v40 + 20)];
    long long v44 = v125;
    *((_OWORD *)v43 + 8) = v124;
    *((_OWORD *)v43 + 9) = v44;
    *((_OWORD *)v43 + 10) = v126;
    long long v45 = v121;
    *((_OWORD *)v43 + 4) = v120;
    *((_OWORD *)v43 + 5) = v45;
    long long v46 = v123;
    *((_OWORD *)v43 + 6) = v122;
    *((_OWORD *)v43 + 7) = v46;
    long long v47 = v117;
    *(_OWORD *)uint64_t v43 = v116;
    *((_OWORD *)v43 + 1) = v47;
    long long v48 = v119;
    *((_OWORD *)v43 + 2) = v118;
    *((_OWORD *)v43 + 3) = v48;
    uint64_t v49 = (uint64_t)v93;
    sub_1BDFAC8F8((uint64_t)v16, (uint64_t)v93, type metadata accessor for CUIKWeekLabelRow);
    sub_1BDFAC88C(v49, (uint64_t)v16, type metadata accessor for CUIKWeekLabelRow);
    uint64_t v50 = v94;
    *(void *)uint64_t v30 = sub_1BDFB630C;
    *(void *)(v30 + 8) = v50;
    *(void *)(v30 + 16) = v92;
    *(unsigned char *)(v30 + 24) = v91;
    *(void *)(v30 + 32) = v90;
    *(unsigned char *)(v30 + 40) = v89;
    uint64_t v51 = v87;
    *(void *)(v30 + 48) = v88;
    *(void *)(v30 + 56) = v51;
    *(void *)(v30 + 64) = sub_1BDFAB598;
    *(void *)(v30 + 72) = 0;
    *(void *)(v30 + 80) = sub_1BDFB6344;
    *(void *)(v30 + 88) = v31;
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1780);
    sub_1BDFAC88C((uint64_t)v16, v30 + *(int *)(v52 + 48), type metadata accessor for CUIKWeekLabelRow);
    swift_retain();
    swift_retain();
    sub_1BDFB63B4((uint64_t)&v116);
    sub_1BDFB6454(v49, type metadata accessor for CUIKWeekLabelRow);
    sub_1BDFB6454((uint64_t)v16, type metadata accessor for CUIKWeekLabelRow);
    swift_release();
    swift_release();
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E18E0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v30, 0, 1, v53);
    sub_1BDFB8210(v30, v115, &qword_1EA0E18E8);
  }
  else
  {
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E18E0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v115, 1, 1, v54);
  }
  uint64_t v55 = v102;
  sub_1BDFCD994(v102);
  uint64_t v56 = v107;
  uint64_t v57 = *(void (**)(char *, void, uint64_t))(v107 + 104);
  uint64_t v58 = v105;
  uint64_t v59 = v108;
  v57(v105, *MEMORY[0x1E4F27BD8], v108);
  uint64_t v60 = v106;
  v57(v106, *MEMORY[0x1E4F27C30], v59);
  uint64_t v61 = sub_1BE06F070();
  uint64_t v63 = v62;
  char v65 = v64;
  uint64_t v66 = *(void (**)(char *, uint64_t))(v56 + 8);
  v66(v60, v59);
  v66(v58, v59);
  (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v55, v104);
  if (v65) {
    uint64_t v67 = 0;
  }
  else {
    uint64_t v67 = v63;
  }
  if (v65) {
    uint64_t v68 = 0;
  }
  else {
    uint64_t v68 = v61;
  }
  *(void *)&long long v116 = v68;
  *((void *)&v116 + 1) = v67;
  swift_getKeyPath();
  uint64_t v69 = (uint64_t)v100;
  sub_1BDFAC88C(a1, (uint64_t)v100, type metadata accessor for CUIKMonthView);
  unint64_t v70 = (*(unsigned __int8 *)(v99 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
  uint64_t v71 = swift_allocObject();
  sub_1BDFAC8F8(v69, v71 + v70, type metadata accessor for CUIKMonthView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1518);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E14B0);
  sub_1BDFB6238();
  sub_1BDF86964(&qword_1EA0E14A8, &qword_1EA0E14B0);
  uint64_t v72 = v109;
  sub_1BE070260();
  uint64_t v73 = v112;
  char v74 = v110;
  uint64_t v75 = v113;
  (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v110, v72, v113);
  uint64_t v76 = v115;
  uint64_t v77 = (uint64_t)v101;
  sub_1BDF86808(v115, (uint64_t)v101, &qword_1EA0E18E8);
  uint64_t v78 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  uint64_t v79 = v111;
  v78(v111, v74, v75);
  uint64_t v80 = v114;
  sub_1BDF86808(v77, v114, &qword_1EA0E18E8);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E18F0);
  v78((char *)(v80 + *(int *)(v81 + 48)), v79, v75);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v73 + 8);
  v82(v74, v75);
  sub_1BDF8686C(v76, &qword_1EA0E18E8);
  v82(v79, v75);
  return sub_1BDF8686C(v77, &qword_1EA0E18E8);
}

uint64_t sub_1BDFAB598@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1BE06F3E0();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BDFAB5C4()
{
  return sub_1BE070120();
}

uint64_t sub_1BDFAB634@<X0>(uint64_t *a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v46 = v8;
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = sub_1BE06EEE0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for CUIKWeekRow(0);
  uint64_t v16 = (int *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v46 - v20;
  uint64_t v48 = *a1;
  uint64_t v22 = (int *)type metadata accessor for CUIKMonthView(0);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, (char *)a2 + v22[6], v11);
  sub_1BDF86808((uint64_t)a2 + v22[7], (uint64_t)v10, &qword_1EB677CC0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v8, 1, 1, v11);
  long long v23 = *((_OWORD *)a2 + 5);
  long long v54 = *((_OWORD *)a2 + 4);
  long long v55 = v23;
  long long v24 = *((_OWORD *)a2 + 3);
  long long v52 = *((_OWORD *)a2 + 2);
  long long v53 = v24;
  long long v25 = *((_OWORD *)a2 + 10);
  long long v26 = *((_OWORD *)a2 + 8);
  long long v59 = *((_OWORD *)a2 + 9);
  long long v60 = v25;
  long long v27 = *((_OWORD *)a2 + 7);
  long long v56 = *((_OWORD *)a2 + 6);
  long long v57 = v27;
  long long v58 = v26;
  long long v28 = *((_OWORD *)a2 + 1);
  long long v50 = *(_OWORD *)a2;
  long long v51 = v28;
  unint64_t v29 = (uint64_t *)((char *)a2 + v22[8]);
  uint64_t v30 = (uint64_t *)&v19[v16[12]];
  uint64_t v31 = *v29;
  uint64_t v47 = v29[1];
  *uint64_t v30 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = (uint64_t *)&v19[v16[13]];
  uint64_t *v32 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  swift_storeEnumTagMultiPayload();
  char v33 = (uint64_t *)&v19[v16[14]];
  *char v33 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11E0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v14, v11);
  sub_1BDFB8210((uint64_t)v10, (uint64_t)&v19[v16[7]], &qword_1EB677CC0);
  sub_1BDFB8210((uint64_t)v46, (uint64_t)&v19[v16[8]], &qword_1EB677CC0);
  *(void *)&v19[v16[9]] = v48;
  uint64_t v34 = &v19[v16[10]];
  long long v35 = v59;
  *((_OWORD *)v34 + 8) = v58;
  *((_OWORD *)v34 + 9) = v35;
  *((_OWORD *)v34 + 10) = v60;
  long long v36 = v55;
  *((_OWORD *)v34 + 4) = v54;
  *((_OWORD *)v34 + 5) = v36;
  long long v37 = v57;
  *((_OWORD *)v34 + 6) = v56;
  *((_OWORD *)v34 + 7) = v37;
  long long v38 = v51;
  *(_OWORD *)uint64_t v34 = v50;
  *((_OWORD *)v34 + 1) = v38;
  long long v39 = v53;
  *((_OWORD *)v34 + 2) = v52;
  *((_OWORD *)v34 + 3) = v39;
  uint64_t v40 = (uint64_t *)&v19[v16[11]];
  uint64_t v41 = v47;
  uint64_t *v40 = v31;
  v40[1] = v41;
  sub_1BDFAC8F8((uint64_t)v19, (uint64_t)v21, type metadata accessor for CUIKWeekRow);
  double v42 = a2[2];
  LOBYTE(v14) = v42 >= 1.0;
  LOBYTE(v12) = v42 < 1.0;
  sub_1BDFAC88C((uint64_t)v21, (uint64_t)v19, type metadata accessor for CUIKWeekRow);
  uint64_t v43 = v49;
  sub_1BDFAC88C((uint64_t)v19, v49, type metadata accessor for CUIKWeekRow);
  uint64_t v44 = v43 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1130) + 48);
  *(void *)uint64_t v44 = 0;
  *(unsigned char *)(v44 + 8) = v12;
  *(unsigned char *)(v44 + 9) = (_BYTE)v14;
  sub_1BDFB63B4((uint64_t)&v50);
  sub_1BDFB6630(v31);
  sub_1BDFB6454((uint64_t)v21, type metadata accessor for CUIKWeekRow);
  return sub_1BDFB6454((uint64_t)v19, type metadata accessor for CUIKWeekRow);
}

uint64_t CUIKMonthView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v25 = a1;
  uint64_t v3 = sub_1BE06F9B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1880);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1868);
  uint64_t v10 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1718);
  MEMORY[0x1F4188790](v24);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFABDDC(v2, (uint64_t)v9);
  sub_1BE06F9A0();
  unint64_t v15 = sub_1BDFACA68();
  sub_1BE06FE70();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1BDF8686C((uint64_t)v9, &qword_1EA0E1880);
  uint64_t v26 = sub_1BDFA7408(*(void *)(v2 + 176), *(void *)(v2 + 184));
  unint64_t v27 = v16;
  sub_1BDF859F0();
  uint64_t v17 = sub_1BE06FD30();
  uint64_t v19 = v18;
  LOBYTE(v4) = v20 & 1;
  uint64_t v26 = v7;
  unint64_t v27 = v15;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v23;
  sub_1BE06FE40();
  sub_1BDF8587C(v17, v19, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
  sub_1BE06F490();
  return sub_1BDF8686C((uint64_t)v14, &qword_1EA0E1718);
}

uint64_t sub_1BDFABDDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v3 - 8);
  long long v39 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1BE06EE10();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x1F4188790](v5);
  char v33 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1858);
  uint64_t v35 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v34 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E17C8);
  MEMORY[0x1F4188790](v40);
  uint64_t v41 = (uint64_t (**)(uint64_t))((char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for CUIKMonthView(0);
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v10 = *(void *)(v36 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = sub_1BE06F500();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = a1;
  sub_1BDFCDC80((uint64_t)&v32 - v16);
  sub_1BE06F4F0();
  sub_1BDFB4C20(&qword_1EA0E1368, MEMORY[0x1E4F3CD50]);
  LOBYTE(a1) = sub_1BE070AB0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v15, v11);
  v19(v17, v11);
  if (a1)
  {
    sub_1BDFAC88C(v18, (uint64_t)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CUIKMonthView);
    unint64_t v20 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v21 = swift_allocObject();
    sub_1BDFAC8F8((uint64_t)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, type metadata accessor for CUIKMonthView);
    uint64_t v22 = v41;
    uint64_t *v41 = sub_1BDFB5E6C;
    v22[1] = (uint64_t (*)(uint64_t))v21;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E16C8);
    sub_1BDF86964(&qword_1EA0E16C0, &qword_1EA0E16C8);
    sub_1BDF86964(&qword_1EA0E1850, &qword_1EA0E1858);
    return sub_1BE06F8E0();
  }
  else
  {
    uint64_t v24 = v41;
    uint64_t v25 = v42;
    uint64_t v44 = 0;
    unint64_t v45 = 0xE000000000000000;
    sub_1BE0705D0();
    sub_1BE06EE70();
    sub_1BE070810();
    uint64_t v26 = v39;
    sub_1BE06EE00();
    swift_bridgeObjectRelease();
    uint64_t v28 = v37;
    uint64_t v27 = v38;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v26, 1, v38);
    if (result == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v28 + 32))(v33, v26, v27);
      MEMORY[0x1F4188790](v29);
      *(&v32 - 2) = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E16C8);
      sub_1BDF86964(&qword_1EA0E16C0, &qword_1EA0E16C8);
      uint64_t v30 = v34;
      sub_1BE06FC40();
      uint64_t v31 = v35;
      (*(void (**)(uint64_t (**)(uint64_t), char *, uint64_t))(v35 + 16))(v24, v30, v25);
      swift_storeEnumTagMultiPayload();
      sub_1BDF86964(&qword_1EA0E1850, &qword_1EA0E1858);
      sub_1BE06F8E0();
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v30, v25);
    }
  }
  return result;
}

uint64_t sub_1BDFAC464@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v4 = type metadata accessor for CUIKMonthView(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4 - 8);
  sub_1BDFAC88C(a1, (uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for CUIKMonthView);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  uint64_t result = sub_1BDFAC8F8((uint64_t)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for CUIKMonthView);
  *a2 = sub_1BDFB5E6C;
  a2[1] = (uint64_t (*)(uint64_t))v8;
  return result;
}

uint64_t sub_1BDFAC588()
{
  return sub_1BE06F670();
}

uint64_t sub_1BDFAC5AC()
{
  return sub_1BE06F670();
}

uint64_t sub_1BDFAC5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDFAC77C(a1, a2, a3, a4, MEMORY[0x1E4F27CA0], MEMORY[0x1E4F3D270]);
}

uint64_t sub_1BDFAC5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDFAC77C(a1, a2, a3, a4, MEMORY[0x1E4F27CA0], MEMORY[0x1E4F3D270]);
}

uint64_t sub_1BDFAC63C()
{
  return sub_1BE06F5C0();
}

uint64_t sub_1BDFAC660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDFAC77C(a1, a2, a3, a4, MEMORY[0x1E4F3CD50], MEMORY[0x1E4F3D068]);
}

uint64_t sub_1BDFAC6A4(uint64_t a1)
{
  return sub_1BDFB5DC8(a1, type metadata accessor for CUIKWeekLabelRow, (uint64_t (*)(uint64_t, uint64_t))sub_1BDFA24E0);
}

uint64_t sub_1BDFAC6D0@<X0>(char *a1@<X8>)
{
  return sub_1BDFA3380(v1[6], v1[7], v1[8], v1[9], v1[2], v1[3], v1[4], v1[5], a1);
}

unint64_t sub_1BDFAC6E4()
{
  unint64_t result = qword_1EA0E14A0;
  if (!qword_1EA0E14A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E14A0);
  }
  return result;
}

uint64_t type metadata accessor for CUIKWeekRow(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E1120);
}

uint64_t sub_1BDFAC758()
{
  return sub_1BE06F570();
}

uint64_t sub_1BDFAC77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  MEMORY[0x1F4188790]();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1BDFAC84C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BDFAC77C(a1, a2, a3, a4, MEMORY[0x1E4F3C5D8], MEMORY[0x1E4F3CF10]);
}

uint64_t sub_1BDFAC88C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDFAC8F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDFAC960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDFAC994(a1, type metadata accessor for CUIKWeekRow, &qword_1EA0E1998, (uint64_t (*)(uint64_t, uint64_t))sub_1BDFA57F0, a2);
}

uint64_t sub_1BDFAC994@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a2(0) - 8);
  return sub_1BDFA8804(a1, v5 + ((*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), a3, a4, a5);
}

uint64_t type metadata accessor for CUIKMonthView(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E10C8);
}

uint64_t sub_1BDFACA44()
{
  return sub_1BE06F5F0();
}

unint64_t sub_1BDFACA68()
{
  unint64_t result = qword_1EA0E1878;
  if (!qword_1EA0E1878)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1880);
    sub_1BDFACADC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1878);
  }
  return result;
}

unint64_t sub_1BDFACADC()
{
  unint64_t result = qword_1EA0E1808;
  if (!qword_1EA0E1808)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1810);
    sub_1BDF86964(&qword_1EA0E16C0, &qword_1EA0E16C8);
    sub_1BDF86964(&qword_1EA0E1850, &qword_1EA0E1858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1808);
  }
  return result;
}

unint64_t sub_1BDFACBA4()
{
  unint64_t result = qword_1EA0E3078;
  if (!qword_1EA0E3078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3078);
  }
  return result;
}

uint64_t sub_1BDFACBF8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFACC14()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFACC30()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for CUIKMonthDimmingMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CUIKMonthDimmingMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDFACDA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CUIKMonthDimmingMode()
{
  return &type metadata for CUIKMonthDimmingMode;
}

void *initializeBufferWithCopyOfBuffer for CUIKWeekLabelRow(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    uint64_t v21 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1BE06EEE0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v28 = a3;
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *uint64_t v10 = *v11;
    *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
    uint64_t v12 = *((void *)v11 + 4);
    *((void *)v10 + 3) = *((void *)v11 + 3);
    *((void *)v10 + 4) = v12;
    *((void *)v10 + 5) = *((void *)v11 + 5);
    v10[48] = v11[48];
    *(_WORD *)(v10 + 49) = *(_WORD *)(v11 + 49);
    *(_OWORD *)(v10 + 56) = *(_OWORD *)(v11 + 56);
    *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
    uint64_t v13 = *((void *)v11 + 12);
    *((void *)v10 + 11) = *((void *)v11 + 11);
    *((void *)v10 + 12) = v13;
    v10[104] = v11[104];
    uint64_t v14 = *((void *)v11 + 15);
    *((void *)v10 + 14) = *((void *)v11 + 14);
    *((void *)v10 + 15) = v14;
    v10[128] = v11[128];
    uint64_t v15 = *((void *)v11 + 18);
    *((void *)v10 + 17) = *((void *)v11 + 17);
    *((void *)v10 + 18) = v15;
    uint64_t v16 = *((void *)v11 + 20);
    *((void *)v10 + 19) = *((void *)v11 + 19);
    *((void *)v10 + 20) = v16;
    *((void *)v10 + 21) = *((void *)v11 + 21);
    uint64_t v27 = a1;
    uint64_t v17 = (void *)((char *)a1 + v9);
    uint64_t v29 = a2;
    uint64_t v18 = (void *)((char *)a2 + v9);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_1BE06F100();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = v27;
    uint64_t v22 = *(int *)(v28 + 28);
    uint64_t v23 = (void *)((char *)v27 + v22);
    uint64_t v24 = (void *)((char *)v29 + v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v25 = sub_1BE06F500();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *uint64_t v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v21;
}

uint64_t destroy for CUIKWeekLabelRow(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1BE06F100();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_1BE06F500();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for CUIKWeekLabelRow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v24 = a3;
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  uint64_t v11 = *(void *)(v10 + 32);
  *(void *)(v9 + 24) = *(void *)(v10 + 24);
  *(void *)(v9 + 32) = v11;
  *(void *)(v9 + 40) = *(void *)(v10 + 40);
  *(unsigned char *)(v9 + 48) = *(unsigned char *)(v10 + 48);
  *(_WORD *)(v9 + 49) = *(_WORD *)(v10 + 49);
  *(_OWORD *)(v9 + 56) = *(_OWORD *)(v10 + 56);
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
  uint64_t v12 = *(void *)(v10 + 96);
  *(void *)(v9 + 88) = *(void *)(v10 + 88);
  *(void *)(v9 + 96) = v12;
  *(unsigned char *)(v9 + 104) = *(unsigned char *)(v10 + 104);
  uint64_t v13 = *(void *)(v10 + 120);
  *(void *)(v9 + 112) = *(void *)(v10 + 112);
  *(void *)(v9 + 120) = v13;
  *(unsigned char *)(v9 + 128) = *(unsigned char *)(v10 + 128);
  uint64_t v14 = *(void *)(v10 + 144);
  *(void *)(v9 + 136) = *(void *)(v10 + 136);
  *(void *)(v9 + 144) = v14;
  uint64_t v15 = *(void *)(v10 + 160);
  *(void *)(v9 + 152) = *(void *)(v10 + 152);
  *(void *)(v9 + 160) = v15;
  *(void *)(v9 + 168) = *(void *)(v10 + 168);
  uint64_t v25 = a2;
  uint64_t v26 = a1;
  uint64_t v16 = (void *)(a1 + v8);
  uint64_t v17 = (void *)(a2 + v8);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = sub_1BE06F100();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  else
  {
    *uint64_t v16 = *v17;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = *(int *)(v24 + 28);
  uint64_t v20 = (void *)(v26 + v19);
  uint64_t v21 = (void *)(v25 + v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = sub_1BE06F500();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    *uint64_t v20 = *v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return v26;
}

uint64_t assignWithCopy for CUIKWeekLabelRow(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 24) = *(void *)(a2 + v7 + 24);
  *(void *)(v8 + 32) = *(void *)(a2 + v7 + 32);
  swift_retain();
  swift_release();
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(unsigned char *)(v8 + 49) = *(unsigned char *)(v9 + 49);
  *(unsigned char *)(v8 + 50) = *(unsigned char *)(v9 + 50);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(void *)(v8 + 88) = *(void *)(v9 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  swift_retain();
  swift_release();
  *(unsigned char *)(v8 + 104) = *(unsigned char *)(v9 + 104);
  *(void *)(v8 + 112) = *(void *)(v9 + 112);
  *(void *)(v8 + 120) = *(void *)(v9 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 128) = *(unsigned char *)(v9 + 128);
  *(void *)(v8 + 136) = *(void *)(v9 + 136);
  swift_retain();
  swift_release();
  *(void *)(v8 + 144) = *(void *)(v9 + 144);
  swift_retain();
  swift_release();
  *(void *)(v8 + 152) = *(void *)(v9 + 152);
  swift_retain();
  swift_release();
  *(void *)(v8 + 160) = *(void *)(v9 + 160);
  swift_retain();
  swift_release();
  *(void *)(v8 + 168) = *(void *)(v9 + 168);
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_1BDF8686C(a1 + v10, &qword_1EA0E11D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_1BE06F100();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_1BDF8686C(a1 + v14, &qword_1EA0E11F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_1BE06F500();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for CUIKWeekLabelRow(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (_OWORD *)(a1 + v7);
  uint64_t v10 = (_OWORD *)(a2 + v7);
  long long v11 = v10[9];
  v9[8] = v10[8];
  v9[9] = v11;
  v9[10] = v10[10];
  long long v12 = v10[5];
  v9[4] = v10[4];
  v9[5] = v12;
  long long v13 = v10[7];
  v9[6] = v10[6];
  v9[7] = v13;
  long long v14 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v14;
  long long v15 = v10[3];
  v9[2] = v10[2];
  void v9[3] = v15;
  uint64_t v16 = (void *)(a1 + v8);
  uint64_t v17 = (const void *)(a2 + v8);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v19 = sub_1BE06F100();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v20 = a3[7];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = sub_1BE06F500();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for CUIKWeekLabelRow(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(a2 + v7 + 8);
  *(void *)(v8 + 24) = *(void *)(a2 + v7 + 24);
  *(void *)(v8 + 32) = *(void *)(a2 + v7 + 32);
  swift_release();
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(unsigned char *)(v8 + 49) = *(unsigned char *)(v9 + 49);
  *(unsigned char *)(v8 + 50) = *(unsigned char *)(v9 + 50);
  *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  uint64_t v10 = *(void *)(v9 + 88);
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(void *)(v8 + 88) = v10;
  swift_bridgeObjectRelease();
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  swift_release();
  *(unsigned char *)(v8 + 104) = *(unsigned char *)(v9 + 104);
  uint64_t v11 = *(void *)(v9 + 120);
  *(void *)(v8 + 112) = *(void *)(v9 + 112);
  *(void *)(v8 + 120) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 128) = *(unsigned char *)(v9 + 128);
  *(void *)(v8 + 136) = *(void *)(v9 + 136);
  swift_release();
  *(void *)(v8 + 144) = *(void *)(v9 + 144);
  swift_release();
  *(void *)(v8 + 152) = *(void *)(v9 + 152);
  swift_release();
  *(void *)(v8 + 160) = *(void *)(v9 + 160);
  swift_release();
  *(void *)(v8 + 168) = *(void *)(v9 + 168);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v12 = a3[6];
    long long v13 = (void *)(a1 + v12);
    long long v14 = (const void *)(a2 + v12);
    sub_1BDF8686C(a1 + v12, &qword_1EA0E11D0);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_1BE06F100();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (const void *)(a2 + v17);
    sub_1BDF8686C(a1 + v17, &qword_1EA0E11F0);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1BE06F500();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CUIKWeekLabelRow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BDFADCF8);
}

uint64_t sub_1BDFADCF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 32);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3080);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[6];
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3088);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[7];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for CUIKWeekLabelRow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BDFADE98);
}

uint64_t sub_1BDFADE98(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_1BE06EEE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 32) = (a2 - 1);
    return result;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3080);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3088);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[7];

  return v16(v18, a2, a2, v17);
}

void sub_1BDFAE024()
{
  sub_1BE06EEE0();
  if (v0 <= 0x3F)
  {
    sub_1BDFB26F8(319, (unint64_t *)&qword_1EA0E11D8, MEMORY[0x1E4F27CA0], MEMORY[0x1E4F3C650]);
    if (v1 <= 0x3F)
    {
      sub_1BDFB26F8(319, &qword_1EA0E11F8, MEMORY[0x1E4F3CD50], MEMORY[0x1E4F3C650]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for CUIKWeekRow(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v16 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1BE06EEE0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v49 = a3;
    uint64_t v10 = a3[5];
    unint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    if (v13(&a2[v10], 1, v7))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    uint64_t v17 = v49[6];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    if (v13(&a2[v17], 1, v7))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      v9(v18, v19, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v18, 0, 1, v7);
    }
    uint64_t v21 = v49[8];
    *(void *)&a1[v49[7]] = *(void *)&a2[v49[7]];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    char *v22 = *v23;
    *(_OWORD *)(v22 + 8) = *(_OWORD *)(v23 + 8);
    uint64_t v24 = *((void *)v23 + 4);
    *((void *)v22 + 3) = *((void *)v23 + 3);
    *((void *)v22 + 4) = v24;
    *((void *)v22 + 5) = *((void *)v23 + 5);
    *((_WORD *)v22 + 24) = *((_WORD *)v23 + 24);
    v22[50] = v23[50];
    *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
    *(_OWORD *)(v22 + 72) = *(_OWORD *)(v23 + 72);
    uint64_t v25 = *((void *)v23 + 12);
    *((void *)v22 + 11) = *((void *)v23 + 11);
    *((void *)v22 + 12) = v25;
    v22[104] = v23[104];
    uint64_t v26 = *((void *)v23 + 15);
    *((void *)v22 + 14) = *((void *)v23 + 14);
    *((void *)v22 + 15) = v26;
    v22[128] = v23[128];
    uint64_t v27 = *((void *)v23 + 18);
    *((void *)v22 + 17) = *((void *)v23 + 17);
    *((void *)v22 + 18) = v27;
    uint64_t v28 = *((void *)v23 + 20);
    *((void *)v22 + 19) = *((void *)v23 + 19);
    *((void *)v22 + 20) = v28;
    *((void *)v22 + 21) = *((void *)v23 + 21);
    uint64_t v29 = v49[9];
    long long v46 = &a1[v29];
    uint64_t v47 = a1;
    uint64_t v48 = a2;
    uint64_t v30 = &a2[v29];
    uint64_t v31 = *(void *)&a2[v29];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v31)
    {
      uint64_t v32 = *((void *)v30 + 1);
      char *v46 = v31;
      v46[1] = v32;
      swift_retain();
    }
    else
    {
      *(_OWORD *)long long v46 = *(_OWORD *)v30;
    }
    uint64_t v33 = v49[10];
    uint64_t v16 = v47;
    uint64_t v34 = (void *)((char *)v47 + v33);
    uint64_t v35 = (void *)((char *)v48 + v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = sub_1BE06F100();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    }
    else
    {
      void *v34 = *v35;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = v49[11];
    uint64_t v38 = (void *)((char *)v47 + v37);
    long long v39 = (void *)((char *)v48 + v37);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v40 = sub_1BE06F500();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
    }
    else
    {
      *uint64_t v38 = *v39;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = v49[12];
    uint64_t v42 = (void *)((char *)v47 + v41);
    uint64_t v43 = (void *)((char *)v48 + v41);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v44 = sub_1BE06F2F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    }
    else
    {
      void *v42 = *v43;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v16;
}

uint64_t destroy for CUIKWeekRow(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = a1 + a2[5];
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v8(v7, 1, v4)) {
    v6(v7, v4);
  }
  uint64_t v9 = a1 + a2[6];
  if (!v8(v9, 1, v4)) {
    v6(v9, v4);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(a1 + a2[9])) {
    swift_release();
  }
  uint64_t v10 = a1 + a2[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1BE06F100();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = a1 + a2[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_1BE06F500();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  uint64_t v14 = a1 + a2[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1BE06F2F0();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
    return v16(v14, v15);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for CUIKWeekRow(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  long long v46 = a3;
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v12(a2 + v9, 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v14 = v46[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12(a2 + v14, 1, v6))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v15, (uint64_t)v16, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = v46[8];
  *(void *)(a1 + v46[7]) = *(void *)(a2 + v46[7]);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(unsigned char *)uint64_t v19 = *(unsigned char *)v20;
  *(_OWORD *)(v19 + 8) = *(_OWORD *)(v20 + 8);
  uint64_t v21 = *(void *)(v20 + 32);
  *(void *)(v19 + 24) = *(void *)(v20 + 24);
  *(void *)(v19 + 32) = v21;
  *(void *)(v19 + 40) = *(void *)(v20 + 40);
  *(_WORD *)(v19 + 48) = *(_WORD *)(v20 + 48);
  *(unsigned char *)(v19 + 50) = *(unsigned char *)(v20 + 50);
  *(_OWORD *)(v19 + 56) = *(_OWORD *)(v20 + 56);
  *(_OWORD *)(v19 + 72) = *(_OWORD *)(v20 + 72);
  uint64_t v22 = *(void *)(v20 + 96);
  *(void *)(v19 + 88) = *(void *)(v20 + 88);
  *(void *)(v19 + 96) = v22;
  *(unsigned char *)(v19 + 104) = *(unsigned char *)(v20 + 104);
  uint64_t v23 = *(void *)(v20 + 120);
  *(void *)(v19 + 112) = *(void *)(v20 + 112);
  *(void *)(v19 + 120) = v23;
  *(unsigned char *)(v19 + 128) = *(unsigned char *)(v20 + 128);
  uint64_t v24 = *(void *)(v20 + 144);
  *(void *)(v19 + 136) = *(void *)(v20 + 136);
  *(void *)(v19 + 144) = v24;
  uint64_t v25 = *(void *)(v20 + 160);
  *(void *)(v19 + 152) = *(void *)(v20 + 152);
  *(void *)(v19 + 160) = v25;
  *(void *)(v19 + 168) = *(void *)(v20 + 168);
  uint64_t v26 = v46[9];
  uint64_t v44 = a2;
  uint64_t v45 = a1;
  uint64_t v43 = (void *)(a1 + v26);
  uint64_t v27 = (uint64_t *)(a2 + v26);
  uint64_t v28 = *v27;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if (v28)
  {
    uint64_t v29 = v27[1];
    void *v43 = v28;
    v43[1] = v29;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v43 = *(_OWORD *)v27;
  }
  uint64_t v30 = v46[10];
  uint64_t v31 = (void *)(v45 + v30);
  uint64_t v32 = (void *)(v44 + v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v33 = sub_1BE06F100();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  }
  else
  {
    void *v31 = *v32;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = v46[11];
  uint64_t v35 = (void *)(v45 + v34);
  uint64_t v36 = (void *)(v44 + v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = sub_1BE06F500();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  }
  else
  {
    void *v35 = *v36;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v38 = v46[12];
  long long v39 = (void *)(v45 + v38);
  uint64_t v40 = (void *)(v44 + v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v41 = sub_1BE06F2F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  }
  else
  {
    void *v39 = *v40;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return v45;
}

char *assignWithCopy for CUIKWeekRow(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v44 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v44(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(&a1[v8], 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v44(v9, v10, v6);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v6);
  int v19 = v11(v17, 1, v6);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v17, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  v44(v16, v17, v6);
LABEL_13:
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v21 = a3[8];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  char *v22 = a2[v21];
  *((void *)v22 + 1) = *(void *)&a2[v21 + 8];
  *((void *)v22 + 2) = *(void *)&a2[v21 + 16];
  *((void *)v22 + 3) = *(void *)&a2[v21 + 24];
  *((void *)v22 + 4) = *(void *)&a2[v21 + 32];
  swift_retain();
  swift_release();
  *((void *)v22 + 5) = *((void *)v23 + 5);
  v22[48] = v23[48];
  v22[49] = v23[49];
  v22[50] = v23[50];
  *((void *)v22 + 7) = *((void *)v23 + 7);
  *((void *)v22 + 8) = *((void *)v23 + 8);
  *((void *)v22 + 9) = *((void *)v23 + 9);
  *((void *)v22 + 10) = *((void *)v23 + 10);
  *((void *)v22 + 11) = *((void *)v23 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v22 + 12) = *((void *)v23 + 12);
  swift_retain();
  swift_release();
  v22[104] = v23[104];
  *((void *)v22 + 14) = *((void *)v23 + 14);
  *((void *)v22 + 15) = *((void *)v23 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[128] = v23[128];
  *((void *)v22 + 17) = *((void *)v23 + 17);
  swift_retain();
  swift_release();
  *((void *)v22 + 18) = *((void *)v23 + 18);
  swift_retain();
  swift_release();
  *((void *)v22 + 19) = *((void *)v23 + 19);
  swift_retain();
  swift_release();
  *((void *)v22 + 20) = *((void *)v23 + 20);
  swift_retain();
  swift_release();
  *((void *)v22 + 21) = *((void *)v23 + 21);
  swift_retain();
  swift_release();
  uint64_t v24 = a3[9];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = *(void *)&a1[v24];
  uint64_t v28 = *(void *)&a2[v24];
  if (v27)
  {
    if (v28)
    {
      uint64_t v29 = *((void *)v26 + 1);
      *(void *)uint64_t v25 = v28;
      *((void *)v25 + 1) = v29;
      swift_retain();
      swift_release();
      goto LABEL_20;
    }
    swift_release();
  }
  else if (v28)
  {
    uint64_t v30 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = v28;
    *((void *)v25 + 1) = v30;
    swift_retain();
    goto LABEL_20;
  }
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
LABEL_20:
  if (a1 != a2)
  {
    uint64_t v31 = a3[10];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    sub_1BDF8686C((uint64_t)&a1[v31], &qword_1EA0E11D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = sub_1BE06F100();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      *(void *)uint64_t v32 = *(void *)v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = a3[11];
    uint64_t v36 = &a1[v35];
    uint64_t v37 = &a2[v35];
    sub_1BDF8686C((uint64_t)&a1[v35], &qword_1EA0E11F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v38 = sub_1BE06F500();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    }
    else
    {
      *(void *)uint64_t v36 = *(void *)v37;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = a3[12];
    uint64_t v40 = &a1[v39];
    uint64_t v41 = &a2[v39];
    sub_1BDF8686C((uint64_t)&a1[v39], &qword_1EA0E11E0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v42 = sub_1BE06F2F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    }
    else
    {
      *(void *)uint64_t v40 = *(void *)v41;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for CUIKWeekRow(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v47 = a3;
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v12(a2 + v9, 1, v6))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  uint64_t v14 = v47[6];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12(a2 + v14, 1, v6))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v15, (uint64_t)v16, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  uint64_t v18 = v47[8];
  *(void *)(a1 + v47[7]) = *(void *)(a2 + v47[7]);
  int v19 = (_OWORD *)(a1 + v18);
  uint64_t v20 = (_OWORD *)(a2 + v18);
  long long v21 = v20[9];
  v19[8] = v20[8];
  v19[9] = v21;
  v19[10] = v20[10];
  long long v22 = v20[5];
  v19[4] = v20[4];
  v19[5] = v22;
  long long v23 = v20[7];
  v19[6] = v20[6];
  v19[7] = v23;
  long long v24 = v20[1];
  *int v19 = *v20;
  v19[1] = v24;
  long long v25 = v20[3];
  v19[2] = v20[2];
  _OWORD v19[3] = v25;
  uint64_t v26 = v47[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v29 = *v28;
  if (*v28)
  {
    uint64_t v30 = v28[1];
    *uint64_t v27 = v29;
    v27[1] = v30;
  }
  else
  {
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  }
  uint64_t v31 = v47[10];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v35 = sub_1BE06F100();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v35 - 8) + 32))(v32, v33, v35);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  uint64_t v36 = v47[11];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = sub_1BE06F500();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v37, v38, v40);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  uint64_t v41 = v47[12];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (const void *)(a2 + v41);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v45 = sub_1BE06F2F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v45 - 8) + 32))(v42, v43, v45);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for CUIKWeekRow(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v49 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v49(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v12 = v11(&a1[v8], 1, v6);
  int v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v10, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v49(v9, v10, v6);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = v11(&a1[v15], 1, v6);
  int v19 = v11(v17, 1, v6);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v17, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  v49(v16, v17, v6);
LABEL_13:
  uint64_t v21 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  long long v22 = &a1[v21];
  long long v23 = &a2[v21];
  char *v22 = a2[v21];
  *(_OWORD *)(v22 + 8) = *(_OWORD *)&a2[v21 + 8];
  *((void *)v22 + 3) = *(void *)&a2[v21 + 24];
  *((void *)v22 + 4) = *(void *)&a2[v21 + 32];
  swift_release();
  *((void *)v22 + 5) = *((void *)v23 + 5);
  v22[48] = v23[48];
  v22[49] = v23[49];
  v22[50] = v23[50];
  *(_OWORD *)(v22 + 56) = *(_OWORD *)(v23 + 56);
  *((void *)v22 + 9) = *((void *)v23 + 9);
  uint64_t v24 = *((void *)v23 + 11);
  *((void *)v22 + 10) = *((void *)v23 + 10);
  *((void *)v22 + 11) = v24;
  swift_bridgeObjectRelease();
  *((void *)v22 + 12) = *((void *)v23 + 12);
  swift_release();
  v22[104] = v23[104];
  uint64_t v25 = *((void *)v23 + 15);
  *((void *)v22 + 14) = *((void *)v23 + 14);
  *((void *)v22 + 15) = v25;
  swift_bridgeObjectRelease();
  v22[128] = v23[128];
  *((void *)v22 + 17) = *((void *)v23 + 17);
  swift_release();
  *((void *)v22 + 18) = *((void *)v23 + 18);
  swift_release();
  *((void *)v22 + 19) = *((void *)v23 + 19);
  swift_release();
  *((void *)v22 + 20) = *((void *)v23 + 20);
  swift_release();
  *((void *)v22 + 21) = *((void *)v23 + 21);
  swift_release();
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  uint64_t v29 = *(void *)&a1[v26];
  uint64_t v30 = *(void *)&a2[v26];
  if (v29)
  {
    if (v30)
    {
      uint64_t v31 = *((void *)v28 + 1);
      *(void *)uint64_t v27 = v30;
      *((void *)v27 + 1) = v31;
      swift_release();
      goto LABEL_20;
    }
    swift_release();
  }
  else if (v30)
  {
    uint64_t v32 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = v30;
    *((void *)v27 + 1) = v32;
    goto LABEL_20;
  }
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
LABEL_20:
  if (a1 != a2)
  {
    uint64_t v33 = a3[10];
    uint64_t v34 = &a1[v33];
    uint64_t v35 = &a2[v33];
    sub_1BDF8686C((uint64_t)&a1[v33], &qword_1EA0E11D0);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v37 = sub_1BE06F100();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v34, v35, v37);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    uint64_t v38 = a3[11];
    uint64_t v39 = &a1[v38];
    uint64_t v40 = &a2[v38];
    sub_1BDF8686C((uint64_t)&a1[v38], &qword_1EA0E11F0);
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v42 = sub_1BE06F500();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v39, v40, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    uint64_t v43 = a3[12];
    uint64_t v44 = &a1[v43];
    uint64_t v45 = &a2[v43];
    sub_1BDF8686C((uint64_t)&a1[v43], &qword_1EA0E11E0);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v47 = sub_1BE06F2F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v44, v45, v47);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CUIKWeekRow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BDFAFF80);
}

uint64_t sub_1BDFAFF80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_13:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_14;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[8] + 32);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3080);
    if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
    {
      uint64_t v8 = v16;
      uint64_t v12 = *(void *)(v16 - 8);
      uint64_t v13 = a3[10];
      goto LABEL_13;
    }
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3088);
    if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
    {
      uint64_t v8 = v17;
      uint64_t v12 = *(void *)(v17 - 8);
      uint64_t v13 = a3[11];
      goto LABEL_13;
    }
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3090);
    int v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
    uint64_t v20 = v18;
    uint64_t v21 = a1 + a3[12];
    return v19(v21, a2, v20);
  }
}

uint64_t storeEnumTagSinglePayload for CUIKWeekRow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BDFB01C0);
}

uint64_t sub_1BDFB01C0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1BE06EEE0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v14 = *(void *)(result - 8);
    uint64_t v15 = a4[5];
LABEL_11:
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[8] + 32) = (a2 - 1);
    return result;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3080);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[10];
    goto LABEL_11;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3088);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[11];
    goto LABEL_11;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3090);
  int v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[12];

  return v19(v21, a2, a2, v20);
}

void sub_1BDFB03EC()
{
  sub_1BE06EEE0();
  if (v0 <= 0x3F)
  {
    sub_1BDFB26F8(319, &qword_1EB677CC8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F)
    {
      sub_1BDFB26F8(319, (unint64_t *)&qword_1EA0E11D8, MEMORY[0x1E4F27CA0], MEMORY[0x1E4F3C650]);
      if (v2 <= 0x3F)
      {
        sub_1BDFB26F8(319, &qword_1EA0E11F8, MEMORY[0x1E4F3CD50], MEMORY[0x1E4F3C650]);
        if (v3 <= 0x3F)
        {
          sub_1BDFB26F8(319, &qword_1EA0E11E8, MEMORY[0x1E4F3C5D8], MEMORY[0x1E4F3C650]);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void *initializeBufferWithCopyOfBuffer for CUIKMonthView(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    uint64_t v6 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(_WORD *)(a1 + 49) = *(_WORD *)((char *)a2 + 49);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
    uint64_t v43 = a2[12];
    *(void *)(a1 + 88) = a2[11];
    *(void *)(a1 + 96) = v43;
    *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
    uint64_t v7 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v7;
    *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    uint64_t v8 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    *(void *)(a1 + 144) = v8;
    uint64_t v9 = a2[20];
    *(void *)(a1 + 152) = a2[19];
    *(void *)(a1 + 160) = v9;
    uint64_t v10 = a2[22];
    uint64_t v11 = a2[23];
    *(void *)(a1 + 168) = a2[21];
    *(void *)(a1 + 176) = v10;
    uint64_t v12 = a3[6];
    uint64_t v44 = (uint64_t)a2 + v12;
    uint64_t v45 = a1 + v12;
    *(void *)(a1 + 184) = v11;
    uint64_t v13 = sub_1BE06EEE0();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v16 = v14;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v15(v45, v44, v13);
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)v4 + v17;
    int v19 = (char *)a2 + v17;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))((uint64_t)a2 + v17, 1, v13))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      v15((uint64_t)v18, (uint64_t)v19, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v13);
    }
    uint64_t v22 = a3[8];
    long long v23 = (void *)((char *)v4 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    if (*v24)
    {
      uint64_t v25 = v24[1];
      *long long v23 = *v24;
      v23[1] = v25;
      swift_retain();
    }
    else
    {
      *(_OWORD *)long long v23 = *(_OWORD *)v24;
    }
    uint64_t v26 = a3[9];
    uint64_t v27 = a3[10];
    uint64_t v28 = (void *)((char *)v4 + v26);
    uint64_t v29 = (uint64_t *)((char *)a2 + v26);
    uint64_t v30 = v29[1];
    void *v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = (void *)((char *)v4 + v27);
    uint64_t v32 = (uint64_t *)((char *)a2 + v27);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v33 = sub_1BE06F100();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    }
    else
    {
      void *v31 = *v32;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v34 = a3[11];
    uint64_t v35 = (void *)((char *)v4 + v34);
    uint64_t v36 = (uint64_t *)((char *)a2 + v34);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v37 = sub_1BE06F500();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    }
    else
    {
      void *v35 = *v36;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = a3[12];
    uint64_t v39 = (void *)((char *)v4 + v38);
    uint64_t v40 = (uint64_t *)((char *)a2 + v38);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1688);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v41 = sub_1BE06FBC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
    }
    else
    {
      void *v39 = *v40;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t destroy for CUIKMonthView(uint64_t a1, int *a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = sub_1BE06EEE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  if (*(void *)(a1 + a2[8])) {
    swift_release();
  }
  swift_release();
  uint64_t v9 = a1 + a2[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1BE06F100();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = a1 + a2[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1BE06F500();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = a1 + a2[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1688);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1BE06FBC0();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
    return v15(v13, v14);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for CUIKMonthView(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v8 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v8;
  uint64_t v9 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v9;
  uint64_t v10 = *(void *)(a2 + 176);
  uint64_t v11 = *(void *)(a2 + 184);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v10;
  uint64_t v12 = a3[6];
  uint64_t v43 = (const void *)(a2 + v12);
  uint64_t v44 = (void *)(a1 + v12);
  *(void *)(a1 + 184) = v11;
  uint64_t v13 = sub_1BE06EEE0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void (**)(void *, const void *, uint64_t))(v14 + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v16 = v14;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v15(v44, v43, v13);
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  int v19 = (const void *)(a2 + v17);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a2 + v17, 1, v13))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    v15(v18, v19, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v13);
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)(a1 + v21);
  long long v23 = (void *)(a2 + v21);
  if (*v23)
  {
    uint64_t v24 = v23[1];
    void *v22 = *v23;
    v22[1] = v24;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  }
  uint64_t v25 = a3[9];
  uint64_t v26 = a3[10];
  uint64_t v27 = (void *)(a1 + v25);
  uint64_t v28 = (void *)(a2 + v25);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = (void *)(a1 + v26);
  uint64_t v31 = (void *)(a2 + v26);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = sub_1BE06F100();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  }
  else
  {
    *uint64_t v30 = *v31;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (void *)(a2 + v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = sub_1BE06F500();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  }
  else
  {
    void *v34 = *v35;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = a3[12];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1688);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = sub_1BE06FBC0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
  }
  else
  {
    *uint64_t v38 = *v39;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for CUIKMonthView(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_retain();
  swift_release();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1BE06EEE0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
  v40(v7, v8, v9);
  uint64_t v41 = a3;
  uint64_t v11 = a3[7];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  LODWORD(a3) = v14(a1 + v11, 1, v9);
  int v15 = v14((uint64_t)v13, 1, v9);
  if (a3)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v12, v13, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  v40((uint64_t)v12, (uint64_t)v13, v9);
LABEL_7:
  uint64_t v17 = v41[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(a1 + v17);
  uint64_t v21 = *(void *)(a2 + v17);
  if (v20)
  {
    if (v21)
    {
      uint64_t v22 = *(void *)(v19 + 8);
      void *v18 = v21;
      v18[1] = v22;
      swift_retain();
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v21)
  {
    uint64_t v23 = *(void *)(v19 + 8);
    void *v18 = v21;
    v18[1] = v23;
    swift_retain();
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
LABEL_14:
  uint64_t v24 = v41[9];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v27 = v41[10];
    uint64_t v28 = (void *)(a1 + v27);
    uint64_t v29 = (void *)(a2 + v27);
    sub_1BDF8686C(a1 + v27, &qword_1EA0E11D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = sub_1BE06F100();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      void *v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = v41[11];
    uint64_t v32 = (void *)(a1 + v31);
    uint64_t v33 = (void *)(a2 + v31);
    sub_1BDF8686C(a1 + v31, &qword_1EA0E11F0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = sub_1BE06F500();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    }
    else
    {
      void *v32 = *v33;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v35 = v41[12];
    uint64_t v36 = (void *)(a1 + v35);
    uint64_t v37 = (void *)(a2 + v35);
    sub_1BDF8686C(a1 + v35, &qword_1EA0E1688);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1688);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v38 = sub_1BE06FBC0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    }
    else
    {
      *uint64_t v36 = *v37;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for CUIKMonthView(_OWORD *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 9);
  a1[8] = *((_OWORD *)a2 + 8);
  a1[9] = v6;
  long long v7 = *((_OWORD *)a2 + 5);
  a1[4] = *((_OWORD *)a2 + 4);
  a1[5] = v7;
  long long v8 = *((_OWORD *)a2 + 7);
  a1[6] = *((_OWORD *)a2 + 6);
  a1[7] = v8;
  long long v9 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v9;
  long long v10 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v10;
  long long v11 = *((_OWORD *)a2 + 11);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = &a2[v12];
  a1[10] = *((_OWORD *)a2 + 10);
  a1[11] = v11;
  uint64_t v15 = sub_1BE06EEE0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v17(v13, v14, v15);
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = &a2[v18];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&a2[v18], 1, v15))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v17(v19, v20, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v19, 0, 1, v15);
  }
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *(void *)v24;
  if (*(void *)v24)
  {
    uint64_t v26 = *((void *)v24 + 1);
    *uint64_t v23 = v25;
    v23[1] = v26;
  }
  else
  {
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  }
  uint64_t v27 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)&a2[a3[9]];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = &a2[v27];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = sub_1BE06F100();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v28, v29, v31);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  uint64_t v32 = a3[11];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = &a2[v32];
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = sub_1BE06F500();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  uint64_t v37 = a3[12];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = &a2[v37];
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1688);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v41 = sub_1BE06FBC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v38, v39, v41);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for CUIKMonthView(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_release();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_release();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_release();
  uint64_t v8 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1BE06EEE0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 40);
  v46(v10, v11, v12);
  uint64_t v47 = a3;
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  LODWORD(a3) = v17(a1 + v14, 1, v12);
  int v18 = v17((uint64_t)v16, 1, v12);
  if (a3)
  {
    if (!v18)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v15, v16, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v46((uint64_t)v15, (uint64_t)v16, v12);
LABEL_7:
  uint64_t v20 = v47[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)(a1 + v20);
  uint64_t v24 = *(void *)(a2 + v20);
  if (v23)
  {
    if (v24)
    {
      uint64_t v25 = *(void *)(v22 + 8);
      void *v21 = v24;
      v21[1] = v25;
      swift_release();
      goto LABEL_14;
    }
    swift_release();
  }
  else if (v24)
  {
    uint64_t v26 = *(void *)(v22 + 8);
    void *v21 = v24;
    v21[1] = v26;
    goto LABEL_14;
  }
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
LABEL_14:
  uint64_t v27 = v47[9];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  void *v28 = *v29;
  v28[1] = v29[1];
  swift_release();
  if (a1 != a2)
  {
    uint64_t v30 = v47[10];
    uint64_t v31 = (void *)(a1 + v30);
    uint64_t v32 = (const void *)(a2 + v30);
    sub_1BDF8686C(a1 + v30, &qword_1EA0E11D0);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = sub_1BE06F100();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    uint64_t v35 = v47[11];
    uint64_t v36 = (void *)(a1 + v35);
    uint64_t v37 = (const void *)(a2 + v35);
    sub_1BDF8686C(a1 + v35, &qword_1EA0E11F0);
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = sub_1BE06F500();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 32))(v36, v37, v39);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    uint64_t v40 = v47[12];
    uint64_t v41 = (void *)(a1 + v40);
    uint64_t v42 = (const void *)(a2 + v40);
    sub_1BDF8686C(a1 + v40, &qword_1EA0E1688);
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1688);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v44 = sub_1BE06FBC0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v44 - 8) + 32))(v41, v42, v44);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CUIKMonthView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BDFB2048);
}

uint64_t sub_1BDFB2048(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1BE06EEE0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_13:
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v15(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[7];
    goto LABEL_13;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3080);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_13;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3088);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a3[11];
    goto LABEL_13;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3098);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + a3[12];

  return v17(v19, a2, v18);
}

uint64_t storeEnumTagSinglePayload for CUIKMonthView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BDFB227C);
}

uint64_t sub_1BDFB227C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1BE06EEE0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_11:
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v15(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[7];
    goto LABEL_11;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3080);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_11;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3088);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_11;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3098);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = v5 + a4[12];

  return v17(v19, a2, a2, v18);
}

void sub_1BDFB249C()
{
  sub_1BE06EEE0();
  if (v0 <= 0x3F)
  {
    sub_1BDFB26F8(319, &qword_1EB677CC8, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    if (v1 <= 0x3F)
    {
      sub_1BDFB26F8(319, (unint64_t *)&qword_1EA0E11D8, MEMORY[0x1E4F27CA0], MEMORY[0x1E4F3C650]);
      if (v2 <= 0x3F)
      {
        sub_1BDFB26F8(319, &qword_1EA0E11F8, MEMORY[0x1E4F3CD50], MEMORY[0x1E4F3C650]);
        if (v3 <= 0x3F)
        {
          sub_1BDFB26F8(319, &qword_1EA0E1598, MEMORY[0x1E4F3E0E0], MEMORY[0x1E4F3C650]);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1BDFB26F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t destroy for CUIKMonthView.Styling()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CUIKMonthView.Styling(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 49) = *(_WORD *)(a2 + 49);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v4 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v4;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v5 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v5;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v6 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v6;
  uint64_t v7 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v7;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CUIKMonthView.Styling(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_retain();
  swift_release();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_retain();
  swift_release();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_retain();
  swift_release();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_retain();
  swift_release();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for CUIKMonthView.Styling(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  uint64_t v4 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  swift_release();
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_release();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CUIKMonthView.Styling(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CUIKMonthView.Styling(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CUIKMonthView.Styling()
{
  return &type metadata for CUIKMonthView.Styling;
}

unint64_t sub_1BDFB2C4C()
{
  unint64_t result = qword_1EA0E1258;
  if (!qword_1EA0E1258)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1260);
    sub_1BDF86964(&qword_1EA0E1210, &qword_1EA0E1218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1258);
  }
  return result;
}

uint64_t sub_1BDFB2CEC()
{
  return swift_getWitnessTable();
}

unint64_t sub_1BDFB2E34()
{
  unint64_t result = qword_1EA0E19C0;
  if (!qword_1EA0E19C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E19C8);
    sub_1BDF86964(&qword_1EA0E19A0, &qword_1EA0E19A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E19C0);
  }
  return result;
}

unint64_t sub_1BDFB2ED8()
{
  unint64_t result = qword_1EA0E1710;
  if (!qword_1EA0E1710)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1718);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1880);
    sub_1BDFACA68();
    swift_getOpaqueTypeConformance2();
    sub_1BDFB4C20(&qword_1EA0E1440, MEMORY[0x1E4F3DF58]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1710);
  }
  return result;
}

uint64_t *sub_1BDFB2FB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      *((unsigned char *)a1 + 12) = *((unsigned char *)a2 + 12);
      *(_WORD *)((char *)a1 + 13) = *(_WORD *)((char *)a2 + 13);
      uint64_t v10 = *(int *)(v7 + 160);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_1BE06EEE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1BDFB3150(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = a1 + *(int *)(v2 + 160);
    uint64_t v5 = sub_1BE06EEE0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

void *sub_1BDFB3210(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
    *((unsigned char *)a1 + 12) = *((unsigned char *)a2 + 12);
    *(_WORD *)((char *)a1 + 13) = *(_WORD *)((char *)a2 + 13);
    uint64_t v8 = *(int *)(v6 + 160);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1BE06EEE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

unsigned char *sub_1BDFB336C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      a1[9] = a2[9];
      a1[10] = a2[10];
      a1[11] = a2[11];
      a1[12] = a2[12];
      a1[13] = a2[13];
      a1[14] = a2[14];
      uint64_t v16 = *(int *)(v6 + 160);
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      uint64_t v19 = sub_1BE06EEE0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
      return a1;
    }
    sub_1BDF8686C((uint64_t)a1, (uint64_t *)&unk_1EA0E1908);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  uint64_t v11 = *(int *)(v6 + 160);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_1BE06EEE0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1BDFB35B0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
    *((unsigned char *)a1 + 12) = *((unsigned char *)a2 + 12);
    *(_WORD *)((char *)a1 + 13) = *(_WORD *)((char *)a2 + 13);
    uint64_t v8 = *(int *)(v6 + 160);
    int v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1BE06EEE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_1BDFB370C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
      *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
      *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
      *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
      *(unsigned char *)(a1 + 13) = *(unsigned char *)(a2 + 13);
      *(unsigned char *)(a1 + 14) = *(unsigned char *)(a2 + 14);
      uint64_t v16 = *(int *)(v6 + 160);
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      uint64_t v19 = sub_1BE06EEE0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
      return a1;
    }
    sub_1BDF8686C(a1, (uint64_t *)&unk_1EA0E1908);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_WORD *)(a1 + 13) = *(_WORD *)(a2 + 13);
  uint64_t v11 = *(int *)(v6 + 160);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1BDFB3930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BDFB3944);
}

uint64_t sub_1BDFB3944(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1BDFB39B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BDFB39C8);
}

uint64_t sub_1BDFB39C8(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1BDFB3A4C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1BDFB3AB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for WeekDayViewModel(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E11A8);
}

uint64_t sub_1BDFB3B4C()
{
  uint64_t result = sub_1BE06EEE0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t destroy for WeekLabelData()
{
  swift_bridgeObjectRelease();

  return swift_release();
}

void *initializeWithCopy for WeekLabelData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for WeekLabelData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for WeekLabelData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for WeekLabelData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeekLabelData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeekLabelData()
{
  return &type metadata for WeekLabelData;
}

uint64_t *sub_1BDFB3DEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    int v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1BE06F720();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (uint64_t *)((char *)v7 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1BDFB3EF8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1BE06F720();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_1BDFB3F88(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BE06F720();
  int v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1BDFB4048(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BE06F720();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1BDFB4110(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BE06F720();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_1BDFB41A8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BE06F720();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  void *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BDFB4258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BDFB426C);
}

uint64_t sub_1BDFB426C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1BE06F720();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1BDFB431C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BDFB4330);
}

void *sub_1BDFB4330(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *__n128 result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1BE06F720();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AltCalendarDateStyleModifier(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E1638);
}

uint64_t sub_1BDFB43F8()
{
  uint64_t result = sub_1BE06F720();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BDFB449C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1BE06F720();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 28);
    uint64_t v14 = (uint64_t *)((char *)v7 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t sub_1BDFB45B8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1BE06F720();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

void *sub_1BDFB4650(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1BE06F720();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = *(int *)(a3 + 28);
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1BDFB4718(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BE06F720();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1BDFB47F8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BE06F720();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_1BDFB4890(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BE06F720();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  void *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BDFB4950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BDFB4964);
}

uint64_t sub_1BDFB4964(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1BE06F720();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1BDFB4A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BDFB4A28);
}

void *sub_1BDFB4A28(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1BE06F720();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MonthTextStyleModifier(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E1668);
}

uint64_t sub_1BDFB4AF0()
{
  uint64_t result = sub_1BE06F720();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BDFB4B94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFB4BB0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFB4BCC()
{
  return MEMORY[0x1E4FBB560];
}

uint64_t sub_1BDFB4BD8()
{
  return sub_1BDFB4C20(&qword_1EA0E11A0, (void (*)(uint64_t))type metadata accessor for WeekDayViewModel);
}

uint64_t sub_1BDFB4C20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDFB4C68()
{
  unint64_t result = qword_1EA0E1150;
  if (!qword_1EA0E1150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1150);
  }
  return result;
}

unint64_t sub_1BDFB4CBC()
{
  unint64_t result = qword_1EA0E1180;
  if (!qword_1EA0E1180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1180);
  }
  return result;
}

unint64_t sub_1BDFB4D10()
{
  unint64_t result = qword_1EA0E1168;
  if (!qword_1EA0E1168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1168);
  }
  return result;
}

uint64_t sub_1BDFB4D64@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1BE06F6A0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1BDFB4D98()
{
  return sub_1BE06F6B0();
}

uint64_t sub_1BDFB4DC8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BE06F5A0();
  *a1 = result;
  return result;
}

uint64_t sub_1BDFB4DF4()
{
  return sub_1BE06F5B0();
}

uint64_t sub_1BDFB4E20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v47 - v8;
  uint64_t v10 = type metadata accessor for WeekDayViewModel(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11B8);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_1BDFAC88C(a1, (uint64_t)v16, type metadata accessor for WeekDayViewModel);
  sub_1BDFAC88C(a2, v17, type metadata accessor for WeekDayViewModel);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  if (v19((uint64_t)v16, 1, v18) != 1)
  {
    uint64_t v61 = v7;
    uint64_t v62 = v9;
    uint64_t v64 = v4;
    sub_1BDFAC88C((uint64_t)v16, (uint64_t)v12, type metadata accessor for WeekDayViewModel);
    int v21 = v12[8];
    int v59 = v12[9];
    int v60 = v21;
    int v22 = v12[10];
    int v57 = v12[11];
    int v58 = v22;
    int v23 = v12[12];
    int v24 = v12[13];
    int v25 = v12[14];
    uint64_t v26 = *(int *)(v18 + 160);
    uint64_t v63 = &v12[v26];
    if (v19(v17, 1, v18) != 1)
    {
      int v48 = v24;
      int v49 = v23;
      int v47 = v25;
      uint64_t v27 = *(void *)v12;
      uint64_t v28 = *(void *)v17;
      int v29 = *(unsigned __int8 *)(v17 + 8);
      int v55 = *(unsigned __int8 *)(v17 + 9);
      int v56 = v29;
      int v30 = *(unsigned __int8 *)(v17 + 10);
      int v53 = *(unsigned __int8 *)(v17 + 11);
      int v54 = v30;
      int v31 = *(unsigned __int8 *)(v17 + 12);
      int v51 = *(unsigned __int8 *)(v17 + 13);
      int v52 = v31;
      int v50 = *(unsigned __int8 *)(v17 + 14);
      uint64_t v32 = (char *)(v17 + v26);
      uint64_t v34 = v64;
      uint64_t v33 = v65;
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
      uint64_t v36 = v62;
      v35(v62, v63, v64);
      uint64_t v37 = v61;
      v35(v61, v32, v34);
      if (v27 == v28)
      {
        if (v60 == v56 && v59 == v55 && v58 == v54 && v57 == v53 && v49 == v52 && v48 == v51)
        {
          uint64_t v38 = v64;
          uint64_t v43 = v65;
          uint64_t v45 = v61;
          uint64_t v44 = v62;
          if (v47 == v50)
          {
            char v20 = sub_1BE06EEB0();
            uint64_t v46 = *(void (**)(char *, uint64_t))(v43 + 8);
            v46(v45, v38);
            v46(v44, v38);
            sub_1BDFB6454((uint64_t)v16, type metadata accessor for WeekDayViewModel);
            return v20 & 1;
          }
          uint64_t v39 = *(void (**)(char *, uint64_t))(v65 + 8);
          v39(v61, v64);
          uint64_t v40 = v44;
        }
        else
        {
          uint64_t v38 = v64;
          uint64_t v39 = *(void (**)(char *, uint64_t))(v65 + 8);
          v39(v61, v64);
          uint64_t v40 = v62;
        }
        uint64_t v41 = v38;
      }
      else
      {
        uint64_t v39 = *(void (**)(char *, uint64_t))(v33 + 8);
        v39(v37, v34);
        uint64_t v40 = v36;
        uint64_t v41 = v34;
      }
      v39(v40, v41);
      sub_1BDFB6454((uint64_t)v16, type metadata accessor for WeekDayViewModel);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v64);
LABEL_6:
    sub_1BDF8686C((uint64_t)v16, &qword_1EA0E11B8);
LABEL_18:
    char v20 = 0;
    return v20 & 1;
  }
  if (v19(v17, 1, v18) != 1) {
    goto LABEL_6;
  }
  sub_1BDFB6454((uint64_t)v16, type metadata accessor for WeekDayViewModel);
  char v20 = 1;
  return v20 & 1;
}

uint64_t sub_1BDFB52F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1BE06F6A0();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1BDFB5324()
{
  return sub_1BE06F6B0();
}

unint64_t sub_1BDFB5354()
{
  unint64_t result = qword_1EA0E30D0;
  if (!qword_1EA0E30D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E30B0);
    sub_1BDFB53F4();
    sub_1BDF86964(&qword_1EA0E1430, &qword_1EA0E1438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E30D0);
  }
  return result;
}

unint64_t sub_1BDFB53F4()
{
  unint64_t result = qword_1EA0E30D8;
  if (!qword_1EA0E30D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E30A8);
    sub_1BDFB5494();
    sub_1BDF86964(&qword_1EA0E13E0, &qword_1EA0E13E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E30D8);
  }
  return result;
}

unint64_t sub_1BDFB5494()
{
  unint64_t result = qword_1EA0E30E0;
  if (!qword_1EA0E30E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E30A0);
    sub_1BDF86964(&qword_1EA0E30E8, &qword_1EA0E30C8);
    sub_1BDF86964(&qword_1EA0E1410, &qword_1EA0E1418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E30E0);
  }
  return result;
}

uint64_t sub_1BDFB5558@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BE06F5A0();
  *a1 = result;
  return result;
}

uint64_t sub_1BDFB5584()
{
  return sub_1BE06F5B0();
}

unint64_t sub_1BDFB55B0()
{
  unint64_t result = qword_1EA0E17A0;
  if (!qword_1EA0E17A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E17A8);
    sub_1BDFB5650();
    sub_1BDF86964(&qword_1EA0E1430, &qword_1EA0E1438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E17A0);
  }
  return result;
}

unint64_t sub_1BDFB5650()
{
  unint64_t result = qword_1EA0E1770;
  if (!qword_1EA0E1770)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1778);
    sub_1BDFB56F0();
    sub_1BDF86964(&qword_1EA0E1410, &qword_1EA0E1418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1770);
  }
  return result;
}

unint64_t sub_1BDFB56F0()
{
  unint64_t result = qword_1EA0E16E0;
  if (!qword_1EA0E16E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E16E8);
    sub_1BDF86964(&qword_1EA0E1840, &qword_1EA0E1848);
    sub_1BDF86964(&qword_1EA0E1420, &qword_1EA0E1428);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E16E0);
  }
  return result;
}

unint64_t sub_1BDFB57B4()
{
  unint64_t result = qword_1EA0E1740;
  if (!qword_1EA0E1740)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1748);
    sub_1BDF86964(&qword_1EA0E18C8, &qword_1EA0E18D0);
    sub_1BDF86964(&qword_1EA0E13D0, &qword_1EA0E13D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1740);
  }
  return result;
}

uint64_t objectdestroy_10Tm()
{
  unint64_t v1 = (int *)type metadata accessor for CUIKWeekRow(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v18 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v19 = v0;
  uint64_t v4 = v0 + v3;
  uint64_t v5 = sub_1BE06EEE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v0 + v3, v5);
  uint64_t v8 = v0 + v3 + v1[5];
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v9(v4 + v1[5], 1, v5)) {
    v7(v8, v5);
  }
  uint64_t v10 = v4 + v1[6];
  if (!v9(v10, 1, v5)) {
    v7(v10, v5);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v4 + v1[9])) {
    swift_release();
  }
  uint64_t v11 = v4 + v1[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1BE06F100();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = v4 + v1[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1BE06F500();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = v4 + v1[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_1BE06F2F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  else
  {
    swift_release();
  }

  return MEMORY[0x1F4186498](v19, v3 + v18, v2 | 7);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = type metadata accessor for CUIKWeekLabelRow(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = v0 + v3 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1BE06F100();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v0 + v3 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_1BE06F500();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1BDFB5DC8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

uint64_t sub_1BDFB5E60@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  return sub_1BDFAC464(*(void *)(v1 + 16), a1);
}

uint64_t sub_1BDFB5E6C(uint64_t a1)
{
  return sub_1BDFB5DC8(a1, type metadata accessor for CUIKMonthView, (uint64_t (*)(uint64_t, uint64_t))sub_1BDFAA810);
}

uint64_t objectdestroy_61Tm()
{
  uint64_t v1 = (int *)type metadata accessor for CUIKMonthView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v17 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v4 = v0 + v3;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = v0 + v3 + v1[6];
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  uint64_t v9 = v0 + v3 + v1[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  if (*(void *)(v4 + v1[8])) {
    swift_release();
  }
  swift_release();
  uint64_t v10 = v4 + v1[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1BE06F100();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = v4 + v1[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_1BE06F500();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  uint64_t v14 = v4 + v1[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1688);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1BE06FBC0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, v3 + v17, v2 | 7);
}

uint64_t sub_1BDFB61B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CUIKMonthView(0) - 8);
  uint64_t v6 = (double *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  return sub_1BDFAB634(a1, v6, a2);
}

unint64_t sub_1BDFB6238()
{
  unint64_t result = qword_1EA0E1520;
  if (!qword_1EA0E1520)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1518);
    sub_1BDFB62B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1520);
  }
  return result;
}

unint64_t sub_1BDFB62B4()
{
  unint64_t result = qword_1EA0E14E0;
  if (!qword_1EA0E14E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E14E0);
  }
  return result;
}

uint64_t sub_1BDFB630C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDFAC994(a1, type metadata accessor for CUIKMonthView, &qword_1EA0E16A0, (uint64_t (*)(uint64_t, uint64_t))sub_1BDFA8870, a2);
}

uint64_t sub_1BDFB6344()
{
  type metadata accessor for CUIKMonthView(0);

  return sub_1BDFAB5C4();
}

uint64_t sub_1BDFB63B4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFB6454(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_1BDFB64B4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_1BDFB64C4()
{
  unint64_t result = qword_1EA0E1818;
  if (!qword_1EA0E1818)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1820);
    sub_1BDF86964(&qword_1EA0E18A8, &qword_1EA0E18B0);
    sub_1BDF86964(&qword_1EA0E1898, &qword_1EA0E18A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1818);
  }
  return result;
}

unint64_t sub_1BDFB6584()
{
  unint64_t result = qword_1EA0E16F0;
  if (!qword_1EA0E16F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E16F8);
    sub_1BDFB4C20(&qword_1EA0E1660, (void (*)(uint64_t))type metadata accessor for MonthTextStyleModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E16F0);
  }
  return result;
}

uint64_t sub_1BDFB6630(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BDFB6644()
{
  uint64_t v1 = (int *)type metadata accessor for CUIKWeekRow(0);
  uint64_t v24 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v21 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v23 = sub_1BE06F3F0();
  uint64_t v2 = *(void *)(v23 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v19 = *(void *)(v2 + 64);
  uint64_t v22 = (v24 + 16) & ~v24;
  uint64_t v3 = v0 + v22;
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v0 + v22, v4);
  uint64_t v7 = v0 + v22 + v1[5];
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v8(v7, 1, v4)) {
    v6(v7, v4);
  }
  uint64_t v9 = v3 + v1[6];
  if (!v8(v9, 1, v4)) {
    v6(v9, v4);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v3 + v1[9])) {
    swift_release();
  }
  uint64_t v10 = v3 + v1[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_1BE06F100();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  uint64_t v12 = v3 + v1[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_1BE06F500();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  else
  {
    swift_release();
  }
  uint64_t v14 = v3 + v1[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_1BE06F2F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  }
  else
  {
    swift_release();
  }
  uint64_t v16 = (v22 + v21 + v20) & ~v20;
  unint64_t v17 = (v19 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v16, v23);
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v17 + 8, v24 | v20 | 7);
}

uint64_t sub_1BDFB6A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CUIKWeekRow(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_1BE06F3F0() - 8);
  unint64_t v9 = (v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v2 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1BDFA5D64(a1, v2 + v6, v2 + v9, v10, a2);
}

unint64_t sub_1BDFB6B3C()
{
  unint64_t result = qword_1EA0E19B0;
  if (!qword_1EA0E19B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E19B8);
    sub_1BDFB6C2C(&qword_1EA0E1A80, &qword_1EA0E1A88, (void (*)(void))sub_1BDFB6BF0, (void (*)(void))sub_1BDFB7124);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E19B0);
  }
  return result;
}

uint64_t sub_1BDFB6BF0()
{
  return sub_1BDFB6C2C(&qword_1EA0E1A60, &qword_1EA0E1A68, (void (*)(void))sub_1BDFB6CB4, (void (*)(void))sub_1BDFB6FDC);
}

uint64_t sub_1BDFB6C2C(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDFB6CB4()
{
  unint64_t result = qword_1EA0E1A10;
  if (!qword_1EA0E1A10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1A18);
    sub_1BDFB6D54();
    sub_1BDF86964(&qword_1EA0E1380, &qword_1EA0E1388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1A10);
  }
  return result;
}

unint64_t sub_1BDFB6D54()
{
  unint64_t result = qword_1EA0E1A00;
  if (!qword_1EA0E1A00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1A08);
    sub_1BDFB6DF4();
    sub_1BDF86964(&qword_1EA0E13F0, &qword_1EA0E13F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1A00);
  }
  return result;
}

unint64_t sub_1BDFB6DF4()
{
  unint64_t result = qword_1EA0E19E8;
  if (!qword_1EA0E19E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E19F0);
    sub_1BDFB6EA0();
    sub_1BDFB4C20(&qword_1EA0E1440, MEMORY[0x1E4F3DF58]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E19E8);
  }
  return result;
}

unint64_t sub_1BDFB6EA0()
{
  unint64_t result = qword_1EA0E1320;
  if (!qword_1EA0E1320)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1328);
    sub_1BDFB6F40();
    sub_1BDF86964(&qword_1EA0E1430, &qword_1EA0E1438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1320);
  }
  return result;
}

unint64_t sub_1BDFB6F40()
{
  unint64_t result = qword_1EA0E12F0;
  if (!qword_1EA0E12F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E12F8);
    sub_1BDFB80E8(&qword_1EA0E1288, &qword_1EA0E1290, &qword_1EA0E1410, &qword_1EA0E1418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E12F0);
  }
  return result;
}

unint64_t sub_1BDFB6FDC()
{
  unint64_t result = qword_1EA0E19D8;
  if (!qword_1EA0E19D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E19E0);
    sub_1BDFB70A8(&qword_1EA0E12D0, &qword_1EA0E12D8, (void (*)(void))sub_1BDFAC6E4);
    sub_1BDF86964(&qword_1EA0E1A38, &qword_1EA0E1A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E19D8);
  }
  return result;
}

uint64_t sub_1BDFB70A8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDFB7124()
{
  return sub_1BDFB6C2C(&qword_1EA0E1A70, &qword_1EA0E1A78, (void (*)(void))sub_1BDFB7160, (void (*)(void))sub_1BDFB6D54);
}

unint64_t sub_1BDFB7160()
{
  unint64_t result = qword_1EA0E1A20;
  if (!qword_1EA0E1A20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1A28);
    sub_1BDFB6D54();
    sub_1BDF86964(&qword_1EA0E1370, &qword_1EA0E1378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1A20);
  }
  return result;
}

uint64_t sub_1BDFB7200()
{
  uint64_t v1 = (int *)type metadata accessor for CUIKWeekRow(0);
  uint64_t v24 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = (v24 + 16) & ~v24;
  uint64_t v3 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v4 = *(void *)(type metadata accessor for WeekDayViewModel(0) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v23 = *(void *)(v4 + 64);
  uint64_t v6 = v0 + v2;
  uint64_t v7 = sub_1BE06EEE0();
  uint64_t v8 = *(void *)(v7 - 8);
  int v25 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v25(v0 + v2, v7);
  uint64_t v9 = v0 + v2 + v1[5];
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v10(v9, 1, v7)) {
    v25(v9, v7);
  }
  uint64_t v11 = v6 + v1[6];
  if (!v10(v11, 1, v7)) {
    v25(v11, v7);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v6 + v1[9])) {
    swift_release();
  }
  uint64_t v12 = v3 + v5;
  uint64_t v13 = v6 + v1[10];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = sub_1BE06F100();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = v2 + v12;
  uint64_t v16 = v6 + v1[11];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = sub_1BE06F500();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  }
  else
  {
    swift_release();
  }
  uint64_t v18 = v15 & ~v5;
  uint64_t v19 = v6 + v1[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_1BE06F2F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  }
  else
  {
    swift_release();
  }
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v0 + v18, 1, v21)) {
    v25(v0 + v18 + *(int *)(v21 + 160), v7);
  }

  return MEMORY[0x1F4186498](v0, v18 + v23, v24 | v5 | 7);
}

uint64_t sub_1BDFB7614()
{
  uint64_t v1 = *(void *)(type metadata accessor for CUIKWeekRow(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for WeekDayViewModel(0) - 8);
  uint64_t v5 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1BDFA60C8(v0 + v2, v5);
}

uint64_t sub_1BDFB76E0(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_1BDFB76F0()
{
  unint64_t result = qword_1EA0E1248;
  if (!qword_1EA0E1248)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1250);
    sub_1BDF86964(&qword_1EA0E11C0, &qword_1EA0E11C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1248);
  }
  return result;
}

uint64_t sub_1BDFB7790(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFB7830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = type metadata accessor for WeekDayViewModel(0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFAC88C(v5, (uint64_t)v13, type metadata accessor for WeekDayViewModel);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E1908);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14) == 1) {
    return sub_1BE06FFD0();
  }
  int v16 = v13[10];
  uint64_t v17 = &v13[*(int *)(v14 + 160)];
  if (v16 == 1 && (v13[11] & 1) == 0)
  {
    uint64_t v18 = sub_1BDF9DF2C(a1, a2);
LABEL_11:
    uint64_t v15 = v18;
    uint64_t v19 = sub_1BE06EEE0();
    (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);
    return v15;
  }
  if (!(v16 & 1 | ((v13[9] & 1) == 0) | v13[11] & 1))
  {
    uint64_t v18 = sub_1BDFA0884(a1);
    goto LABEL_11;
  }
  if (v13[14])
  {
    if (a5)
    {
      uint64_t v15 = a5;
    }
    else
    {
      if (qword_1EA0E2228 != -1) {
        swift_once();
      }
      uint64_t v15 = qword_1EA0F6B70;
      swift_retain();
    }
    uint64_t v21 = sub_1BE06EEE0();
    uint64_t v22 = *(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8);
    swift_retain();
    v22(v17, v21);
  }
  else if (v13[8])
  {
    if (a4) {
      uint64_t v15 = a4;
    }
    else {
      uint64_t v15 = sub_1BE070020();
    }
    uint64_t v23 = sub_1BE06EEE0();
    uint64_t v24 = *(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8);
    swift_retain();
    v24(v17, v23);
  }
  else
  {
    if (a3) {
      uint64_t v15 = a3;
    }
    else {
      uint64_t v15 = sub_1BE070010();
    }
    uint64_t v25 = sub_1BE06EEE0();
    uint64_t v26 = *(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8);
    swift_retain();
    v26(v17, v25);
  }
  return v15;
}

uint64_t sub_1BDFB7B1C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BDFB7B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeekDayViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFB7BBC@<X0>(char *a1@<X8>)
{
  return sub_1BDFA35D4(*(void (**)(uint64_t))(v1 + 48), *(void *)(v1 + 24), *(void *)(v1 + 40), a1);
}

uint64_t sub_1BDFB7BCC()
{
  uint64_t v1 = type metadata accessor for CUIKWeekLabelRow(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v16 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v4 = sub_1BE06F3F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = v0 + v3 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1BE06F100();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = v0 + v3 + *(int *)(v1 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11F0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_1BE06F500();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = (v3 + v16 + v6) & ~v6;
  uint64_t v14 = v13 + v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v13, v4);

  return MEMORY[0x1F4186498](v0, v14, v2 | v6 | 7);
}

uint64_t sub_1BDFB7E78@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CUIKWeekLabelRow(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_1BE06F3F0() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_1BDFA27BC(a1, v2 + v6, v9, a2);
}

unint64_t sub_1BDFB7F5C()
{
  unint64_t result = qword_1EA0E1340;
  if (!qword_1EA0E1340)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1348);
    sub_1BDFB70A8(&qword_1EA0E1330, &qword_1EA0E1338, (void (*)(void))sub_1BDFB8028);
    sub_1BDF86964(&qword_1EA0E1430, &qword_1EA0E1438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1340);
  }
  return result;
}

unint64_t sub_1BDFB8028()
{
  unint64_t result = qword_1EA0E1300;
  if (!qword_1EA0E1300)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1308);
    sub_1BDFB80E8(&qword_1EA0E1298, &qword_1EA0E12A0, &qword_1EA0E1420, &qword_1EA0E1428);
    sub_1BDF86964(&qword_1EA0E1410, &qword_1EA0E1418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1300);
  }
  return result;
}

uint64_t sub_1BDFB80E8(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    swift_getOpaqueTypeConformance2();
    sub_1BDF86964(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDFB81BC()
{
  unint64_t result = qword_1EA0E1138;
  if (!qword_1EA0E1138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1138);
  }
  return result;
}

uint64_t sub_1BDFB8210(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDFB8274(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6564646948 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C6269736956 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1BDFB8360(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F706D6F43796164 && a2 == 0xEC000000746E656ELL;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656B6565576E69 && a2 == 0xE900000000000064 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7961646F547369 && a2 == 0xE700000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7463656C65537369 && a2 == 0xEA00000000006465 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x686563616C507369 && a2 == 0xED00007265646C6FLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BE08C110 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BE08C130 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x747865546D6964 && a2 == 0xE700000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

unsigned char *storeEnumTagSinglePayload for WeekDayViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDFB8810);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeekDayViewModel.CodingKeys()
{
  return &type metadata for WeekDayViewModel.CodingKeys;
}

ValueMetadata *type metadata accessor for WeekDayViewModel.HiddenCodingKeys()
{
  return &type metadata for WeekDayViewModel.HiddenCodingKeys;
}

uint64_t getEnumTagSinglePayload for WeekDayViewModel.VisibleCodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WeekDayViewModel.VisibleCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDFB89B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeekDayViewModel.VisibleCodingKeys()
{
  return &type metadata for WeekDayViewModel.VisibleCodingKeys;
}

unint64_t sub_1BDFB89F0()
{
  unint64_t result = qword_1EA0E3148;
  if (!qword_1EA0E3148)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E30F0);
    sub_1BDF86964(&qword_1EA0E3150, &qword_1EA0E30C0);
    sub_1BDF86964(&qword_1EA0E13D0, &qword_1EA0E13D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3148);
  }
  return result;
}

uint64_t sub_1BDFB8AB4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1BDFB8B14()
{
  unint64_t result = qword_1EA0E3158;
  if (!qword_1EA0E3158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3158);
  }
  return result;
}

unint64_t sub_1BDFB8B6C()
{
  unint64_t result = qword_1EA0E3160;
  if (!qword_1EA0E3160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3160);
  }
  return result;
}

unint64_t sub_1BDFB8BC4()
{
  unint64_t result = qword_1EA0E1178;
  if (!qword_1EA0E1178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1178);
  }
  return result;
}

unint64_t sub_1BDFB8C1C()
{
  unint64_t result = qword_1EA0E1170;
  if (!qword_1EA0E1170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1170);
  }
  return result;
}

unint64_t sub_1BDFB8C74()
{
  unint64_t result = qword_1EA0E1190;
  if (!qword_1EA0E1190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1190);
  }
  return result;
}

unint64_t sub_1BDFB8CCC()
{
  unint64_t result = qword_1EA0E1188;
  if (!qword_1EA0E1188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1188);
  }
  return result;
}

unint64_t sub_1BDFB8D24()
{
  unint64_t result = qword_1EA0E1160;
  if (!qword_1EA0E1160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1160);
  }
  return result;
}

unint64_t sub_1BDFB8D7C()
{
  unint64_t result = qword_1EA0E1158;
  if (!qword_1EA0E1158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1158);
  }
  return result;
}

void sub_1BDFB8DDC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E31F0);
  MEMORY[0x1C1888A00](&v16, v3);
  if (v16 == 1)
  {
    sub_1BDFB9820();
    long long v14 = *v1;
    uint64_t v15 = *((void *)v1 + 2);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3200);
    MEMORY[0x1C1888A00](&v16, v4);
    uint64_t v5 = (void *)sub_1BE070970();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3208);
    sub_1BE06FA70();
    unsigned int v6 = (void *)v14;
    id v7 = objc_msgSend(a1, sel_view);
    if (v7)
    {
      int v8 = v7;
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1628]), sel_init);
      objc_msgSend(v9, sel_setSelectedColor_, v5);
      objc_msgSend(v9, sel_setSupportsAlpha_, 0);
      objc_msgSend(v9, sel_setDelegate_, (void)v14);
      objc_msgSend(v9, sel_setModalPresentationStyle_, 7);
      id v10 = objc_msgSend(v9, sel_popoverPresentationController);
      if (v10)
      {
        uint64_t v11 = v10;
        objc_msgSend(v10, sel_setSourceView_, v8);
      }
      id v12 = objc_msgSend(v9, sel_popoverPresentationController, v14, v15);
      if (v12)
      {
        uint64_t v13 = v12;
        objc_msgSend(v12, sel_setPermittedArrowDirections_, 12);
      }
      objc_msgSend(a1, sel_presentViewController_animated_completion_, v9, 1, 0);
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_1BDFB914C()
{
  return sub_1BDFB94BC(type metadata accessor for ColorPickerView.ColorPickerCoordinator);
}

uint64_t type metadata accessor for ColorPickerView.ColorPickerCoordinator()
{
  return self;
}

id sub_1BDFB91F4()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for ColorPickerViewController());

  return objc_msgSend(v0, sel_init);
}

id sub_1BDFB9234@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  char v8 = *((unsigned char *)v1 + 40);
  id v9 = (objc_class *)type metadata accessor for ColorPickerView.ColorPickerCoordinator();
  id v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = &v10[OBJC_IVAR____TtCV13CalendarUIKit15ColorPickerView22ColorPickerCoordinator_colorPickerView];
  *(void *)uint64_t v11 = v3;
  *((void *)v11 + 1) = v4;
  *((void *)v11 + 2) = v5;
  *((void *)v11 + 3) = v6;
  *((void *)v11 + 4) = v7;
  v11[40] = v8;
  v13.receiver = v10;
  v13.super_class = v9;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id result = objc_msgSendSuper2(&v13, sel_init);
  *a1 = result;
  return result;
}

uint64_t sub_1BDFB92F0()
{
  return sub_1BE06FA00();
}

uint64_t sub_1BDFB932C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BDFB9860();

  return MEMORY[0x1F40FAB68](a1, a2, a3, v6);
}

uint64_t sub_1BDFB9390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BDFB9860();

  return MEMORY[0x1F40FAB30](a1, a2, a3, v6);
}

void sub_1BDFB93F4()
{
}

id sub_1BDFB94A4()
{
  return sub_1BDFB94BC(type metadata accessor for ColorPickerViewController);
}

id sub_1BDFB94BC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for ColorPickerViewController()
{
  return self;
}

uint64_t destroy for ColorPickerView()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ColorPickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ColorPickerView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ColorPickerView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorPickerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorPickerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorPickerView()
{
  return &type metadata for ColorPickerView;
}

uint64_t sub_1BDFB97BC()
{
  return MEMORY[0x1E4F3F160];
}

unint64_t sub_1BDFB97CC()
{
  unint64_t result = qword_1EA0E31E8;
  if (!qword_1EA0E31E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E31E8);
  }
  return result;
}

unint64_t sub_1BDFB9820()
{
  unint64_t result = qword_1EA0E31F8;
  if (!qword_1EA0E31F8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA0E31F8);
  }
  return result;
}

unint64_t sub_1BDFB9860()
{
  unint64_t result = qword_1EA0E3210;
  if (!qword_1EA0E3210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3210);
  }
  return result;
}

uint64_t sub_1BDFB98B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>, double a8@<D0>)
{
  int v40 = a6;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v33 = a1;
  uint64_t v12 = sub_1BE06EEE0();
  uint64_t v36 = *(void *)(v12 - 8);
  uint64_t v37 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v35 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v34 = (char *)&v33 - v15;
  uint64_t v16 = (int *)type metadata accessor for TimeAndDateView();
  uint64_t v17 = a7 + v16[7];
  *(void *)uint64_t v17 = swift_getKeyPath();
  *(unsigned char *)(v17 + 8) = 0;
  uint64_t v18 = a7 + v16[8];
  LOBYTE(v44) = 0;
  sub_1BE070100();
  uint64_t v19 = v42;
  *(unsigned char *)uint64_t v18 = v41;
  *(void *)(v18 + 8) = v19;
  uint64_t v20 = v16[10];
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C20]), sel_init);
  objc_msgSend(v21, sel_setDateStyle_, 4);
  objc_msgSend(v21, sel_setTimeStyle_, 0);
  *(void *)(a7 + v20) = v21;
  uint64_t v22 = v16[11];
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C20]), sel_init);
  objc_msgSend(v23, sel_setDateStyle_, 4);
  objc_msgSend(v23, sel_setTimeStyle_, 1);
  *(void *)(a7 + v22) = v23;
  uint64_t v24 = v33;
  sub_1BDF86808(v33, a7, &qword_1EA0E2C48);
  uint64_t v25 = a7 + v16[5];
  *(void *)uint64_t v25 = a2;
  *(void *)(v25 + 8) = a3;
  *(double *)(v25 + 16) = a8;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  double v43 = a8;
  swift_retain();
  swift_retain();
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3220);
  MEMORY[0x1C1888A00](&v44, v26);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48);
  MEMORY[0x1C1888A00](v27);
  uint64_t v28 = v34;
  sub_1BE06EE80();
  swift_release();
  swift_release();
  sub_1BDF8686C(v24, &qword_1EA0E2C48);
  uint64_t v29 = a7 + v16[9];
  *(void *)(v29 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228) + 28)) = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v29, v28, v37);
  uint64_t v31 = a7 + v16[6];
  uint64_t v32 = v39;
  *(void *)uint64_t v31 = v38;
  *(void *)(v31 + 8) = v32;
  *(unsigned char *)(v31 + 16) = v40;
  return result;
}

uint64_t type metadata accessor for TimeAndDateView()
{
  uint64_t result = qword_1EA0E3230;
  if (!qword_1EA0E3230) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1BDFB9BE0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48) + 32);
    id v9 = (char *)a1 + v8;
    id v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1BE06EEE0();
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v39(v9, v10, v11);
    uint64_t v12 = a3[5];
    uint64_t v13 = a3[6];
    uint64_t v14 = (uint64_t *)((char *)a1 + v12);
    uint64_t v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    void *v14 = *v15;
    v14[1] = v16;
    v14[2] = v15[2];
    uint64_t v17 = (char *)a1 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = *((void *)v18 + 1);
    *(void *)uint64_t v17 = *(void *)v18;
    *((void *)v17 + 1) = v19;
    v17[16] = v18[16];
    uint64_t v20 = a3[7];
    id v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    uint64_t v23 = *(void *)v22;
    char v24 = v22[8];
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1BDF8A504(v23, v24);
    *(void *)id v21 = v23;
    v21[8] = v24;
    uint64_t v25 = a3[8];
    uint64_t v26 = a3[9];
    uint64_t v27 = (char *)a1 + v25;
    uint64_t v28 = (char *)a2 + v25;
    *uint64_t v27 = *v28;
    *((void *)v27 + 1) = *((void *)v28 + 1);
    uint64_t v29 = (char *)a1 + v26;
    int v30 = (char *)a2 + v26;
    swift_retain();
    v39(v29, v30, v11);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
    *(void *)&v29[*(int *)(v31 + 28)] = *(void *)&v30[*(int *)(v31 + 28)];
    uint64_t v32 = a3[10];
    uint64_t v33 = a3[11];
    uint64_t v34 = *(void **)((char *)a2 + v32);
    *(uint64_t *)((char *)a1 + v32) = (uint64_t)v34;
    uint64_t v35 = *(void **)((char *)a2 + v33);
    *(uint64_t *)((char *)a1 + v33) = (uint64_t)v35;
    swift_retain();
    id v36 = v34;
    id v37 = v35;
  }
  return a1;
}

void sub_1BDFB9DE8(uint64_t a1, int *a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48) + 32);
  uint64_t v5 = sub_1BE06EEE0();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BDF8A570(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  swift_release();
  v6(a1 + a2[9], v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
  swift_release();

  uint64_t v7 = *(void **)(a1 + a2[11]);
}

void *sub_1BDFB9F28(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48) + 32);
  uint64_t v8 = (char *)a1 + v7;
  id v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1BE06EEE0();
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v38(v8, v9, v10);
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  v13[2] = v14[2];
  uint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  v16[16] = v17[16];
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  id v21 = (char *)a2 + v19;
  uint64_t v22 = *(void *)v21;
  char v23 = v21[8];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BDF8A504(v22, v23);
  *(void *)uint64_t v20 = v22;
  v20[8] = v23;
  uint64_t v24 = a3[8];
  uint64_t v25 = a3[9];
  uint64_t v26 = (char *)a1 + v24;
  uint64_t v27 = (char *)a2 + v24;
  *uint64_t v26 = *v27;
  *((void *)v26 + 1) = *((void *)v27 + 1);
  uint64_t v28 = (char *)a1 + v25;
  uint64_t v29 = (char *)a2 + v25;
  swift_retain();
  v38(v28, v29, v10);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
  *(void *)&v28[*(int *)(v30 + 28)] = *(void *)&v29[*(int *)(v30 + 28)];
  uint64_t v31 = a3[10];
  uint64_t v32 = a3[11];
  uint64_t v33 = *(void **)((char *)a2 + v31);
  *(void *)((char *)a1 + v31) = v33;
  uint64_t v34 = *(void **)((char *)a2 + v32);
  *(void *)((char *)a1 + v32) = v34;
  swift_retain();
  id v35 = v33;
  id v36 = v34;
  return a1;
}

char *sub_1BDFBA0E0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48) + 32);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1BE06EEE0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  swift_retain();
  swift_release();
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_retain();
  swift_release();
  *((void *)v12 + 2) = *((void *)v13 + 2);
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_retain();
  swift_release();
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_retain();
  swift_release();
  v15[16] = v16[16];
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  LOBYTE(v15) = v19[8];
  sub_1BDF8A504(*(void *)v19, (char)v15);
  uint64_t v21 = *(void *)v18;
  char v22 = v18[8];
  *(void *)uint64_t v18 = v20;
  v18[8] = (char)v15;
  sub_1BDF8A570(v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *uint64_t v24 = *v25;
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_retain();
  swift_release();
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  v10(&a1[v26], &a2[v26], v9);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
  *(void *)&v27[*(int *)(v29 + 28)] = *(void *)&v28[*(int *)(v29 + 28)];
  swift_retain();
  swift_release();
  uint64_t v30 = a3[10];
  uint64_t v31 = *(void **)&a2[v30];
  uint64_t v32 = *(void **)&a1[v30];
  *(void *)&a1[v30] = v31;
  id v33 = v31;

  uint64_t v34 = a3[11];
  id v35 = *(void **)&a2[v34];
  id v36 = *(void **)&a1[v34];
  *(void *)&a1[v34] = v35;
  id v37 = v35;

  return a1;
}

char *sub_1BDFBA318(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48) + 32);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1BE06EEE0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[5];
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((void *)v14 + 2) = *((void *)v15 + 2);
  uint64_t v16 = &a1[v13];
  uint64_t v17 = &a2[v13];
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  v16[16] = v17[16];
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v18];
  uint64_t v21 = &a2[v18];
  *(void *)uint64_t v20 = *(void *)v21;
  long long v22 = *(_OWORD *)&a2[v19];
  v20[8] = v21[8];
  *(_OWORD *)&a1[v19] = v22;
  uint64_t v23 = a3[9];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  v11(&a1[v23], &a2[v23], v10);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
  *(void *)&v24[*(int *)(v26 + 28)] = *(void *)&v25[*(int *)(v26 + 28)];
  uint64_t v27 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  *(void *)&a1[v27] = *(void *)&a2[v27];
  return a1;
}

char *sub_1BDFBA464(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_release();
  uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48) + 32);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1BE06EEE0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  swift_release();
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_release();
  *((void *)v12 + 2) = *((void *)v13 + 2);
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  swift_release();
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_release();
  v15[16] = v16[16];
  uint64_t v17 = a3[7];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  LOBYTE(v19) = v19[8];
  uint64_t v21 = *(void *)v18;
  char v22 = v18[8];
  *(void *)uint64_t v18 = v20;
  v18[8] = (char)v19;
  sub_1BDF8A570(v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *uint64_t v24 = *v25;
  *((void *)v24 + 1) = *((void *)v25 + 1);
  swift_release();
  uint64_t v26 = a3[9];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  v10(&a1[v26], &a2[v26], v9);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
  *(void *)&v27[*(int *)(v29 + 28)] = *(void *)&v28[*(int *)(v29 + 28)];
  swift_release();
  uint64_t v30 = a3[10];
  uint64_t v31 = *(void **)&a1[v30];
  *(void *)&a1[v30] = *(void *)&a2[v30];

  uint64_t v32 = a3[11];
  id v33 = *(void **)&a1[v32];
  *(void *)&a1[v32] = *(void *)&a2[v32];

  return a1;
}

uint64_t sub_1BDFBA640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BDFBA654);
}

uint64_t sub_1BDFBA654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 36);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1BDFBA78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BDFBA7A0);
}

uint64_t sub_1BDFBA7A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 36);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1BDFBA8D8()
{
  sub_1BDFBAA10(319, &qword_1EA0E3240, MEMORY[0x1E4F3EE20]);
  if (v0 <= 0x3F)
  {
    sub_1BDFBAA10(319, &qword_1EA0E3248, MEMORY[0x1E4F3ECC0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1BDFBAA10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1BE06EEE0();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1BDFBAA70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFBAA8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = sub_1BE06EEE0();
  uint64_t v42 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1BE06F790();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32F0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3288);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for TimeAndDateView();
  uint64_t v14 = a1 + v13[8];
  char v15 = *(unsigned char *)v14;
  uint64_t v16 = *(void *)(v14 + 8);
  LOBYTE(v50) = v15;
  *((void *)&v50 + 1) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32B8);
  sub_1BE070110();
  if (v44 == 1)
  {
    *(void *)uint64_t v12 = sub_1BE06F7D0();
    *((void *)v12 + 1) = 0;
    unsigned char v12[16] = 1;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32F8);
    sub_1BDFBB07C(a1, &v12[*(int *)(v17 + 44)]);
    sub_1BDF86808((uint64_t)v12, (uint64_t)v9, &qword_1EA0E3288);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3298);
    sub_1BDF86964(&qword_1EA0E3280, &qword_1EA0E3288);
    sub_1BDFBD418();
    sub_1BE06F8E0();
    return sub_1BDF8686C((uint64_t)v12, &qword_1EA0E3288);
  }
  else
  {
    uint64_t v40 = v7;
    uint64_t v41 = v10;
    uint64_t v19 = a1 + v13[6];
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    LOBYTE(v19) = *(unsigned char *)(v19 + 16);
    *(void *)&long long v50 = v20;
    *((void *)&v50 + 1) = v21;
    LOBYTE(v51) = v19;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E31F0);
    MEMORY[0x1C1888A00](&v44, v22);
    if (v44 == 1)
    {
      uint64_t v23 = sub_1BE06F7E0();
      sub_1BDFBC5F0(a1, (uint64_t)&v50);
      uint64_t v44 = v23;
      long long v45 = xmmword_1BE07CCF0;
      *(_OWORD *)uint64_t v46 = v50;
      *(void *)&v46[16] = v51;
      *(void *)&v47[0] = *((void *)&v51 + 1);
      *(_OWORD *)((char *)v47 + 8) = v52;
      *((void *)&v47[1] + 1) = v53;
      uint64_t v48 = *((void *)&v53 + 1);
      char v49 = 0;
    }
    else
    {
      sub_1BE06F780();
      sub_1BE06F770();
      id v39 = *(id *)(a1 + v13[11]);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48);
      MEMORY[0x1C1888A00](v24);
      uint64_t v25 = (void *)sub_1BE06EEA0();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v42 + 8);
      v26(v5, v3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
      sub_1BE070110();
      uint64_t v27 = (void *)sub_1BE06EEA0();
      v26(v5, v3);
      id v28 = objc_msgSend(v39, sel_stringFromDate_toDate_, v25, v27);

      sub_1BE070500();
      sub_1BE06F760();
      swift_bridgeObjectRelease();
      sub_1BE06F770();
      sub_1BE06F7B0();
      uint64_t v44 = sub_1BE06FD20();
      *(void *)&long long v45 = v29;
      *((void *)&v45 + 1) = v30 & 1;
      *(void *)uint64_t v46 = v31;
      *(_OWORD *)&v46[8] = 0u;
      memset(v47, 0, sizeof(v47));
      uint64_t v48 = 0;
      char v49 = 1;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32A8);
    sub_1BDF86964(&qword_1EA0E32A0, &qword_1EA0E32A8);
    sub_1BE06F8E0();
    long long v32 = v51;
    long long v33 = v52;
    long long v34 = v53;
    long long v35 = v54;
    uint64_t v36 = v55;
    char v37 = v56;
    *(_OWORD *)uint64_t v9 = v50;
    *((_OWORD *)v9 + 1) = v32;
    *((_OWORD *)v9 + 2) = v33;
    *((_OWORD *)v9 + 3) = v34;
    *((_OWORD *)v9 + 4) = v35;
    *((void *)v9 + 10) = v36;
    v9[88] = v37;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3298);
    sub_1BDF86964(&qword_1EA0E3280, &qword_1EA0E3288);
    sub_1BDFBD418();
    return sub_1BE06F8E0();
  }
}

uint64_t sub_1BDFBB07C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = type metadata accessor for TimeAndDateView();
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v62 = *(void *)(v63 + 64);
  uint64_t v4 = v3 - 8;
  uint64_t v61 = v3 - 8;
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v68 = (uint64_t)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1BE06EEE0();
  uint64_t v76 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3300);
  MEMORY[0x1F4188790](v58);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3308);
  uint64_t v73 = *(void *)(v64 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v64);
  uint64_t v66 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  unint64_t v70 = (char *)&v53 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v75 = (char *)&v53 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v77 = (char *)&v53 - v16;
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3310);
  uint64_t v74 = *(void *)(v72 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v72);
  uint64_t v69 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v71 = (char *)&v53 - v19;
  sub_1BE06F7A0();
  uint64_t v20 = *(int *)(v4 + 32);
  uint64_t v21 = a1;
  uint64_t v59 = a1;
  uint64_t v22 = (uint64_t *)(a1 + v20);
  uint64_t v23 = *v22;
  uint64_t v24 = v22[1];
  LOBYTE(v22) = *((unsigned char *)v22 + 16);
  uint64_t v78 = v23;
  uint64_t v79 = v24;
  char v80 = (char)v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E31F0);
  sub_1BE070230();
  sub_1BE0701C0();
  *(void *)uint64_t v9 = sub_1BE06F740();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3318);
  sub_1BDFBB864(a1, &v9[*(int *)(v60 + 44)]);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48);
  MEMORY[0x1C1888A00](v25);
  uint64_t v26 = v68;
  sub_1BDF8A5D4(v21, v68);
  uint64_t v27 = *(unsigned __int8 *)(v63 + 80);
  uint64_t v28 = (v27 + 16) & ~v27;
  uint64_t v63 = v28 + v62;
  uint64_t v62 = v27 | 7;
  uint64_t v29 = swift_allocObject();
  sub_1BDFBD4BC(v26, v29 + v28);
  uint64_t v57 = sub_1BDF86964(&qword_1EA0E3320, &qword_1EA0E3300);
  unint64_t v56 = sub_1BDFBD7B4();
  char v30 = v75;
  uint64_t v31 = v65;
  sub_1BE06FF20();
  swift_release();
  long long v32 = *(void (**)(char *, uint64_t))(v76 + 8);
  v76 += 8;
  uint64_t v55 = v32;
  v32(v7, v31);
  sub_1BDF8686C((uint64_t)v9, &qword_1EA0E3300);
  long long v54 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
  uint64_t v33 = v64;
  v54(v77, v30, v64);
  *(void *)uint64_t v9 = sub_1BE06F740();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v34 = v59;
  sub_1BDFBBEF4(v59, &v9[*(int *)(v60 + 44)]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
  sub_1BE070110();
  uint64_t v35 = v68;
  sub_1BDF8A5D4(v34, v68);
  uint64_t v36 = swift_allocObject();
  sub_1BDFBD4BC(v35, v36 + v28);
  char v37 = v70;
  sub_1BE06FF20();
  swift_release();
  v55(v7, v31);
  sub_1BDF8686C((uint64_t)v9, &qword_1EA0E3300);
  uint64_t v38 = v75;
  id v39 = v37;
  v54(v75, v37, v33);
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v41 = v69;
  uint64_t v42 = v72;
  v40(v69, v71, v72);
  uint64_t v43 = v73;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v73 + 16);
  v44(v39, v77, v33);
  long long v45 = v66;
  v44(v66, v38, v33);
  uint64_t v46 = v67;
  v40(v67, v41, v42);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3330);
  uint64_t v48 = v70;
  v44(&v46[*(int *)(v47 + 48)], v70, v33);
  v44(&v46[*(int *)(v47 + 64)], v45, v33);
  char v49 = *(void (**)(char *, uint64_t))(v43 + 8);
  v49(v75, v33);
  v49(v77, v33);
  long long v50 = *(void (**)(char *, uint64_t))(v74 + 8);
  uint64_t v51 = v72;
  v50(v71, v72);
  v49(v45, v33);
  v49(v48, v33);
  return ((uint64_t (*)(char *, uint64_t))v50)(v69, v51);
}

uint64_t sub_1BDFBB864@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  long long v45 = a2;
  uint64_t v46 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3338);
  uint64_t v42 = *(void *)(v2 - 8);
  uint64_t v43 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v38 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3340);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v44 = (uint64_t)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v41 = (char *)v37 - v7;
  uint64_t v8 = sub_1BE06F910();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48);
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3350);
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v37 - v14;
  sub_1BE06F7A0();
  v37[1] = v9;
  uint64_t v16 = v46;
  sub_1BE070230();
  sub_1BE06F900();
  uint64_t v40 = v15;
  sub_1BE06F2B0();
  uint64_t v17 = (uint64_t *)(v16 + *(int *)(type metadata accessor for TimeAndDateView() + 24));
  uint64_t v18 = *v17;
  uint64_t v19 = v17[1];
  LOBYTE(v17) = *((unsigned char *)v17 + 16);
  uint64_t v47 = v18;
  uint64_t v48 = v19;
  char v49 = (char)v17;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E31F0);
  MEMORY[0x1C1888A00](&v50, v20);
  if (v50)
  {
    uint64_t v21 = 1;
    uint64_t v23 = v42;
    uint64_t v22 = v43;
    uint64_t v24 = (uint64_t)v41;
    uint64_t v25 = v39;
  }
  else
  {
    sub_1BE06F7A0();
    sub_1BE070230();
    sub_1BE06F8F0();
    sub_1BE06F2B0();
    sub_1BDF86964(&qword_1EA0E3358, &qword_1EA0E3350);
    uint64_t v26 = v38;
    sub_1BE06FDC0();
    uint64_t v25 = v39;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v10);
    uint64_t v24 = (uint64_t)v41;
    uint64_t v27 = v42;
    uint64_t v28 = v26;
    uint64_t v29 = v43;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v41, v28, v43);
    uint64_t v21 = 0;
    uint64_t v22 = v29;
    uint64_t v23 = v27;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(v24, v21, 1, v22);
  char v30 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  uint64_t v31 = v40;
  v30(v13, v40, v10);
  uint64_t v32 = v44;
  sub_1BDF86808(v24, v44, &qword_1EA0E3340);
  uint64_t v33 = v45;
  v30(v45, v13, v10);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E3360);
  sub_1BDF86808(v32, (uint64_t)&v33[*(int *)(v34 + 48)], &qword_1EA0E3340);
  sub_1BDF8686C(v24, &qword_1EA0E3340);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v25 + 8);
  v35(v31, v10);
  sub_1BDF8686C(v32, &qword_1EA0E3340);
  return ((uint64_t (*)(char *, uint64_t))v35)(v13, v10);
}

uint64_t sub_1BDFBBD48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1BE06EEE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v18 - v10;
  uint64_t v12 = (void *)(a3 + *(int *)(type metadata accessor for TimeAndDateView() + 20));
  uint64_t v13 = v12[1];
  uint64_t v14 = v12[2];
  v18[0] = *v12;
  v18[1] = v13;
  v18[2] = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3220);
  MEMORY[0x1C1888A00](&v19, v15);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16(v9, a2, v5);
  sub_1BE06EE80();
  v16(v9, (uint64_t)v11, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
  sub_1BE070120();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
}

uint64_t sub_1BDFBBEF4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3338);
  uint64_t v49 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  v42[0] = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3340);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v45 = (uint64_t)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v50 = (char *)v42 - v7;
  uint64_t v8 = sub_1BE06F910();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3348);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48);
  MEMORY[0x1F4188790](v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3350);
  uint64_t v48 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v47 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v42 - v16;
  uint64_t v18 = sub_1BE06F7A0();
  uint64_t v53 = v19;
  long long v54 = (char *)v18;
  uint64_t v52 = v20;
  uint64_t v21 = type metadata accessor for TimeAndDateView();
  uint64_t v22 = a1 + *(int *)(v21 + 36);
  v42[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
  v42[3] = v22;
  sub_1BE070130();
  uint64_t v43 = v12;
  MEMORY[0x1C1888A00](v12);
  sub_1BE06EEE0();
  v42[1] = sub_1BDFBD7B4();
  uint64_t result = sub_1BE070440();
  if (result)
  {
    sub_1BE06F900();
    uint64_t v44 = v17;
    sub_1BE06F2C0();
    uint64_t v24 = (uint64_t *)(a1 + *(int *)(v21 + 24));
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    LOBYTE(v24) = *((unsigned char *)v24 + 16);
    uint64_t v55 = v25;
    uint64_t v56 = v26;
    char v57 = (char)v24;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E31F0);
    MEMORY[0x1C1888A00](&v58, v27);
    if (v58)
    {
      uint64_t v28 = 1;
      uint64_t v30 = (uint64_t)v50;
      uint64_t v29 = v51;
      uint64_t v32 = v48;
      uint64_t v31 = v49;
      uint64_t v33 = v47;
LABEL_6:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v30, v28, 1, v29);
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
      char v37 = v44;
      v36(v33, v44, v13);
      uint64_t v38 = v45;
      sub_1BDF86808(v30, v45, &qword_1EA0E3340);
      uint64_t v39 = v46;
      v36(v46, v33, v13);
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E3360);
      sub_1BDF86808(v38, (uint64_t)&v39[*(int *)(v40 + 48)], &qword_1EA0E3340);
      sub_1BDF8686C(v30, &qword_1EA0E3340);
      uint64_t v41 = *(void (**)(char *, uint64_t))(v32 + 8);
      v41(v37, v13);
      sub_1BDF8686C(v38, &qword_1EA0E3340);
      return ((uint64_t (*)(char *, uint64_t))v41)(v33, v13);
    }
    long long v54 = v10;
    sub_1BE06F7A0();
    sub_1BE070130();
    MEMORY[0x1C1888A00](v43);
    uint64_t result = sub_1BE070440();
    if (result)
    {
      sub_1BE06F8F0();
      uint64_t v33 = v47;
      sub_1BE06F2C0();
      sub_1BDF86964(&qword_1EA0E3358, &qword_1EA0E3350);
      uint64_t v34 = v42[0];
      sub_1BE06FDC0();
      uint64_t v32 = v48;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v13);
      uint64_t v31 = v49;
      uint64_t v30 = (uint64_t)v50;
      uint64_t v35 = v34;
      uint64_t v29 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v50, v35, v51);
      uint64_t v28 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BDFBC4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48);
  MEMORY[0x1C1888A00](v8);
  sub_1BE06EE90();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v11 = (void *)(a3 + *(int *)(type metadata accessor for TimeAndDateView() + 20));
  uint64_t v12 = v11[1];
  uint64_t v13 = v11[2];
  v15[1] = *v11;
  _OWORD v15[2] = v12;
  v15[3] = v13;
  v15[0] = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3220);
  return sub_1BE070210();
}

uint64_t sub_1BDFBC5F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1BE06F790();
  MEMORY[0x1F4188790](v8 - 8);
  sub_1BE06F7A0();
  uint64_t v9 = sub_1BE06FD20();
  uint64_t v32 = v10;
  uint64_t v33 = v9;
  uint64_t v31 = v11;
  int v30 = v12 & 1;
  sub_1BE06F780();
  sub_1BE06F770();
  id v29 = *(id *)(a1 + *(int *)(type metadata accessor for TimeAndDateView() + 40));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48);
  MEMORY[0x1C1888A00](v13);
  uint64_t v14 = (void *)sub_1BE06EEA0();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v7, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
  sub_1BE070110();
  uint64_t v16 = (void *)sub_1BE06EEA0();
  v15(v7, v4);
  id v17 = objc_msgSend(v29, sel_stringFromDate_toDate_, v14, v16);

  sub_1BE070500();
  sub_1BE06F760();
  swift_bridgeObjectRelease();
  sub_1BE06F770();
  sub_1BE06F7B0();
  uint64_t v18 = sub_1BE06FD20();
  uint64_t v20 = v19;
  char v21 = v30;
  char v34 = v30;
  LOBYTE(v14) = v22 & 1;
  uint64_t v24 = v32;
  uint64_t v23 = v33;
  uint64_t v25 = v31;
  *(void *)a2 = v33;
  *(void *)(a2 + 8) = v25;
  *(unsigned char *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v24;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v19;
  *(unsigned char *)(a2 + 48) = v22 & 1;
  *(void *)(a2 + 56) = v26;
  uint64_t v27 = v23;
  sub_1BDF8555C(v23, v25, v21);
  swift_bridgeObjectRetain();
  sub_1BDF8555C(v18, v20, (char)v14);
  swift_bridgeObjectRetain();
  sub_1BDF8587C(v18, v20, (char)v14);
  swift_bridgeObjectRelease();
  sub_1BDF8587C(v27, v25, v34);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDFBC934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32C0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v53 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TimeAndDateView();
  uint64_t v7 = v6 - 8;
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v52 = (uint64_t)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32C8);
  uint64_t v54 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v56 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32D0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v55 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32D8);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  id v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v48 - v18;
  sub_1BE06F7A0();
  uint64_t v20 = sub_1BE06FD20();
  uint64_t v58 = v21;
  uint64_t v59 = v20;
  int v57 = v22;
  uint64_t v60 = v23;
  uint64_t v24 = a1 + *(int *)(v7 + 40);
  char v25 = *(unsigned char *)v24;
  uint64_t v26 = *(void *)(v24 + 8);
  char v61 = v25;
  uint64_t v62 = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32B8);
  sub_1BE070110();
  uint64_t v27 = 1;
  if (v63 == 1)
  {
    v48[2] = sub_1BE06F7A0();
    uint64_t v49 = v9;
    uint64_t v50 = v17;
    v48[1] = v28;
    uint64_t v30 = v52;
    uint64_t v29 = (uint64_t)v53;
    sub_1BDF8A5D4(a1, v52);
    uint64_t v31 = *(unsigned __int8 *)(v51 + 80);
    uint64_t v32 = v54;
    uint64_t v51 = v12;
    uint64_t v33 = (v31 + 16) & ~v31;
    uint64_t v34 = swift_allocObject();
    sub_1BDFBD4BC(v30, v34 + v33);
    uint64_t v35 = v56;
    sub_1BE070160();
    uint64_t v36 = sub_1BE06FCF0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v29, 1, 1, v36);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v38 = (uint64_t)v55;
    uint64_t v39 = (uint64_t *)&v55[*(int *)(v11 + 36)];
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32E8);
    sub_1BDF86808(v29, (uint64_t)v39 + *(int *)(v40 + 28), &qword_1EA0E32C0);
    uint64_t *v39 = KeyPath;
    uint64_t v12 = v51;
    uint64_t v41 = v49;
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v38, v35, v49);
    uint64_t v42 = v29;
    id v17 = v50;
    sub_1BDF8686C(v42, &qword_1EA0E32C0);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v41);
    sub_1BDFBD730(v38, (uint64_t)v19);
    uint64_t v27 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v19, v27, 1, v11);
  char v43 = v57 & 1;
  sub_1BDF86808((uint64_t)v19, (uint64_t)v17, &qword_1EA0E32D8);
  uint64_t v45 = v58;
  uint64_t v44 = v59;
  *(void *)a2 = v59;
  *(void *)(a2 + 8) = v45;
  *(unsigned char *)(a2 + 16) = v43;
  *(void *)(a2 + 24) = v60;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32E0);
  sub_1BDF86808((uint64_t)v17, a2 + *(int *)(v46 + 64), &qword_1EA0E32D8);
  sub_1BDF8555C(v44, v45, v43);
  swift_bridgeObjectRetain();
  sub_1BDF8686C((uint64_t)v19, &qword_1EA0E32D8);
  sub_1BDF8686C((uint64_t)v17, &qword_1EA0E32D8);
  sub_1BDF8587C(v44, v45, v43);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDFBCEA0()
{
  return swift_release();
}

uint64_t sub_1BDFBCF44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TimeAndDateView();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = a1 + *(int *)(v3 + 28);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);
  sub_1BDF8A504(*(void *)v6, v8);
  char v9 = sub_1BDFCDD28(v7, v8);
  sub_1BDF8A570(v7, v8);
  sub_1BDF8A5D4(a1, (uint64_t)v5);
  if ((v9 & 1) == 0) {
    return sub_1BDF8A638((uint64_t)v5);
  }
  uint64_t v11 = &v5[*(int *)(v2 + 32)];
  char v12 = *v11;
  uint64_t v13 = *((void *)v11 + 1);
  char v18 = v12;
  uint64_t v19 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32B8);
  sub_1BE070110();
  uint64_t result = sub_1BDF8A638((uint64_t)v5);
  if ((v20 & 1) == 0)
  {
    uint64_t v14 = a1 + *(int *)(v2 + 32);
    uint64_t v16 = *(void *)(v14 + 8);
    char v18 = *(unsigned char *)v14;
    char v15 = v18;
    uint64_t v19 = v16;
    swift_retain();
    sub_1BE070110();
    char v18 = v15;
    uint64_t v19 = v16;
    v17[7] = (v20 & 1) == 0;
    sub_1BE070120();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BDFBD0B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v15[1] = a2;
  v15[0] = *(void *)(a1 - 8);
  uint64_t v3 = *(void *)(v15[0] + 64);
  MEMORY[0x1F4188790](a1 - 8);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3250);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3258);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v2;
  *(void *)uint64_t v6 = sub_1BE06F740();
  *((void *)v6 + 1) = 0;
  v6[16] = 1;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3260);
  sub_1BDFBC934(v2, (uint64_t)&v6[*(int *)(v11 + 44)]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3268);
  sub_1BDF86964(&qword_1EA0E3270, &qword_1EA0E3250);
  sub_1BDFBD378();
  sub_1BE070290();
  sub_1BDF8A5D4(v2, (uint64_t)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = (*(unsigned __int8 *)(v15[0] + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15[0] + 80);
  uint64_t v13 = swift_allocObject();
  sub_1BDFBD4BC((uint64_t)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  sub_1BDFBD538();
  sub_1BE06FDD0();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BDFBD370@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFBAA8C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1BDFBD378()
{
  unint64_t result = qword_1EA0E3278;
  if (!qword_1EA0E3278)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3268);
    sub_1BDF86964(&qword_1EA0E3280, &qword_1EA0E3288);
    sub_1BDFBD418();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3278);
  }
  return result;
}

unint64_t sub_1BDFBD418()
{
  unint64_t result = qword_1EA0E3290;
  if (!qword_1EA0E3290)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3298);
    sub_1BDF86964(&qword_1EA0E32A0, &qword_1EA0E32A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3290);
  }
  return result;
}

uint64_t sub_1BDFBD4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimeAndDateView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFBD520()
{
  return sub_1BDFBD600(sub_1BDFBCF44);
}

unint64_t sub_1BDFBD538()
{
  unint64_t result = qword_1EA0E32B0;
  if (!qword_1EA0E32B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3258);
    sub_1BDF86964(&qword_1EA0E3270, &qword_1EA0E3250);
    sub_1BDFBD378();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E32B0);
  }
  return result;
}

uint64_t sub_1BDFBD5E8()
{
  return sub_1BDFBD600((uint64_t (*)(uint64_t))sub_1BDFBCEA0);
}

uint64_t sub_1BDFBD600(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for TimeAndDateView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1BDFBD674()
{
  return sub_1BE06F680();
}

uint64_t sub_1BDFBD698(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32C0);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1BDF86808(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1EA0E32C0);
  return sub_1BE06F690();
}

uint64_t sub_1BDFBD730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFBD79C(uint64_t a1, uint64_t a2)
{
  return sub_1BDFBD9E4(a1, a2, sub_1BDFBBD48);
}

unint64_t sub_1BDFBD7B4()
{
  unint64_t result = qword_1EA0E3328;
  if (!qword_1EA0E3328)
  {
    sub_1BE06EEE0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3328);
  }
  return result;
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = (int *)(type metadata accessor for TimeAndDateView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2C48) + 32);
  uint64_t v8 = sub_1BE06EEE0();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1BDF8A570(*(void *)(v6 + v1[9]), *(unsigned char *)(v6 + v1[9] + 8));
  swift_release();
  v9(v6 + v1[11], v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3228);
  swift_release();

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1BDFBD9CC(uint64_t a1, uint64_t a2)
{
  return sub_1BDFBD9E4(a1, a2, sub_1BDFBC4B4);
}

uint64_t sub_1BDFBD9E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(type metadata accessor for TimeAndDateView() - 8);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return a3(a1, a2, v7);
}

uint64_t sub_1BDFBDA78()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFBDAD4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl_viewControllerDelegate;
  uint64_t v2 = MEMORY[0x1C188ADC0](v0 + OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl_viewControllerDelegate);
  swift_unknownObjectRelease();
  if (v2) {
    return MEMORY[0x1C188ADC0](v1);
  }
  uint64_t v1 = v0 + OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl_editViewControllerDelegate;
  uint64_t v3 = MEMORY[0x1C188ADC0](v0 + OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl_editViewControllerDelegate);
  swift_unknownObjectRelease();
  if (v3) {
    return MEMORY[0x1C188ADC0](v1);
  }
  else {
    return 0;
  }
}

id CUIKEventViewControllerManagerImpl.__allocating_init(viewControllerDelegate:)()
{
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl_subscribers] = MEMORY[0x1E4FBC870];
  *(void *)&v1[OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl____lazy_storage___viewController] = 0;
  swift_unknownObjectWeakAssign();
  v4.receiver = v1;
  v4.super_class = v0;
  id v2 = objc_msgSendSuper2(&v4, sel_init);
  swift_unknownObjectRelease();
  return v2;
}

id CUIKEventViewControllerManagerImpl.init(viewControllerDelegate:)()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl_subscribers] = MEMORY[0x1E4FBC870];
  *(void *)&v0[OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl____lazy_storage___viewController] = 0;
  swift_unknownObjectWeakAssign();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CUIKEventViewControllerManagerImpl();
  id v1 = objc_msgSendSuper2(&v3, sel_init);
  swift_unknownObjectRelease();
  return v1;
}

uint64_t type metadata accessor for CUIKEventViewControllerManagerImpl()
{
  return self;
}

id CUIKEventViewControllerManagerImpl.__allocating_init(editViewControllerDelegate:)()
{
  id v1 = (char *)objc_allocWithZone(v0);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl_subscribers] = MEMORY[0x1E4FBC870];
  *(void *)&v1[OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl____lazy_storage___viewController] = 0;
  swift_unknownObjectWeakAssign();
  v4.receiver = v1;
  v4.super_class = v0;
  id v2 = objc_msgSendSuper2(&v4, sel_init);
  swift_unknownObjectRelease();
  return v2;
}

id CUIKEventViewControllerManagerImpl.init(editViewControllerDelegate:)()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl_subscribers] = MEMORY[0x1E4FBC870];
  *(void *)&v0[OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl____lazy_storage___viewController] = 0;
  swift_unknownObjectWeakAssign();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CUIKEventViewControllerManagerImpl();
  id v1 = objc_msgSendSuper2(&v3, sel_init);
  swift_unknownObjectRelease();
  return v1;
}

id sub_1BDFBDFA0()
{
  uint64_t v1 = OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl____lazy_storage___viewController;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl____lazy_storage___viewController);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl____lazy_storage___viewController);
  }
  else
  {
    objc_super v4 = (void *)sub_1BDFBE04C(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1BDFBE04C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3398);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (void *)sub_1BDFBDAD4();
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_eventForViewControllerManager);
    uint64_t v9 = MEMORY[0x1C188ADC0](a1 + OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl_editViewControllerDelegate);
    uint64_t v23 = v2;
    char v11 = 0;
    if (v9)
    {
      uint64_t v10 = v9;
      swift_unknownObjectRelease();
      if ((void *)v10 == v7) {
        char v11 = 1;
      }
    }
    swift_unknownObjectWeakInit();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v7;
    type metadata accessor for CUIKEventEditorViewModel(0);
    swift_allocObject();
    id v13 = v8;
    swift_unknownObjectRetain();
    uint64_t v14 = sub_1BE05D4F8(v13, (uint64_t)sub_1BDFBE7F4, v12, v11, 0);
    swift_unknownObjectWeakDestroy();
    sub_1BDF8A434();
    swift_retain();
    uint64_t v24 = sub_1BE06F440();
    uint64_t v25 = v15;
    id v16 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33A8));
    swift_retain();
    uint64_t v22 = sub_1BE06F810();
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33B0);
    sub_1BE06F210();
    swift_endAccess();
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = v14;
    sub_1BDFBE8AC();
    swift_retain();
    uint64_t v19 = v23;
    sub_1BE06F260();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
    swift_beginAccess();
    sub_1BE06F1D0();
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

    swift_release();
    return v22;
  }
  else
  {
    uint64_t result = sub_1BE070C90();
    __break(1u);
  }
  return result;
}

unsigned char *sub_1BDFBE3D4(unsigned char *result, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  switch(*result)
  {
    case 1:
      swift_beginAccess();
      uint64_t v3 = MEMORY[0x1C188ADC0](v2);
      if (!v3) {
        goto LABEL_12;
      }
      uint64_t v4 = (void *)v3;
      uint64_t v5 = (void *)MEMORY[0x1C188ADC0](v3 + OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl_viewControllerDelegate);

      if (!v5) {
        goto LABEL_12;
      }
      id v6 = &selRef_requestOrganizerDetailPresentation;
      break;
    case 2:
      swift_beginAccess();
      uint64_t v7 = MEMORY[0x1C188ADC0](v2);
      if (!v7) {
        goto LABEL_12;
      }
      id v8 = (void *)v7;
      uint64_t v5 = (void *)MEMORY[0x1C188ADC0](v7 + OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl_viewControllerDelegate);

      if (!v5) {
        goto LABEL_12;
      }
      id v6 = &selRef_requestAttendeesDetailPresentation;
      break;
    case 3:
      swift_beginAccess();
      uint64_t v9 = MEMORY[0x1C188ADC0](v2);
      if (!v9) {
        goto LABEL_12;
      }
      uint64_t v10 = (void *)v9;
      uint64_t v5 = (void *)MEMORY[0x1C188ADC0](v9 + OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl_editViewControllerDelegate);

      if (!v5) {
        goto LABEL_12;
      }
      id v6 = &selRef_requestLocationOrVideoCallPresentation;
      break;
    default:
      return result;
  }
  [v5 *v6];
  swift_unknownObjectRelease();
LABEL_12:
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return (unsigned char *)sub_1BE06F230();
}

id CUIKEventViewControllerManagerImpl.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void CUIKEventViewControllerManagerImpl.init()()
{
}

id CUIKEventViewControllerManagerImpl.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CUIKEventViewControllerManagerImpl();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BDFBE638@<X0>(void *a1@<X8>)
{
  id result = sub_1BDFBDFA0();
  *a1 = result;
  return result;
}

void sub_1BDFBE664(void **a1, void *a2)
{
  objc_super v2 = *a1;
  id v4 = *(id *)(*a2 + OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl____lazy_storage___viewController);
  *(void *)(*a2 + OBJC_IVAR____TtC13CalendarUIKit34CUIKEventViewControllerManagerImpl____lazy_storage___viewController) = *a1;
  id v3 = v2;
}

uint64_t method lookup function for CUIKEventViewControllerManagerImpl(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CUIKEventViewControllerManagerImpl);
}

uint64_t dispatch thunk of CUIKEventViewControllerManagerImpl.__allocating_init(viewControllerDelegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of CUIKEventViewControllerManagerImpl.__allocating_init(editViewControllerDelegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of CUIKEventViewControllerManagerImpl.viewController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t sub_1BDFBE794(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFBE7BC()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

id sub_1BDFBE7F4()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_editorForViewControllerManager);

  return v1;
}

uint64_t sub_1BDFBE82C()
{
  swift_unknownObjectWeakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1BDFBE864()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

unsigned char *sub_1BDFBE8A4(unsigned char *a1)
{
  return sub_1BDFBE3D4(a1, *(void *)(v1 + 16));
}

unint64_t sub_1BDFBE8AC()
{
  unint64_t result = qword_1EA0E33B8;
  if (!qword_1EA0E33B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3398);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E33B8);
  }
  return result;
}

uint64_t static LocationDescriptionGenerator.locationString(for:options:incomplete:leadingImageName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, void **a4@<X3>, char *a5@<X8>)
{
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v11 - 8);
  id v13 = (uint64_t *)((char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BDF86808(a1, (uint64_t)&v61, &qword_1EB677EF0);
  if (!*((void *)&v62 + 1))
  {
    sub_1BDF8686C((uint64_t)&v61, &qword_1EB677EF0);
    uint64_t v19 = sub_1BE06ECB0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a5, 1, 1, v19);
  }
  sub_1BDFBEF38(&v61, (uint64_t)v64);
  uint64_t v14 = v65;
  uint64_t v15 = v66;
  __swift_project_boxed_opaque_existential_1(v64, v65);
  uint64_t v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 256))(v14, v15);
  unint64_t v55 = v16;
  uint64_t v17 = (void *)sub_1BDFC319C(v64);
  if (v17[2])
  {
    unint64_t v18 = v17[5];
    uint64_t v56 = v17[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v56 = 0;
    unint64_t v18 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v53 = a5;
  uint64_t v52 = v5;
  int v57 = v13;
  uint64_t v50 = a3;
  uint64_t v49 = a4;
  if ((a2 & 0x10) == 0) {
    goto LABEL_29;
  }
  uint64_t v21 = v65;
  uint64_t v22 = v66;
  __swift_project_boxed_opaque_existential_1(v64, v65);
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 400))(v21, v22)) {
    goto LABEL_29;
  }
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33C0);
  uint64_t v23 = sub_1BE070C70();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  uint64_t v25 = v23 + 32;
  uint64_t v26 = v56;
  while (1)
  {
    sub_1BDFC3C28(v25, (uint64_t)&v61);
    uint64_t v27 = *((void *)&v62 + 1);
    uint64_t v28 = AssociatedConformanceWitness;
    __swift_project_boxed_opaque_existential_1(&v61, *((uint64_t *)&v62 + 1));
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 32))(v27, v28);
    sub_1BDFC3C28((uint64_t)&v61, (uint64_t)v58);
    if (v29 != 2) {
      goto LABEL_11;
    }
    uint64_t v30 = v59;
    uint64_t v31 = v60;
    __swift_project_boxed_opaque_existential_1(v58, v59);
    uint64_t v32 = (*(uint64_t (**)(uint64_t))(*(void *)(v31 + 8) + 24))(v30);
    if (!v33)
    {
      if (!v18)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
        goto LABEL_27;
      }
      goto LABEL_11;
    }
    if (!v18)
    {
      swift_bridgeObjectRelease();
LABEL_11:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      goto LABEL_12;
    }
    if (v32 == v26 && v33 == v18) {
      break;
    }
    char v35 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    if (v35) {
      goto LABEL_26;
    }
LABEL_12:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
    v25 += 40;
    if (!--v24) {
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
LABEL_26:
  swift_bridgeObjectRelease();
LABEL_27:
  swift_bridgeObjectRelease();
  unint64_t v18 = v55;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v61);
  uint64_t v56 = v54;
LABEL_28:
  id v13 = v57;
LABEL_29:
  sub_1BDFC3C28((uint64_t)v64, (uint64_t)&v61);
  uint64_t v51 = a2;
  int v48 = sub_1BDFBEF50(v13, (uint64_t)&v61, a2);
  sub_1BDF8686C((uint64_t)&v61, &qword_1EB677EF0);
  uint64_t v36 = v65;
  uint64_t v37 = v66;
  __swift_project_boxed_opaque_existential_1(v64, v65);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v37 + 296);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v40 = sub_1BE0709E0();
  uint64_t v47 = (uint64_t)&v47;
  uint64_t v41 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  char v43 = (char *)&v47 - v42;
  swift_bridgeObjectRetain();
  v38(v36, v37);
  uint64_t v44 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v43, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v40);
    uint64_t AssociatedConformanceWitness = 0;
    long long v61 = 0u;
    long long v62 = 0u;
  }
  else
  {
    *((void *)&v62 + 1) = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v61);
    (*(void (**)(uint64_t *, char *, uint64_t))(v44 + 32))(boxed_opaque_existential_1, v43, AssociatedTypeWitness);
  }
  uint64_t v46 = (uint64_t)v57;
  sub_1BDFBF9C4(v54, v55, v56, v18, (uint64_t)&v61, (uint64_t)v57, v48 & 1, v51, v53, v50, v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDF8686C(v46, &qword_1EB678020);
  swift_bridgeObjectRelease();
  sub_1BDF8686C((uint64_t)&v61, &qword_1EB678038);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
}

uint64_t sub_1BDFBEF38(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1BDFBEF50(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v73 - v10;
  uint64_t v12 = sub_1BE06EE10();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  unint64_t v16 = (char *)&v73 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)&v73 - v17;
  sub_1BDF86808(a2, (uint64_t)&v85, &qword_1EB677EF0);
  if (*((void *)&v86 + 1))
  {
    uint64_t v77 = v11;
    uint64_t v76 = a3;
    uint64_t v78 = v9;
    uint64_t v75 = v16;
    uint64_t v74 = v18;
    uint64_t v79 = a1;
    uint64_t v80 = v13;
    uint64_t v81 = v12;
    sub_1BDFBEF38(&v85, (uint64_t)v88);
    uint64_t v20 = v89;
    uint64_t v19 = v90;
    __swift_project_boxed_opaque_existential_1(v88, v89);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v19 + 248);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v23 = sub_1BE0709E0();
    uint64_t v24 = *(void *)(v23 - 8);
    MEMORY[0x1F4188790](v23);
    uint64_t v26 = (char *)&v73 - v25;
    v21(v20, v19);
    uint64_t v27 = *(void *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v26, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
LABEL_9:
      uint64_t v35 = v80;
      uint64_t v34 = v81;
      uint64_t v37 = (uint64_t)v78;
      uint64_t v36 = v79;
      uint64_t v38 = (uint64_t)v77;
LABEL_10:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v38, 1, 1, v34);
      goto LABEL_11;
    }
    uint64_t v83 = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v84 = AssociatedConformanceWitness;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v82);
    (*(void (**)(uint64_t *, char *, uint64_t))(v27 + 32))(boxed_opaque_existential_1, v26, AssociatedTypeWitness);
    uint64_t v30 = v83;
    uint64_t v31 = v84;
    __swift_project_boxed_opaque_existential_1(v82, v83);
    if (!(*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v30, v31))
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      goto LABEL_9;
    }
    swift_getAssociatedTypeWitness();
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33F0);
    uint64_t v33 = sub_1BE070C70();
    swift_bridgeObjectRelease();
    if (*(void *)(v33 + 16))
    {
      sub_1BDFC3C28(v33 + 32, (uint64_t)&v85);
    }
    else
    {
      uint64_t v87 = 0;
      long long v85 = 0u;
      long long v86 = 0u;
    }
    uint64_t v35 = v80;
    uint64_t v34 = v81;
    uint64_t v37 = (uint64_t)v78;
    uint64_t v36 = v79;
    uint64_t v38 = (uint64_t)v77;
    swift_bridgeObjectRelease();
    uint64_t v50 = *((void *)&v86 + 1);
    if (!*((void *)&v86 + 1))
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      sub_1BDF8686C((uint64_t)&v85, &qword_1EA0E33F8);
      goto LABEL_10;
    }
    uint64_t v51 = v87;
    __swift_project_boxed_opaque_existential_1(&v85, *((uint64_t *)&v86 + 1));
    (*(void (**)(uint64_t, uint64_t))(v51 + 16))(v50, v51);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v38, 1, v34) == 1)
    {
LABEL_11:
      sub_1BDF8686C(v38, &qword_1EB678020);
      if ((v76 & 0x80) != 0) {
        unsigned int v39 = objc_msgSend(self, sel_isMainThread) ^ 1;
      }
      else {
        unsigned int v39 = 1;
      }
      uint64_t v40 = v89;
      uint64_t v41 = v90;
      __swift_project_boxed_opaque_existential_1(v88, v89);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v41 + 432))(v40, v41) & 1) != 0 || v39)
      {
        uint64_t v42 = v89;
        uint64_t v43 = v90;
        __swift_project_boxed_opaque_existential_1(v88, v89);
        (*(void (**)(uint64_t, uint64_t))(v43 + 440))(v42, v43);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v37, 1, v34) == 1)
        {
          sub_1BDF8686C(v37, &qword_1EB678020);
        }
        else
        {
          uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 32);
          v46(v75, v37, v34);
          uint64_t v47 = sub_1BE06EDF0();
          if (!v48
            || (*(void *)&long long v85 = v47,
                *((void *)&v85 + 1) = v48,
                v82[0] = 7103860,
                v82[1] = 0xE300000000000000,
                sub_1BDF859F0(),
                uint64_t v49 = sub_1BE070A60(),
                swift_bridgeObjectRelease(),
                v49))
          {
            v46((char *)v36, (uint64_t)v75, v34);
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
            goto LABEL_19;
          }
          (*(void (**)(char *, uint64_t))(v35 + 8))(v75, v34);
        }
      }
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v35 + 56))(v36, 1, 1, v34);
LABEL_19:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
      goto LABEL_20;
    }
    uint64_t v78 = (char *)v32;
    uint64_t v52 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v74, v38, v34);
    (*(void (**)(uint64_t *, char *, uint64_t))(v35 + 16))(v36, v52, v34);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    uint64_t v53 = v89;
    uint64_t v54 = v90;
    __swift_project_boxed_opaque_existential_1(v88, v89);
    unint64_t v55 = *(void (**)(uint64_t, uint64_t))(v54 + 248);
    uint64_t v56 = v35;
    uint64_t v57 = swift_getAssociatedTypeWitness();
    uint64_t v58 = sub_1BE0709E0();
    uint64_t v79 = &v73;
    uint64_t v59 = *(void *)(v58 - 8);
    MEMORY[0x1F4188790](v58);
    long long v61 = (char *)&v73 - v60;
    v55(v53, v54);
    uint64_t v62 = *(void *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v61, 1, v57) == 1)
    {
      (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v58);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v74, v81);
LABEL_41:
      char v44 = 0;
      goto LABEL_42;
    }
    uint64_t v83 = v57;
    uint64_t v63 = swift_getAssociatedConformanceWitness();
    uint64_t v84 = v63;
    uint64_t v64 = __swift_allocate_boxed_opaque_existential_1(v82);
    (*(void (**)(uint64_t *, char *, uint64_t))(v62 + 32))(v64, v61, v57);
    uint64_t v65 = v83;
    uint64_t v66 = v84;
    __swift_project_boxed_opaque_existential_1(v82, v83);
    uint64_t v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 32))(v65, v66);
    char v44 = v67;
    if (v67)
    {
      swift_getAssociatedTypeWitness();
      uint64_t v68 = sub_1BE070C70();
      swift_bridgeObjectRelease();
      if (*(void *)(v68 + 16))
      {
        sub_1BDFC3C28(v68 + 32, (uint64_t)&v85);
      }
      else
      {
        uint64_t v87 = 0;
        long long v85 = 0u;
        long long v86 = 0u;
      }
      swift_bridgeObjectRelease();
      uint64_t v69 = *((void *)&v86 + 1);
      uint64_t v70 = v80;
      uint64_t v71 = v81;
      if (!*((void *)&v86 + 1))
      {
        (*(void (**)(char *, uint64_t))(v80 + 8))(v74, v81);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
        sub_1BDF8686C((uint64_t)&v85, &qword_1EA0E33F8);
        goto LABEL_41;
      }
      uint64_t v72 = v87;
      __swift_project_boxed_opaque_existential_1(&v85, *((uint64_t *)&v86 + 1));
      char v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 24))(v69, v72);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v74, v71);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v85);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v74, v81);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
LABEL_42:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
    return v44 & 1;
  }
  sub_1BDF8686C((uint64_t)&v85, &qword_1EB677EF0);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v13 + 56))(a1, 1, 1, v12);
LABEL_20:
  char v44 = 0;
  return v44 & 1;
}

uint64_t sub_1BDFBF9C4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, char *a9@<X8>, unsigned char *a10, void **a11)
{
  int v199 = a7;
  uint64_t v203 = a6;
  uint64_t v205 = a3;
  v200 = a9;
  unint64_t v16 = a11;
  uint64_t v198 = a10;
  uint64_t v218 = *MEMORY[0x1E4F143B8];
  uint64_t v17 = sub_1BE06ECB0();
  uint64_t v206 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v183 = (char *)&v177 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v190 = (char *)&v177 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v186 = (char *)&v177 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v187 = (char *)&v177 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v188 = (char *)&v177 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v195 = (char *)&v177 - v28;
  uint64_t v29 = sub_1BE06ED20();
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v189 = (char *)&v177 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v191 = (uint64_t)&v177 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678030);
  uint64_t v34 = MEMORY[0x1F4188790](v33 - 8);
  uint64_t v194 = (char *)&v177 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v193 = (uint64_t)&v177 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v185 = (char *)&v177 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  uint64_t v192 = (uint64_t)&v177 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  char v44 = (char *)&v177 - v43;
  uint64_t v45 = MEMORY[0x1F4188790](v42);
  uint64_t v47 = (char *)&v177 - v46;
  uint64_t v48 = MEMORY[0x1F4188790](v45);
  uint64_t v207 = (uint64_t)&v177 - v49;
  MEMORY[0x1F4188790](v48);
  uint64_t v51 = (char *)&v177 - v50;
  uint64_t v52 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v52 - 8);
  uint64_t v180 = (char *)&v177 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v54 - 8);
  uint64_t v179 = (char *)&v177 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = v47;
  uint64_t v201 = a8;
  uint64_t v204 = v51;
  v196 = a11;
  char v197 = v44;
  uint64_t v181 = a1;
  unint64_t v182 = a2;
  if ((a8 & 8) == 0)
  {
    if (!a4) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (!a4)
  {
LABEL_8:
    sub_1BDF86808(a5, (uint64_t)v217, &qword_1EB678038);
    unint64_t v56 = 0;
    goto LABEL_16;
  }
  if (!a2)
  {
LABEL_9:
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  if (sub_1BE070650())
  {
    swift_bridgeObjectRelease();
    uint64_t v205 = 0;
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v58 = a4 & 0x2000000000000000;
  BOOL v57 = (a4 & 0x2000000000000000) == 0;
  uint64_t v59 = a4;
  uint64_t v60 = HIBYTE(a4) & 0xF;
  uint64_t v61 = v205 & 0xFFFFFFFFFFFFLL;
  if (v57) {
    uint64_t v62 = v205 & 0xFFFFFFFFFFFFLL;
  }
  else {
    uint64_t v62 = v60;
  }
  sub_1BDF86808(a5, (uint64_t)v217, &qword_1EB678038);
  if (v62)
  {
    sub_1BDF8686C((uint64_t)v217, &qword_1EB678038);
    BOOL v184 = 0;
    uint64_t v47 = v202;
    goto LABEL_19;
  }
  uint64_t v47 = v202;
  unint64_t v56 = v59;
LABEL_16:
  sub_1BDF86808((uint64_t)v217, (uint64_t)v214, &qword_1EB678038);
  uint64_t v63 = v215;
  if (!v215)
  {
    sub_1BDF8686C((uint64_t)v217, &qword_1EB678038);
    sub_1BDF8686C((uint64_t)v214, &qword_1EB678038);
    BOOL v184 = 0;
    if (v56) {
      goto LABEL_18;
    }
LABEL_25:
    uint64_t v59 = 0;
    goto LABEL_26;
  }
  uint64_t v64 = v216;
  __swift_project_boxed_opaque_existential_1(v214, v215);
  BOOL v184 = sub_1BDFD367C(v63, v64);
  sub_1BDF8686C((uint64_t)v217, &qword_1EB678038);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v214);
  if (!v56) {
    goto LABEL_25;
  }
LABEL_18:
  uint64_t v58 = v56 & 0x2000000000000000;
  uint64_t v59 = v56;
  uint64_t v60 = HIBYTE(v56) & 0xF;
  uint64_t v61 = v205 & 0xFFFFFFFFFFFFLL;
LABEL_19:
  if (v58) {
    uint64_t v65 = v60;
  }
  else {
    uint64_t v65 = v61;
  }
  if (!v65)
  {
LABEL_26:
    sub_1BDF86808(a5, (uint64_t)&v211, &qword_1EB678038);
    if (!v212)
    {
      sub_1BDF8686C((uint64_t)&v211, &qword_1EB678038);
LABEL_30:
      uint64_t v74 = v206;
      unint64_t v75 = v59;
      if (!v59) {
        goto LABEL_92;
      }
      goto LABEL_80;
    }
    uint64_t v178 = v17;
    sub_1BDFBEF38(&v211, (uint64_t)v214);
    uint64_t v67 = v215;
    uint64_t v66 = v216;
    __swift_project_boxed_opaque_existential_1(v214, v215);
    uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v66 + 80);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    a8 = sub_1BE0709E0();
    uint64_t v177 = (uint64_t)&v177;
    uint64_t v70 = *(void *)(a8 - 8);
    MEMORY[0x1F4188790](a8);
    uint64_t v72 = (char *)&v177 - v71;
    v68(v67, v66);
    uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v72, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v70 + 8))(v72, a8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v214);
      LOBYTE(a8) = v201;
      uint64_t v17 = v178;
      uint64_t v47 = v202;
      uint64_t v51 = v204;
      unint64_t v16 = v196;
      goto LABEL_30;
    }
    uint64_t v209 = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v210 = AssociatedConformanceWitness;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v208);
    (*(void (**)(uint64_t *, char *, uint64_t))(v73 + 32))(boxed_opaque_existential_1, v72, AssociatedTypeWitness);
    sub_1BDFBEF38(&v208, (uint64_t)&v211);
    uint64_t v78 = v212;
    uint64_t v79 = v213;
    __swift_project_boxed_opaque_existential_1(&v211, v212);
    uint64_t v80 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v78, v79);
    uint64_t v17 = v178;
    if (v80)
    {
      LOBYTE(a8) = v201;
      uint64_t v47 = v202;
      uint64_t v51 = v204;
      unint64_t v16 = v196;
      uint64_t v74 = v206;
      unint64_t v75 = v59;
      if (v80 == 1 && (v201 & 4) != 0) {
        goto LABEL_79;
      }
    }
    else
    {
      LOBYTE(a8) = v201;
      uint64_t v47 = v202;
      uint64_t v51 = v204;
      unint64_t v16 = v196;
      uint64_t v74 = v206;
      unint64_t v75 = v59;
      if ((v201 & 2) != 0) {
        goto LABEL_79;
      }
    }
    sub_1BDFC3C28((uint64_t)v214, (uint64_t)&v208);
    uint64_t v81 = sub_1BDFC3538((uint64_t)&v208);
    unint64_t v83 = v82;
    sub_1BDF8686C((uint64_t)&v208, &qword_1EB678038);
    if (v83)
    {
      uint64_t v84 = HIBYTE(v83) & 0xF;
      if ((v83 & 0x2000000000000000) == 0) {
        uint64_t v84 = v81 & 0xFFFFFFFFFFFFLL;
      }
      if (v84) {
        goto LABEL_41;
      }
      swift_bridgeObjectRelease();
    }
    unint64_t v86 = v182;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v87 = v212;
    uint64_t v88 = v213;
    __swift_project_boxed_opaque_existential_1(&v211, v212);
    uint64_t v89 = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 32))(v87, v88);
    if (!v90)
    {
      unint64_t v83 = v86;
      uint64_t v85 = v181;
      goto LABEL_75;
    }
    uint64_t v85 = v181;
    if (v89 == 21333 && v90 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v91 = sub_1BE070EF0();
      swift_bridgeObjectRelease();
      if ((v91 & 1) == 0) {
        goto LABEL_74;
      }
    }
    uint64_t v92 = v85;
    uint64_t v93 = v212;
    uint64_t v94 = v213;
    __swift_project_boxed_opaque_existential_1(&v211, v212);
    uint64_t v95 = (*(uint64_t (**)(uint64_t, uint64_t))(v94 + 40))(v93, v94);
    if (v96)
    {
      uint64_t v97 = v95;
      unint64_t v98 = v96;
      uint64_t v99 = HIBYTE(v96) & 0xF;
      if ((v96 & 0x2000000000000000) == 0) {
        uint64_t v99 = v95 & 0xFFFFFFFFFFFFLL;
      }
      if (v99)
      {
        uint64_t v100 = v212;
        uint64_t v101 = v213;
        __swift_project_boxed_opaque_existential_1(&v211, v212);
        uint64_t v102 = (*(uint64_t (**)(uint64_t, uint64_t))(v101 + 48))(v100, v101);
        if (v103)
        {
          uint64_t v104 = v102;
          unint64_t v105 = v103;
          uint64_t v106 = HIBYTE(v103) & 0xF;
          if ((v103 & 0x2000000000000000) == 0) {
            uint64_t v106 = v102 & 0xFFFFFFFFFFFFLL;
          }
          if (v106)
          {
            sub_1BE070450();
            id v107 = CUIKBundle();
            sub_1BE06EF70();
            sub_1BE070520();
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33C8);
            uint64_t v108 = swift_allocObject();
            *(_OWORD *)(v108 + 16) = xmmword_1BE079670;
            uint64_t v109 = MEMORY[0x1E4FBB1A0];
            *(void *)(v108 + 56) = MEMORY[0x1E4FBB1A0];
            unint64_t v110 = sub_1BDFC3B24();
            *(void *)(v108 + 32) = v97;
            *(void *)(v108 + 40) = v98;
            *(void *)(v108 + 96) = v109;
            *(void *)(v108 + 104) = v110;
            uint64_t v17 = v178;
            *(void *)(v108 + 64) = v110;
            *(void *)(v108 + 72) = v104;
            *(void *)(v108 + 80) = v105;
            uint64_t v85 = sub_1BE0704D0();
            unint64_t v83 = v111;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v16 = v196;
            swift_bridgeObjectRelease();
            uint64_t v51 = v204;
            goto LABEL_75;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v51 = v204;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v112 = v212;
    uint64_t v113 = v213;
    __swift_project_boxed_opaque_existential_1(&v211, v212);
    uint64_t v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v113 + 48))(v112, v113);
    if (v115)
    {
      uint64_t v85 = v114;
      unint64_t v83 = v115;
      uint64_t v116 = HIBYTE(v115) & 0xF;
      if ((v115 & 0x2000000000000000) == 0) {
        uint64_t v116 = v114 & 0xFFFFFFFFFFFFLL;
      }
      if (v116)
      {
        swift_bridgeObjectRelease();
        goto LABEL_75;
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v117 = v212;
    uint64_t v118 = v213;
    __swift_project_boxed_opaque_existential_1(&v211, v212);
    uint64_t v119 = (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 40))(v117, v118);
    if (!v120)
    {
      unint64_t v83 = v182;
      uint64_t v85 = v92;
      goto LABEL_75;
    }
    uint64_t v81 = v119;
    unint64_t v83 = v120;
    uint64_t v121 = HIBYTE(v120) & 0xF;
    if ((v120 & 0x2000000000000000) == 0) {
      uint64_t v121 = v119 & 0xFFFFFFFFFFFFLL;
    }
    if (v121)
    {
LABEL_41:
      swift_bridgeObjectRelease();
      uint64_t v85 = v81;
      goto LABEL_75;
    }
    uint64_t v85 = v92;
    swift_bridgeObjectRelease();
LABEL_74:
    unint64_t v83 = v182;
LABEL_75:
    uint64_t v74 = v206;
    if (a8)
    {
      uint64_t v205 = v85;
      unint64_t v75 = v83;
    }
    else
    {
      if (!v83)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v211);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v214);
        goto LABEL_92;
      }
      swift_bridgeObjectRetain();
      sub_1BE070450();
      id v122 = CUIKBundle();
      sub_1BE06EF70();
      sub_1BE070530();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33C8);
      uint64_t v123 = swift_allocObject();
      *(_OWORD *)(v123 + 16) = xmmword_1BE07ABD0;
      *(void *)(v123 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v123 + 64) = sub_1BDFC3B24();
      *(void *)(v123 + 32) = v85;
      *(void *)(v123 + 40) = v83;
      uint64_t v74 = v206;
      uint64_t v205 = sub_1BE0704D0();
      unint64_t v75 = v124;
      swift_bridgeObjectRelease();
      uint64_t v51 = v204;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
LABEL_79:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v211);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v214);
    if (v75)
    {
LABEL_80:
      uint64_t v58 = v75 & 0x2000000000000000;
      uint64_t v59 = v75;
      uint64_t v60 = HIBYTE(v75) & 0xF;
      uint64_t v61 = v205 & 0xFFFFFFFFFFFFLL;
      goto LABEL_81;
    }
LABEL_92:
    uint64_t v59 = 0;
    goto LABEL_93;
  }
LABEL_81:
  if (v58) {
    uint64_t v125 = v60;
  }
  else {
    uint64_t v125 = v61;
  }
  if (v125)
  {
    uint64_t v126 = v191;
    sub_1BDF86808(v203, v191, &qword_1EB678020);
    uint64_t v127 = sub_1BE06EE10();
    uint64_t v128 = *(void *)(v127 - 8);
    int v129 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v128 + 48))(v126, 1, v127);
    swift_bridgeObjectRetain();
    if (v129 == 1)
    {
      sub_1BDF8686C(v126, &qword_1EB678020);
LABEL_90:
      sub_1BE06ED10();
      sub_1BE06ECC0();
      uint64_t v74 = v206;
      unint64_t v135 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v206 + 56);
      v135(v51, 0, 1, v17);
      goto LABEL_94;
    }
    unsigned __int8 v130 = (void *)sub_1BE06EDC0();
    uint64_t v131 = v126;
    uint64_t v133 = v132;
    (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v131, v127);
    v214[0] = v130;
    v214[1] = v133;
    *(void *)&long long v211 = v205;
    *((void *)&v211 + 1) = v59;
    sub_1BDF859F0();
    char v134 = sub_1BE070A80();
    swift_bridgeObjectRelease();
    if ((v134 & 1) == 0) {
      goto LABEL_90;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v74 = v206;
LABEL_93:
  unint64_t v135 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56);
  v135(v51, 1, 1, v17);
LABEL_94:
  uint64_t v205 = v59;
  v214[0] = 0;
  sub_1BDFC0F7C(v203, v199 & 1, a8, v214, v198, v207);
  if (v16)
  {
    unsigned __int8 v136 = *v16;
    *unint64_t v16 = 0;
  }
  v135(v47, 1, 1, v17);
  uint64_t v137 = (uint64_t)v197;
  sub_1BDF86808((uint64_t)v51, (uint64_t)v197, &qword_1EB678030);
  uint64_t v138 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  if (v138(v137, 1, v17) != 1)
  {
    uint64_t v139 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
    uint64_t v140 = v195;
    v139(v195, v137, v17);
    uint64_t v137 = v192;
    sub_1BDF86808(v207, v192, &qword_1EB678030);
    if (v138(v137, 1, v17) != 1)
    {
      uint64_t v152 = v188;
      v139(v188, v137, v17);
      uint64_t v153 = v186;
      sub_1BE06EC60();
      uint64_t v154 = (void (**)(char *, uint64_t))(v74 + 8);
      if (v184)
      {
        v155 = v187;
        sub_1BE06EC90();
        uint64_t v156 = v153;
        uint64_t v157 = *v154;
        (*v154)(v156, v17);
        uint64_t v158 = (uint64_t)v185;
        uint64_t v159 = v152;
        uint64_t v160 = v195;
        sub_1BE06EC90();
        v157(v155, v17);
        uint64_t v161 = (uint64_t)v202;
        sub_1BDF8686C((uint64_t)v202, &qword_1EB678030);
        v135((char *)v158, 0, 1, v17);
        sub_1BDFC3B78(v158, v161);
        uint64_t v162 = (uint64_t)v204;
        if (v196)
        {
          uint64_t v163 = v214[0];
          uint64_t v164 = *v196;
          char *v196 = v214[0];
          id v165 = v163;
        }
        v157(v159, v17);
        v157(v160, v17);
        uint64_t v47 = v202;
        goto LABEL_113;
      }
      v168 = v187;
      uint64_t v169 = v195;
      sub_1BE06EC90();
      uint64_t v170 = v153;
      uint64_t v171 = v17;
      uint64_t v172 = *v154;
      (*v154)(v170, v171);
      uint64_t v173 = (uint64_t)v185;
      sub_1BE06EC90();
      v172(v168, v171);
      v172(v152, v171);
      v172(v169, v171);
      uint64_t v174 = (uint64_t)v202;
      sub_1BDF8686C((uint64_t)v202, &qword_1EB678030);
      uint64_t v175 = v171;
      uint64_t v47 = (char *)v174;
      v135((char *)v173, 0, 1, v175);
      sub_1BDFC3B78(v173, v174);
LABEL_112:
      uint64_t v162 = (uint64_t)v204;
LABEL_113:
      char v144 = (void (**)(char *, uint64_t))v201;
      goto LABEL_114;
    }
    (*(void (**)(char *, uint64_t))(v74 + 8))(v140, v17);
    uint64_t v47 = v202;
  }
  uint64_t v141 = (uint64_t)v194;
  sub_1BDF8686C((uint64_t)v47, &qword_1EB678030);
  sub_1BDF8686C(v137, &qword_1EB678030);
  uint64_t v142 = v193;
  sub_1BDF86808(v207, v193, &qword_1EB678030);
  if (v138(v142, 1, v17) != 1)
  {
    uint64_t v147 = v206;
    uint64_t v148 = v190;
    (*(void (**)(char *, uint64_t, uint64_t))(v206 + 32))(v190, v142, v17);
    (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v47, v148, v17);
    v135(v47, 0, 1, v17);
    if (v196)
    {
      uint64_t v149 = v214[0];
      uint64_t v150 = *v196;
      char *v196 = v214[0];
      id v151 = v149;

      uint64_t v147 = v206;
    }
    (*(void (**)(char *, uint64_t))(v147 + 8))(v148, v17);
    goto LABEL_112;
  }
  sub_1BDF8686C(v142, &qword_1EB678030);
  sub_1BDF86808((uint64_t)v204, v141, &qword_1EB678030);
  unsigned int v143 = v138(v141, 1, v17);
  char v144 = (void (**)(char *, uint64_t))v201;
  if (v143 == 1)
  {
    sub_1BDF8686C(v141, &qword_1EB678030);
    char v145 = v47;
    uint64_t v146 = 1;
  }
  else
  {
    uint64_t v166 = *(void (**)(char *, uint64_t, uint64_t))(v206 + 32);
    char v167 = v183;
    v166(v183, v141, v17);
    v166(v47, (uint64_t)v167, v17);
    char v145 = v47;
    uint64_t v146 = 0;
  }
  v135(v145, v146, 1, v17);
  uint64_t v162 = (uint64_t)v204;
LABEL_114:
  sub_1BDFC18A8((uint64_t)v47, v144, v200);
  sub_1BDF8686C((uint64_t)v47, &qword_1EB678030);
  sub_1BDF8686C(v207, &qword_1EB678030);
  sub_1BDF8686C(v162, &qword_1EB678030);

  return swift_bridgeObjectRelease();
}

void sub_1BDFC0F7C(uint64_t a1@<X0>, int a2@<W1>, char a3@<W2>, void **a4@<X3>, unsigned char *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v93 = a5;
  uint64_t v94 = a4;
  LODWORD(v91) = a2;
  uint64_t v101 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = sub_1BE06ED20();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1BE06EFC0();
  uint64_t v89 = *(void *)(v13 - 8);
  uint64_t v90 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v88 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v87 = (char *)&v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_1BE06ECB0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v92 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1BE06EE10();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a3 & 0x20) == 0) {
    goto LABEL_14;
  }
  uint64_t v95 = v26;
  uint64_t v86 = v17;
  sub_1BDF86808(a1, (uint64_t)v22, &qword_1EB678020);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_1BDF8686C((uint64_t)v22, &qword_1EB678020);
LABEL_13:
    uint64_t v17 = v86;
LABEL_14:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a6, 1, 1, v17);
    return;
  }
  unint64_t v83 = v12;
  uint64_t v27 = v95;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v95, v22, v23);
  uint64_t v28 = sub_1BE06EDC0();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = HIBYTE(v30) & 0xF;
  if ((v30 & 0x2000000000000000) == 0) {
    uint64_t v31 = v28 & 0xFFFFFFFFFFFFLL;
  }
  if (!v31)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
    goto LABEL_13;
  }
  uint64_t v84 = v24;
  uint64_t v85 = v23;
  __int16 v100 = 0;
  uint64_t v32 = v94;
  if (v94)
  {
    uint64_t v33 = *v94;
    *uint64_t v94 = 0;
  }
  uint64_t v34 = self;
  uint64_t v35 = (void *)sub_1BE06EDD0();
  id v36 = objc_msgSend(v34, sel_synchronousTitleForURL_incomplete_, v35, (char *)&v100 + 1);

  if (!v36)
  {
    BOOL v40 = (a3 & 0x40) == 0;
    if ((unint64_t)v32 | a3 & 0x40)
    {
      uint64_t v39 = 0;
      uint64_t v82 = 0;
LABEL_18:
      uint64_t v41 = (void *)sub_1BE06EDD0();
      id v98 = 0;
      id v42 = objc_msgSend(v34, sel_synchronousOutlineIconForURL_isBroadcast_outImageName_incomplete_, v41, v91 & 1, &v98, &v100);

      id v43 = v98;
      if (v32)
      {
        char v44 = *v32;
        void *v32 = v98;
        id v45 = v43;
      }
      else
      {
        id v47 = v98;
      }
      if (v42) {
        char v48 = v40;
      }
      else {
        char v48 = 1;
      }
      if (v48)
      {
        if (v39)
        {
          sub_1BE06ED10();
          uint64_t v46 = v92;
          sub_1BE06ECC0();

          goto LABEL_32;
        }
      }
      else if (v39)
      {
        uint64_t v94 = (void **)v43;
        id v49 = objc_allocWithZone(MEMORY[0x1E4FB0870]);
        id v50 = v42;
        id v81 = objc_msgSend(v49, sel_init);
        id v91 = v50;
        objc_msgSend(v81, sel_setImage_, v50);
        id v98 = 0;
        unint64_t v99 = 0xE000000000000000;
        sub_1BE071040();
        uint64_t v51 = (uint64_t)v98;
        unint64_t v52 = v99;
        sub_1BE070450();
        id v53 = CUIKBundle();
        sub_1BE06EF70();
        sub_1BE070530();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33C8);
        uint64_t v54 = swift_allocObject();
        *(_OWORD *)(v54 + 16) = xmmword_1BE079670;
        uint64_t v55 = MEMORY[0x1E4FBB1A0];
        *(void *)(v54 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v56 = sub_1BDFC3B24();
        *(void *)(v54 + 32) = v51;
        *(void *)(v54 + 40) = v52;
        *(void *)(v54 + 96) = v55;
        *(void *)(v54 + 104) = v56;
        uint64_t v57 = v82;
        *(void *)(v54 + 64) = v56;
        *(void *)(v54 + 72) = v57;
        *(void *)(v54 + 80) = v39;
        swift_bridgeObjectRetain();
        sub_1BE0704D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v58 = objc_allocWithZone(MEMORY[0x1E4F28E48]);
        uint64_t v59 = (void *)sub_1BE0704C0();
        swift_bridgeObjectRelease();
        id v60 = objc_msgSend(v58, sel_initWithString_, v59);

        id v61 = objc_msgSend(v60, sel_string);
        uint64_t v62 = sub_1BE070500();
        unint64_t v64 = v63;

        id v98 = (id)v62;
        unint64_t v99 = v64;
        uint64_t v96 = v51;
        unint64_t v97 = v52;
        uint64_t v65 = (uint64_t)v83;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v83, 1, 1, v90);
        sub_1BDF859F0();
        uint64_t v66 = (void *)sub_1BE070A70();
        unint64_t v68 = v67;
        LOBYTE(v62) = v69;
        sub_1BDF8686C(v65, &qword_1EB678018);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v62 & 1) == 0)
        {
          id v98 = v66;
          unint64_t v99 = v68;
          id v70 = objc_msgSend(v60, sel_string);
          uint64_t v71 = sub_1BE070500();
          unint64_t v73 = v72;

          uint64_t v96 = v71;
          unint64_t v97 = v73;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33D8);
          sub_1BDF86964(&qword_1EA0E33E0, &qword_1EA0E33D8);
          uint64_t v74 = sub_1BE0709B0();
          id v75 = v81;
          objc_msgSend(v60, sel_addAttribute_value_range_, *MEMORY[0x1E4FB06B8], v81, v74, v76);
          id v77 = v60;
          uint64_t v46 = v92;
          sub_1BE06ECE0();

          id v78 = v91;
          goto LABEL_32;
        }
LABEL_37:
        __break(1u);
        return;
      }
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v37 = sub_1BE070500();
  uint64_t v39 = v38;

  BOOL v40 = (a3 & 0x40) == 0;
  if ((unint64_t)v32 | a3 & 0x40)
  {
    uint64_t v82 = v37;
    goto LABEL_18;
  }
  if (!v39) {
    goto LABEL_35;
  }
  sub_1BE06ED10();
  uint64_t v46 = v92;
  sub_1BE06ECC0();
LABEL_32:
  uint64_t v79 = v86;
  if (v93) {
    unsigned char *v93 = (HIBYTE(v100) | v100) & 1;
  }
  (*(void (**)(char *, uint64_t))(v84 + 8))(v95, v85);
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(a6, v46, v79);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(a6, 0, 1, v79);
}

uint64_t sub_1BDFC18A8@<X0>(uint64_t a1@<X0>, void (**a2)(char *, uint64_t)@<X1>, char *a3@<X8>)
{
  uint64_t v71 = a3;
  uint64_t v5 = sub_1BE06ED30();
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v64 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678040);
  MEMORY[0x1F4188790](v63);
  uint64_t v62 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1BE06EB50();
  uint64_t v67 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  unint64_t v73 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1BE06ECA0();
  uint64_t v70 = *(void *)(v75 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v75);
  uint64_t v66 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v58 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v58 - v14;
  uint64_t v16 = sub_1BE06EC80();
  uint64_t v68 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678028);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v69 = (uint64_t)v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v65 = (char *)v58 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678030);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1BE06ECB0();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  unint64_t v29 = (char *)v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  uint64_t v32 = v31;
  sub_1BDF86808(v30, (uint64_t)v25, &qword_1EB678030);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v32) == 1)
  {
    sub_1BDF8686C((uint64_t)v25, &qword_1EB678030);
    uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
    uint64_t v34 = v71;
    uint64_t v35 = 1;
    return v33((uint64_t)v34, v35, 1, v32);
  }
  unint64_t v72 = a2;
  id v36 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
  v36(v29, v25, v32);
  uint64_t v37 = v71;
  if (((unsigned __int16)v72 & 0x100) == 0)
  {
LABEL_12:
    v36(v37, v29, v32);
    uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
    uint64_t v34 = v37;
    uint64_t v35 = 0;
    return v33((uint64_t)v34, v35, 1, v32);
  }
  v58[0] = v36;
  v58[1] = v27 + 32;
  uint64_t v60 = v32;
  uint64_t v61 = v27;
  uint64_t v59 = v29;
  sub_1BE06EC70();
  sub_1BDFC3BE0(&qword_1EB677EE0, MEMORY[0x1E4F272A8]);
  sub_1BE070870();
  unint64_t v72 = (void (**)(char *, uint64_t))(v70 + 8);
  uint64_t v38 = (void (**)(char *, uint64_t))(v67 + 8);
  while (1)
  {
    sub_1BE070880();
    sub_1BDFC3BE0(&qword_1EB677EE8, MEMORY[0x1E4F27388]);
    uint64_t v39 = v75;
    char v40 = sub_1BE070440();
    uint64_t v41 = *v72;
    (*v72)(v13, v39);
    if (v40)
    {
      uint64_t v45 = v75;
      v41(v15, v75);
      uint64_t v46 = 1;
      uint64_t v47 = (uint64_t)v65;
      char v48 = v66;
      uint64_t v49 = v70;
      goto LABEL_10;
    }
    id v42 = (void (*)(char *, void))sub_1BE0708C0();
    v42(v76, 0);
    id v43 = v73;
    sub_1BE06EB40();
    char v44 = sub_1BE06EB30();
    (*v38)(v43, v74);
    if (v44) {
      break;
    }
    sub_1BE070890();
  }
  uint64_t v49 = v70;
  uint64_t v47 = (uint64_t)v65;
  uint64_t v45 = v75;
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v65, v15, v75);
  uint64_t v46 = 0;
  char v48 = v66;
LABEL_10:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56))(v47, v46, 1, v45);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v18, v16);
  uint64_t v50 = v69;
  sub_1BDF86808(v47, v69, &qword_1EB678028);
  int v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v50, 1, v45);
  uint64_t v27 = v61;
  uint64_t v52 = v47;
  if (v51 == 1)
  {
    sub_1BDF8686C(v47, &qword_1EB678028);
    sub_1BDF8686C(v50, &qword_1EB678028);
    uint64_t v37 = v71;
    unint64_t v29 = v59;
    uint64_t v32 = v60;
    id v36 = (void (*)(char *, char *, uint64_t))v58[0];
    goto LABEL_12;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v48, v50, v45);
  uint64_t result = sub_1BE070440();
  if (result)
  {
    uint64_t v54 = (uint64_t)v62;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v62, v48, v45);
    sub_1BDF86964(&qword_1EB677EF8, &qword_1EB678040);
    uint64_t v55 = v59;
    sub_1BE06ECD0();
    sub_1BDF8686C(v54, &qword_1EB678040);
    unint64_t v56 = v71;
    sub_1BE06ECF0();
    v41(v48, v45);
    sub_1BDF8686C(v52, &qword_1EB678028);
    uint64_t v57 = v60;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v55, v60);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v56, 0, 1, v57);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDFC2110(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  BOOL v8 = *a1 == a2 && v6 == a3;
  if (!v8 && (sub_1BE070EF0() & 1) == 0) {
    return 1;
  }
  uint64_t v9 = a4[3];
  uint64_t v10 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v9);
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 400))(v9, v10)) {
    return 1;
  }
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33C0);
  uint64_t v11 = sub_1BE070C70();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v32 = v4;
  for (uint64_t i = v11 + 32; ; i += 40)
  {
    sub_1BDFC3C28(i, (uint64_t)v29);
    uint64_t v14 = v30;
    uint64_t v15 = v31;
    __swift_project_boxed_opaque_existential_1(v29, v30);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 32))(v14, v15);
    sub_1BDFC3C28((uint64_t)v29, (uint64_t)v26);
    if (v16 != 2) {
      goto LABEL_10;
    }
    uint64_t v17 = v27;
    uint64_t v18 = v28;
    __swift_project_boxed_opaque_existential_1(v26, v27);
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 24);
    swift_bridgeObjectRetain();
    uint64_t v21 = v20(v17, v19);
    if (!v22)
    {
      swift_bridgeObjectRelease();
LABEL_10:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      goto LABEL_11;
    }
    if (v7 == v21 && v22 == v6) {
      break;
    }
    char v24 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    if (v24) {
      goto LABEL_24;
    }
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    if (!--v12)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
LABEL_24:
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return 0;
}

uint64_t sub_1BDFC2380(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    uint64_t v5 = (uint64_t (*)(void *))result;
    unint64_t v6 = 0;
    uint64_t v7 = (uint64_t *)(a3 + 40);
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v15 = (uint64_t (*)(void *))result;
    while (v6 < *(void *)(v4 + 16))
    {
      uint64_t v10 = *(v7 - 1);
      uint64_t v9 = *v7;
      v18[0] = v10;
      v18[1] = v9;
      swift_bridgeObjectRetain();
      char v11 = v5(v18);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if (v11)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v19 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1BDFF4810(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v19;
        }
        unint64_t v13 = *(void *)(v8 + 16);
        unint64_t v12 = *(void *)(v8 + 24);
        if (v13 >= v12 >> 1)
        {
          uint64_t result = sub_1BDFF4810(v12 > 1, v13 + 1, 1);
          uint64_t v8 = v19;
        }
        *(void *)(v8 + 16) = v13 + 1;
        uint64_t v14 = v8 + 16 * v13;
        *(void *)(v14 + 32) = v10;
        *(void *)(v14 + 40) = v9;
        uint64_t v4 = a3;
        uint64_t v5 = v15;
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6) {
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

id LocationDescriptionGenerator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id LocationDescriptionGenerator.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocationDescriptionGenerator();
  return objc_msgSendSuper2(&v2, sel_init);
}

id LocationDescriptionGenerator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocationDescriptionGenerator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static LocationDescriptionGenerator.locationString(for:options:incomplete:leadingImageName:)(void *a1, uint64_t a2, unsigned char *a3, void **a4)
{
  uint64_t v27 = a2;
  uint64_t v7 = sub_1BE06ECB0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  char v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678030);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v26 - v18;
  if (a1)
  {
    uint64_t v26 = v11;
    uint64_t v20 = a3;
    uint64_t v21 = a4;
    id v22 = a1;
    id v23 = objc_msgSend(v22, sel_uniqueID);

    if (v23)
    {

      *((void *)&v29 + 1) = &type metadata for EKEventModelWrapper;
      unint64_t v30 = sub_1BDFC34E4();
      *(void *)&long long v28 = v22;
      a4 = v21;
      a3 = v20;
      char v11 = v26;
      goto LABEL_6;
    }

    a4 = v21;
    a3 = v20;
    char v11 = v26;
  }
  unint64_t v30 = 0;
  long long v28 = 0u;
  long long v29 = 0u;
LABEL_6:
  static LocationDescriptionGenerator.locationString(for:options:incomplete:leadingImageName:)((uint64_t)&v28, v27, a3, a4, v19);
  sub_1BDF8686C((uint64_t)&v28, &qword_1EB677EF0);
  sub_1BDF86808((uint64_t)v19, (uint64_t)v17, &qword_1EB678030);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v17, 1, v7) == 1)
  {
    uint64_t v24 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v17, v7);
    sub_1BDFC34A4();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    uint64_t v24 = sub_1BE070940();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  }
  sub_1BDF8686C((uint64_t)v19, &qword_1EB678030);
  return v24;
}

uint64_t static LocationDescriptionGenerator.locationString(for:locationWithoutPrediction:preferredLocation:conferenceURL:conferenceURLIsBroadcast:options:incomplete:leadingImageName:)(void *a1, void *a2, void *a3, uint64_t a4, int a5, uint64_t a6, unsigned char *a7, void **a8)
{
  uint64_t v38 = a6;
  uint64_t v35 = a8;
  id v36 = a7;
  int v34 = a5;
  uint64_t v37 = a4;
  uint64_t v11 = sub_1BE06ECB0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v33 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678030);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  id v22 = (char *)&v32 - v21;
  if (a1)
  {
    id v23 = a1;
    uint64_t v24 = sub_1BE070540();
    a1 = v25;
    if (a2) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v27 = 0;
    if (a3) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  uint64_t v24 = 0;
  if (!a2) {
    goto LABEL_6;
  }
LABEL_3:
  id v26 = a2;
  uint64_t v27 = sub_1BE070540();
  a2 = v28;
  if (a3)
  {
LABEL_4:
    *((void *)&v40 + 1) = &type metadata for EKLocationModelWrapper;
    uint64_t v41 = &protocol witness table for EKLocationModelWrapper;
    *(void *)&long long v39 = a3;
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v41 = 0;
  long long v39 = 0u;
  long long v40 = 0u;
LABEL_8:
  id v29 = a3;
  sub_1BDFBF9C4(v24, (unint64_t)a1, v27, (unint64_t)a2, (uint64_t)&v39, v37, v34 & 1, v38, v22, v36, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDF8686C((uint64_t)&v39, &qword_1EB678038);
  sub_1BDF86808((uint64_t)v22, (uint64_t)v20, &qword_1EB678030);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v20, 1, v11) == 1)
  {
    uint64_t v30 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v20, v11);
    sub_1BDFC34A4();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v33, v16, v11);
    uint64_t v30 = sub_1BE070940();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
  sub_1BDF8686C((uint64_t)v22, &qword_1EB678030);
  return v30;
}

uint64_t static LocationDescriptionGenerator.conferenceString(for:conferenceURLIsBroadcast:options:outImageName:incomplete:)(uint64_t a1, int a2, char a3, void **a4, unsigned char *a5)
{
  id v23 = a4;
  uint64_t v24 = a5;
  uint64_t v8 = sub_1BE06ECB0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v23 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678030);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v23 - v19;
  sub_1BDFC0F7C(a1, a2, a3, v23, v24, (uint64_t)&v23 - v19);
  sub_1BDF86808((uint64_t)v20, (uint64_t)v18, &qword_1EB678030);
  uint64_t v21 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v18, 1, v8) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v18, v8);
    sub_1BDFC34A4();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    uint64_t v21 = sub_1BE070940();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  sub_1BDF8686C((uint64_t)v20, &qword_1EB678030);
  return v21;
}

uint64_t sub_1BDFC319C(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 272))(v2, v3);
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
  v22[0] = v4;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 248);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1BE0709E0();
  v22[1] = (uint64_t)v22;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v22 - v11;
  v7(v5, v6);
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    return v22[0];
  }
  v23[3] = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v23[4] = AssociatedConformanceWitness;
  __swift_allocate_boxed_opaque_existential_1(v23);
  (*(void (**)(void))(v13 + 32))();
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v18 = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  if (!v18) {
    return v22[0];
  }
  uint64_t v19 = sub_1BE0705A0();
  if (v19 < 1)
  {
    swift_bridgeObjectRelease();
    return v22[0];
  }
  MEMORY[0x1F4188790](v19);
  void v21[2] = v16;
  _OWORD v21[3] = v18;
  v21[4] = a1;
  uint64_t v14 = sub_1BDFC2380((uint64_t)sub_1BDFC3C8C, (uint64_t)v21, v22[0]);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t type metadata accessor for LocationDescriptionGenerator()
{
  return self;
}

unint64_t sub_1BDFC34A4()
{
  unint64_t result = qword_1EB677F00;
  if (!qword_1EB677F00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EB677F00);
  }
  return result;
}

unint64_t sub_1BDFC34E4()
{
  unint64_t result = qword_1EA0E1958;
  if (!qword_1EA0E1958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1958);
  }
  return result;
}

uint64_t sub_1BDFC3538(uint64_t a1)
{
  uint64_t v2 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDF86808(a1, (uint64_t)v33, &qword_1EB678038);
  uint64_t v8 = v34;
  if (!v34)
  {
    sub_1BDF8686C((uint64_t)v33, &qword_1EB678038);
    long long v30 = 0u;
    long long v31 = 0u;
    uint64_t AssociatedConformanceWitness = 0;
LABEL_9:
    sub_1BDF8686C((uint64_t)&v30, &qword_1EA0E33E8);
    return 0;
  }
  v29[1] = v7;
  v29[2] = v4;
  uint64_t v9 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1BE0709E0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v29 - v14;
  v10(v8, v9);
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t AssociatedConformanceWitness = 0;
    long long v30 = 0u;
    long long v31 = 0u;
  }
  else
  {
    *((void *)&v31 + 1) = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v30);
    (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 32))(boxed_opaque_existential_1, v15, AssociatedTypeWitness);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  if (!*((void *)&v31 + 1)) {
    goto LABEL_9;
  }
  sub_1BDFBEF38(&v30, (uint64_t)v33);
  uint64_t v18 = v34;
  uint64_t v19 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v34;
  uint64_t v23 = v35;
  __swift_project_boxed_opaque_existential_1(v33, v34);
  if (v21)
  {
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 16))(v22, v23);
  }
  else
  {
    switch((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23))
    {
      case 0:
      case 1:
      case 2:
      case 3:
        sub_1BE070450();
        CUIKBundle();
        sub_1BE06EF70();
        uint64_t v24 = sub_1BE070530();
        break;
      default:
        uint64_t v27 = v34;
        uint64_t v28 = v35;
        __swift_project_boxed_opaque_existential_1(v33, v34);
        uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
        break;
    }
  }
  uint64_t v25 = v24;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  return v25;
}

uint64_t _s13CalendarUIKit28LocationDescriptionGeneratorC5label3forSo8NSStringCSgSo012EKStructuredC0CSg_tFZ_0(void *a1)
{
  if (a1)
  {
    *((void *)&v7 + 1) = &type metadata for EKLocationModelWrapper;
    uint64_t v8 = &protocol witness table for EKLocationModelWrapper;
    *(void *)&long long v6 = a1;
  }
  else
  {
    uint64_t v8 = 0;
    long long v6 = 0u;
    long long v7 = 0u;
  }
  id v1 = a1;
  sub_1BDFC3538((uint64_t)&v6);
  uint64_t v3 = v2;
  sub_1BDF8686C((uint64_t)&v6, &qword_1EB678038);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_1BE0704C0();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1BDFC3B24()
{
  unint64_t result = qword_1EA0E33D0;
  if (!qword_1EA0E33D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E33D0);
  }
  return result;
}

uint64_t sub_1BDFC3B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678030);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFC3BE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDFC3C28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1BDFC3C8C(uint64_t *a1)
{
  return sub_1BDFC2110(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32)) & 1;
}

uint64_t sub_1BDFC3CB0()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F28B50]);
  uint64_t v1 = (void *)sub_1BE0704C0();
  id v2 = objc_msgSend(v0, sel_initWithPath_, v1);

  if (v2)
  {
    uint64_t v3 = (void *)sub_1BE0704C0();
    uint64_t v4 = (objc_class *)objc_msgSend(v2, sel_classNamed_, v3);

    if (v4)
    {
      swift_getObjCClassMetadata();
      uint64_t v5 = &unk_1F18CB020;
      class_addProtocol(v4, (Protocol *)v5);

      return swift_dynamicCastTypeToObjCProtocolConditional();
    }
  }
  if (qword_1EA0E2238 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_1BE06F1C0();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EA0F6B90);
  uint64_t v8 = sub_1BE06F1A0();
  os_log_type_t v9 = sub_1BE0708D0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_1BDF08000, v8, v9, "FAProfilePictureStore not available", v10, 2u);
    MEMORY[0x1C188ACF0](v10, -1, -1);
  }

  return 0;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t EventCalendarModelObject.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventCalendarModelObject.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*EventCalendarModelObject.id.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.type.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t EventCalendarModelObject.type.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*EventCalendarModelObject.type.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.externalID.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventCalendarModelObject.externalID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*EventCalendarModelObject.externalID.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventCalendarModelObject.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*EventCalendarModelObject.title.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.displayOrder.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t EventCalendarModelObject.displayOrder.setter(uint64_t result)
{
  *(void *)(v1 + 56) = result;
  return result;
}

uint64_t (*EventCalendarModelObject.displayOrder.modify())()
{
  return nullsub_1;
}

__n128 EventCalendarModelObject.color.getter@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = v1[5].n128_u64[0];
  unsigned __int8 v3 = v1[5].n128_u8[8];
  __n128 result = v1[4];
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

__n128 EventCalendarModelObject.color.setter(__n128 *a1)
{
  unint64_t v2 = a1[1].n128_u64[0];
  unsigned __int8 v3 = a1[1].n128_u8[8];
  __n128 result = *a1;
  v1[4] = *a1;
  v1[5].n128_u64[0] = v2;
  v1[5].n128_u8[8] = v3;
  return result;
}

uint64_t (*EventCalendarModelObject.color.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.allowsContentModifications.getter()
{
  return *(unsigned __int8 *)(v0 + 89);
}

uint64_t EventCalendarModelObject.allowsContentModifications.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 89) = result;
  return result;
}

uint64_t (*EventCalendarModelObject.allowsContentModifications.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.sharingStatus.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t EventCalendarModelObject.sharingStatus.setter(uint64_t result)
{
  *(void *)(v1 + 96) = result;
  return result;
}

uint64_t (*EventCalendarModelObject.sharingStatus.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.source.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1BDFC41C4(v1 + 104, (uint64_t)v4);
  sub_1BDFC41C4((uint64_t)v4, a1);
  return sub_1BDFC42F4((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1BDFC422C);
}

uint64_t sub_1BDFC41C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3400);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFC422C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t EventCalendarModelObject.source.setter(uint64_t a1)
{
  sub_1BDFC41C4(a1, (uint64_t)v3);
  sub_1BDFC41C4(v1 + 104, (uint64_t)v4);
  sub_1BDFC42F4((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1BDFC4370);
  return sub_1BDFC41C4((uint64_t)v3, v1 + 104);
}

uint64_t sub_1BDFC42F4(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))
{
  return a1;
}

uint64_t sub_1BDFC4370(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*EventCalendarModelObject.source.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.isSubscribed.getter()
{
  return *(unsigned __int8 *)(v0 + 239);
}

uint64_t EventCalendarModelObject.isSubscribed.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 239) = result;
  return result;
}

uint64_t (*EventCalendarModelObject.isSubscribed.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.isHolidayCalendar.getter()
{
  return *(unsigned __int8 *)(v0 + 240);
}

uint64_t EventCalendarModelObject.isHolidayCalendar.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 240) = result;
  return result;
}

uint64_t (*EventCalendarModelObject.isHolidayCalendar.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.isSubscribedHolidayCalendar.getter()
{
  return *(unsigned __int8 *)(v0 + 241);
}

uint64_t EventCalendarModelObject.isSubscribedHolidayCalendar.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 241) = result;
  return result;
}

uint64_t (*EventCalendarModelObject.isSubscribedHolidayCalendar.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.isSuggestedEventCalendar.getter()
{
  return *(unsigned __int8 *)(v0 + 242);
}

uint64_t EventCalendarModelObject.isSuggestedEventCalendar.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 242) = result;
  return result;
}

uint64_t (*EventCalendarModelObject.isSuggestedEventCalendar.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.allowsEvents.getter()
{
  return *(unsigned __int8 *)(v0 + 243);
}

uint64_t EventCalendarModelObject.allowsEvents.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 243) = result;
  return result;
}

uint64_t (*EventCalendarModelObject.allowsEvents.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.allowsScheduling.getter()
{
  return *(unsigned __int8 *)(v0 + 244);
}

uint64_t EventCalendarModelObject.allowsScheduling.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 244) = result;
  return result;
}

uint64_t (*EventCalendarModelObject.allowsScheduling.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.sharedOwnerAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 248);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventCalendarModelObject.sharedOwnerAddress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 248) = a1;
  *(void *)(v2 + 256) = a2;
  return result;
}

uint64_t (*EventCalendarModelObject.sharedOwnerAddress.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.sharedOwnerAddresses.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventCalendarModelObject.sharedOwnerAddresses.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 264) = a1;
  return result;
}

uint64_t (*EventCalendarModelObject.sharedOwnerAddresses.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.ownerIdentityAddress.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventCalendarModelObject();
  return sub_1BDF86808(v1 + *(int *)(v3 + 84), a1, &qword_1EB678020);
}

uint64_t type metadata accessor for EventCalendarModelObject()
{
  uint64_t result = qword_1EA0E15C8;
  if (!qword_1EA0E15C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t EventCalendarModelObject.ownerIdentityAddress.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventCalendarModelObject() + 84);

  return sub_1BDF8BFB4(a1, v3);
}

uint64_t (*EventCalendarModelObject.ownerIdentityAddress.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.ownerIdentityEmail.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EventCalendarModelObject() + 88));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventCalendarModelObject.ownerIdentityEmail.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for EventCalendarModelObject() + 88));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EventCalendarModelObject.ownerIdentityEmail.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.ownerIdentityPhoneNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EventCalendarModelObject() + 92));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventCalendarModelObject.ownerIdentityPhoneNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for EventCalendarModelObject() + 92));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EventCalendarModelObject.ownerIdentityPhoneNumber.modify())()
{
  return nullsub_1;
}

uint64_t EventCalendarModelObject.isDefaultCalendarForNewEvents.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventCalendarModelObject() + 96));
}

uint64_t EventCalendarModelObject.isDefaultCalendarForNewEvents.setter(char a1)
{
  uint64_t result = type metadata accessor for EventCalendarModelObject();
  *(unsigned char *)(v1 + *(int *)(result + 96)) = a1;
  return result;
}

uint64_t (*EventCalendarModelObject.isDefaultCalendarForNewEvents.modify())()
{
  return nullsub_1;
}

int8x16_t EventCalendarModelObject.constraints.getter@<Q0>(int8x16_t *a1@<X8>)
{
  sub_1BDFC41C4(v1 + 104, (uint64_t)v8);
  sub_1BDFC41C4((uint64_t)v8, (uint64_t)v9);
  int v3 = sub_1BDFC49E4((uint64_t)v9);
  unint64_t v4 = v11 | ((unint64_t)(v12 | (v13 << 16)) << 32);
  if (v3 == 1) {
    unint64_t v4 = 0;
  }
  int32x2_t v5 = vdup_n_s32(v3 == 1);
  v6.i64[0] = v5.u32[0];
  v6.i64[1] = v5.u32[1];
  int8x16_t result = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v6, 0x3FuLL)), (int8x16_t)xmmword_1BE07CF00, v10);
  *a1 = result;
  a1[1].i32[0] = v4;
  a1[1].i8[6] = BYTE6(v4);
  a1[1].i16[2] = WORD2(v4);
  return result;
}

uint64_t sub_1BDFC49E4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t EventCalendarModelObject.init(id:type:externalID:title:displayOrder:color:allowsContentModifications:sharingStatus:source:isSubscribed:isHolidayCalendar:isSubscribedHolidayCalendar:isSuggestedEventCalendar:allowsEvents:allowsScheduling:sharedOwnerAddress:sharedOwnerAddresses:ownerIdentityAddress:ownerIdentityEmail:ownerIdentityPhoneNumber:isDefaultCalendarForNewEvents:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long *a10, char a11, uint64_t a12, uint64_t a13, char a14, char a15, char a16, char a17, char a18, char a19, long long a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  long long v36 = *a10;
  uint64_t v28 = *((void *)a10 + 2);
  char v29 = *((unsigned char *)a10 + 24);
  sub_1BDFC41C4(a13, (uint64_t)v45);
  long long v30 = (int *)type metadata accessor for EventCalendarModelObject();
  uint64_t v31 = a9 + v30[21];
  uint64_t v32 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
  uint64_t v33 = (void *)(a9 + v30[22]);
  *uint64_t v33 = 0;
  v33[1] = 0;
  uint64_t v34 = (void *)(a9 + v30[23]);
  void *v34 = 0;
  v34[1] = 0;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(void *)(a9 + 56) = a8;
  *(_OWORD *)(a9 + 64) = v36;
  *(void *)(a9 + 80) = v28;
  *(unsigned char *)(a9 + 88) = v29;
  *(unsigned char *)(a9 + 89) = a11;
  *(void *)(a9 + 96) = a12;
  sub_1BDFC41C4((uint64_t)v45, a9 + 104);
  *(unsigned char *)(a9 + 239) = a14;
  *(unsigned char *)(a9 + 240) = a15;
  *(unsigned char *)(a9 + 241) = a16;
  *(unsigned char *)(a9 + 242) = a17;
  *(unsigned char *)(a9 + 243) = a18;
  *(unsigned char *)(a9 + 244) = a19;
  *(_OWORD *)(a9 + 248) = a20;
  *(void *)(a9 + 264) = a21;
  sub_1BDF8BFB4(a22, v31);
  swift_bridgeObjectRelease();
  *uint64_t v33 = a23;
  v33[1] = a24;
  uint64_t result = swift_bridgeObjectRelease();
  void *v34 = a25;
  v34[1] = a26;
  *(unsigned char *)(a9 + v30[24]) = a27;
  return result;
}

uint64_t EventCalendarModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v86 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int32x2_t v5 = (int *)type metadata accessor for EventCalendarModelObject();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v7 + 3) = 0;
  *((void *)v7 + 4) = 0;
  *((void *)v7 + 9) = 0;
  *((void *)v7 + 10) = 0;
  *((void *)v7 + 8) = 0;
  v7[88] = -1;
  sub_1BDFC54C0((uint64_t)v102);
  uint64_t v84 = v7 + 104;
  sub_1BDFC41C4((uint64_t)v102, (uint64_t)(v7 + 104));
  *((void *)v7 + 31) = 0;
  *((void *)v7 + 32) = 0;
  uint64_t v8 = (uint64_t)&v7[v5[21]];
  uint64_t v9 = sub_1BE06EE10();
  int8x16_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  uint64_t v90 = v8;
  v10(v8, 1, 1, v9);
  unsigned int v11 = &v7[v5[22]];
  *(void *)unsigned int v11 = 0;
  *((void *)v11 + 1) = 0;
  id v91 = v11;
  uint64_t v87 = v5;
  unsigned __int16 v12 = &v7[v5[23]];
  *(void *)unsigned __int16 v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v85 = v12;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  *(void *)uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(v13, v14);
  *((void *)v7 + 1) = v15;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  *((void *)v7 + 2) = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17);
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  *((void *)v7 + 3) = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 56))(v18, v19);
  *((void *)v7 + 4) = v20;
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  *((void *)v7 + 5) = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 64))(v21, v22);
  *((void *)v7 + 6) = v23;
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  *((void *)v7 + 7) = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 72))(v24, v25);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v27 + 80))(&v96, v26, v27);
  uint64_t v28 = v97;
  char v29 = v98;
  *((_OWORD *)v7 + 4) = v96;
  *((void *)v7 + 10) = v28;
  v7[88] = v29;
  uint64_t v30 = a1[3];
  uint64_t v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  v7[89] = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 88))(v30, v31) & 1;
  uint64_t v32 = a1[3];
  uint64_t v33 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v32);
  *((void *)v7 + 12) = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 96))(v32, v33);
  uint64_t v35 = a1[3];
  uint64_t v34 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v35);
  uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v34 + 104);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v83 = sub_1BE0709E0();
  uint64_t v37 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  long long v39 = (char *)&v83 - v38;
  v89(v35, v34);
  uint64_t v40 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v39, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v83);
    uint64_t AssociatedConformanceWitness = 0;
    long long v99 = 0u;
    long long v100 = 0u;
  }
  else
  {
    *((void *)&v100 + 1) = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v99);
    (*(void (**)(uint64_t *, char *, uint64_t))(v40 + 32))(boxed_opaque_existential_1, v39, AssociatedTypeWitness);
  }
  id v43 = v87;
  uint64_t v42 = v88;
  uint64_t v45 = (uint64_t *)v85;
  uint64_t v44 = (uint64_t)v86;
  uint64_t v46 = (uint64_t)v84;
  sub_1BDF86808((uint64_t)&v99, (uint64_t)&v94, &qword_1EA0E3408);
  if (v95)
  {
    sub_1BDFBEF38(&v94, (uint64_t)&v96);
    sub_1BDFC3C28((uint64_t)&v96, (uint64_t)v92);
    EventSourceModelObject.init(_:)(v92, (uint64_t)v93);
    nullsub_1(v93);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
    uint64_t v47 = v93;
  }
  else
  {
    uint64_t v47 = v102;
  }
  sub_1BDFC41C4((uint64_t)v47, (uint64_t)&v96);
  sub_1BDF8686C((uint64_t)&v99, &qword_1EA0E3408);
  sub_1BDFC41C4(v46, (uint64_t)v93);
  sub_1BDFC42F4((uint64_t)v93, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1BDFC4370);
  sub_1BDFC41C4((uint64_t)&v96, v46);
  uint64_t v48 = a1[3];
  uint64_t v49 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v48);
  v7[239] = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 112))(v48, v49) & 1;
  uint64_t v50 = a1[3];
  uint64_t v51 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v50);
  v7[240] = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 120))(v50, v51) & 1;
  uint64_t v52 = a1[3];
  uint64_t v53 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v52);
  v7[241] = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 128))(v52, v53) & 1;
  uint64_t v54 = a1[3];
  uint64_t v55 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v54);
  v7[242] = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 136))(v54, v55) & 1;
  uint64_t v56 = a1[3];
  uint64_t v57 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v56);
  v7[243] = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 144))(v56, v57) & 1;
  uint64_t v58 = a1[3];
  uint64_t v59 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v58);
  v7[244] = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 152))(v58, v59) & 1;
  uint64_t v60 = a1[3];
  uint64_t v61 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v60);
  uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 160))(v60, v61);
  uint64_t v64 = v63;
  swift_bridgeObjectRelease();
  *((void *)v7 + 31) = v62;
  *((void *)v7 + 32) = v64;
  uint64_t v65 = a1[3];
  uint64_t v66 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v65);
  *((void *)v7 + 33) = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 168))(v65, v66);
  uint64_t v67 = a1[3];
  uint64_t v68 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v67);
  (*(void (**)(uint64_t, uint64_t))(v68 + 176))(v67, v68);
  sub_1BDF8BFB4(v44, v90);
  uint64_t v69 = a1[3];
  uint64_t v70 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v69);
  uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 184))(v69, v70);
  uint64_t v73 = v72;
  uint64_t v74 = (uint64_t *)v91;
  swift_bridgeObjectRelease();
  uint64_t *v74 = v71;
  v74[1] = v73;
  uint64_t v75 = a1[3];
  uint64_t v76 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v75);
  uint64_t v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 192))(v75, v76);
  uint64_t v79 = v78;
  swift_bridgeObjectRelease();
  uint64_t *v45 = v77;
  v45[1] = v79;
  uint64_t v80 = a1[3];
  uint64_t v81 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v80);
  v7[v43[24]] = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 200))(v80, v81) & 1;
  sub_1BDFC54DC((uint64_t)v7, v42);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BDFC5540((uint64_t)v7);
}

double sub_1BDFC54C0(uint64_t a1)
{
  *(void *)(a1 + 127) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1BDFC54DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventCalendarModelObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFC5540(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EventCalendarModelObject();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t EventCalendarModelObject.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1BE06EE10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int32x2_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v19 = (uint64_t)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  sub_1BE070FC0();
  if (*(void *)(v0 + 32))
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BE070FD0();
  }
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  sub_1BE070FC0();
  int v8 = *(unsigned __int8 *)(v0 + 88);
  if (v8 == 255)
  {
    sub_1BE070FD0();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 80);
    long long v31 = *(_OWORD *)(v0 + 64);
    uint64_t v32 = v9;
    char v33 = v8 & 1;
    sub_1BE070FD0();
    CalendarColor.hash(into:)();
  }
  sub_1BE070FD0();
  sub_1BE070FC0();
  sub_1BDFC41C4(v0 + 104, (uint64_t)v30);
  sub_1BDFC41C4((uint64_t)v30, (uint64_t)&v31);
  if (sub_1BDFC49E4((uint64_t)&v31) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    sub_1BDFC41C4((uint64_t)v30, (uint64_t)v28);
    long long v26 = v28[6];
    v27[0] = *(_OWORD *)v29;
    *(void *)((char *)v27 + 15) = *(void *)&v29[15];
    long long v22 = v28[2];
    long long v23 = v28[3];
    long long v24 = v28[4];
    long long v25 = v28[5];
    long long v20 = v28[0];
    long long v21 = v28[1];
    sub_1BE070FD0();
    EventSourceModelObject.hash(into:)();
  }
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  if (*(void *)(v0 + 256))
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BE070FD0();
  }
  uint64_t v10 = *(void *)(v0 + 264);
  sub_1BE070FC0();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v18 = v5;
    uint64_t v12 = v2;
    uint64_t v13 = v3;
    swift_bridgeObjectRetain();
    uint64_t v14 = v10 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BE070590();
      swift_bridgeObjectRelease();
      v14 += 16;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v3 = v13;
    uint64_t v2 = v12;
    int32x2_t v5 = v18;
  }
  uint64_t v15 = (int *)type metadata accessor for EventCalendarModelObject();
  uint64_t v16 = v19;
  sub_1BDF86808(v1 + v15[21], v19, &qword_1EB678020);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v16, 1, v2) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v16, v2);
    sub_1BE070FD0();
    sub_1BDFCAB50(&qword_1EA0E2D48, MEMORY[0x1E4F276F0]);
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (*(void *)(v1 + v15[22] + 8))
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BE070FD0();
  }
  if (*(void *)(v1 + v15[23] + 8))
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BE070FD0();
  }
  return sub_1BE070FD0();
}

uint64_t EventCalendarModelObject.hashValue.getter()
{
  return sub_1BE070FF0();
}

unint64_t sub_1BDFC5B14(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x6C616E7265747865;
      break;
    case 3:
      unint64_t result = 0x656C746974;
      break;
    case 4:
      unint64_t result = 0x4F79616C70736964;
      break;
    case 5:
      unint64_t result = 0x726F6C6F63;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0x53676E6972616873;
      break;
    case 8:
      unint64_t result = 0x656372756F73;
      break;
    case 9:
      unint64_t result = 0x4449656372756F73;
      break;
    case 10:
      unint64_t result = 0x7263736275537369;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 13:
      unint64_t result = 0xD000000000000018;
      break;
    case 14:
      unint64_t result = 0x764573776F6C6C61;
      break;
    case 15:
      unint64_t result = 0xD000000000000010;
      break;
    case 16:
    case 19:
      unint64_t result = 0xD000000000000012;
      break;
    case 17:
      unint64_t result = 0xD000000000000014;
      break;
    case 18:
      unint64_t result = 0xD000000000000014;
      break;
    case 20:
      unint64_t result = 0xD000000000000018;
      break;
    case 21:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDFC5DAC()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1BDFC5DB4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDFC5DE4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDFC5E14()
{
  return *(void *)(v0 + 56);
}

__n128 sub_1BDFC5E1C@<Q0>(__n128 *a1@<X8>)
{
  unint64_t v2 = v1[5].n128_u64[0];
  unsigned __int8 v3 = v1[5].n128_u8[8];
  __n128 result = v1[4];
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t sub_1BDFC5E38()
{
  return *(unsigned __int8 *)(v0 + 89);
}

uint64_t sub_1BDFC5E40()
{
  return *(void *)(v0 + 96);
}

uint64_t sub_1BDFC5E48@<X0>(uint64_t a1@<X8>)
{
  sub_1BDFC41C4(v1 + 104, (uint64_t)v4);
  sub_1BDFC41C4((uint64_t)v4, a1);
  return sub_1BDFC42F4((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1BDFC422C);
}

uint64_t sub_1BDFC5EA4()
{
  return *(unsigned __int8 *)(v0 + 239);
}

uint64_t sub_1BDFC5EAC()
{
  return *(unsigned __int8 *)(v0 + 240);
}

uint64_t sub_1BDFC5EB4()
{
  return *(unsigned __int8 *)(v0 + 241);
}

uint64_t sub_1BDFC5EBC()
{
  return *(unsigned __int8 *)(v0 + 242);
}

uint64_t sub_1BDFC5EC4()
{
  return *(unsigned __int8 *)(v0 + 243);
}

uint64_t sub_1BDFC5ECC()
{
  return *(unsigned __int8 *)(v0 + 244);
}

uint64_t sub_1BDFC5ED4()
{
  uint64_t v1 = *(void *)(v0 + 248);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDFC5F04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDFC5F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF86808(v2 + *(int *)(a1 + 84), a2, &qword_1EB678020);
}

uint64_t sub_1BDFC5F38(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 88));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BDFC5F70(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 92));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BDFC5FA8(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 96));
}

uint64_t sub_1BDFC5FB4()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFC5FF8()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFC6034@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

int8x16_t sub_1BDFC6040@<Q0>(int8x16_t *a1@<X8>)
{
  sub_1BDFC41C4(v1 + 104, (uint64_t)v8);
  sub_1BDFC41C4((uint64_t)v8, (uint64_t)v9);
  int v3 = sub_1BDFC49E4((uint64_t)v9);
  unint64_t v4 = v11 | ((unint64_t)(v12 | (v13 << 16)) << 32);
  if (v3 == 1) {
    unint64_t v4 = 0;
  }
  int32x2_t v5 = vdup_n_s32(v3 == 1);
  v6.i64[0] = v5.u32[0];
  v6.i64[1] = v5.u32[1];
  int8x16_t result = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v6, 0x3FuLL)), (int8x16_t)xmmword_1BE07CF00, v10);
  *a1 = result;
  a1[1].i32[0] = v4;
  a1[1].i8[6] = BYTE6(v4);
  a1[1].i16[2] = WORD2(v4);
  return result;
}

unint64_t sub_1BDFC60E4()
{
  return sub_1BDFC5B14(*v0);
}

uint64_t sub_1BDFC60EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFCA1C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDFC6114(unsigned char *a1@<X8>)
{
  *a1 = 22;
}

uint64_t sub_1BDFC6120(uint64_t a1)
{
  unint64_t v2 = sub_1BDFC86B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFC615C(uint64_t a1)
{
  unint64_t v2 = sub_1BDFC86B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventCalendarModelObject.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v48 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3410);
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  int64x2_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for EventCalendarModelObject();
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v9 + 3) = 0;
  *((void *)v9 + 4) = 0;
  *((void *)v9 + 9) = 0;
  *((void *)v9 + 10) = 0;
  *((void *)v9 + 8) = 0;
  v9[88] = -1;
  sub_1BDFC54C0((uint64_t)v61);
  uint64_t v62 = v9 + 104;
  sub_1BDFC41C4((uint64_t)v61, (uint64_t)(v9 + 104));
  *((void *)v9 + 31) = 0;
  *((void *)v9 + 32) = 0;
  uint64_t v10 = (uint64_t)&v9[v7[21]];
  uint64_t v11 = sub_1BE06EE10();
  unsigned __int16 v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  uint64_t v54 = v10;
  v12(v10, 1, 1, v11);
  unsigned __int8 v13 = &v9[v7[22]];
  *(void *)unsigned __int8 v13 = 0;
  *((void *)v13 + 1) = 0;
  uint64_t v53 = v13;
  uint64_t v14 = &v9[v7[23]];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  uint64_t v52 = v14;
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v50 = a1;
  uint64_t v16 = (void *)a1;
  uint64_t v17 = v6;
  __swift_project_boxed_opaque_existential_1(v16, v15);
  sub_1BDFC86B4();
  uint64_t v18 = v51;
  sub_1BE071010();
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_1(v50);
    swift_bridgeObjectRelease();
    sub_1BDFC41C4((uint64_t)v62, (uint64_t)&v58);
    sub_1BDFC42F4((uint64_t)&v58, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1BDFC4370);
    swift_bridgeObjectRelease();
    sub_1BDF8686C(v54, &qword_1EB678020);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = v47;
    uint64_t v19 = (uint64_t)v48;
    uint64_t v51 = v7;
    LOBYTE(v58) = 0;
    *(void *)uint64_t v9 = sub_1BE070DB0();
    *((void *)v9 + 1) = v22;
    type metadata accessor for EKCalendarType(0);
    v57[0] = 1;
    sub_1BDFCAB50(&qword_1EA0E3420, type metadata accessor for EKCalendarType);
    uint64_t v45 = v17;
    sub_1BE070DF0();
    *((void *)v9 + 2) = v58;
    LOBYTE(v58) = 2;
    *((void *)v9 + 3) = sub_1BE070D50();
    *((void *)v9 + 4) = v23;
    LOBYTE(v58) = 3;
    *((void *)v9 + 5) = sub_1BE070DB0();
    *((void *)v9 + 6) = v24;
    LOBYTE(v58) = 4;
    uint64_t v25 = sub_1BE070D80();
    if (v26) {
      uint64_t v27 = 0;
    }
    else {
      uint64_t v27 = v25;
    }
    *((void *)v9 + 7) = v27;
    v57[0] = 5;
    sub_1BDFC8708();
    sub_1BE070DA0();
    uint64_t v28 = v59;
    char v29 = v60;
    *((_OWORD *)v9 + 4) = v58;
    *((void *)v9 + 10) = v28;
    v9[88] = v29;
    LOBYTE(v58) = 6;
    char v30 = sub_1BE070D60();
    v9[89] = (v30 == 2) | v30 & 1;
    type metadata accessor for EKSharingStatus(0);
    v57[0] = 7;
    sub_1BDFCAB50(&qword_1EA0E3430, type metadata accessor for EKSharingStatus);
    sub_1BE070DA0();
    uint64_t v31 = v58;
    if (BYTE8(v58)) {
      uint64_t v31 = 0;
    }
    *((void *)v9 + 12) = v31;
    v57[135] = 8;
    sub_1BDFC875C();
    sub_1BE070DA0();
    sub_1BDFC41C4((uint64_t)&v58, (uint64_t)v57);
    sub_1BDFC41C4((uint64_t)v57, (uint64_t)v62);
    LOBYTE(v56) = 10;
    v9[239] = sub_1BE070D60() & 1;
    LOBYTE(v56) = 11;
    v9[240] = sub_1BE070D60() & 1;
    LOBYTE(v56) = 12;
    v9[241] = sub_1BE070D60() & 1;
    LOBYTE(v56) = 13;
    v9[242] = sub_1BE070D60() & 1;
    LOBYTE(v56) = 14;
    char v32 = sub_1BE070D60();
    v9[243] = (v32 == 2) | v32 & 1;
    LOBYTE(v56) = 15;
    char v33 = sub_1BE070D60();
    v9[244] = (v33 == 2) | v33 & 1;
    LOBYTE(v56) = 16;
    *((void *)v9 + 31) = sub_1BE070D50();
    *((void *)v9 + 32) = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1AA0);
    char v55 = 17;
    sub_1BDFC8858(&qword_1EA0E3440);
    sub_1BE070DA0();
    uint64_t v35 = MEMORY[0x1E4FBC860];
    if (v56) {
      uint64_t v35 = v56;
    }
    *((void *)v9 + 33) = v35;
    LOBYTE(v56) = 18;
    sub_1BDFCAB50(&qword_1EA0E2D60, MEMORY[0x1E4F276F0]);
    sub_1BE070DA0();
    sub_1BDF8BFB4(v19, v54);
    LOBYTE(v56) = 19;
    uint64_t v36 = sub_1BE070D50();
    uint64_t v38 = v37;
    long long v39 = (uint64_t *)v53;
    swift_bridgeObjectRelease();
    uint64_t *v39 = v36;
    v39[1] = v38;
    LOBYTE(v56) = 20;
    uint64_t v40 = sub_1BE070D50();
    uint64_t v42 = v41;
    id v43 = (uint64_t *)v52;
    swift_bridgeObjectRelease();
    uint64_t *v43 = v40;
    v43[1] = v42;
    LOBYTE(v56) = 21;
    LOBYTE(v40) = sub_1BE070D60();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v45, v49);
    v9[v51[24]] = v40 & 1;
    sub_1BDFC54DC((uint64_t)v9, v46);
    __swift_destroy_boxed_opaque_existential_1(v50);
    return sub_1BDFC5540((uint64_t)v9);
  }
}

uint64_t EventCalendarModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3448);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDFC86B4();
  sub_1BE071030();
  LOBYTE(v14) = 0;
  sub_1BE070E60();
  if (!v2)
  {
    *(void *)&long long v14 = *(void *)(v3 + 16);
    LOBYTE(v13[0]) = 1;
    type metadata accessor for EKCalendarType(0);
    sub_1BDFCAB50(&qword_1EA0E3450, type metadata accessor for EKCalendarType);
    sub_1BE070EB0();
    LOBYTE(v14) = 2;
    sub_1BE070E30();
    LOBYTE(v14) = 3;
    sub_1BE070E60();
    LOBYTE(v14) = 4;
    sub_1BE070E90();
    uint64_t v9 = *(void *)(v3 + 80);
    char v10 = *(unsigned char *)(v3 + 88);
    long long v14 = *(_OWORD *)(v3 + 64);
    uint64_t v15 = v9;
    char v16 = v10;
    LOBYTE(v13[0]) = 5;
    sub_1BDFC87B0();
    sub_1BE070E50();
    LOBYTE(v14) = 6;
    sub_1BE070E70();
    uint64_t v18 = *(void *)(v3 + 96);
    char v17 = 7;
    type metadata accessor for EKSharingStatus(0);
    sub_1BDFCAB50(&qword_1EA0E3460, type metadata accessor for EKSharingStatus);
    sub_1BE070EB0();
    sub_1BDFC41C4(v3 + 104, (uint64_t)&v14);
    sub_1BDFC41C4((uint64_t)&v14, (uint64_t)v13);
    HIBYTE(v12) = 8;
    sub_1BDFC8804();
    sub_1BE070E50();
    LOBYTE(v13[0]) = 10;
    sub_1BE070E70();
    LOBYTE(v13[0]) = 11;
    sub_1BE070E70();
    LOBYTE(v13[0]) = 12;
    sub_1BE070E70();
    LOBYTE(v13[0]) = 13;
    sub_1BE070E70();
    LOBYTE(v13[0]) = 14;
    sub_1BE070E70();
    LOBYTE(v13[0]) = 15;
    sub_1BE070E70();
    LOBYTE(v13[0]) = 16;
    sub_1BE070E30();
    v13[0] = *(void *)(v3 + 264);
    HIBYTE(v12) = 17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1AA0);
    sub_1BDFC8858(&qword_1EA0E3470);
    sub_1BE070EB0();
    type metadata accessor for EventCalendarModelObject();
    LOBYTE(v13[0]) = 18;
    sub_1BE06EE10();
    sub_1BDFCAB50(&qword_1EA0E2D70, MEMORY[0x1E4F276F0]);
    sub_1BE070E50();
    LOBYTE(v13[0]) = 19;
    sub_1BE070E30();
    LOBYTE(v13[0]) = 20;
    sub_1BE070E30();
    LOBYTE(v13[0]) = 21;
    sub_1BE070E70();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BDFC717C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return EventCalendarModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BDFC7194(void *a1)
{
  return EventCalendarModelObject.encode(to:)(a1);
}

uint64_t EventCalendarModelObject.init(from:configuration:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3410);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EventCalendarModelObject();
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  unsigned __int8 v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v33 - v14;
  sub_1BDFC3C28((uint64_t)a1, (uint64_t)v39);
  EventCalendarModelObject.init(from:)((uint64_t)v39, (uint64_t)v13);
  if (v3)
  {
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v34 = v7;
    uint64_t v35 = v6;
    sub_1BDFC88BC((uint64_t)v13, (uint64_t)v15);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BDFC86B4();
    sub_1BE071010();
    uint64_t v17 = (uint64_t)a1;
    v39[0] = 9;
    uint64_t v18 = v35;
    uint64_t v19 = sub_1BE070D50();
    if (v20)
    {
      v33[0] = v9;
      v33[1] = 0;
      uint64_t v21 = *(void *)(a2 + 16);
      uint64_t v22 = v40;
      uint64_t v23 = v34;
      if (*(void *)(v21 + 16) && (unint64_t v24 = sub_1BDFC7B88(v19, v20), (v25 & 1) != 0))
      {
        char v26 = (char *)(*(void *)(v21 + 56) + 136 * v24);
        v36[0] = *(_OWORD *)v26;
        long long v27 = *((_OWORD *)v26 + 3);
        long long v28 = *((_OWORD *)v26 + 4);
        long long v29 = *((_OWORD *)v26 + 2);
        v36[1] = *((_OWORD *)v26 + 1);
        v36[2] = v29;
        v36[3] = v27;
        v36[4] = v28;
        long long v30 = *((_OWORD *)v26 + 5);
        long long v31 = *((_OWORD *)v26 + 6);
        long long v32 = *((_OWORD *)v26 + 7);
        *(void *)&v37[15] = *(void *)(v26 + 127);
        v36[6] = v31;
        *(_OWORD *)uint64_t v37 = v32;
        v36[5] = v30;
        memmove(v38, v26, 0x87uLL);
        nullsub_1(v38);
        sub_1BDFC8920((uint64_t)v36);
        swift_bridgeObjectRelease();
        (*(void (**)(void, uint64_t))(v23 + 8))(v33[0], v18);
        swift_release();
        sub_1BDFC41C4((uint64_t)(v15 + 104), (uint64_t)v39);
        sub_1BDFC42F4((uint64_t)v39, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1BDFC4370);
        sub_1BDFC41C4((uint64_t)v38, (uint64_t)(v15 + 104));
      }
      else
      {
        swift_bridgeObjectRelease();
        (*(void (**)(void, uint64_t))(v23 + 8))(v33[0], v18);
        swift_release();
      }
    }
    else
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v18);
      uint64_t v22 = v40;
    }
    sub_1BDFC54DC((uint64_t)v15, v22);
    __swift_destroy_boxed_opaque_existential_1(v17);
    return sub_1BDFC5540((uint64_t)v15);
  }
}

uint64_t EventCalendarModelObject.encode(to:configuration:)(void *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3448);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for EventCalendarModelObject();
  MEMORY[0x1F4188790](v11 - 8);
  unsigned __int8 v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFC54DC(v4, (uint64_t)v13);
  if ((*(unsigned char *)(a2 + 16) & 1) == 0)
  {
    sub_1BDFC54C0((uint64_t)v20);
    sub_1BDFC41C4((uint64_t)(v13 + 104), (uint64_t)v21);
    sub_1BDFC42F4((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1BDFC4370);
    sub_1BDFC41C4((uint64_t)v20, (uint64_t)(v13 + 104));
  }
  EventCalendarModelObject.encode(to:)(a1);
  if (!v3)
  {
    uint64_t v18 = v8;
    uint64_t v22 = v7;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BDFC86B4();
    sub_1BE071030();
    sub_1BDFC41C4(v4 + 104, (uint64_t)v20);
    sub_1BDFC41C4((uint64_t)v20, (uint64_t)v21);
    if (sub_1BDFC49E4((uint64_t)v21) != 1) {
      swift_bridgeObjectRetain();
    }
    uint64_t v14 = v22;
    uint64_t v15 = v18;
    char v19 = 9;
    sub_1BE070E30();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
    swift_bridgeObjectRelease();
  }
  return sub_1BDFC5540((uint64_t)v13);
}

uint64_t EventCalendarModelObject.EncodingConfiguration.__allocating_init(includeSource:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t EventCalendarModelObject.EncodingConfiguration.init(includeSource:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

uint64_t EventCalendarModelObject.EncodingConfiguration.deinit()
{
  return v0;
}

uint64_t EventCalendarModelObject.EncodingConfiguration.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t EventCalendarModelObject.DecodingConfiguration.__allocating_init(sourcesById:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t EventCalendarModelObject.DecodingConfiguration.init(sourcesById:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t EventCalendarModelObject.DecodingConfiguration.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EventCalendarModelObject.DecodingConfiguration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1BDFC789C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return EventCalendarModelObject.init(from:configuration:)(a1, *a2, a3);
}

uint64_t sub_1BDFC78B8(void *a1, uint64_t *a2)
{
  return EventCalendarModelObject.encode(to:configuration:)(a1, *a2);
}

uint64_t sub_1BDFC78D4()
{
  return sub_1BE0706E0();
}

uint64_t sub_1BDFC7964()
{
  return sub_1BE0706B0();
}

uint64_t sub_1BDFC79E4()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BDFC7A74()
{
  return sub_1BE0706A0();
}

unint64_t sub_1BDFC7AF4(uint64_t a1)
{
  sub_1BE070500();
  sub_1BE070FB0();
  sub_1BE070590();
  uint64_t v2 = sub_1BE070FF0();
  swift_bridgeObjectRelease();

  return sub_1BDFC7C00(a1, v2);
}

unint64_t sub_1BDFC7B88(uint64_t a1, uint64_t a2)
{
  sub_1BE070FB0();
  sub_1BE070590();
  uint64_t v4 = sub_1BE070FF0();

  return sub_1BDFC7D78(a1, a2, v4);
}

unint64_t sub_1BDFC7C00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1BE070500();
    uint64_t v8 = v7;
    if (v6 == sub_1BE070500() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1BE070500();
          uint64_t v15 = v14;
          if (v13 == sub_1BE070500() && v15 == v16) {
            break;
          }
          char v18 = sub_1BE070EF0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1BDFC7D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1BE070EF0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1BE070EF0() & 1) == 0);
    }
  }
  return v6;
}

uint64_t _s13CalendarUIKit05EventA11ModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v48 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2E98);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v45 - v15;
  MEMORY[0x1F4188790](v14);
  char v18 = (char *)&v45 - v17;
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v19 = sub_1BE070EF0(), v20 = 0, (v19 & 1) != 0))
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      goto LABEL_24;
    }
    uint64_t v21 = *(void *)(a1 + 32);
    uint64_t v22 = *(void *)(a2 + 32);
    if (v21)
    {
      if (!v22) {
        goto LABEL_24;
      }
      if (*(void *)(a1 + 24) != *(void *)(a2 + 24) || v21 != v22)
      {
        char v23 = sub_1BE070EF0();
        char v20 = 0;
        if ((v23 & 1) == 0) {
          return v20 & 1;
        }
      }
    }
    else if (v22)
    {
      goto LABEL_24;
    }
    if (*(void *)(a1 + 40) != *(void *)(a2 + 40) || *(void *)(a1 + 48) != *(void *)(a2 + 48))
    {
      char v24 = sub_1BE070EF0();
      char v20 = 0;
      if ((v24 & 1) == 0) {
        return v20 & 1;
      }
    }
    if (*(void *)(a1 + 56) != *(void *)(a2 + 56))
    {
LABEL_24:
      char v20 = 0;
      return v20 & 1;
    }
    int v25 = *(unsigned __int8 *)(a1 + 88);
    int v26 = *(unsigned __int8 *)(a2 + 88);
    if (v25 == 255)
    {
      if (v26 != 255) {
        goto LABEL_24;
      }
    }
    else
    {
      if (v26 == 255) {
        goto LABEL_24;
      }
      double v28 = *(double *)(a1 + 64);
      double v29 = *(double *)(a2 + 64);
      if (v25)
      {
        if ((v26 & 1) == 0) {
          goto LABEL_24;
        }
        char v20 = 0;
        if (v28 != v29 || *(double *)(a1 + 72) != *(double *)(a2 + 72) || *(double *)(a1 + 80) != *(double *)(a2 + 80)) {
          return v20 & 1;
        }
      }
      else if ((v26 & 1) != 0 || (sub_1BDFE058C(LOBYTE(v28), SLOBYTE(v29)) & 1) == 0)
      {
        goto LABEL_24;
      }
    }
    if (*(unsigned __int8 *)(a1 + 89) != *(unsigned __int8 *)(a2 + 89) || *(void *)(a1 + 96) != *(void *)(a2 + 96)) {
      goto LABEL_24;
    }
    sub_1BDFC41C4(a1 + 104, (uint64_t)v72);
    sub_1BDFC41C4(a2 + 104, (uint64_t)v73);
    sub_1BDFC41C4((uint64_t)v72, (uint64_t)v74);
    if (sub_1BDFC49E4((uint64_t)v74) == 1)
    {
      sub_1BDFC41C4((uint64_t)v73, (uint64_t)v70);
      if (sub_1BDFC49E4((uint64_t)v70) == 1) {
        goto LABEL_39;
      }
    }
    else
    {
      sub_1BDFC41C4((uint64_t)v72, (uint64_t)&v62);
      sub_1BDFC41C4((uint64_t)v73, (uint64_t)v70);
      if (sub_1BDFC49E4((uint64_t)v70) != 1)
      {
        sub_1BDFC41C4((uint64_t)v73, (uint64_t)v51);
        v49[6] = v51[6];
        *(_OWORD *)uint64_t v50 = *(_OWORD *)v52;
        *(void *)&v50[15] = *(void *)&v52[15];
        v49[2] = v51[2];
        v49[3] = v51[3];
        v49[4] = v51[4];
        v49[5] = v51[5];
        v49[0] = v51[0];
        v49[1] = v51[1];
        LODWORD(v47) = _s13CalendarUIKit22EventSourceModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)&v62, (uint64_t)v49);
        long long v59 = v68;
        *(_OWORD *)char v60 = *(_OWORD *)v69;
        *(void *)&v60[15] = *(void *)&v69[15];
        long long v55 = v64;
        long long v56 = v65;
        long long v57 = v66;
        long long v58 = v67;
        long long v53 = v62;
        long long v54 = v63;
        sub_1BDFC41C4((uint64_t)v72, (uint64_t)v61);
        sub_1BDFC8920((uint64_t)v61);
        sub_1BDFCAB98((uint64_t)&v53);
        if ((v47 & 1) == 0) {
          goto LABEL_24;
        }
LABEL_39:
        if (*(unsigned __int8 *)(a1 + 239) != *(unsigned __int8 *)(a2 + 239)
          || *(unsigned __int8 *)(a1 + 240) != *(unsigned __int8 *)(a2 + 240)
          || *(unsigned __int8 *)(a1 + 241) != *(unsigned __int8 *)(a2 + 241)
          || *(unsigned __int8 *)(a1 + 242) != *(unsigned __int8 *)(a2 + 242)
          || *(unsigned __int8 *)(a1 + 243) != *(unsigned __int8 *)(a2 + 243)
          || *(unsigned __int8 *)(a1 + 244) != *(unsigned __int8 *)(a2 + 244))
        {
          goto LABEL_24;
        }
        uint64_t v30 = *(void *)(a1 + 256);
        uint64_t v31 = *(void *)(a2 + 256);
        if (v30)
        {
          if (!v31 || (*(void *)(a1 + 248) != *(void *)(a2 + 248) || v30 != v31) && (sub_1BE070EF0() & 1) == 0) {
            goto LABEL_24;
          }
        }
        else if (v31)
        {
          goto LABEL_24;
        }
        if ((sub_1BE05792C(*(void **)(a1 + 264), *(void **)(a2 + 264)) & 1) == 0) {
          goto LABEL_24;
        }
        uint64_t v47 = (int *)type metadata accessor for EventCalendarModelObject();
        sub_1BDF86808(a1 + v47[21], (uint64_t)v18, &qword_1EB678020);
        sub_1BDF86808(a2 + v47[21], (uint64_t)v16, &qword_1EB678020);
        uint64_t v32 = (uint64_t)&v9[*(int *)(v7 + 48)];
        sub_1BDF86808((uint64_t)v18, (uint64_t)v9, &qword_1EB678020);
        uint64_t v46 = v32;
        sub_1BDF86808((uint64_t)v16, v32, &qword_1EB678020);
        uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
        if (v45((uint64_t)v9, 1, v4) == 1)
        {
          sub_1BDF8686C((uint64_t)v16, &qword_1EB678020);
          sub_1BDF8686C((uint64_t)v18, &qword_1EB678020);
          if (v45(v46, 1, v4) == 1)
          {
            sub_1BDF8686C((uint64_t)v9, &qword_1EB678020);
LABEL_60:
            uint64_t v35 = v47[22];
            uint64_t v36 = (void *)(a1 + v35);
            uint64_t v37 = *(void *)(a1 + v35 + 8);
            uint64_t v38 = (void *)(a2 + v35);
            uint64_t v39 = v38[1];
            if (v37)
            {
              if (!v39 || (*v36 != *v38 || v37 != v39) && (sub_1BE070EF0() & 1) == 0) {
                goto LABEL_24;
              }
            }
            else if (v39)
            {
              goto LABEL_24;
            }
            uint64_t v40 = v47[23];
            uint64_t v41 = (void *)(a1 + v40);
            uint64_t v42 = *(void *)(a1 + v40 + 8);
            id v43 = (void *)(a2 + v40);
            uint64_t v44 = v43[1];
            if (v42)
            {
              if (v44 && (*v41 == *v43 && v42 == v44 || (sub_1BE070EF0() & 1) != 0)) {
                goto LABEL_74;
              }
            }
            else if (!v44)
            {
LABEL_74:
              char v20 = *(unsigned char *)(a1 + v47[24]) ^ *(unsigned char *)(a2 + v47[24]) ^ 1;
              return v20 & 1;
            }
            goto LABEL_24;
          }
        }
        else
        {
          sub_1BDF86808((uint64_t)v9, (uint64_t)v13, &qword_1EB678020);
          if (v45(v46, 1, v4) != 1)
          {
            uint64_t v33 = v48;
            (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v6, v46, v4);
            sub_1BDFCAB50((unint64_t *)&qword_1EA0E2EA0, MEMORY[0x1E4F276F0]);
            LODWORD(v46) = sub_1BE070440();
            uint64_t v34 = *(void (**)(char *, uint64_t))(v33 + 8);
            v34(v6, v4);
            sub_1BDF8686C((uint64_t)v16, &qword_1EB678020);
            sub_1BDF8686C((uint64_t)v18, &qword_1EB678020);
            v34(v13, v4);
            sub_1BDF8686C((uint64_t)v9, &qword_1EB678020);
            if ((v46 & 1) == 0) {
              goto LABEL_24;
            }
            goto LABEL_60;
          }
          sub_1BDF8686C((uint64_t)v16, &qword_1EB678020);
          sub_1BDF8686C((uint64_t)v18, &qword_1EB678020);
          (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v4);
        }
        sub_1BDF8686C((uint64_t)v9, &qword_1EA0E2E98);
        goto LABEL_24;
      }
      long long v59 = v68;
      *(_OWORD *)char v60 = *(_OWORD *)v69;
      *(void *)&v60[15] = *(void *)&v69[15];
      long long v55 = v64;
      long long v56 = v65;
      long long v57 = v66;
      long long v58 = v67;
      long long v53 = v62;
      long long v54 = v63;
      sub_1BDFC41C4((uint64_t)v72, (uint64_t)v61);
      sub_1BDFC8920((uint64_t)v61);
      sub_1BDFC8920((uint64_t)v61);
      sub_1BDFCAB98((uint64_t)&v53);
    }
    sub_1BDFC41C4((uint64_t)v72, (uint64_t)v70);
    sub_1BDFC41C4((uint64_t)v73, (uint64_t)&v71);
    sub_1BDFC42F4((uint64_t)v73, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, unint64_t))sub_1BDFC422C);
    sub_1BDFCAA38(v70);
    goto LABEL_24;
  }
  return v20 & 1;
}

unint64_t sub_1BDFC86B4()
{
  unint64_t result = qword_1EA0E3418;
  if (!qword_1EA0E3418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3418);
  }
  return result;
}

unint64_t sub_1BDFC8708()
{
  unint64_t result = qword_1EA0E3428;
  if (!qword_1EA0E3428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3428);
  }
  return result;
}

unint64_t sub_1BDFC875C()
{
  unint64_t result = qword_1EA0E3438;
  if (!qword_1EA0E3438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3438);
  }
  return result;
}

unint64_t sub_1BDFC87B0()
{
  unint64_t result = qword_1EA0E3458;
  if (!qword_1EA0E3458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3458);
  }
  return result;
}

unint64_t sub_1BDFC8804()
{
  unint64_t result = qword_1EA0E3468;
  if (!qword_1EA0E3468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3468);
  }
  return result;
}

uint64_t sub_1BDFC8858(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1AA0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDFC88BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventCalendarModelObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFC8920(uint64_t a1)
{
  return a1;
}

unint64_t sub_1BDFC897C()
{
  unint64_t result = qword_1EA0E3478;
  if (!qword_1EA0E3478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3478);
  }
  return result;
}

uint64_t sub_1BDFC89D0(uint64_t a1)
{
  uint64_t result = sub_1BDFCAB50(&qword_1EA0E3480, (void (*)(uint64_t))type metadata accessor for EventCalendarModelObject);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BDFC8A28()
{
  return sub_1BDFCAB50(&qword_1EA0E3488, (void (*)(uint64_t))type metadata accessor for EventCalendarModelObject);
}

_UNKNOWN **sub_1BDFC8A70()
{
  return &protocol witness table for EventSourceConstraintsModelObject;
}

uint64_t initializeBufferWithCopyOfBuffer for EventCalendarModelObject(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    uint64_t v9 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v9;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)a2 + 73);
    *(unsigned char *)(a1 + 89) = *((unsigned char *)a2 + 89);
    *(void *)(a1 + 96) = a2[12];
    uint64_t v10 = a2[14];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      *(void *)(a1 + 104) = a2[13];
      *(void *)(a1 + 112) = v10;
      uint64_t v11 = a2[16];
      *(void *)(a1 + 120) = a2[15];
      *(void *)(a1 + 128) = v11;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
      *(void *)(a1 + 152) = a2[19];
      *(_DWORD *)(a1 + 160) = *((_DWORD *)a2 + 40);
      *(unsigned char *)(a1 + 164) = *((unsigned char *)a2 + 164);
      uint64_t v12 = a2[22];
      *(void *)(a1 + 168) = a2[21];
      *(void *)(a1 + 176) = v12;
      *(void *)(a1 + 184) = a2[23];
      *(unsigned char *)(a1 + 192) = *((unsigned char *)a2 + 192);
      *(void *)(a1 + 200) = a2[25];
      *(unsigned char *)(a1 + 208) = *((unsigned char *)a2 + 208);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
      *(void *)(a1 + 231) = *(uint64_t *)((char *)a2 + 231);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v14 = *(_OWORD *)(a2 + 27);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
      *(_OWORD *)(a1 + 216) = v14;
      *(void *)(a1 + 231) = *(uint64_t *)((char *)a2 + 231);
      long long v15 = *(_OWORD *)(a2 + 19);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
      *(_OWORD *)(a1 + 152) = v15;
      long long v16 = *(_OWORD *)(a2 + 23);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
      *(_OWORD *)(a1 + 184) = v16;
      long long v17 = *(_OWORD *)(a2 + 15);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
      *(_OWORD *)(a1 + 120) = v17;
    }
    *(_DWORD *)(a1 + 239) = *(_DWORD *)((char *)a2 + 239);
    *(_WORD *)(a1 + 243) = *(_WORD *)((char *)a2 + 243);
    uint64_t v18 = a2[32];
    *(void *)(a1 + 248) = a2[31];
    *(void *)(a1 + 256) = v18;
    uint64_t v19 = a3[21];
    __dst = (void *)(a1 + v19);
    char v20 = (char *)a2 + v19;
    *(void *)(a1 + 264) = a2[33];
    uint64_t v21 = sub_1BE06EE10();
    uint64_t v22 = *(void *)(v21 - 8);
    char v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23(v20, 1, v21))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(__dst, v20, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v22 + 16))(__dst, v20, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    uint64_t v25 = a3[22];
    uint64_t v26 = a3[23];
    long long v27 = (void *)(a1 + v25);
    double v28 = (uint64_t *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    *long long v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = (void *)(a1 + v26);
    uint64_t v31 = (uint64_t *)((char *)a2 + v26);
    uint64_t v32 = v31[1];
    *uint64_t v30 = *v31;
    v30[1] = v32;
    *(unsigned char *)(a1 + a3[24]) = *((unsigned char *)a2 + a3[24]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EventCalendarModelObject(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 84);
  uint64_t v5 = sub_1BE06EE10();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EventCalendarModelObject(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v9;
    uint64_t v10 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v10;
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
    *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
    uint64_t v11 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v11;
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(void *)(a1 + 231) = *(void *)(a2 + 231);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v12 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v12;
    *(void *)(a1 + 231) = *(void *)(a2 + 231);
    long long v13 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v13;
    long long v14 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v14;
    long long v15 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v15;
  }
  *(_DWORD *)(a1 + 239) = *(_DWORD *)(a2 + 239);
  *(_WORD *)(a1 + 243) = *(_WORD *)(a2 + 243);
  uint64_t v16 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v16;
  uint64_t v33 = a3;
  uint64_t v17 = a3[21];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  uint64_t v20 = sub_1BE06EE10();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v18, v19, v20);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  }
  uint64_t v24 = v33[22];
  uint64_t v25 = v33[23];
  uint64_t v26 = (void *)(a1 + v24);
  long long v27 = (void *)(a2 + v24);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = (void *)(a1 + v25);
  uint64_t v30 = (void *)(a2 + v25);
  uint64_t v31 = v30[1];
  void *v29 = *v30;
  v29[1] = v31;
  *(unsigned char *)(a1 + v33[24]) = *(unsigned char *)(a2 + v33[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EventCalendarModelObject(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v7 = (_OWORD *)(a1 + 104);
  uint64_t v8 = (_OWORD *)(a2 + 104);
  uint64_t v9 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112))
  {
    if (v9)
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
      *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
      *(unsigned char *)(a1 + 163) = *(unsigned char *)(a2 + 163);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      uint64_t v10 = *(void *)(a2 + 184);
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 184) = v10;
      uint64_t v11 = *(void *)(a2 + 200);
      *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
      *(void *)(a1 + 200) = v11;
      long long v12 = *(_OWORD *)(a2 + 216);
      *(void *)(a1 + 231) = *(void *)(a2 + 231);
      *(_OWORD *)(a1 + 216) = v12;
    }
    else
    {
      sub_1BDFC9668(a1 + 104);
      *uint64_t v7 = *v8;
      long long v16 = *(_OWORD *)(a2 + 168);
      long long v18 = *(_OWORD *)(a2 + 120);
      long long v17 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v16;
      *(_OWORD *)(a1 + 120) = v18;
      *(_OWORD *)(a1 + 136) = v17;
      long long v20 = *(_OWORD *)(a2 + 200);
      long long v19 = *(_OWORD *)(a2 + 216);
      long long v21 = *(_OWORD *)(a2 + 184);
      *(void *)(a1 + 231) = *(void *)(a2 + 231);
      *(_OWORD *)(a1 + 200) = v20;
      *(_OWORD *)(a1 + 216) = v19;
      *(_OWORD *)(a1 + 184) = v21;
    }
  }
  else if (v9)
  {
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
    *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
    *(unsigned char *)(a1 + 163) = *(unsigned char *)(a2 + 163);
    *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    uint64_t v13 = *(void *)(a2 + 184);
    *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
    *(void *)(a1 + 184) = v13;
    uint64_t v14 = *(void *)(a2 + 200);
    *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
    *(void *)(a1 + 200) = v14;
    long long v15 = *(_OWORD *)(a2 + 216);
    *(void *)(a1 + 231) = *(void *)(a2 + 231);
    *(_OWORD *)(a1 + 216) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v7 = *v8;
    long long v22 = *(_OWORD *)(a2 + 120);
    long long v23 = *(_OWORD *)(a2 + 136);
    long long v24 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v24;
    *(_OWORD *)(a1 + 120) = v22;
    *(_OWORD *)(a1 + 136) = v23;
    long long v25 = *(_OWORD *)(a2 + 184);
    long long v26 = *(_OWORD *)(a2 + 200);
    long long v27 = *(_OWORD *)(a2 + 216);
    *(void *)(a1 + 231) = *(void *)(a2 + 231);
    *(_OWORD *)(a1 + 200) = v26;
    *(_OWORD *)(a1 + 216) = v27;
    *(_OWORD *)(a1 + 184) = v25;
  }
  *(unsigned char *)(a1 + 239) = *(unsigned char *)(a2 + 239);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(unsigned char *)(a1 + 241) = *(unsigned char *)(a2 + 241);
  *(unsigned char *)(a1 + 242) = *(unsigned char *)(a2 + 242);
  *(unsigned char *)(a1 + 243) = *(unsigned char *)(a2 + 243);
  *(unsigned char *)(a1 + 244) = *(unsigned char *)(a2 + 244);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[21];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = sub_1BE06EE10();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 24))(v29, v30, v31);
      goto LABEL_14;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
    goto LABEL_13;
  }
  if (v35)
  {
LABEL_13:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v32 + 16))(v29, v30, v31);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_14:
  uint64_t v37 = a3[22];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[23];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  void *v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  return a1;
}

uint64_t sub_1BDFC9668(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for EventCalendarModelObject(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(void *)(a1 + 231) = *(void *)(a2 + 231);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_DWORD *)(a1 + 239) = *(_DWORD *)(a2 + 239);
  *(_WORD *)(a1 + 243) = *(_WORD *)(a2 + 243);
  long long v6 = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  uint64_t v7 = a3[21];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 248) = v6;
  uint64_t v10 = sub_1BE06EE10();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[23];
  *(_OWORD *)(a1 + a3[22]) = *(_OWORD *)(a2 + a3[22]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  return a1;
}

uint64_t assignWithTake for EventCalendarModelObject(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  if (*(void *)(a1 + 112))
  {
    uint64_t v8 = *(void *)(a2 + 112);
    if (v8)
    {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v8;
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(a2 + 128);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = v9;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
      *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
      *(unsigned char *)(a1 + 163) = *(unsigned char *)(a2 + 163);
      *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 184);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = v10;
      *(unsigned char *)(a1 + 192) = *(unsigned char *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(void *)(a1 + 231) = *(void *)(a2 + 231);
      goto LABEL_6;
    }
    sub_1BDFC9668(a1 + 104);
  }
  long long v11 = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = v11;
  *(void *)(a1 + 231) = *(void *)(a2 + 231);
  long long v12 = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = v12;
  long long v13 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = v13;
  long long v14 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v14;
LABEL_6:
  *(unsigned char *)(a1 + 239) = *(unsigned char *)(a2 + 239);
  *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
  *(unsigned char *)(a1 + 241) = *(unsigned char *)(a2 + 241);
  *(unsigned char *)(a1 + 242) = *(unsigned char *)(a2 + 242);
  *(unsigned char *)(a1 + 243) = *(unsigned char *)(a2 + 243);
  *(unsigned char *)(a1 + 244) = *(unsigned char *)(a2 + 244);
  uint64_t v15 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[21];
  long long v17 = (void *)(a1 + v16);
  long long v18 = (void *)(a2 + v16);
  uint64_t v19 = sub_1BE06EE10();
  uint64_t v20 = *(void *)(v19 - 8);
  long long v21 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v17, v18, v19);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v17, v19);
    goto LABEL_11;
  }
  if (v23)
  {
LABEL_11:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v17, v18, v19);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
LABEL_12:
  uint64_t v25 = a3[22];
  long long v26 = (void *)(a1 + v25);
  long long v27 = (uint64_t *)(a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *long long v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[23];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v34 = *v32;
  uint64_t v33 = v32[1];
  void *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventCalendarModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BDFC9C18);
}

uint64_t sub_1BDFC9C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 84);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for EventCalendarModelObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BDFC9CE0);
}

uint64_t sub_1BDFC9CE0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 84);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1BDFC9D8C()
{
  sub_1BDF92F60();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t type metadata accessor for EventCalendarModelObject.EncodingConfiguration()
{
  return self;
}

uint64_t method lookup function for EventCalendarModelObject.EncodingConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EventCalendarModelObject.EncodingConfiguration);
}

uint64_t dispatch thunk of EventCalendarModelObject.EncodingConfiguration.__allocating_init(includeSource:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for EventCalendarModelObject.DecodingConfiguration()
{
  return self;
}

uint64_t method lookup function for EventCalendarModelObject.DecodingConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EventCalendarModelObject.DecodingConfiguration);
}

uint64_t dispatch thunk of EventCalendarModelObject.DecodingConfiguration.__allocating_init(sourcesById:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t getEnumTagSinglePayload for EventCalendarModelObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEB) {
    goto LABEL_17;
  }
  if (a2 + 21 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 21) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 21;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 21;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x16;
  int v8 = v6 - 22;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventCalendarModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *uint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDFCA084);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventCalendarModelObject.CodingKeys()
{
  return &type metadata for EventCalendarModelObject.CodingKeys;
}

unint64_t sub_1BDFCA0C0()
{
  unint64_t result = qword_1EA0E3490;
  if (!qword_1EA0E3490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3490);
  }
  return result;
}

unint64_t sub_1BDFCA118()
{
  unint64_t result = qword_1EA0E3498;
  if (!qword_1EA0E3498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3498);
  }
  return result;
}

unint64_t sub_1BDFCA170()
{
  unint64_t result = qword_1EA0E34A0;
  if (!qword_1EA0E34A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E34A0);
  }
  return result;
}

uint64_t sub_1BDFCA1C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C616E7265747865 && a2 == 0xEA00000000004449 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4F79616C70736964 && a2 == 0xEC00000072656472 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001BE08C990 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x53676E6972616873 && a2 == 0xED00007375746174 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4449656372756F73 && a2 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7263736275537369 && a2 == 0xEC00000064656269 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BE08C9B0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001BE08C9D0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BE08C9F0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x764573776F6C6C61 && a2 == 0xEC00000073746E65 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BE08CA10 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BE08CA30 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BE08CA50 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BE08CA70 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BE08CA90 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BE08CAB0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001BE08CAD0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 21;
    }
    else {
      return 22;
    }
  }
}

uint64_t *sub_1BDFCAA38(uint64_t *a1)
{
  uint64_t v3 = a1[18];
  uint64_t v4 = a1[17];
  sub_1BDFC4370(*a1, a1[1]);
  sub_1BDFC4370(v4, v3);
  return a1;
}

uint64_t sub_1BDFCAB50(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDFCAB98(uint64_t a1)
{
  return a1;
}

id EKEventIntegrationModelWrapper.ekEvent.getter()
{
  return *v0;
}

void EKEventIntegrationModelWrapper.ekEvent.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*EKEventIntegrationModelWrapper.ekEvent.modify())()
{
  return nullsub_1;
}

id EKEventIntegrationModelWrapper.isCompleted.getter()
{
  return objc_msgSend(*v0, sel_completed);
}

uint64_t EKEventIntegrationModelWrapper.reminderListTitle.getter()
{
  return 0;
}

double EKEventIntegrationModelWrapper.color.getter@<D0>(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_color);
  if (v3)
  {
    id v13 = v3;
    id v4 = objc_msgSend(v3, sel_providerIdentifier);
    uint64_t v5 = sub_1BE070500();
    uint64_t v7 = v6;

    id v8 = objc_msgSend(v13, sel_data);
    uint64_t v9 = sub_1BE06EE50();
    uint64_t v11 = v10;

    *a1 = v5;
    a1[1] = v7;
    a1[2] = v9;
    a1[3] = v11;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
  }
  return result;
}

CalendarUIKit::EKEventIntegrationModelWrapper_optional __swiftcall EKEventIntegrationModelWrapper.init(_:)(EKEvent a1)
{
  Class isa = a1.super.super.super.isa;
  id v3 = v1;
  id v4 = (objc_class *)[(objc_class *)a1.super.super.super.isa isIntegrationEvent];
  if (!v4)
  {

    Class isa = 0;
  }
  *id v3 = isa;
  result.value.ekEvent.super.super.super.Class isa = v4;
  result.is_nil = v5;
  return result;
}

id sub_1BDFCAD9C()
{
  return objc_msgSend(*v0, sel_completed);
}

uint64_t sub_1BDFCADC0()
{
  return 0;
}

ValueMetadata *type metadata accessor for EKEventIntegrationModelWrapper()
{
  return &type metadata for EKEventIntegrationModelWrapper;
}

uint64_t destroy for CreateFamilyCalendarView()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CreateFamilyCalendarView(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CreateFamilyCalendarView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CreateFamilyCalendarView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateFamilyCalendarView(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateFamilyCalendarView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)CalendarUIKit::EKEventIntegrationModelWrapper_optional result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateFamilyCalendarView()
{
  return &type metadata for CreateFamilyCalendarView;
}

uint64_t sub_1BDFCAFF4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFCB010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v64 = a5;
  int v63 = a4;
  int v62 = a3;
  uint64_t v61 = a2;
  uint64_t v60 = a1;
  uint64_t v70 = a6;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3558);
  uint64_t v68 = *(void *)(v69 - 8);
  MEMORY[0x1F4188790](v69);
  long long v65 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3560) - 8;
  uint64_t v7 = MEMORY[0x1F4188790](v67);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v66 = (uint64_t)&v58 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3568);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  long long v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3570);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v59 = (uint64_t)&v58 - v20;
  sub_1BE06F7A0();
  id v21 = CUIKBundle();
  uint64_t v76 = sub_1BE06FD20();
  uint64_t v77 = v22;
  char v78 = v23 & 1;
  uint64_t v79 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3578);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3580);
  uint64_t v26 = sub_1BE06F800();
  uint64_t v27 = sub_1BDF86964(&qword_1EA0E3588, &qword_1EA0E3580);
  uint64_t v28 = sub_1BDFCE7D4(&qword_1EA0E3590, MEMORY[0x1E4F3D660]);
  uint64_t v86 = v25;
  uint64_t v87 = v26;
  uint64_t v88 = v27;
  uint64_t v89 = v28;
  swift_getOpaqueTypeConformance2();
  uint64_t v29 = v60;
  sub_1BE070290();
  uint64_t v30 = self;
  uint64_t v76 = MEMORY[0x1C1888840](objc_msgSend(v30, sel_cuik_tertiaryGroupedBackgroundColor));
  swift_retain();
  uint64_t v31 = sub_1BE0701F0();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v19, v14, v11);
  swift_release();
  *(void *)&v19[*(int *)(v16 + 44)] = v31;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v32 = v59;
  sub_1BDFB8210((uint64_t)v19, v59, &qword_1EA0E3570);
  uint64_t v71 = v61;
  char v72 = v62 & 1;
  char v73 = v63;
  uint64_t v74 = v64;
  uint64_t v75 = v29;
  sub_1BE06F7A0();
  id v33 = CUIKBundle();
  uint64_t v34 = sub_1BE06FD20();
  uint64_t v36 = v35;
  LOBYTE(v27) = v37;
  uint64_t v39 = v38;
  LOBYTE(v31) = sub_1BE06FAD0();
  sub_1BE06F2D0();
  uint64_t v76 = v34;
  uint64_t v77 = v36;
  char v78 = v27 & 1;
  uint64_t v79 = v39;
  char v80 = v31;
  uint64_t v81 = v40;
  uint64_t v82 = v41;
  uint64_t v83 = v42;
  uint64_t v84 = v43;
  char v85 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3598);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E35A0);
  sub_1BDFCE760();
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E35B0);
  uint64_t v45 = type metadata accessor for FamilyCalendarColorSelectionView();
  uint64_t v46 = sub_1BDF86964(&qword_1EA0E35B8, &qword_1EA0E35B0);
  uint64_t v47 = sub_1BDFCE7D4(&qword_1EA0E35C0, (void (*)(uint64_t))type metadata accessor for FamilyCalendarColorSelectionView);
  uint64_t v86 = v44;
  uint64_t v87 = v45;
  uint64_t v88 = v46;
  uint64_t v89 = v47;
  swift_getOpaqueTypeConformance2();
  uint64_t v48 = v65;
  sub_1BE070290();
  uint64_t v76 = MEMORY[0x1C1888840](objc_msgSend(v30, sel_cuik_tertiaryGroupedBackgroundColor));
  swift_retain();
  uint64_t v49 = sub_1BE0701F0();
  uint64_t v50 = v68;
  uint64_t v51 = v48;
  uint64_t v52 = v48;
  uint64_t v53 = v69;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v9, v51, v69);
  swift_release();
  *(void *)&v9[*(int *)(v67 + 44)] = v49;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v53);
  uint64_t v54 = v66;
  sub_1BDFB8210((uint64_t)v9, v66, &qword_1EA0E3560);
  sub_1BDF86808(v32, (uint64_t)v19, &qword_1EA0E3570);
  sub_1BDF86808(v54, (uint64_t)v9, &qword_1EA0E3560);
  uint64_t v55 = v70;
  sub_1BDF86808((uint64_t)v19, v70, &qword_1EA0E3570);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E35C8);
  sub_1BDF86808((uint64_t)v9, v55 + *(int *)(v56 + 48), &qword_1EA0E3560);
  sub_1BDF8686C(v54, &qword_1EA0E3560);
  sub_1BDF8686C(v32, &qword_1EA0E3570);
  sub_1BDF8686C((uint64_t)v9, &qword_1EA0E3560);
  return sub_1BDF8686C((uint64_t)v19, &qword_1EA0E3570);
}

uint64_t sub_1BDFCB800@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v1 = sub_1BE06F800();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v28 = v1;
  uint64_t v29 = v2;
  MEMORY[0x1F4188790](v1);
  uint64_t v27 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3530);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v11 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v12 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3580);
  uint64_t v13 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE070450();
  id v16 = CUIKBundle();
  sub_1BE06EF70();
  uint64_t v17 = sub_1BE070530();
  uint64_t v19 = v18;
  uint64_t v20 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v20, v4);
  sub_1BE0702D0();
  id v21 = *(void (**)(char *, uint64_t))(v5 + 8);
  v21(v8, v4);
  swift_getKeyPath();
  sub_1BE0702F0();
  swift_release();
  v21(v10, v4);
  uint64_t v31 = v17;
  uint64_t v32 = v19;
  sub_1BDF859F0();
  sub_1BE070370();
  uint64_t v22 = v27;
  sub_1BE06F7F0();
  sub_1BDF86964(&qword_1EA0E3588, &qword_1EA0E3580);
  sub_1BDFCE7D4(&qword_1EA0E3590, MEMORY[0x1E4F3D660]);
  uint64_t v23 = v26;
  uint64_t v24 = v28;
  sub_1BE06FE00();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v23);
}

uint64_t sub_1BDFCBC98@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDFCE7D4(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v4 = *(void *)(v3 + 48);
  *a2 = *(void *)(v3 + 40);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDFCBD44()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDFCBE28@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v15 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E35B0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(unsigned char *)(v13 + 24) = a2 & 1;
  *(unsigned char *)(v13 + 32) = a3;
  *(void *)(v13 + 40) = a4;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E35D0);
  sub_1BDF86964(&qword_1EA0E35D8, &qword_1EA0E35D0);
  sub_1BE070150();
  char v16 = a3;
  uint64_t v17 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32B8);
  sub_1BE070130();
  type metadata accessor for FamilyCalendarColorSelectionView();
  sub_1BDF86964(&qword_1EA0E35B8, &qword_1EA0E35B0);
  sub_1BDFCE7D4(&qword_1EA0E35C0, (void (*)(uint64_t))type metadata accessor for FamilyCalendarColorSelectionView);
  sub_1BE06FED0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BDFCC0BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3530);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_projectBox();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1BE0702C0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v7 = v18;
  swift_getKeyPath();
  uint64_t v18 = v7;
  sub_1BDFCE7D4(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v8 = v7[9];
  uint64_t v9 = v7[10];
  uint64_t v10 = v7[11];
  uint64_t v11 = v7[12];
  uint64_t v12 = v7[13];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v13 = sub_1BE070060();
  uint64_t v14 = sub_1BE06FBE0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = sub_1BE070020();
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v12;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = KeyPath;
  *(void *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = result;
  return result;
}

uint64_t sub_1BDFCC2D4(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v9 - 8);
  sub_1BE070450();
  id v10 = CUIKBundle();
  sub_1BE06EF70();
  sub_1BE070520();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(unsigned char *)(v11 + 24) = a2 & 1;
  *(unsigned char *)(v11 + 32) = a3;
  *(void *)(v11 + 40) = a4;
  sub_1BDF859F0();
  swift_retain();
  swift_retain();
  return sub_1BE070170();
}

uint64_t sub_1BDFCC49C(uint64_t a1, char a2)
{
  char v2 = a2 & 1;
  uint64_t v3 = swift_retain();
  uint64_t v4 = sub_1BDFCD744(v3, v2);
  swift_release();
  swift_getKeyPath();
  sub_1BDFCE7D4(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v5 = *(void (**)(void, void))(v4 + 128);
  swift_retain();
  swift_release();
  v5(0, 0);
  return swift_release();
}

uint64_t sub_1BDFCC580@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v70 = a4;
  int v69 = a3;
  uint64_t v77 = a5;
  char v6 = a2 & 1;
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3510) - 8;
  MEMORY[0x1F4188790](v76);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3518);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v83 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v84 = (uint64_t)&v63 - v12;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3520);
  uint64_t v67 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v64 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3528);
  uint64_t v80 = *(void *)(v82 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v82);
  char v78 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v79 = (char *)&v63 - v16;
  uint64_t v17 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v18 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v75 = sub_1BE070060();
  uint64_t v74 = sub_1BE06FB20();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BE070450();
  id v19 = CUIKBundle();
  sub_1BE06EF70();
  uint64_t v72 = sub_1BE070530();
  uint64_t v71 = v20;
  sub_1BE070450();
  id v21 = CUIKBundle();
  sub_1BE06EF70();
  uint64_t v68 = sub_1BE070530();
  uint64_t v81 = v22;
  int v66 = sub_1BE06FAE0();
  sub_1BE06F2D0();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3530);
  uint64_t v31 = swift_allocBox();
  uint64_t v32 = swift_retain();
  sub_1BDFCD744(v32, v6);
  swift_release();
  type metadata accessor for CreateFamilyCalendarViewModel();
  sub_1BDFCE7D4(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE0702E0();
  uint64_t v85 = v31;
  uint64_t v86 = a1;
  char v87 = v6;
  char v88 = v69;
  uint64_t v89 = v70;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3538);
  sub_1BDF86964(&qword_1EA0E3540, &qword_1EA0E3538);
  id v33 = v64;
  sub_1BE06FC50();
  swift_release();
  sub_1BDF86964(&qword_1EA0E3548, &qword_1EA0E3520);
  uint64_t v34 = v78;
  uint64_t v35 = v65;
  sub_1BE06FEA0();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v33, v35);
  char v37 = v79;
  uint64_t v36 = v80;
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v79, v34, v82);
  sub_1BE070450();
  id v38 = CUIKBundle();
  sub_1BE06EF70();
  uint64_t v39 = sub_1BE070520();
  uint64_t v41 = v40;
  *(void *)uint64_t v8 = sub_1BE06F320();
  v8[8] = v42 & 1;
  uint64_t FamilyCalendarShareeView = (int *)type metadata accessor for CreateFamilyCalendarShareeView();
  uint64_t v44 = (uint64_t *)&v8[FamilyCalendarShareeView[5]];
  uint64_t *v44 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v45 = &v8[FamilyCalendarShareeView[6]];
  uint64_t v90 = MEMORY[0x1E4FBC860];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F10);
  sub_1BE070100();
  uint64_t v46 = *((void *)&v91 + 1);
  *(void *)uint64_t v45 = v91;
  *((void *)v45 + 1) = v46;
  uint64_t v47 = FamilyCalendarShareeView[7];
  uint64_t v90 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2F18);
  sub_1BE070100();
  *(_OWORD *)&v8[v47] = v91;
  uint64_t v48 = (uint64_t *)&v8[*(int *)(v76 + 44)];
  *uint64_t v48 = v39;
  v48[1] = v41;
  uint64_t v49 = v83;
  sub_1BDF86808((uint64_t)v8, v83, &qword_1EA0E3510);
  sub_1BDF8686C((uint64_t)v8, &qword_1EA0E3510);
  uint64_t v50 = v84;
  sub_1BDFB8210(v49, v84, &qword_1EA0E3518);
  uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v36 + 16);
  uint64_t v52 = v37;
  uint64_t v53 = v82;
  v51(v34, v52, v82);
  sub_1BDF86808(v50, v49, &qword_1EA0E3518);
  uint64_t v54 = v77;
  uint64_t v55 = KeyPath;
  uint64_t *v77 = v75;
  v54[1] = v55;
  uint64_t v56 = v72;
  v54[2] = v74;
  v54[3] = v56;
  uint64_t v57 = v68;
  v54[4] = v71;
  v54[5] = v57;
  v54[6] = v81;
  *((unsigned char *)v54 + 56) = v66;
  v54[8] = v24;
  v54[9] = v26;
  v54[10] = v28;
  v54[11] = v30;
  *((unsigned char *)v54 + 96) = 0;
  uint64_t v58 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3550);
  v51((char *)v54 + v58[12], v34, v53);
  uint64_t v59 = (char *)v54 + v58[16];
  *(void *)uint64_t v59 = 0;
  v59[8] = 1;
  uint64_t v60 = v83;
  sub_1BDF86808(v83, (uint64_t)v54 + v58[20], &qword_1EA0E3518);
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_1BDF8686C(v84, &qword_1EA0E3518);
  uint64_t v61 = *(void (**)(char *, uint64_t))(v80 + 8);
  v61(v79, v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1BDF8686C(v60, &qword_1EA0E3518);
  v61(v78, v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BDFCCED8@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  int v23 = a3;
  uint64_t v7 = sub_1BE06F940();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E34E8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E34E0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = &v22[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = &v22[-v17];
  sub_1BE06F920();
  uint64_t v26 = a1;
  char v27 = a2 & 1;
  char v28 = v23;
  uint64_t v29 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32C8);
  sub_1BDF86964(&qword_1EA0E3500, &qword_1EA0E32C8);
  sub_1BE06F340();
  uint64_t v19 = sub_1BDF86964(&qword_1EA0E34F0, &qword_1EA0E34E8);
  MEMORY[0x1C1888180](v11, v8, v19);
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v13 + 32))(v18, v16, v12);
  uint64_t v30 = v8;
  uint64_t v31 = v19;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  MEMORY[0x1C1888180](v18, v12, OpaqueTypeConformance2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v13 + 8))(v18, v12);
}

uint64_t sub_1BDFCD1D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E34B8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E34C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)v1;
  char v10 = *(unsigned char *)(v1 + 8);
  int v11 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v12 = *(void *)(v1 + 24);
  *(void *)uint64_t v4 = sub_1BE06F7D0();
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E34C8);
  sub_1BDFCC580(v9, v10, v11, v12, (uint64_t *)&v4[*(int *)(v13 + 44)]);
  uint64_t v24 = v9;
  char v25 = v10;
  char v26 = v11;
  uint64_t v27 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E34D0);
  sub_1BDF86964(&qword_1EA0E34D8, &qword_1EA0E34B8);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E34E0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E34E8);
  uint64_t v16 = sub_1BDF86964(&qword_1EA0E34F0, &qword_1EA0E34E8);
  uint64_t v28 = v15;
  uint64_t v29 = v16;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v28 = v14;
  uint64_t v29 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1BE06FF10();
  sub_1BDF8686C((uint64_t)v4, &qword_1EA0E34B8);
  uint64_t v18 = sub_1BE06F4D0();
  LOBYTE(v15) = sub_1BE06FAE0();
  uint64_t v19 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v23, v8, v5);
  uint64_t v20 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E34F8) + 36);
  *(void *)uint64_t v20 = v18;
  *(unsigned char *)(v20 + 8) = v15;
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BDFCD4B0()
{
  return sub_1BDFCD4E0((uint64_t (*)(void, void, void, void))sub_1BDFCCED8);
}

uint64_t sub_1BDFCD4C8()
{
  return sub_1BDFCD4E0((uint64_t (*)(void, void, void, void))sub_1BDFCC2D4);
}

uint64_t sub_1BDFCD4E0(uint64_t (*a1)(void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1BDFCD508()
{
  return sub_1BDFCC49C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1BDFCD524@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BDFCE7D4(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v5 = *(void *)(v3 + 72);
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v7 = *(void *)(v3 + 88);
  uint64_t v6 = *(void *)(v3 + 96);
  uint64_t v8 = *(void *)(v3 + 104);
  *(unsigned char *)a2 = *(unsigned char *)(v3 + 64);
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDFCD5F8(_OWORD *a1)
{
  long long v2 = *a1;
  *(_OWORD *)uint64_t v3 = a1[1];
  *(_OWORD *)&v3[16] = a1[2];
  *(void *)uint64_t v4 = *((void *)a1 + 2);
  *(_OWORD *)&v4[8] = *(_OWORD *)&v3[8];
  uint64_t v5 = *(void *)&v3[24];
  uint64_t v8 = *((void *)&v2 + 1);
  long long v7 = *(_OWORD *)v4;
  sub_1BDFB8210((uint64_t)&v4[16], (uint64_t)v6, &qword_1EA0E3060);
  swift_getKeyPath();
  sub_1BDFCE8E4((uint64_t)&v8);
  sub_1BDFCE910((uint64_t)&v7);
  sub_1BDFCE910((uint64_t)v6);
  sub_1BDFCE7D4(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F150();
  sub_1BDFCE93C((uint64_t)&v8);
  sub_1BDFCE968((uint64_t)&v7);
  sub_1BDFCE968((uint64_t)v6);
  return swift_release();
}

uint64_t sub_1BDFCD744(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1BE06F6D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_1BE0708F0();
    uint64_t v9 = sub_1BE06FA80();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      int v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)int v11 = 136315138;
      uint64_t v14 = sub_1BDFCDF38(0xD00000000000001DLL, 0x80000001BE08CB40, &v15);
      sub_1BE070A00();
      _os_log_impl(&dword_1BDF08000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C188ACF0](v12, -1, -1);
      MEMORY[0x1C188ACF0](v11, -1, -1);
    }

    sub_1BE06F6C0();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_1BDFCD954@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFCD9C8(&qword_1EA0E2EE0, MEMORY[0x1E4F3C818], 0x417373696D736944, 0xED00006E6F697463, a1);
}

uint64_t sub_1BDFCD994@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFCD9C8(&qword_1EA0E11D0, MEMORY[0x1E4F27CA0], 0x7261646E656C6143, 0xE800000000000000, a1);
}

uint64_t sub_1BDFCD9C8@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_1BE06F6D0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDF86808(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_1BE0708F0();
    id v21 = sub_1BE06FA80();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v26 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v27 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v29 = sub_1BDFCDF38(v28, v26, &v30);
      sub_1BE070A00();
      _os_log_impl(&dword_1BDF08000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C188ACF0](v24, -1, -1);
      MEMORY[0x1C188ACF0](v23, -1, -1);
    }

    sub_1BE06F6C0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1BDFCDC80@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFCD9C8(&qword_1EA0E11F0, MEMORY[0x1E4F3CD50], 0xD000000000000010, 0x80000001BE08CF50, a1);
}

uint64_t sub_1BDFCDCB8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFCD9C8(&qword_1EA0E11E0, MEMORY[0x1E4F3C5D8], 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_1BDFCDCF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFCD9C8(&qword_1EA0E1688, MEMORY[0x1E4F3E0E0], 0x747865746E6F43, 0xE700000000000000, a1);
}

uint64_t sub_1BDFCDD28(uint64_t a1, char a2)
{
  uint64_t v4 = sub_1BE06F6D0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_1BE0708F0();
  uint64_t v9 = sub_1BE06FA80();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_1BDFCDF38(0xD000000000000015, 0x80000001BE08CF70, &v15);
    sub_1BE070A00();
    _os_log_impl(&dword_1BDF08000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C188ACF0](v12, -1, -1);
    MEMORY[0x1C188ACF0](v11, -1, -1);
  }

  sub_1BE06F6C0();
  swift_getAtKeyPath();
  sub_1BDF8A570(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_1BDFCDF38(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1BDFCE00C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1BDFCE1C8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1BDFCE1C8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1BDFCE00C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1BE070A10();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1BDFCE224(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1BE070C10();
  if (!v8)
  {
    sub_1BE070C80();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1BE070D00();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1BDFCE1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1BDFCE224(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1BDFCE2BC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1BDFCE518(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1BDFCE518(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1BDFCE2BC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1BDFCE434(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1BE070B80();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1BE070C80();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1BE0705F0();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1BE070D00();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1BE070C80();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1BDFCE434(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3508);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  void v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1BDFCE49C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1BE070640();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1C1888E10](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1BDFCE518(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3508);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

uint64_t sub_1BDFCE66C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BE06F620();
  *a1 = result;
  return result;
}

uint64_t sub_1BDFCE698@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BE06F620();
  *a1 = result;
  return result;
}

uint64_t sub_1BDFCE6C4()
{
  return sub_1BE06F630();
}

uint64_t sub_1BDFCE6F0()
{
  return sub_1BE06F630();
}

uint64_t sub_1BDFCE71C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFCB010(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t sub_1BDFCE73C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFCB800(a1);
}

uint64_t sub_1BDFCE744@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFCBE28(*(void *)(v1 + 16), *(unsigned char *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), a1);
}

unint64_t sub_1BDFCE760()
{
  unint64_t result = qword_1EA0E35A8;
  if (!qword_1EA0E35A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3598);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E35A8);
  }
  return result;
}

uint64_t sub_1BDFCE7D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_2()
{
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1BDFCE860()
{
  return sub_1BE070120();
}

uint64_t sub_1BDFCE8B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFCC0BC(a1);
}

uint64_t sub_1BDFCE8C8()
{
  return sub_1BDFD7314(*(_OWORD **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1BDFCE8E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFCE910(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFCE93C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFCE968(uint64_t a1)
{
  return a1;
}

unint64_t sub_1BDFCE9A0()
{
  unint64_t result = qword_1EA0E35E0;
  if (!qword_1EA0E35E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E34F8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E34B8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E34D0);
    sub_1BDF86964(&qword_1EA0E34D8, &qword_1EA0E34B8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E34E0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E34E8);
    sub_1BDF86964(&qword_1EA0E34F0, &qword_1EA0E34E8);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E35E0);
  }
  return result;
}

uint64_t destroy for ShareeWithAccessItemView(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    return sub_1BDF841A4(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for ShareeWithAccessItemView(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2 + 2;
  unint64_t v6 = a2[3];
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    uint64_t v7 = *(void *)v5;
    sub_1BDF840AC(v7, v6);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v6;
  }
  *(void *)(a1 + 32) = a2[4];
  return a1;
}

void *assignWithCopy for ShareeWithAccessItemView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2 + 2;
  unint64_t v5 = a2[3];
  if (a1[3] >> 60 != 15)
  {
    if (v5 >> 60 != 15)
    {
      uint64_t v7 = *v4;
      sub_1BDF840AC(*v4, a2[3]);
      uint64_t v8 = a1[2];
      unint64_t v9 = a1[3];
      a1[2] = v7;
      a1[3] = v5;
      sub_1BDF841A4(v8, v9);
      goto LABEL_8;
    }
    sub_1BDFCECD8((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v5 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
    goto LABEL_8;
  }
  uint64_t v6 = *v4;
  sub_1BDF840AC(*v4, a2[3]);
  a1[2] = v6;
  a1[3] = v5;
LABEL_8:
  a1[4] = a2[4];
  return a1;
}

uint64_t sub_1BDFCECD8(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for ShareeWithAccessItemView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  unint64_t v5 = a2 + 2;
  unint64_t v6 = a1[3];
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = a2[3];
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = a1[2];
      a1[2] = *v5;
      a1[3] = v7;
      sub_1BDF841A4(v8, v6);
      goto LABEL_6;
    }
    sub_1BDFCECD8((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
LABEL_6:
  a1[4] = a2[4];
  return a1;
}

uint64_t getEnumTagSinglePayload for ShareeWithAccessItemView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShareeWithAccessItemView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareeWithAccessItemView()
{
  return &type metadata for ShareeWithAccessItemView;
}

uint64_t sub_1BDFCEE74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFCEE90()
{
  uint64_t v1 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v2 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  if (v3 == 2 || (uint64_t result = 0, v3 == 1))
  {
    sub_1BE070450();
    CUIKBundle();
    sub_1BE06EF70();
    return sub_1BE070530();
  }
  return result;
}

uint64_t sub_1BDFCF014@<X0>(uint64_t a1@<X8>)
{
  long long v3 = v1[1];
  long long v4 = *v1;
  sub_1BDF9D478(v3, *((unint64_t *)&v3 + 1));
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1BDFCEE90();
  uint64_t v7 = v6;
  uint64_t v8 = sub_1BE070060();
  uint64_t v9 = sub_1BE06FBE0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = sub_1BE070020();
  *(_OWORD *)a1 = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = v3;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = KeyPath;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = result;
  *(void *)(a1 + 80) = 0x4043000000000000;
  return result;
}

unint64_t sub_1BDFCF104()
{
  unint64_t result = qword_1EA0E35E8;
  if (!qword_1EA0E35E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E35F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E35E8);
  }
  return result;
}

id EKCalendarModelWrapper.ekCalendar.getter()
{
  return *v0;
}

void EKCalendarModelWrapper.ekCalendar.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*EKCalendarModelWrapper.ekCalendar.modify())()
{
  return nullsub_1;
}

uint64_t EKCalendarModelWrapper.id.getter()
{
  return sub_1BDFCF1E8((SEL *)&selRef_calendarIdentifier);
}

id EKCalendarModelWrapper.type.getter()
{
  return objc_msgSend(*v0, sel_type);
}

uint64_t EKCalendarModelWrapper.externalID.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_externalID);
}

uint64_t EKCalendarModelWrapper.title.getter()
{
  return sub_1BDFCF1E8((SEL *)&selRef_title);
}

uint64_t sub_1BDFCF1E8(SEL *a1)
{
  id v2 = [*v1 *a1];
  uint64_t v3 = sub_1BE070500();

  return v3;
}

uint64_t EKCalendarModelWrapper.displayOrder.getter()
{
  return (int)objc_msgSend(*v0, sel_displayOrder);
}

id EKCalendarModelWrapper.color.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  id v4 = objc_msgSend(v3, sel_symbolicColorName);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_1BE070500();
    uint64_t v8 = v7;

    if (v6 == sub_1BE070500() && v8 == v9)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v11 = sub_1BE070EF0();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        uint64_t v12 = v6;
        unint64_t v13 = v8;
LABEL_12:
        id result = (id)CalendarColor.init(_:)(v12, v13, (uint64_t)&v21);
        uint64_t v19 = v22;
        char v20 = v23;
        *(_OWORD *)a1 = v21;
        *(void *)(a1 + 16) = v19;
        *(unsigned char *)(a1 + 24) = v20;
        return result;
      }
    }
    swift_bridgeObjectRelease();
  }
  id result = objc_msgSend(v3, sel_colorStringRaw);
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v16 = sub_1BE070500();
    uint64_t v18 = v17;

    uint64_t v12 = v16;
    unint64_t v13 = v18;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

id EKCalendarModelWrapper.allowsContentModifications.getter()
{
  return objc_msgSend(*v0, sel_allowsContentModifications);
}

id EKCalendarModelWrapper.sharingStatus.getter()
{
  return objc_msgSend(*v0, sel_sharingStatus);
}

id EKCalendarModelWrapper.source.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_source);
  if (result) {
    *a1 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

id EKCalendarModelWrapper.isSubscribed.getter()
{
  return objc_msgSend(*v0, sel_isSubscribed);
}

id EKCalendarModelWrapper.isHolidayCalendar.getter()
{
  return objc_msgSend(*v0, sel_isHolidayCalendar);
}

id EKCalendarModelWrapper.isSubscribedHolidayCalendar.getter()
{
  return objc_msgSend(*v0, sel_isSubscribedHolidayCalendar);
}

id EKCalendarModelWrapper.isSuggestedEventCalendar.getter()
{
  return objc_msgSend(*v0, sel_isSuggestedEventCalendar);
}

id EKCalendarModelWrapper.allowsEvents.getter()
{
  return objc_msgSend(*v0, sel_allowEvents);
}

id EKCalendarModelWrapper.allowsScheduling.getter()
{
  return objc_msgSend(*v0, sel_allowsScheduling);
}

uint64_t EKCalendarModelWrapper.sharedOwnerAddress.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_sharedOwnerAddress);
}

uint64_t EKCalendarModelWrapper.sharedOwnerAddresses.getter()
{
  id v1 = objc_msgSend(*v0, sel_sharedOwnerAddresses);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  id v2 = v1;
  uint64_t v3 = sub_1BE070710();

  return v3;
}

uint64_t EKCalendarModelWrapper.ownerIdentityAddress.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_ownerIdentityAddress);
  if (v3)
  {
    id v4 = v3;
    sub_1BE06EDE0();

    uint64_t v5 = sub_1BE06EE10();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1BE06EE10();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

uint64_t EKCalendarModelWrapper.ownerIdentityEmail.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_ownerIdentityEmail);
}

uint64_t EKCalendarModelWrapper.ownerIdentityPhoneNumber.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_ownerIdentityPhoneNumber);
}

uint64_t EKCalendarModelWrapper.isDefaultCalendarForNewEvents.getter()
{
  id v1 = *v0;
  id v2 = objc_msgSend(v1, sel_calendarIdentifier);
  uint64_t v3 = sub_1BE070500();
  uint64_t v5 = v4;

  id v6 = objc_msgSend(v1, sel_eventStore);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel_defaultCalendarForNewEvents);

    if (v8)
    {
      id v9 = objc_msgSend(v8, sel_calendarIdentifier);

      uint64_t v10 = sub_1BE070500();
      uint64_t v12 = v11;

      if (v3 == v10 && v5 == v12) {
        char v14 = 1;
      }
      else {
        char v14 = sub_1BE070EF0();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = 0;
    }
    swift_bridgeObjectRelease();
    return v14 & 1;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

void EKCalendarModelWrapper.constraints.getter(void *a1@<X8>)
{
  id v3 = *v1;
  id v4 = objc_msgSend(v3, sel_source);
  if (v4)
  {
    uint64_t v5 = v4;

    id v6 = objc_msgSend(v5, sel_constraints);
    *a1 = v6;
  }
  else
  {
    __break(1u);
  }
}

CalendarUIKit::EKCalendarModelWrapper __swiftcall EKCalendarModelWrapper.init(_:)(CalendarUIKit::EKCalendarModelWrapper result)
{
  v1->ekCalendar.super.super.Class isa = result.ekCalendar.super.super.isa;
  return result;
}

unint64_t sub_1BDFCF7F0()
{
  unint64_t result = qword_1EB677D58;
  if (!qword_1EB677D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB677D58);
  }
  return result;
}

uint64_t sub_1BDFCF844(uint64_t a1, uint64_t a2)
{
  return sub_1BDFCF878(a1, a2, (SEL *)&selRef_calendarIdentifier);
}

id sub_1BDFCF850()
{
  return objc_msgSend(*v0, sel_type);
}

uint64_t sub_1BDFCF860(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_externalID);
}

uint64_t sub_1BDFCF86C(uint64_t a1, uint64_t a2)
{
  return sub_1BDFCF878(a1, a2, (SEL *)&selRef_title);
}

uint64_t sub_1BDFCF878(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  uint64_t v5 = sub_1BE070500();

  return v5;
}

uint64_t sub_1BDFCF8CC()
{
  return (int)objc_msgSend(*v0, sel_displayOrder);
}

id sub_1BDFCF8F8()
{
  return objc_msgSend(*v0, sel_allowsContentModifications);
}

id sub_1BDFCF91C()
{
  return objc_msgSend(*v0, sel_sharingStatus);
}

id sub_1BDFCF92C@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_source);
  if (result) {
    *a1 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

id sub_1BDFCF970()
{
  return objc_msgSend(*v0, sel_isSubscribed);
}

id sub_1BDFCF994()
{
  return objc_msgSend(*v0, sel_isHolidayCalendar);
}

id sub_1BDFCF9B8()
{
  return objc_msgSend(*v0, sel_isSubscribedHolidayCalendar);
}

id sub_1BDFCF9DC()
{
  return objc_msgSend(*v0, sel_isSuggestedEventCalendar);
}

id sub_1BDFCFA00()
{
  return objc_msgSend(*v0, sel_allowEvents);
}

id sub_1BDFCFA24()
{
  return objc_msgSend(*v0, sel_allowsScheduling);
}

uint64_t sub_1BDFCFA48(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_sharedOwnerAddress);
}

uint64_t sub_1BDFCFA54()
{
  id v1 = objc_msgSend(*v0, sel_sharedOwnerAddresses);
  if (!v1) {
    return MEMORY[0x1E4FBC860];
  }
  id v2 = v1;
  uint64_t v3 = sub_1BE070710();

  return v3;
}

uint64_t sub_1BDFCFAB4@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_ownerIdentityAddress);
  if (v3)
  {
    id v4 = v3;
    sub_1BE06EDE0();

    uint64_t v5 = sub_1BE06EE10();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1BE06EE10();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

uint64_t sub_1BDFCFB7C(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_ownerIdentityEmail);
}

uint64_t sub_1BDFCFB88(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_ownerIdentityPhoneNumber);
}

unint64_t sub_1BDFCFB98(uint64_t a1)
{
  unint64_t result = sub_1BDFCFBC0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BDFCFBC0()
{
  unint64_t result = qword_1EB677D60;
  if (!qword_1EB677D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB677D60);
  }
  return result;
}

void sub_1BDFCFC14(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_calendarIdentifier);
  uint64_t v4 = sub_1BE070500();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

_UNKNOWN **sub_1BDFCFC6C()
{
  return &protocol witness table for EKSourceConstraintsModelWrapper;
}

ValueMetadata *type metadata accessor for EKCalendarModelWrapper()
{
  return &type metadata for EKCalendarModelWrapper;
}

uint64_t destroy for AlertsView()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for AlertsView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AlertsView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for AlertsView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for AlertsView()
{
  return &type metadata for AlertsView;
}

uint64_t sub_1BDFCFE58()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFCFE74@<X0>(long long *a1@<X0>, char *a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E35F8);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v36 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v32 = (char *)&v29 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3600);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v34 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = sub_1BE06F7A0();
  uint64_t v30 = v14;
  uint64_t v31 = v13;
  uint64_t v29 = v15;
  long long v41 = *a1;
  char v42 = *((unsigned char *)a1 + 16);
  long long v37 = *a1;
  char v38 = *((unsigned char *)a1 + 16);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3608);
  sub_1BE070230();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3610);
  sub_1BDFD03D8();
  sub_1BDFD042C();
  id v33 = v12;
  sub_1BE0701A0();
  long long v39 = v41;
  char v40 = v42;
  MEMORY[0x1C1888A00](&v37, v16);
  if ((_BYTE)v37)
  {
    uint64_t v17 = sub_1BE06F7A0();
    uint64_t v30 = v18;
    uint64_t v31 = v17;
    long long v37 = *(long long *)((char *)a1 + 24);
    char v38 = *((unsigned char *)a1 + 40);
    sub_1BE070230();
    uint64_t v19 = (uint64_t)v32;
    sub_1BE0701A0();
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v20 = 1;
    uint64_t v19 = (uint64_t)v32;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v19, v20, 1, v7);
  long long v21 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  char v23 = v33;
  uint64_t v22 = v34;
  v21(v34, v33, v7);
  uint64_t v24 = v36;
  sub_1BDFD05E0(v19, v36);
  uint64_t v25 = v35;
  v21(v35, v22, v7);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3668);
  sub_1BDFD05E0(v24, (uint64_t)&v25[*(int *)(v26 + 48)]);
  sub_1BDFD0648(v19);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v8 + 8);
  v27(v23, v7);
  sub_1BDFD0648(v24);
  return ((uint64_t (*)(char *, uint64_t))v27)(v22, v7);
}

uint64_t sub_1BDFD0250()
{
  return sub_1BDFD026C();
}

uint64_t sub_1BDFD026C()
{
  return sub_1BE070270();
}

uint64_t sub_1BDFD033C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *a1;
  sub_1BE05D198();
  sub_1BDF859F0();
  uint64_t result = sub_1BE06FD30();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(unsigned char *)(a2 + 16) = v6 & 1;
  *(void *)(a2 + 24) = v7;
  *(unsigned char *)(a2 + 32) = v3;
  *(unsigned char *)(a2 + 33) = v3;
  return result;
}

uint64_t sub_1BDFD03A4@<X0>(char *a1@<X8>)
{
  long long v2 = v1[1];
  long long v4 = *v1;
  v5[0] = v2;
  *(_OWORD *)((char *)v5 + 9) = *(long long *)((char *)v1 + 25);
  return sub_1BDFCFE74(&v4, a1);
}

unint64_t sub_1BDFD03D8()
{
  unint64_t result = qword_1EA0E3618;
  if (!qword_1EA0E3618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3618);
  }
  return result;
}

unint64_t sub_1BDFD042C()
{
  unint64_t result = qword_1EA0E3620;
  if (!qword_1EA0E3620)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3610);
    sub_1BDFD04A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3620);
  }
  return result;
}

unint64_t sub_1BDFD04A0()
{
  unint64_t result = qword_1EA0E3628;
  if (!qword_1EA0E3628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3630);
    sub_1BDFD0540();
    sub_1BDF86964(&qword_1EA0E3658, &qword_1EA0E3660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3628);
  }
  return result;
}

unint64_t sub_1BDFD0540()
{
  unint64_t result = qword_1EA0E3638;
  if (!qword_1EA0E3638)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3640);
    sub_1BDF86964(&qword_1EA0E3648, &qword_1EA0E3650);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3638);
  }
  return result;
}

uint64_t sub_1BDFD05E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E35F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFD0648(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E35F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BDFD06A8()
{
  unint64_t result = qword_1EA0E3678;
  if (!qword_1EA0E3678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3678);
  }
  return result;
}

unint64_t sub_1BDFD0700()
{
  unint64_t result = qword_1EA0E3680;
  if (!qword_1EA0E3680)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3688);
    sub_1BDF86964(&qword_1EA0E3690, &qword_1EA0E3698);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3680);
  }
  return result;
}

CalendarUIKit::EKSourceModelWrapper __swiftcall EKSourceModelWrapper.init(_:)(CalendarUIKit::EKSourceModelWrapper result)
{
  v1->ekSource.super.super.Class isa = result.ekSource.super.super.isa;
  return result;
}

id EKSourceModelWrapper.constraints.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_constraints);
  *a1 = result;
  return result;
}

id EKSourceModelWrapper.ekSource.getter()
{
  return *v0;
}

void EKSourceModelWrapper.ekSource.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t (*EKSourceModelWrapper.ekSource.modify())()
{
  return nullsub_1;
}

uint64_t EKSourceModelWrapper.id.getter()
{
  return sub_1BDFCF1E8((SEL *)&selRef_sourceIdentifier);
}

id EKSourceModelWrapper.sourceType.getter()
{
  return objc_msgSend(*v0, sel_sourceType);
}

uint64_t EKSourceModelWrapper.title.getter()
{
  return sub_1BDFCF1E8((SEL *)&selRef_title);
}

id EKSourceModelWrapper.isDelegate.getter()
{
  return objc_msgSend(*v0, sel_isDelegate);
}

id EKSourceModelWrapper.isManaged.getter()
{
  uint64_t v1 = *v0;
  id result = objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    char v3 = result;
    id v4 = objc_msgSend(result, sel_sourceIsManaged_, v1);

    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id EKSourceModelWrapper.isWritable.getter()
{
  return objc_msgSend(*v0, sel_isWritable);
}

id EKSourceModelWrapper.isPrimaryLocalSource.getter()
{
  return objc_msgSend(*v0, sel_isPrimaryLocalSource);
}

uint64_t EKSourceModelWrapper.appGroupID.getter()
{
  id v1 = objc_msgSend(*v0, sel_appGroupIdentifier);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1BE070500();

  return v3;
}

void *EKSourceModelWrapper.ownerAddresses.getter()
{
  id v1 = objc_msgSend(*v0, sel_ownerAddresses);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1BE070830();

  id v4 = sub_1BDFD0F24(v3);
  swift_bridgeObjectRelease();
  return v4;
}

id EKSourceModelWrapper.preferredEventPrivateValue.getter()
{
  return objc_msgSend(*v0, sel_preferredEventPrivateValue);
}

id EKSourceModelWrapper.defaultAlarmOffset.getter()
{
  return sub_1BDFD0A44((SEL *)&selRef_defaultAlarmOffset, (SEL *)&selRef_defaultTimedAlarmOffset);
}

id EKSourceModelWrapper.defaultAllDayAlarmOffset.getter()
{
  return sub_1BDFD0A44((SEL *)&selRef_defaultAllDayAlarmOffset, (SEL *)&selRef_defaultAllDayAlarmOffset);
}

id sub_1BDFD0A44(SEL *a1, SEL *a2)
{
  id v4 = *v2;
  id v5 = [*v2 *a1];
  if (v5) {
    goto LABEL_4;
  }
  id result = objc_msgSend(v4, sel_eventStore);
  if (result)
  {
    uint64_t v7 = result;
    id v5 = [result *a2];

    if (v5)
    {
LABEL_4:
      objc_msgSend(v5, sel_doubleValue);
      uint64_t v9 = v8;

      return (id)v9;
    }
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDFD0B00(uint64_t a1, uint64_t a2)
{
  return sub_1BDFCF878(a1, a2, (SEL *)&selRef_sourceIdentifier);
}

uint64_t sub_1BDFD0B0C()
{
  id v1 = objc_msgSend(*v0, sel_appGroupIdentifier);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1BE070500();

  return v3;
}

id sub_1BDFD0B74()
{
  return objc_msgSend(*v0, sel_sourceType);
}

id sub_1BDFD0B84()
{
  return objc_msgSend(*v0, sel_isDelegate);
}

id sub_1BDFD0BA8()
{
  uint64_t v1 = *v0;
  id result = objc_msgSend(self, sel_sharedInstance);
  if (result)
  {
    uint64_t v3 = result;
    id v4 = objc_msgSend(result, sel_sourceIsManaged_, v1);

    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BDFD0C10()
{
  return objc_msgSend(*v0, sel_isWritable);
}

id sub_1BDFD0C34()
{
  return objc_msgSend(*v0, sel_isPrimaryLocalSource);
}

void *sub_1BDFD0C58()
{
  id v1 = objc_msgSend(*v0, sel_ownerAddresses);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1BE070830();

  id v4 = sub_1BDFD0F24(v3);
  swift_bridgeObjectRelease();
  return v4;
}

id sub_1BDFD0CD4()
{
  return objc_msgSend(*v0, sel_preferredEventPrivateValue);
}

id sub_1BDFD0CE4()
{
  return EKSourceModelWrapper.defaultAlarmOffset.getter();
}

id sub_1BDFD0D00()
{
  return EKSourceModelWrapper.defaultAllDayAlarmOffset.getter();
}

void sub_1BDFD0D1C(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_sourceIdentifier);
  uint64_t v4 = sub_1BE070500();
  uint64_t v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

id sub_1BDFD0D74@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_constraints);
  *a1 = result;
  return result;
}

uint64_t sub_1BDFD0DB0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x1E4FBC860];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1568);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      v9[2] = v5;
      void v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

void *sub_1BDFD0F24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1568);
  id v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1BDFD1098((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BDFD1298();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

unint64_t sub_1BDFD100C(uint64_t a1)
{
  unint64_t result = sub_1BDFD1034();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BDFD1034()
{
  unint64_t result = qword_1EB677D50;
  if (!qword_1EB677D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB677D50);
  }
  return result;
}

ValueMetadata *type metadata accessor for EKSourceModelWrapper()
{
  return &type metadata for EKSourceModelWrapper;
}

uint64_t sub_1BDFD1098(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    _OWORD v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    unint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BDFD1298()
{
  return swift_release();
}

uint64_t EventAlarmTrigger.hash(into:)()
{
  uint64_t v1 = sub_1BE06EEE0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  int64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EventAlarmTrigger();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFD14B4(v0, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1BE070FC0();
    sub_1BDFD29A0(&qword_1EA0E10E0, MEMORY[0x1E4F27928]);
    sub_1BE070410();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    sub_1BE070FC0();
    return sub_1BE070FE0();
  }
}

uint64_t type metadata accessor for EventAlarmTrigger()
{
  uint64_t result = qword_1EA0E36F8;
  if (!qword_1EA0E36F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BDFD14B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventAlarmTrigger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFD151C()
{
  return 1702125924;
}

uint64_t sub_1BDFD152C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1702125924 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1BE070EF0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BDFD15B4(uint64_t a1)
{
  unint64_t v2 = sub_1BDFD27F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFD15F0(uint64_t a1)
{
  unint64_t v2 = sub_1BDFD27F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1BDFD162C()
{
  if (*v0) {
    return 0x6574756C6F736261;
  }
  else {
    return 0x65766974616C6572;
  }
}

uint64_t sub_1BDFD1660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFD3488(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFD1688(uint64_t a1)
{
  unint64_t v2 = sub_1BDFD279C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFD16C4(uint64_t a1)
{
  unint64_t v2 = sub_1BDFD279C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1BDFD1700()
{
  return 0x74657366666FLL;
}

uint64_t sub_1BDFD1714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1BE070EF0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BDFD17A4(uint64_t a1)
{
  unint64_t v2 = sub_1BDFD2844();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFD17E0(uint64_t a1)
{
  unint64_t v2 = sub_1BDFD2844();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventAlarmTrigger.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E36A0);
  uint64_t v30 = *(void *)(v2 - 8);
  uint64_t v31 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v27 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v26 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E36A8);
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EventAlarmTrigger();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E36B0);
  uint64_t v12 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  int64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDFD279C();
  sub_1BE071030();
  sub_1BDFD14B4(v32, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = v28;
    unint64_t v16 = v26;
    int64_t v17 = v11;
    uint64_t v18 = v29;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v26, v17, v29);
    char v35 = 1;
    sub_1BDFD27F0();
    int64_t v19 = v27;
    uint64_t v20 = v33;
    sub_1BE070E20();
    sub_1BDFD29A0(&qword_1EA0E10D8, MEMORY[0x1E4F27928]);
    uint64_t v21 = v31;
    sub_1BE070EB0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v21);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v16, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  }
  else
  {
    char v34 = 0;
    sub_1BDFD2844();
    uint64_t v23 = v33;
    sub_1BE070E20();
    sub_1BE070E80();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v23);
  }
}

uint64_t EventAlarmTrigger.hashValue.getter()
{
  return sub_1BE070FF0();
}

uint64_t EventAlarmTrigger.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E36D0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  uint64_t v47 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v50 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E36D8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  uint64_t v45 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v49 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E36E0);
  uint64_t v48 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for EventAlarmTrigger();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v40 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v40 - v19;
  uint64_t v21 = a1[3];
  uint64_t v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1BDFD279C();
  uint64_t v22 = v52;
  sub_1BE071010();
  if (v22) {
    goto LABEL_7;
  }
  long long v41 = v18;
  char v42 = v20;
  uint64_t v23 = v49;
  uint64_t v24 = v50;
  uint64_t v52 = v12;
  uint64_t v25 = sub_1BE070E00();
  uint64_t v26 = v11;
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v30 = sub_1BE070C00();
    swift_allocError();
    uint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EA0E2278);
    uint64_t *v32 = v52;
    sub_1BE070D40();
    sub_1BE070BF0();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x1E4FBBA70], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v9);
LABEL_7:
    uint64_t v28 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  if (*(unsigned char *)(v25 + 32))
  {
    char v54 = 1;
    sub_1BDFD27F0();
    sub_1BE070D30();
    sub_1BE06EEE0();
    sub_1BDFD29A0(&qword_1EA0E36E8, MEMORY[0x1E4F27928]);
    uint64_t v27 = v46;
    sub_1BE070DF0();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v24, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v26, v9);
    uint64_t v28 = (uint64_t)v51;
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = (uint64_t)v15;
  }
  else
  {
    char v53 = 0;
    sub_1BDFD2844();
    uint64_t v33 = v23;
    sub_1BE070D30();
    uint64_t v35 = v44;
    sub_1BE070DD0();
    uint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v35);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v9);
    uint64_t v28 = (uint64_t)v51;
    char v38 = v41;
    void *v41 = v37;
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = (uint64_t)v38;
  }
  uint64_t v39 = (uint64_t)v42;
  sub_1BDFD2898(v29, (uint64_t)v42);
  sub_1BDFD2898(v39, v43);
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t sub_1BDFD2288()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFD22CC()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFD2308@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventAlarmTrigger.init(from:)(a1, a2);
}

uint64_t sub_1BDFD2320(void *a1)
{
  return EventAlarmTrigger.encode(to:)(a1);
}

BOOL EventAlarmModel.isRelative.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventAlarmTrigger();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1) {
    sub_1BDFD28FC((uint64_t)v6);
  }
  return EnumCaseMultiPayload != 1;
}

BOOL EventAlarmModel.isAbsolute.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventAlarmTrigger();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_1BE06EEE0();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    sub_1BDFD28FC((uint64_t)v6);
  }
  return EnumCaseMultiPayload == 1;
}

uint64_t _s13CalendarUIKit17EventAlarmTriggerO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for EventAlarmTrigger();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (double *)((char *)&v22 - v12);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3750);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (double *)&v17[*(int *)(v15 + 56)];
  sub_1BDFD14B4(a1, (uint64_t)v17);
  sub_1BDFD14B4(a2, (uint64_t)v18);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BDFD14B4((uint64_t)v17, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      char v19 = *v13 == *v18;
      goto LABEL_6;
    }
LABEL_8:
    sub_1BDFD357C((uint64_t)v17);
    char v19 = 0;
    return v19 & 1;
  }
  sub_1BDFD14B4((uint64_t)v17, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
    goto LABEL_8;
  }
  (*(void (**)(char *, double *, uint64_t))(v5 + 32))(v7, v18, v4);
  char v19 = sub_1BE06EEB0();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v7, v4);
  v20(v11, v4);
LABEL_6:
  sub_1BDFD28FC((uint64_t)v17);
  return v19 & 1;
}

unint64_t sub_1BDFD279C()
{
  unint64_t result = qword_1EA0E36B8;
  if (!qword_1EA0E36B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E36B8);
  }
  return result;
}

unint64_t sub_1BDFD27F0()
{
  unint64_t result = qword_1EA0E36C0;
  if (!qword_1EA0E36C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E36C0);
  }
  return result;
}

unint64_t sub_1BDFD2844()
{
  unint64_t result = qword_1EA0E36C8;
  if (!qword_1EA0E36C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E36C8);
  }
  return result;
}

uint64_t sub_1BDFD2898(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventAlarmTrigger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFD28FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EventAlarmTrigger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDFD2958()
{
  return sub_1BDFD29A0(&qword_1EA0E36F0, (void (*)(uint64_t))type metadata accessor for EventAlarmTrigger);
}

uint64_t sub_1BDFD29A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of EventAlarmModel.trigger.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventAlarmModel.isDefault.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t *initializeBufferWithCopyOfBuffer for EventAlarmTrigger(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1BE06EEE0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for EventAlarmTrigger(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_1BE06EEE0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for EventAlarmTrigger(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1BE06EEE0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for EventAlarmTrigger(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BDFD28FC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1BE06EEE0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for EventAlarmTrigger(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1BE06EEE0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for EventAlarmTrigger(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BDFD28FC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1BE06EEE0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for EventAlarmTrigger(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for EventAlarmTrigger(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1BDFD2EDC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BDFD2EEC()
{
  uint64_t result = sub_1BE06EEE0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EventAlarmTrigger.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDFD3050);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventAlarmTrigger.CodingKeys()
{
  return &type metadata for EventAlarmTrigger.CodingKeys;
}

ValueMetadata *type metadata accessor for EventAlarmTrigger.RelativeCodingKeys()
{
  return &type metadata for EventAlarmTrigger.RelativeCodingKeys;
}

unsigned char *_s13CalendarUIKit17EventAlarmTriggerO18RelativeCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1BDFD3138);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EventAlarmTrigger.AbsoluteCodingKeys()
{
  return &type metadata for EventAlarmTrigger.AbsoluteCodingKeys;
}

unint64_t sub_1BDFD3174()
{
  unint64_t result = qword_1EA0E3708;
  if (!qword_1EA0E3708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3708);
  }
  return result;
}

unint64_t sub_1BDFD31CC()
{
  unint64_t result = qword_1EA0E3710;
  if (!qword_1EA0E3710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3710);
  }
  return result;
}

unint64_t sub_1BDFD3224()
{
  unint64_t result = qword_1EA0E3718;
  if (!qword_1EA0E3718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3718);
  }
  return result;
}

unint64_t sub_1BDFD327C()
{
  unint64_t result = qword_1EA0E3720;
  if (!qword_1EA0E3720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3720);
  }
  return result;
}

unint64_t sub_1BDFD32D4()
{
  unint64_t result = qword_1EA0E3728;
  if (!qword_1EA0E3728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3728);
  }
  return result;
}

unint64_t sub_1BDFD332C()
{
  unint64_t result = qword_1EA0E3730;
  if (!qword_1EA0E3730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3730);
  }
  return result;
}

unint64_t sub_1BDFD3384()
{
  unint64_t result = qword_1EA0E3738;
  if (!qword_1EA0E3738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3738);
  }
  return result;
}

unint64_t sub_1BDFD33DC()
{
  unint64_t result = qword_1EA0E3740;
  if (!qword_1EA0E3740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3740);
  }
  return result;
}

unint64_t sub_1BDFD3434()
{
  unint64_t result = qword_1EA0E3748;
  if (!qword_1EA0E3748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3748);
  }
  return result;
}

uint64_t sub_1BDFD3488(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65766974616C6572 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574756C6F736261 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1BDFD357C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3750);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of EventLocationModel.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventLocationModel.geoLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventLocationModel.radius.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventLocationModel.address.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EventLocationModel.contactLabel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EventLocationModel.mapKitHandle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EventLocationModel.isImprecise.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EventLocationModel.predictedLOI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

BOOL sub_1BDFD367C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v8, 1, AssociatedTypeWitness) != 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

ValueMetadata *type metadata accessor for TableViewChevron()
{
  return &type metadata for TableViewChevron;
}

uint64_t sub_1BDFD37DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFD37F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1448);
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1BE06FC10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1BE070060();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E4F3E180], v5);
  uint64_t v10 = sub_1BE06FB50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  sub_1BE06FB90();
  sub_1BDFD3A40((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BE06FB60();
  uint64_t v11 = sub_1BE06FBB0();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  if (qword_1EA0E2220 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1EA0F6B68;
  uint64_t v14 = swift_getKeyPath();
  *a1 = v9;
  a1[1] = KeyPath;
  a1[2] = v11;
  a1[3] = v14;
  a1[4] = v13;
  return swift_retain();
}

uint64_t sub_1BDFD3A40(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1448);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BDFD3AB4()
{
  unint64_t result = qword_1EA0E3758;
  if (!qword_1EA0E3758)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3760);
    sub_1BDFD3B40();
    sub_1BDFD3BCC(&qword_1EA0E1420, &qword_1EA0E1428);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3758);
  }
  return result;
}

unint64_t sub_1BDFD3B40()
{
  unint64_t result = qword_1EA0E3768;
  if (!qword_1EA0E3768)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EA0E3770);
    sub_1BDFD3BCC(&qword_1EA0E1410, &qword_1EA0E1418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3768);
  }
  return result;
}

uint64_t sub_1BDFD3BCC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id CUIKProposedTimeEventViewControllerManagerImpl.__allocating_init(delegate:proposedTime:)(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (char *)objc_allocWithZone(v2);
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl_subscribers] = MEMORY[0x1E4FBC870];
  *(void *)&v4[OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl____lazy_storage___viewController] = 0;
  swift_unknownObjectWeakAssign();
  uint64_t v5 = &v4[OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl_proposedTime];
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a2, v6);
  v10.receiver = v4;
  v10.super_class = v2;
  id v8 = objc_msgSendSuper2(&v10, sel_init);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a2, v6);
  return v8;
}

id CUIKProposedTimeEventViewControllerManagerImpl.init(delegate:proposedTime:)(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl_subscribers] = MEMORY[0x1E4FBC870];
  *(void *)&v2[OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl____lazy_storage___viewController] = 0;
  swift_unknownObjectWeakAssign();
  unsigned int v4 = &v2[OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl_proposedTime];
  uint64_t v5 = sub_1BE06EEE0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, a2, v5);
  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for CUIKProposedTimeEventViewControllerManagerImpl();
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a2, v5);
  return v7;
}

uint64_t type metadata accessor for CUIKProposedTimeEventViewControllerManagerImpl()
{
  uint64_t result = qword_1EA0E37A8;
  if (!qword_1EA0E37A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1BDFD4060()
{
  uint64_t v1 = OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl____lazy_storage___viewController;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl____lazy_storage___viewController];
  if (v2)
  {
    id v3 = *(id *)&v0[OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl____lazy_storage___viewController];
  }
  else
  {
    unsigned int v4 = (void *)sub_1BDFD410C(v0);
    uint64_t v5 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1BDFD410C(char *a1)
{
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3398);
  uint64_t v2 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  unsigned int v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1BE06EEE0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v9 = (void *)MEMORY[0x1C188ADC0](&a1[OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl_delegate]);
  if (v9)
  {
    id v10 = objc_msgSend(v9, sel_eventForViewControllerManager);
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &a1[OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl_proposedTime], v5);
    type metadata accessor for CUIKProposedTimeViewModel();
    swift_allocObject();
    id v11 = v10;
    id v12 = sub_1BE00EF9C(v11, v8);

    sub_1BDF8B7B8();
    swift_retain();
    uint64_t v21 = sub_1BE06F440();
    uint64_t v22 = v13;
    id v14 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E37C8));
    swift_retain();
    uint64_t v19 = sub_1BE06F810();
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33B0);
    sub_1BE06F210();
    swift_endAccess();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a1;
    *(void *)(v15 + 24) = v12;
    sub_1BDFBE8AC();
    swift_retain();
    a1;
    uint64_t v16 = v20;
    sub_1BE06F260();
    swift_release();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v16);
    swift_beginAccess();
    sub_1BE06F1D0();
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();

    swift_release();
    return v19;
  }
  else
  {
    uint64_t result = sub_1BE070C90();
    __break(1u);
  }
  return result;
}

unsigned char *sub_1BDFD4494(unsigned char *result, uint64_t a2)
{
  if (*result == 1)
  {
    uint64_t v2 = (void *)MEMORY[0x1C188ADC0](a2 + OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl_delegate);
    if (v2)
    {
      objc_msgSend(v2, sel_requestOrganizerDetailPresentation);
      swift_unknownObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return (unsigned char *)sub_1BE06F230();
  }
  return result;
}

id CUIKProposedTimeEventViewControllerManagerImpl.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void CUIKProposedTimeEventViewControllerManagerImpl.init()()
{
}

id CUIKProposedTimeEventViewControllerManagerImpl.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CUIKProposedTimeEventViewControllerManagerImpl();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BDFD4608@<X0>(void *a1@<X8>)
{
  id result = sub_1BDFD4060();
  *a1 = result;
  return result;
}

void sub_1BDFD4634(void **a1, void *a2)
{
  objc_super v2 = *a1;
  id v4 = *(id *)(*a2
             + OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl____lazy_storage___viewController);
  *(void *)(*a2
            + OBJC_IVAR____TtC13CalendarUIKit46CUIKProposedTimeEventViewControllerManagerImpl____lazy_storage___viewController) = *a1;
  id v3 = v2;
}

uint64_t sub_1BDFD4724()
{
  return type metadata accessor for CUIKProposedTimeEventViewControllerManagerImpl();
}

uint64_t sub_1BDFD472C()
{
  uint64_t result = sub_1BE06EEE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CUIKProposedTimeEventViewControllerManagerImpl(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CUIKProposedTimeEventViewControllerManagerImpl);
}

uint64_t dispatch thunk of CUIKProposedTimeEventViewControllerManagerImpl.__allocating_init(delegate:proposedTime:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of CUIKProposedTimeEventViewControllerManagerImpl.viewController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC0))();
}

uint64_t sub_1BDFD4840()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

unsigned char *sub_1BDFD4880(unsigned char *a1)
{
  return sub_1BDFD4494(a1, *(void *)(v1 + 16));
}

uint64_t destroy for InviteesView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for InviteesView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InviteesView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for InviteesView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for InviteesView()
{
  return &type metadata for InviteesView;
}

uint64_t sub_1BDFD4A8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFD4AA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v33 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E37D0);
  uint64_t v31 = *(void *)(v2 - 8);
  uint64_t v32 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E37D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v11 = v1[2];
  v34[0] = *v1;
  v34[1] = v9;
  v34[2] = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E37E0);
  MEMORY[0x1C1888A00](&v36, v12);
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v13)
  {
    v34[0] = v11;
    uint64_t v35 = v1[3];
    unint64_t v36 = v10;
    id v14 = (_OWORD *)swift_allocObject();
    long long v15 = *((_OWORD *)v1 + 1);
    v14[1] = *(_OWORD *)v1;
    v14[2] = v15;
    *(_OWORD *)((char *)v14 + 41) = *(_OWORD *)((char *)v1 + 25);
    MEMORY[0x1F4188790](v14);
    *(&v31 - 2) = (uint64_t)v1;
    sub_1BDFCE8E4((uint64_t)&v36);
    swift_retain();
    sub_1BDFD5B78((uint64_t)v34);
    sub_1BDFCE8E4((uint64_t)&v35);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E37E8);
    sub_1BDF86964(&qword_1EA0E37F0, &qword_1EA0E37E8);
    sub_1BE070150();
    char v16 = sub_1BE06FAD0();
    sub_1BE06F2D0();
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    uint64_t v26 = v31;
    uint64_t v25 = v32;
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v8, v4, v32);
    uint64_t v27 = &v8[*(int *)(v5 + 36)];
    *uint64_t v27 = v16;
    *((void *)v27 + 1) = v18;
    *((void *)v27 + 2) = v20;
    *((void *)v27 + 3) = v22;
    *((void *)v27 + 4) = v24;
    v27[40] = 0;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v25);
    uint64_t v28 = v33;
    sub_1BDFD5BA4((uint64_t)v8, v33);
    uint64_t v29 = 0;
  }
  else
  {
    uint64_t v29 = 1;
    uint64_t v28 = v33;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v28, v29, 1, v5);
}

uint64_t sub_1BDFD4E1C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = sub_1BE06F7D0();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E37F8);
  return sub_1BDFD4E6C(a1 + *(int *)(v2 + 44));
}

uint64_t sub_1BDFD4E6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3800);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v27 = sub_1BE06F740();
  sub_1BDFD50B4((uint64_t)v29);
  uint64_t v8 = v29[0];
  uint64_t v9 = v29[1];
  int v23 = v30;
  uint64_t v10 = v31;
  uint64_t v26 = v32;
  int v25 = v33;
  uint64_t v11 = v34;
  uint64_t v22 = v34;
  uint64_t v24 = v35;
  char v12 = v36;
  uint64_t v28 = v37;
  *(void *)uint64_t v7 = sub_1BE06F740();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3808);
  sub_1BDFD540C((uint64_t)&v7[*(int *)(v13 + 44)]);
  sub_1BDF86808((uint64_t)v7, (uint64_t)v5, &qword_1EA0E3800);
  *(void *)a1 = v27;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v21 = v8;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v9;
  char v14 = v23;
  *(unsigned char *)(a1 + 40) = v23;
  uint64_t v15 = v26;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v15;
  *(unsigned char *)(a1 + 64) = v25;
  *(void *)(a1 + 72) = v11;
  uint64_t v16 = v24;
  *(void *)(a1 + 80) = v24;
  *(unsigned char *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = v28;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3810);
  sub_1BDF86808((uint64_t)v5, a1 + *(int *)(v17 + 48), &qword_1EA0E3800);
  uint64_t v18 = a1 + *(int *)(v17 + 64);
  *(void *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 8) = 1;
  sub_1BDF8555C(v8, v9, v14);
  swift_bridgeObjectRetain();
  uint64_t v19 = v22;
  sub_1BDF8555C(v22, v16, v12);
  swift_bridgeObjectRetain();
  sub_1BDF8686C((uint64_t)v7, &qword_1EA0E3800);
  sub_1BDF8686C((uint64_t)v5, &qword_1EA0E3800);
  sub_1BDF8587C(v21, v9, v14);
  swift_bridgeObjectRelease();
  sub_1BDF8587C(v19, v16, v12);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDFD50B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1BE06F790();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1BE06F7A0();
  uint64_t v3 = sub_1BE06FD20();
  uint64_t v5 = v4;
  char v7 = v6 & 1;
  uint64_t v8 = sub_1BE06FD00();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  sub_1BDF8587C(v3, v5, v7);
  swift_bridgeObjectRelease();
  sub_1BE070010();
  uint64_t v13 = sub_1BE06FCD0();
  uint64_t v33 = v14;
  uint64_t v34 = v13;
  char v16 = v15;
  uint64_t v35 = v17;
  swift_release();
  sub_1BDF8587C(v8, v10, v12);
  swift_bridgeObjectRelease();
  sub_1BE06F780();
  sub_1BE06F770();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E37E0);
  MEMORY[0x1C1888A00](v36, v18);
  if (v36[0] >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BE070CB0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  char v32 = v16 & 1;
  sub_1BE06F750();
  sub_1BE06F770();
  sub_1BE06F7B0();
  uint64_t v19 = sub_1BE06FD20();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  sub_1BE070020();
  uint64_t v24 = sub_1BE06FCD0();
  uint64_t v26 = v25;
  char v28 = v27;
  uint64_t v30 = v29;
  swift_release();
  v28 &= 1u;
  sub_1BDF8587C(v19, v21, v23);
  swift_bridgeObjectRelease();
  *(void *)a1 = v34;
  *(void *)(a1 + 8) = v33;
  *(unsigned char *)(a1 + 16) = v32;
  *(void *)(a1 + 24) = v35;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v24;
  *(void *)(a1 + 56) = v26;
  *(unsigned char *)(a1 + 64) = v28;
  *(void *)(a1 + 72) = v30;
  sub_1BDF8555C(v34, v33, v32);
  swift_bridgeObjectRetain();
  sub_1BDF8555C(v24, v26, v28);
  swift_bridgeObjectRetain();
  sub_1BDF8587C(v24, v26, v28);
  swift_bridgeObjectRelease();
  sub_1BDF8587C(v34, v33, v32);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDFD540C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3818);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  char v11 = (char *)&v17 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v17 - v12;
  *(void *)uint64_t v13 = sub_1BE06F7D0();
  *((void *)v13 + 1) = 0x4008000000000000;
  v13[16] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3820);
  sub_1BDFD55E0();
  *(void *)char v11 = sub_1BE06F7D0();
  *((void *)v11 + 1) = 0x4008000000000000;
  unsigned char v11[16] = 0;
  sub_1BDFD5780();
  sub_1BDF86808((uint64_t)v13, (uint64_t)v8, &qword_1EA0E3818);
  sub_1BDF86808((uint64_t)v11, (uint64_t)v5, &qword_1EA0E3818);
  sub_1BDF86808((uint64_t)v8, a1, &qword_1EA0E3818);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3828);
  uint64_t v15 = a1 + *(int *)(v14 + 48);
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  sub_1BDF86808((uint64_t)v5, a1 + *(int *)(v14 + 64), &qword_1EA0E3818);
  sub_1BDF8686C((uint64_t)v11, &qword_1EA0E3818);
  sub_1BDF8686C((uint64_t)v13, &qword_1EA0E3818);
  sub_1BDF8686C((uint64_t)v5, &qword_1EA0E3818);
  return sub_1BDF8686C((uint64_t)v8, &qword_1EA0E3818);
}

uint64_t sub_1BDFD55E0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E37E0);
  MEMORY[0x1C1888A00](&v5);
  unint64_t v1 = v5;
  MEMORY[0x1C1888A00](&v5, v0);
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v2 >= 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = v2 + 1;
  }
  sub_1BDFD6220(v3 >> 1, v1);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3830);
  sub_1BDF86964(&qword_1EA0E3838, &qword_1EA0E3830);
  sub_1BDFD5C4C();
  sub_1BDFD5CA4();
  return sub_1BE070260();
}

uint64_t sub_1BDFD5780()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E37E0);
  MEMORY[0x1C1888A00](&v12);
  unint64_t v1 = v12;
  MEMORY[0x1C1888A00](&v12, v0);
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 >= 0) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = v2 + 1;
  }
  uint64_t v5 = v4 >> 1;
  unint64_t v6 = v1 >> 62;
  if (!(v1 >> 62))
  {
    uint64_t v7 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7 >= v5) {
      goto LABEL_8;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1BE070CB0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v7 < v5)
  {
LABEL_31:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1BE070CB0();
  uint64_t result = swift_bridgeObjectRelease();
  if (v11 < v5)
  {
    __break(1u);
    goto LABEL_26;
  }
LABEL_8:
  if (v2 < -1)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1BE070CB0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7) {
    goto LABEL_28;
  }
  if (v7 < 0)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if ((v1 & 0xC000000000000001) != 0 && v5 != v7)
  {
    if (v5 < v7)
    {
      sub_1BDFD5C0C();
      uint64_t v9 = v5;
      do
      {
        uint64_t v10 = v9 + 1;
        sub_1BE070BA0();
        uint64_t v9 = v10;
      }
      while (v7 != v10);
      goto LABEL_19;
    }
    goto LABEL_30;
  }
LABEL_19:
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1BE070CC0();
    swift_bridgeObjectRelease_n();
  }
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3830);
  sub_1BDF86964(&qword_1EA0E3838, &qword_1EA0E3830);
  sub_1BDFD5C4C();
  sub_1BDFD5CA4();
  return sub_1BE070260();
}

id sub_1BDFD5A78@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

uint64_t sub_1BDFD5A84@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFD4AA8(a1);
}

uint64_t sub_1BDFD5AC0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, 57, 7);
}

uint64_t sub_1BDFD5B18()
{
  return sub_1BE070210();
}

uint64_t sub_1BDFD5B70@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFD4E1C(a1);
}

uint64_t sub_1BDFD5B78(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFD5BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E37D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BDFD5C0C()
{
  unint64_t result = qword_1EA0E15B0;
  if (!qword_1EA0E15B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA0E15B0);
  }
  return result;
}

unint64_t sub_1BDFD5C4C()
{
  unint64_t result = qword_1EA0E3840;
  if (!qword_1EA0E3840)
  {
    sub_1BDFD5C0C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3840);
  }
  return result;
}

unint64_t sub_1BDFD5CA4()
{
  unint64_t result = qword_1EA0E3848;
  if (!qword_1EA0E3848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3848);
  }
  return result;
}

id sub_1BDFD5CF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1BE06FBD0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1568);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BE07ABD0;
  id result = objc_msgSend(a1, sel_emailAddress);
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = sub_1BE070500();
    uint64_t v13 = v12;

    *(void *)(v8 + 32) = v11;
    *(void *)(v8 + 40) = v13;
    sub_1BE070320();
    sub_1BE06F390();
    uint64_t v14 = v64;
    LODWORD(v11) = v65;
    uint64_t v15 = v66;
    int v16 = v67;
    uint64_t v48 = v68;
    uint64_t v47 = v69;
    id v17 = objc_msgSend(a1, sel_name);
    uint64_t v52 = v14;
    uint64_t v53 = v8;
    int v51 = v11;
    uint64_t v50 = v15;
    int v49 = v16;
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = sub_1BE070500();
    }
    else
    {
      id v18 = CUIKBundle();
      uint64_t v19 = sub_1BE06ED00();
    }
    uint64_t v21 = v19;
    uint64_t v22 = v20;

    uint64_t v54 = v21;
    uint64_t v55 = v22;
    sub_1BDF859F0();
    uint64_t v23 = sub_1BE06FD30();
    uint64_t v25 = v24;
    char v27 = v26 & 1;
    sub_1BE06FC00();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F3E0F0], v4);
    sub_1BE06FBF0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t v28 = sub_1BE06FD10();
    uint64_t v30 = v29;
    char v32 = v31;
    swift_release();
    char v33 = v32 & 1;
    sub_1BDF8587C(v23, v25, v27);
    swift_bridgeObjectRelease();
    sub_1BE070010();
    uint64_t v34 = sub_1BE06FCD0();
    uint64_t v36 = v35;
    LOBYTE(v22) = v37;
    uint64_t v39 = v38;
    swift_release();
    sub_1BDF8587C(v28, v30, v33);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    char v41 = v51;
    char v63 = v51;
    char v42 = v49;
    char v62 = v49;
    char v60 = v22 & 1;
    char v58 = 0;
    char v56 = 1;
    *(_DWORD *)(a2 + 17) = v54;
    *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v54 + 3);
    *(_DWORD *)(a2 + 33) = *(_DWORD *)v61;
    *(_DWORD *)(a2 + 36) = *(_DWORD *)&v61[3];
    int v43 = *(_DWORD *)v59;
    *(_DWORD *)(a2 + 76) = *(_DWORD *)&v59[3];
    *(_DWORD *)(a2 + 73) = v43;
    int v44 = *(_DWORD *)v57;
    *(_DWORD *)(a2 + 108) = *(_DWORD *)&v57[3];
    *(_DWORD *)(a2 + 105) = v44;
    uint64_t v45 = v52;
    *(void *)a2 = v53;
    *(void *)(a2 + 8) = v45;
    *(unsigned char *)(a2 + 16) = v41;
    *(void *)(a2 + 24) = v50;
    *(unsigned char *)(a2 + 32) = v42;
    *(void *)(a2 + 40) = v48;
    *(void *)(a2 + 48) = v47;
    *(void *)(a2 + 56) = v34;
    *(void *)(a2 + 64) = v36;
    *(unsigned char *)(a2 + 72) = v22 & 1;
    *(void *)(a2 + 80) = v39;
    *(void *)(a2 + 88) = KeyPath;
    *(void *)(a2 + 96) = 1;
    *(unsigned char *)(a2 + 104) = 0;
    *(void *)(a2 + 112) = 0;
    *(unsigned char *)(a2 + 120) = 1;
    swift_bridgeObjectRetain();
    sub_1BDF8555C(v34, v36, v22 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BDF8587C(v34, v36, v22 & 1);
    swift_bridgeObjectRelease();
    swift_release();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_1BDFD613C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1BE06F740();
  sub_1BDFD5CF8(v3, (uint64_t)v10);
  *(_OWORD *)&v12[71] = v10[4];
  *(_OWORD *)&v12[87] = v10[5];
  *(_OWORD *)&v12[103] = v11[0];
  *(_OWORD *)&v12[7] = v10[0];
  *(_OWORD *)&v12[23] = v10[1];
  *(_OWORD *)&v12[39] = v10[2];
  *(_OWORD *)&v12[55] = v10[3];
  long long v5 = *(_OWORD *)&v12[96];
  *(_OWORD *)(a1 + 129) = *(_OWORD *)((char *)v11 + 9);
  long long v6 = *(_OWORD *)&v12[80];
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v12[64];
  *(_OWORD *)(a1 + 97) = v6;
  long long v7 = *(_OWORD *)&v12[32];
  *(_OWORD *)(a1 + 65) = *(_OWORD *)&v12[48];
  *(_OWORD *)(a1 + 49) = v7;
  double result = *(double *)&v12[16];
  long long v9 = *(_OWORD *)v12;
  *(_OWORD *)(a1 + 33) = *(_OWORD *)&v12[16];
  *(_OWORD *)(a1 + 17) = v9;
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(_OWORD *)(a1 + 113) = v5;
  return result;
}

uint64_t sub_1BDFD6220(uint64_t result, unint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = a2;
    uint64_t v3 = result;
    unint64_t v4 = a2 >> 62;
    if (!(a2 >> 62))
    {
      uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1BE070CB0();
  double result = swift_bridgeObjectRelease();
LABEL_4:
  if (v5 >= v3) {
    uint64_t v6 = v3;
  }
  else {
    uint64_t v6 = v5;
  }
  if (v5 < 0) {
    uint64_t v6 = v3;
  }
  if (v3) {
    uint64_t v7 = v6;
  }
  else {
    uint64_t v7 = 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1BE070CB0();
    double result = swift_bridgeObjectRelease();
    if (v9 < 0)
    {
LABEL_28:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1BE070CB0();
    double result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 < v7)
  {
    __break(1u);
    goto LABEL_28;
  }
  if ((v2 & 0xC000000000000001) != 0 && v7)
  {
    sub_1BDFD5C0C();
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = v10 + 1;
      sub_1BE070BA0();
      uint64_t v10 = v11;
    }
    while (v7 != v11);
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1BE070CC0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v12;
}

ValueMetadata *type metadata accessor for NameAndAvatarView()
{
  return &type metadata for NameAndAvatarView;
}

unint64_t sub_1BDFD63C8()
{
  unint64_t result = qword_1EA0E3850;
  if (!qword_1EA0E3850)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3858);
    sub_1BDFD643C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3850);
  }
  return result;
}

unint64_t sub_1BDFD643C()
{
  unint64_t result = qword_1EA0E3860;
  if (!qword_1EA0E3860)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E37D8);
    sub_1BDF86964(&qword_1EA0E3868, &qword_1EA0E37D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3860);
  }
  return result;
}

uint64_t sub_1BDFD64DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFD6500()
{
  return sub_1BDF86964(&qword_1EA0E3870, &qword_1EA0E3878);
}

void sub_1BDFD6540(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v54 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1BE06EB50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F25550]), sel_init);
  id v9 = objc_msgSend(v8, sel_primaryAppleAccountSource);
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = objc_msgSend(self, sel_calendarForEntityType_eventStore_, 0, v8);
    id v50 = v10;
    objc_msgSend(v11, sel_setSource_, v10);
    sub_1BDFD8498(a1);
    uint64_t v12 = (void *)sub_1BE070820();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setSharees_, v12);

    swift_getKeyPath();
    id v52 = (id)v2;
    sub_1BDFD9688(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
    sub_1BE06F160();
    swift_release();
    unint64_t v13 = *(void *)(v2 + 48);
    id v52 = *(id *)(v2 + 40);
    unint64_t v53 = v13;
    swift_bridgeObjectRetain();
    sub_1BE06EB10();
    sub_1BDF859F0();
    uint64_t v14 = sub_1BE070A40();
    unint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRelease();
    uint64_t v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0) {
      uint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
    }
    if (!v17)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
    }
    id v18 = (void *)sub_1BE0704C0();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setTitle_, v18);

    swift_getKeyPath();
    id v52 = (id)v2;
    sub_1BE06F160();
    swift_release();
    LODWORD(v18) = *(unsigned __int8 *)(v2 + 64);
    swift_getKeyPath();
    if (v18 == 1)
    {
      id v52 = (id)v2;
      sub_1BE06F160();
      swift_release();
      swift_retain();
      uint64_t v19 = (void *)sub_1BE06FF60();
      swift_release();
      objc_msgSend(v11, sel_setCGColor_, v19);
    }
    else
    {
      id v52 = (id)v2;
      sub_1BE06F160();
      swift_release();
      if (*(void *)(v2 + 104))
      {
        swift_bridgeObjectRetain();
        uint64_t v19 = (void *)sub_1BE0704C0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v19 = 0;
      }
      objc_msgSend(v11, sel_setSymbolicColorName_, v19);
    }

    id v52 = 0;
    unsigned int v30 = objc_msgSend(v8, sel_saveCalendar_commit_error_, v11, 1, &v52);
    id v31 = v52;
    if (v30)
    {
      swift_getKeyPath();
      id v52 = (id)v2;
      id v32 = v31;
      sub_1BE06F160();
      swift_release();
      char v33 = *(void (**)(uint64_t, void))(v2 + 128);
      swift_retain();
      v33(1, 0);
      swift_release();
    }
    else
    {
      id v49 = v8;
      id v34 = v52;
      uint64_t v35 = (void *)sub_1BE06EDB0();

      swift_willThrow();
      if (qword_1EA0E2238 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_1BE06F1C0();
      __swift_project_value_buffer(v36, (uint64_t)qword_1EA0F6B90);
      id v37 = v35;
      id v38 = v35;
      uint64_t v39 = sub_1BE06F1A0();
      os_log_type_t v40 = sub_1BE0708E0();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v48 = (void *)swift_slowAlloc();
        id v52 = v48;
        *(_DWORD *)uint64_t v41 = 136315394;
        uint64_t v51 = sub_1BDFCDF38(0xD000000000000015, 0x80000001BE08D290, (uint64_t *)&v52);
        sub_1BE070A00();
        *(_WORD *)(v41 + 12) = 2080;
        uint64_t v51 = (uint64_t)v35;
        id v42 = v35;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E4EA0);
        uint64_t v43 = sub_1BE070550();
        uint64_t v51 = sub_1BDFCDF38(v43, v44, (uint64_t *)&v52);
        sub_1BE070A00();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BDF08000, v39, v40, "%s unable to save calendar with error: %s", (uint8_t *)v41, 0x16u);
        uint64_t v45 = v48;
        swift_arrayDestroy();
        MEMORY[0x1C188ACF0](v45, -1, -1);
        MEMORY[0x1C188ACF0](v41, -1, -1);
      }
      else
      {
      }
      swift_getKeyPath();
      id v52 = (id)v2;
      sub_1BE06F160();
      swift_release();
      uint64_t v46 = *(void (**)(void *, uint64_t))(v2 + 128);
      id v47 = v35;
      swift_retain();
      v46(v35, 1);

      swift_release();
    }
  }
  else
  {
    if (qword_1EA0E2238 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1BE06F1C0();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EA0F6B90);
    uint64_t v21 = sub_1BE06F1A0();
    os_log_type_t v22 = sub_1BE0708E0();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      id v52 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v51 = sub_1BDFCDF38(0xD000000000000015, 0x80000001BE08D290, (uint64_t *)&v52);
      sub_1BE070A00();
      _os_log_impl(&dword_1BDF08000, v21, v22, "%s Calendar data class is disabled in iCloud settings.)", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C188ACF0](v24, -1, -1);
      MEMORY[0x1C188ACF0](v23, -1, -1);
    }

    swift_getKeyPath();
    id v52 = (id)v2;
    sub_1BDFD9688(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
    sub_1BE06F160();
    swift_release();
    uint64_t v25 = *(void (**)(void *, uint64_t))(v2 + 128);
    id v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    swift_retain();
    sub_1BE070B70();
    sub_1BE0705D0();
    sub_1BE0705D0();
    id v26 = v52;
    unint64_t v27 = v53;
    sub_1BDFD9460();
    uint64_t v28 = (void *)swift_allocError();
    void *v29 = v26;
    v29[1] = v27;
    v25(v28, 1);

    swift_release();
  }
}

void *sub_1BDFD6E78()
{
  swift_getKeyPath();
  sub_1BDFD9688(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 120);
  id v2 = v1;
  return v1;
}

uint64_t sub_1BDFD6F20()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1BDFD6FC4()
{
  swift_getKeyPath();
  sub_1BDFD9688(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDFD7074@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  uint64_t v10 = v1;
  sub_1BDFD9688(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  char v3 = *(unsigned char *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 72);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v7 = *(void *)(v1 + 88);
  uint64_t v6 = *(void *)(v10 + 96);
  uint64_t v8 = *(void *)(v10 + 104);
  *(unsigned char *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDFD7148()
{
  swift_getKeyPath();
  sub_1BDFD9688(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 128);
  swift_retain();
  return v1;
}

uint64_t sub_1BDFD71F8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDFD729C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDFD72D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDFD7314(_OWORD *a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  a1[4] = *(_OWORD *)a2;
  a1[5] = v2;
  a1[6] = *(_OWORD *)(a2 + 32);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)(a2 + 8);
  *(_OWORD *)&v4[16] = *(_OWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)v4;
  long long v7 = *(_OWORD *)&v4[8];
  sub_1BDFD93D0((uint64_t)&v4[24], (uint64_t)v6);
  sub_1BDFCE8E4((uint64_t)&v8);
  sub_1BDFCE910((uint64_t)&v7);
  sub_1BDFCE910((uint64_t)v6);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDFD73C8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 112) = a2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

void sub_1BDFD7404(uint64_t a1, void *a2)
{
  long long v2 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = a2;
  id v3 = a2;
}

uint64_t sub_1BDFD7438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = a3;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BDFD7474()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E38B8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v48 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v4 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v4 - 8);
  v0[2] = MEMORY[0x1E4FBC860];
  sub_1BE070450();
  id v5 = CUIKBundle();
  sub_1BE06EF70();
  uint64_t v6 = sub_1BE070530();
  uint64_t v8 = v7;
  v0[3] = v6;
  v0[4] = v7;
  v0[14] = 0;
  v0[15] = 0;
  v0[16] = nullsub_1;
  v0[17] = 0;
  sub_1BE06F170();
  v0[5] = v6;
  v0[6] = v8;
  id v49 = v0;
  id v9 = self;
  swift_bridgeObjectRetain();
  id v50 = v9;
  id v10 = objc_msgSend(v9, sel_defaultCalendarColorNames);
  if (!v10) {
    goto LABEL_32;
  }
  id v11 = v10;
  uint64_t v12 = sub_1BE070710();

  uint64_t v13 = sub_1BE008BF8(v12);
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_32;
  }
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    id v51 = self;
    swift_bridgeObjectRetain();
    uint64_t v47 = v13;
    unint64_t v15 = (uint64_t *)(v13 + 40);
    unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      uint64_t v18 = *(v15 - 1);
      uint64_t v17 = *v15;
      swift_bridgeObjectRetain();
      uint64_t v19 = (void *)sub_1BE0704C0();
      id v20 = objc_msgSend(v51, sel_displayColorForSymbolicName_, v19, v47);

      if (v20)
      {
        id v21 = v20;
        uint64_t v22 = MEMORY[0x1C1888840]();
        uint64_t v23 = (void *)sub_1BE0704C0();
        id v24 = objc_msgSend(v50, sel_localizedColorNameForColorName_, v23);

        if (!v24)
        {
          __break(1u);
          goto LABEL_32;
        }
        uint64_t v25 = sub_1BE070500();
        uint64_t v27 = v26;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v16 = sub_1BE055034(0, v16[2] + 1, 1, v16);
        }
        unint64_t v29 = v16[2];
        unint64_t v28 = v16[3];
        if (v29 >= v28 >> 1) {
          unint64_t v16 = sub_1BE055034((void *)(v28 > 1), v29 + 1, 1, v16);
        }
        v16[2] = v29 + 1;
        unsigned int v30 = &v16[5 * v29];
        v30[4] = v22;
        v30[5] = v25;
        v30[6] = v27;
        v30[7] = v18;
        v30[8] = v17;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v15 += 2;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
  }
  unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
LABEL_16:
  swift_bridgeObjectRelease();
  _OWORD v49[7] = v16;
  uint64_t v31 = v16[2];
  if (v31)
  {
    swift_bridgeObjectRetain_n();
    id v32 = v16 + 8;
    do
    {
      uint64_t v33 = *v32;
      if (*v32)
      {
        uint64_t v34 = *(v32 - 4);
        uint64_t v35 = *(v32 - 3);
        uint64_t v36 = *(v32 - 2);
        uint64_t v37 = *(v32 - 1);
        if (sub_1BE070560() == 0x6E65657267 && v38 == 0xE500000000000000)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_30;
        }
        char v40 = sub_1BE070EF0();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v40)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_30;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
      }
      v32 += 5;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease_n();
    uint64_t v41 = (void *)v49[7];
    if (!v41[2]) {
      goto LABEL_32;
    }
    uint64_t v34 = v41[4];
    uint64_t v35 = v41[5];
    uint64_t v36 = v41[6];
    uint64_t v37 = v41[7];
    uint64_t v33 = v41[8];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
LABEL_30:
    id v42 = v49;
    *((unsigned char *)v49 + 64) = 0;
    v42[9] = v34;
    v42[10] = v35;
    v42[11] = v36;
    v42[12] = v37;
    v42[13] = v33;
    uint64_t v43 = sub_1BE070800();
    uint64_t v44 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v48, 1, 1, v43);
    uint64_t v45 = (void *)swift_allocObject();
    v45[2] = 0;
    v45[3] = 0;
    void v45[4] = v42;
    swift_retain();
    sub_1BDFD8234(v44, (uint64_t)&unk_1EA0E38C8, (uint64_t)v45);
    swift_release();
    return (uint64_t)v42;
  }
  else
  {
LABEL_32:
    uint64_t result = sub_1BE070C90();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDFD7AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1BDFD9AF4;
  unsigned char v6[16] = a4;
  return MEMORY[0x1F4188298](sub_1BDFD7B78, 0, 0);
}

uint64_t sub_1BDFD7B58()
{
  *(void *)(v1 + 128) = v0;
  return MEMORY[0x1F4188298](sub_1BDFD7B78, 0, 0);
}

uint64_t sub_1BDFD7B78()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F61858]), sel_init);
  v0[17] = v1;
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1BDFD7C94;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1BDFD83D8;
  v0[13] = &block_descriptor;
  v0[14] = v2;
  objc_msgSend(v1, sel_startRequestWithCompletionHandler_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1BDFD7C94()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_1BDFD7FB8;
  }
  else {
    uint64_t v2 = sub_1BDFD7DA4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1BDFD7DA4()
{
  uint64_t v2 = *(void **)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  *(void *)(v0 + 80) = v1;
  sub_1BDFD9688(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F150();

  swift_release();
  swift_task_dealloc();
  if (sub_1BDFC3CB0())
  {
    uint64_t v4 = *(void *)(v0 + 128);
    id v10 = *(void **)(v0 + 136);
    id v5 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    swift_getKeyPath();
    *(void *)(v0 + 80) = v4;
    sub_1BE06F160();
    swift_release();
    id v6 = objc_msgSend(v5, sel_initWithFamilyCircle_, *(void *)(v4 + 120));
    swift_getKeyPath();
    uint64_t v7 = swift_task_alloc();
    *(void *)(v7 + 16) = v4;
    *(void *)(v7 + 24) = v6;
    *(void *)(v0 + 80) = v4;
    sub_1BE06F150();
    swift_unknownObjectRelease();
    swift_release();

    swift_task_dealloc();
  }
  else
  {
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1BDFD7FB8()
{
  uint64_t v18 = v0;
  swift_willThrow();
  if (qword_1EA0E2238 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 144);
  uint64_t v2 = sub_1BE06F1C0();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EA0F6B90);
  id v3 = v1;
  id v4 = v1;
  id v5 = sub_1BE06F1A0();
  os_log_type_t v6 = sub_1BE0708E0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void **)(v0 + 144);
  if (v7)
  {
    unint64_t v16 = *(void **)(v0 + 136);
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    v17[0] = v10;
    *(_DWORD *)uint64_t v9 = 136315394;
    *(void *)(v0 + 80) = sub_1BDFCDF38(0xD000000000000012, 0x80000001BE08D3E0, v17);
    sub_1BE070A00();
    *(_WORD *)(v9 + 12) = 2080;
    *(void *)(v0 + 80) = v8;
    id v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E4EA0);
    uint64_t v12 = sub_1BE070550();
    *(void *)(v0 + 80) = sub_1BDFCDF38(v12, v13, v17);
    sub_1BE070A00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BDF08000, v5, v6, "%s unable to request family circle with error: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C188ACF0](v10, -1, -1);
    MEMORY[0x1C188ACF0](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1BDFD8234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1BE070800();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BE0707F0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1BDFD986C(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BE0707B0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1BDFD83D8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E4EA0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return MEMORY[0x1F4188208](v3, v5);
  }
  else
  {
    if (a2)
    {
      **(void **)(*(void *)(v3 + 64) + 40) = a2;
      id v8 = a2;
      a1 = v3;
    }
    else
    {
      __break(1u);
    }
    return MEMORY[0x1F4188200](a1);
  }
}

uint64_t sub_1BDFD8498(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1BE070AF0()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x1E4FBC870];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v30 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E38B0);
  uint64_t v3 = sub_1BE070B60();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BE070AE0();
  sub_1BDF9D430();
  sub_1BDFD9688(&qword_1EA0E3040, (void (*)(uint64_t))sub_1BDF9D430);
  uint64_t result = sub_1BE070850();
  uint64_t v1 = v34;
  uint64_t v30 = v35;
  uint64_t v5 = v36;
  uint64_t v6 = v37;
  unint64_t v7 = v38;
LABEL_11:
  int64_t v29 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v11 = v3 + 56;
  while (v1 < 0)
  {
    uint64_t v16 = sub_1BE070B10();
    if (!v16) {
      goto LABEL_45;
    }
    *(void *)&long long v31 = v16;
    sub_1BDF9D430();
    swift_dynamicCast();
LABEL_36:
    sub_1BDF9D430();
    swift_dynamicCast();
    uint64_t result = sub_1BE070B20();
    uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = *(void *)(v3 + 48) + 40 * v12;
    *(_OWORD *)uint64_t v13 = v31;
    *(_OWORD *)(v13 + 16) = v32;
    *(void *)(v13 + 32) = v33;
    ++*(void *)(v3 + 16);
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    id v21 = *(id *)(*(void *)(v1 + 48) + 8 * v15);
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v29) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v30 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v29) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v30 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v29) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v30 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v29) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v30 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v29) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v30 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v29 != v20)
              {
                unint64_t v18 = *(void *)(v30 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_1BDFD1298();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1BDFD88C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13CalendarUIKit29CreateFamilyCalendarViewModel___observationRegistrar;
  uint64_t v2 = sub_1BE06F180();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1BDFD8988()
{
  sub_1BDFD88C4();

  return swift_deallocClassInstance();
}

uint64_t sub_1BDFD89E0()
{
  return type metadata accessor for CreateFamilyCalendarViewModel();
}

uint64_t type metadata accessor for CreateFamilyCalendarViewModel()
{
  uint64_t result = qword_1EA0E3888;
  if (!qword_1EA0E3888) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BDFD8A34()
{
  uint64_t result = sub_1BE06F180();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for CreateFamilyCalendarViewModel.CalendarColor()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CreateFamilyCalendarViewModel.CalendarColor(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CreateFamilyCalendarViewModel.CalendarColor(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CreateFamilyCalendarViewModel.CalendarColor(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateFamilyCalendarViewModel.CalendarColor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateFamilyCalendarViewModel.CalendarColor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateFamilyCalendarViewModel.CalendarColor()
{
  return &type metadata for CreateFamilyCalendarViewModel.CalendarColor;
}

uint64_t destroy for CreateFamilyCalendarViewModel.ColorWithName()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CreateFamilyCalendarViewModel.ColorWithName(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CreateFamilyCalendarViewModel.ColorWithName(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CreateFamilyCalendarViewModel.ColorWithName(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateFamilyCalendarViewModel.ColorWithName(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateFamilyCalendarViewModel.ColorWithName(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateFamilyCalendarViewModel.ColorWithName()
{
  return &type metadata for CreateFamilyCalendarViewModel.ColorWithName;
}

unsigned char *storeEnumTagSinglePayload for CreateFamilyCalendarViewModel.FamilyCalendarScreens(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1BDFD9008);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateFamilyCalendarViewModel.FamilyCalendarScreens()
{
  return &type metadata for CreateFamilyCalendarViewModel.FamilyCalendarScreens;
}

uint64_t sub_1BDFD9040()
{
  sub_1BE070FB0();
  swift_retain();
  sub_1BE06FFB0();
  swift_release();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 32))
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BE070FD0();
  }
  return sub_1BE070FF0();
}

uint64_t sub_1BDFD910C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = *(void *)(v1 + 8);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDFD9118(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_1BDFD96D0(v5, v7) & 1;
}

uint64_t sub_1BDFD9168()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_retain();
  sub_1BE06FFB0();
  swift_release();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  if (!v1) {
    return sub_1BE070FD0();
  }
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BE070590();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDFD9248()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1BE070FB0();
  swift_retain();
  sub_1BE06FFB0();
  swift_release();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  sub_1BE070FD0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  return sub_1BE070FF0();
}

unint64_t sub_1BDFD9324()
{
  unint64_t result = qword_1EA0E3898;
  if (!qword_1EA0E3898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3898);
  }
  return result;
}

unint64_t sub_1BDFD937C()
{
  unint64_t result = qword_1EA0E38A0;
  if (!qword_1EA0E38A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E38A0);
  }
  return result;
}

uint64_t sub_1BDFD93D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BDFD9460()
{
  unint64_t result = qword_1EA0E38A8;
  if (!qword_1EA0E38A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E38A8);
  }
  return result;
}

uint64_t sub_1BDFD94B4(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1BDFD9590;
  return v6(a1);
}

uint64_t sub_1BDFD9590()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1BDFD9688(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDFD96D0(void *a1, void *a2)
{
  if ((sub_1BE06FF80() & 1) == 0) {
    return 0;
  }
  BOOL v4 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v4 || (char v5 = sub_1BE070EF0(), result = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = a1[4];
    uint64_t v8 = a2[4];
    if (v7)
    {
      if (v8 && (a1[3] == a2[3] && v7 == v8 || (sub_1BE070EF0() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v8)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BDFD9778()
{
  swift_unknownObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1BDFD97B8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1BDF9BB60;
  return sub_1BDFD7AAC(a1, v4, v5, v6);
}

uint64_t sub_1BDFD986C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E38B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDFD98CC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1BDFD9904(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1BDF9BB60;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA0E38D0 + dword_1EA0E38D0);
  return v6(a1, v4);
}

void sub_1BDFD99BC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + 120);
  *(void *)(v1 + 120) = v2;
  id v4 = v2;
}

uint64_t sub_1BDFD99F4()
{
  *(void *)(*(void *)(v0 + 16) + 112) = *(void *)(v0 + 24);
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

void *initializeBufferWithCopyOfBuffer for CreateFamilyCalendarViewModel.CalendarError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for CreateFamilyCalendarViewModel.CalendarError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for CreateFamilyCalendarViewModel.CalendarError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CreateFamilyCalendarViewModel.CalendarError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CreateFamilyCalendarViewModel.CalendarError()
{
  return &type metadata for CreateFamilyCalendarViewModel.CalendarError;
}

uint64_t dispatch thunk of EventParticipantModel.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventParticipantModel.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventParticipantModel.emailAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventParticipantModel.phoneNumber.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventParticipantModel.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EventParticipantModel.isCurrentUser.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EventParticipantModel.contactID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.id.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.id.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.name.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.name.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.emailAddress.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.emailAddress.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.phoneNumber.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.phoneNumber.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.url.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.url.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.isCurrentUser.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.isCurrentUser.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.contactID.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of MutableEventParticipantModel.contactID.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of EventAttendeeModel.status.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventAttendeeModel.role.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventAttendeeModel.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventAttendeeModel.comment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventOrganizerModel.scheduleAgent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_1BDFD9D00()
{
  qword_1EA0E38E8 = 0x4069000000000000;
}

void sub_1BDFD9D10(__n128 a1, __n128 a2, double a3, double a4)
{
  double v5 = a2.n128_f64[0];
  double v6 = a1.n128_f64[0];
  if (a4 > a3) {
    double v7 = a4;
  }
  else {
    double v7 = a3;
  }
  v20[1] = MEMORY[0x1C1889FC0](a1, a2, v7 * 3.5, v7 * 3.5);
  v20[2] = v8;
  *(double *)&v20[3] = v9;
  *(double *)&v20[4] = v10;
  BOOL v11 = v9 < 0.0 || v9 > 180.0;
  if (v11 || (v10 >= 0.0 ? (BOOL v12 = v10 > 360.0) : (BOOL v12 = 1), v12))
  {
    if (qword_1EA0E2230 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1BE06F1C0();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EA0F6B78);
    unint64_t v14 = sub_1BE06F1A0();
    os_log_type_t v15 = sub_1BE0708E0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v20[0] = v17;
      *(_DWORD *)uint64_t v16 = 136315650;
      swift_beginAccess();
      type metadata accessor for MKCoordinateSpan(0);
      uint64_t v18 = sub_1BE070550();
      sub_1BDFCDF38(v18, v19, v20);
      sub_1BE070A00();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2048;
      sub_1BE070A00();
      *(_WORD *)(v16 + 22) = 2048;
      sub_1BE070A00();
      _os_log_impl(&dword_1BDF08000, v14, v15, "Coordinate span [%s] created with radius [%f] is invalid, falling back to minimum radius [%f]", (uint8_t *)v16, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1C188ACF0](v17, -1, -1);
      MEMORY[0x1C188ACF0](v16, -1, -1);
    }

    MEMORY[0x1C1889FC0](v6, v5, a4 * 3.5, a4 * 3.5);
  }
}

uint64_t sub_1BDFD9F70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E38F0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  double v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E38F8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  BOOL v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v23 = *v1;
  uint64_t v24 = *((void *)v1 + 2);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3900);
  MEMORY[0x1C1888A00](&v25, v12);
  uint64_t v13 = v25;
  if (v25)
  {
    uint64_t v22 = a1;
    uint64_t v14 = *((void *)v1 + 3);
    char v15 = *((unsigned char *)v2 + 32);
    sub_1BDF8A504(v14, v15);
    char v16 = sub_1BDFCDD28(v14, v15);
    uint64_t v17 = sub_1BDF8A570(v14, v15);
    if (v16)
    {

      uint64_t v19 = 1;
      a1 = v22;
    }
    else
    {
      uint64_t v21 = (uint64_t)&v21;
      MEMORY[0x1F4188790](v17);
      *(&v21 - 2) = (uint64_t)v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3908);
      sub_1BDF86964(&qword_1EA0E3910, &qword_1EA0E3908);
      sub_1BE0702A0();

      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v7, v4);
      uint64_t v18 = &v11[*(int *)(v8 + 36)];
      v18[32] = 0;
      *(_OWORD *)uint64_t v18 = 0u;
      *((_OWORD *)v18 + 1) = 0u;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      a1 = v22;
      sub_1BDFDA6D4((uint64_t)v11, v22);
      uint64_t v19 = 0;
    }
  }
  else
  {
    uint64_t v19 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, v19, 1, v8);
}

double sub_1BDFDA248@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1BE070300();
  uint64_t v6 = v5;
  uint64_t v7 = qword_1EA0E2218;
  id v8 = a1;
  if (v7 != -1) {
    swift_once();
  }
  sub_1BE070320();
  sub_1BE06F390();
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(void *)(a2 + 16) = v8;
  *(void *)(a2 + 24) = v10;
  *(unsigned char *)(a2 + 32) = v11;
  *(void *)(a2 + 40) = v12;
  *(unsigned char *)(a2 + 48) = v13;
  double result = *(double *)&v14;
  *(_OWORD *)(a2 + 56) = v14;
  return result;
}

uint64_t CLLocationCoordinate2D.id.getter()
{
  return 0;
}

uint64_t sub_1BDFDA3AC@<X0>(void *a1@<X8>)
{
  sub_1BE070810();
  sub_1BE0705D0();
  uint64_t result = sub_1BE070810();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t destroy for MapView(uint64_t a1)
{
  swift_release();
  swift_release();

  uint64_t v2 = *(void *)(a1 + 24);
  char v3 = *(unsigned char *)(a1 + 32);

  return sub_1BDF8A570(v2, v3);
}

uint64_t initializeWithCopy for MapView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  char v6 = *(unsigned char *)(a2 + 32);
  swift_retain();
  swift_retain();
  id v7 = v5;
  sub_1BDF8A504(v4, v6);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v6;
  return a1;
}

uint64_t assignWithCopy for MapView(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = v2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = (void *)v2[2];
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  uint64_t v7 = v2[3];
  LOBYTE(v2) = *((unsigned char *)v2 + 32);
  sub_1BDF8A504(v7, (char)v2);
  uint64_t v8 = *(void *)(a1 + 24);
  char v9 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = (_BYTE)v2;
  sub_1BDF8A570(v8, v9);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for MapView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v5;
  sub_1BDF8A570(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for MapView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MapView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MapView()
{
  return &type metadata for MapView;
}

uint64_t sub_1BDFDA6B0()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1BDFDA6CC@<D0>(uint64_t a1@<X8>)
{
  return sub_1BDFDA248(*(void **)(v1 + 16), a1);
}

uint64_t sub_1BDFDA6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E38F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BDFDA740()
{
  unint64_t result = qword_1EA0E3918;
  if (!qword_1EA0E3918)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3920);
    sub_1BDFDA7B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3918);
  }
  return result;
}

unint64_t sub_1BDFDA7B4()
{
  unint64_t result = qword_1EA0E3928;
  if (!qword_1EA0E3928)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E38F8);
    sub_1BDFDA854();
    sub_1BDF86964(&qword_1EA0E3938, &qword_1EA0E3940);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3928);
  }
  return result;
}

unint64_t sub_1BDFDA854()
{
  unint64_t result = qword_1EA0E3930;
  if (!qword_1EA0E3930)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E38F0);
    sub_1BDF86964(&qword_1EA0E3910, &qword_1EA0E3908);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3930);
  }
  return result;
}

uint64_t static CUIKSwiftUICrossPlatform.urlFor(date:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_1BE0705D0();
  sub_1BE06EE70();
  sub_1BE070810();
  sub_1BE06EE00();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1BE06EE10();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  __break(1u);
  return result;
}

uint64_t static CUIKSwiftUICrossPlatform.calendar(useSystemTimeZone:)(char a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1BE06F140();
  MEMORY[0x1F4188790](v5 - 8);
  sub_1BE06F0B0();
  if (a1) {
    goto LABEL_4;
  }
  CUIKOneIndexedWeekStart();
  sub_1BE06EFF0();
  uint64_t result = CalCopyTimeZone();
  if (result)
  {
    char v7 = (void *)result;
    sub_1BE06F130();

    sub_1BE06F0D0();
LABEL_4:
    sub_1BE06EF70();
    uint64_t v8 = sub_1BE06EFC0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 0, 1, v8);
    return sub_1BE06F0A0();
  }
  __break(1u);
  return result;
}

id static CUIKSwiftUICrossPlatform.overlayCalendarID()()
{
  id result = objc_msgSend(self, sel_sharedPreferences);
  if (result)
  {
    uint64_t v1 = result;
    id v2 = objc_msgSend(result, sel_overlayCalendarID);

    if (v2)
    {
      uint64_t v3 = sub_1BE070500();
      uint64_t v5 = v4;

      if (v3) {
        BOOL v6 = 0;
      }
      else {
        BOOL v6 = v5 == 0xE000000000000000;
      }
      if (!v6 && (sub_1BE070EF0() & 1) == 0) {
        return (id)v3;
      }
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for CUIKSwiftUICrossPlatform()
{
  return &type metadata for CUIKSwiftUICrossPlatform;
}

uint64_t sub_1BDFDAC74()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  MEMORY[0x1F4188790](v0 - 8);
  id v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1BE06F140();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1BE06F100();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v27 - v11;
  sub_1BE06F0B0();
  CUIKOneIndexedWeekStart();
  sub_1BE06EFF0();
  uint64_t result = CalCopyTimeZone();
  if (result)
  {
    long long v14 = (void *)result;
    sub_1BE06F130();

    sub_1BE06F0D0();
    sub_1BE06EF70();
    uint64_t v15 = sub_1BE06EFC0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v2, 0, 1, v15);
    sub_1BE06F0A0();
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v10, v6);
    uint64_t v16 = sub_1BE06F030();
    uint64_t v17 = CUIKOneIndexedWeekStart();
    unint64_t v18 = v17 - 1;
    if (__OFSUB__(v17, 1))
    {
      __break(1u);
    }
    else if ((v18 & 0x8000000000000000) == 0)
    {
      if (*(void *)(v16 + 16) >= v18)
      {
        uint64_t v5 = (char *)(v16 + 32);
        sub_1BE070F30();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain_n();
        uint64_t v19 = swift_dynamicCastClass();
        if (!v19)
        {
          swift_bridgeObjectRelease();
          uint64_t v19 = MEMORY[0x1E4FBC860];
        }
        uint64_t v20 = *(void *)(v19 + 16);
        swift_release();
        if (v20 == v18)
        {
          uint64_t v21 = swift_dynamicCastClass();
          if (!v21)
          {
            swift_bridgeObjectRelease();
            uint64_t v21 = MEMORY[0x1E4FBC860];
          }
LABEL_10:
          swift_bridgeObjectRelease();
          unint64_t v22 = *(void *)(v16 + 16);
          if (v22 < v18)
          {
            __break(1u);
          }
          else
          {
            BOOL v27 = v5;
            swift_unknownObjectRetain_n();
            uint64_t v23 = swift_dynamicCastClass();
            if (!v23)
            {
              swift_bridgeObjectRelease();
              uint64_t v23 = MEMORY[0x1E4FBC860];
            }
            uint64_t v24 = *(void *)(v23 + 16);
            swift_release();
            if (v24 == v22 - v18)
            {
              uint64_t v25 = swift_dynamicCastClass();
              if (!v25)
              {
                swift_bridgeObjectRelease();
                uint64_t v25 = MEMORY[0x1E4FBC860];
              }
              goto LABEL_16;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v25 = sub_1BDFD0DB0(v16, (uint64_t)v27, v18, (2 * v22) | 1);
LABEL_16:
          swift_bridgeObjectRelease();
          uint64_t v28 = v25;
          sub_1BE060A7C(v21);
          uint64_t v26 = v28;
          (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
          return v26;
        }
LABEL_20:
        swift_bridgeObjectRelease();
        uint64_t v21 = sub_1BDFD0DB0(v16, (uint64_t)v5, 0, (2 * v18) | 1);
        goto LABEL_10;
      }
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t EventIntegrationModelObject.isCompleted.getter()
{
  return *v0;
}

uint64_t EventIntegrationModelObject.isCompleted.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*EventIntegrationModelObject.isCompleted.modify())()
{
  return nullsub_1;
}

uint64_t EventIntegrationModelObject.reminderListTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventIntegrationModelObject.reminderListTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*EventIntegrationModelObject.reminderListTitle.modify())()
{
  return nullsub_1;
}

void EventIntegrationModelObject.color.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  unint64_t v5 = v1[6];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  sub_1BDFDB0F8(v2, v3, v4, v5);
}

void sub_1BDFDB0F8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1BDF840AC(a3, a4);
  }
}

__n128 EventIntegrationModelObject.color.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  sub_1BDFDB194(*(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
  __n128 result = v5;
  *(__n128 *)(v1 + 24) = v5;
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v3;
  return result;
}

void sub_1BDFDB194(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1BDF841A4(a3, a4);
  }
}

uint64_t (*EventIntegrationModelObject.color.modify())()
{
  return nullsub_1;
}

__n128 EventIntegrationModelObject.init(isCompleted:reminderListTitle:color:)@<Q0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(unsigned char *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  __n128 result = *(__n128 *)a4;
  long long v6 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a5 + 24) = *(_OWORD *)a4;
  *(_OWORD *)(a5 + 40) = v6;
  return result;
}

void EventIntegrationModelObject.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  void (*v14)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void v19[4];
  uint64_t vars8;

  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5) & 1;
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  uint64_t v11 = v10;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  long long v14 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v13 + 24);
  swift_bridgeObjectRetain();
  v14(v19, v12, v13);
  uint64_t v15 = v19[0];
  uint64_t v16 = v19[1];
  uint64_t v17 = v19[2];
  unint64_t v18 = v19[3];
  swift_bridgeObjectRetain();
  sub_1BDFDB0F8(v15, v16, v17, v18);
  swift_bridgeObjectRelease();
  *(unsigned char *)a2 = v6;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v17;
  *(void *)(a2 + 48) = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();

  sub_1BDFDB194(v15, v16, v17, v18);
}

void EventIntegrationModelObject.hash(into:)()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  unint64_t v5 = v0[6];
  sub_1BE070FD0();
  if (!v1)
  {
    sub_1BE070FD0();
    if (v3) {
      goto LABEL_3;
    }
LABEL_7:
    sub_1BE070FD0();
    return;
  }
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_7;
  }
LABEL_3:
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BDF840AC(v4, v5);
  sub_1BE070590();
  sub_1BE06EE60();

  sub_1BDFDB194(v2, v3, v4, v5);
}

uint64_t EventIntegrationModelObject.hashValue.getter()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFDB4E0()
{
  return *v0;
}

uint64_t sub_1BDFDB4E8()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BDFDB518(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  unint64_t v5 = v1[6];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  sub_1BDFDB0F8(v2, v3, v4, v5);
}

uint64_t sub_1BDFDB52C()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFDB590()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFDB5F0()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 != 1) {
    unint64_t v1 = 0x726F6C6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C706D6F437369;
  }
}

uint64_t sub_1BDFDB654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFDC508(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDFDB67C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1BDFDB688(uint64_t a1)
{
  unint64_t v2 = sub_1BDFDBE04();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFDB6C4(uint64_t a1)
{
  unint64_t v2 = sub_1BDFDBE04();

  return MEMORY[0x1F41862B0](a1, v2);
}

void EventIntegrationModelObject.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3948);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDFDBE04();
  sub_1BE071010();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    unint64_t v20 = 0;
  }
  else
  {
    LOBYTE(v23) = 0;
    char v9 = sub_1BE070DC0();
    LOBYTE(v23) = 1;
    uint64_t v10 = sub_1BE070D50();
    uint64_t v12 = v11;
    uint64_t v22 = v10;
    char v27 = 2;
    sub_1BDFDBE58();
    swift_bridgeObjectRetain();
    sub_1BE070DA0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v23;
    uint64_t v14 = v24;
    uint64_t v15 = v25;
    unint64_t v16 = v26;
    sub_1BDFDB0F8(v23, v24, v25, v26);
    sub_1BDFDB194(0, 0, 0, 0);
    swift_bridgeObjectRetain();
    sub_1BDFDB0F8(v13, v14, v15, v16);
    sub_1BDFDB194(v13, v14, v15, v16);
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v22;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v13;
    *(void *)(a2 + 32) = v14;
    *(void *)(a2 + 40) = v15;
    *(void *)(a2 + 48) = v16;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v17 = v13;
    uint64_t v18 = v14;
    uint64_t v19 = v15;
    unint64_t v20 = v16;
  }
  sub_1BDFDB194(v17, v18, v19, v20);
}

uint64_t EventIntegrationModelObject.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3960);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v20 = v1[2];
  uint64_t v21 = v8;
  uint64_t v9 = v1[3];
  uint64_t v18 = v1[4];
  uint64_t v19 = v9;
  uint64_t v10 = v1[5];
  uint64_t v16 = v1[6];
  uint64_t v17 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDFDBE04();
  sub_1BE071030();
  LOBYTE(v22) = 0;
  sub_1BE070E70();
  if (!v2)
  {
    uint64_t v12 = v16;
    uint64_t v11 = v17;
    uint64_t v14 = v18;
    uint64_t v13 = v19;
    LOBYTE(v22) = 1;
    sub_1BE070E30();
    uint64_t v22 = v13;
    uint64_t v23 = v14;
    uint64_t v24 = v11;
    uint64_t v25 = v12;
    char v26 = 2;
    sub_1BDFDBEAC();
    sub_1BE070E50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1BDFDBB88(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1BDFDBBA0(void *a1)
{
  return EventIntegrationModelObject.encode(to:)(a1);
}

BOOL _s13CalendarUIKit27EventIntegrationModelObjectV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2) {
    return 0;
  }
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  unint64_t v8 = a1[6];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  uint64_t v12 = a2[4];
  uint64_t v11 = a2[5];
  unint64_t v13 = a2[6];
  if (!v4)
  {
    if (v9) {
      return 0;
    }
    goto LABEL_11;
  }
  if (!v9) {
    return 0;
  }
  if (a1[1] == a2[1] && v4 == v9 || (v14 = sub_1BE070EF0(), BOOL result = 0, (v14 & 1) != 0))
  {
LABEL_11:
    if (v7)
    {
      if (v12)
      {
        if (v5 == v10 && v7 == v12 || (sub_1BE070EF0() & 1) != 0)
        {
          sub_1BDFDB0F8(v5, v7, v6, v8);
          sub_1BDFDB0F8(v5, v7, v6, v8);
          sub_1BDFDB0F8(v10, v12, v11, v13);
          char v15 = sub_1BDFE6FD8(v6, v8, v11, v13);
          sub_1BDFDB194(v10, v12, v11, v13);
          swift_bridgeObjectRelease();
          sub_1BDF841A4(v6, v8);
          sub_1BDFDB194(v5, v7, v6, v8);
          return (v15 & 1) != 0;
        }
        swift_bridgeObjectRetain();
        sub_1BDF840AC(v6, v8);
        swift_bridgeObjectRetain();
        sub_1BDF840AC(v6, v8);
        swift_bridgeObjectRelease();
        sub_1BDF841A4(v6, v8);
        uint64_t v16 = v5;
        uint64_t v17 = v7;
        uint64_t v18 = v6;
        unint64_t v19 = v8;
LABEL_22:
        sub_1BDFDB194(v16, v17, v18, v19);
        return 0;
      }
      swift_bridgeObjectRetain();
      sub_1BDF840AC(v6, v8);
      swift_bridgeObjectRetain();
      sub_1BDF840AC(v6, v8);
      swift_bridgeObjectRelease();
      sub_1BDF841A4(v6, v8);
    }
    else if (!v12)
    {
      return 1;
    }
    sub_1BDFDB0F8(v10, v12, v11, v13);
    sub_1BDFDB194(v5, v7, v6, v8);
    uint64_t v16 = v10;
    uint64_t v17 = v12;
    uint64_t v18 = v11;
    unint64_t v19 = v13;
    goto LABEL_22;
  }
  return result;
}

unint64_t sub_1BDFDBE04()
{
  unint64_t result = qword_1EA0E3950;
  if (!qword_1EA0E3950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3950);
  }
  return result;
}

unint64_t sub_1BDFDBE58()
{
  unint64_t result = qword_1EA0E3958;
  if (!qword_1EA0E3958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3958);
  }
  return result;
}

unint64_t sub_1BDFDBEAC()
{
  unint64_t result = qword_1EA0E3968;
  if (!qword_1EA0E3968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3968);
  }
  return result;
}

unint64_t sub_1BDFDBF04()
{
  unint64_t result = qword_1EA0E3970;
  if (!qword_1EA0E3970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3970);
  }
  return result;
}

uint64_t destroy for EventIntegrationModelObject(void *a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = a1[4];
  if (result)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1[5];
    unint64_t v4 = a1[6];
    return sub_1BDF841A4(v3, v4);
  }
  return result;
}

uint64_t initializeWithCopy for EventIntegrationModelObject(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v6 = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    sub_1BDF840AC(v7, v6);
    *(void *)(a1 + 40) = v7;
    *(void *)(a1 + 48) = v6;
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v8;
  }
  return a1;
}

uint64_t assignWithCopy for EventIntegrationModelObject(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 24);
  uint64_t v5 = (_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(a1 + 32))
  {
    if (v6)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(a2 + 40);
      unint64_t v7 = *(void *)(a2 + 48);
      sub_1BDF840AC(v8, v7);
      uint64_t v9 = *(void *)(a1 + 40);
      unint64_t v10 = *(void *)(a1 + 48);
      *(void *)(a1 + 40) = v8;
      *(void *)(a1 + 48) = v7;
      sub_1BDF841A4(v9, v10);
    }
    else
    {
      sub_1BDFDC130(a1 + 24);
      long long v13 = *(_OWORD *)(a2 + 40);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 40) = v13;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    uint64_t v12 = *(void *)(a2 + 40);
    unint64_t v11 = *(void *)(a2 + 48);
    swift_bridgeObjectRetain();
    sub_1BDF840AC(v12, v11);
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v11;
  }
  else
  {
    long long v14 = *(_OWORD *)(a2 + 40);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 40) = v14;
  }
  return a1;
}

uint64_t sub_1BDFDC130(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for EventIntegrationModelObject(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 32)) {
    goto LABEL_5;
  }
  uint64_t v5 = *(void *)(a2 + 32);
  if (!v5)
  {
    sub_1BDFDC130(a1 + 24);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v8;
    return a1;
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t v7 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_1BDF841A4(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventIntegrationModelObject(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EventIntegrationModelObject(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventIntegrationModelObject()
{
  return &type metadata for EventIntegrationModelObject;
}

unsigned char *storeEnumTagSinglePayload for EventIntegrationModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDFDC3C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventIntegrationModelObject.CodingKeys()
{
  return &type metadata for EventIntegrationModelObject.CodingKeys;
}

unint64_t sub_1BDFDC404()
{
  unint64_t result = qword_1EA0E3978;
  if (!qword_1EA0E3978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3978);
  }
  return result;
}

unint64_t sub_1BDFDC45C()
{
  unint64_t result = qword_1EA0E3980;
  if (!qword_1EA0E3980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3980);
  }
  return result;
}

unint64_t sub_1BDFDC4B4()
{
  unint64_t result = qword_1EA0E3988;
  if (!qword_1EA0E3988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3988);
  }
  return result;
}

uint64_t sub_1BDFDC508(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C706D6F437369 && a2 == 0xEB00000000646574;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BE08D400 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

ValueMetadata *type metadata accessor for AvatarView()
{
  return &type metadata for AvatarView;
}

unint64_t sub_1BDFDC67C()
{
  unint64_t result = qword_1EA0E3990;
  if (!qword_1EA0E3990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3990);
  }
  return result;
}

id sub_1BDFDC6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  uint64_t v2 = sub_1BE0703B0();
  uint64_t v20 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1BE0703E0();
  uint64_t v5 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  unint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1BE0703C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(self, sel_createAvatarViewController);
  sub_1BDFB7B1C(0, (unint64_t *)&qword_1EA0E39A0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4FBCB28], v8);
  long long v13 = (void *)sub_1BE070930();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v18;
  *(void *)(v14 + 24) = v12;
  aBlock[4] = sub_1BDFDD0E4;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BDFDCF10;
  aBlock[3] = &block_descriptor_0;
  char v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v16 = v12;
  sub_1BE0703D0();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1BDFDD104();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39B0);
  sub_1BDFDD15C();
  sub_1BE070AC0();
  MEMORY[0x1C1889120](0, v7, v4, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v19);
  swift_release();
  return v16;
}

void sub_1BDFDCA50(uint64_t a1, void *a2)
{
  aBlock[7] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1BE0703B0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1BE0703E0();
  uint64_t v29 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B980]), sel_init);
  unint64_t v11 = self;
  id v12 = (void *)sub_1BE070700();
  id v13 = objc_msgSend(v11, sel_cuik_predicateForContactsMatchingHandleStrings_, v12);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39C0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1BE07E590;
  *(void *)(v14 + 32) = objc_msgSend(a2, sel_descriptorForRequiredKeys);
  aBlock[0] = (id)v14;
  sub_1BE070720();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39C8);
  char v15 = (void *)sub_1BE070700();
  swift_bridgeObjectRelease();
  aBlock[0] = 0;
  id v16 = objc_msgSend(v10, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v13, v15, aBlock);

  id v17 = aBlock[0];
  if (v16)
  {
    sub_1BDFB7B1C(0, (unint64_t *)&qword_1EA0E39D0);
    uint64_t v18 = sub_1BE070710();
    uint64_t v28 = v7;
    uint64_t v19 = v4;
    uint64_t v20 = v18;
    id v21 = v17;

    sub_1BDFB7B1C(0, (unint64_t *)&qword_1EA0E39A0);
    uint64_t v22 = (void *)sub_1BE070910();
    uint64_t v23 = (void *)swift_allocObject();
    v23[2] = a2;
    v23[3] = v20;
    aBlock[4] = sub_1BDFDD1F8;
    aBlock[5] = v23;
    aBlock[0] = (id)MEMORY[0x1E4F143A8];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1BDFDCF10;
    aBlock[3] = &block_descriptor_6;
    uint64_t v24 = _Block_copy(aBlock);
    id v25 = a2;
    swift_release();
    sub_1BE0703D0();
    aBlock[0] = (id)MEMORY[0x1E4FBC860];
    sub_1BDFDD104();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39B0);
    sub_1BDFDD15C();
    sub_1BE070AC0();
    MEMORY[0x1C1889120](0, v9, v6, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
  }
  else
  {
    id v26 = aBlock[0];
    char v27 = (void *)sub_1BE06EDB0();

    swift_willThrow();
  }
}

void sub_1BDFDCE94(void *a1)
{
  sub_1BDFB7B1C(0, (unint64_t *)&qword_1EA0E39D0);
  id v2 = (id)sub_1BE070700();
  objc_msgSend(a1, sel_setContacts_, v2);
}

uint64_t sub_1BDFDCF10(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

id sub_1BDFDCF54(uint64_t a1)
{
  return sub_1BDFDC6D0(a1, *v1);
}

uint64_t sub_1BDFDCF60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BDFDD050();

  return MEMORY[0x1F40FAB68](a1, a2, a3, v6);
}

uint64_t sub_1BDFDCFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BDFDD050();

  return MEMORY[0x1F40FAB30](a1, a2, a3, v6);
}

void sub_1BDFDD028()
{
}

unint64_t sub_1BDFDD050()
{
  unint64_t result = qword_1EA0E3998;
  if (!qword_1EA0E3998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3998);
  }
  return result;
}

uint64_t sub_1BDFDD0A4()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1BDFDD0E4()
{
  sub_1BDFDCA50(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_1BDFDD104()
{
  unint64_t result = qword_1EA0E39A8;
  if (!qword_1EA0E39A8)
  {
    sub_1BE0703B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E39A8);
  }
  return result;
}

unint64_t sub_1BDFDD15C()
{
  unint64_t result = qword_1EA0E39B8;
  if (!qword_1EA0E39B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E39B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E39B8);
  }
  return result;
}

uint64_t sub_1BDFDD1B8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1BDFDD1F8()
{
  sub_1BDFDCE94(*(void **)(v0 + 16));
}

uint64_t sub_1BDFDD208@<X0>(uint64_t a1@<X8>)
{
  v9[1] = a1;
  v9[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39E0);
  uint64_t v2 = *(void *)(v9[0] - 8);
  MEMORY[0x1F4188790](v9[0]);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE06F7A0();
  long long v15 = *(_OWORD *)(v1 + 32);
  uint64_t v16 = *(void *)(v1 + 48);
  long long v11 = *(_OWORD *)(v1 + 32);
  uint64_t v12 = *(void *)(v1 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39E8);
  sub_1BE070130();
  uint64_t v10 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39F0);
  sub_1BDFDE758(&qword_1EA0E39F8, &qword_1EA0E39F0, (void (*)(void))sub_1BDFDE6AC);
  sub_1BE0701A0();
  long long v13 = v15;
  uint64_t v14 = v16;
  sub_1BE070110();
  long long v13 = v11;
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v5 + 32) = v6;
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v1 + 32);
  *(void *)(v5 + 64) = *(void *)(v1 + 48);
  sub_1BDFDE940(v1);
  sub_1BDF86964(&qword_1EA0E3A70, &qword_1EA0E39E0);
  uint64_t v7 = v9[0];
  sub_1BE06FF20();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v7);
}

uint64_t sub_1BDFDD4C8(uint64_t a1)
{
  uint64_t v5 = *(void *)(a1 + 24);
  swift_getKeyPath();
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(void *)(v2 + 64) = *(void *)(a1 + 48);
  sub_1BDFD5B78((uint64_t)&v5);
  sub_1BDFDE940(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A08);
  sub_1BDF86964(&qword_1EA0E3A88, &qword_1EA0E3A80);
  sub_1BDFDE6AC();
  return sub_1BE070260();
}

id sub_1BDFDD5EC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A08);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  id result = objc_msgSend(v8, sel_title);
  if (result)
  {
    uint64_t v10 = result;
    uint64_t v11 = sub_1BE070500();
    uint64_t v13 = v12;

    v15[0] = v11;
    v15[1] = v13;
    MEMORY[0x1F4188790](v14);
    v15[-2] = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A18);
    sub_1BDFDE758(&qword_1EA0E3A10, &qword_1EA0E3A18, (void (*)(void))sub_1BDFDE7D0);
    sub_1BDF859F0();
    sub_1BE070280();
    return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDFDD7B0(uint64_t a1, uint64_t a2)
{
  return sub_1BE070210();
}

id sub_1BDFDD810(unint64_t a1, uint64_t a2)
{
  unint64_t v5 = *(void *)(v2 + 24);
  unint64_t v23 = v5;
  uint64_t v6 = (char **)MEMORY[0x1E4FBC860];
  unint64_t v21 = MEMORY[0x1E4FBC860];
  if (v5 >> 62) {
    goto LABEL_12;
  }
  uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v7; uint64_t v7 = sub_1BE070CB0())
  {
    unint64_t v20 = a1;
    a1 = v5 & 0xC000000000000001;
    uint64_t v8 = 4;
    uint64_t v6 = &selRef__componentsFromFormatString_;
    while (1)
    {
      id v9 = a1 ? (id)MEMORY[0x1C18893C0](v8 - 4, v5) : *(id *)(v5 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      id result = objc_msgSend(v9, sel_calendarInfos);
      if (!result) {
        goto LABEL_29;
      }
      uint64_t v13 = result;
      sub_1BDFDE9A8();
      unint64_t v14 = sub_1BE070710();

      sub_1BE060BD0(v14);
      ++v8;
      if (v11 == v7)
      {
        sub_1BDFDE9E8((uint64_t)&v23);
        sub_1BDFDE9E8((uint64_t)&v23);
        unint64_t v15 = v21;
        a1 = v20;
        uint64_t v6 = (char **)MEMORY[0x1E4FBC860];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_12:
    swift_bridgeObjectRetain_n();
  }
  sub_1BDFDE9E8((uint64_t)&v23);
  sub_1BDFDE9E8((uint64_t)&v23);
  unint64_t v15 = MEMORY[0x1E4FBC860];
LABEL_14:
  unint64_t v22 = (unint64_t)v6;
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (id)sub_1BE070CB0();
    uint64_t v16 = (uint64_t)result;
    if (result) {
      goto LABEL_16;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    unint64_t v18 = MEMORY[0x1E4FBC860];
    goto LABEL_26;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (id)swift_bridgeObjectRetain();
  if (!v16) {
    goto LABEL_25;
  }
LABEL_16:
  if (v16 < 1)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  for (uint64_t i = 0; i != v16; ++i)
  {
    if (objc_msgSend(*(id *)(v15 + 8 * i + 32), sel_calendar, v20))
    {
      MEMORY[0x1C1888EF0]();
      if (*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1BE070740();
      }
      sub_1BE070770();
      sub_1BE070720();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v18 = v22;
LABEL_26:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1BDFDEA14(v18, a1, a2);
  swift_bridgeObjectRelease();
  id result = (id)swift_bridgeObjectRelease();
  if (v19) {
    return v19;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BDFDDAC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A18);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = objc_msgSend(a1, sel_calendarInfos);
  if (result)
  {
    id v9 = result;
    sub_1BDFDE9A8();
    uint64_t v10 = sub_1BE070710();

    v11[1] = v10;
    swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E5330);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A28);
    sub_1BDF86964(&qword_1EA0E3A90, &qword_1EA0E5330);
    sub_1BDFDE7D0();
    sub_1BE070260();
    return (id)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BDFDDC88(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  uint64_t v5 = sub_1BE070500();
  uint64_t v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

id sub_1BDFDDCDC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A38);
  MEMORY[0x1F4188790](v21);
  id v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A28);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v24 = v12;
  unint64_t v23 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3AA0);
  sub_1BDF86964(&qword_1EA0E3AA8, &qword_1EA0E3A98);
  sub_1BDFDED50();
  sub_1BE070090();
  id result = objc_msgSend(v12, sel_calendar);
  if (result)
  {
    unint64_t v14 = result;
    id v15 = objc_msgSend(result, sel_calendarIdentifier);

    uint64_t v16 = sub_1BE070500();
    uint64_t v18 = v17;

    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
    uint64_t v19 = (uint64_t *)&v4[*(int *)(v21 + 36)];
    *uint64_t v19 = v16;
    v19[1] = v18;
    sub_1BDFDEDF0((uint64_t)v4, (uint64_t)v11);
    unint64_t v20 = (uint64_t *)&v11[*(int *)(v9 + 36)];
    *unint64_t v20 = v16;
    v20[1] = v18;
    swift_bridgeObjectRetain();
    sub_1BDFDEE58((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return (id)sub_1BDFDEEB8((uint64_t)v11, v22);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDFDDFB8()
{
  return sub_1BE06F2E0();
}

id sub_1BDFDE04C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id result = objc_msgSend(a1, sel_title);
  if (result)
  {
    uint64_t v5 = result;
    uint64_t v6 = sub_1BE070500();
    uint64_t v8 = v7;

    uint64_t v24 = v6;
    uint64_t v25 = v8;
    sub_1BDF859F0();
    uint64_t v9 = sub_1BE06FD30();
    uint64_t v11 = v10;
    char v13 = v12;
    uint64_t v15 = v14;
    id v16 = objc_msgSend(a1, sel_stringForSharedCalendar, v24, v25);
    if (v16)
    {
      sub_1BE070500();

      id v16 = (id)sub_1BE06FD30();
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      uint64_t v22 = v21 & 1;
    }
    else
    {
      uint64_t v18 = 0;
      uint64_t v22 = 0;
      uint64_t v20 = 0;
    }
    char v23 = v13 & 1;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v11;
    *(unsigned char *)(a2 + 16) = v23;
    *(void *)(a2 + 24) = v15;
    *(void *)(a2 + 32) = v16;
    *(void *)(a2 + 40) = v18;
    *(void *)(a2 + 48) = v22;
    *(void *)(a2 + 56) = v20;
    sub_1BDF8555C(v9, v11, v23);
    swift_bridgeObjectRetain();
    sub_1BDFDEF28((uint64_t)v16, v18, v22, v20);
    sub_1BDFDEF6C((uint64_t)v16, v18, v22, v20);
    sub_1BDF8587C(v9, v11, v23);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BDFDE1D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1BE070060();
  id result = objc_msgSend(a1, sel_color);
  if (result)
  {
    uint64_t v6 = MEMORY[0x1C1888840]();
    id result = (id)sub_1BE06FFD0();
    *a2 = v4;
    a2[1] = v6;
    a2[2] = (uint64_t)result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDFDE254@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFDD208(a1);
}

void (*sub_1BDFDE298(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1BDFDE348(v6, a2, a3);
  return sub_1BDFDE300;
}

void sub_1BDFDE300(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1BDFDE348(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C18893C0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1BDFDE3C8;
  }
  __break(1u);
  return result;
}

void sub_1BDFDE3C8(id *a1)
{
}

uint64_t destroy for CalendarView(uint64_t a1)
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *initializeWithCopy for CalendarView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  a1[6] = a2[6];
  swift_retain();
  swift_retain();
  id v7 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CalendarView(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = (void *)a2[2];
  uint64_t v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for CalendarView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CalendarView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CalendarView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarView()
{
  return &type metadata for CalendarView;
}

uint64_t sub_1BDFDE688()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFDE6A4()
{
  return sub_1BDFDD4C8(*(void *)(v0 + 16));
}

unint64_t sub_1BDFDE6AC()
{
  unint64_t result = qword_1EA0E3A00;
  if (!qword_1EA0E3A00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3A08);
    sub_1BDFDE758(&qword_1EA0E3A10, &qword_1EA0E3A18, (void (*)(void))sub_1BDFDE7D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3A00);
  }
  return result;
}

uint64_t sub_1BDFDE758(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDFDE7D0()
{
  unint64_t result = qword_1EA0E3A20;
  if (!qword_1EA0E3A20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3A28);
    sub_1BDFDE870();
    sub_1BDF86964(&qword_1EA0E3A60, &qword_1EA0E3A68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3A20);
  }
  return result;
}

unint64_t sub_1BDFDE870()
{
  unint64_t result = qword_1EA0E3A30;
  if (!qword_1EA0E3A30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3A38);
    sub_1BDF86964(&qword_1EA0E3A40, &qword_1EA0E3A48);
    sub_1BDF86964(&qword_1EA0E3A50, &qword_1EA0E3A58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3A30);
  }
  return result;
}

uint64_t sub_1BDFDE938(uint64_t a1, uint64_t a2)
{
  return sub_1BDFDD7B0(a1, a2);
}

uint64_t sub_1BDFDE940(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_1BDFDE9A8()
{
  unint64_t result = qword_1EA0E3A78;
  if (!qword_1EA0E3A78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA0E3A78);
  }
  return result;
}

uint64_t sub_1BDFDE9E8(uint64_t a1)
{
  return a1;
}

void *sub_1BDFDEA14(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1BE070CB0();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      uint64_t v22 = v4;
      unint64_t v23 = v7;
      unint64_t v24 = v7 & 0xC000000000000001;
      uint64_t v4 = 4;
      do
      {
        uint64_t v9 = v4 - 4;
        if (v24)
        {
          id v10 = (id)MEMORY[0x1C18893C0](v4 - 4, v7);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_19;
          }
        }
        else
        {
          id v10 = *(id *)(v7 + 8 * v4);
          uint64_t v11 = v4 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
        }
        uint64_t v12 = v8;
        char v13 = v10;
        uint64_t v14 = a3;
        id v15 = objc_msgSend(v10, sel_calendarIdentifier, v22);
        uint64_t v16 = sub_1BE070500();
        uint64_t v18 = v17;

        a3 = v14;
        BOOL v19 = v16 == a2 && v18 == v14;
        if (v19)
        {
          swift_bridgeObjectRelease();
LABEL_18:
          swift_bridgeObjectRelease();
          return v13;
        }
        char v20 = sub_1BE070EF0();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_18;
        }

        ++v4;
        uint64_t v8 = v12;
        BOOL v19 = v11 == v12;
        unint64_t v7 = v23;
      }
      while (!v19);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

char *keypath_get_selector_source()
{
  return sel_source;
}

id sub_1BDFDEBC8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_source);
  *a2 = result;
  return result;
}

id sub_1BDFDEC04(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSource_, *a1);
}

char *keypath_get_selector_sourceIdentifier()
{
  return sel_sourceIdentifier;
}

void sub_1BDFDEC24(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t objectdestroyTm_3()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x1F4186498](v0, 72, 7);
}

id sub_1BDFDECA8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDFDD5EC(a1, a2);
}

id sub_1BDFDECB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFDDAC4(*(void **)(v1 + 16), a1);
}

char *keypath_get_selector_calendar()
{
  return sel_calendar;
}

id sub_1BDFDECC4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_calendar);
  *a2 = result;
  return result;
}

id sub_1BDFDED00(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCalendar_, *a1);
}

char *keypath_get_selector_calendarIdentifier()
{
  return sel_calendarIdentifier;
}

void sub_1BDFDED20(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1BDFDED40()
{
  return sub_1BDFDDFB8();
}

id sub_1BDFDED48@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BDFDE1D4(*(void **)(v1 + 16), a1);
}

unint64_t sub_1BDFDED50()
{
  unint64_t result = qword_1EA0E3AB0;
  if (!qword_1EA0E3AB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3AA0);
    sub_1BDF86964(&qword_1EA0E3AB8, &qword_1EA0E3AC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3AB0);
  }
  return result;
}

uint64_t sub_1BDFDEDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFDEE58(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BDFDEEB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3A28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1BDFDEF20@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFDE04C(*(void **)(v1 + 16), a1);
}

uint64_t sub_1BDFDEF28(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1BDF8555C(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BDFDEF6C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1BDF8587C(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BDFDEFB0()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for MapItemView()
{
  return &type metadata for MapItemView;
}

void sub_1BDFDF054(void *a1, id a2)
{
  id v4 = objc_msgSend(a2, sel_geoLocation);
  if (!v4) {
    return;
  }
  id v54 = v4;
  objc_msgSend(v4, sel_coordinate);
  unint64_t v6 = v5;
  unint64_t v8 = v7;
  objc_msgSend(a2, sel_radius);
  double v10 = v9;
  if (objc_msgSend(a2, sel_isImprecise)) {
    double v13 = 50.0;
  }
  else {
    double v13 = 804.67;
  }
  v11.n128_u64[0] = v6;
  v12.n128_u64[0] = v8;
  sub_1BDFD9D10(v11, v12, v10, v13);
  double v16 = v14;
  double v17 = v15;
  BOOL v18 = v14 < 0.0 || v14 > 180.0;
  if (v18 || (v15 >= 0.0 ? (BOOL v19 = v15 > 360.0) : (BOOL v19 = 1), v19))
  {
    if (qword_1EA0E2230 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1BE06F1C0();
    __swift_project_value_buffer(v33, (uint64_t)qword_1EA0F6B78);
    uint64_t v34 = sub_1BE06F1A0();
    os_log_type_t v35 = sub_1BE0708E0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v61 = v37;
      *(_DWORD *)uint64_t v36 = 136315394;
      uint64_t v56 = *(void *)&v17;
      type metadata accessor for MKCoordinateSpan(0);
      uint64_t v38 = sub_1BE070550();
      sub_1BDFCDF38(v38, v39, &v61);
      sub_1BE070A00();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2048;
      double aBlock = v10;
      sub_1BE070A00();
      _os_log_impl(&dword_1BDF08000, v34, v35, "Fallback coordinate span [%s] created with radius [%f] is invalid, nothing to fall back to, halting further loading of map view", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C188ACF0](v37, -1, -1);
      MEMORY[0x1C188ACF0](v36, -1, -1);

      return;
    }
  }
  else
  {
    id v20 = objc_msgSend(a2, sel_mapKitHandle);
    if (v20)
    {
      char v21 = v20;
      uint64_t v22 = sub_1BE06EE50();
      unint64_t v24 = v23;

      if (qword_1EA0E2230 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_1BE06F1C0();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EA0F6B78);
      sub_1BDF840AC(v22, v24);
      sub_1BDF840AC(v22, v24);
      id v26 = sub_1BE06F1A0();
      os_log_type_t v27 = sub_1BE0708D0();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        double aBlock = *(double *)&v29;
        *(_DWORD *)uint64_t v28 = 136315138;
        sub_1BDF840AC(v22, v24);
        uint64_t v30 = sub_1BE06EE30();
        unint64_t v32 = v31;
        sub_1BDF841A4(v22, v24);
        uint64_t v61 = sub_1BDFCDF38(v30, v32, (uint64_t *)&aBlock);
        sub_1BE070A00();
        swift_bridgeObjectRelease();
        sub_1BDF841A4(v22, v24);
        sub_1BDF841A4(v22, v24);
        _os_log_impl(&dword_1BDF08000, v26, v27, "Found mapKitHandle, loading MKMapItemView with mapKitHandle: %s", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C188ACF0](v29, -1, -1);
        MEMORY[0x1C188ACF0](v28, -1, -1);
      }
      else
      {
        sub_1BDF841A4(v22, v24);
        sub_1BDF841A4(v22, v24);
      }

      uint64_t v47 = self;
      uint64_t v48 = (void *)sub_1BE06EE40();
      id v49 = (double *)swift_allocObject();
      *((void *)v49 + 2) = v54;
      *((void *)v49 + 3) = a2;
      v49[4] = v16;
      v49[5] = v17;
      *((void *)v49 + 6) = a1;
      uint64_t v59 = sub_1BDFE0424;
      char v60 = v49;
      double aBlock = MEMORY[0x1E4F143A8];
      uint64_t v56 = 1107296256;
      uint64_t v57 = sub_1BDFDFC00;
      char v58 = &block_descriptor_1;
      id v50 = _Block_copy(&aBlock);
      id v51 = v54;
      id v52 = a2;
      id v53 = a1;
      swift_release();
      objc_msgSend(v47, sel__mapItemFromHandle_completionHandler_, v48, v50);

      _Block_release(v50);
      sub_1BDF841A4(v22, v24);
      return;
    }
    if (qword_1EA0E2230 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_1BE06F1C0();
    __swift_project_value_buffer(v40, (uint64_t)qword_1EA0F6B78);
    uint64_t v41 = sub_1BE06F1A0();
    os_log_type_t v42 = sub_1BE0708E0();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl(&dword_1BDF08000, v41, v42, "Did not find mapKitHandle, falling back to load MKMapItemView with geoLocation", v43, 2u);
      MEMORY[0x1C188ACF0](v43, -1, -1);
    }

    id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30F08]), sel_initWithCLLocation_, v54);
    if (v44)
    {
      uint64_t v45 = v44;
      id v46 = objc_msgSend(a2, sel_title);
      objc_msgSend(v45, sel_setName_, v46);

      sub_1BDFE010C(v45, a1, v16, v17);
    }
  }
}

id sub_1BDFDF728(void *a1, void *a2, uint64_t a3, void *a4, void *a5, double a6, double a7)
{
  uint64_t v14 = sub_1BE0703B0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  double v17 = (char *)v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1BE0703E0();
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  char v21 = (char *)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v19;
  uint64_t v54 = v15;
  uint64_t v52 = v22;
  if (a1)
  {
    id v23 = a1;
LABEL_10:
    sub_1BDFE044C();
    id v39 = a1;
    uint64_t v40 = (void *)sub_1BE070910();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = a4;
    *(void *)(v41 + 24) = v23;
    *(double *)(v41 + 32) = a6;
    *(double *)(v41 + 40) = a7;
    *(void *)(v41 + 48) = a5;
    aBlock[4] = (uint64_t)sub_1BDFE04D8;
    aBlock[5] = v41;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BDFDCF10;
    aBlock[3] = (uint64_t)&block_descriptor_6_0;
    os_log_type_t v42 = a5;
    uint64_t v43 = _Block_copy(aBlock);
    id v44 = a4;
    id v45 = v23;
    id v46 = v42;
    swift_release();
    sub_1BE0703D0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1BDFDD104();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39B0);
    sub_1BDFDD15C();
    sub_1BE070AC0();
    MEMORY[0x1C1889120](0, v21, v17, v43);
    _Block_release(v43);

    (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v14);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v21, v53);
  }
  uint64_t v50 = a3;
  id v51 = a5;
  if (qword_1EA0E2230 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1BE06F1C0();
  __swift_project_value_buffer(v24, (uint64_t)qword_1EA0F6B78);
  id v25 = a2;
  id v26 = a2;
  os_log_type_t v27 = sub_1BE06F1A0();
  os_log_type_t v28 = sub_1BE0708E0();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    uint64_t v55 = (uint64_t)a2;
    aBlock[0] = v49;
    uint64_t v48 = v29;
    *(_DWORD *)uint64_t v29 = 136315138;
    v47[1] = v29 + 4;
    id v30 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3AE0);
    uint64_t v31 = sub_1BE070550();
    uint64_t v55 = sub_1BDFCDF38(v31, v32, aBlock);
    sub_1BE070A00();
    swift_bridgeObjectRelease();

    os_log_type_t v33 = v28;
    uint64_t v34 = v48;
    _os_log_impl(&dword_1BDF08000, v27, v33, "Received error while recreating mapItem from mapKitHandle: %s. Falling back to load MKMapItemView with geoLocation.", v48, 0xCu);
    uint64_t v35 = v49;
    swift_arrayDestroy();
    MEMORY[0x1C188ACF0](v35, -1, -1);
    MEMORY[0x1C188ACF0](v34, -1, -1);
  }
  else
  {
  }
  id v36 = objc_allocWithZone(MEMORY[0x1E4F30F08]);
  id result = objc_msgSend(v36, sel_initWithCLLocation_, v50);
  a5 = v51;
  if (result)
  {
    id v23 = result;
    id v38 = objc_msgSend(a4, sel_title);
    objc_msgSend(v23, sel_setName_, v38);

    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_1BDFDFC00(uint64_t a1, void *a2, void *a3)
{
  unint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_1BDFDFC8C(void *a1, id a2)
{
  if (a1)
  {
    id v3 = a1;
    if (qword_1EA0E2230 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1BE06F1C0();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EA0F6B78);
    id v5 = a1;
    id v6 = a1;
    oslog = sub_1BE06F1A0();
    os_log_type_t v7 = sub_1BE0708E0();
    if (os_log_type_enabled(oslog, v7))
    {
      unint64_t v8 = (uint8_t *)swift_slowAlloc();
      double v9 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v8 = 138412290;
      id v10 = a1;
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      sub_1BE070A00();
      *double v9 = v12;

      _os_log_impl(&dword_1BDF08000, oslog, v7, "Received error while loading MKMapItemView: %@", v8, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3AE8);
      swift_arrayDestroy();
      MEMORY[0x1C188ACF0](v9, -1, -1);
      MEMORY[0x1C188ACF0](v8, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    objc_msgSend(a2, sel_triggerAnimation);
  }
}

void sub_1BDFDFEBC(uint64_t a1, void *a2)
{
  id v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

id sub_1BDFDFF28()
{
  uint64_t v1 = *v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30F20]), sel_init);
  sub_1BDFDF054(v2, v1);
  return v2;
}

uint64_t sub_1BDFDFF80()
{
  return sub_1BE06F840();
}

uint64_t sub_1BDFDFFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BDFE0528();

  return MEMORY[0x1F40F9EE8](a1, a2, a3, v6);
}

uint64_t sub_1BDFE0028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BDFE0528();

  return MEMORY[0x1F40F9E80](a1, a2, a3, v6);
}

void sub_1BDFE008C()
{
}

unint64_t sub_1BDFE00B8()
{
  unint64_t result = qword_1EA0E3AD8;
  if (!qword_1EA0E3AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3AD8);
  }
  return result;
}

void sub_1BDFE010C(void *a1, void *a2, double a3, double a4)
{
  objc_msgSend(a1, sel__coordinate);
  if (v9 < -180.0 || v9 > 180.0 || v8 < -90.0 || v8 > 90.0)
  {
    if (qword_1EA0E2230 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_1BE06F1C0();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EA0F6B78);
    id v24 = a1;
    uint64_t v14 = sub_1BE06F1A0();
    os_log_type_t v15 = sub_1BE0708E0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      uint64_t v31 = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      objc_msgSend(v24, sel__coordinate);
      uint64_t v26 = v18;
      type metadata accessor for CLLocationCoordinate2D(0);
      uint64_t v19 = sub_1BE070550();
      uint64_t aBlock = sub_1BDFCDF38(v19, v20, &v31);
      sub_1BE070A00();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BDF08000, v14, v15, "Map item coordinate %s is invalid, halting further loading of map view", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C188ACF0](v17, -1, -1);
      MEMORY[0x1C188ACF0](v16, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a2;
    uint64_t v29 = sub_1BDFE0520;
    uint64_t v30 = v21;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v26 = 1107296256;
    os_log_type_t v27 = sub_1BDFDFEBC;
    os_log_type_t v28 = &block_descriptor_12;
    uint64_t v22 = _Block_copy(&aBlock);
    id v23 = a2;
    swift_release();
    objc_msgSend(v23, sel_loadMapItem_coordinateSpan_completionHandler_, a1, v22, a3, a4);
    _Block_release(v22);
  }
}

id sub_1BDFE0424(void *a1, void *a2)
{
  return sub_1BDFDF728(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 48), *(double *)(v2 + 32), *(double *)(v2 + 40));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_1BDFE044C()
{
  unint64_t result = qword_1EA0E39A0;
  if (!qword_1EA0E39A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA0E39A0);
  }
  return result;
}

uint64_t objectdestroyTm_4()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

void sub_1BDFE04D8()
{
  sub_1BDFE010C(*(void **)(v0 + 24), *(void **)(v0 + 48), *(double *)(v0 + 32), *(double *)(v0 + 40));
}

uint64_t sub_1BDFE04E8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1BDFE0520(void *a1)
{
  sub_1BDFDFC8C(a1, *(id *)(v1 + 16));
}

unint64_t sub_1BDFE0528()
{
  unint64_t result = qword_1EA0E3AF0;
  if (!qword_1EA0E3AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3AF0);
  }
  return result;
}

uint64_t sub_1BDFE058C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 6579570;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 6579570;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x65676E61726FLL;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x776F6C6C6579;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v6 = 1701147239;
      goto LABEL_8;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1702194274;
      break;
    case 5:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x656C70727570;
      break;
    case 6:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v6 = 2003792482;
LABEL_8:
      unint64_t v5 = v6 & 0xFFFF0000FFFFFFFFLL | 0x6E00000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE600000000000000;
      if (v5 == 0x65676E61726FLL) {
        goto LABEL_22;
      }
      goto LABEL_24;
    case 2:
      unint64_t v7 = 0xE600000000000000;
      if (v5 != 0x776F6C6C6579) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 3:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 1701147239;
      goto LABEL_21;
    case 4:
      unint64_t v7 = 0xE400000000000000;
      if (v5 != 1702194274) {
        goto LABEL_24;
      }
      goto LABEL_22;
    case 5:
      unint64_t v7 = 0xE600000000000000;
      uint64_t v2 = 0x656C70727570;
      goto LABEL_18;
    case 6:
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 2003792482;
LABEL_21:
      if (v5 == (v8 & 0xFFFF0000FFFFFFFFLL | 0x6E00000000)) {
        goto LABEL_22;
      }
      goto LABEL_24;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_24;
      }
LABEL_22:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_24:
      }
        char v9 = sub_1BE070EF0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t CalendarColor.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  CalendarColor.Symbolic.init(rawValue:)(v6);
  *(void *)&double v7 = v31;
  if (v31 == 7)
  {
    char v8 = sub_1BE070650();
    uint64_t v9 = v8 & 1;
    uint64_t v10 = sub_1BE0705A0();
    uint64_t v11 = 6;
    if (v8) {
      uint64_t v11 = 7;
    }
    if (v10 == v11) {
      goto LABEL_8;
    }
    uint64_t v12 = sub_1BE0705A0();
    uint64_t v13 = 8;
    if (v8) {
      uint64_t v13 = 9;
    }
    if (v12 == v13)
    {
LABEL_8:
      uint64_t v14 = sub_1BDFE0DF8(v9, 2);
      char v16 = v15;
      double v17 = (double)v14;
      if (v9) {
        uint64_t v18 = 3;
      }
      else {
        uint64_t v18 = 2;
      }
      if (v9) {
        uint64_t v19 = 5;
      }
      else {
        uint64_t v19 = 4;
      }
      uint64_t v20 = sub_1BDFE0DF8(v18, 2);
      char v22 = v21;
      double v23 = (double)v20;
      uint64_t v24 = sub_1BDFE0DF8(v19, 2);
      char v26 = v25;
      uint64_t result = swift_bridgeObjectRelease();
      if (v16) {
        double v7 = 0.0;
      }
      else {
        double v7 = v17 / 255.0;
      }
      if (v22) {
        double v28 = 0.0;
      }
      else {
        double v28 = v23 / 255.0;
      }
      if (v26) {
        double v29 = 0.0;
      }
      else {
        double v29 = (double)v24 / 255.0;
      }
      char v30 = 1;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      double v28 = 0.0;
      double v29 = 0.0;
      char v30 = 0;
      *(void *)&double v7 = 6;
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    double v28 = 0.0;
    double v29 = 0.0;
    char v30 = 0;
  }
  *(double *)a3 = v7;
  *(double *)(a3 + 8) = v28;
  *(double *)(a3 + 16) = v29;
  *(unsigned char *)(a3 + 24) = v30;
  return result;
}

CalendarUIKit::CalendarColor::Symbolic_optional __swiftcall CalendarColor.Symbolic.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1BE070D20();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t CalendarColor.Symbolic.rawValue.getter()
{
  uint64_t result = 6579570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65676E61726FLL;
      break;
    case 2:
      uint64_t result = 0x776F6C6C6579;
      break;
    case 3:
      uint64_t result = 0x6E65657267;
      break;
    case 4:
      uint64_t result = 1702194274;
      break;
    case 5:
      uint64_t result = 0x656C70727570;
      break;
    case 6:
      uint64_t result = 0x6E776F7262;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDFE0A58(unsigned __int8 *a1, char *a2)
{
  return sub_1BDFE058C(*a1, *a2);
}

CalendarUIKit::CalendarColor::Symbolic_optional sub_1BDFE0A64(Swift::String *a1)
{
  return CalendarColor.Symbolic.init(rawValue:)(*a1);
}

void sub_1BDFE0A70(void *a1@<X8>)
{
  unint64_t v2 = 0xE300000000000000;
  uint64_t v3 = 6579570;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      uint64_t v3 = 0x65676E61726FLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x776F6C6C6579;
      a1[1] = 0xE600000000000000;
      return;
    case 3:
      uint64_t v4 = 1701147239;
      goto LABEL_9;
    case 4:
      *a1 = 1702194274;
      a1[1] = 0xE400000000000000;
      return;
    case 5:
      *a1 = 0x656C70727570;
      a1[1] = 0xE600000000000000;
      return;
    case 6:
      uint64_t v4 = 2003792482;
LABEL_9:
      *a1 = v4 & 0xFFFF0000FFFFFFFFLL | 0x6E00000000;
      a1[1] = 0xE500000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1BDFE0B40()
{
  return sub_1BDFE0C44();
}

uint64_t sub_1BDFE0B4C()
{
  sub_1BE070590();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BDFE0C3C()
{
  return sub_1BDFE0C44();
}

uint64_t sub_1BDFE0C44()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFE0D48()
{
  return sub_1BE0706C0();
}

uint64_t sub_1BDFE0DA8()
{
  return sub_1BE070690();
}

uint64_t sub_1BDFE0DF8(uint64_t a1, uint64_t a2)
{
  if (a1 < 0) {
    return 0;
  }
  if (__OFADD__(a1, a2))
  {
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (sub_1BE0705A0() < a1 + a2) {
    return 0;
  }
  unint64_t v3 = sub_1BE0705C0();
  if ((unint64_t)sub_1BE0705C0() >> 14 < v3 >> 14) {
    goto LABEL_57;
  }
  uint64_t v4 = sub_1BE070670();
  uint64_t v5 = MEMORY[0x1C1888D70](v4);
  unint64_t v7 = v6;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v8 = HIBYTE(v7) & 0xF;
  uint64_t v9 = v5 & 0xFFFFFFFFFFFFLL;
  if ((v7 & 0x2000000000000000) != 0) {
    uint64_t v10 = HIBYTE(v7) & 0xF;
  }
  else {
    uint64_t v10 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v10) {
    goto LABEL_58;
  }
  if ((v7 & 0x1000000000000000) == 0)
  {
    if ((v7 & 0x2000000000000000) == 0)
    {
      if ((v5 & 0x1000000000000000) != 0) {
        uint64_t v11 = (unsigned __int8 *)((v7 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v11 = (unsigned __int8 *)sub_1BE070C10();
      }
      uint64_t v12 = (uint64_t)sub_1BDFE2968(v11, v9, 16);
      char v14 = v13 & 1;
      goto LABEL_53;
    }
    v28[0] = v5;
    v28[1] = v7 & 0xFFFFFFFFFFFFFFLL;
    if (v5 == 43)
    {
      if (v8)
      {
        uint64_t v20 = v8 - 1;
        if (v20)
        {
          uint64_t v12 = 0;
          char v21 = (unsigned __int8 *)v28 + 1;
          while (1)
          {
            int v22 = *v21;
            unsigned __int8 v23 = v22 - 48;
            if ((v22 - 48) >= 0xA)
            {
              if ((v22 - 65) < 6)
              {
                unsigned __int8 v23 = v22 - 55;
              }
              else
              {
                if ((v22 - 97) > 5) {
                  goto LABEL_52;
                }
                unsigned __int8 v23 = v22 - 87;
              }
            }
            if ((unint64_t)(v12 - 0x800000000000000) >> 60 != 15) {
              break;
            }
            BOOL v19 = __OFADD__(16 * v12, v23);
            uint64_t v12 = 16 * v12 + v23;
            if (v19) {
              break;
            }
            ++v21;
            if (!--v20)
            {
LABEL_51:
              char v14 = 0;
              goto LABEL_53;
            }
          }
        }
        goto LABEL_52;
      }
    }
    else
    {
      if (v5 != 45)
      {
        if (v8)
        {
          uint64_t v12 = 0;
          uint64_t v24 = (unsigned __int8 *)v28;
          while (1)
          {
            int v25 = *v24;
            unsigned __int8 v26 = v25 - 48;
            if ((v25 - 48) >= 0xA)
            {
              if ((v25 - 65) < 6)
              {
                unsigned __int8 v26 = v25 - 55;
              }
              else
              {
                if ((v25 - 97) > 5) {
                  goto LABEL_52;
                }
                unsigned __int8 v26 = v25 - 87;
              }
            }
            if ((unint64_t)(v12 - 0x800000000000000) >> 60 != 15) {
              break;
            }
            BOOL v19 = __OFADD__(16 * v12, v26);
            uint64_t v12 = 16 * v12 + v26;
            if (v19) {
              break;
            }
            ++v24;
            if (!--v8) {
              goto LABEL_51;
            }
          }
        }
        goto LABEL_52;
      }
      if (v8)
      {
        uint64_t v15 = v8 - 1;
        if (v15)
        {
          uint64_t v12 = 0;
          char v16 = (unsigned __int8 *)v28 + 1;
          while (1)
          {
            int v17 = *v16;
            unsigned __int8 v18 = v17 - 48;
            if ((v17 - 48) >= 0xA)
            {
              if ((v17 - 65) < 6)
              {
                unsigned __int8 v18 = v17 - 55;
              }
              else
              {
                if ((v17 - 97) > 5) {
                  break;
                }
                unsigned __int8 v18 = v17 - 87;
              }
            }
            if ((unint64_t)(v12 - 0x800000000000000) >> 60 != 15) {
              break;
            }
            BOOL v19 = __OFSUB__(16 * v12, v18);
            uint64_t v12 = 16 * v12 - v18;
            if (v19) {
              break;
            }
            ++v16;
            if (!--v15) {
              goto LABEL_51;
            }
          }
        }
LABEL_52:
        uint64_t v12 = 0;
        char v14 = 1;
        goto LABEL_53;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v12 = (uint64_t)sub_1BDFE2880(v5, v7, 16);
  char v14 = v27;
LABEL_53:
  swift_bridgeObjectRelease();
  if (v14) {
    return 0;
  }
  else {
    return v12;
  }
}

uint64_t CalendarColor.init(dataRepresentation:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1BE06ED60();
  swift_allocObject();
  sub_1BE06ED50();
  sub_1BDFC8708();
  sub_1BE06ED40();
  sub_1BDF841A4(a1, a2);
  uint64_t result = swift_release();
  *(_OWORD *)a3 = v7;
  *(void *)(a3 + 16) = v8;
  *(unsigned char *)(a3 + 24) = v9;
  return result;
}

uint64_t CalendarColor.dataRepresentation.getter()
{
  sub_1BE06ED90();
  swift_allocObject();
  sub_1BE06ED80();
  sub_1BDFC87B0();
  uint64_t v0 = sub_1BE06ED70();
  swift_release();
  return v0;
}

uint64_t CalendarColor.stringRepresentation.getter()
{
  if (*(unsigned char *)(v0 + 24))
  {
    double v2 = *(double *)(v0 + 8);
    double v1 = *(double *)(v0 + 16);
    double v3 = *(double *)v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33C8);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1BE07C310;
    double v5 = round(v3 * 255.0);
    if ((~*(void *)&v5 & 0x7FF0000000000000) != 0)
    {
      if (v5 > -9.22337204e18)
      {
        if (v5 < 9.22337204e18)
        {
          uint64_t v6 = MEMORY[0x1E4FBB550];
          uint64_t v7 = MEMORY[0x1E4FBB5C8];
          *(void *)(v4 + 56) = MEMORY[0x1E4FBB550];
          *(void *)(v4 + 64) = v7;
          *(void *)(v4 + 32) = (uint64_t)v5;
          double v8 = round(v2 * 255.0);
          if ((~*(void *)&v8 & 0x7FF0000000000000) != 0)
          {
            if (v8 > -9.22337204e18)
            {
              if (v8 < 9.22337204e18)
              {
                *(void *)(v4 + 96) = v6;
                *(void *)(v4 + 104) = v7;
                *(void *)(v4 + 72) = (uint64_t)v8;
                double v9 = round(v1 * 255.0);
                if ((~*(void *)&v9 & 0x7FF0000000000000) != 0)
                {
                  if (v9 > -9.22337204e18)
                  {
                    if (v9 < 9.22337204e18)
                    {
                      *(void *)(v4 + 136) = v6;
                      *(void *)(v4 + 144) = v7;
                      *(void *)(v4 + 112) = (uint64_t)v9;
                      return sub_1BE070510();
                    }
LABEL_28:
                    __break(1u);
                    JUMPOUT(0x1BDFE14D8);
                  }
LABEL_27:
                  __break(1u);
                  goto LABEL_28;
                }
LABEL_26:
                __break(1u);
                goto LABEL_27;
              }
LABEL_25:
              __break(1u);
              goto LABEL_26;
            }
LABEL_24:
            __break(1u);
            goto LABEL_25;
          }
LABEL_23:
          __break(1u);
          goto LABEL_24;
        }
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_22;
  }
  uint64_t result = 6579570;
  switch(*(void *)v0)
  {
    case 1u:
      uint64_t result = 0x65676E61726FLL;
      break;
    case 2u:
      uint64_t result = 0x776F6C6C6579;
      break;
    case 3u:
      uint64_t result = 0x6E65657267;
      break;
    case 4u:
      uint64_t result = 1702194274;
      break;
    case 5u:
      uint64_t result = 0x656C70727570;
      break;
    case 6u:
      uint64_t result = 0x6E776F7262;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t CalendarColor.displayColor.getter()
{
  uint64_t v1 = sub_1BE06FF70();
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0 + 24) & 1) == 0)
  {
    double v9 = (void *)sub_1BE0704C0();
    swift_bridgeObjectRelease();
    CUIKSymbolicColorWithName(v9);

    JUMPOUT(0x1C1888840);
  }
  double v6 = *(double *)(v0 + 8);
  double v5 = *(double *)(v0 + 16);
  double v7 = *(double *)v0;
  (*(void (**)(char *, void))(v2 + 104))(v4, *MEMORY[0x1E4F3EB18]);
  return MEMORY[0x1C1888830](v4, v7, v6, v5, 1.0);
}

id CalendarColor.platformColor.getter()
{
  if (*(unsigned char *)(v0 + 24))
  {
    double v2 = *(double *)(v0 + 8);
    double v1 = *(double *)(v0 + 16);
    double v3 = *(double *)v0;
    id v4 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
    return objc_msgSend(v4, sel_initWithRed_green_blue_alpha_, v3, v2, v1, 1.0);
  }
  else
  {
    double v6 = (void *)sub_1BE0704C0();
    swift_bridgeObjectRelease();
    id v7 = CUIKSymbolicColorWithName(v6);

    return v7;
  }
}

uint64_t CalendarColor.hash(into:)()
{
  if (*(unsigned char *)(v0 + 24))
  {
    sub_1BE070FC0();
    sub_1BE070FE0();
    sub_1BE070FE0();
    return sub_1BE070FE0();
  }
  else
  {
    sub_1BE070FC0();
    sub_1BE070590();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BDFE19C4()
{
  if (*v0) {
    return 0x6D6F74737563;
  }
  else {
    return 0x63696C6F626D7973;
  }
}

uint64_t sub_1BDFE19FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFE32D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFE1A24(uint64_t a1)
{
  unint64_t v2 = sub_1BDFE312C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFE1A60(uint64_t a1)
{
  unint64_t v2 = sub_1BDFE312C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1BDFE1A9C()
{
  uint64_t v1 = 0x6E65657267;
  if (*v0 != 1) {
    uint64_t v1 = 1702194274;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 6579570;
  }
}

uint64_t sub_1BDFE1AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFE33BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFE1B0C(uint64_t a1)
{
  unint64_t v2 = sub_1BDFE3180();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFE1B48(uint64_t a1)
{
  unint64_t v2 = sub_1BDFE3180();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1BDFE1B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1BE070EF0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BDFE1C04(uint64_t a1)
{
  unint64_t v2 = sub_1BDFE31D4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFE1C40(uint64_t a1)
{
  unint64_t v2 = sub_1BDFE31D4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CalendarColor.encode(to:)(void *a1)
{
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3AF8);
  uint64_t v22 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  int v25 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3B00);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  MEMORY[0x1F4188790](v4);
  double v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3B08);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = *v1;
  char v11 = *((unsigned char *)v1 + 24);
  uint64_t v12 = a1[3];
  char v13 = a1;
  char v14 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_1BDFE312C();
  sub_1BE071030();
  if (v11)
  {
    uint64_t v15 = v22;
    char v33 = 1;
    sub_1BDFE3180();
    char v16 = v25;
    sub_1BE070E20();
    char v32 = 0;
    uint64_t v18 = v26;
    uint64_t v17 = v27;
    sub_1BE070E80();
    if (!v17)
    {
      char v31 = 1;
      sub_1BE070E80();
      char v30 = 2;
      sub_1BE070E80();
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v16, v18);
  }
  else
  {
    char v29 = 0;
    sub_1BDFE31D4();
    sub_1BE070E20();
    char v28 = v10;
    sub_1BDFE3228();
    uint64_t v19 = v24;
    sub_1BE070EB0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v19);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v14, v7);
}

uint64_t CalendarColor.hashValue.getter()
{
  return sub_1BE070FF0();
}

uint64_t CalendarColor.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v33 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3B30);
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3B38);
  uint64_t v34 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v31[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3B40);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = a1[3];
  uint64_t v37 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_1BDFE312C();
  uint64_t v14 = v38;
  sub_1BE071010();
  if (v14) {
    goto LABEL_6;
  }
  uint64_t v15 = v36;
  uint64_t v38 = v10;
  uint64_t v16 = sub_1BE070E00();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v18 = sub_1BE070C00();
    swift_allocError();
    uint64_t v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EA0E2278);
    *uint64_t v20 = &type metadata for CalendarColor;
    sub_1BE070D40();
    sub_1BE070BF0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x1E4FBBA70], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v12, v9);
LABEL_6:
    uint64_t v29 = (uint64_t)v37;
    return __swift_destroy_boxed_opaque_existential_1(v29);
  }
  int v17 = *(unsigned __int8 *)(v16 + 32);
  if (v17)
  {
    uint64_t v34 = v16;
    char v44 = 1;
    sub_1BDFE3180();
    sub_1BE070D30();
    int v32 = v17;
    char v43 = 0;
    sub_1BE070DD0();
    uint64_t v23 = v22;
    char v42 = 1;
    sub_1BE070DD0();
    uint64_t v26 = v25;
    char v41 = 2;
    sub_1BE070DD0();
    uint64_t v28 = v27;
    (*(void (**)(unsigned char *, uint64_t))(v35 + 8))(v5, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v12, v9);
    uint64_t v29 = (uint64_t)v37;
    uint64_t v30 = v23;
  }
  else
  {
    int v32 = *(unsigned __int8 *)(v16 + 32);
    char v40 = 0;
    sub_1BDFE31D4();
    sub_1BE070D30();
    sub_1BDFE327C();
    sub_1BE070DF0();
    (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v8, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v12, v9);
    uint64_t v30 = v39;
    uint64_t v26 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = (uint64_t)v37;
  }
  uint64_t v24 = v33;
  *char v33 = v30;
  v24[1] = v26;
  v24[2] = v28;
  *((unsigned char *)v24 + 24) = v32;
  return __swift_destroy_boxed_opaque_existential_1(v29);
}

uint64_t sub_1BDFE25E0()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFE2640()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFE2698@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CalendarColor.init(from:)(a1, a2);
}

uint64_t sub_1BDFE26B0(void *a1)
{
  return CalendarColor.encode(to:)(a1);
}

unint64_t static CUIKCalendarColor.providerIdentifier.getter()
{
  return 0xD000000000000025;
}

id CUIKCalendarColor.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id CUIKCalendarColor.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CUIKCalendarColor();
  return objc_msgSendSuper2(&v2, sel_init);
}

id CUIKCalendarColor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CUIKCalendarColor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unsigned __int8 *sub_1BDFE2880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1BE070660();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1BDFE2BE4();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    uint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v7 = (unsigned __int8 *)sub_1BE070C10();
  }
LABEL_7:
  uint64_t v11 = sub_1BDFE2968(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1BDFE2968(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1BDFE2BE4()
{
  unint64_t v0 = sub_1BE070670();
  uint64_t v4 = sub_1BDFE2C64(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BDFE2C64(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_1BDFE2DBC(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_1BDFCE434(v9, 0);
      unint64_t v12 = sub_1BDFE2EBC((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1BE070C10();
LABEL_4:
        JUMPOUT(0x1C1888D80);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1C1888D80](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1C1888D80]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_1BDFE2DBC(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_1BDFCE49C(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_1BDFCE49C(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x1F4183AA8](a1, a2, a3, a4);
}

unint64_t sub_1BDFE2EBC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    void v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_1BDFCE49C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1BE070630();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1BE070C10();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_1BDFCE49C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1BE070600();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t _s13CalendarUIKit0A5ColorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v4 = *(double *)a1;
  double v5 = *(double *)a2;
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
      return sub_1BDFE058C(LOBYTE(v4), SLOBYTE(v5));
    }
    return 0;
  }
  if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
    return 0;
  }
  double v7 = *(double *)(a1 + 8);
  double v6 = *(double *)(a1 + 16);
  BOOL v8 = v4 == v5;
  if (v7 != *(double *)(a2 + 8)) {
    BOOL v8 = 0;
  }
  return v6 == *(double *)(a2 + 16) && v8;
}

unint64_t sub_1BDFE312C()
{
  unint64_t result = qword_1EA0E3B10;
  if (!qword_1EA0E3B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B10);
  }
  return result;
}

unint64_t sub_1BDFE3180()
{
  unint64_t result = qword_1EA0E3B18;
  if (!qword_1EA0E3B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B18);
  }
  return result;
}

unint64_t sub_1BDFE31D4()
{
  unint64_t result = qword_1EA0E3B20;
  if (!qword_1EA0E3B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B20);
  }
  return result;
}

unint64_t sub_1BDFE3228()
{
  unint64_t result = qword_1EA0E3B28;
  if (!qword_1EA0E3B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B28);
  }
  return result;
}

unint64_t sub_1BDFE327C()
{
  unint64_t result = qword_1EA0E3B48;
  if (!qword_1EA0E3B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B48);
  }
  return result;
}

uint64_t sub_1BDFE32D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x63696C6F626D7973 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6F74737563 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1BDFE33BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

id _s13CalendarUIKit17CUIKCalendarColorC011deserializeD0ySo7UIColorCSg10Foundation4DataVFZ_0(uint64_t a1, unint64_t a2)
{
  return CalendarColor.platformColor.getter();
}

uint64_t type metadata accessor for CUIKCalendarColor()
{
  return self;
}

unint64_t sub_1BDFE35EC()
{
  unint64_t result = qword_1EA0E3B50;
  if (!qword_1EA0E3B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B50);
  }
  return result;
}

unint64_t sub_1BDFE3644()
{
  unint64_t result = qword_1EA0E3B58;
  if (!qword_1EA0E3B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B58);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CalendarColor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CalendarColor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1BDFE3728(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1BDFE3730(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for CalendarColor()
{
  return &type metadata for CalendarColor;
}

unsigned char *storeEnumTagSinglePayload for CalendarColor.Symbolic(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDFE3818);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarColor.Symbolic()
{
  return &type metadata for CalendarColor.Symbolic;
}

unsigned char *storeEnumTagSinglePayload for CalendarColor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDFE391CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarColor.CodingKeys()
{
  return &type metadata for CalendarColor.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CalendarColor.SymbolicCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1BDFE39F0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarColor.SymbolicCodingKeys()
{
  return &type metadata for CalendarColor.SymbolicCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for CalendarColor.CustomCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDFE3AF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarColor.CustomCodingKeys()
{
  return &type metadata for CalendarColor.CustomCodingKeys;
}

unint64_t sub_1BDFE3B30()
{
  unint64_t result = qword_1EA0E3B60;
  if (!qword_1EA0E3B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B60);
  }
  return result;
}

unint64_t sub_1BDFE3B88()
{
  unint64_t result = qword_1EA0E3B68;
  if (!qword_1EA0E3B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B68);
  }
  return result;
}

unint64_t sub_1BDFE3BE0()
{
  unint64_t result = qword_1EA0E3B70;
  if (!qword_1EA0E3B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B70);
  }
  return result;
}

unint64_t sub_1BDFE3C38()
{
  unint64_t result = qword_1EA0E3B78;
  if (!qword_1EA0E3B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B78);
  }
  return result;
}

unint64_t sub_1BDFE3C90()
{
  unint64_t result = qword_1EA0E3B80;
  if (!qword_1EA0E3B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B80);
  }
  return result;
}

unint64_t sub_1BDFE3CE8()
{
  unint64_t result = qword_1EA0E3B88;
  if (!qword_1EA0E3B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B88);
  }
  return result;
}

unint64_t sub_1BDFE3D40()
{
  unint64_t result = qword_1EA0E3B90;
  if (!qword_1EA0E3B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B90);
  }
  return result;
}

unint64_t sub_1BDFE3D98()
{
  unint64_t result = qword_1EA0E3B98;
  if (!qword_1EA0E3B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3B98);
  }
  return result;
}

unint64_t sub_1BDFE3DF0()
{
  unint64_t result = qword_1EA0E3BA0;
  if (!qword_1EA0E3BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3BA0);
  }
  return result;
}

unint64_t sub_1BDFE3E44()
{
  unint64_t result = qword_1EA0E3BA8;
  if (!qword_1EA0E3BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3BA8);
  }
  return result;
}

uint64_t CodableViaTransform.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v8 = sub_1BE0709E0();
  uint64_t v24 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v21 - v9;
  uint64_t v27 = a3;
  uint64_t v31 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v21 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE071000();
  if (!v4)
  {
    uint64_t v21 = v8;
    uint64_t v22 = v10;
    unint64_t v23 = a1;
    __swift_project_boxed_opaque_existential_1(v30, v30[3]);
    uint64_t v14 = v27;
    uint64_t v15 = v31;
    swift_getAssociatedConformanceWitness();
    sub_1BE070F00();
    uint64_t v16 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, v15, v14);
    uint64_t v17 = v26;
    uint64_t v18 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v15) != 1)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v13, AssociatedTypeWitness);
      (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v25, v16, v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      uint64_t v19 = (uint64_t)v23;
      return __swift_destroy_boxed_opaque_existential_1(v19);
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v16, v21);
    uint64_t v28 = 0;
    unint64_t v29 = 0xE000000000000000;
    sub_1BE070B70();
    sub_1BE0705D0();
    sub_1BE070EE0();
    sub_1BE0705D0();
    sub_1BE070C00();
    swift_allocError();
    sub_1BE070BE0();
    swift_bridgeObjectRelease();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v13, AssociatedTypeWitness);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    a1 = v23;
  }
  uint64_t v19 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v19);
}

uint64_t CodableViaTransform.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v11 = &v14[-v10 - 8];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 56))(v3, a2, a3);
  if (!v4)
  {
    uint64_t v16 = v9;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BE071020();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v14, v15);
    swift_getAssociatedConformanceWitness();
    sub_1BE070F10();
    (*(void (**)(unsigned char *, uint64_t))(v16 + 8))(v11, AssociatedTypeWitness);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t dispatch thunk of static CodableViaTransform.transformDecodedValue(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of static CodableViaTransform.transformValueForEncoding(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t EventLocationPredictedLOIModelObject.type.getter()
{
  return *(void *)v0;
}

uint64_t EventLocationPredictedLOIModelObject.type.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*EventLocationPredictedLOIModelObject.type.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationPredictedLOIModelObject.customLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventLocationPredictedLOIModelObject.customLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*EventLocationPredictedLOIModelObject.customLabel.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationPredictedLOIModelObject.mapItemName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventLocationPredictedLOIModelObject.mapItemName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*EventLocationPredictedLOIModelObject.mapItemName.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationPredictedLOIModelObject.addressCountryCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventLocationPredictedLOIModelObject.addressCountryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*EventLocationPredictedLOIModelObject.addressCountryCode.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationPredictedLOIModelObject.addressThoroughfare.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventLocationPredictedLOIModelObject.addressThoroughfare.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*EventLocationPredictedLOIModelObject.addressThoroughfare.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationPredictedLOIModelObject.addressLocality.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventLocationPredictedLOIModelObject.addressLocality.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*EventLocationPredictedLOIModelObject.addressLocality.modify())()
{
  return nullsub_1;
}

__n128 EventLocationPredictedLOIModelObject.init(type:customLabel:mapItemName:addressCountryCode:addressThoroughfare:addressLocality:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11)
{
  __n128 result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u64[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  return result;
}

uint64_t EventLocationPredictedLOIModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(v6, v7);
  uint64_t v36 = v9;
  uint64_t v37 = v8;
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 24);
  swift_bridgeObjectRetain();
  uint64_t v13 = v12(v10, v11);
  uint64_t v34 = v14;
  uint64_t v35 = v13;
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 32);
  swift_bridgeObjectRetain();
  uint64_t v33 = v17(v15, v16);
  uint64_t v19 = v18;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v21 + 40);
  swift_bridgeObjectRetain();
  uint64_t v23 = v22(v20, v21);
  uint64_t v25 = v24;
  uint64_t v27 = a1[3];
  uint64_t v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 48);
  swift_bridgeObjectRetain();
  uint64_t v29 = v28(v27, v26);
  uint64_t v31 = v30;
  swift_bridgeObjectRetain();
  *a2 = v38;
  a2[1] = v37;
  a2[2] = v36;
  a2[3] = v35;
  a2[4] = v34;
  a2[5] = v33;
  a2[6] = v19;
  a2[7] = v23;
  a2[8] = v25;
  a2[9] = v29;
  a2[10] = v31;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t EventLocationPredictedLOIModelObject.hash(into:)()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[10];
  sub_1BE070FC0();
  if (v1)
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_1BE070FD0();
    if (v2)
    {
LABEL_3:
      sub_1BE070FD0();
      swift_bridgeObjectRetain();
      sub_1BE070590();
      swift_bridgeObjectRelease();
      if (v3) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  sub_1BE070FD0();
  if (v3)
  {
LABEL_4:
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_5;
    }
LABEL_12:
    sub_1BE070FD0();
    if (v5) {
      goto LABEL_6;
    }
    return sub_1BE070FD0();
  }
LABEL_11:
  sub_1BE070FD0();
  if (!v4) {
    goto LABEL_12;
  }
LABEL_5:
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  if (!v5) {
    return sub_1BE070FD0();
  }
LABEL_6:
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BE070590();

  return swift_bridgeObjectRelease();
}

uint64_t EventLocationPredictedLOIModelObject.hashValue.getter()
{
  return sub_1BE070FF0();
}

unint64_t sub_1BDFE4BD8(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x614C6D6F74737563;
      break;
    case 2:
      unint64_t result = 0x4E6D65744970616DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x4C73736572646461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDFE4CC4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDFE4CF4()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDFE4D24()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFE4D8C()
{
  return sub_1BE070FF0();
}

unint64_t sub_1BDFE4DF0()
{
  return sub_1BDFE4BD8(*v0);
}

uint64_t sub_1BDFE4DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFE5F54(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDFE4E20(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1BDFE4E2C(uint64_t a1)
{
  unint64_t v2 = sub_1BDFE58E0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFE4E68(uint64_t a1)
{
  unint64_t v2 = sub_1BDFE58E0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventLocationPredictedLOIModelObject.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3BB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDFE58E0();
  sub_1BE071010();
  if (!v2)
  {
    type metadata accessor for RTLocationOfInterestType(0);
    char v45 = 0;
    sub_1BDFE6210(&qword_1EA0E3BC0);
    sub_1BE070DF0();
    uint64_t v9 = v46;
    char v44 = 1;
    uint64_t v10 = sub_1BE070D50();
    uint64_t v13 = v12;
    uint64_t v38 = v10;
    uint64_t v39 = v9;
    char v43 = 2;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1BE070D50();
    uint64_t v16 = v15;
    uint64_t v36 = v14;
    uint64_t v37 = a2;
    char v42 = 3;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1BE070D50();
    uint64_t v19 = v18;
    uint64_t v34 = v17;
    uint64_t v35 = v6;
    char v41 = 4;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1BE070D50();
    uint64_t v22 = v21;
    uint64_t v33 = v20;
    char v40 = 5;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1BE070D50();
    uint64_t v25 = v24;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v35 = v23;
    v26(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v27 = v37;
    uint64_t v28 = v38;
    void *v37 = v39;
    v27[1] = v28;
    uint64_t v29 = v36;
    _OWORD v27[2] = v13;
    v27[3] = v29;
    uint64_t v30 = v34;
    v27[4] = v16;
    v27[5] = v30;
    uint64_t v31 = v33;
    v27[6] = v19;
    v27[7] = v31;
    uint64_t v32 = v35;
    v27[8] = v22;
    v27[9] = v32;
    v27[10] = v25;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t EventLocationPredictedLOIModelObject.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3BC8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  v15[9] = v1[2];
  v15[10] = v8;
  uint64_t v10 = v1[3];
  v15[7] = v1[4];
  v15[8] = v10;
  uint64_t v11 = v1[5];
  v15[5] = v1[6];
  v15[6] = v11;
  uint64_t v12 = v1[7];
  v15[3] = v1[8];
  void v15[4] = v12;
  uint64_t v13 = v1[10];
  v15[1] = v1[9];
  void v15[2] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDFE58E0();
  sub_1BE071030();
  uint64_t v22 = v9;
  char v21 = 0;
  type metadata accessor for RTLocationOfInterestType(0);
  sub_1BDFE6210(&qword_1EA0E3BD0);
  sub_1BE070EB0();
  if (!v2)
  {
    char v20 = 1;
    sub_1BE070E30();
    char v19 = 2;
    sub_1BE070E30();
    char v18 = 3;
    sub_1BE070E30();
    char v17 = 4;
    sub_1BE070E30();
    char v16 = 5;
    sub_1BE070E30();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BDFE5564@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return EventLocationPredictedLOIModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BDFE557C(void *a1)
{
  return EventLocationPredictedLOIModelObject.encode(to:)(a1);
}

uint64_t sub_1BDFE5594()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BDFE5610()
{
  return sub_1BE0706A0();
}

uint64_t _s13CalendarUIKit36EventLocationPredictedLOIModelObjectV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v10 = a1[8];
  uint64_t v9 = a1[9];
  uint64_t v11 = a1[10];
  uint64_t v12 = a2[2];
  uint64_t v13 = a2[3];
  uint64_t v15 = a2[4];
  uint64_t v14 = a2[5];
  uint64_t v17 = a2[6];
  uint64_t v16 = a2[7];
  uint64_t v18 = a2[8];
  uint64_t v19 = a2[9];
  uint64_t v20 = a2[10];
  if (!v3)
  {
    if (v12) {
      return 0;
    }
    goto LABEL_9;
  }
  if (!v12) {
    return 0;
  }
  if (a1[1] == a2[1] && v3 == v12) {
    goto LABEL_9;
  }
  uint64_t v49 = a1[8];
  uint64_t v51 = a2[8];
  uint64_t v47 = a2[9];
  uint64_t v48 = a1[7];
  uint64_t v45 = a1[10];
  uint64_t v46 = a2[10];
  uint64_t v21 = a1[9];
  uint64_t v22 = a2[7];
  uint64_t v23 = a1[5];
  uint64_t v24 = a1[6];
  uint64_t v25 = a2[6];
  uint64_t v26 = a2[5];
  uint64_t v27 = a2[3];
  char v28 = sub_1BE070EF0();
  uint64_t v13 = v27;
  uint64_t v14 = v26;
  uint64_t v17 = v25;
  uint64_t v7 = v24;
  uint64_t v5 = v23;
  uint64_t v16 = v22;
  uint64_t v9 = v21;
  uint64_t v11 = v45;
  uint64_t v20 = v46;
  uint64_t v19 = v47;
  uint64_t v8 = v48;
  uint64_t v10 = v49;
  uint64_t v18 = v51;
  char v29 = v28;
  uint64_t result = 0;
  if (v29)
  {
LABEL_9:
    if (v6)
    {
      if (!v15) {
        return 0;
      }
      if (v4 != v13 || v6 != v15)
      {
        uint64_t v50 = v9;
        uint64_t v52 = v17;
        uint64_t v31 = v16;
        uint64_t v32 = v5;
        uint64_t v33 = v7;
        uint64_t v34 = v14;
        char v35 = sub_1BE070EF0();
        uint64_t v14 = v34;
        uint64_t v9 = v50;
        uint64_t v17 = v52;
        uint64_t v7 = v33;
        uint64_t v5 = v32;
        uint64_t v16 = v31;
        char v36 = v35;
        uint64_t result = 0;
        if ((v36 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v15)
    {
      return 0;
    }
    if (v7)
    {
      if (!v17) {
        return 0;
      }
      if (v5 != v14 || v7 != v17)
      {
        uint64_t v37 = v18;
        uint64_t v38 = v9;
        uint64_t v39 = v16;
        char v40 = sub_1BE070EF0();
        uint64_t v16 = v39;
        uint64_t v9 = v38;
        uint64_t v18 = v37;
        char v41 = v40;
        uint64_t result = 0;
        if ((v41 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (v10)
    {
      if (!v18) {
        return 0;
      }
      if (v8 != v16 || v10 != v18)
      {
        uint64_t v42 = v9;
        char v43 = sub_1BE070EF0();
        uint64_t v9 = v42;
        char v44 = v43;
        uint64_t result = 0;
        if ((v44 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v11)
    {
      if (v20 && (v9 == v19 && v11 == v20 || (sub_1BE070EF0() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v20)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BDFE58E0()
{
  unint64_t result = qword_1EA0E3BB8;
  if (!qword_1EA0E3BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3BB8);
  }
  return result;
}

unint64_t sub_1BDFE5938()
{
  unint64_t result = qword_1EA0E3BD8;
  if (!qword_1EA0E3BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3BD8);
  }
  return result;
}

uint64_t destroy for EventLocationPredictedLOIModelObject()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EventLocationPredictedLOIModelObject(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EventLocationPredictedLOIModelObject(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for EventLocationPredictedLOIModelObject(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventLocationPredictedLOIModelObject(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 88)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EventLocationPredictedLOIModelObject(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventLocationPredictedLOIModelObject()
{
  return &type metadata for EventLocationPredictedLOIModelObject;
}

uint64_t getEnumTagSinglePayload for EventLocationPredictedLOIModelObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventLocationPredictedLOIModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDFE5E14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventLocationPredictedLOIModelObject.CodingKeys()
{
  return &type metadata for EventLocationPredictedLOIModelObject.CodingKeys;
}

unint64_t sub_1BDFE5E50()
{
  unint64_t result = qword_1EA0E3BE0;
  if (!qword_1EA0E3BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3BE0);
  }
  return result;
}

unint64_t sub_1BDFE5EA8()
{
  unint64_t result = qword_1EA0E3BE8;
  if (!qword_1EA0E3BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3BE8);
  }
  return result;
}

unint64_t sub_1BDFE5F00()
{
  unint64_t result = qword_1EA0E3BF0;
  if (!qword_1EA0E3BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3BF0);
  }
  return result;
}

uint64_t sub_1BDFE5F54(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x614C6D6F74737563 && a2 == 0xEB000000006C6562 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4E6D65744970616DLL && a2 == 0xEB00000000656D61 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BE08D530 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BE08D550 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4C73736572646461 && a2 == 0xEF7974696C61636FLL)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1BDFE6210(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for RTLocationOfInterestType(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDFE6254(uint64_t a1)
{
  return sub_1BDFE627C(a1, (SEL *)&selRef_tertiaryLabelColor, &qword_1EA0F6B68);
}

uint64_t sub_1BDFE6268(uint64_t a1)
{
  return sub_1BDFE627C(a1, (SEL *)&selRef_quaternaryLabelColor, &qword_1EA0F6B70);
}

uint64_t sub_1BDFE627C(uint64_t a1, SEL *a2, uint64_t *a3)
{
  id v4 = [self *a2];
  uint64_t result = MEMORY[0x1C1888840](v4);
  *a3 = result;
  return result;
}

id EventIntegrationModel.displayColor.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t *__return_ptr))(a2 + 24))(&v12);
  uint64_t v2 = v13;
  if (!v13) {
    return 0;
  }
  uint64_t v3 = v12;
  uint64_t v4 = v14;
  unint64_t v5 = v15;
  char v6 = self;
  BOOL v7 = (void *)sub_1BE06EE40();
  int v8 = (void *)sub_1BE0704C0();
  id v9 = objc_msgSend(v6, sel_deserializeColor_providerIdentifier_, v7, v8);

  if (v9)
  {
    id v10 = v9;
    id v9 = (id)MEMORY[0x1C1888840]();
    sub_1BDFDB194(v3, v2, v4, v5);
  }
  else
  {
    sub_1BDFDB194(v3, v2, v4, v5);
  }
  return v9;
}

uint64_t EventIntegrationColor.hash(into:)()
{
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  sub_1BDF840AC(v2, v1);
  sub_1BE06EE60();

  return sub_1BDF841A4(v2, v1);
}

uint64_t static EventIntegrationColor.== infix(_:_:)(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_1BE070EF0() & 1) == 0) {
    return 0;
  }

  return sub_1BDFE6FD8(v2, v3, v4, v5);
}

uint64_t sub_1BDFE64EC()
{
  if (*v0) {
    return 1635017060;
  }
  else {
    return 0xD000000000000012;
  }
}

uint64_t sub_1BDFE6524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFE7758(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFE654C(uint64_t a1)
{
  unint64_t v2 = sub_1BDFE7270();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFE6588(uint64_t a1)
{
  unint64_t v2 = sub_1BDFE7270();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventIntegrationColor.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3C00);
  uint64_t v12 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  BOOL v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDFE7270();
  sub_1BE071030();
  LOBYTE(v13) = 0;
  sub_1BE070E60();
  if (!v2)
  {
    uint64_t v13 = v11;
    uint64_t v14 = v10;
    char v15 = 1;
    sub_1BDFE72C4();
    sub_1BE070EB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v4);
}

uint64_t EventIntegrationColor.hashValue.getter()
{
  return sub_1BE070FF0();
}

uint64_t EventIntegrationColor.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3C10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDFE7270();
  sub_1BE071010();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v15[0]) = 0;
  uint64_t v9 = sub_1BE070DB0();
  uint64_t v11 = v10;
  char v16 = 1;
  sub_1BDFE7318();
  swift_bridgeObjectRetain();
  sub_1BE070DF0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v15[0];
  unint64_t v13 = v15[1];
  swift_bridgeObjectRetain();
  sub_1BDF840AC(v12, v13);
  swift_bridgeObjectRelease();
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  a2[3] = v13;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1BDF841A4(v12, v13);
}

uint64_t sub_1BDFE69FC()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFE6A64()
{
  sub_1BE070590();

  return sub_1BE06EE60();
}

uint64_t sub_1BDFE6AB4()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFE6B18@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return EventIntegrationColor.init(from:)(a1, a2);
}

uint64_t sub_1BDFE6B30(void *a1)
{
  return EventIntegrationColor.encode(to:)(a1);
}

uint64_t sub_1BDFE6B48(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_1BE070EF0() & 1) == 0) {
    return 0;
  }

  return sub_1BDFE6FD8(v2, v3, v4, v5);
}

uint64_t sub_1BDFE6BD4@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1BDF840AC(a2, a3);
      uint64_t v10 = (char *)sub_1BE06EB60();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1BE06EB80();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1BE06EB70();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1BDFE6E38);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1BDF841A4(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1BE06EB60();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1BE06EB80();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1BE06EB70();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1BDFE6E48(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1BDFE6BD4((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1BDFE6F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1BE06EB60();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1BE06EB80();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1BE06EB70();
  sub_1BDFE6BD4(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1BDFE6FD8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1BDFE7240);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_1BDF840AC(a3, a4);
                  sub_1BDF840AC(a1, a2);
                  char v17 = sub_1BDFE6F20((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_1BDF841A4(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_1BDF840AC(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1BDFE6F20(v21, v22, v20, a3, a4);
                  sub_1BDF841A4(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_1BDF840AC(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_1BDF840AC(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1BDFE6E48(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_1BDF841A4(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

unint64_t sub_1BDFE7270()
{
  unint64_t result = qword_1EA0E3C08;
  if (!qword_1EA0E3C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3C08);
  }
  return result;
}

unint64_t sub_1BDFE72C4()
{
  unint64_t result = qword_1EA0E47E0[0];
  if (!qword_1EA0E47E0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA0E47E0);
  }
  return result;
}

unint64_t sub_1BDFE7318()
{
  unint64_t result = qword_1EA0E47D0;
  if (!qword_1EA0E47D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E47D0);
  }
  return result;
}

unint64_t sub_1BDFE7370()
{
  unint64_t result = qword_1EA0E3C18;
  if (!qword_1EA0E3C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3C18);
  }
  return result;
}

uint64_t dispatch thunk of EventIntegrationModel.isCompleted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventIntegrationModel.reminderListTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventIntegrationModel.color.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t destroy for EventIntegrationColor(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);

  return sub_1BDF841A4(v2, v3);
}

void *initializeWithCopy for EventIntegrationColor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_1BDF840AC(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

void *assignWithCopy for EventIntegrationColor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  sub_1BDF840AC(v5, v4);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_1BDF841A4(v6, v7);
  return a1;
}

void *assignWithTake for EventIntegrationColor(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1BDF841A4(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for EventIntegrationColor()
{
  return &type metadata for EventIntegrationColor;
}

unsigned char *storeEnumTagSinglePayload for EventIntegrationColor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDFE7618);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventIntegrationColor.CodingKeys()
{
  return &type metadata for EventIntegrationColor.CodingKeys;
}

unint64_t sub_1BDFE7654()
{
  unint64_t result = qword_1EA0E3C20;
  if (!qword_1EA0E3C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3C20);
  }
  return result;
}

unint64_t sub_1BDFE76AC()
{
  unint64_t result = qword_1EA0E3C28;
  if (!qword_1EA0E3C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3C28);
  }
  return result;
}

unint64_t sub_1BDFE7704()
{
  unint64_t result = qword_1EA0E3C30;
  if (!qword_1EA0E3C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3C30);
  }
  return result;
}

uint64_t sub_1BDFE7758(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001BE08D4C0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t destroy for TitleView(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);

  return sub_1BDF8A570(v2, v3);
}

uint64_t initializeWithCopy for TitleView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BDF8A504(v5, v6);
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  return a1;
}

uint64_t assignWithCopy for TitleView(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = v2[1];
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = v2[2];
  *(void *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[4];
  LOBYTE(v2) = *((unsigned char *)v2 + 40);
  sub_1BDF8A504(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = (_BYTE)v2;
  sub_1BDF8A570(v5, v6);
  return a1;
}

uint64_t assignWithTake for TitleView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = v5;
  sub_1BDF8A570(v6, v7);
  return a1;
}

ValueMetadata *type metadata accessor for TitleView()
{
  return &type metadata for TitleView;
}

uint64_t sub_1BDFE7A20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFE7A3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3C38);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3C40);
  MEMORY[0x1F4188790](v5);
  char v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3C48);
  uint64_t v8 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3C50);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFE7D30(v1, (uint64_t)v4);
  uint64_t v15 = sub_1BE06FB20();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BDF86808((uint64_t)v4, (uint64_t)v7, &qword_1EA0E3C38);
  char v17 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  *char v17 = KeyPath;
  v17[1] = v15;
  sub_1BDF8686C((uint64_t)v4, &qword_1EA0E3C38);
  sub_1BDFE8078();
  sub_1BE06FEB0();
  sub_1BDF8686C((uint64_t)v7, &qword_1EA0E3C40);
  uint64_t v18 = swift_getKeyPath();
  uint64_t v19 = v25;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v10, v25);
  uint64_t v20 = &v14[*(int *)(v12 + 44)];
  *(void *)uint64_t v20 = v18;
  *((void *)v20 + 1) = 2;
  v20[16] = 0;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
  uint64_t v27 = sub_1BE06FFD0();
  swift_retain();
  uint64_t v21 = sub_1BE0701F0();
  uint64_t v22 = v26;
  sub_1BDF86808((uint64_t)v14, v26, &qword_1EA0E3C50);
  swift_release();
  *(void *)(v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3C78) + 36)) = v21;
  return sub_1BDF8686C((uint64_t)v14, &qword_1EA0E3C50);
}

uint64_t sub_1BDFE7D30@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3C80);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3580);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *((void *)a1 + 4);
  char v12 = *((unsigned char *)a1 + 40);
  sub_1BDF8A504(v11, v12);
  char v13 = sub_1BDFCDD28(v11, v12);
  sub_1BDF8A570(v11, v12);
  if (v13)
  {
    sub_1BE06F7A0();
    v21[1] = a2;
    long long v20 = a1[1];
    v22[0] = *a1;
    v22[1] = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3C88);
    sub_1BE070230();
    sub_1BE070380();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v6, v10, v7);
    swift_storeEnumTagMultiPayload();
    sub_1BDF86964(&qword_1EA0E3588, &qword_1EA0E3580);
    sub_1BE06F8E0();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    long long v14 = a1[1];
    long long v23 = *a1;
    long long v24 = v14;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3C88);
    MEMORY[0x1C1888A00](v22, v15);
    long long v23 = v22[0];
    sub_1BDF859F0();
    *(void *)uint64_t v6 = sub_1BE06FD30();
    *((void *)v6 + 1) = v16;
    unsigned char v6[16] = v17 & 1;
    *((void *)v6 + 3) = v18;
    swift_storeEnumTagMultiPayload();
    sub_1BDF86964(&qword_1EA0E3588, &qword_1EA0E3580);
    return sub_1BE06F8E0();
  }
}

uint64_t sub_1BDFE8034@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDFE7A3C(a1);
}

unint64_t sub_1BDFE8078()
{
  unint64_t result = qword_1EA0E3C58;
  if (!qword_1EA0E3C58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3C40);
    sub_1BDFE8118();
    sub_1BDF86964(&qword_1EA0E1410, &qword_1EA0E1418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3C58);
  }
  return result;
}

unint64_t sub_1BDFE8118()
{
  unint64_t result = qword_1EA0E3C60;
  if (!qword_1EA0E3C60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3C38);
    sub_1BDFE818C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3C60);
  }
  return result;
}

unint64_t sub_1BDFE818C()
{
  unint64_t result = qword_1EA0E3C68;
  if (!qword_1EA0E3C68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3C70);
    sub_1BDF86964(&qword_1EA0E3588, &qword_1EA0E3580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3C68);
  }
  return result;
}

unint64_t sub_1BDFE8238()
{
  unint64_t result = qword_1EA0E3C90;
  if (!qword_1EA0E3C90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3C78);
    sub_1BDFE82D8();
    sub_1BDF86964(&qword_1EA0E2FF8, &qword_1EA0E3000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3C90);
  }
  return result;
}

unint64_t sub_1BDFE82D8()
{
  unint64_t result = qword_1EA0E3C98;
  if (!qword_1EA0E3C98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3C50);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3C40);
    sub_1BDFE8078();
    swift_getOpaqueTypeConformance2();
    sub_1BDF86964(&qword_1EA0E1430, &qword_1EA0E1438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3C98);
  }
  return result;
}

uint64_t EventLocationModelObject.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventLocationModelObject.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*EventLocationModelObject.title.modify())()
{
  return nullsub_1;
}

void *EventLocationModelObject.geoLocation.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void EventLocationModelObject.geoLocation.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*EventLocationModelObject.geoLocation.modify())()
{
  return nullsub_1;
}

double EventLocationModelObject.radius.getter()
{
  return *(double *)(v0 + 24);
}

void EventLocationModelObject.radius.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*EventLocationModelObject.radius.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationModelObject.address.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventLocationModelObject.address.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*EventLocationModelObject.address.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationModelObject.contactLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventLocationModelObject.contactLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*EventLocationModelObject.contactLabel.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationModelObject.mapKitHandle.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_1BDF9D478(v1, *(void *)(v0 + 72));
  return v1;
}

uint64_t EventLocationModelObject.mapKitHandle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1BDF859DC(*(void *)(v2 + 64), *(void *)(v2 + 72));
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = a2;
  return result;
}

uint64_t (*EventLocationModelObject.mapKitHandle.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationModelObject.isImprecise.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t EventLocationModelObject.isImprecise.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 80) = result;
  return result;
}

uint64_t (*EventLocationModelObject.isImprecise.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationModelObject.predictedLOI.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[12];
  uint64_t v4 = v1[13];
  uint64_t v5 = v1[14];
  uint64_t v6 = v1[15];
  uint64_t v7 = v1[16];
  uint64_t v8 = v1[17];
  uint64_t v9 = v1[18];
  uint64_t v10 = v1[19];
  uint64_t v11 = v1[20];
  uint64_t v12 = v1[21];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  return sub_1BDFE86FC(v2, v3, v4);
}

uint64_t sub_1BDFE86FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 EventLocationModelObject.predictedLOI.setter(long long *a1)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  long long v5 = a1[3];
  long long v6 = a1[2];
  __n128 v4 = (__n128)a1[4];
  uint64_t v2 = *((void *)a1 + 10);
  sub_1BDFE8808(*(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104));
  *(_OWORD *)(v1 + 88) = v8;
  *(_OWORD *)(v1 + 104) = v7;
  *(_OWORD *)(v1 + 120) = v6;
  *(_OWORD *)(v1 + 136) = v5;
  __n128 result = v4;
  *(__n128 *)(v1 + 152) = v4;
  *(void *)(v1 + 168) = v2;
  return result;
}

uint64_t sub_1BDFE8808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*EventLocationModelObject.predictedLOI.modify())()
{
  return nullsub_1;
}

__n128 EventLocationModelObject.init(title:geoLocation:radius:address:contactLabel:mapKitHandle:isImprecise:predictedLOI:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, char a12, uint64_t a13)
{
  *(double *)(a9 + 24) = a10;
  long long v13 = *(_OWORD *)(a13 + 16);
  *(_OWORD *)(a9 + 88) = *(_OWORD *)a13;
  *(_OWORD *)(a9 + 104) = v13;
  long long v14 = *(_OWORD *)(a13 + 48);
  *(_OWORD *)(a9 + 120) = *(_OWORD *)(a13 + 32);
  uint64_t v15 = *(void *)(a13 + 80);
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 32) = a4;
  *(void *)(a9 + 40) = a5;
  *(void *)(a9 + 48) = a6;
  *(void *)(a9 + 56) = a7;
  *(void *)(a9 + 64) = a8;
  *(void *)(a9 + 72) = a11;
  *(unsigned char *)(a9 + 80) = a12;
  *(_OWORD *)(a9 + 136) = v14;
  __n128 result = *(__n128 *)(a13 + 64);
  *(__n128 *)(a9 + 152) = result;
  *(void *)(a9 + 168) = v15;
  return result;
}

void *EventLocationModelObject.init(_:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  uint64_t v57 = v6;
  uint64_t v58 = v5;
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  double v11 = (*(double (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 48))(v12, v13);
  uint64_t v54 = v15;
  uint64_t v55 = v14;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 56))(v16, v17);
  uint64_t v52 = v19;
  uint64_t v53 = v18;
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 64))(v20, v21);
  uint64_t v70 = v23;
  uint64_t v71 = v22;
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  char v111 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 72))(v24, v25) & 1;
  uint64_t v27 = a1[3];
  uint64_t v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v26 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = sub_1BE0709E0();
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v32 = (char *)&v52 - v31;
  v69(v27, v26);
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v32, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
    uint64_t AssociatedConformanceWitness = 0;
    long long v108 = 0u;
    long long v109 = 0u;
  }
  else
  {
    *((void *)&v109 + 1) = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v108);
    (*(void (**)(uint64_t *, char *, uint64_t))(v33 + 32))(boxed_opaque_existential_1, v32, AssociatedTypeWitness);
  }
  char v35 = v68;
  sub_1BDFE8E94((uint64_t)&v108, (uint64_t)&v106);
  if (v107)
  {
    sub_1BDFBEF38(&v106, (uint64_t)&v73);
    sub_1BDFC3C28((uint64_t)&v73, (uint64_t)v72);
    EventLocationPredictedLOIModelObject.init(_:)(v72, (uint64_t *)&v84);
    uint64_t v68 = v85;
    uint64_t v69 = v84;
    double v67 = v87;
    uint64_t v65 = v86;
    uint64_t v66 = v88;
    uint64_t v63 = v90;
    uint64_t v64 = v89;
    uint64_t v61 = v92;
    uint64_t v62 = v91;
    uint64_t v59 = v94;
    uint64_t v60 = v93;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  else
  {
    uint64_t v68 = 0;
    uint64_t v69 = 0;
    uint64_t v66 = 0;
    double v67 = 0.0;
    uint64_t v63 = 0;
    uint64_t v64 = 0;
    uint64_t v61 = 0;
    uint64_t v62 = 0;
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    uint64_t v65 = 1;
  }
  sub_1BDFE8EFC((uint64_t)&v108);
  sub_1BDFE8808(0, 0, 1);
  uint64_t v37 = v57;
  uint64_t v36 = v58;
  *(void *)&long long v73 = v58;
  *((void *)&v73 + 1) = v57;
  uint64_t v39 = v55;
  uint64_t v38 = v56;
  *(void *)&long long v74 = v56;
  *((double *)&v74 + 1) = v11;
  uint64_t v41 = v53;
  uint64_t v40 = v54;
  *(void *)&long long v75 = v55;
  *((void *)&v75 + 1) = v54;
  uint64_t v42 = v52;
  *(void *)&long long v76 = v53;
  *((void *)&v76 + 1) = v52;
  *(void *)&long long v77 = v71;
  *((void *)&v77 + 1) = v70;
  LOBYTE(v78) = v111;
  *((void *)&v78 + 1) = v69;
  *(void *)&long long v79 = v68;
  *((void *)&v79 + 1) = v65;
  *(double *)&long long v80 = v67;
  *((void *)&v80 + 1) = v66;
  *(void *)&long long v81 = v64;
  *((void *)&v81 + 1) = v63;
  *(void *)&long long v82 = v62;
  *((void *)&v82 + 1) = v61;
  *(void *)&long long v83 = v60;
  *((void *)&v83 + 1) = v59;
  long long v43 = v78;
  v35[4] = v77;
  v35[5] = v43;
  long long v44 = v73;
  long long v45 = v74;
  long long v46 = v76;
  v35[2] = v75;
  v35[3] = v46;
  _OWORD *v35 = v44;
  v35[1] = v45;
  long long v47 = v79;
  long long v48 = v80;
  long long v49 = v83;
  v35[9] = v82;
  v35[10] = v49;
  long long v50 = v81;
  v35[7] = v48;
  v35[8] = v50;
  v35[6] = v47;
  sub_1BDFE8F5C(&v73);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v84 = (void (*)(uint64_t, uint64_t))v36;
  uint64_t v85 = v37;
  uint64_t v86 = v38;
  double v87 = v11;
  uint64_t v88 = v39;
  uint64_t v89 = v40;
  uint64_t v90 = v41;
  uint64_t v91 = v42;
  uint64_t v92 = v71;
  uint64_t v93 = v70;
  LOBYTE(v94) = v111;
  *(_DWORD *)((char *)&v94 + 1) = v72[0];
  HIDWORD(v94) = *(_DWORD *)((char *)v72 + 3);
  uint64_t v95 = v69;
  long long v96 = v68;
  uint64_t v97 = v65;
  double v98 = v67;
  uint64_t v99 = v66;
  uint64_t v100 = v64;
  uint64_t v101 = v63;
  uint64_t v102 = v62;
  uint64_t v103 = v61;
  uint64_t v104 = v60;
  uint64_t v105 = v59;
  return sub_1BDFE9034(&v84);
}

uint64_t sub_1BDFE8E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFE8EFC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1BDFE8F5C(void *a1)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = a1[8];
  unint64_t v4 = a1[9];
  uint64_t v5 = a1[13];
  uint64_t v8 = a1[12];
  uint64_t v9 = a1[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v2;
  swift_bridgeObjectRetain();
  sub_1BDF9D478(v3, v4);
  sub_1BDFE86FC(v9, v8, v5);
  return a1;
}

void *sub_1BDFE9034(void *a1)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = a1[8];
  unint64_t v4 = a1[9];
  uint64_t v5 = a1[13];
  uint64_t v7 = a1[12];
  uint64_t v8 = a1[11];
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDF859DC(v3, v4);
  sub_1BDFE8808(v8, v7, v5);
  return a1;
}

uint64_t EventLocationModelObject.hash(into:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 56);
  unint64_t v4 = *(void *)(v0 + 72);
  long long v8 = *(_OWORD *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 64);
  if (*(void *)(v0 + 8))
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    if (v1)
    {
LABEL_3:
      sub_1BE070FD0();
      id v5 = v1;
      sub_1BE0709A0();

      goto LABEL_6;
    }
  }
  else
  {
    sub_1BE070FD0();
    if (v1) {
      goto LABEL_3;
    }
  }
  sub_1BE070FD0();
LABEL_6:
  sub_1BE070FE0();
  if (v2)
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_8:
      sub_1BE070FD0();
      swift_bridgeObjectRetain();
      sub_1BE070590();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  else
  {
    sub_1BE070FD0();
    if (v3) {
      goto LABEL_8;
    }
  }
  sub_1BE070FD0();
LABEL_11:
  sub_1BE070FD0();
  if (v4 >> 60 != 15)
  {
    sub_1BDF840AC(v7, v4);
    sub_1BE06EE60();
    sub_1BDF859DC(v7, v4);
  }
  sub_1BE070FD0();
  if ((void)v8 == 1) {
    return sub_1BE070FD0();
  }
  sub_1BE070FD0();
  return EventLocationPredictedLOIModelObject.hash(into:)();
}

uint64_t EventLocationModelObject.hashValue.getter()
{
  return sub_1BE070FF0();
}

void *sub_1BDFE93A8()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

double sub_1BDFE93D0()
{
  return *(double *)(v0 + 24);
}

uint64_t sub_1BDFE93D8()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BDFE9408()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_1BDF9D478(v1, *(void *)(v0 + 72));
  return v1;
}

uint64_t sub_1BDFE943C()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t sub_1BDFE9444@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[12];
  uint64_t v4 = v1[13];
  uint64_t v5 = v1[14];
  uint64_t v6 = v1[15];
  uint64_t v7 = v1[16];
  uint64_t v8 = v1[17];
  uint64_t v9 = v1[18];
  uint64_t v10 = v1[19];
  uint64_t v11 = v1[20];
  uint64_t v12 = v1[21];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  return sub_1BDFE86FC(v2, v3, v4);
}

uint64_t sub_1BDFE949C()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFE94E0()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BDFE9520()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7461636F4C6F6567;
      break;
    case 2:
      uint64_t result = 0x737569646172;
      break;
    case 3:
      uint64_t result = 0x73736572646461;
      break;
    case 4:
      uint64_t result = 0x4C746361746E6F63;
      break;
    case 5:
      uint64_t result = 0x614874694B70616DLL;
      break;
    case 6:
      uint64_t result = 0x636572706D497369;
      break;
    case 7:
      uint64_t result = 0x6574636964657270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDFE9640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFEB474(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFE9668(uint64_t a1)
{
  unint64_t v2 = sub_1BDFEA914();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFE96A4(uint64_t a1)
{
  unint64_t v2 = sub_1BDFEA914();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *EventLocationModelObject.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3CA0);
  uint64_t v5 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v60 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1BDFEA914();
  sub_1BE071010();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDF859DC(0, 0xF000000000000000);
    return (void *)sub_1BDFE8808(0, 0, 1);
  }
  else
  {
    uint64_t v58 = v5;
    LOBYTE(v72) = 0;
    uint64_t v9 = v59;
    uint64_t v10 = v7;
    uint64_t v12 = sub_1BE070D50();
    uint64_t v14 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3CB0);
    LOBYTE(v61) = 1;
    sub_1BDFEA9BC(&qword_1EA0E3CB8);
    swift_bridgeObjectRetain();
    sub_1BE070DF0();
    uint64_t v15 = (uint64_t)v60;
    *(void *)&long long v56 = v12;
    *((void *)&v56 + 1) = v14;
    uint64_t v16 = v72;
    LOBYTE(v72) = 2;
    uint64_t v57 = v16;
    id v17 = v16;
    double v18 = COERCE_DOUBLE(sub_1BE070D70());
    if (v19) {
      double v20 = 0.0;
    }
    else {
      double v20 = v18;
    }
    LOBYTE(v72) = 3;
    uint64_t v21 = sub_1BE070D50();
    uint64_t v23 = v22;
    LOBYTE(v72) = 4;
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_1BE070D50();
    uint64_t v54 = v23;
    LOBYTE(v61) = 5;
    uint64_t v25 = v24;
    sub_1BDFE7318();
    uint64_t v55 = v25;
    swift_bridgeObjectRetain();
    sub_1BE070DA0();
    id v52 = v17;
    uint64_t v26 = (uint64_t)v72;
    unint64_t v27 = v73;
    LOBYTE(v72) = 6;
    sub_1BDF9D478(v26, v73);
    LODWORD(v50) = sub_1BE070D60();
    uint64_t v51 = v26;
    char v93 = 7;
    sub_1BDFEA968();
    sub_1BE070DA0();
    int v48 = v50 & 1;
    (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v9);
    uint64_t v29 = v94;
    uint64_t v28 = v95;
    uint64_t v30 = v96;
    uint64_t v58 = v98;
    uint64_t v59 = v97;
    uint64_t v49 = v101;
    uint64_t v50 = v99;
    uint64_t v43 = v100;
    uint64_t v44 = v102;
    long long v45 = v103;
    uint64_t v42 = v94;
    uint64_t v46 = v96;
    uint64_t v47 = v95;
    sub_1BDFE86FC(v94, v95, v96);
    sub_1BDFE8808(0, 0, 1);
    uint64_t v41 = v21;
    long long v61 = v56;
    *(void *)&long long v62 = v57;
    *((double *)&v62 + 1) = v20;
    *(void *)&long long v63 = v21;
    *((void *)&v63 + 1) = v54;
    *(void *)&long long v64 = v53;
    *((void *)&v64 + 1) = v55;
    *(void *)&long long v65 = v51;
    *((void *)&v65 + 1) = v27;
    LOBYTE(v66) = v48;
    *((void *)&v66 + 1) = v29;
    *(void *)&long long v67 = v28;
    *((void *)&v67 + 1) = v30;
    *(void *)&long long v68 = v59;
    *((void *)&v68 + 1) = v58;
    *(void *)&long long v69 = v50;
    *((void *)&v69 + 1) = v43;
    *(void *)&long long v70 = v49;
    *((void *)&v70 + 1) = v44;
    long long v71 = v45;
    sub_1BDFE8F5C(&v61);
    sub_1BDFE8808(v42, v47, v46);
    uint64_t v31 = v51;
    sub_1BDF859DC(v51, v27);
    unint64_t v32 = *((void *)&v56 + 1);
    swift_bridgeObjectRelease();

    uint64_t v33 = v54;
    swift_bridgeObjectRelease();
    uint64_t v34 = v55;
    swift_bridgeObjectRelease();
    long long v35 = v70;
    a2[8] = v69;
    a2[9] = v35;
    a2[10] = v71;
    long long v36 = v66;
    a2[4] = v65;
    a2[5] = v36;
    long long v37 = v68;
    a2[6] = v67;
    a2[7] = v37;
    long long v38 = v62;
    *a2 = v61;
    a2[1] = v38;
    long long v39 = v64;
    a2[2] = v63;
    a2[3] = v39;
    __swift_destroy_boxed_opaque_existential_1(v15);
    uint64_t v72 = (void *)v56;
    unint64_t v73 = v32;
    long long v74 = v57;
    double v75 = v20;
    uint64_t v76 = v41;
    uint64_t v77 = v33;
    uint64_t v78 = v53;
    uint64_t v79 = v34;
    uint64_t v80 = v31;
    unint64_t v81 = v27;
    char v82 = v48;
    uint64_t v83 = v42;
    uint64_t v84 = v47;
    uint64_t v85 = v46;
    uint64_t v86 = v59;
    uint64_t v87 = v58;
    uint64_t v88 = v50;
    uint64_t v89 = v43;
    uint64_t v90 = v49;
    uint64_t v91 = v44;
    long long v92 = v45;
    return sub_1BDFE9034(&v72);
  }
}

uint64_t EventLocationModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3CC8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v34 = *(void *)(v1 + 32);
  uint64_t v35 = v7;
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v32 = *(void *)(v1 + 48);
  uint64_t v33 = v8;
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v28 = *(void *)(v1 + 64);
  uint64_t v29 = *(void *)(v1 + 72);
  uint64_t v30 = v9;
  int v27 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v31 = *(void *)(v1 + 88);
  uint64_t v18 = *(void *)(v1 + 96);
  uint64_t v19 = *(void *)(v1 + 104);
  uint64_t v26 = *(void *)(v1 + 112);
  uint64_t v25 = *(void *)(v1 + 120);
  uint64_t v24 = *(void *)(v1 + 128);
  uint64_t v23 = *(void *)(v1 + 136);
  uint64_t v22 = *(void *)(v1 + 144);
  uint64_t v21 = *(void *)(v1 + 152);
  uint64_t v10 = *(void *)(v1 + 168);
  uint64_t v20 = *(void *)(v1 + 160);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_1BDFEA914();
  sub_1BE071030();
  LOBYTE(v37) = 0;
  uint64_t v15 = v36;
  sub_1BE070E30();
  if (!v15)
  {
    uint64_t v36 = v10;
    uint64_t v16 = v31;
    uint64_t v37 = v35;
    char v48 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3CB0);
    sub_1BDFEA9BC(&qword_1EA0E3CD0);
    sub_1BE070EB0();
    LOBYTE(v37) = 2;
    sub_1BE070E80();
    LOBYTE(v37) = 3;
    sub_1BE070E30();
    LOBYTE(v37) = 4;
    sub_1BE070E30();
    uint64_t v37 = v28;
    uint64_t v38 = v29;
    char v48 = 5;
    sub_1BDFE72C4();
    sub_1BE070E50();
    LOBYTE(v37) = 6;
    sub_1BE070E70();
    uint64_t v37 = v16;
    uint64_t v38 = v18;
    uint64_t v39 = v19;
    uint64_t v40 = v26;
    uint64_t v41 = v25;
    uint64_t v42 = v24;
    uint64_t v43 = v23;
    uint64_t v44 = v22;
    uint64_t v45 = v21;
    uint64_t v46 = v20;
    uint64_t v47 = v36;
    char v48 = 7;
    sub_1BDFEAA04();
    sub_1BE070E50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v14);
}

void *sub_1BDFEA2A4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return EventLocationModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BDFEA2BC(void *a1)
{
  return EventLocationModelObject.encode(to:)(a1);
}

BOOL _s13CalendarUIKit24EventLocationModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 16);
  double v5 = *(double *)(a1 + 24);
  uint64_t v85 = *(void *)(a1 + 32);
  uint64_t v91 = *(void *)(a1 + 40);
  uint64_t v83 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v87 = *(void *)(a1 + 56);
  unint64_t v7 = *(void *)(a1 + 72);
  int v79 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v8 = *(void *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 96);
  uint64_t v10 = *(void *)(a1 + 112);
  uint64_t v11 = *(void *)(a1 + 128);
  uint64_t v12 = *(void *)(a1 + 144);
  uint64_t v13 = *(void *)(a1 + 160);
  uint64_t v77 = *(void *)(a1 + 168);
  uint64_t v14 = *(void *)(a2 + 8);
  uint64_t v15 = *(void **)(a2 + 16);
  double v16 = *(double *)(a2 + 24);
  uint64_t v84 = *(void *)(a2 + 32);
  uint64_t v88 = *(void *)(a2 + 40);
  uint64_t v86 = *(void *)(a2 + 56);
  uint64_t v80 = *(void *)(a2 + 64);
  unint64_t v81 = *(void *)(a2 + 72);
  uint64_t v82 = *(void *)(a2 + 48);
  int v78 = *(unsigned __int8 *)(a2 + 80);
  uint64_t v17 = *(void *)(a2 + 88);
  uint64_t v18 = *(void *)(a2 + 96);
  uint64_t v19 = *(void *)(a2 + 152);
  uint64_t v76 = *(void *)(a2 + 160);
  uint64_t v20 = *(void *)(a2 + 168);
  if (!v3)
  {
    uint64_t v70 = *(void *)(a2 + 104);
    uint64_t v71 = *(void *)(a1 + 104);
    uint64_t v62 = *(void *)(a2 + 112);
    uint64_t v63 = *(void *)(a2 + 120);
    uint64_t v64 = *(void *)(a2 + 128);
    uint64_t v65 = *(void *)(a2 + 136);
    uint64_t v66 = *(void *)(a2 + 144);
    uint64_t v67 = *(void *)(a1 + 120);
    uint64_t v68 = *(void *)(a1 + 136);
    uint64_t v69 = *(void *)(a1 + 152);
    if (v14) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v14) {
    return 0;
  }
  uint64_t v70 = *(void *)(a2 + 104);
  uint64_t v71 = *(void *)(a1 + 104);
  uint64_t v62 = *(void *)(a2 + 112);
  uint64_t v63 = *(void *)(a2 + 120);
  uint64_t v64 = *(void *)(a2 + 128);
  uint64_t v65 = *(void *)(a2 + 136);
  uint64_t v66 = *(void *)(a2 + 144);
  uint64_t v67 = *(void *)(a1 + 120);
  uint64_t v68 = *(void *)(a1 + 136);
  uint64_t v69 = *(void *)(a1 + 152);
  if (*(void *)a1 == *(void *)a2 && v3 == v14) {
    goto LABEL_8;
  }
  unint64_t v72 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 144);
  uint64_t v58 = *(void *)(a1 + 112);
  uint64_t v60 = *(void *)(a1 + 128);
  uint64_t v22 = *(void *)(a1 + 160);
  uint64_t v23 = *(void *)(a1 + 64);
  char v24 = sub_1BE070EF0();
  uint64_t v6 = v23;
  uint64_t v13 = v22;
  uint64_t v12 = v21;
  unint64_t v7 = v72;
  uint64_t v10 = v58;
  uint64_t v11 = v60;
  char v25 = v24;
  BOOL result = 0;
  if (v25)
  {
LABEL_8:
    if (v4)
    {
      if (!v15) {
        return 0;
      }
      uint64_t v55 = v6;
      uint64_t v56 = v12;
      unint64_t v73 = v7;
      uint64_t v27 = v13;
      uint64_t v59 = v17;
      sub_1BDFEB8E8();
      id v28 = v15;
      id v29 = v4;
      char v30 = sub_1BE070990();

      BOOL result = 0;
      if ((v30 & 1) == 0) {
        return result;
      }
      uint64_t v17 = v59;
      uint64_t v6 = v55;
      uint64_t v12 = v56;
      uint64_t v13 = v27;
      unint64_t v7 = v73;
      if (v5 != v16) {
        return result;
      }
    }
    else
    {
      BOOL result = 0;
      if (v15 || v5 != v16) {
        return result;
      }
    }
    if (v91)
    {
      if (!v88) {
        return 0;
      }
      if (v85 != v84 || v91 != v88)
      {
        unint64_t v74 = v7;
        uint64_t v31 = v12;
        uint64_t v32 = v13;
        uint64_t v33 = v6;
        char v34 = sub_1BE070EF0();
        uint64_t v6 = v33;
        uint64_t v13 = v32;
        uint64_t v12 = v31;
        unint64_t v7 = v74;
        char v35 = v34;
        BOOL result = 0;
        if ((v35 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v88)
    {
      return 0;
    }
    if (v87)
    {
      if (!v86) {
        return 0;
      }
      if (v83 != v82 || v87 != v86)
      {
        unint64_t v75 = v7;
        uint64_t v36 = v12;
        uint64_t v37 = v13;
        uint64_t v38 = v6;
        char v39 = sub_1BE070EF0();
        uint64_t v6 = v38;
        uint64_t v13 = v37;
        uint64_t v12 = v36;
        unint64_t v7 = v75;
        char v40 = v39;
        BOOL result = 0;
        if ((v40 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v86)
    {
      return 0;
    }
    if (v7 >> 60 == 15)
    {
      unint64_t v41 = v81;
      if (v81 >> 60 == 15)
      {
        if (v79 != v78) {
          return 0;
        }
        goto LABEL_39;
      }
    }
    else
    {
      unint64_t v41 = v81;
      if (v81 >> 60 != 15)
      {
        uint64_t v89 = v13;
        uint64_t v57 = v12;
        uint64_t v61 = v11;
        uint64_t v43 = v20;
        unint64_t v44 = v7;
        uint64_t v45 = v19;
        uint64_t v46 = v6;
        sub_1BDF9D478(v6, v44);
        sub_1BDF9D478(v80, v81);
        char v47 = sub_1BDFE6FD8(v46, v44, v80, v81);
        sub_1BDF859DC(v80, v81);
        sub_1BDF859DC(v46, v44);
        BOOL result = 0;
        if ((v47 & 1) == 0) {
          return result;
        }
        uint64_t v19 = v45;
        uint64_t v20 = v43;
        uint64_t v13 = v89;
        uint64_t v11 = v61;
        uint64_t v12 = v57;
        if ((v79 ^ v78)) {
          return result;
        }
LABEL_39:
        uint64_t v48 = v71;
        if (v71 == 1)
        {
          uint64_t v49 = v70;
          if (v70 == 1) {
            return 1;
          }
          goto LABEL_44;
        }
        uint64_t v93 = v8;
        uint64_t v94 = v9;
        uint64_t v95 = v71;
        uint64_t v96 = v10;
        uint64_t v97 = v67;
        uint64_t v98 = v11;
        uint64_t v99 = v68;
        uint64_t v100 = v12;
        uint64_t v101 = v69;
        uint64_t v102 = v13;
        uint64_t v103 = v77;
        if (v70 == 1)
        {
          uint64_t v90 = v19;
          uint64_t v50 = v10;
          uint64_t v51 = v20;
          uint64_t v52 = v12;
          uint64_t v53 = v13;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v13 = v53;
          uint64_t v12 = v52;
          uint64_t v20 = v51;
          uint64_t v10 = v50;
          uint64_t v49 = 1;
          uint64_t v48 = v71;
          uint64_t v19 = v90;
LABEL_44:
          uint64_t v93 = v8;
          uint64_t v94 = v9;
          uint64_t v95 = v48;
          uint64_t v96 = v10;
          uint64_t v97 = v67;
          uint64_t v98 = v11;
          uint64_t v99 = v68;
          uint64_t v100 = v12;
          uint64_t v101 = v69;
          uint64_t v102 = v13;
          uint64_t v103 = v77;
          uint64_t v104 = v17;
          uint64_t v105 = v18;
          uint64_t v106 = v49;
          uint64_t v107 = v62;
          uint64_t v108 = v63;
          uint64_t v109 = v64;
          uint64_t v110 = v65;
          uint64_t v111 = v66;
          uint64_t v112 = v19;
          uint64_t v113 = v76;
          uint64_t v114 = v20;
          sub_1BDFE86FC(v17, v18, v49);
          sub_1BDFEB828(&v93);
          return 0;
        }
        v92[0] = v17;
        v92[1] = v18;
        v92[2] = v70;
        v92[3] = v62;
        v92[4] = v63;
        void v92[5] = v64;
        v92[6] = v65;
        v92[7] = v66;
        v92[8] = v19;
        v92[9] = v76;
        v92[10] = v20;
        char v54 = _s13CalendarUIKit36EventLocationPredictedLOIModelObjectV2eeoiySbAC_ACtFZ_0(&v93, v92);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (v54 & 1) != 0;
      }
    }
    uint64_t v42 = v6;
    sub_1BDF9D478(v6, v7);
    sub_1BDF9D478(v80, v41);
    sub_1BDF859DC(v42, v7);
    sub_1BDF859DC(v80, v41);
    return 0;
  }
  return result;
}

unint64_t sub_1BDFEA914()
{
  unint64_t result = qword_1EA0E3CA8;
  if (!qword_1EA0E3CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3CA8);
  }
  return result;
}

unint64_t sub_1BDFEA968()
{
  unint64_t result = qword_1EA0E3CC0;
  if (!qword_1EA0E3CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3CC0);
  }
  return result;
}

uint64_t sub_1BDFEA9BC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3CB0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BDFEAA04()
{
  unint64_t result = qword_1EA0E3CD8;
  if (!qword_1EA0E3CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3CD8);
  }
  return result;
}

_UNKNOWN **sub_1BDFEAA58()
{
  return &protocol witness table for EventLocationPredictedLOIModelObject;
}

unint64_t sub_1BDFEAA68()
{
  unint64_t result = qword_1EA0E3CE0;
  if (!qword_1EA0E3CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3CE0);
  }
  return result;
}

id sub_1BDFEAABC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 16);
  *a2 = v2;
  return v2;
}

void sub_1BDFEAAC8(id *a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *a1;

  *(void *)(a2 + 16) = v3;
}

uint64_t destroy for EventLocationModelObject(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >> 60 != 15) {
    sub_1BDF841A4(*(void *)(a1 + 64), v2);
  }
  uint64_t result = *(void *)(a1 + 104);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for EventLocationModelObject(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  id v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  unint64_t v7 = (uint64_t *)(a2 + 64);
  unint64_t v8 = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  id v9 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v7;
  }
  else
  {
    uint64_t v10 = *v7;
    sub_1BDF840AC(*v7, v8);
    *(void *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = v8;
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v11 = *(void *)(a2 + 104);
  if (v11 == 1)
  {
    long long v12 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v12;
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    long long v13 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    uint64_t v14 = *(void *)(a2 + 112);
    uint64_t v15 = *(void *)(a2 + 120);
    *(void *)(a1 + 104) = v11;
    *(void *)(a1 + 112) = v14;
    uint64_t v16 = *(void *)(a2 + 128);
    uint64_t v17 = *(void *)(a2 + 136);
    *(void *)(a1 + 120) = v15;
    *(void *)(a1 + 128) = v16;
    uint64_t v18 = *(void *)(a2 + 144);
    uint64_t v19 = *(void *)(a2 + 152);
    *(void *)(a1 + 136) = v17;
    *(void *)(a1 + 144) = v18;
    uint64_t v20 = *(void *)(a2 + 160);
    uint64_t v21 = *(void *)(a2 + 168);
    *(void *)(a1 + 152) = v19;
    *(void *)(a1 + 160) = v20;
    *(void *)(a1 + 168) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for EventLocationModelObject(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  id v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v7 = (uint64_t *)(a2 + 64);
  unint64_t v8 = *(void *)(a2 + 72);
  if (*(void *)(a1 + 72) >> 60 == 15)
  {
    if (v8 >> 60 != 15)
    {
      uint64_t v9 = *v7;
      sub_1BDF840AC(*v7, *(void *)(a2 + 72));
      *(void *)(a1 + 64) = v9;
      *(void *)(a1 + 72) = v8;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v8 >> 60 == 15)
  {
    sub_1BDFCECD8(a1 + 64);
LABEL_6:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v7;
    goto LABEL_8;
  }
  uint64_t v10 = *v7;
  sub_1BDF840AC(*v7, *(void *)(a2 + 72));
  uint64_t v11 = *(void *)(a1 + 64);
  unint64_t v12 = *(void *)(a1 + 72);
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v8;
  sub_1BDF841A4(v11, v12);
LABEL_8:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  long long v13 = (_OWORD *)(a1 + 88);
  uint64_t v14 = (_OWORD *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 104);
  if (*(void *)(a1 + 104) == 1)
  {
    if (v15 == 1)
    {
      long long v16 = *(_OWORD *)(a2 + 104);
      _OWORD *v13 = *v14;
      *(_OWORD *)(a1 + 104) = v16;
      long long v17 = *(_OWORD *)(a2 + 120);
      long long v18 = *(_OWORD *)(a2 + 136);
      long long v19 = *(_OWORD *)(a2 + 152);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(_OWORD *)(a1 + 136) = v18;
      *(_OWORD *)(a1 + 152) = v19;
      *(_OWORD *)(a1 + 120) = v17;
    }
    else
    {
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v15 == 1)
  {
    sub_1BDFEAFC0(a1 + 88);
    long long v20 = *(_OWORD *)(a2 + 104);
    _OWORD *v13 = *v14;
    *(_OWORD *)(a1 + 104) = v20;
    long long v22 = *(_OWORD *)(a2 + 136);
    long long v21 = *(_OWORD *)(a2 + 152);
    long long v23 = *(_OWORD *)(a2 + 120);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(_OWORD *)(a1 + 136) = v22;
    *(_OWORD *)(a1 + 152) = v21;
    *(_OWORD *)(a1 + 120) = v23;
  }
  else
  {
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t sub_1BDFEAFC0(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for EventLocationModelObject(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  unint64_t v8 = (_OWORD *)(a2 + 64);
  unint64_t v9 = *(void *)(a1 + 72);
  if (v9 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v10 = *(void *)(a2 + 72);
  if (v10 >> 60 == 15)
  {
    sub_1BDFCECD8(a1 + 64);
LABEL_4:
    *(_OWORD *)(a1 + 64) = *v8;
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)v8;
  *(void *)(a1 + 72) = v10;
  sub_1BDF841A4(v11, v9);
LABEL_6:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  if (*(void *)(a1 + 104) != 1)
  {
    uint64_t v12 = *(void *)(a2 + 104);
    if (v12 != 1)
    {
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(void *)(a1 + 104) = v12;
      swift_bridgeObjectRelease();
      uint64_t v15 = *(void *)(a2 + 120);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v15;
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v17;
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(a2 + 168);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = v18;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BDFEAFC0(a1 + 88);
  }
  long long v13 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v13;
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  long long v14 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v14;
  return a1;
}

uint64_t getEnumTagSinglePayload for EventLocationModelObject(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 176)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EventLocationModelObject(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 176) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventLocationModelObject()
{
  return &type metadata for EventLocationModelObject;
}

unsigned char *storeEnumTagSinglePayload for EventLocationModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BDFEB334);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventLocationModelObject.CodingKeys()
{
  return &type metadata for EventLocationModelObject.CodingKeys;
}

unint64_t sub_1BDFEB370()
{
  unint64_t result = qword_1EA0E3CE8;
  if (!qword_1EA0E3CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3CE8);
  }
  return result;
}

unint64_t sub_1BDFEB3C8()
{
  unint64_t result = qword_1EA0E3CF0;
  if (!qword_1EA0E3CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3CF0);
  }
  return result;
}

unint64_t sub_1BDFEB420()
{
  unint64_t result = qword_1EA0E3CF8;
  if (!qword_1EA0E3CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3CF8);
  }
  return result;
}

uint64_t sub_1BDFEB474(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461636F4C6F6567 && a2 == 0xEB000000006E6F69 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x737569646172 && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4C746361746E6F63 && a2 == 0xEC0000006C656261 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x614874694B70616DLL && a2 == 0xEC000000656C646ELL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x636572706D497369 && a2 == 0xEB00000000657369 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6574636964657270 && a2 == 0xEC000000494F4C64)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t *sub_1BDFEB828(uint64_t *a1)
{
  uint64_t v2 = a1[11];
  uint64_t v3 = a1[12];
  uint64_t v4 = a1[13];
  sub_1BDFE8808(*a1, a1[1], a1[2]);
  sub_1BDFE8808(v2, v3, v4);
  return a1;
}

unint64_t sub_1BDFEB8E8()
{
  unint64_t result = qword_1EA0E3D00;
  if (!qword_1EA0E3D00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA0E3D00);
  }
  return result;
}

uint64_t sub_1BDFEB928(uint64_t a1)
{
  return sub_1BDFEB974(a1, qword_1EA0F6B78);
}

uint64_t sub_1BDFEB948(uint64_t a1)
{
  return sub_1BDFEB974(a1, qword_1EA0F6B90);
}

uint64_t sub_1BDFEB974(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1BE06F1C0();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1BE06F1B0();
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

ValueMetadata *type metadata accessor for NotesView()
{
  return &type metadata for NotesView;
}

uint64_t sub_1BDFEBA60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BDFEBA7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3D08);
  MEMORY[0x1F4188790](v42);
  uint64_t v43 = (uint64_t)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3D10);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v41 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3580);
  uint64_t v7 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  unint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3D18);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  long long v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v38 - v14;
  uint64_t v16 = *((void *)v1 + 4);
  char v17 = *((unsigned char *)v2 + 40);
  sub_1BDF8A504(v16, v17);
  char v18 = sub_1BDFCDD28(v16, v17);
  sub_1BDF8A570(v16, v17);
  if (v18)
  {
    sub_1BE06F7A0();
    uint64_t v38 = v30;
    uint64_t v39 = a1;
    long long v31 = v2[1];
    v44[0] = *v2;
    v44[1] = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3C88);
    sub_1BE070230();
    sub_1BE070380();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v33 = v40;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v9, v40);
    char v34 = &v13[*(int *)(v10 + 36)];
    *(void *)char v34 = KeyPath;
    *((void *)v34 + 1) = 10;
    v34[16] = 0;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v33);
    sub_1BDFB8210((uint64_t)v13, (uint64_t)v15, &qword_1EA0E3D18);
    sub_1BDFEC034((uint64_t)v15, v43);
    swift_storeEnumTagMultiPayload();
    sub_1BDFEBF68();
    uint64_t v35 = (uint64_t)v41;
    sub_1BE06F8E0();
    sub_1BDFEC09C((uint64_t)v15);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3D28);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
    return sub_1BDFB8210(v35, v39, &qword_1EA0E3D10);
  }
  else
  {
    uint64_t v19 = v43;
    long long v20 = v2[1];
    long long v45 = *v2;
    long long v46 = v20;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3C88);
    MEMORY[0x1C1888A00](v44);
    long long v22 = v44[0];
    swift_bridgeObjectRelease();
    uint64_t v23 = HIBYTE(*((void *)&v22 + 1)) & 0xFLL;
    if ((*((void *)&v22 + 1) & 0x2000000000000000) == 0) {
      uint64_t v23 = v22 & 0xFFFFFFFFFFFFLL;
    }
    if (v23)
    {
      long long v24 = v2[1];
      long long v45 = *v2;
      long long v46 = v24;
      MEMORY[0x1C1888A00](v44, v21);
      long long v45 = v44[0];
      sub_1BDF859F0();
      *(void *)uint64_t v19 = sub_1BE06FD30();
      *(void *)(v19 + 8) = v25;
      *(unsigned char *)(v19 + 16) = v26 & 1;
      *(void *)(v19 + 24) = v27;
      swift_storeEnumTagMultiPayload();
      sub_1BDFEBF68();
      sub_1BE06F8E0();
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3D28);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a1, 0, 1, v28);
    }
    else
    {
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3D28);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(a1, 1, 1, v37);
    }
  }
}

unint64_t sub_1BDFEBF68()
{
  unint64_t result = qword_1EA0E3D20;
  if (!qword_1EA0E3D20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3D18);
    sub_1BDF86964(&qword_1EA0E3588, &qword_1EA0E3580);
    sub_1BDF86964(&qword_1EA0E1430, &qword_1EA0E1438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3D20);
  }
  return result;
}

uint64_t sub_1BDFEC034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3D18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BDFEC09C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3D18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BDFEC100()
{
  unint64_t result = qword_1EA0E3D30;
  if (!qword_1EA0E3D30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3D10);
    sub_1BDFEC174();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3D30);
  }
  return result;
}

unint64_t sub_1BDFEC174()
{
  unint64_t result = qword_1EA0E3D38;
  if (!qword_1EA0E3D38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3D28);
    sub_1BDFEBF68();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3D38);
  }
  return result;
}

uint64_t FakeDataReader.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t FakeDataReader.init(datasetName:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1BE06EE10();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v18 - v10;
  id v12 = objc_msgSend(self, sel_mainBundle);
  strcpy((char *)v18, "FakeDatasets/");
  v18[7] = -4864;
  sub_1BE0705D0();
  swift_bridgeObjectRelease();
  long long v13 = (void *)sub_1BE0704C0();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_1BE0704C0();
  id v15 = objc_msgSend(v12, sel_URLForResource_withExtension_, v13, v14);

  if (v15)
  {
    sub_1BE06EDE0();

    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v16(v4, v9, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
    if (result != 1)
    {
      v16(v11, v4, v5);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v16)(a1, v11, v5);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  }
  __break(1u);
  return result;
}

CalendarUIKit::FakeDataReader::Dataset __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> FakeDataReader.readData()()
{
  uint64_t v156 = v0;
  uint64_t v2 = type metadata accessor for EventModelObject();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v6 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (uint64_t *)((char *)&v146 - v7);
  uint64_t v9 = type metadata accessor for EventCalendarModelObject();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9 - 8);
  long long v13 = (char *)&v146 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  id v15 = (uint64_t *)((char *)&v146 - v14);
  uint64_t v16 = (void *)sub_1BE06EE20();
  if (v1) {
    goto LABEL_67;
  }
  uint64_t v153 = v3;
  uint64_t v154 = v10;
  uint64_t v159 = v15;
  uint64_t v160 = v13;
  uint64_t v19 = (uint64_t)v16;
  unint64_t v20 = (unint64_t)v17;
  sub_1BE06EAE0();
  swift_allocObject();
  sub_1BE06EAD0();
  sub_1BDFED16C();
  sub_1BE06EAC0();
  uint64_t v155 = 0;
  uint64_t v147 = v19;
  swift_release();
  uint64_t v152 = *((void *)&v165 + 1);
  uint64_t v21 = v165;
  uint64_t v149 = v166;
  int64_t v22 = *(void *)(v165 + 16);
  uint64_t v23 = MEMORY[0x1E4FBC860];
  uint64_t v158 = v8;
  unint64_t v148 = v20;
  if (v22)
  {
    *(void *)&v162[0] = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRetain();
    sub_1BDFF48D8(0, v22, 0);
    uint64_t v24 = *(void *)&v162[0];
    int64_t v25 = v22 - 1;
    for (uint64_t i = 32; ; i += 72)
    {
      v173[0] = *(_OWORD *)(v21 + i);
      long long v27 = *(_OWORD *)(v21 + i + 16);
      long long v28 = *(_OWORD *)(v21 + i + 32);
      long long v29 = *(_OWORD *)(v21 + i + 48);
      *(_DWORD *)((char *)v174 + 15) = *(_DWORD *)(v21 + i + 63);
      v173[2] = v28;
      v174[0] = v29;
      v173[1] = v27;
      sub_1BDFF48F8((uint64_t)v173);
      sub_1BDFED1C0((uint64_t)&v165);
      sub_1BDFF4950((uint64_t)v173);
      uint64_t v30 = v24;
      *(void *)&v162[0] = v24;
      unint64_t v32 = *(void *)(v24 + 16);
      unint64_t v31 = *(void *)(v24 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_1BDFF48D8(v31 > 1, v32 + 1, 1);
        uint64_t v30 = *(void *)&v162[0];
      }
      *(void *)(v30 + 16) = v32 + 1;
      uint64_t v24 = v30;
      uint64_t v33 = v30 + 136 * v32;
      *(_OWORD *)(v33 + 32) = v165;
      long long v34 = v166;
      long long v35 = v167;
      long long v36 = v169;
      *(_OWORD *)(v33 + 80) = v168;
      *(_OWORD *)(v33 + 96) = v36;
      *(_OWORD *)(v33 + 48) = v34;
      *(_OWORD *)(v33 + 64) = v35;
      long long v37 = v170;
      long long v38 = v171;
      long long v39 = v172[0];
      *(void *)(v33 + 159) = *(void *)((char *)v172 + 15);
      *(_OWORD *)(v33 + 128) = v38;
      *(_OWORD *)(v33 + 144) = v39;
      *(_OWORD *)(v33 + 112) = v37;
      if (!v25) {
        break;
      }
      --v25;
    }
    swift_bridgeObjectRelease();
    uint64_t v8 = v158;
    uint64_t v23 = v24;
  }
  uint64_t v40 = *(void *)(v23 + 16);
  unint64_t v41 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v42 = v156;
  uint64_t v157 = v6;
  uint64_t v151 = v21;
  if (v40)
  {
    uint64_t v175 = v40;
    uint64_t v43 = swift_bridgeObjectRetain();
    long long v44 = *(_OWORD *)(v43 + 128);
    long long v170 = *(_OWORD *)(v43 + 112);
    long long v171 = v44;
    v172[0] = *(_OWORD *)(v43 + 144);
    *(void *)((char *)v172 + 15) = *(void *)(v43 + 159);
    long long v45 = *(_OWORD *)(v43 + 48);
    long long v46 = *(_OWORD *)(v43 + 80);
    long long v47 = *(_OWORD *)(v43 + 96);
    long long v167 = *(_OWORD *)(v43 + 64);
    long long v168 = v46;
    long long v169 = v47;
    uint64_t v161 = v43;
    long long v165 = *(_OWORD *)(v43 + 32);
    long long v166 = v45;
    uint64_t v49 = *((void *)&v165 + 1);
    uint64_t v48 = v165;
    sub_1BDFC8920((uint64_t)&v165);
    swift_bridgeObjectRetain();
    uint64_t v50 = v41;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v164 = v50;
    unint64_t v53 = sub_1BDFC7B88(v48, v49);
    uint64_t v54 = v50[2];
    BOOL v55 = (v52 & 1) == 0;
    uint64_t v56 = v54 + v55;
    if (__OFADD__(v54, v55))
    {
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      uint64_t v16 = (void *)sub_1BE070F60();
      __break(1u);
      goto LABEL_67;
    }
    char v57 = v52;
    uint64_t v58 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v59 = 168;
    while (1)
    {
      if (v58[3] >= v56)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1BDFF5FDC();
        }
      }
      else
      {
        sub_1BDFF5864(v56, isUniquelyReferenced_nonNull_native & 1);
        unint64_t v60 = sub_1BDFC7B88(v48, v49);
        if ((v57 & 1) != (v61 & 1)) {
          goto LABEL_66;
        }
        unint64_t v53 = v60;
      }
      if (v57)
      {
        unint64_t v41 = v164;
        uint64_t v62 = v164[7] + 136 * v53;
        v162[0] = *(_OWORD *)v62;
        long long v63 = *(_OWORD *)(v62 + 64);
        long long v65 = *(_OWORD *)(v62 + 16);
        long long v64 = *(_OWORD *)(v62 + 32);
        v162[3] = *(_OWORD *)(v62 + 48);
        v162[4] = v63;
        v162[1] = v65;
        v162[2] = v64;
        long long v67 = *(_OWORD *)(v62 + 96);
        long long v66 = *(_OWORD *)(v62 + 112);
        long long v68 = *(_OWORD *)(v62 + 80);
        *(void *)((char *)v163 + 15) = *(void *)(v62 + 127);
        v162[6] = v67;
        v163[0] = v66;
        v162[5] = v68;
        *(_OWORD *)uint64_t v62 = v165;
        long long v69 = v166;
        long long v70 = v167;
        long long v71 = v169;
        *(_OWORD *)(v62 + 48) = v168;
        *(_OWORD *)(v62 + 64) = v71;
        *(_OWORD *)(v62 + 16) = v69;
        *(_OWORD *)(v62 + 32) = v70;
        long long v72 = v170;
        long long v73 = v171;
        long long v74 = v172[0];
        *(void *)(v62 + 127) = *(void *)((char *)v172 + 15);
        *(_OWORD *)(v62 + 96) = v73;
        *(_OWORD *)(v62 + 112) = v74;
        *(_OWORD *)(v62 + 80) = v72;
        sub_1BDFCAB98((uint64_t)v162);
      }
      else
      {
        unint64_t v41 = v164;
        v164[(v53 >> 6) + 8] |= 1 << v53;
        unint64_t v75 = (uint64_t *)(v41[6] + 16 * v53);
        uint64_t *v75 = v48;
        v75[1] = v49;
        uint64_t v76 = v41[7] + 136 * v53;
        uint64_t v77 = *(void *)((char *)v172 + 15);
        long long v79 = v171;
        long long v78 = v172[0];
        *(_OWORD *)(v76 + 80) = v170;
        *(_OWORD *)(v76 + 96) = v79;
        *(_OWORD *)(v76 + 112) = v78;
        *(void *)(v76 + 127) = v77;
        long long v81 = v168;
        long long v80 = v169;
        long long v82 = v167;
        *(_OWORD *)(v76 + 16) = v166;
        *(_OWORD *)(v76 + 32) = v82;
        *(_OWORD *)(v76 + 48) = v81;
        *(_OWORD *)(v76 + 64) = v80;
        *(_OWORD *)uint64_t v76 = v165;
        uint64_t v83 = v41[2];
        BOOL v84 = __OFADD__(v83, 1);
        uint64_t v85 = v83 + 1;
        if (v84) {
          goto LABEL_63;
        }
        v41[2] = v85;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v175 == 1) {
        break;
      }
      --v175;
      long long v165 = *(_OWORD *)(v161 + v59);
      long long v86 = *(_OWORD *)(v161 + v59 + 16);
      long long v87 = *(_OWORD *)(v161 + v59 + 32);
      long long v88 = *(_OWORD *)(v161 + v59 + 64);
      long long v168 = *(_OWORD *)(v161 + v59 + 48);
      long long v169 = v88;
      long long v166 = v86;
      long long v167 = v87;
      long long v89 = *(_OWORD *)(v161 + v59 + 80);
      long long v90 = *(_OWORD *)(v161 + v59 + 96);
      long long v91 = *(_OWORD *)(v161 + v59 + 112);
      *(void *)((char *)v172 + 15) = *(void *)(v161 + v59 + 127);
      long long v171 = v90;
      v172[0] = v91;
      long long v170 = v89;
      uint64_t v49 = *((void *)&v165 + 1);
      uint64_t v48 = v165;
      sub_1BDFC8920((uint64_t)&v165);
      swift_bridgeObjectRetain();
      uint64_t v58 = v41;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v164 = v58;
      unint64_t v53 = sub_1BDFC7B88(v48, v49);
      char v57 = v92;
      uint64_t v93 = v58[2];
      BOOL v94 = (v92 & 1) == 0;
      v59 += 136;
      uint64_t v56 = v93 + v94;
      if (__OFADD__(v93, v94)) {
        goto LABEL_60;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v42 = v156;
    uint64_t v6 = v157;
    uint64_t v8 = v158;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v95 = swift_bridgeObjectRetain();
  uint64_t v96 = v155;
  uint64_t v97 = sub_1BDFF667C(v95, (uint64_t)v41);
  uint64_t v155 = v96;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v98 = *(void *)(v97 + 16);
  uint64_t v150 = v41;
  if (v98)
  {
    uint64_t v99 = v97 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
    uint64_t v100 = *(void *)(v154 + 72);
    uint64_t v154 = v97;
    swift_bridgeObjectRetain();
    uint64_t v175 = MEMORY[0x1E4FBC868];
    uint64_t v102 = v159;
    uint64_t v101 = (uint64_t)v160;
    do
    {
      uint64_t v161 = v98;
      sub_1BDFF8530(v99, (uint64_t)v102, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
      uint64_t v104 = *v102;
      uint64_t v103 = v102[1];
      sub_1BDFF8530((uint64_t)v102, v101, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
      swift_bridgeObjectRetain();
      uint64_t v105 = v175;
      int v106 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v165 = v105;
      unint64_t v108 = sub_1BDFC7B88(v104, v103);
      uint64_t v109 = *(void *)(v105 + 16);
      BOOL v110 = (v107 & 1) == 0;
      uint64_t v111 = v109 + v110;
      if (__OFADD__(v109, v110)) {
        goto LABEL_61;
      }
      char v112 = v107;
      if (*(void *)(v105 + 24) >= v111)
      {
        if ((v106 & 1) == 0) {
          sub_1BDFF5D80((uint64_t (*)(void))type metadata accessor for EventCalendarModelObject, &qword_1EA0E3E00, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
        }
      }
      else
      {
        sub_1BDFF54C4(v111, v106, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject, &qword_1EA0E3E00, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
        unint64_t v113 = sub_1BDFC7B88(v104, v103);
        if ((v112 & 1) != (v114 & 1)) {
          goto LABEL_66;
        }
        unint64_t v108 = v113;
      }
      unint64_t v115 = (void *)v165;
      uint64_t v175 = v165;
      if (v112)
      {
        uint64_t v101 = (uint64_t)v160;
        sub_1BDFF69F0((uint64_t)v160, *(void *)(v165 + 56) + v108 * v100, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
      }
      else
      {
        *(void *)(v165 + 8 * (v108 >> 6) + 64) |= 1 << v108;
        uint64_t v116 = (uint64_t *)(v115[6] + 16 * v108);
        *uint64_t v116 = v104;
        v116[1] = v103;
        uint64_t v101 = (uint64_t)v160;
        sub_1BDFF865C((uint64_t)v160, v115[7] + v108 * v100, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
        uint64_t v117 = v115[2];
        BOOL v84 = __OFADD__(v117, 1);
        uint64_t v118 = v117 + 1;
        if (v84) {
          goto LABEL_64;
        }
        v115[2] = v118;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v102 = v159;
      sub_1BDFF8598((uint64_t)v159, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
      v99 += v100;
      uint64_t v98 = v161 - 1;
    }
    while (v161 != 1);
    swift_bridgeObjectRelease();
    uint64_t v42 = v156;
    uint64_t v6 = v157;
    uint64_t v8 = v158;
    unint64_t v41 = v150;
    uint64_t v119 = v175;
  }
  else
  {
    uint64_t v119 = MEMORY[0x1E4FBC868];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v120 = swift_bridgeObjectRetain();
  uint64_t v121 = v155;
  uint64_t v122 = sub_1BDFF6840(v120, v119);
  uint64_t v155 = v121;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v175 = v119;
  swift_bridgeObjectRelease();
  uint64_t v123 = *(void *)(v122 + 16);
  if (v123)
  {
    uint64_t v124 = v122;
    uint64_t v125 = v122 + ((*(unsigned __int8 *)(v153 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80));
    uint64_t v126 = *(void *)(v153 + 72);
    uint64_t v160 = (char *)v124;
    swift_bridgeObjectRetain();
    uint64_t v127 = (void *)MEMORY[0x1E4FBC868];
    while (1)
    {
      uint64_t v161 = v123;
      sub_1BDFF8530(v125, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EventModelObject);
      uint64_t v130 = *v8;
      uint64_t v129 = v8[1];
      sub_1BDFF8530((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for EventModelObject);
      swift_bridgeObjectRetain();
      int v131 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v165 = v127;
      unint64_t v133 = sub_1BDFC7B88(v130, v129);
      uint64_t v134 = v127[2];
      BOOL v135 = (v132 & 1) == 0;
      uint64_t v136 = v134 + v135;
      if (__OFADD__(v134, v135)) {
        goto LABEL_62;
      }
      char v137 = v132;
      if (v127[3] >= v136)
      {
        if (v131)
        {
          uint64_t v127 = (void *)v165;
          if ((v132 & 1) == 0) {
            goto LABEL_52;
          }
        }
        else
        {
          sub_1BDFF5D80((uint64_t (*)(void))type metadata accessor for EventModelObject, &qword_1EA0E3E08, (uint64_t (*)(void))type metadata accessor for EventModelObject, (uint64_t (*)(void))type metadata accessor for EventModelObject);
          uint64_t v127 = (void *)v165;
          if ((v137 & 1) == 0) {
            goto LABEL_52;
          }
        }
      }
      else
      {
        sub_1BDFF54C4(v136, v131, (uint64_t (*)(void))type metadata accessor for EventModelObject, &qword_1EA0E3E08, (uint64_t (*)(void))type metadata accessor for EventModelObject, (uint64_t (*)(void))type metadata accessor for EventModelObject);
        unint64_t v138 = sub_1BDFC7B88(v130, v129);
        if ((v137 & 1) != (v139 & 1)) {
          goto LABEL_66;
        }
        unint64_t v133 = v138;
        uint64_t v127 = (void *)v165;
        if ((v137 & 1) == 0)
        {
LABEL_52:
          v127[(v133 >> 6) + 8] |= 1 << v133;
          uint64_t v140 = (uint64_t *)(v127[6] + 16 * v133);
          *uint64_t v140 = v130;
          v140[1] = v129;
          uint64_t v141 = v127[7] + v133 * v126;
          uint64_t v6 = v157;
          sub_1BDFF865C((uint64_t)v157, v141, (uint64_t (*)(void))type metadata accessor for EventModelObject);
          uint64_t v142 = v127[2];
          BOOL v84 = __OFADD__(v142, 1);
          uint64_t v143 = v142 + 1;
          if (v84) {
            goto LABEL_65;
          }
          v127[2] = v143;
          swift_bridgeObjectRetain();
          goto LABEL_44;
        }
      }
      uint64_t v128 = v127[7] + v133 * v126;
      uint64_t v6 = v157;
      sub_1BDFF69F0((uint64_t)v157, v128, (uint64_t (*)(void))type metadata accessor for EventModelObject);
LABEL_44:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v8 = v158;
      sub_1BDFF8598((uint64_t)v158, (uint64_t (*)(void))type metadata accessor for EventModelObject);
      v125 += v126;
      uint64_t v123 = v161 - 1;
      if (v161 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v42 = v156;
        unint64_t v144 = v148;
        unint64_t v41 = v150;
        goto LABEL_58;
      }
    }
  }
  uint64_t v127 = (void *)MEMORY[0x1E4FBC868];
  unint64_t v144 = v148;
LABEL_58:
  sub_1BDF841A4(v147, v144);
  uint64_t v16 = (void *)swift_bridgeObjectRelease();
  uint64_t v145 = v175;
  void *v42 = v41;
  v42[1] = v145;
  v42[2] = v127;
LABEL_67:
  result.events._rawValue = v18;
  result.calendars._rawValue = v17;
  result.sources._rawValue = v16;
  return result;
}

unint64_t sub_1BDFED16C()
{
  unint64_t result = qword_1EA0E3D40;
  if (!qword_1EA0E3D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3D40);
  }
  return result;
}

uint64_t sub_1BDFED1C0@<X0>(uint64_t a1@<X8>)
{
  sub_1BDFB8210((uint64_t)(v1 + 6), (uint64_t)v21, &qword_1EA0E3060);
  sub_1BDFB8210((uint64_t)v21, (uint64_t)v22, &qword_1EA0E3060);
  if (!v22[1]) {
    goto LABEL_8;
  }
  uint64_t v3 = sub_1BE070560();
  if (v3 != 0x6C61636F6CLL || v4 != 0xE500000000000000)
  {
    uint64_t v6 = v3;
    uint64_t v7 = v4;
    if ((sub_1BE070EF0() & 1) == 0)
    {
      if (v6 == 0x65676E6168637865 && v7 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = 1;
        goto LABEL_9;
      }
      if (v6 == 0x7661646C6163 && v7 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = 2;
        goto LABEL_9;
      }
      if (v6 == 0x656D656C69626F6DLL && v7 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = 3;
        goto LABEL_9;
      }
      if (v6 == 0x6269726373627573 && v7 == 0xEA00000000006465 || (sub_1BE070EF0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = 4;
        goto LABEL_9;
      }
      if (v6 == 0x7961646874726962 && v7 == 0xE900000000000073)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v20 = sub_1BE070EF0();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0) {
          goto LABEL_8;
        }
      }
      uint64_t v8 = 5;
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v8 = 0;
LABEL_9:
  char v9 = v1[8] & 1;
  char v10 = (*((unsigned char *)v1 + 65) == 2) | *((unsigned char *)v1 + 65);
  unsigned __int8 v11 = *((unsigned char *)v1 + 66) & 1;
  uint64_t v12 = *v1;
  uint64_t v13 = v1[1];
  uint64_t v15 = v1[4];
  uint64_t v14 = v1[5];
  uint64_t v16 = v1[2];
  uint64_t v17 = v1[3];
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v13;
  *(void *)(a1 + 16) = v15;
  *(void *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v16;
  *(void *)(a1 + 48) = v17;
  *(unsigned char *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 57) = 0;
  *(unsigned char *)(a1 + 58) = v10 & 1;
  *(_WORD *)(a1 + 59) = v11;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 64) = v18;
  *(unsigned char *)(a1 + 88) = 1;
  *(void *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 104) = 1;
  *(_OWORD *)(a1 + 112) = xmmword_1BE07CF00;
  *(unsigned char *)(a1 + 134) = 0;
  *(_WORD *)(a1 + 132) = 0;
  *(_DWORD *)(a1 + 128) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDFED540(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = a3;
  long long v29 = a4;
  uint64_t v27 = a2;
  uint64_t v7 = type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  char v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (v11)
  {
    uint64_t v41 = MEMORY[0x1E4FBC860];
    sub_1BDFF4A20(0, v11, 0);
    uint64_t v12 = v41;
    uint64_t v13 = a1 + 32;
    for (int64_t i = v11 - 1; ; --i)
    {
      long long v15 = *(_OWORD *)(v13 + 112);
      long long v16 = *(_OWORD *)(v13 + 80);
      long long v37 = *(_OWORD *)(v13 + 96);
      long long v38 = v15;
      long long v17 = *(_OWORD *)(v13 + 112);
      long long v39 = *(_OWORD *)(v13 + 128);
      long long v18 = *(_OWORD *)(v13 + 48);
      long long v19 = *(_OWORD *)(v13 + 16);
      long long v33 = *(_OWORD *)(v13 + 32);
      long long v34 = v18;
      long long v20 = *(_OWORD *)(v13 + 48);
      long long v21 = *(_OWORD *)(v13 + 80);
      long long v35 = *(_OWORD *)(v13 + 64);
      long long v36 = v21;
      long long v22 = *(_OWORD *)(v13 + 16);
      v32[0] = *(_OWORD *)v13;
      v32[1] = v22;
      v30[6] = v37;
      v30[7] = v17;
      v30[8] = *(_OWORD *)(v13 + 128);
      v30[2] = v33;
      v30[3] = v20;
      void v30[4] = v35;
      v30[5] = v16;
      uint64_t v40 = *(void *)(v13 + 144);
      uint64_t v31 = *(void *)(v13 + 144);
      v30[0] = v32[0];
      v30[1] = v19;
      sub_1BDFF83D8((uint64_t)v32);
      sub_1BDFF1674(v30, v27, v28, v29, (uint64_t)v10);
      if (v5) {
        break;
      }
      uint64_t v5 = 0;
      sub_1BDFF8484((uint64_t)v32);
      uint64_t v41 = v12;
      unint64_t v24 = *(void *)(v12 + 16);
      unint64_t v23 = *(void *)(v12 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1BDFF4A20(v23 > 1, v24 + 1, 1);
        uint64_t v12 = v41;
      }
      *(void *)(v12 + 16) = v24 + 1;
      sub_1BDFF865C((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v24, type metadata accessor for EventAttendeeModelObject);
      if (!i) {
        return v12;
      }
      v13 += 152;
    }
    sub_1BDFF8484((uint64_t)v32);
    swift_release();
  }
  return v12;
}

uint64_t sub_1BDFED764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v17[0] = a1;
  v17[1] = a2;
  uint64_t v6 = type metadata accessor for EventAlarmModelObject();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v20 = MEMORY[0x1E4FBC860];
    sub_1BDFF49E4(0, v10, 0);
    uint64_t v11 = v20;
    for (int64_t i = (unsigned char *)(a3 + 40); ; i += 16)
    {
      char v13 = *i;
      uint64_t v18 = *((void *)i - 1);
      char v19 = v13;
      ((void (*)(uint64_t *))v17[0])(&v18);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v20 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BDFF49E4(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v20;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_1BDFF865C((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1BDFED914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v48 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v5 - 8);
  long long v47 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFB8210((uint64_t)(v2 + 13), (uint64_t)v60, &qword_1EA0E3060);
  sub_1BDFB8210((uint64_t)v60, (uint64_t)v61, &qword_1EA0E3060);
  if (!v61[1]) {
    goto LABEL_6;
  }
  uint64_t v8 = sub_1BE070560();
  uint64_t v9 = v7;
  if (v8 == 1701736302 && v7 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v10 = 0;
    goto LABEL_7;
  }
  if (v8 == 1701670772 && v9 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = 2;
  }
  else
  {
    if (v8 == 0x656D6D6F7266 && v9 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v41 = sub_1BE070EF0();
      swift_bridgeObjectRelease();
      if ((v41 & 1) == 0) {
        goto LABEL_6;
      }
    }
    uint64_t v10 = 1;
  }
LABEL_7:
  sub_1BDFB8210((uint64_t)(v2 + 2), (uint64_t)v59, &qword_1EA0E3060);
  sub_1BDFB8210((uint64_t)v59, (uint64_t)v62, &qword_1EA0E3060);
  uint64_t v46 = v10;
  if (!v62[1])
  {
LABEL_12:
    uint64_t v43 = 0;
    goto LABEL_13;
  }
  uint64_t v12 = sub_1BE070560();
  uint64_t v13 = v11;
  if (v12 == 0x6C61636F6CLL && v11 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v12 == 0x7661646C6163 && v13 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = 1;
  }
  else if (v12 == 0x65676E6168637865 && v13 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = 2;
  }
  else if (v12 == 0x7069726373627573 && v13 == 0xEC0000006E6F6974 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = 3;
  }
  else
  {
    if (v12 == 0x7961646874726962 && v13 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v42 = sub_1BE070EF0();
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0) {
        goto LABEL_12;
      }
    }
    uint64_t v40 = 4;
  }
  uint64_t v43 = v40;
LABEL_13:
  uint64_t v14 = *v2;
  uint64_t v15 = v2[1];
  uint64_t v16 = v2[7];
  uint64_t v44 = v2[6];
  uint64_t v45 = v14;
  uint64_t v17 = v2[8];
  uint64_t v18 = v2[9];
  uint64_t v19 = sub_1BE070560();
  long long v21 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  CalendarColor.init(_:)(v19, v21, (uint64_t)&v56);
  long long v53 = v56;
  uint64_t v54 = v57;
  char v55 = v58;
  int v22 = *((unsigned __int8 *)v3 + 96);
  if (!*(void *)(a1 + 16))
  {
LABEL_17:
    sub_1BDFC54C0((uint64_t)v51);
    goto LABEL_18;
  }
  uint64_t v23 = v3[4];
  uint64_t v24 = v3[5];
  swift_bridgeObjectRetain();
  unint64_t v25 = sub_1BDFC7B88(v23, v24);
  if ((v26 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v27 = (char *)(*(void *)(a1 + 56) + 136 * v25);
  v49[0] = *(_OWORD *)v27;
  long long v28 = *((_OWORD *)v27 + 4);
  long long v30 = *((_OWORD *)v27 + 1);
  long long v29 = *((_OWORD *)v27 + 2);
  v49[3] = *((_OWORD *)v27 + 3);
  v49[4] = v28;
  v49[1] = v30;
  v49[2] = v29;
  long long v32 = *((_OWORD *)v27 + 6);
  long long v31 = *((_OWORD *)v27 + 7);
  long long v33 = *((_OWORD *)v27 + 5);
  *(void *)((char *)v50 + 15) = *(void *)(v27 + 127);
  v49[6] = v32;
  v50[0] = v31;
  v49[5] = v33;
  memmove(v51, v27, 0x87uLL);
  nullsub_1(v51);
  sub_1BDFC8920((uint64_t)v49);
  swift_bridgeObjectRelease();
LABEL_18:
  sub_1BDFB8210((uint64_t)v51, (uint64_t)v52, &qword_1EA0E3400);
  char v34 = (v22 == 2) | v22;
  sub_1BDFB8210((uint64_t)v52, (uint64_t)v51, &qword_1EA0E3400);
  char v35 = *((unsigned char *)v3 + 120);
  char v36 = *((unsigned char *)v3 + 121);
  uint64_t v37 = sub_1BE06EE10();
  uint64_t v38 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v47, 1, 1, v37);
  return EventCalendarModelObject.init(id:type:externalID:title:displayOrder:color:allowsContentModifications:sharingStatus:source:isSubscribed:isHolidayCalendar:isSubscribedHolidayCalendar:isSuggestedEventCalendar:allowsEvents:allowsScheduling:sharedOwnerAddress:sharedOwnerAddresses:ownerIdentityAddress:ownerIdentityEmail:ownerIdentityPhoneNumber:isDefaultCalendarForNewEvents:)(v45, v15, v43, v44, v16, v17, v18, 1, v48, &v53, v34 & 1, v46, (uint64_t)v51, 0, v35 & 1, 0, v36 & 1, 1, 1,
           0,
           MEMORY[0x1E4FBC860],
           v38,
           0,
           0,
           0,
           0,
           0);
}

uint64_t sub_1BDFEDF50@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v162 = (char *)a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v170 = (uint64_t)&v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v169 = (uint64_t)&v142 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v164 = (uint64_t)&v142 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E18);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v168 = (uint64_t)&v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v167 = (uint64_t)&v142 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v166 = (uint64_t)&v142 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v165 = (uint64_t)&v142 - v21;
  uint64_t v22 = sub_1BE06EF10();
  uint64_t v161 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v160 = (char *)&v142 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E20);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  uint64_t v173 = (uint64_t)&v142 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  long long v28 = (char *)&v142 - v27;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
  uint64_t v30 = MEMORY[0x1F4188790](v29 - 8);
  uint64_t v171 = (uint64_t)&v142 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  long long v33 = (char *)&v142 - v32;
  uint64_t v34 = sub_1BE06EEE0();
  uint64_t v181 = *(void **)(v34 - 8);
  uint64_t v182 = v34;
  uint64_t v35 = MEMORY[0x1F4188790](v34);
  uint64_t v174 = (uint64_t)&v142 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v172 = (uint64_t)&v142 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  char v41 = (char *)&v142 - v40;
  MEMORY[0x1F4188790](v39);
  uint64_t v43 = (char *)&v142 - v42;
  int v44 = *(unsigned __int8 *)(v2 + 144);
  uint64_t v45 = v2 + 32;
  uint64_t v46 = (long long *)(v2 + 88);
  uint64_t v180 = (char *)&v142 - v42;
  LODWORD(v153) = v44;
  uint64_t v158 = a2;
  long long v47 = *(_OWORD *)(v45 + 16);
  v233[0] = *(_OWORD *)v45;
  v233[1] = v47;
  v233[2] = *(_OWORD *)(v45 + 32);
  uint64_t v234 = *(void *)(v45 + 48);
  if (v44)
  {
    sub_1BDFF0A9C((uint64_t)v233, (uint64_t)v43);
    long long v49 = v46[1];
    long long v229 = *v46;
    long long v230 = v49;
    long long v231 = v46[2];
    uint64_t v232 = *((void *)v46 + 6);
    sub_1BDFF0EA8(&v229, (uint64_t)v41);
  }
  else
  {
    sub_1BDFF043C((uint64_t)v233, (uint64_t)v43);
    long long v48 = v46[1];
    long long v229 = *v46;
    long long v230 = v48;
    long long v231 = v46[2];
    uint64_t v232 = *((void *)v46 + 6);
    sub_1BDFF043C((uint64_t)&v229, (uint64_t)v41);
  }
  sub_1BDFB8210(v3 + 632, (uint64_t)v228, &qword_1EA0E3060);
  sub_1BDFB8210((uint64_t)v228, (uint64_t)v289, &qword_1EA0E3060);
  uint64_t v175 = v41;
  if (!v289[1]) {
    goto LABEL_9;
  }
  uint64_t v51 = sub_1BE070560();
  uint64_t v52 = v50;
  if (v51 == 0x6C616D726F6ELL && v50 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v145 = 0;
    goto LABEL_10;
  }
  if (v51 == 0x6C616E6F73726570 && v52 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v61 = 1;
  }
  else if (v51 == 0x65746176697270 && v52 == 0xE700000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v61 = 2;
  }
  else
  {
    if (v51 == 0x6E656469666E6F63 && v52 == 0xEC0000006C616974)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v137 = sub_1BE070EF0();
      swift_bridgeObjectRelease();
      if ((v137 & 1) == 0) {
        goto LABEL_9;
      }
    }
    uint64_t v61 = 3;
  }
  uint64_t v145 = v61;
LABEL_10:
  sub_1BDFB8210(v3 + 648, (uint64_t)v227, &qword_1EA0E3060);
  sub_1BDFB8210((uint64_t)v227, (uint64_t)v290, &qword_1EA0E3060);
  if (!v290[1])
  {
LABEL_15:
    uint64_t v144 = 0;
    goto LABEL_16;
  }
  uint64_t v54 = sub_1BE070560();
  uint64_t v55 = v53;
  if (v54 == 1701736302 && v53 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if (v54 == 0x656D7269666E6F63 && v55 == 0xE900000000000064 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v62 = 1;
  }
  else if (v54 == 0x76697461746E6574 && v55 == 0xE900000000000065 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v62 = 2;
  }
  else
  {
    if (v54 == 0x64656C65636E6163 && v55 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v138 = sub_1BE070EF0();
      swift_bridgeObjectRelease();
      if ((v138 & 1) == 0) {
        goto LABEL_15;
      }
    }
    uint64_t v62 = 3;
  }
  uint64_t v144 = v62;
LABEL_16:
  sub_1BDFB8210(v3 + 688, (uint64_t)v226, &qword_1EA0E3060);
  sub_1BDFB8210((uint64_t)v226, (uint64_t)v291, &qword_1EA0E3060);
  uint64_t v177 = v33;
  if (v291[1])
  {
    uint64_t v57 = sub_1BE070560();
    uint64_t v58 = v56;
    if (v57 == 0x726F707075736E75 && v56 == 0xEB00000000646574)
    {
      swift_bridgeObjectRelease();
      uint64_t v143 = -1;
      long long v33 = v177;
      goto LABEL_41;
    }
    char v59 = sub_1BE070EF0();
    long long v33 = v177;
    if (v59)
    {
      swift_bridgeObjectRelease();
      uint64_t v60 = -1;
LABEL_22:
      uint64_t v143 = v60;
      goto LABEL_41;
    }
    if ((v57 != 2037609826 || v58 != 0xE400000000000000) && (sub_1BE070EF0() & 1) == 0)
    {
      if (v57 == 1701147238 && v58 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v60 = 1;
        goto LABEL_22;
      }
      if (v57 == 0x76697461746E6574 && v58 == 0xE900000000000065 || (sub_1BE070EF0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v60 = 2;
        goto LABEL_22;
      }
      if (v57 == 0x616C696176616E75 && v58 == 0xEB00000000656C62)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v139 = sub_1BE070EF0();
        swift_bridgeObjectRelease();
        if ((v139 & 1) == 0) {
          goto LABEL_40;
        }
      }
      uint64_t v60 = 3;
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
  }
LABEL_40:
  uint64_t v143 = 0;
LABEL_41:
  sub_1BDFB8210(v3 + 264, (uint64_t)v221, &qword_1EA0E3E30);
  sub_1BDFB8210((uint64_t)v221, (uint64_t)v222, &qword_1EA0E3E30);
  if (sub_1BDFF8094((uint64_t)v222) == 1)
  {
    sub_1BDFF80B8(v219);
    sub_1BDFB8210((uint64_t)v219, (uint64_t)v220, &qword_1EA0E3E38);
    uint64_t v163 = 0;
    uint64_t v179 = 0;
  }
  else
  {
    long long v285 = v222[7];
    long long v286 = v222[8];
    long long v287 = v222[9];
    uint64_t v288 = v223;
    long long v281 = v222[3];
    long long v282 = v222[4];
    long long v283 = v222[5];
    long long v284 = v222[6];
    long long v278 = v222[0];
    long long v279 = v222[1];
    long long v280 = v222[2];
    sub_1BDFF130C((uint64_t)&v205);
    v219[8] = v213;
    v219[9] = v214;
    v219[10] = v215;
    v219[4] = v209;
    v219[5] = v210;
    v219[6] = v211;
    v219[7] = v212;
    v219[0] = v205;
    v219[1] = v206;
    v219[2] = v207;
    v219[3] = v208;
    nullsub_1(v219);
    sub_1BDFB8210((uint64_t)v221, (uint64_t)&v193, &qword_1EA0E3E30);
    long long v274 = v200;
    long long v275 = v201;
    long long v276 = v202;
    long long v270 = v196;
    long long v271 = v197;
    long long v272 = v198;
    long long v273 = v199;
    long long v267 = v193;
    long long v268 = v194;
    uint64_t v277 = v203;
    long long v269 = v195;
    uint64_t v163 = sub_1BDFF14BC();
    uint64_t v179 = v63;
    sub_1BDFB8210((uint64_t)v219, (uint64_t)v220, &qword_1EA0E3E38);
  }
  sub_1BDFB8210(v3 + 432, (uint64_t)v216, &qword_1EA0E3E30);
  sub_1BDFB8210((uint64_t)v216, (uint64_t)v217, &qword_1EA0E3E30);
  if (sub_1BDFF8094((uint64_t)v217) == 1)
  {
    sub_1BDFF80B8(&v205);
    sub_1BDFB8210((uint64_t)&v205, (uint64_t)v219, &qword_1EA0E3E38);
    uint64_t v159 = 0;
    uint64_t v178 = 0;
  }
  else
  {
    long long v263 = v217[7];
    long long v264 = v217[8];
    long long v265 = v217[9];
    long long v259 = v217[3];
    long long v260 = v217[4];
    long long v261 = v217[5];
    long long v262 = v217[6];
    long long v256 = v217[0];
    long long v257 = v217[1];
    uint64_t v266 = v218;
    long long v258 = v217[2];
    sub_1BDFF130C((uint64_t)&v193);
    long long v213 = v201;
    long long v214 = v202;
    long long v215 = v203;
    long long v209 = v197;
    long long v210 = v198;
    long long v211 = v199;
    long long v212 = v200;
    long long v205 = v193;
    long long v206 = v194;
    long long v207 = v195;
    long long v208 = v196;
    nullsub_1(&v205);
    sub_1BDFB8210((uint64_t)v216, (uint64_t)v191, &qword_1EA0E3E30);
    long long v252 = v191[7];
    long long v253 = v191[8];
    long long v254 = v191[9];
    long long v248 = v191[3];
    long long v249 = v191[4];
    long long v250 = v191[5];
    long long v251 = v191[6];
    long long v245 = v191[0];
    long long v246 = v191[1];
    uint64_t v255 = v192;
    long long v247 = v191[2];
    uint64_t v159 = sub_1BDFF14BC();
    uint64_t v178 = v64;
    sub_1BDFB8210((uint64_t)&v205, (uint64_t)v219, &qword_1EA0E3E38);
  }
  uint64_t v65 = type metadata accessor for EventOrganizerModelObject(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v33, 1, 1, v65);
  uint64_t v66 = type metadata accessor for EventAttendeeModelObject(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v28, 1, 1, v66);
  unint64_t v204 = MEMORY[0x1E4FBC860];
  if (*(void *)(v3 + 736))
  {
    uint64_t v67 = swift_bridgeObjectRetain();
    uint64_t v150 = sub_1BDFED540(v67, (uint64_t)v33, (uint64_t)v28, &v204);
    uint64_t v146 = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v150 = 0;
    uint64_t v146 = 0;
  }
  long long v68 = v180;
  uint64_t v69 = v167;
  uint64_t v70 = *(void *)(v3 + 8);
  uint64_t v176 = v28;
  uint64_t v157 = v22;
  if (v70)
  {
    uint64_t v71 = *(void *)v3;
    uint64_t v151 = v70;
    uint64_t v152 = v71;
  }
  else
  {
    long long v72 = v160;
    sub_1BE06EF00();
    uint64_t v73 = sub_1BE06EEF0();
    uint64_t v151 = v74;
    uint64_t v152 = v73;
    (*(void (**)(char *, uint64_t))(v161 + 8))(v72, v22);
    long long v68 = v180;
  }
  uint64_t v75 = v182;
  uint64_t v76 = (void (*)(uint64_t, char *, uint64_t))v181[2];
  v76(v172, v68, v182);
  v76(v174, v175, v75);
  int v154 = *(unsigned __int8 *)(v3 + 146);
  uint64_t v77 = *(void *)(v3 + 16);
  uint64_t v155 = *(void (**)(void, void, void))(v3 + 24);
  uint64_t v156 = v77;
  if (*(void *)(v3 + 80))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BE06F110();
  }
  else
  {
    uint64_t v78 = sub_1BE06F140();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v165, 1, 1, v78);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v79 = v168;
  uint64_t v80 = (uint64_t)v162;
  if (*(void *)(v3 + 136))
  {
    sub_1BE06F110();
  }
  else
  {
    uint64_t v81 = sub_1BE06F140();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v166, 1, 1, v81);
  }
  int v149 = *(unsigned __int8 *)(v3 + 145);
  uint64_t v82 = sub_1BE06F140();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v69, 1, 1, v82);
  sub_1BDFB8210(v3 + 152, (uint64_t)v225, &qword_1EA0E3E40);
  sub_1BDFB8210((uint64_t)v225, (uint64_t)v292, &qword_1EA0E3E40);
  if (*((void *)&v292[0] + 1) == 1)
  {
    uint64_t v83 = type metadata accessor for EventVirtualConferenceModelObject(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v79, 1, 1, v83);
  }
  else
  {
    long long v241 = v292[3];
    long long v242 = v292[4];
    long long v243 = v292[5];
    long long v244 = v292[6];
    long long v238 = v292[0];
    long long v239 = v292[1];
    long long v240 = v292[2];
    sub_1BDFF2808(v79);
    uint64_t v84 = type metadata accessor for EventVirtualConferenceModelObject(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v79, 0, 1, v84);
  }
  uint64_t v85 = v179;
  if (v178)
  {
    long long v86 = &unk_1BE07A000;
    if (v179)
    {
LABEL_64:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1568);
      uint64_t v87 = swift_allocObject();
      *(_OWORD *)(v87 + 16) = v86[189];
      *(void *)(v87 + 32) = v163;
      *(void *)(v87 + 40) = v85;
      uint64_t v148 = v87;
      goto LABEL_67;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v159 = v163;
    uint64_t v178 = v85;
    long long v86 = (_OWORD *)&unk_1BE07A000;
    if (v85) {
      goto LABEL_64;
    }
  }
  uint64_t v148 = 0;
LABEL_67:
  long long v88 = v219;
  sub_1BDFB8210((uint64_t)v219, (uint64_t)&v205, &qword_1EA0E3E38);
  if (sub_1BDFF8094((uint64_t)&v205) == 1)
  {
    long long v88 = v220;
    sub_1BDFF81E8(v220, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
  }
  sub_1BDFB8210((uint64_t)v88, (uint64_t)&v193, &qword_1EA0E3E38);
  sub_1BDFB8210((uint64_t)&v193, (uint64_t)v189, &qword_1EA0E3E38);
  sub_1BDFB8210((uint64_t)v220, (uint64_t)v188, &qword_1EA0E3E38);
  long long v89 = v219;
  sub_1BDFB8210((uint64_t)v219, (uint64_t)v191, &qword_1EA0E3E38);
  if (sub_1BDFF8094((uint64_t)v191) == 1)
  {
    long long v89 = v220;
    sub_1BDFF81E8(v220, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
  }
  sub_1BDFB8210((uint64_t)v89, (uint64_t)v190, &qword_1EA0E3E38);
  sub_1BDFB8210((uint64_t)v190, (uint64_t)v187, &qword_1EA0E3E38);
  double v90 = *(double *)(v3 + 600);
  int v147 = *(unsigned __int8 *)(v3 + 608);
  if (*(void *)(v80 + 16))
  {
    long long v91 = v33;
    uint64_t v92 = *(void *)(v3 + 616);
    uint64_t v93 = *(void *)(v3 + 624);
    sub_1BDFF81E8(v219, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
    swift_bridgeObjectRetain();
    sub_1BDFF81E8(v220, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
    uint64_t v94 = (uint64_t)v162;
    sub_1BDFF81E8(v219, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
    swift_bridgeObjectRetain();
    unint64_t v95 = sub_1BDFC7B88(v92, v93);
    if (v96)
    {
      unint64_t v97 = v95;
      uint64_t v98 = v11;
      uint64_t v99 = *(void *)(v94 + 56);
      uint64_t v100 = type metadata accessor for EventCalendarModelObject();
      uint64_t v101 = *(void *)(v100 - 8);
      uint64_t v102 = v99 + *(void *)(v101 + 72) * v97;
      uint64_t v11 = v98;
      uint64_t v103 = v164;
      sub_1BDFF8530(v102, v164, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v101 + 56))(v103, 0, 1, v100);
    }
    else
    {
      uint64_t v107 = type metadata accessor for EventCalendarModelObject();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v164, 1, 1, v107);
    }
    uint64_t v105 = swift_bridgeObjectRelease();
    long long v33 = v91;
    uint64_t v106 = *(void *)(v3 + 664);
    if (v106) {
      goto LABEL_78;
    }
LABEL_75:
    uint64_t v146 = 0;
    goto LABEL_79;
  }
  uint64_t v104 = type metadata accessor for EventCalendarModelObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v164, 1, 1, v104);
  sub_1BDFF81E8(v219, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
  swift_bridgeObjectRetain();
  sub_1BDFF81E8(v220, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
  uint64_t v105 = (uint64_t)sub_1BDFF81E8(v219, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
  uint64_t v106 = *(void *)(v3 + 664);
  if (!v106) {
    goto LABEL_75;
  }
LABEL_78:
  MEMORY[0x1F4188790](v105);
  uint64_t v141 = v180;
  swift_bridgeObjectRetain();
  uint64_t v146 = sub_1BDFED764((uint64_t)sub_1BDFF835C, (uint64_t)&v140, v106);
  swift_bridgeObjectRelease();
LABEL_79:
  char v108 = v153;
  uint64_t v153 = *(void *)(v3 + 672);
  uint64_t v109 = *(void *)(v3 + 680);
  BOOL v110 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v181[7];
  uint64_t v162 = v11;
  v110(v11, 1, 1, v182);
  uint64_t v111 = *(void *)(v3 + 712);
  if (v111)
  {
    uint64_t v112 = *(void *)(v3 + 720);
    uint64_t v113 = *(void *)(v3 + 704);
    char v114 = *(unsigned char *)(v3 + 728) & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3DC8);
    uint64_t v115 = *(void *)(type metadata accessor for EventRecurrenceRuleModelObject(0) - 8);
    unint64_t v116 = (*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
    uint64_t v117 = swift_allocObject();
    *(_OWORD *)(v117 + 16) = xmmword_1BE07ABD0;
    swift_bridgeObjectRetain();
    uint64_t v118 = v117 + v116;
    long long v33 = v177;
    sub_1BDFF2FD0(v113, v111, v112, v114, v118);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v117 = 0;
  }
  char v119 = v149;
  sub_1BDF86808((uint64_t)v33, v171, &qword_1EA0E3E28);
  sub_1BDF86808((uint64_t)v176, v173, &qword_1EA0E3E20);
  if (*(void *)(v3 + 752))
  {
    sub_1BE06EE00();
  }
  else
  {
    uint64_t v120 = sub_1BE06EE10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v169, 1, 1, v120);
  }
  char v121 = *(unsigned char *)(v3 + 760);
  char v122 = *(unsigned char *)(v3 + 761);
  if (*(void *)(v3 + 776))
  {
    sub_1BE06EE00();
  }
  else
  {
    uint64_t v123 = sub_1BE06EE10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v170, 1, 1, v123);
  }
  sub_1BDFB8210(v3 + 784, (uint64_t)v224, &qword_1EA0E3E48);
  sub_1BDFB8210((uint64_t)v224, (uint64_t)v293, &qword_1EA0E3E48);
  uint64_t v124 = v294;
  if (v294)
  {
    long long v235 = v293[0];
    long long v236 = v293[1];
    uint64_t v237 = v294;
    sub_1BDFF321C((uint64_t)&v183);
    uint64_t v124 = v183;
    long long v125 = v184;
    long long v126 = v185;
    long long v127 = v186;
  }
  else
  {
    long long v125 = xmmword_1BE07CCF0;
    long long v126 = 0uLL;
    long long v127 = 0uLL;
  }
  char v128 = v108 | v119;
  unsigned __int8 v129 = v108 & 1;
  uint64_t v183 = v124;
  long long v184 = v125;
  if (v147) {
    double v90 = 0.0;
  }
  long long v185 = v126;
  long long v186 = v127;
  uint64_t v130 = v160;
  sub_1BE06EF00();
  uint64_t v131 = sub_1BE06EEF0();
  uint64_t v133 = v132;
  (*(void (**)(char *, uint64_t))(v161 + 8))(v130, v157);
  EventModelObject.init(id:uniqueID:title:startDate:endDate:isAllDay:isProposedTime:startTimeZone:endTimeZone:isFloating:floatingTimeZone:virtualConference:location:locationWithoutPrediction:locationsWithoutPrediction:structuredLocation:structuredLocationWithoutPrediction:preferredLocation:travelTime:travelRoutingMode:calendar:privacyLevel:status:alarms:notes:availability:recurrenceDate:recurrenceRules:organizer:attendees:selfAttendee:url:hasAttachment:conferenceURLForDisplayCached:conferenceURLForDisplay:integration:isEditable:isNew:isSuggestedEvent:)(v152, v151, v131, v133, v156, v155, v172, v174, v158, v90, v129, v154 & 1, v165, v166, v128 & 1, v167, v168, v159, v178,
    v163,
    v179,
    v148,
    (uint64_t)v189,
    (uint64_t)v188,
    (uint64_t)v187,
    0,
    v164,
    v145,
    v144,
    v146,
    v153,
    v109,
    v143,
    (uint64_t)v162,
    v117,
    v171,
    v150,
    v173,
    v169,
    v121 & 1,
    v122 & 1,
    v170,
    &v183,
    1u,
    0,
    0);
  sub_1BDFF81E8(v220, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  sub_1BDFF81E8(v219, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  uint64_t v134 = v182;
  BOOL v135 = (void (*)(char *, uint64_t))v181[1];
  v135(v175, v182);
  v135(v180, v134);
  swift_bridgeObjectRelease();
  sub_1BDF8686C((uint64_t)v176, &qword_1EA0E3E20);
  return sub_1BDF8686C((uint64_t)v177, &qword_1EA0E3E28);
}

uint64_t FakeDataReader.Dataset.sources.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FakeDataReader.Dataset.sources.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*FakeDataReader.Dataset.sources.modify())()
{
  return nullsub_1;
}

uint64_t FakeDataReader.Dataset.calendars.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FakeDataReader.Dataset.calendars.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FakeDataReader.Dataset.calendars.modify())()
{
  return nullsub_1;
}

uint64_t FakeDataReader.Dataset.events.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FakeDataReader.Dataset.events.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*FakeDataReader.Dataset.events.modify())()
{
  return nullsub_1;
}

uint64_t sub_1BDFEFB50()
{
  uint64_t v1 = 0x7261646E656C6163;
  if (*v0 != 1) {
    uint64_t v1 = 0x73746E657665;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73656372756F73;
  }
}

uint64_t sub_1BDFEFBAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFF70B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFEFBD4(uint64_t a1)
{
  unint64_t v2 = sub_1BDFF7548();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFEFC10(uint64_t a1)
{
  unint64_t v2 = sub_1BDFF7548();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1BDFEFC4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1BDFF720C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

unint64_t sub_1BDFEFC7C(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x70756F7247707061;
      break;
    case 3:
      unint64_t result = 1701869940;
      break;
    case 4:
      unint64_t result = 0x6167656C65447369;
      break;
    case 5:
      unint64_t result = 0x6261746972577369;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BDFEFD60()
{
  return sub_1BDFEFC7C(*v0);
}

uint64_t sub_1BDFEFD68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFFBAFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFEFD90(uint64_t a1)
{
  unint64_t v2 = sub_1BDFFC208();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFEFDCC(uint64_t a1)
{
  unint64_t v2 = sub_1BDFFC208();

  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1BDFEFE08@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BDFFBDCC(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = *(_OWORD *)v7;
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_DWORD *)(a2 + 63) = *(_DWORD *)&v7[15];
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

unint64_t sub_1BDFEFE5C(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701869940;
      break;
    case 2:
      unint64_t result = 0x4449656372756F73;
      break;
    case 3:
      unint64_t result = 0x6C616E7265747865;
      break;
    case 4:
      unint64_t result = 0x656C746974;
      break;
    case 5:
      unint64_t result = 0x726F6C6F63;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0x53676E6972616873;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BDFEFF98()
{
  return sub_1BDFEFE5C(*v0);
}

uint64_t sub_1BDFEFFA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFFC25C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDFEFFC8(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1BDFEFFD4(uint64_t a1)
{
  unint64_t v2 = sub_1BDFFCE04();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFF0010(uint64_t a1)
{
  unint64_t v2 = sub_1BDFFCE04();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1BDFF004C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1BDFFC658(a1, v8);
  if (!v2)
  {
    long long v5 = v12;
    a2[4] = v11;
    a2[5] = v5;
    a2[6] = v13[0];
    *(_OWORD *)((char *)a2 + 106) = *(_OWORD *)((char *)v13 + 10);
    long long v6 = v8[1];
    *a2 = v8[0];
    a2[1] = v6;
    double result = *(double *)&v9;
    long long v7 = v10;
    a2[2] = v9;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1BDFF00A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  MEMORY[0x1F4188790](v5 - 8);
  long long v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1BE06F140();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v23 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v22 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = sub_1BE06F100();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE06F0B0();
  CUIKOneIndexedWeekStart();
  sub_1BE06EFF0();
  uint64_t result = CalCopyTimeZone();
  if (result)
  {
    uint64_t v20 = (void *)result;
    sub_1BE06F130();

    sub_1BE06F0D0();
    sub_1BE06EF70();
    uint64_t v21 = sub_1BE06EFC0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v7, 0, 1, v21);
    sub_1BE06F0A0();
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v25, v18, v15);
    sub_1BDFB8210(v24 + 40, (uint64_t)v26, &qword_1EA0E3060);
    uint64_t result = sub_1BDFB8210((uint64_t)v26, (uint64_t)v27, &qword_1EA0E3060);
    if (v27[1])
    {
      sub_1BE06F110();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
      {
        return sub_1BDF8686C((uint64_t)v4, &qword_1EA0E1118);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v4, v8);
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v23, v14, v8);
        sub_1BE06F0D0();
        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BDFF043C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = sub_1BE06EC50();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v54 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1BE06F0E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v53 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v44 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v44 - v15;
  uint64_t v17 = sub_1BE06EEE0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v52 = (char *)v44 - v22;
  uint64_t v23 = sub_1BE06F100();
  uint64_t v45 = *(void *)(v23 - 8);
  uint64_t v46 = v23;
  MEMORY[0x1F4188790](v23);
  uint64_t v59 = (uint64_t)v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFF00A8(a1, v59);
  unsigned int v25 = *MEMORY[0x1E4F27BF0];
  uint64_t v55 = v6;
  uint64_t v26 = *(void (**)(void))(v6 + 104);
  unsigned int v51 = v25;
  uint64_t v27 = v5;
  uint64_t v50 = (void (*)(unint64_t, void, uint64_t))v26;
  v26(v8);
  id v28 = objc_msgSend(self, sel_CalSimulatedDateForNow);
  if (!v28)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v14, 1, 1, v17);
    goto LABEL_7;
  }
  uint64_t v29 = v28;
  sub_1BE06EEC0();

  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v57 = v18 + 32;
  v56(v14, v21, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v14, 0, 1, v17);
  uint64_t v30 = v18;
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v31 = v18 + 48;
  uint64_t v58 = v32;
  uint64_t result = v32(v14, 1, v17);
  if (result == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1BE06F060();
  uint64_t v34 = v55;
  (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v27);
  v44[0] = *(void *)(v30 + 8);
  v44[1] = v30 + 8;
  ((void (*)(char *, uint64_t))v44[0])(v14, v17);
  _OWORD v44[2] = v31;
  uint64_t result = v58(v16, 1, v17);
  if (result == 1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v35 = v52;
  v56(v52, v16, v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1558);
  uint64_t v36 = *(void *)(v34 + 72);
  unint64_t v37 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1BE07C310;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = v50;
  v50(v39, *MEMORY[0x1E4F27C20], v27);
  v40(v39 + v36, *MEMORY[0x1E4F27C30], v27);
  v40(v39 + 2 * v36, v51, v27);
  sub_1BDFF638C(v38);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  char v41 = v54;
  uint64_t v42 = v59;
  sub_1BE06F000();
  swift_bridgeObjectRelease();
  sub_1BE06EBE0();
  sub_1BE06EC30();
  uint64_t v43 = v53;
  sub_1BE06F050();
  uint64_t result = v58(v43, 1, v17);
  if (result != 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v41, v48);
    ((void (*)(char *, uint64_t))v44[0])(v35, v17);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v42, v46);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v56)(v49, v43, v17);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BDFF0A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = sub_1BE06F0E0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = sub_1BE06EEE0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v31 = (char *)&v29 - v18;
  uint64_t v32 = sub_1BE06F100();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a1;
  sub_1BDFF00A8(a1, (uint64_t)v20);
  uint64_t v21 = *MEMORY[0x1E4F27BF0];
  uint64_t v35 = v4;
  uint64_t v36 = v3;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 104))(v6, v21, v3);
  id v22 = objc_msgSend(self, sel_CalSimulatedDateForNow);
  if (!v22)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v13);
    goto LABEL_6;
  }
  uint64_t v23 = v22;
  sub_1BE06EEC0();

  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v24(v10, v17, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
  unsigned int v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t result = v25(v10, 1, v13);
  if (result == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1BE06F060();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v36);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v14 + 8);
  v27(v10, v13);
  uint64_t result = v25(v12, 1, v13);
  if (result != 1)
  {
    id v28 = v31;
    v24(v31, v12, v13);
    sub_1BE06EFD0();
    v27(v28, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v20, v32);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1BDFF0EA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1BE06F0E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v39 = (char *)&v31 - v12;
  uint64_t v13 = sub_1BE06EEE0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v40 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  unint64_t v37 = (char *)&v31 - v17;
  uint64_t v38 = sub_1BE06F100();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFF00A8((uint64_t)a1, (uint64_t)v19);
  uint64_t v20 = v7;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F27BF0], v4);
  if (__OFADD__(*a1, 1))
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v34 = v5;
  uint64_t v35 = v4;
  uint64_t v33 = a2;
  id v21 = objc_msgSend(self, sel_CalSimulatedDateForNow);
  if (!v21)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v11, 1, 1, v13);
    goto LABEL_8;
  }
  id v22 = v21;
  uint64_t v23 = v40;
  sub_1BE06EEC0();

  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v32(v11, v23, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t result = v24(v11, 1, v13);
  if (result == 1)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v26 = v39;
  sub_1BE06F060();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v20, v35);
  id v28 = *(void (**)(char *, uint64_t))(v14 + 8);
  v28(v11, v13);
  uint64_t result = v24(v27, 1, v13);
  if (result != 1)
  {
    uint64_t v29 = v37;
    v32(v37, v27, v13);
    uint64_t v30 = v40;
    sub_1BE06EFD0();
    sub_1BE06EED0();
    v28(v30, v13);
    v28(v29, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v19, v38);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BDFF130C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v5 = *(void *)v1;
  uint64_t v4 = *((void *)v1 + 1);
  sub_1BDFB8210((uint64_t)(v1 + 4), (uint64_t)v26, &qword_1EA0E3E58);
  sub_1BDFB8210((uint64_t)v26, (uint64_t)v33, &qword_1EA0E3E58);
  if (v34)
  {
    swift_bridgeObjectRetain();
    id v6 = 0;
  }
  else
  {
    double v7 = *(double *)v33;
    double v8 = *(double *)&v33[1];
    id v9 = objc_allocWithZone(MEMORY[0x1E4F1E5F0]);
    swift_bridgeObjectRetain();
    id v6 = objc_msgSend(v9, sel_initWithLatitude_longitude_, v7, v8);
  }
  double v10 = v2[7];
  int v11 = *((unsigned __int8 *)v2 + 64);
  char v12 = *((unsigned char *)v2 + 65);
  sub_1BDFB8210((uint64_t)(v2 + 9), (uint64_t)v25, &qword_1EA0E3E60);
  sub_1BDFB8210((uint64_t)v25, (uint64_t)v35, &qword_1EA0E3E60);
  uint64_t v13 = *((void *)&v35[0] + 1);
  if (*((void *)&v35[0] + 1))
  {
    long long v29 = v35[2];
    long long v30 = v35[3];
    long long v31 = v35[4];
    long long v32 = v35[5];
    long long v27 = v35[0];
    long long v28 = v35[1];
    sub_1BDFF34BC((uint64_t)v23);
    long long v15 = v23[0];
    long long v14 = v23[1];
    long long v16 = v23[2];
    long long v17 = v23[3];
    long long v18 = v23[4];
    uint64_t v13 = v24;
  }
  else
  {
    long long v14 = xmmword_1BE07F670;
    long long v15 = 0uLL;
    long long v16 = 0uLL;
    long long v17 = 0uLL;
    long long v18 = 0uLL;
  }
  double v19 = 50.0;
  uint64_t v21 = *((void *)v2 + 2);
  uint64_t v20 = *((void *)v2 + 3);
  if (!v11) {
    double v19 = v10;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v6;
  *(double *)(a1 + 24) = v19;
  *(void *)(a1 + 32) = v21;
  *(void *)(a1 + 40) = v20;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0xF000000000000000;
  *(unsigned char *)(a1 + 80) = v12 & 1;
  *(_OWORD *)(a1 + 88) = v15;
  *(_OWORD *)(a1 + 104) = v14;
  *(_OWORD *)(a1 + 120) = v16;
  *(_OWORD *)(a1 + 136) = v17;
  *(_OWORD *)(a1 + 152) = v18;
  *(void *)(a1 + 168) = v13;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDFF14BC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BE079670;
  uint64_t v3 = *v0;
  uint64_t v2 = v0[1];
  *(void *)(inited + 32) = *v0;
  *(void *)(inited + 40) = v2;
  uint64_t v5 = v0[2];
  uint64_t v4 = v0[3];
  *(void *)(inited + 48) = v5;
  *(void *)(inited + 56) = v4;
  if (!v2)
  {
    swift_bridgeObjectRetain();
    id v6 = (void *)MEMORY[0x1E4FBC860];
    if (!v4) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  id v6 = sub_1BE054CEC(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v8 = v6[2];
  unint64_t v7 = v6[3];
  if (v8 >= v7 >> 1) {
    id v6 = sub_1BE054CEC((void *)(v7 > 1), v8 + 1, 1, v6);
  }
  v6[2] = v8 + 1;
  id v9 = &v6[2 * v8];
  v9[4] = v3;
  v9[5] = v2;
  if (v4)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v6 = sub_1BE054CEC(0, v6[2] + 1, 1, v6);
    }
    unint64_t v11 = v6[2];
    unint64_t v10 = v6[3];
    if (v11 >= v10 >> 1) {
      id v6 = sub_1BE054CEC((void *)(v10 > 1), v11 + 1, 1, v6);
    }
    v6[2] = v11 + 1;
    char v12 = &v6[2 * v11];
    _DWORD v12[4] = v5;
    v12[5] = v4;
  }
LABEL_12:
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1AA0);
  sub_1BDFF837C();
  uint64_t v13 = sub_1BE070430();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1BDFF1674@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v9 = type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v36 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  long long v14 = (char *)&v36 - v13;
  MEMORY[0x1F4188790](v12);
  long long v16 = (char *)&v36 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
  MEMORY[0x1F4188790](v17 - 8);
  double v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = a1[7];
  long long v46 = a1[6];
  long long v47 = v20;
  long long v48 = a1[8];
  uint64_t v49 = *((void *)a1 + 18);
  long long v21 = a1[3];
  long long v42 = a1[2];
  long long v43 = v21;
  long long v22 = a1[5];
  long long v44 = a1[4];
  long long v45 = v22;
  long long v23 = a1[1];
  long long v40 = *a1;
  long long v41 = v23;
  sub_1BDFF1AEC(a5);
  char v24 = v44;
  unint64_t v37 = a4;
  if (BYTE1(v44) == 2)
  {
    if (v44)
    {
      char v25 = 0;
      goto LABEL_8;
    }
LABEL_6:
    sub_1BDFF8530(a5, (uint64_t)v16, type metadata accessor for EventAttendeeModelObject);
    goto LABEL_10;
  }
  if ((v44 & 1) == 0)
  {
    if (BYTE1(v44)) {
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  char v25 = BYTE1(v44) & 1;
LABEL_8:
  sub_1BDFF242C((uint64_t)v19);
  uint64_t v26 = type metadata accessor for EventOrganizerModelObject(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v19, 0, 1, v26);
  sub_1BDFF85F8((uint64_t)v19, v38, &qword_1EA0E3E28);
  if ((v25 & 1) == 0)
  {
    sub_1BDFF8530(a5, (uint64_t)v16, type metadata accessor for EventAttendeeModelObject);
    goto LABEL_18;
  }
LABEL_9:
  sub_1BDF8686C(a3, &qword_1EA0E3E20);
  sub_1BDFF8530(a5, a3, type metadata accessor for EventAttendeeModelObject);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(a3, 0, 1, v9);
  sub_1BDFF8530(a5, (uint64_t)v16, type metadata accessor for EventAttendeeModelObject);
  if (v24)
  {
LABEL_18:
    sub_1BDFF8598((uint64_t)v16, type metadata accessor for EventAttendeeModelObject);
    sub_1BDFF8530(a5, (uint64_t)v14, type metadata accessor for EventAttendeeModelObject);
    return sub_1BDFF8598((uint64_t)v14, type metadata accessor for EventAttendeeModelObject);
  }
LABEL_10:
  uint64_t v27 = *(void *)&v16[*(int *)(v9 + 52)];
  sub_1BDFF8598((uint64_t)v16, type metadata accessor for EventAttendeeModelObject);
  sub_1BDFF8530(a5, (uint64_t)v14, type metadata accessor for EventAttendeeModelObject);
  if (v27 == 2) {
    return sub_1BDFF8598((uint64_t)v14, type metadata accessor for EventAttendeeModelObject);
  }
  uint64_t v28 = *(void *)&v14[*(int *)(v9 + 52)];
  uint64_t result = sub_1BDFF8598((uint64_t)v14, type metadata accessor for EventAttendeeModelObject);
  if (v28 != 3)
  {
    uint64_t v30 = v36;
    sub_1BDFF8530(a5, v36, type metadata accessor for EventAttendeeModelObject);
    long long v31 = v37;
    unint64_t v32 = *v37;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t *v31 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v32 = sub_1BE055158(0, *(void *)(v32 + 16) + 1, 1, v32);
      unint64_t *v31 = v32;
    }
    unint64_t v35 = *(void *)(v32 + 16);
    unint64_t v34 = *(void *)(v32 + 24);
    if (v35 >= v34 >> 1)
    {
      unint64_t v32 = sub_1BE055158(v34 > 1, v35 + 1, 1, v32);
      unint64_t *v31 = v32;
    }
    *(void *)(v32 + 16) = v35 + 1;
    return sub_1BDFF865C(v30, v32+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v35, type metadata accessor for EventAttendeeModelObject);
  }
  return result;
}

uint64_t sub_1BDFF1AEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1BE06EF10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v2 + 80);
  if (!v11) {
    goto LABEL_5;
  }
  uint64_t v12 = *(void *)(v2 + 72);
  if (v12 == 0x6E776F6E6B6E75 && v11 == 0xE700000000000000) {
    goto LABEL_5;
  }
  if (sub_1BE070EF0()) {
    goto LABEL_5;
  }
  if (v12 == 0x676E69646E6570 && v11 == 0xE700000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    uint64_t v32 = 1;
  }
  else if (v12 == 0x6465747065636361 && v11 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    uint64_t v32 = 2;
  }
  else if (v12 == 0x64656E696C636564 && v11 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    uint64_t v32 = 3;
  }
  else if (v12 == 0x76697461746E6574 && v11 == 0xE900000000000065 || (sub_1BE070EF0() & 1) != 0)
  {
    uint64_t v32 = 4;
  }
  else if (v12 == 0x65746167656C6564 && v11 == 0xE900000000000064 || (sub_1BE070EF0() & 1) != 0)
  {
    uint64_t v32 = 5;
  }
  else if (v12 == 0x6574656C706D6F63 && v11 == 0xE900000000000064 || (sub_1BE070EF0() & 1) != 0)
  {
    uint64_t v32 = 6;
  }
  else
  {
    if ((v12 != 0x7365636F72506E69 || v11 != 0xE900000000000073) && (sub_1BE070EF0() & 1) == 0)
    {
LABEL_5:
      uint64_t v32 = 0;
      goto LABEL_6;
    }
    uint64_t v32 = 7;
  }
LABEL_6:
  uint64_t v13 = *(void *)(v2 + 96);
  if (!v13) {
    goto LABEL_19;
  }
  uint64_t v14 = *(void *)(v2 + 88);
  if ((v14 != 0x6E776F6E6B6E75 || v13 != 0xE700000000000000) && (sub_1BE070EF0() & 1) == 0)
  {
    if (v14 == 0x6465726975716572 && v13 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0) {
      goto LABEL_19;
    }
    if (v14 == 0x6C616E6F6974706FLL && v13 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
    {
      uint64_t v16 = 2;
      goto LABEL_20;
    }
    if (v14 == 0x7269616863 && v13 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
    {
      uint64_t v16 = 3;
      goto LABEL_20;
    }
    if (v14 == 0x69747261506E6F6ELL && v13 == 0xEE00746E61706963 || (sub_1BE070EF0() & 1) != 0)
    {
      uint64_t v16 = 4;
LABEL_20:
      uint64_t v34 = v16;
      uint64_t v15 = *(void *)(v2 + 112);
      if (!v15) {
        goto LABEL_28;
      }
      goto LABEL_21;
    }
LABEL_19:
    uint64_t v16 = 1;
    goto LABEL_20;
  }
  uint64_t v34 = 0;
  uint64_t v15 = *(void *)(v2 + 112);
  if (!v15) {
    goto LABEL_28;
  }
LABEL_21:
  uint64_t v17 = *(void *)(v2 + 104);
  if (v17 == 0x6E776F6E6B6E75 && v15 == 0xE700000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    uint64_t v33 = 0;
    goto LABEL_30;
  }
  if ((v17 != 0x6E6F73726570 || v15 != 0xE600000000000000) && (sub_1BE070EF0() & 1) == 0)
  {
    if (v17 == 1836019570 && v15 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
    {
      uint64_t v18 = 2;
      goto LABEL_29;
    }
    if (v17 == 0x656372756F736572 && v15 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
    {
      uint64_t v18 = 3;
      goto LABEL_29;
    }
    if (v17 == 0x70756F7267 && v15 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
    {
      uint64_t v18 = 4;
      goto LABEL_29;
    }
  }
LABEL_28:
  uint64_t v18 = 1;
LABEL_29:
  uint64_t v33 = v18;
LABEL_30:
  sub_1BDFB8210(v2, (uint64_t)v40, &qword_1EA0E3060);
  sub_1BDFB8210(v2 + 16, (uint64_t)v39, &qword_1EA0E3060);
  sub_1BDFB8210(v2 + 32, (uint64_t)v38, &qword_1EA0E3060);
  uint64_t v19 = *(void *)(v2 + 56);
  unint64_t v35 = v10;
  if (v19)
  {
    sub_1BDFCE910((uint64_t)v40);
    sub_1BDFCE910((uint64_t)v39);
    sub_1BDFCE910((uint64_t)v38);
    sub_1BE06EE00();
  }
  else
  {
    uint64_t v20 = sub_1BE06EE10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
    sub_1BDFCE910((uint64_t)v40);
    sub_1BDFCE910((uint64_t)v39);
    sub_1BDFCE910((uint64_t)v38);
  }
  int v36 = *(unsigned char *)(v2 + 65) & 1;
  sub_1BDFB8210(v2 + 120, (uint64_t)v37, &qword_1EA0E3060);
  sub_1BDFCE910((uint64_t)v37);
  sub_1BE06EF00();
  uint64_t v21 = sub_1BE06EEF0();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v24 = (int *)type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v25 = a1 + v24[7];
  uint64_t v26 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  uint64_t v27 = (void *)(a1 + v24[10]);
  *uint64_t v27 = 0;
  v27[1] = 0;
  uint64_t v28 = (void *)(a1 + v24[14]);
  void *v28 = 0;
  v28[1] = 0;
  sub_1BDFB8210((uint64_t)v40, a1, &qword_1EA0E3060);
  sub_1BDFB8210((uint64_t)v39, a1 + 16, &qword_1EA0E3060);
  sub_1BDFB8210((uint64_t)v38, a1 + 32, &qword_1EA0E3060);
  sub_1BDFF85F8((uint64_t)v35, v25, &qword_1EB678020);
  long long v29 = (uint64_t *)(a1 + v24[8]);
  uint64_t *v29 = v21;
  v29[1] = v23;
  *(unsigned char *)(a1 + v24[9]) = v36;
  swift_bridgeObjectRelease();
  *uint64_t v27 = 0;
  v27[1] = 0;
  *(void *)(a1 + v24[11]) = v32;
  *(void *)(a1 + v24[12]) = v34;
  *(void *)(a1 + v24[13]) = v33;
  return sub_1BDFF85F8((uint64_t)v37, (uint64_t)v28, &qword_1EA0E3060);
}

uint64_t sub_1BDFF242C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1BE06EF10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 144);
  if (!v10) {
    goto LABEL_5;
  }
  uint64_t v11 = *(void *)(v1 + 136);
  if (v11 == 1701736302 && v10 == 0xE400000000000000) {
    goto LABEL_5;
  }
  if (sub_1BE070EF0()) {
    goto LABEL_5;
  }
  if (v11 == 0x746E65696C63 && v10 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    uint64_t v22 = 1;
  }
  else
  {
    if ((v11 != 0x726576726573 || v10 != 0xE600000000000000) && (sub_1BE070EF0() & 1) == 0)
    {
LABEL_5:
      uint64_t v22 = 0;
      goto LABEL_6;
    }
    uint64_t v22 = 2;
  }
LABEL_6:
  sub_1BDFB8210(v1, (uint64_t)v26, &qword_1EA0E3060);
  sub_1BDFB8210(v1 + 16, (uint64_t)v25, &qword_1EA0E3060);
  sub_1BDFB8210(v1 + 32, (uint64_t)v24, &qword_1EA0E3060);
  if (*(void *)(v1 + 56))
  {
    sub_1BDFCE910((uint64_t)v26);
    sub_1BDFCE910((uint64_t)v25);
    sub_1BDFCE910((uint64_t)v24);
    sub_1BE06EE00();
  }
  else
  {
    uint64_t v12 = sub_1BE06EE10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
    sub_1BDFCE910((uint64_t)v26);
    sub_1BDFCE910((uint64_t)v25);
    sub_1BDFCE910((uint64_t)v24);
  }
  int v23 = *(unsigned char *)(v1 + 65) & 1;
  sub_1BE06EF00();
  uint64_t v13 = sub_1BE06EEF0();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v16 = (int *)type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v17 = a1 + v16[7];
  uint64_t v18 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = (void *)(a1 + v16[10]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  sub_1BDFB8210((uint64_t)v26, a1, &qword_1EA0E3060);
  sub_1BDFB8210((uint64_t)v25, a1 + 16, &qword_1EA0E3060);
  sub_1BDFB8210((uint64_t)v24, a1 + 32, &qword_1EA0E3060);
  sub_1BDFF85F8((uint64_t)v9, v17, &qword_1EB678020);
  uint64_t v20 = (uint64_t *)(a1 + v16[8]);
  *uint64_t v20 = v13;
  v20[1] = v15;
  *(unsigned char *)(a1 + v16[9]) = v23;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v19 = 0;
  v19[1] = 0;
  *(void *)(a1 + v16[11]) = v22;
  return result;
}

uint64_t sub_1BDFF2808@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v50 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v49 = (char *)&v47 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v11 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  uint64_t v54 = *(void *)(v11 - 8);
  uint64_t v55 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v53 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v47 - v14;
  sub_1BDFB8210(v1 + 64, (uint64_t)v60, &qword_1EA0E3060);
  sub_1BDFB8210((uint64_t)v60, (uint64_t)v61, &qword_1EA0E3060);
  uint64_t v51 = v1;
  if (v61[1])
  {
    uint64_t v17 = sub_1BE070560();
    uint64_t v18 = v16;
    if (v17 == 0x656C707061 && v16 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v48 = 0;
      uint64_t v2 = v51;
      goto LABEL_12;
    }
    uint64_t v2 = v51;
    if (v17 == 0x656C676F6F67 && v18 == 0xE600000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t v48 = 1;
      goto LABEL_12;
    }
    char v19 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_10;
    }
  }
  uint64_t v48 = 0;
LABEL_12:
  sub_1BDFB8210(v2, (uint64_t)v59, &qword_1EA0E3060);
  sub_1BDFB8210(v2 + 16, (uint64_t)v58, &qword_1EA0E3E68);
  sub_1BDFB8210((uint64_t)v58, (uint64_t)&v62, &qword_1EA0E3E68);
  uint64_t v20 = v62;
  if (v62)
  {
    int64_t v21 = *(void *)(v62 + 16);
    if (v21)
    {
      uint64_t v47 = a1;
      sub_1BDFCE910((uint64_t)v59);
      sub_1BDFD5B78((uint64_t)v58);
      v57[0] = MEMORY[0x1E4FBC860];
      sub_1BDFF49A8(0, v21, 0);
      uint64_t v22 = (unsigned char *)(v20 + 64);
      uint64_t v52 = v15;
      uint64_t v23 = v55;
      char v24 = v53;
      do
      {
        uint64_t v26 = *((void *)v22 - 4);
        uint64_t v25 = *((void *)v22 - 3);
        char v27 = *v22;
        if (*((void *)v22 - 1))
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          sub_1BE06EE00();
        }
        else
        {
          uint64_t v28 = sub_1BE06EE10();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 1, 1, v28);
          swift_bridgeObjectRetain_n();
        }
        uint64_t v29 = (uint64_t)v24 + *(int *)(v23 + 20);
        uint64_t v30 = sub_1BE06EE10();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
        *char v24 = v26;
        v24[1] = v25;
        sub_1BDF8686C(v29, &qword_1EB678020);
        sub_1BDFB8210((uint64_t)v10, v29, &qword_1EB678020);
        *((unsigned char *)v24 + *(int *)(v23 + 24)) = v27 & 1;
        uint64_t v31 = (uint64_t)v52;
        sub_1BDFF865C((uint64_t)v24, (uint64_t)v52, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v32 = v57[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDFF49A8(0, *(void *)(v32 + 16) + 1, 1);
          uint64_t v32 = v57[0];
        }
        unint64_t v34 = *(void *)(v32 + 16);
        unint64_t v33 = *(void *)(v32 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_1BDFF49A8(v33 > 1, v34 + 1, 1);
          uint64_t v32 = v57[0];
        }
        v22 += 40;
        *(void *)(v32 + 16) = v34 + 1;
        sub_1BDFF865C(v31, v32+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v34, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
        --v21;
      }
      while (v21);
      sub_1BDFDE9E8((uint64_t)v58);
      a1 = v47;
    }
    else
    {
      sub_1BDFCE910((uint64_t)v59);
      uint64_t v32 = MEMORY[0x1E4FBC860];
    }
    uint64_t v2 = v51;
  }
  else
  {
    sub_1BDFCE910((uint64_t)v59);
    uint64_t v32 = 0;
  }
  int v35 = *(unsigned __int8 *)(v2 + 56);
  sub_1BDFB8210(v2 + 24, (uint64_t)v57, &qword_1EA0E3060);
  sub_1BDFB8210(v2 + 40, (uint64_t)v56, &qword_1EA0E3060);
  if (*(void *)(v2 + 88))
  {
    sub_1BDFCE910((uint64_t)v57);
    sub_1BDFCE910((uint64_t)v56);
    uint64_t v2 = v51;
    sub_1BE06EE00();
  }
  else
  {
    uint64_t v36 = sub_1BE06EE10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v49, 1, 1, v36);
    sub_1BDFCE910((uint64_t)v57);
    sub_1BDFCE910((uint64_t)v56);
  }
  uint64_t v37 = v50;
  if (*(void *)(v2 + 104))
  {
    sub_1BE06EE00();
  }
  else
  {
    uint64_t v38 = sub_1BE06EE10();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v37, 1, 1, v38);
  }
  char v39 = (v35 == 2) | v35;
  uint64_t v40 = type metadata accessor for EventVirtualConferenceModelObject(0);
  uint64_t v41 = a1 + *(int *)(v40 + 40);
  uint64_t v42 = sub_1BE06EE10();
  long long v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56);
  v43(v41, 1, 1, v42);
  uint64_t v44 = a1 + *(int *)(v40 + 44);
  v43(v44, 1, 1, v42);
  sub_1BDFB8210((uint64_t)v59, a1, &qword_1EA0E3060);
  *(void *)(a1 + 16) = v32;
  sub_1BDFB8210((uint64_t)v57, a1 + 24, &qword_1EA0E3060);
  sub_1BDFB8210((uint64_t)v56, a1 + 40, &qword_1EA0E3060);
  *(unsigned char *)(a1 + 56) = v39 & 1;
  uint64_t v45 = (uint64_t)v49;
  *(void *)(a1 + 64) = v48;
  sub_1BDFF85F8(v45, v41, &qword_1EB678020);
  return sub_1BDFF85F8(v50, v44, &qword_1EB678020);
}

uint64_t sub_1BDFF2F44@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(a1 + 8)) {
    sub_1BE06EED0();
  }
  else {
    *a2 = *(void *)a1;
  }
  type metadata accessor for EventAlarmTrigger();
  swift_storeEnumTagMultiPayload();
  uint64_t result = type metadata accessor for EventAlarmModelObject();
  *((unsigned char *)a2 + *(int *)(result + 20)) = 0;
  return result;
}

uint64_t sub_1BDFF2FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 0x796C696164 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    uint64_t v13 = 0;
  }
  else if (a1 == 0x796C6B656577 && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    uint64_t v13 = 1;
  }
  else if (a1 == 0x796C68746E6F6DLL && a2 == 0xE700000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    uint64_t v13 = 2;
  }
  else if (a1 == 0x796C72616579 && a2 == 0xE600000000000000)
  {
    uint64_t v13 = 3;
  }
  else if (sub_1BE070EF0())
  {
    uint64_t v13 = 3;
  }
  else
  {
    uint64_t v13 = 0;
  }
  uint64_t v14 = type metadata accessor for EventRecurrenceEndModelObject(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  if (a4) {
    uint64_t v15 = 1;
  }
  else {
    uint64_t v15 = a3;
  }
  return EventRecurrenceRuleModelObject.init(recurrenceEnd:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:daysOfTheYear:weeksOfTheYear:monthsOfTheYear:setPositions:)((uint64_t)v12, v13, v15, 0, 1, 0, 0, 0, a5, 0, 0, 0);
}

uint64_t sub_1BDFF321C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1BE070560();
  CalendarColor.init(_:)(v4, v5, (uint64_t)&v12);
  sub_1BE06ED90();
  swift_allocObject();
  sub_1BE06ED80();
  sub_1BDFC87B0();
  uint64_t v6 = sub_1BE06ED70();
  unint64_t v8 = v7;
  swift_release();
  sub_1BDF840AC(v6, v8);
  uint64_t v10 = *(void *)(v2 + 8);
  uint64_t v9 = *(void *)(v2 + 16);
  *(unsigned char *)a1 = *(unsigned char *)v2 & 1;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = 0xD000000000000025;
  *(void *)(a1 + 32) = 0x80000001BE08D490;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  return sub_1BDF859DC(v6, v8);
}

uint64_t sub_1BDFF3350()
{
  uint64_t result = 7954788;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1920298856;
      break;
    case 2:
      uint64_t result = 0x6574756E696DLL;
      break;
    case 3:
      uint64_t result = 0x656E6F5A656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDFF33CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFFCE58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFF33F4(uint64_t a1)
{
  unint64_t v2 = sub_1BE004540();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFF3430(uint64_t a1)
{
  unint64_t v2 = sub_1BE004540();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1BDFF346C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BDFFCFEC(a1, (uint64_t)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_1BDFF34BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  BOOL v5 = *v1 == 0x6E776F6E6B6E75 && v4 == 0xE700000000000000;
  if (v5 || (sub_1BE070EF0() & 1) != 0)
  {
    uint64_t v6 = -1;
  }
  else
  {
    BOOL v12 = v3 == 1701670760 && v4 == 0xE400000000000000;
    if (v12 || (sub_1BE070EF0() & 1) != 0)
    {
      uint64_t v6 = 0;
    }
    else if (v3 == 1802661751 && v4 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
    {
      uint64_t v6 = 1;
    }
    else if (v3 == 0x6C6F6F686373 && v4 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
    {
      uint64_t v6 = 2;
    }
    else if (v3 == 7174503 && v4 == 0xE300000000000000)
    {
      uint64_t v6 = 3;
    }
    else
    {
      char v13 = sub_1BE070EF0();
      uint64_t v6 = 3;
      if ((v13 & 1) == 0) {
        uint64_t v6 = -1;
      }
    }
  }
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[11];
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  long long v9 = *(_OWORD *)(v1 + 5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 3);
  *(_OWORD *)(a1 + 32) = v9;
  long long v10 = *(_OWORD *)(v1 + 9);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v1 + 7);
  *(_OWORD *)(a1 + 64) = v10;
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1BDFF36BC()
{
  if (*v0) {
    return 0x64757469676E6F6CLL;
  }
  else {
    return 0x656475746974616CLL;
  }
}

uint64_t sub_1BDFF36FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFFD214(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFF3724(uint64_t a1)
{
  unint64_t v2 = sub_1BE0027A0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFF3760(uint64_t a1)
{
  unint64_t v2 = sub_1BE0027A0();

  return MEMORY[0x1F41862B0](a1, v2);
}

void sub_1BDFF379C(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_1BDFFD314(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
  }
}

unint64_t sub_1BDFF37C8(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x614C6D6F74737563;
      break;
    case 2:
      unint64_t result = 0x4E6D65744970616DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0x4C73736572646461;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BDFF38B4()
{
  return sub_1BDFF37C8(*v0);
}

uint64_t sub_1BDFF38BC(uint64_t a1)
{
  unint64_t v2 = sub_1BE00274C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFF38F8(uint64_t a1)
{
  unint64_t v2 = sub_1BE00274C();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1BDFF3934@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1BDFFD4C0(a1, (uint64_t *)v8);
  if (!v2)
  {
    long long v5 = v8[3];
    a2[2] = v8[2];
    a2[3] = v5;
    long long v6 = v8[5];
    a2[4] = v8[4];
    a2[5] = v6;
    double result = *(double *)v8;
    long long v7 = v8[1];
    *a2 = v8[0];
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_1BDFF3980()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x73736572646461;
      break;
    case 2:
      uint64_t result = 0x616E6964726F6F63;
      break;
    case 3:
      uint64_t result = 0x737569646172;
      break;
    case 4:
      uint64_t result = 0x636572706D497369;
      break;
    case 5:
      uint64_t result = 0x6574636964657270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDFF3A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFFD958(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFF3A80(uint64_t a1)
{
  unint64_t v2 = sub_1BE002968();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFF3ABC(uint64_t a1)
{
  unint64_t v2 = sub_1BE002968();

  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1BDFF3AF8@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BDFFDC14(a1, (uint64_t)v9);
  if (!v2)
  {
    long long v5 = v9[9];
    *(_OWORD *)(a2 + 128) = v9[8];
    *(_OWORD *)(a2 + 144) = v5;
    *(void *)(a2 + 160) = v10;
    long long v6 = v9[5];
    *(_OWORD *)(a2 + 64) = v9[4];
    *(_OWORD *)(a2 + 80) = v6;
    long long v7 = v9[7];
    *(_OWORD *)(a2 + 96) = v9[6];
    *(_OWORD *)(a2 + 112) = v7;
    long long v8 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v8;
    __n128 result = (__n128)v9[3];
    *(_OWORD *)(a2 + 32) = v9[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1BDFF3B70()
{
  if (*v0) {
    return 0x756C6F7362417369;
  }
  else {
    return 0x74657366666FLL;
  }
}

uint64_t sub_1BDFF3BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFFE0D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFF3BD4(uint64_t a1)
{
  unint64_t v2 = sub_1BE004594();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFF3C10(uint64_t a1)
{
  unint64_t v2 = sub_1BE004594();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1BDFF3C4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1BDFFE1C8(a1);
  if (!v2)
  {
    *(void *)a2 = v5;
    *(unsigned char *)(a2 + 8) = result;
  }
  return result;
}

unint64_t sub_1BDFF3C7C(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6874654D6E696F6ALL;
      break;
    case 2:
      unint64_t result = 0x736C6961746564;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x6261746972577369;
      break;
    case 5:
      unint64_t result = 0x656372756F73;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDFF3D90()
{
  uint64_t v1 = 7107189;
  if (*v0 != 1) {
    uint64_t v1 = 0x6364616F72427369;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_1BDFF3DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFFE370(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFF3E10(uint64_t a1)
{
  unint64_t v2 = sub_1BE0026F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFF3E4C(uint64_t a1)
{
  unint64_t v2 = sub_1BE0026F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1BDFF3E88@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BDFFE4C8(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(unsigned char *)(a2 + 32) = v7;
  }
  return result;
}

unint64_t sub_1BDFF3ED0()
{
  return sub_1BDFF3C7C(*v0);
}

uint64_t sub_1BDFF3ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFFE6E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFF3F00(uint64_t a1)
{
  unint64_t v2 = sub_1BE002848();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFF3F3C(uint64_t a1)
{
  unint64_t v2 = sub_1BE002848();

  return MEMORY[0x1F41862B0](a1, v2);
}

__n128 sub_1BDFF3F78@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BDFFEA2C(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v7[6];
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1BDFF3FCC(char a1)
{
  uint64_t result = 1701667182;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C69616D65;
      break;
    case 2:
      uint64_t result = 0x6D754E656E6F6870;
      break;
    case 3:
      uint64_t result = 7107189;
      break;
    case 4:
      uint64_t result = 0x696E6167724F7369;
      break;
    case 5:
      uint64_t result = 0x6E65727275437369;
      break;
    case 6:
      uint64_t result = 0x737574617473;
      break;
    case 7:
      uint64_t result = 1701605234;
      break;
    case 8:
      uint64_t result = 1701869940;
      break;
    case 9:
      uint64_t result = 0x746E656D6D6F63;
      break;
    case 10:
      uint64_t result = 0x656C756465686373;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDFF4120()
{
  return sub_1BDFF3FCC(*v0);
}

uint64_t sub_1BDFF4128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BDFFF01C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFF4150(uint64_t a1)
{
  unint64_t v2 = sub_1BE00463C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFF418C(uint64_t a1)
{
  unint64_t v2 = sub_1BE00463C();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1BDFF41C8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BDFFF4A8(a1, (uint64_t)v9);
  if (!v2)
  {
    long long v5 = v9[7];
    *(_OWORD *)(a2 + 96) = v9[6];
    *(_OWORD *)(a2 + 112) = v5;
    *(_OWORD *)(a2 + 128) = v9[8];
    *(void *)(a2 + 144) = v10;
    long long v6 = v9[3];
    *(_OWORD *)(a2 + 32) = v9[2];
    *(_OWORD *)(a2 + 48) = v6;
    long long v7 = v9[5];
    *(_OWORD *)(a2 + 64) = v9[4];
    *(_OWORD *)(a2 + 80) = v7;
    double result = *(double *)v9;
    long long v8 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v8;
  }
  return result;
}

uint64_t sub_1BDFF423C(uint64_t a1)
{
  unint64_t v2 = sub_1BE0027F4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFF4278(uint64_t a1)
{
  unint64_t v2 = sub_1BE0027F4();

  return MEMORY[0x1F41862B0](a1, v2);
}

double sub_1BDFF42B4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BDFFFE1C(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

unint64_t sub_1BDFF42FC(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x7472617473;
      break;
    case 3:
      unint64_t result = 6581861;
      break;
    case 4:
      unint64_t result = 0x7961446C6C417369;
      break;
    case 5:
      unint64_t result = 0x6974616F6C467369;
      break;
    case 6:
      unint64_t result = 0x736F706F72507369;
      break;
    case 7:
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 10:
      unint64_t result = 0x69546C6576617274;
      break;
    case 11:
      unint64_t result = 0x7261646E656C6163;
      break;
    case 12:
      unint64_t result = 0x4C79636176697270;
      break;
    case 13:
      unint64_t result = 0x737574617473;
      break;
    case 14:
      unint64_t result = 0x736D72616C61;
      break;
    case 15:
      unint64_t result = 0x7365746F6ELL;
      break;
    case 16:
      unint64_t result = 0x6962616C69617661;
      break;
    case 17:
      unint64_t result = 0x6E65727275636572;
      break;
    case 18:
      unint64_t result = 0x6565646E65747461;
      break;
    case 19:
      unint64_t result = 0x6E697274536C7275;
      break;
    case 20:
      unint64_t result = 0x6361747441736168;
      break;
    case 21:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 22:
      unint64_t result = 0xD000000000000017;
      break;
    case 23:
      unint64_t result = 0x7461726765746E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BDFF45F0()
{
  if (*v0) {
    return 0x6C61767265746E69;
  }
  else {
    return 0x636E657571657266;
  }
}

uint64_t sub_1BDFF4630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BE000058(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BDFF4658(uint64_t a1)
{
  unint64_t v2 = sub_1BE0045E8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFF4694(uint64_t a1)
{
  unint64_t v2 = sub_1BE0045E8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1BDFF46D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1BE000158(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 24) = v7 & 1;
  }
  return result;
}

unint64_t sub_1BDFF4708()
{
  return sub_1BDFF42FC(*v0);
}

uint64_t sub_1BDFF4710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BE000350(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BDFF4738(unsigned char *a1@<X8>)
{
  *a1 = 24;
}

uint64_t sub_1BDFF4744(uint64_t a1)
{
  unint64_t v2 = sub_1BE0023EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BDFF4780(uint64_t a1)
{
  unint64_t v2 = sub_1BE0023EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

void *sub_1BDFF47BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1BE000D0C(a1, __src);
  if (!v2) {
    return memcpy(a2, __src, 0x338uLL);
  }
  return result;
}

uint64_t sub_1BDFF4810(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF4B68(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BDFF4830(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF510C(a1, a2, a3, *v3, &qword_1EA0E3DB0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BDFF4860(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF527C(a1, a2, a3, (void *)*v3, &qword_1EA0E3E78, (uint64_t (*)(void))type metadata accessor for EventModelObject);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1BDFF489C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF527C(a1, a2, a3, (void *)*v3, &qword_1EA0E3E80, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1BDFF48D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF4CD4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BDFF48F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFF4950(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFF49A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF527C(a1, a2, a3, (void *)*v3, &qword_1EA0E3DE0, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1BDFF49E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF527C(a1, a2, a3, (void *)*v3, &qword_1EA0E3DC0, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1BDFF4A20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF527C(a1, a2, a3, (void *)*v3, &qword_1EA0E3DD0, type metadata accessor for EventAttendeeModelObject);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1BDFF4A5C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF510C(a1, a2, a3, *v3, &qword_1EA0E3DF0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BDFF4A8C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF4E4C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BDFF4AAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF4FAC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BDFF4ACC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF510C(a1, a2, a3, *v3, &qword_1EA0E3DB8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BDFF4AFC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF510C(a1, a2, a3, *v3, &qword_1EA0E1588);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1BDFF4B2C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1BDFF527C(a1, a2, a3, (void *)*v3, &qword_1EA0E3DC8, type metadata accessor for EventRecurrenceRuleModelObject);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1BDFF4B68(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1568);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  char v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

uint64_t sub_1BDFF4CD4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E88);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 136);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  char v13 = a4 + 32;
  size_t v14 = 136 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

uint64_t sub_1BDFF4E4C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3DE8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  char v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

uint64_t sub_1BDFF4FAC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3DD8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  char v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

uint64_t sub_1BDFF510C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  size_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

uint64_t sub_1BDFF527C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  _OWORD v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  int64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  char v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

uint64_t sub_1BDFF54C4(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v47 = a6;
  uint64_t v50 = a5;
  int64_t v8 = v6;
  uint64_t v10 = a3(0);
  uint64_t v48 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v49 = a2;
  uint64_t v14 = sub_1BE070CE0();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_39;
  }
  uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v17 = *(void *)(v13 + 64);
  long long v46 = (void *)(v13 + 64);
  if (v16 < 64) {
    uint64_t v18 = ~(-1 << v16);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v17;
  uint64_t v44 = v6;
  int64_t v45 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v20 = v14 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v25 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v26 = v25 | (v22 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v22++, 1)) {
      goto LABEL_41;
    }
    if (v22 >= v45) {
      break;
    }
    uint64_t v28 = v46;
    unint64_t v29 = v46[v22];
    if (!v29)
    {
      int64_t v30 = v22 + 1;
      if (v22 + 1 >= v45)
      {
LABEL_32:
        swift_release();
        int64_t v8 = v44;
        if ((v49 & 1) == 0) {
          goto LABEL_39;
        }
        goto LABEL_35;
      }
      unint64_t v29 = v46[v30];
      if (!v29)
      {
        while (1)
        {
          int64_t v22 = v30 + 1;
          if (__OFADD__(v30, 1)) {
            break;
          }
          if (v22 >= v45) {
            goto LABEL_32;
          }
          unint64_t v29 = v46[v22];
          ++v30;
          if (v29) {
            goto LABEL_19;
          }
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v22;
    }
LABEL_19:
    unint64_t v19 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v22 << 6);
LABEL_20:
    uint64_t v31 = (uint64_t *)(*(void *)(v13 + 48) + 16 * v26);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = *(void *)(v48 + 72);
    uint64_t v35 = *(void *)(v13 + 56) + v34 * v26;
    if (v49)
    {
      sub_1BDFF865C(v35, (uint64_t)v12, v50);
    }
    else
    {
      sub_1BDFF8530(v35, (uint64_t)v12, v47);
      swift_bridgeObjectRetain();
    }
    sub_1BE070FB0();
    sub_1BE070590();
    uint64_t result = sub_1BE070FF0();
    uint64_t v36 = -1 << *(unsigned char *)(v15 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v20 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v37) & ~*(void *)(v20 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v20 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v23 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v20 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    char v24 = (void *)(*(void *)(v15 + 48) + 16 * v23);
    *char v24 = v33;
    v24[1] = v32;
    uint64_t result = sub_1BDFF865C((uint64_t)v12, *(void *)(v15 + 56) + v34 * v23, v50);
    ++*(void *)(v15 + 16);
  }
  swift_release();
  int64_t v8 = v44;
  uint64_t v28 = v46;
  if ((v49 & 1) == 0) {
    goto LABEL_39;
  }
LABEL_35:
  uint64_t v43 = 1 << *(unsigned char *)(v13 + 32);
  if (v43 >= 64) {
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v28 = -1 << v43;
  }
  *(void *)(v13 + 16) = 0;
LABEL_39:
  uint64_t result = swift_release();
  *int64_t v8 = v15;
  return result;
}

uint64_t sub_1BDFF5864(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3DF8);
  char v50 = a2;
  uint64_t v6 = sub_1BE070CE0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v48 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v46 = v2;
  int64_t v47 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      if (v50) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
    if (__OFADD__(v13++, 1)) {
      goto LABEL_40;
    }
    if (v13 >= v47) {
      break;
    }
    char v27 = v48;
    unint64_t v28 = v48[v13];
    if (!v28)
    {
      int64_t v29 = v13 + 1;
      if (v13 + 1 >= v47)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v46;
        if ((v50 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v28 = v48[v29];
      if (!v28)
      {
        while (1)
        {
          int64_t v13 = v29 + 1;
          if (__OFADD__(v29, 1)) {
            break;
          }
          if (v13 >= v47) {
            goto LABEL_31;
          }
          unint64_t v28 = v48[v13];
          ++v29;
          if (v28) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_20:
    unint64_t v10 = (v28 - 1) & v28;
    unint64_t v18 = __clz(__rbit64(v28)) + (v13 << 6);
    if (v50)
    {
LABEL_10:
      unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = *(void *)(v5 + 56) + 136 * v18;
      uint64_t v51 = *(void *)(v22 + 8);
      uint64_t v52 = *(void *)(v22 + 24);
      uint64_t v53 = *(void *)v22;
      uint64_t v55 = *(void *)(v22 + 32);
      uint64_t v56 = *(void *)(v22 + 16);
      uint64_t v57 = *(void *)(v22 + 40);
      uint64_t v54 = *(void *)(v22 + 48);
      char v58 = *(unsigned char *)(v22 + 56);
      char v59 = *(unsigned char *)(v22 + 57);
      char v60 = *(unsigned char *)(v22 + 58);
      char v61 = *(unsigned char *)(v22 + 59);
      char v62 = *(unsigned char *)(v22 + 60);
      long long v63 = *(_OWORD *)(v22 + 64);
      char v23 = *(unsigned char *)(v22 + 88);
      uint64_t v64 = *(void *)(v22 + 80);
      uint64_t v65 = *(void *)(v22 + 96);
      char v24 = *(unsigned char *)(v22 + 104);
      uint64_t v66 = *(void *)(v22 + 120);
      uint64_t v67 = *(void *)(v22 + 112);
      unint64_t v25 = *(unsigned int *)(v22 + 128) | ((unint64_t)(*(unsigned __int16 *)(v22 + 132) | (*(unsigned __int8 *)(v22 + 134) << 16)) << 32);
      goto LABEL_22;
    }
LABEL_21:
    int64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
    uint64_t v20 = *v30;
    uint64_t v21 = v30[1];
    uint64_t v31 = *(void *)(v5 + 56) + 136 * v18;
    v68[0] = *(_OWORD *)v31;
    long long v32 = *(_OWORD *)(v31 + 64);
    long long v34 = *(_OWORD *)(v31 + 16);
    long long v33 = *(_OWORD *)(v31 + 32);
    long long v70 = *(_OWORD *)(v31 + 48);
    long long v71 = v32;
    v68[1] = v34;
    long long v69 = v33;
    long long v36 = *(_OWORD *)(v31 + 96);
    long long v35 = *(_OWORD *)(v31 + 112);
    long long v37 = *(_OWORD *)(v31 + 80);
    *(void *)&v74[15] = *(void *)(v31 + 127);
    long long v73 = v36;
    *(_OWORD *)uint64_t v74 = v35;
    long long v72 = v37;
    uint64_t v66 = *((void *)&v35 + 1);
    uint64_t v67 = v35;
    unint64_t v25 = *(unsigned int *)&v74[16] | ((unint64_t)(*(unsigned __int16 *)&v74[20] | (v74[22] << 16)) << 32);
    char v24 = BYTE8(v36);
    uint64_t v64 = v37;
    uint64_t v65 = v36;
    char v23 = BYTE8(v37);
    long long v63 = v71;
    char v61 = BYTE11(v70);
    char v62 = BYTE12(v70);
    char v59 = BYTE9(v70);
    char v60 = BYTE10(v70);
    char v58 = BYTE8(v70);
    uint64_t v54 = v70;
    uint64_t v55 = v69;
    uint64_t v56 = v34;
    uint64_t v57 = *((void *)&v69 + 1);
    uint64_t v52 = *((void *)&v34 + 1);
    uint64_t v51 = *((void *)&v68[0] + 1);
    uint64_t v53 = *(void *)&v68[0];
    swift_bridgeObjectRetain();
    sub_1BDFC8920((uint64_t)v68);
LABEL_22:
    sub_1BE070FB0();
    sub_1BE070590();
    uint64_t result = sub_1BE070FF0();
    uint64_t v38 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v39 = result & ~v38;
    unint64_t v40 = v39 >> 6;
    if (((-1 << v39) & ~*(void *)(v11 + 8 * (v39 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v39) & ~*(void *)(v11 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v41 = 0;
      unint64_t v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v43 = v40 == v42;
        if (v40 == v42) {
          unint64_t v40 = 0;
        }
        v41 |= v43;
        uint64_t v44 = *(void *)(v11 + 8 * v40);
      }
      while (v44 == -1);
      unint64_t v14 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    LOBYTE(v68[0]) = v23;
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    void *v15 = v20;
    v15[1] = v21;
    uint64_t v16 = *(void *)(v7 + 56) + 136 * v14;
    *(void *)uint64_t v16 = v53;
    *(void *)(v16 + 8) = v51;
    *(void *)(v16 + 16) = v56;
    *(void *)(v16 + 24) = v52;
    *(void *)(v16 + 32) = v55;
    *(void *)(v16 + 40) = v57;
    *(void *)(v16 + 48) = v54;
    *(unsigned char *)(v16 + 56) = v58;
    *(unsigned char *)(v16 + 57) = v59;
    *(unsigned char *)(v16 + 58) = v60;
    *(unsigned char *)(v16 + 59) = v61;
    *(unsigned char *)(v16 + 60) = v62;
    *(_OWORD *)(v16 + 64) = v63;
    *(void *)(v16 + 80) = v64;
    *(unsigned char *)(v16 + 88) = v68[0];
    *(void *)(v16 + 96) = v65;
    *(unsigned char *)(v16 + 104) = v24;
    *(void *)(v16 + 112) = v67;
    *(void *)(v16 + 120) = v66;
    *(unsigned char *)(v16 + 134) = BYTE6(v25);
    *(_WORD *)(v16 + 132) = WORD2(v25);
    *(_DWORD *)(v16 + 128) = v25;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v46;
  char v27 = v48;
  if ((v50 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v45 = 1 << *(unsigned char *)(v5 + 32);
  if (v45 >= 64) {
    bzero(v27, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v27 = -1 << v45;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_1BDFF5D80(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  long long v36 = a3;
  long long v37 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a1(0);
  uint64_t v35 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v32 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *v4;
  uint64_t v11 = sub_1BE070CD0();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_26:
    *uint64_t v6 = v12;
    return result;
  }
  long long v33 = v6;
  uint64_t result = (void *)(v11 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14) {
    uint64_t result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  }
  uint64_t v34 = v10 + 64;
  int64_t v16 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v17 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v10 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v16++, 1)) {
      goto LABEL_28;
    }
    if (v16 >= v20)
    {
LABEL_24:
      uint64_t result = (void *)swift_release();
      uint64_t v6 = v33;
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v16);
    if (!v30) {
      break;
    }
LABEL_23:
    unint64_t v19 = (v30 - 1) & v30;
    unint64_t v22 = __clz(__rbit64(v30)) + (v16 << 6);
LABEL_12:
    uint64_t v23 = 16 * v22;
    char v24 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v22);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    unint64_t v27 = *(void *)(v35 + 72) * v22;
    sub_1BDFF8530(*(void *)(v10 + 56) + v27, (uint64_t)v9, v36);
    unint64_t v28 = (void *)(*(void *)(v12 + 48) + v23);
    void *v28 = v25;
    v28[1] = v26;
    sub_1BDFF865C((uint64_t)v9, *(void *)(v12 + 56) + v27, v37);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v16 + 1;
  if (v16 + 1 >= v20) {
    goto LABEL_24;
  }
  unint64_t v30 = *(void *)(v34 + 8 * v31);
  if (v30)
  {
    ++v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v16 >= v20) {
      goto LABEL_24;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v16);
    ++v31;
    if (v30) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BDFF5FDC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3DF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1BE070CD0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v9);
    if (!v37) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v37 - 1) & v37;
    unint64_t v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 136 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    long long v23 = *(_OWORD *)(v21 + 16);
    long long v22 = *(_OWORD *)(v21 + 32);
    long long v24 = *(_OWORD *)(v21 + 64);
    long long v42 = *(_OWORD *)(v21 + 48);
    long long v43 = v24;
    long long v26 = *(_OWORD *)(v21 + 96);
    long long v25 = *(_OWORD *)(v21 + 112);
    long long v27 = *(_OWORD *)(v21 + 80);
    *(void *)&v46[15] = *(void *)(v21 + 127);
    long long v45 = v26;
    *(_OWORD *)long long v46 = v25;
    long long v44 = v27;
    long long v39 = *(_OWORD *)v21;
    long long v40 = v23;
    long long v41 = v22;
    unint64_t v28 = (void *)(*(void *)(v4 + 48) + v16);
    void *v28 = v19;
    v28[1] = v18;
    uint64_t v29 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)uint64_t v29 = v39;
    long long v30 = v40;
    long long v31 = v41;
    long long v32 = v43;
    *(_OWORD *)(v29 + 48) = v42;
    *(_OWORD *)(v29 + 64) = v32;
    *(_OWORD *)(v29 + 16) = v30;
    *(_OWORD *)(v29 + 32) = v31;
    long long v33 = v44;
    long long v34 = v45;
    long long v35 = *(_OWORD *)v46;
    *(void *)(v29 + 127) = *(void *)&v46[15];
    *(_OWORD *)(v29 + 96) = v34;
    *(_OWORD *)(v29 + 112) = v35;
    *(_OWORD *)(v29 + 80) = v33;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_1BDFC8920((uint64_t)&v39);
  }
  int64_t v38 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v37 = *(void *)(v6 + 8 * v38);
  if (v37)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v9);
    ++v38;
    if (v37) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1BDFF61E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1538);
    uint64_t v3 = sub_1BE070B60();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1BE070FB0();
      swift_bridgeObjectRetain();
      sub_1BE070590();
      uint64_t result = sub_1BE070FF0();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_1BE070EF0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_1BE070EF0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      uint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      void *v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1BDFF638C(uint64_t a1)
{
  uint64_t v2 = sub_1BE06F0E0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  unint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1530);
    uint64_t v9 = sub_1BE070B60();
    uint64_t v10 = 0;
    unint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    long long v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    long long v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1BDFF86C4(&qword_1EA0E1100);
      uint64_t v16 = sub_1BE070400();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1BDFF86C4(&qword_1EA0E1108);
          char v23 = sub_1BE070440();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1BDFF667C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for EventCalendarModelObject();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    v18[1] = v2;
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1BDFF489C(0, v9, 0);
    uint64_t v10 = v21;
    uint64_t v11 = (_OWORD *)(a1 + 32);
    do
    {
      long long v12 = v11[5];
      v19[4] = v11[4];
      v19[5] = v12;
      v20[0] = v11[6];
      *(_OWORD *)((char *)v20 + 10) = *(_OWORD *)((char *)v11 + 106);
      long long v13 = v11[1];
      v19[0] = *v11;
      v19[1] = v13;
      long long v14 = v11[3];
      v19[2] = v11[2];
      _OWORD v19[3] = v14;
      sub_1BDFF8708((uint64_t)v19);
      sub_1BDFED914(a2, (uint64_t)v8);
      sub_1BDFF8794((uint64_t)v19);
      uint64_t v21 = v10;
      unint64_t v16 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BDFF489C(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v21;
      }
      *(void *)(v10 + 16) = v16 + 1;
      sub_1BDFF865C((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
      v11 += 8;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_1BDFF6840(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a2;
  uint64_t v4 = type metadata accessor for EventModelObject();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v14 = v2;
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1BDFF4860(0, v8, 0);
    uint64_t v9 = v17;
    uint64_t v10 = (char *)(a1 + 32);
    do
    {
      memcpy(v16, v10, 0x338uLL);
      sub_1BDFF7698((uint64_t)v16);
      sub_1BDFEDF50(v15, v7);
      sub_1BDFF7B98((uint64_t)v16);
      uint64_t v17 = v9;
      unint64_t v12 = *(void *)(v9 + 16);
      unint64_t v11 = *(void *)(v9 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_1BDFF4860(v11 > 1, v12 + 1, 1);
        uint64_t v9 = v17;
      }
      *(void *)(v9 + 16) = v12 + 1;
      sub_1BDFF865C((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v12, (uint64_t (*)(void))type metadata accessor for EventModelObject);
      v10 += 824;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1BDFF69F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for FakeDataReader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for FakeDataReader(uint64_t a1)
{
  uint64_t v2 = sub_1BE06EE10();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for FakeDataReader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for FakeDataReader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for FakeDataReader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for FakeDataReader(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeDataReader(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BDFF6CCC);
}

uint64_t sub_1BDFF6CCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BDFF6D4C);
}

uint64_t sub_1BDFF6D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FakeDataReader()
{
  uint64_t result = qword_1EA0E3D48;
  if (!qword_1EA0E3D48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BDFF6E08()
{
  uint64_t result = sub_1BE06EE10();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Dataset()
{
  return &type metadata for FakeDataReader.Dataset;
}

uint64_t _s13CalendarUIKit14FakeDataReaderV7DatasetVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s13CalendarUIKit14FakeDataReaderV7DatasetVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s13CalendarUIKit14FakeDataReaderV7DatasetVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CalendarUIKit14FakeDataReaderV7DatasetVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13CalendarUIKit14FakeDataReaderV7DatasetVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1BDFF7060(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Document()
{
  return &type metadata for FakeDataReader.Document;
}

uint64_t sub_1BDFF70B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656372756F73 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7261646E656C6163 && a2 == 0xE900000000000073 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73746E657665 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1BDFF720C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3D58);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1BDFF7548();
  sub_1BE071010();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3D68);
    char v10 = 0;
    sub_1BE00289C(&qword_1EA0E3D70, &qword_1EA0E3D68, (void (*)(void))sub_1BDFF759C);
    sub_1BE070DF0();
    uint64_t v7 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3D80);
    char v10 = 1;
    sub_1BE00289C(&qword_1EA0E3D88, &qword_1EA0E3D80, (void (*)(void))sub_1BDFF75F0);
    swift_bridgeObjectRetain();
    sub_1BE070DF0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3D98);
    char v10 = 2;
    sub_1BE00289C(&qword_1EA0E3DA0, &qword_1EA0E3D98, (void (*)(void))sub_1BDFF7644);
    swift_bridgeObjectRetain();
    sub_1BE070DF0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1BDFF7548()
{
  unint64_t result = qword_1EA0E3D60;
  if (!qword_1EA0E3D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3D60);
  }
  return result;
}

unint64_t sub_1BDFF759C()
{
  unint64_t result = qword_1EA0E3D78;
  if (!qword_1EA0E3D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3D78);
  }
  return result;
}

unint64_t sub_1BDFF75F0()
{
  unint64_t result = qword_1EA0E3D90;
  if (!qword_1EA0E3D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3D90);
  }
  return result;
}

unint64_t sub_1BDFF7644()
{
  unint64_t result = qword_1EA0E3DA8;
  if (!qword_1EA0E3DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3DA8);
  }
  return result;
}

uint64_t sub_1BDFF7698(uint64_t a1)
{
  uint64_t v6 = *(void *)(a1 + 160);
  uint64_t v7 = *(void *)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 272);
  uint64_t v17 = *(void *)(a1 + 264);
  uint64_t v14 = *(void *)(a1 + 288);
  uint64_t v15 = *(void *)(a1 + 280);
  uint64_t v12 = *(void *)(a1 + 304);
  uint64_t v13 = *(void *)(a1 + 296);
  uint64_t v10 = *(void *)(a1 + 320);
  uint64_t v11 = *(void *)(a1 + 312);
  long long v4 = *(_OWORD *)(a1 + 328);
  long long v3 = *(_OWORD *)(a1 + 344);
  uint64_t v23 = *(void *)(a1 + 440);
  uint64_t v24 = *(void *)(a1 + 432);
  uint64_t v21 = *(void *)(a1 + 456);
  uint64_t v22 = *(void *)(a1 + 448);
  uint64_t v19 = *(void *)(a1 + 472);
  uint64_t v20 = *(void *)(a1 + 464);
  uint64_t v18 = *(void *)(a1 + 480);
  long long v8 = *(_OWORD *)(a1 + 496);
  long long v5 = *(_OWORD *)(a1 + 512);
  uint64_t v9 = *(void *)(a1 + 488);
  uint64_t v28 = *(void *)(a1 + 792);
  uint64_t v29 = *(void *)(a1 + 784);
  uint64_t v26 = *(void *)(a1 + 808);
  uint64_t v27 = *(void *)(a1 + 800);
  uint64_t v25 = *(void *)(a1 + 816);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BDFF7978(v7, v6);
  sub_1BDFF7A0C(v17, v16, v15, v14, v13, v12, v11, v10, v4, *((uint64_t *)&v4 + 1), v3);
  sub_1BDFF7A0C(v24, v23, v22, v21, v20, v19, v18, v9, v8, *((uint64_t *)&v8 + 1), v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BDFF7B54(v29, v28, v27, v26, v25);
  return a1;
}

uint64_t sub_1BDFF7978(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1BDFF7A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BDFF7AD0(a10, a11);
  }
}

uint64_t sub_1BDFF7AD0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BDFF7B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BDFF7B98(uint64_t a1)
{
  uint64_t v6 = *(void *)(a1 + 160);
  uint64_t v7 = *(void *)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 272);
  uint64_t v17 = *(void *)(a1 + 264);
  uint64_t v14 = *(void *)(a1 + 288);
  uint64_t v15 = *(void *)(a1 + 280);
  uint64_t v12 = *(void *)(a1 + 304);
  uint64_t v13 = *(void *)(a1 + 296);
  uint64_t v10 = *(void *)(a1 + 320);
  uint64_t v11 = *(void *)(a1 + 312);
  long long v4 = *(_OWORD *)(a1 + 328);
  long long v3 = *(_OWORD *)(a1 + 344);
  uint64_t v23 = *(void *)(a1 + 440);
  uint64_t v24 = *(void *)(a1 + 432);
  uint64_t v21 = *(void *)(a1 + 456);
  uint64_t v22 = *(void *)(a1 + 448);
  uint64_t v19 = *(void *)(a1 + 472);
  uint64_t v20 = *(void *)(a1 + 464);
  uint64_t v18 = *(void *)(a1 + 480);
  long long v8 = *(_OWORD *)(a1 + 496);
  long long v5 = *(_OWORD *)(a1 + 512);
  uint64_t v9 = *(void *)(a1 + 488);
  uint64_t v28 = *(void *)(a1 + 792);
  uint64_t v29 = *(void *)(a1 + 784);
  uint64_t v26 = *(void *)(a1 + 808);
  uint64_t v27 = *(void *)(a1 + 800);
  uint64_t v25 = *(void *)(a1 + 816);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDFF7E74(v7, v6);
  sub_1BDFF7F08(v17, v16, v15, v14, v13, v12, v11, v10, v4, *((uint64_t *)&v4 + 1), v3);
  sub_1BDFF7F08(v24, v23, v22, v21, v20, v19, v18, v9, v8, *((uint64_t *)&v8 + 1), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDFF8050(v29, v28, v27, v26, v25);
  return a1;
}

uint64_t sub_1BDFF7E74(uint64_t a1, uint64_t a2)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BDFF7F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDFF7FCC(a10, a11);
  }
}

uint64_t sub_1BDFF7FCC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BDFF8050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BDFF8094(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

double sub_1BDFF80B8(_OWORD *a1)
{
  double result = 0.0;
  *a1 = xmmword_1BE07CCF0;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  return result;
}

void sub_1BDFF80E0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v16 = a3;
    swift_bridgeObjectRetain();
    sub_1BDF9D478(a9, a10);
    sub_1BDFE86FC(a12, a13, a14);
  }
}

void *sub_1BDFF81E8(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

void sub_1BDFF8254(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDF859DC(a9, a10);
    sub_1BDFE8808(a12, a13, a14);
  }
}

uint64_t sub_1BDFF835C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1BDFF2F44(a1, a2);
}

unint64_t sub_1BDFF837C()
{
  unint64_t result = qword_1EA0E1AA8;
  if (!qword_1EA0E1AA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1AA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1AA8);
  }
  return result;
}

uint64_t sub_1BDFF83D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFF8484(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFF8530(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDFF8598(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BDFF85F8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDFF865C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BDFF86C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BE06F0E0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BDFF8708(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFF8794(uint64_t a1)
{
  return a1;
}

uint64_t destroy for FakeDataReader.Event.VirtualConference.JoinMethod()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FakeDataReader.Event.VirtualConference.JoinMethod(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FakeDataReader.Event.VirtualConference.JoinMethod(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for FakeDataReader.Event.VirtualConference.JoinMethod(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Event.VirtualConference.JoinMethod(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader.Event.VirtualConference.JoinMethod(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.VirtualConference.JoinMethod()
{
  return &type metadata for FakeDataReader.Event.VirtualConference.JoinMethod;
}

uint64_t destroy for FakeDataReader.Event.Location.PredictedLOI()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for FakeDataReader.Event.Location.PredictedLOI(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FakeDataReader.Event.Location.PredictedLOI(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

void *assignWithTake for FakeDataReader.Event.Location.PredictedLOI(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Event.Location.PredictedLOI(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader.Event.Location.PredictedLOI(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Location.PredictedLOI()
{
  return &type metadata for FakeDataReader.Event.Location.PredictedLOI;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Location.Coordinates()
{
  return &type metadata for FakeDataReader.Event.Location.Coordinates;
}

uint64_t destroy for FakeDataReader.Event.Integration()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FakeDataReader.Event.Integration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FakeDataReader.Event.Integration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FakeDataReader.Event.Integration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Event.Integration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader.Event.Integration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Integration()
{
  return &type metadata for FakeDataReader.Event.Integration;
}

uint64_t destroy for FakeDataReader.Event.VirtualConference()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FakeDataReader.Event.VirtualConference(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FakeDataReader.Event.VirtualConference(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for FakeDataReader.Event.VirtualConference(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Event.VirtualConference(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader.Event.VirtualConference(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.VirtualConference()
{
  return &type metadata for FakeDataReader.Event.VirtualConference;
}

uint64_t destroy for FakeDataReader.Event.Location(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 80);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FakeDataReader.Event.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  uint64_t v6 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v6;
    uint64_t v7 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v7;
    uint64_t v8 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = v8;
    uint64_t v9 = *(void *)(a2 + 128);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = v9;
    uint64_t v10 = *(void *)(a2 + 144);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = v10;
    uint64_t v11 = *(void *)(a2 + 152);
    uint64_t v12 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = v11;
    *(void *)(a1 + 160) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    long long v14 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v14;
    long long v15 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v15;
  }
  return a1;
}

uint64_t assignWithCopy for FakeDataReader.Event.Location(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  uint64_t v6 = (_OWORD *)(a1 + 72);
  uint64_t v7 = (_OWORD *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80))
  {
    if (v8)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BDFF96EC(a1 + 72);
      long long v9 = *(_OWORD *)(a2 + 88);
      *uint64_t v6 = *v7;
      *(_OWORD *)(a1 + 88) = v9;
      long long v10 = *(_OWORD *)(a2 + 152);
      long long v12 = *(_OWORD *)(a2 + 104);
      long long v11 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = v10;
      *(_OWORD *)(a1 + 104) = v12;
      *(_OWORD *)(a1 + 120) = v11;
    }
  }
  else if (v8)
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 88);
    *uint64_t v6 = *v7;
    *(_OWORD *)(a1 + 88) = v13;
    long long v14 = *(_OWORD *)(a2 + 104);
    long long v15 = *(_OWORD *)(a2 + 120);
    long long v16 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v16;
    *(_OWORD *)(a1 + 104) = v14;
    *(_OWORD *)(a1 + 120) = v15;
  }
  return a1;
}

uint64_t sub_1BDFF96EC(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy168_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(void *)(a1 + 160) = *((void *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for FakeDataReader.Event.Location(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  if (!*(void *)(a1 + 80)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 80);
  if (!v6)
  {
    sub_1BDFF96EC(a1 + 72);
LABEL_5:
    long long v12 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v12;
    long long v13 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v13;
    long long v14 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v14;
    return a1;
  }
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Event.Location(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 168)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader.Event.Location(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 168) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 168) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Location()
{
  return &type metadata for FakeDataReader.Event.Location;
}

ValueMetadata *type metadata accessor for FakeDataReader.Document.CodingKeys()
{
  return &type metadata for FakeDataReader.Document.CodingKeys;
}

uint64_t destroy for FakeDataReader.Event(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[20] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[34] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[43])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  if (a1[55] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[64])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = a1[102];
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for FakeDataReader.Event(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  uint64_t v10 = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    long long v11 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v11;
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    long long v12 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v12;
    long long v13 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v13;
  }
  else
  {
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v10;
    uint64_t v14 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = v14;
    uint64_t v15 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v15;
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
    uint64_t v16 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = v16;
    uint64_t v17 = *(void *)(a2 + 240);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = v17;
    uint64_t v18 = *(void *)(a2 + 256);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  uint64_t v19 = *(void *)(a2 + 272);
  if (v19 == 1)
  {
    long long v20 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v20;
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    long long v21 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v21;
    long long v22 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v22;
    long long v23 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v23;
    long long v24 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v24;
  }
  else
  {
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = v19;
    uint64_t v25 = *(void *)(a2 + 288);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = v25;
    *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(_WORD *)(a1 + 328) = *(_WORD *)(a2 + 328);
    uint64_t v26 = *(void *)(a2 + 344);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26)
    {
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = v26;
      uint64_t v27 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = v27;
      uint64_t v28 = *(void *)(a2 + 376);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = v28;
      uint64_t v29 = *(void *)(a2 + 392);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = v29;
      uint64_t v30 = *(void *)(a2 + 408);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = v30;
      uint64_t v31 = *(void *)(a2 + 424);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v32 = *(_OWORD *)(a2 + 384);
      *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
      *(_OWORD *)(a1 + 384) = v32;
      long long v33 = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 416) = v33;
      long long v34 = *(_OWORD *)(a2 + 352);
      *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
      *(_OWORD *)(a1 + 352) = v34;
    }
  }
  uint64_t v35 = *(void *)(a2 + 440);
  if (v35 == 1)
  {
    long long v36 = *(_OWORD *)(a2 + 576);
    *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
    *(_OWORD *)(a1 + 576) = v36;
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    long long v37 = *(_OWORD *)(a2 + 512);
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 512) = v37;
    long long v38 = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 544) = v38;
    long long v39 = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 448) = v39;
    long long v40 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v40;
  }
  else
  {
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = v35;
    uint64_t v41 = *(void *)(a2 + 456);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = v41;
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    *(_WORD *)(a1 + 496) = *(_WORD *)(a2 + 496);
    uint64_t v42 = *(void *)(a2 + 512);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42)
    {
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      *(void *)(a1 + 512) = v42;
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v43 = *(_OWORD *)(a2 + 552);
      *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
      *(_OWORD *)(a1 + 552) = v43;
      long long v44 = *(_OWORD *)(a2 + 584);
      *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
      *(_OWORD *)(a1 + 584) = v44;
      long long v45 = *(_OWORD *)(a2 + 520);
      *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
      *(_OWORD *)(a1 + 520) = v45;
    }
  }
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(unsigned char *)(a1 + 608) = *(unsigned char *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  *(_WORD *)(a1 + 760) = *(_WORD *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  uint64_t v48 = *(void *)(a2 + 816);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v48)
  {
    *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
    *(void *)(a1 + 792) = *(void *)(a2 + 792);
    *(void *)(a1 + 800) = *(void *)(a2 + 800);
    *(void *)(a1 + 808) = *(void *)(a2 + 808);
    *(void *)(a1 + 816) = v48;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v46 = *(_OWORD *)(a2 + 800);
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
    *(_OWORD *)(a1 + 800) = v46;
    *(void *)(a1 + 816) = *(void *)(a2 + 816);
  }
  return a1;
}

uint64_t assignWithCopy for FakeDataReader.Event(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v6;
  uint64_t v7 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v7;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  uint64_t v8 = (long long *)(a1 + 152);
  uint64_t v9 = (long long *)(a2 + 152);
  uint64_t v10 = *(void *)(a2 + 160);
  if (*(void *)(a1 + 160) == 1)
  {
    if (v10 == 1)
    {
      long long v11 = *v9;
      long long v12 = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = v12;
      *uint64_t v8 = v11;
      long long v13 = *(_OWORD *)(a2 + 200);
      long long v14 = *(_OWORD *)(a2 + 216);
      long long v15 = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 248) = v15;
      *(_OWORD *)(a1 + 200) = v13;
      *(_OWORD *)(a1 + 216) = v14;
    }
    else
    {
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v10 == 1)
  {
    sub_1BDFFAC00(a1 + 152);
    long long v17 = *(_OWORD *)(a2 + 168);
    long long v16 = *(_OWORD *)(a2 + 184);
    *uint64_t v8 = *v9;
    *(_OWORD *)(a1 + 168) = v17;
    *(_OWORD *)(a1 + 184) = v16;
    long long v18 = *(_OWORD *)(a2 + 248);
    long long v20 = *(_OWORD *)(a2 + 200);
    long long v19 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v18;
    *(_OWORD *)(a1 + 200) = v20;
    *(_OWORD *)(a1 + 216) = v19;
  }
  else
  {
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  long long v21 = (long long *)(a1 + 264);
  long long v22 = (long long *)(a2 + 264);
  uint64_t v23 = *(void *)(a2 + 272);
  if (*(void *)(a1 + 272) == 1)
  {
    if (v23 == 1)
    {
      long long v24 = *v22;
      long long v25 = *(_OWORD *)(a2 + 296);
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
      *(_OWORD *)(a1 + 296) = v25;
      long long *v21 = v24;
      long long v26 = *(_OWORD *)(a2 + 312);
      long long v27 = *(_OWORD *)(a2 + 328);
      long long v28 = *(_OWORD *)(a2 + 360);
      *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
      *(_OWORD *)(a1 + 360) = v28;
      *(_OWORD *)(a1 + 312) = v26;
      *(_OWORD *)(a1 + 328) = v27;
      long long v29 = *(_OWORD *)(a2 + 376);
      long long v30 = *(_OWORD *)(a2 + 392);
      long long v31 = *(_OWORD *)(a2 + 408);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(_OWORD *)(a1 + 392) = v30;
      *(_OWORD *)(a1 + 408) = v31;
      *(_OWORD *)(a1 + 376) = v29;
      goto LABEL_22;
    }
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    long long v40 = *(_OWORD *)(a2 + 296);
    *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = v40;
    uint64_t v41 = *(void *)(a2 + 320);
    *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
    *(void *)(a1 + 320) = v41;
    *(unsigned char *)(a1 + 329) = *(unsigned char *)(a2 + 329);
    uint64_t v42 = *(void *)(a2 + 344);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v42)
    {
      long long v43 = *(_OWORD *)(a2 + 352);
      *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
      *(_OWORD *)(a1 + 352) = v43;
      long long v44 = *(_OWORD *)(a2 + 368);
      long long v45 = *(_OWORD *)(a2 + 384);
      long long v46 = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 416) = v46;
      *(_OWORD *)(a1 + 368) = v44;
      *(_OWORD *)(a1 + 384) = v45;
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  if (v23 == 1)
  {
    sub_1BDFFAC30(a1 + 264);
    long long v33 = *(_OWORD *)(a2 + 280);
    long long v32 = *(_OWORD *)(a2 + 296);
    long long *v21 = *v22;
    *(_OWORD *)(a1 + 280) = v33;
    *(_OWORD *)(a1 + 296) = v32;
    long long v34 = *(_OWORD *)(a2 + 360);
    long long v36 = *(_OWORD *)(a2 + 312);
    long long v35 = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 360) = v34;
    *(_OWORD *)(a1 + 312) = v36;
    *(_OWORD *)(a1 + 328) = v35;
    long long v38 = *(_OWORD *)(a2 + 392);
    long long v37 = *(_OWORD *)(a2 + 408);
    long long v39 = *(_OWORD *)(a2 + 376);
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(_OWORD *)(a1 + 392) = v38;
    *(_OWORD *)(a1 + 408) = v37;
    *(_OWORD *)(a1 + 376) = v39;
    goto LABEL_22;
  }
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v47 = *(_OWORD *)(a2 + 296);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = v47;
  uint64_t v48 = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = v48;
  *(unsigned char *)(a1 + 329) = *(unsigned char *)(a2 + 329);
  int v49 = (_OWORD *)(a1 + 336);
  char v50 = (_OWORD *)(a2 + 336);
  uint64_t v51 = *(void *)(a2 + 344);
  if (*(void *)(a1 + 344))
  {
    if (v51)
    {
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BDFF96EC(a1 + 336);
      long long v52 = *(_OWORD *)(a2 + 352);
      _OWORD *v49 = *v50;
      *(_OWORD *)(a1 + 352) = v52;
      long long v53 = *(_OWORD *)(a2 + 416);
      long long v55 = *(_OWORD *)(a2 + 368);
      long long v54 = *(_OWORD *)(a2 + 384);
      *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 416) = v53;
      *(_OWORD *)(a1 + 368) = v55;
      *(_OWORD *)(a1 + 384) = v54;
    }
  }
  else
  {
    if (v51)
    {
LABEL_19:
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    long long v56 = *(_OWORD *)(a2 + 352);
    _OWORD *v49 = *v50;
    *(_OWORD *)(a1 + 352) = v56;
    long long v57 = *(_OWORD *)(a2 + 368);
    long long v58 = *(_OWORD *)(a2 + 384);
    long long v59 = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 416) = v59;
    *(_OWORD *)(a1 + 368) = v57;
    *(_OWORD *)(a1 + 384) = v58;
  }
LABEL_22:
  char v60 = (long long *)(a1 + 432);
  char v61 = (long long *)(a2 + 432);
  uint64_t v62 = *(void *)(a2 + 440);
  if (*(void *)(a1 + 440) == 1)
  {
    if (v62 == 1)
    {
      long long v63 = *v61;
      long long v64 = *(_OWORD *)(a2 + 464);
      *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
      *(_OWORD *)(a1 + 464) = v64;
      long long *v60 = v63;
      long long v65 = *(_OWORD *)(a2 + 480);
      long long v66 = *(_OWORD *)(a2 + 496);
      long long v67 = *(_OWORD *)(a2 + 528);
      *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
      *(_OWORD *)(a1 + 528) = v67;
      *(_OWORD *)(a1 + 480) = v65;
      *(_OWORD *)(a1 + 496) = v66;
      long long v68 = *(_OWORD *)(a2 + 544);
      long long v69 = *(_OWORD *)(a2 + 560);
      long long v70 = *(_OWORD *)(a2 + 576);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      *(_OWORD *)(a1 + 560) = v69;
      *(_OWORD *)(a1 + 576) = v70;
      *(_OWORD *)(a1 + 544) = v68;
      goto LABEL_36;
    }
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    long long v79 = *(_OWORD *)(a2 + 464);
    *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = v79;
    uint64_t v80 = *(void *)(a2 + 488);
    *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
    *(void *)(a1 + 488) = v80;
    *(unsigned char *)(a1 + 497) = *(unsigned char *)(a2 + 497);
    uint64_t v81 = *(void *)(a2 + 512);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v81)
    {
      long long v82 = *(_OWORD *)(a2 + 520);
      *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
      *(_OWORD *)(a1 + 520) = v82;
      long long v83 = *(_OWORD *)(a2 + 536);
      long long v84 = *(_OWORD *)(a2 + 552);
      long long v85 = *(_OWORD *)(a2 + 584);
      *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
      *(_OWORD *)(a1 + 584) = v85;
      *(_OWORD *)(a1 + 536) = v83;
      *(_OWORD *)(a1 + 552) = v84;
      goto LABEL_36;
    }
    goto LABEL_33;
  }
  if (v62 == 1)
  {
    sub_1BDFFAC30(a1 + 432);
    long long v72 = *(_OWORD *)(a2 + 448);
    long long v71 = *(_OWORD *)(a2 + 464);
    long long *v60 = *v61;
    *(_OWORD *)(a1 + 448) = v72;
    *(_OWORD *)(a1 + 464) = v71;
    long long v73 = *(_OWORD *)(a2 + 528);
    long long v75 = *(_OWORD *)(a2 + 480);
    long long v74 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(_OWORD *)(a1 + 528) = v73;
    *(_OWORD *)(a1 + 480) = v75;
    *(_OWORD *)(a1 + 496) = v74;
    long long v77 = *(_OWORD *)(a2 + 560);
    long long v76 = *(_OWORD *)(a2 + 576);
    long long v78 = *(_OWORD *)(a2 + 544);
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(_OWORD *)(a1 + 560) = v77;
    *(_OWORD *)(a1 + 576) = v76;
    *(_OWORD *)(a1 + 544) = v78;
    goto LABEL_36;
  }
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v86 = *(_OWORD *)(a2 + 464);
  *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = v86;
  uint64_t v87 = *(void *)(a2 + 488);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 488) = v87;
  *(unsigned char *)(a1 + 497) = *(unsigned char *)(a2 + 497);
  long long v88 = (_OWORD *)(a1 + 504);
  long long v89 = (_OWORD *)(a2 + 504);
  uint64_t v90 = *(void *)(a2 + 512);
  if (*(void *)(a1 + 512))
  {
    if (v90)
    {
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BDFF96EC(a1 + 504);
      long long v91 = *(_OWORD *)(a2 + 520);
      *long long v88 = *v89;
      *(_OWORD *)(a1 + 520) = v91;
      long long v92 = *(_OWORD *)(a2 + 584);
      long long v94 = *(_OWORD *)(a2 + 536);
      long long v93 = *(_OWORD *)(a2 + 552);
      *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
      *(_OWORD *)(a1 + 584) = v92;
      *(_OWORD *)(a1 + 536) = v94;
      *(_OWORD *)(a1 + 552) = v93;
    }
    goto LABEL_36;
  }
  if (v90)
  {
LABEL_33:
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_36;
  }
  long long v95 = *(_OWORD *)(a2 + 520);
  *long long v88 = *v89;
  *(_OWORD *)(a1 + 520) = v95;
  long long v96 = *(_OWORD *)(a2 + 536);
  long long v97 = *(_OWORD *)(a2 + 552);
  long long v98 = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 584) = v98;
  *(_OWORD *)(a1 + 536) = v96;
  *(_OWORD *)(a1 + 552) = v97;
LABEL_36:
  uint64_t v99 = *(void *)(a2 + 600);
  *(unsigned char *)(a1 + 608) = *(unsigned char *)(a2 + 608);
  *(void *)(a1 + 600) = v99;
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v100 = *(void *)(a2 + 720);
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  *(void *)(a1 + 720) = v100;
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 760) = *(unsigned char *)(a2 + 760);
  *(unsigned char *)(a1 + 761) = *(unsigned char *)(a2 + 761);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v101 = (_OWORD *)(a1 + 784);
  uint64_t v102 = (_OWORD *)(a2 + 784);
  uint64_t v103 = *(void *)(a2 + 816);
  if (*(void *)(a1 + 816))
  {
    if (v103)
    {
      *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
      *(void *)(a1 + 792) = *(void *)(a2 + 792);
      *(void *)(a1 + 800) = *(void *)(a2 + 800);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 808) = *(void *)(a2 + 808);
      *(void *)(a1 + 816) = *(void *)(a2 + 816);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BDFFAC60(a1 + 784);
      uint64_t v104 = *(void *)(a2 + 816);
      long long v105 = *(_OWORD *)(a2 + 800);
      *uint64_t v101 = *v102;
      *(_OWORD *)(a1 + 800) = v105;
      *(void *)(a1 + 816) = v104;
    }
  }
  else if (v103)
  {
    *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
    *(void *)(a1 + 792) = *(void *)(a2 + 792);
    *(void *)(a1 + 800) = *(void *)(a2 + 800);
    *(void *)(a1 + 808) = *(void *)(a2 + 808);
    *(void *)(a1 + 816) = *(void *)(a2 + 816);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v106 = *v102;
    long long v107 = *(_OWORD *)(a2 + 800);
    *(void *)(a1 + 816) = *(void *)(a2 + 816);
    *uint64_t v101 = v106;
    *(_OWORD *)(a1 + 800) = v107;
  }
  return a1;
}

uint64_t sub_1BDFFAC00(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFFAC30(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BDFFAC60(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy824_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x338uLL);
}

uint64_t assignWithTake for FakeDataReader.Event(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v9 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_WORD *)(a1 + 145) = *(_WORD *)(a2 + 145);
  if (*(void *)(a1 + 160) == 1) {
    goto LABEL_4;
  }
  uint64_t v10 = *(void *)(a2 + 160);
  if (v10 == 1)
  {
    sub_1BDFFAC00(a1 + 152);
LABEL_4:
    long long v11 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v11;
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    long long v12 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v12;
    long long v13 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v13;
    goto LABEL_6;
  }
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  uint64_t v16 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v18;
  swift_bridgeObjectRelease();
LABEL_6:
  if (*(void *)(a1 + 272) == 1)
  {
LABEL_9:
    long long v20 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v20;
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    long long v21 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v21;
    long long v22 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v22;
    long long v23 = *(_OWORD *)(a2 + 280);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = v23;
    long long v24 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v24;
    goto LABEL_10;
  }
  uint64_t v19 = *(void *)(a2 + 272);
  if (v19 == 1)
  {
    sub_1BDFFAC30(a1 + 264);
    goto LABEL_9;
  }
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v19;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = v31;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(_WORD *)(a1 + 328) = *(_WORD *)(a2 + 328);
  if (*(void *)(a1 + 344))
  {
    uint64_t v32 = *(void *)(a2 + 344);
    if (v32)
    {
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = v32;
      swift_bridgeObjectRelease();
      uint64_t v33 = *(void *)(a2 + 360);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = v33;
      swift_bridgeObjectRelease();
      uint64_t v34 = *(void *)(a2 + 376);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = v34;
      swift_bridgeObjectRelease();
      uint64_t v35 = *(void *)(a2 + 392);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = v35;
      swift_bridgeObjectRelease();
      uint64_t v36 = *(void *)(a2 + 408);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = v36;
      swift_bridgeObjectRelease();
      uint64_t v37 = *(void *)(a2 + 424);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = v37;
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_1BDFF96EC(a1 + 336);
  }
  long long v42 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v42;
  long long v43 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v43;
  long long v44 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v44;
LABEL_10:
  if (*(void *)(a1 + 440) == 1)
  {
LABEL_13:
    long long v26 = *(_OWORD *)(a2 + 576);
    *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
    *(_OWORD *)(a1 + 576) = v26;
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    long long v27 = *(_OWORD *)(a2 + 512);
    *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 512) = v27;
    long long v28 = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 544) = v28;
    long long v29 = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 448) = v29;
    long long v30 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v30;
    goto LABEL_14;
  }
  uint64_t v25 = *(void *)(a2 + 440);
  if (v25 == 1)
  {
    sub_1BDFFAC30(a1 + 432);
    goto LABEL_13;
  }
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = v25;
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(a2 + 456);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = v38;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(_WORD *)(a1 + 496) = *(_WORD *)(a2 + 496);
  if (*(void *)(a1 + 512))
  {
    uint64_t v39 = *(void *)(a2 + 512);
    if (v39)
    {
      *(void *)(a1 + 504) = *(void *)(a2 + 504);
      *(void *)(a1 + 512) = v39;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 584) = *(void *)(a2 + 584);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_1BDFF96EC(a1 + 504);
  }
  long long v45 = *(_OWORD *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = *(_OWORD *)(a2 + 536);
  *(_OWORD *)(a1 + 552) = v45;
  long long v46 = *(_OWORD *)(a2 + 584);
  *(_OWORD *)(a1 + 568) = *(_OWORD *)(a2 + 568);
  *(_OWORD *)(a1 + 584) = v46;
  long long v47 = *(_OWORD *)(a2 + 520);
  *(_OWORD *)(a1 + 504) = *(_OWORD *)(a2 + 504);
  *(_OWORD *)(a1 + 520) = v47;
LABEL_14:
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(unsigned char *)(a1 + 608) = *(unsigned char *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 760) = *(_WORD *)(a2 + 760);
  *(void *)(a1 + 768) = *(void *)(a2 + 768);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 816))
  {
LABEL_24:
    long long v40 = *(_OWORD *)(a2 + 800);
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
    *(_OWORD *)(a1 + 800) = v40;
    *(void *)(a1 + 816) = *(void *)(a2 + 816);
    return a1;
  }
  if (!*(void *)(a2 + 816))
  {
    sub_1BDFFAC60(a1 + 784);
    goto LABEL_24;
  }
  *(unsigned char *)(a1 + 784) = *(unsigned char *)(a2 + 784);
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Event(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 824)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader.Event(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 824) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 824) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event()
{
  return &type metadata for FakeDataReader.Event;
}

uint64_t destroy for FakeDataReader.Calendar()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FakeDataReader.Calendar(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FakeDataReader.Calendar(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(unsigned char *)(a1 + 121) = *(unsigned char *)(a2 + 121);
  return a1;
}

__n128 __swift_memcpy122_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 106) = *(long long *)((char *)a2 + 106);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for FakeDataReader.Calendar(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 120) = *(_WORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Calendar(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 122)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader.Calendar(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 120) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 122) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 122) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Calendar()
{
  return &type metadata for FakeDataReader.Calendar;
}

uint64_t initializeWithCopy for FakeDataReader.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FakeDataReader.Source(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  return a1;
}

__n128 __swift_memcpy67_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 63) = *(_DWORD *)(a2 + 63);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FakeDataReader.Source(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_WORD *)(a1 + 65) = *(_WORD *)(a2 + 65);
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Source(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 67)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader.Source(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 66) = 0;
    *(_WORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 67) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 67) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Source()
{
  return &type metadata for FakeDataReader.Source;
}

unint64_t sub_1BDFFB9F8()
{
  unint64_t result = qword_1EA0E3E90;
  if (!qword_1EA0E3E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3E90);
  }
  return result;
}

unint64_t sub_1BDFFBA50()
{
  unint64_t result = qword_1EA0E3E98;
  if (!qword_1EA0E3E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3E98);
  }
  return result;
}

unint64_t sub_1BDFFBAA8()
{
  unint64_t result = qword_1EA0E3EA0;
  if (!qword_1EA0E3EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3EA0);
  }
  return result;
}

uint64_t sub_1BDFFBAFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x70756F7247707061 && a2 == 0xEA00000000004449 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6167656C65447369 && a2 == 0xEA00000000006574 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6261746972577369 && a2 == 0xEA0000000000656CLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BE08D590)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1BDFFBDCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3EA8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BDFFC208();
  sub_1BE071010();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v42 = 0;
  uint64_t v9 = sub_1BE070DB0();
  uint64_t v11 = v10;
  uint64_t v35 = v9;
  char v41 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1BE070DB0();
  uint64_t v14 = v13;
  uint64_t v33 = v12;
  uint64_t v34 = v11;
  char v40 = 2;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1BE070D50();
  uint64_t v32 = v14;
  char v39 = 3;
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1BE070D50();
  uint64_t v31 = v18;
  uint64_t v27 = v17;
  uint64_t v29 = v16;
  char v38 = 4;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  LOBYTE(v16) = sub_1BE070D60();
  char v37 = 5;
  uint64_t v19 = sub_1BE070D60();
  char v36 = 6;
  LOBYTE(v14) = sub_1BE070D60();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  uint64_t v20 = v31;
  swift_bridgeObjectRelease();
  uint64_t v21 = v29;
  swift_bridgeObjectRelease();
  uint64_t v22 = v32;
  swift_bridgeObjectRelease();
  char v23 = v16;
  uint64_t v24 = v34;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v35;
  *(void *)(a2 + 8) = v24;
  *(void *)(a2 + 16) = v33;
  *(void *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v30;
  *(void *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v27;
  *(void *)(a2 + 56) = v20;
  *(unsigned char *)(a2 + 64) = v23;
  *(unsigned char *)(a2 + 65) = v19;
  *(unsigned char *)(a2 + 66) = v14;
  return result;
}

unint64_t sub_1BDFFC208()
{
  unint64_t result = qword_1EA0E3EB0;
  if (!qword_1EA0E3EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3EB0);
  }
  return result;
}

uint64_t sub_1BDFFC25C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449656372756F73 && a2 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C616E7265747865 && a2 == 0xEA00000000004449 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001BE08C990 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x53676E6972616873 && a2 == 0xED00007375746174 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BE08C9B0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BE08C9F0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_1BDFFC658@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3EB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  long long v75 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1BDFFCE04();
  sub_1BE071010();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
    return (uint64_t)v8;
  }
  else
  {
    uint64_t v10 = v6;
    long long v55 = a2;
    LOBYTE(v66[0]) = 0;
    uint64_t v11 = sub_1BE070DB0();
    uint64_t v13 = v12;
    LOBYTE(v66[0]) = 1;
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_1BE070D50();
    LOBYTE(v66[0]) = 2;
    uint64_t v15 = v14;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1BE070DB0();
    uint64_t v58 = v15;
    uint64_t v53 = v16;
    LOBYTE(v66[0]) = 3;
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1BE070D50();
    uint64_t v57 = v18;
    uint64_t v52 = v19;
    LOBYTE(v66[0]) = 4;
    uint64_t v21 = v20;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1BE070DB0();
    uint64_t v56 = v21;
    uint64_t v50 = v22;
    uint64_t v51 = v11;
    LOBYTE(v66[0]) = 5;
    uint64_t v24 = v23;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1BE070DB0();
    uint64_t v27 = v26;
    uint64_t v48 = v25;
    uint64_t v49 = v24;
    LOBYTE(v66[0]) = 6;
    swift_bridgeObjectRetain();
    LODWORD(v24) = sub_1BE070D60();
    uint64_t v46 = v27;
    LOBYTE(v66[0]) = 7;
    uint64_t v45 = sub_1BE070D50();
    LOBYTE(v66[0]) = 8;
    uint64_t v47 = v28;
    swift_bridgeObjectRetain();
    int v44 = sub_1BE070D60();
    char v73 = 9;
    int v29 = sub_1BE070D60();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
    *(void *)&long long v59 = v51;
    *((void *)&v59 + 1) = v13;
    uint64_t v31 = v57;
    uint64_t v30 = v58;
    *(void *)&long long v60 = v54;
    *((void *)&v60 + 1) = v58;
    *(void *)&long long v61 = v53;
    *((void *)&v61 + 1) = v57;
    *(void *)&long long v62 = v52;
    *((void *)&v62 + 1) = v56;
    uint64_t v32 = v49;
    *(void *)&long long v63 = v50;
    *((void *)&v63 + 1) = v49;
    uint64_t v33 = v46;
    *(void *)&long long v64 = v48;
    *((void *)&v64 + 1) = v46;
    HIDWORD(v42) = v29;
    int v43 = v24;
    LOBYTE(v65[0]) = v24;
    *((void *)&v65[0] + 1) = v45;
    *(void *)&v65[1] = v47;
    BYTE8(v65[1]) = v44;
    BYTE9(v65[1]) = v29;
    sub_1BDFF8708((uint64_t)&v59);
    swift_bridgeObjectRelease();
    uint64_t v34 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = v56;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v47;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
    v66[0] = v51;
    v66[1] = v13;
    v66[2] = v54;
    v66[3] = v34;
    unsigned char v66[4] = v53;
    v66[5] = v31;
    v66[6] = v52;
    v66[7] = v35;
    v66[8] = v50;
    v66[9] = v32;
    v66[10] = v48;
    v66[11] = v33;
    char v67 = v43;
    *(_DWORD *)long long v68 = v74[0];
    *(_DWORD *)&v68[3] = *(_DWORD *)((char *)v74 + 3);
    uint64_t v69 = v45;
    uint64_t v70 = v36;
    char v71 = v44;
    char v72 = BYTE4(v42);
    uint64_t result = sub_1BDFF8794((uint64_t)v66);
    long long v38 = v64;
    char v39 = v55;
    v55[4] = v63;
    v39[5] = v38;
    v39[6] = v65[0];
    *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v65 + 10);
    long long v40 = v60;
    _OWORD *v39 = v59;
    v39[1] = v40;
    long long v41 = v62;
    void v39[2] = v61;
    v39[3] = v41;
  }
  return result;
}

unint64_t sub_1BDFFCE04()
{
  unint64_t result = qword_1EA0E3EC0;
  if (!qword_1EA0E3EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3EC0);
  }
  return result;
}

uint64_t sub_1BDFFCE58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7954788 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1920298856 && a2 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574756E696DLL && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1BDFFCFEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4090);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE004540();
  sub_1BE071010();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_1BE070DE0();
  char v24 = 1;
  uint64_t v10 = sub_1BE070D80();
  int v21 = v11;
  char v23 = 2;
  uint64_t v12 = sub_1BE070D80();
  HIDWORD(v19) = v13;
  uint64_t v20 = v12;
  char v22 = 3;
  uint64_t v14 = sub_1BE070D50();
  uint64_t v15 = v8;
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  *(unsigned char *)(a2 + 16) = v21 & 1;
  *(void *)(a2 + 24) = v20;
  *(unsigned char *)(a2 + 32) = BYTE4(v19) & 1;
  *(void *)(a2 + 40) = v14;
  *(void *)(a2 + 48) = v17;
  return result;
}

uint64_t sub_1BDFFD214(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

double sub_1BDFFD314(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3F50);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE0027A0();
  sub_1BE071010();
  if (!v1)
  {
    v10[15] = 0;
    sub_1BE070DD0();
    double v2 = v8;
    v10[14] = 1;
    sub_1BE070DD0();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t sub_1BDFFD4C0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3F40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE00274C();
  sub_1BE071010();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v45 = 0;
    uint64_t v9 = sub_1BE070DB0();
    uint64_t v11 = v10;
    char v44 = 1;
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1BE070D50();
    uint64_t v38 = v12;
    uint64_t v39 = v11;
    char v43 = 2;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1BE070D50();
    uint64_t v15 = v14;
    uint64_t v35 = v13;
    uint64_t v36 = v9;
    char v42 = 3;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1BE070D50();
    uint64_t v18 = v17;
    uint64_t v33 = v16;
    uint64_t v34 = a2;
    char v41 = 4;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1BE070D50();
    uint64_t v21 = v20;
    uint64_t v32 = v19;
    char v40 = 5;
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_1BE070D50();
    uint64_t v24 = v23;
    char v25 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v31 = v22;
    v25(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = v38;
    swift_bridgeObjectRelease();
    uint64_t v27 = v39;
    uint64_t result = swift_bridgeObjectRelease();
    int v29 = v34;
    uint64_t *v34 = v36;
    v29[1] = v27;
    void v29[2] = v37;
    void v29[3] = v26;
    void v29[4] = v35;
    v29[5] = v15;
    v29[6] = v33;
    v29[7] = v18;
    v29[8] = v32;
    v29[9] = v21;
    v29[10] = v31;
    v29[11] = v24;
  }
  return result;
}

uint64_t sub_1BDFFD958(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73736572646461 && a2 == 0xE700000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616E6964726F6F63 && a2 == 0xEB00000000736574 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x737569646172 && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x636572706D497369 && a2 == 0xEB00000000657369 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6574636964657270 && a2 == 0xEC000000494F4C64)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1BDFFDC14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3F98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v54 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1BE002968();
  sub_1BE071010();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  }
  uint64_t v10 = v6;
  uint64_t v53 = a2;
  LOBYTE(v66) = 0;
  uint64_t v11 = v5;
  uint64_t v12 = sub_1BE070D50();
  uint64_t v14 = v13;
  LOBYTE(v66) = 1;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1BE070D50();
  uint64_t v17 = v16;
  uint64_t v52 = v15;
  LOBYTE(v55) = 2;
  sub_1BE0029BC();
  swift_bridgeObjectRetain();
  sub_1BE070DA0();
  uint64_t v50 = v66;
  uint64_t v51 = v17;
  uint64_t v49 = v67;
  LODWORD(v17) = v68;
  char v96 = v68;
  LOBYTE(v66) = 3;
  uint64_t v18 = sub_1BE070D70();
  int v46 = v17;
  uint64_t v47 = v18;
  char v95 = v19 & 1;
  LOBYTE(v66) = 4;
  LODWORD(v17) = v19;
  int v48 = sub_1BE070D60();
  int v45 = v17;
  char v97 = 5;
  sub_1BE002A10();
  sub_1BE070DA0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v11);
  uint64_t v43 = v89;
  uint64_t v44 = v88;
  uint64_t v41 = v90;
  uint64_t v42 = *((void *)&v89 + 1);
  uint64_t v39 = v91;
  uint64_t v40 = *((void *)&v90 + 1);
  uint64_t v37 = v92;
  uint64_t v38 = *((void *)&v91 + 1);
  uint64_t v35 = v93;
  uint64_t v36 = *((void *)&v92 + 1);
  uint64_t v33 = v94;
  uint64_t v34 = *((void *)&v93 + 1);
  *(void *)&long long v55 = v12;
  *((void *)&v55 + 1) = v14;
  uint64_t v21 = v51;
  uint64_t v20 = v52;
  *(void *)&long long v56 = v52;
  *((void *)&v56 + 1) = v51;
  uint64_t v23 = v49;
  uint64_t v22 = v50;
  *(void *)&long long v57 = v50;
  *((void *)&v57 + 1) = v49;
  LOBYTE(v58) = v46;
  uint64_t v24 = v47;
  *((void *)&v58 + 1) = v47;
  LOBYTE(v59) = v45 & 1;
  BYTE1(v59) = v48;
  *((void *)&v59 + 1) = v88;
  long long v60 = v89;
  long long v61 = v90;
  long long v62 = v91;
  long long v63 = v92;
  long long v64 = v93;
  uint64_t v65 = v94;
  sub_1BE002A64((uint64_t)&v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
  uint64_t v66 = v12;
  uint64_t v67 = v14;
  uint64_t v68 = v20;
  uint64_t v69 = v21;
  uint64_t v70 = v22;
  uint64_t v71 = v23;
  char v72 = v96;
  uint64_t v73 = v24;
  char v74 = v95;
  char v75 = v48;
  uint64_t v76 = v44;
  uint64_t v77 = v43;
  uint64_t v78 = v42;
  uint64_t v79 = v41;
  uint64_t v80 = v40;
  uint64_t v81 = v39;
  uint64_t v82 = v38;
  uint64_t v83 = v37;
  uint64_t v84 = v36;
  uint64_t v85 = v35;
  uint64_t v86 = v34;
  uint64_t v87 = v33;
  uint64_t result = sub_1BE002B14((uint64_t)&v66);
  long long v26 = v64;
  uint64_t v27 = v53;
  *(_OWORD *)(v53 + 128) = v63;
  *(_OWORD *)(v27 + 144) = v26;
  *(void *)(v27 + 160) = v65;
  long long v28 = v60;
  *(_OWORD *)(v27 + 64) = v59;
  *(_OWORD *)(v27 + 80) = v28;
  long long v29 = v62;
  *(_OWORD *)(v27 + 96) = v61;
  *(_OWORD *)(v27 + 112) = v29;
  long long v30 = v56;
  *(_OWORD *)uint64_t v27 = v55;
  *(_OWORD *)(v27 + 16) = v30;
  long long v31 = v58;
  *(_OWORD *)(v27 + 32) = v57;
  *(_OWORD *)(v27 + 48) = v31;
  return result;
}

uint64_t sub_1BDFFE0D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74657366666FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756C6F7362417369 && a2 == 0xEA00000000006574)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1BDFFE1C8(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E40A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE004594();
  sub_1BE071010();
  if (!v1)
  {
    char v11 = 0;
    sub_1BE070DD0();
    char v10 = 1;
    uint64_t v7 = sub_1BE070D60();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_1BDFFE370(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6364616F72427369 && a2 == 0xEB00000000747361)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1BDFFE4C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3F30);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE0026F8();
  sub_1BE071010();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v21 = 0;
    uint64_t v9 = sub_1BE070D50();
    uint64_t v11 = v10;
    uint64_t v18 = v9;
    char v20 = 1;
    uint64_t v12 = sub_1BE070D50();
    uint64_t v14 = v13;
    uint64_t v17 = v12;
    char v19 = 2;
    char v15 = sub_1BE070D60();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    *(void *)a2 = v18;
    *(void *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = v14;
    *(unsigned char *)(a2 + 32) = v15;
  }
  return result;
}

uint64_t sub_1BDFFE6E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874654D6E696F6ALL && a2 == 0xEB0000000073646FLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736C6961746564 && a2 == 0xE700000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BE08D630 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6261746972577369 && a2 == 0xEA0000000000656CLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BE08D650 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BE08D670)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1BDFFEA2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3F70);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE002848();
  sub_1BE071010();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v47) = 0;
    uint64_t v45 = sub_1BE070D50();
    uint64_t v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3F80);
    char v46 = 1;
    sub_1BE00289C(&qword_1EA0E3F88, &qword_1EA0E3F80, (void (*)(void))sub_1BE002914);
    swift_bridgeObjectRetain();
    sub_1BE070DA0();
    uint64_t v44 = v10;
    uint64_t v11 = v47;
    LOBYTE(v47) = 2;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1BE070D50();
    uint64_t v43 = v11;
    LOBYTE(v47) = 3;
    uint64_t v14 = v13;
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1BE070D50();
    uint64_t v42 = v14;
    LOBYTE(v47) = 4;
    uint64_t v16 = v15;
    swift_bridgeObjectRetain();
    int v39 = sub_1BE070D60();
    uint64_t v40 = v12;
    LOBYTE(v47) = 5;
    uint64_t v17 = sub_1BE070D50();
    uint64_t v19 = v18;
    uint64_t v37 = v17;
    uint64_t v38 = a2;
    LOBYTE(v47) = 6;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1BE070D50();
    uint64_t v22 = v21;
    uint64_t v36 = v20;
    LOBYTE(v47) = 7;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1BE070D50();
    uint64_t v25 = v24;
    long long v26 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v35 = v23;
    v26(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = v16;
    swift_bridgeObjectRelease();
    uint64_t v28 = v42;
    swift_bridgeObjectRelease();
    uint64_t v29 = v43;
    swift_bridgeObjectRelease();
    uint64_t v30 = v44;
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v32 = v38;
    *uint64_t v38 = v45;
    v32[1] = v30;
    uint64_t v33 = v40;
    _OWORD v32[2] = v29;
    v32[3] = v33;
    uint64_t v34 = v41;
    v32[4] = v28;
    v32[5] = v34;
    v32[6] = v27;
    *((unsigned char *)v32 + 56) = v39;
    v32[8] = v37;
    v32[9] = v19;
    v32[10] = v36;
    v32[11] = v22;
    v32[12] = v35;
    v32[13] = v25;
  }
  return result;
}

uint64_t sub_1BDFFF01C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C69616D65 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x696E6167724F7369 && a2 == 0xEB0000000072657ALL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E65727275437369 && a2 == 0xED00007265735574 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x746E656D6D6F63 && a2 == 0xE700000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x656C756465686373 && a2 == 0xED0000746E656741)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_1BDFFF4A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E40C0);
  uint64_t v5 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE00463C();
  sub_1BE071010();
  uint64_t v68 = a1;
  if (v2)
  {
    uint64_t v75 = v2;
    uint64_t v73 = 0;
    uint64_t v74 = 0;
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    uint64_t v72 = 0;
    uint64_t v69 = 0;
    uint64_t v66 = 0;
    uint64_t v67 = 0;
    uint64_t v9 = 0;
    uint64_t v76 = 0;
    uint64_t v77 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v113 = 0;
    uint64_t v13 = 0;
    char v14 = 2;
    char v15 = 2;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    uint64_t v89 = v13;
    uint64_t v90 = v113;
    uint64_t v91 = v12;
    uint64_t v92 = v77;
    uint64_t v93 = v11;
    uint64_t v94 = v67;
    uint64_t v95 = v10;
    uint64_t v96 = v76;
    char v97 = v15;
    char v98 = v14;
    int v99 = v111;
    __int16 v100 = v112;
    uint64_t v101 = v9;
    uint64_t v102 = v66;
    uint64_t v103 = v69;
    uint64_t v104 = v72;
    uint64_t v105 = v74;
    uint64_t v106 = v71;
    uint64_t v107 = v70;
    uint64_t v108 = v73;
    uint64_t v109 = 0;
    uint64_t v110 = 0;
    return sub_1BDFF8484((uint64_t)&v89);
  }
  LOBYTE(v89) = 0;
  uint64_t v8 = sub_1BE070D50();
  uint64_t v18 = v17;
  uint64_t v64 = v8;
  LOBYTE(v89) = 1;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1BE070D50();
  uint64_t v113 = v18;
  uint64_t v63 = v19;
  LOBYTE(v89) = 2;
  uint64_t v21 = v20;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1BE070D50();
  uint64_t v77 = v21;
  uint64_t v62 = v22;
  LOBYTE(v89) = 3;
  uint64_t v24 = v23;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1BE070D50();
  uint64_t v67 = v24;
  uint64_t v61 = v25;
  LOBYTE(v89) = 4;
  uint64_t v27 = v26;
  swift_bridgeObjectRetain();
  int v28 = sub_1BE070D60();
  uint64_t v76 = v27;
  int v60 = v28;
  LOBYTE(v89) = 5;
  int v59 = sub_1BE070D60();
  LOBYTE(v89) = 6;
  uint64_t v29 = sub_1BE070D50();
  uint64_t v31 = v30;
  uint64_t v58 = v29;
  LOBYTE(v89) = 7;
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1BE070D50();
  uint64_t v66 = v31;
  uint64_t v69 = v32;
  LOBYTE(v89) = 8;
  uint64_t v34 = v33;
  swift_bridgeObjectRetain();
  uint64_t v74 = sub_1BE070D50();
  uint64_t v75 = 0;
  uint64_t v72 = v34;
  uint64_t v36 = v31;
  uint64_t v37 = v24;
  LOBYTE(v89) = 9;
  uint64_t v71 = v35;
  swift_bridgeObjectRetain();
  uint64_t v38 = v75;
  uint64_t v70 = sub_1BE070D50();
  uint64_t v73 = v39;
  uint64_t v75 = v38;
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v65);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v73 = 0;
    uint64_t v70 = 0;
LABEL_9:
    uint64_t v12 = v63;
    uint64_t v13 = v64;
    uint64_t v10 = v61;
    uint64_t v11 = v62;
    char v14 = v59;
    char v15 = v60;
    uint64_t v9 = v58;
    goto LABEL_4;
  }
  char v88 = 10;
  swift_bridgeObjectRetain();
  uint64_t v40 = v75;
  uint64_t v41 = sub_1BE070D50();
  uint64_t v75 = v40;
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v65);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v43 = v41;
  uint64_t v44 = v42;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v65);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = v113;
  *(void *)&long long v78 = v64;
  *((void *)&v78 + 1) = v113;
  *(void *)&long long v79 = v63;
  *((void *)&v79 + 1) = v77;
  *(void *)&long long v80 = v62;
  *((void *)&v80 + 1) = v37;
  *(void *)&long long v81 = v61;
  *((void *)&v81 + 1) = v76;
  LOBYTE(v82) = v60;
  BYTE1(v82) = v59;
  *((void *)&v82 + 1) = v58;
  *(void *)&long long v83 = v36;
  uint64_t v46 = v71;
  *((void *)&v83 + 1) = v69;
  *(void *)&long long v84 = v72;
  *((void *)&v84 + 1) = v74;
  *(void *)&long long v85 = v71;
  *((void *)&v85 + 1) = v70;
  *(void *)&long long v86 = v73;
  uint64_t v57 = v43;
  *((void *)&v86 + 1) = v43;
  uint64_t v87 = v44;
  sub_1BDFF83D8((uint64_t)&v78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v47 = v76;
  swift_bridgeObjectRelease();
  uint64_t v48 = v66;
  swift_bridgeObjectRelease();
  uint64_t v49 = v72;
  swift_bridgeObjectRelease();
  uint64_t v50 = v46;
  swift_bridgeObjectRelease();
  uint64_t v51 = v73;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  uint64_t v89 = v64;
  uint64_t v90 = v45;
  uint64_t v91 = v63;
  uint64_t v92 = v77;
  uint64_t v93 = v62;
  uint64_t v94 = v67;
  uint64_t v95 = v61;
  uint64_t v96 = v47;
  char v97 = v60;
  char v98 = v59;
  uint64_t v101 = v58;
  uint64_t v102 = v48;
  uint64_t v103 = v69;
  uint64_t v104 = v49;
  uint64_t v105 = v74;
  uint64_t v106 = v50;
  uint64_t v107 = v70;
  uint64_t v108 = v51;
  uint64_t v109 = v57;
  uint64_t v110 = v44;
  uint64_t result = sub_1BDFF8484((uint64_t)&v89);
  long long v52 = v85;
  *(_OWORD *)(a2 + 96) = v84;
  *(_OWORD *)(a2 + 112) = v52;
  *(_OWORD *)(a2 + 128) = v86;
  *(void *)(a2 + 144) = v87;
  long long v53 = v81;
  *(_OWORD *)(a2 + 32) = v80;
  *(_OWORD *)(a2 + 48) = v53;
  long long v54 = v83;
  *(_OWORD *)(a2 + 64) = v82;
  *(_OWORD *)(a2 + 80) = v54;
  long long v55 = v79;
  *(_OWORD *)a2 = v78;
  *(_OWORD *)(a2 + 16) = v55;
  return result;
}

uint64_t sub_1BDFFFE1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3F60);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE0027F4();
  sub_1BE071010();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v22 = 0;
  char v9 = sub_1BE070D60();
  char v21 = 1;
  uint64_t v10 = sub_1BE070D50();
  uint64_t v12 = v11;
  uint64_t v19 = v10;
  char v20 = 2;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1BE070DB0();
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v13;
  v16(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)a2 = v9;
  *(void *)(a2 + 8) = v19;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v18;
  *(void *)(a2 + 32) = v15;
  return result;
}

uint64_t sub_1BE000058(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636E657571657266 && a2 == 0xE900000000000079;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61767265746E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1BE000158(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E40B0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE0045E8();
  sub_1BE071010();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_1BE070DB0();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_1BE070D80();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1BE000350(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7472617473 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6581861 && a2 == 0xE300000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7961446C6C417369 && a2 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6974616F6C467369 && a2 == 0xEA0000000000676ELL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736F706F72507369 && a2 == 0xEA00000000006465 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BE08D5B0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BE08D5D0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x69546C6576617274 && a2 == 0xEA0000000000656DLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7261646E656C6163 && a2 == 0xEA00000000004449 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x4C79636176697270 && a2 == 0xEC0000006C657665 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x736D72616C61 && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6962616C69617661 && a2 == 0xEC0000007974696CLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6E65727275636572 && a2 == 0xEE00656C75526563 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6565646E65747461 && a2 == 0xE900000000000073 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x6E697274536C7275 && a2 == 0xE900000000000067 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6361747441736168 && a2 == 0xED0000746E656D68 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001BE08D5F0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BE08D610 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x7461726765746E69 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 23;
    }
    else {
      return 24;
    }
  }
}

void *sub_1BE000D0C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3EC8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)((char *)&v121[9] + 8) = xmmword_1BE07CCF0;
  *(_OWORD *)((char *)&v121[10] + 8) = 0u;
  *(_OWORD *)((char *)&v121[11] + 8) = 0u;
  *(_OWORD *)((char *)&v121[12] + 8) = 0u;
  *(_OWORD *)((char *)&v121[13] + 8) = 0u;
  *(_OWORD *)((char *)&v121[14] + 8) = 0u;
  *(_OWORD *)((char *)&v121[15] + 8) = 0u;
  *(_OWORD *)((char *)&v121[39] + 8) = 0u;
  *(_OWORD *)((char *)&v121[40] + 8) = 0u;
  *(_OWORD *)((char *)&v121[41] + 8) = 0u;
  *(_OWORD *)((char *)&v121[42] + 8) = 0u;
  *(_OWORD *)((char *)&v121[43] + 8) = 0u;
  *(_OWORD *)((char *)&v121[44] + 8) = 0u;
  BYTE8(v121[45]) = 0;
  memset(&v121[46], 0, 24);
  WORD4(v121[47]) = 514;
  memset(&v121[48], 0, 56);
  uint64_t v9 = a1[3];
  char v122 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1BE0023EC();
  sub_1BE071010();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v122);
    sub_1BDFF7E74(*((uint64_t *)&v121[9] + 1), *(uint64_t *)&v121[10]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)sub_1BDFF8050(*(uint64_t *)&v121[49], *((uint64_t *)&v121[49] + 1), *(uint64_t *)&v121[50], *((uint64_t *)&v121[50] + 1), *(uint64_t *)&v121[51]);
  }
  else
  {
    uint64_t v105 = a2;
    uint64_t v106 = v6;
    v108[0] = 0;
    uint64_t v10 = sub_1BE070D50();
    uint64_t v12 = v11;
    *(void *)&v121[0] = v10;
    *((void *)&v121[0] + 1) = v11;
    v108[0] = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1BE070DB0();
    uint64_t v15 = v14;
    uint64_t v103 = v13;
    uint64_t v104 = v12;
    *(void *)&v121[1] = v13;
    *((void *)&v121[1] + 1) = v14;
    v107[0] = 2;
    sub_1BE002440();
    swift_bridgeObjectRetain();
    sub_1BE070DF0();
    uint64_t v102 = v15;
    uint64_t v16 = *(void *)&v108[48];
    uint64_t v100 = *(void *)&v108[8];
    uint64_t v101 = *(void *)v108;
    v121[2] = *(_OWORD *)v108;
    int v99 = v108[16];
    LOBYTE(v121[3]) = v108[16];
    uint64_t v98 = *(void *)&v108[24];
    *((void *)&v121[3] + 1) = *(void *)&v108[24];
    int v97 = v108[32];
    LOBYTE(v121[4]) = v108[32];
    uint64_t v96 = *(void *)&v108[40];
    *(_OWORD *)((char *)&v121[4] + 8) = *(_OWORD *)&v108[40];
    v107[0] = 3;
    swift_bridgeObjectRetain();
    sub_1BE070DF0();
    uint64_t v95 = v16;
    long long v17 = *(_OWORD *)&v108[40];
    uint64_t v93 = *(void *)&v108[8];
    uint64_t v94 = *(void *)v108;
    *((void *)&v121[5] + 1) = *(void *)v108;
    *(void *)&v121[6] = *(void *)&v108[8];
    int v92 = v108[16];
    BYTE8(v121[6]) = v108[16];
    uint64_t v91 = *(void *)&v108[24];
    *(void *)&v121[7] = *(void *)&v108[24];
    int v90 = v108[32];
    BYTE8(v121[7]) = v108[32];
    v121[8] = *(_OWORD *)&v108[40];
    v108[0] = 4;
    swift_bridgeObjectRetain();
    int v18 = sub_1BE070D60();
    long long v89 = v17;
    LOBYTE(v121[9]) = v18;
    v108[0] = 5;
    LODWORD(v12) = v18;
    int v19 = sub_1BE070D60();
    int v88 = v12;
    BYTE1(v121[9]) = v19;
    v108[0] = 6;
    LODWORD(v12) = v19;
    int v20 = sub_1BE070D60();
    int v87 = v12;
    int v86 = v20;
    BYTE2(v121[9]) = v20;
    v107[0] = 7;
    sub_1BE002494();
    sub_1BE070DA0();
    *((void *)&v121[9] + 1) = *(void *)v108;
    v121[10] = *(_OWORD *)&v108[8];
    v121[11] = *(_OWORD *)&v108[24];
    v121[12] = *(_OWORD *)&v108[40];
    v121[13] = *(_OWORD *)&v108[56];
    v121[14] = *(_OWORD *)&v108[72];
    v121[15] = *(_OWORD *)&v108[88];
    *(void *)&v121[16] = *(void *)&v108[104];
    char v119 = 8;
    uint64_t v85 = *(void *)&v108[104];
    uint64_t v21 = *(void *)&v108[96];
    uint64_t v75 = *(void *)&v108[88];
    uint64_t v76 = *(void *)&v108[80];
    uint64_t v77 = *(void *)&v108[72];
    uint64_t v78 = *(void *)&v108[64];
    uint64_t v79 = *(void *)v108;
    uint64_t v80 = *(void *)&v108[8];
    uint64_t v81 = *(void *)&v108[16];
    long long v82 = *(_OWORD *)&v108[24];
    long long v83 = *(_OWORD *)&v108[40];
    uint64_t v84 = *(void *)&v108[56];
    sub_1BDFF7978(*(uint64_t *)v108, *(uint64_t *)&v108[8]);
    unint64_t v74 = sub_1BE0024E8();
    sub_1BE070DA0();
    uint64_t v22 = v10;
    uint64_t v23 = v85;
    uint64_t v73 = v21;
    sub_1BDFB8210((uint64_t)&v120, (uint64_t)v118, &qword_1EA0E3E30);
    sub_1BDFB8210((uint64_t)v118, (uint64_t)&v121[16] + 8, &qword_1EA0E3E30);
    char v116 = 9;
    sub_1BE00253C(v118, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF7A0C);
    sub_1BE070DA0();
    sub_1BDFB8210((uint64_t)&v117, (uint64_t)v115, &qword_1EA0E3E30);
    sub_1BDFB8210((uint64_t)v115, (uint64_t)&v121[27], &qword_1EA0E3E30);
    v108[0] = 10;
    sub_1BE00253C(v115, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF7A0C);
    unint64_t v74 = sub_1BE070D70();
    int v72 = v24;
    *((void *)&v121[37] + 1) = v74;
    LOBYTE(v121[38]) = v24 & 1;
    v108[0] = 11;
    uint64_t v70 = sub_1BE070DB0();
    uint64_t v71 = v25;
    *((void *)&v121[38] + 1) = v70;
    *(void *)&v121[39] = v25;
    v108[0] = 12;
    swift_bridgeObjectRetain();
    uint64_t v68 = sub_1BE070D50();
    uint64_t v69 = v26;
    *((void *)&v121[39] + 1) = v68;
    *(void *)&v121[40] = v26;
    v108[0] = 13;
    swift_bridgeObjectRetain();
    uint64_t v66 = sub_1BE070D50();
    uint64_t v67 = v27;
    *((void *)&v121[40] + 1) = v66;
    *(void *)&v121[41] = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3EF0);
    v107[0] = 14;
    sub_1BE00289C(&qword_1EA0E3EF8, &qword_1EA0E3EF0, (void (*)(void))sub_1BE0025A8);
    swift_bridgeObjectRetain();
    sub_1BE070DA0();
    *((void *)&v121[41] + 1) = *(void *)v108;
    v108[0] = 15;
    uint64_t v65 = *((void *)&v121[41] + 1);
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1BE070D50();
    uint64_t v64 = v28;
    *(void *)&v121[42] = v63;
    *((void *)&v121[42] + 1) = v28;
    v108[0] = 16;
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_1BE070D50();
    uint64_t v62 = v29;
    *(void *)&v121[43] = v61;
    *((void *)&v121[43] + 1) = v29;
    v107[0] = 17;
    sub_1BE0025FC();
    swift_bridgeObjectRetain();
    sub_1BE070DA0();
    uint64_t v30 = *(void *)&v108[8];
    uint64_t v58 = *(void *)&v108[16];
    uint64_t v59 = *(void *)v108;
    v121[44] = *(_OWORD *)v108;
    *(void *)&v121[45] = *(void *)&v108[16];
    int v57 = v108[24];
    BYTE8(v121[45]) = v108[24];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3F10);
    v107[0] = 18;
    sub_1BE00289C(&qword_1EA0E3F18, &qword_1EA0E3F10, (void (*)(void))sub_1BE002650);
    uint64_t v60 = v30;
    swift_bridgeObjectRetain();
    sub_1BE070DA0();
    *(void *)&v121[46] = *(void *)v108;
    v108[0] = 19;
    uint64_t v56 = *(void *)&v121[46];
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_1BE070D50();
    uint64_t v32 = v31;
    *((void *)&v121[46] + 1) = v55;
    *(void *)&v121[47] = v31;
    v108[0] = 20;
    swift_bridgeObjectRetain();
    int v54 = sub_1BE070D60();
    BYTE8(v121[47]) = v54;
    v108[0] = 21;
    int v53 = sub_1BE070D60();
    BYTE9(v121[47]) = v53;
    v108[0] = 22;
    uint64_t v51 = sub_1BE070D50();
    uint64_t v52 = v33;
    *(void *)&v121[48] = v51;
    *((void *)&v121[48] + 1) = v33;
    char v109 = 23;
    sub_1BE0026A4();
    swift_bridgeObjectRetain();
    sub_1BE070DA0();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v8, v5);
    uint64_t v106 = v112;
    uint64_t v49 = v114;
    uint64_t v50 = v113;
    uint64_t v46 = *(void *)&v121[49];
    uint64_t v47 = v111;
    uint64_t v34 = *((void *)&v121[49] + 1);
    long long v35 = v121[50];
    uint64_t v45 = *(void *)&v121[51];
    uint64_t v36 = v110;
    sub_1BDFF7B54(v110, v111, v112, v113, v114);
    sub_1BDFF8050(v46, v34, v35, *((uint64_t *)&v35 + 1), v45);
    *(void *)&v107[16] = v103;
    *(void *)&v107[32] = v101;
    *(void *)&v107[40] = v100;
    v107[48] = v99;
    *(void *)&v107[56] = v98;
    v107[64] = v97;
    *(void *)&v107[72] = v96;
    *(void *)&v107[88] = v94;
    *(void *)&v107[96] = v93;
    v107[104] = v92;
    *(void *)&v107[112] = v91;
    v107[120] = v90;
    *(_OWORD *)&v107[128] = v89;
    v107[144] = v88;
    *(void *)uint64_t v107 = v22;
    *(void *)&v121[49] = v36;
    uint64_t v37 = v47;
    *((void *)&v121[49] + 1) = v47;
    *(void *)&v121[50] = v106;
    *((void *)&v121[50] + 1) = v50;
    *(void *)&v121[51] = v49;
    *(void *)&v107[8] = v104;
    *(void *)&v107[24] = v102;
    *(void *)&v107[80] = v95;
    v107[145] = v87;
    v107[146] = v86;
    *(void *)&v107[152] = v79;
    *(void *)&v107[160] = v80;
    *(void *)&v107[168] = v81;
    *(_OWORD *)&v107[176] = v82;
    *(_OWORD *)&v107[192] = v83;
    *(void *)&v107[208] = v84;
    *(void *)&v107[216] = v78;
    *(void *)&v107[224] = v77;
    *(void *)&v107[232] = v76;
    *(void *)&v107[240] = v75;
    *(void *)&v107[248] = v73;
    *(void *)&v107[256] = v23;
    sub_1BDFB8210((uint64_t)v118, (uint64_t)&v107[264], &qword_1EA0E3E30);
    sub_1BDFB8210((uint64_t)v115, (uint64_t)&v107[432], &qword_1EA0E3E30);
    *(void *)&v107[600] = v74;
    v107[608] = v72 & 1;
    *(void *)&v107[616] = v70;
    *(void *)&v107[624] = v71;
    *(void *)&v107[632] = v68;
    *(void *)&v107[640] = v69;
    *(void *)&v107[648] = v66;
    *(void *)&v107[656] = v67;
    *(void *)&v107[664] = v65;
    *(void *)&v107[672] = v63;
    *(void *)&v107[680] = v64;
    *(void *)&v107[688] = v61;
    *(void *)&v107[696] = v62;
    *(void *)&v107[704] = v59;
    *(void *)&v107[712] = v60;
    *(void *)&v107[720] = v58;
    v107[728] = v57;
    *(void *)&v107[736] = v56;
    *(void *)&v107[744] = v55;
    uint64_t v48 = v32;
    *(void *)&v107[752] = v32;
    v107[760] = v54;
    v107[761] = v53;
    *(void *)&v107[768] = v51;
    *(void *)&v107[776] = v52;
    uint64_t v38 = v36;
    *(void *)&v107[784] = v36;
    uint64_t v39 = v37;
    *(void *)&v107[792] = v37;
    uint64_t v40 = v106;
    *(void *)&v107[800] = v106;
    uint64_t v41 = v49;
    uint64_t v42 = v50;
    *(void *)&v107[808] = v50;
    *(void *)&v107[816] = v49;
    sub_1BDFF7698((uint64_t)v107);
    sub_1BDFF8050(v38, v39, v40, v42, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BE00253C(v115, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF7F08);
    sub_1BE00253C(v118, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF7F08);
    sub_1BDFF7E74(v79, v80);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v122);
    memcpy(v108, v121, sizeof(v108));
    sub_1BDFF7B98((uint64_t)v108);
    return memcpy(v105, v107, 0x338uLL);
  }
}

unint64_t sub_1BE0023EC()
{
  unint64_t result = qword_1EA0E3ED0;
  if (!qword_1EA0E3ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3ED0);
  }
  return result;
}

unint64_t sub_1BE002440()
{
  unint64_t result = qword_1EA0E3ED8;
  if (!qword_1EA0E3ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3ED8);
  }
  return result;
}

unint64_t sub_1BE002494()
{
  unint64_t result = qword_1EA0E3EE0;
  if (!qword_1EA0E3EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3EE0);
  }
  return result;
}

unint64_t sub_1BE0024E8()
{
  unint64_t result = qword_1EA0E3EE8;
  if (!qword_1EA0E3EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3EE8);
  }
  return result;
}

void *sub_1BE00253C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20]);
  return a1;
}

unint64_t sub_1BE0025A8()
{
  unint64_t result = qword_1EA0E3F00;
  if (!qword_1EA0E3F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3F00);
  }
  return result;
}

unint64_t sub_1BE0025FC()
{
  unint64_t result = qword_1EA0E3F08;
  if (!qword_1EA0E3F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3F08);
  }
  return result;
}

unint64_t sub_1BE002650()
{
  unint64_t result = qword_1EA0E3F20;
  if (!qword_1EA0E3F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3F20);
  }
  return result;
}

unint64_t sub_1BE0026A4()
{
  unint64_t result = qword_1EA0E3F28;
  if (!qword_1EA0E3F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3F28);
  }
  return result;
}

unint64_t sub_1BE0026F8()
{
  unint64_t result = qword_1EA0E3F38;
  if (!qword_1EA0E3F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3F38);
  }
  return result;
}

unint64_t sub_1BE00274C()
{
  unint64_t result = qword_1EA0E3F48;
  if (!qword_1EA0E3F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3F48);
  }
  return result;
}

unint64_t sub_1BE0027A0()
{
  unint64_t result = qword_1EA0E3F58;
  if (!qword_1EA0E3F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3F58);
  }
  return result;
}

unint64_t sub_1BE0027F4()
{
  unint64_t result = qword_1EA0E3F68;
  if (!qword_1EA0E3F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3F68);
  }
  return result;
}

unint64_t sub_1BE002848()
{
  unint64_t result = qword_1EA0E3F78;
  if (!qword_1EA0E3F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3F78);
  }
  return result;
}

uint64_t sub_1BE00289C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BE002914()
{
  unint64_t result = qword_1EA0E3F90;
  if (!qword_1EA0E3F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3F90);
  }
  return result;
}

unint64_t sub_1BE002968()
{
  unint64_t result = qword_1EA0E3FA0;
  if (!qword_1EA0E3FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3FA0);
  }
  return result;
}

unint64_t sub_1BE0029BC()
{
  unint64_t result = qword_1EA0E3FA8;
  if (!qword_1EA0E3FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3FA8);
  }
  return result;
}

unint64_t sub_1BE002A10()
{
  unint64_t result = qword_1EA0E3FB0;
  if (!qword_1EA0E3FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3FB0);
  }
  return result;
}

uint64_t sub_1BE002A64(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BDFF7AD0(v4, v3);
  return a1;
}

uint64_t sub_1BE002B14(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 72);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BDFF7FCC(v4, v3);
  return a1;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Location.CodingKeys()
{
  return &type metadata for FakeDataReader.Event.Location.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FakeDataReader.Event.VirtualConference.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE002CA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.VirtualConference.CodingKeys()
{
  return &type metadata for FakeDataReader.Event.VirtualConference.CodingKeys;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Integration.CodingKeys()
{
  return &type metadata for FakeDataReader.Event.Integration.CodingKeys;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Location.Coordinates.CodingKeys()
{
  return &type metadata for FakeDataReader.Event.Location.Coordinates.CodingKeys;
}

unsigned char *_s13CalendarUIKit14FakeDataReaderV5EventV8LocationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE002DD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Location.PredictedLOI.CodingKeys()
{
  return &type metadata for FakeDataReader.Event.Location.PredictedLOI.CodingKeys;
}

unsigned char *_s13CalendarUIKit14FakeDataReaderV8DocumentV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE002ED8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.VirtualConference.JoinMethod.CodingKeys()
{
  return &type metadata for FakeDataReader.Event.VirtualConference.JoinMethod.CodingKeys;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Event.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE9) {
    goto LABEL_17;
  }
  if (a2 + 23 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 23) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 23;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 23;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x18;
  int v8 = v6 - 24;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FakeDataReader.Event.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 23 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 23) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE8)
  {
    unsigned int v6 = ((a2 - 233) >> 8) + 1;
    *unint64_t result = a2 + 23;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE00306CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 23;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.CodingKeys()
{
  return &type metadata for FakeDataReader.Event.CodingKeys;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Calendar.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FakeDataReader.Calendar.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE003200);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Calendar.CodingKeys()
{
  return &type metadata for FakeDataReader.Calendar.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FakeDataReader.Source.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE003304);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Source.CodingKeys()
{
  return &type metadata for FakeDataReader.Source.CodingKeys;
}

uint64_t destroy for FakeDataReader.Event.Attendee()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FakeDataReader.Event.Attendee(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  uint64_t v8 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v8;
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  uint64_t v11 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FakeDataReader.Event.Attendee(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for FakeDataReader.Event.Attendee(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Event.Attendee(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 152)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader.Event.Attendee(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 152) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Attendee()
{
  return &type metadata for FakeDataReader.Event.Attendee;
}

uint64_t initializeWithCopy for FakeDataReader.Event.RecurrenceRule(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FakeDataReader.Event.RecurrenceRule(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for FakeDataReader.Event.RecurrenceRule(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Event.RecurrenceRule(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader.Event.RecurrenceRule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.RecurrenceRule()
{
  return &type metadata for FakeDataReader.Event.RecurrenceRule;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Event.Alarm(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader.Event.Alarm(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Alarm()
{
  return &type metadata for FakeDataReader.Event.Alarm;
}

uint64_t destroy for FakeDataReader.Event.Time()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FakeDataReader.Event.Time(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FakeDataReader.Event.Time(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FakeDataReader.Event.Time(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FakeDataReader.Event.Time(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 48);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FakeDataReader.Event.Time(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 48) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Time()
{
  return &type metadata for FakeDataReader.Event.Time;
}

unint64_t sub_1BE003BFC()
{
  unint64_t result = qword_1EA0E3FB8;
  if (!qword_1EA0E3FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3FB8);
  }
  return result;
}

unint64_t sub_1BE003C54()
{
  unint64_t result = qword_1EA0E3FC0;
  if (!qword_1EA0E3FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3FC0);
  }
  return result;
}

unint64_t sub_1BE003CAC()
{
  unint64_t result = qword_1EA0E3FC8;
  if (!qword_1EA0E3FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3FC8);
  }
  return result;
}

unint64_t sub_1BE003D04()
{
  unint64_t result = qword_1EA0E3FD0;
  if (!qword_1EA0E3FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3FD0);
  }
  return result;
}

unint64_t sub_1BE003D5C()
{
  unint64_t result = qword_1EA0E3FD8;
  if (!qword_1EA0E3FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3FD8);
  }
  return result;
}

unint64_t sub_1BE003DB4()
{
  unint64_t result = qword_1EA0E3FE0;
  if (!qword_1EA0E3FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3FE0);
  }
  return result;
}

unint64_t sub_1BE003E0C()
{
  unint64_t result = qword_1EA0E3FE8;
  if (!qword_1EA0E3FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3FE8);
  }
  return result;
}

unint64_t sub_1BE003E64()
{
  unint64_t result = qword_1EA0E3FF0;
  if (!qword_1EA0E3FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3FF0);
  }
  return result;
}

unint64_t sub_1BE003EBC()
{
  unint64_t result = qword_1EA0E3FF8;
  if (!qword_1EA0E3FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E3FF8);
  }
  return result;
}

unint64_t sub_1BE003F14()
{
  unint64_t result = qword_1EA0E4000;
  if (!qword_1EA0E4000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4000);
  }
  return result;
}

unint64_t sub_1BE003F6C()
{
  unint64_t result = qword_1EA0E4008;
  if (!qword_1EA0E4008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4008);
  }
  return result;
}

unint64_t sub_1BE003FC4()
{
  unint64_t result = qword_1EA0E4010;
  if (!qword_1EA0E4010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4010);
  }
  return result;
}

unint64_t sub_1BE00401C()
{
  unint64_t result = qword_1EA0E4018;
  if (!qword_1EA0E4018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4018);
  }
  return result;
}

unint64_t sub_1BE004074()
{
  unint64_t result = qword_1EA0E4020;
  if (!qword_1EA0E4020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4020);
  }
  return result;
}

unint64_t sub_1BE0040CC()
{
  unint64_t result = qword_1EA0E4028;
  if (!qword_1EA0E4028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4028);
  }
  return result;
}

unint64_t sub_1BE004124()
{
  unint64_t result = qword_1EA0E4030;
  if (!qword_1EA0E4030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4030);
  }
  return result;
}

unint64_t sub_1BE00417C()
{
  unint64_t result = qword_1EA0E4038;
  if (!qword_1EA0E4038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4038);
  }
  return result;
}

unint64_t sub_1BE0041D4()
{
  unint64_t result = qword_1EA0E4040;
  if (!qword_1EA0E4040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4040);
  }
  return result;
}

unint64_t sub_1BE00422C()
{
  unint64_t result = qword_1EA0E4048;
  if (!qword_1EA0E4048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4048);
  }
  return result;
}

unint64_t sub_1BE004284()
{
  unint64_t result = qword_1EA0E4050;
  if (!qword_1EA0E4050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4050);
  }
  return result;
}

unint64_t sub_1BE0042DC()
{
  unint64_t result = qword_1EA0E4058;
  if (!qword_1EA0E4058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4058);
  }
  return result;
}

unint64_t sub_1BE004334()
{
  unint64_t result = qword_1EA0E4060;
  if (!qword_1EA0E4060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4060);
  }
  return result;
}

unint64_t sub_1BE00438C()
{
  unint64_t result = qword_1EA0E4068;
  if (!qword_1EA0E4068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4068);
  }
  return result;
}

unint64_t sub_1BE0043E4()
{
  unint64_t result = qword_1EA0E4070;
  if (!qword_1EA0E4070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4070);
  }
  return result;
}

unint64_t sub_1BE00443C()
{
  unint64_t result = qword_1EA0E4078;
  if (!qword_1EA0E4078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4078);
  }
  return result;
}

unint64_t sub_1BE004494()
{
  unint64_t result = qword_1EA0E4080;
  if (!qword_1EA0E4080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4080);
  }
  return result;
}

unint64_t sub_1BE0044EC()
{
  unint64_t result = qword_1EA0E4088;
  if (!qword_1EA0E4088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4088);
  }
  return result;
}

unint64_t sub_1BE004540()
{
  unint64_t result = qword_1EA0E4098;
  if (!qword_1EA0E4098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4098);
  }
  return result;
}

unint64_t sub_1BE004594()
{
  unint64_t result = qword_1EA0E40A8;
  if (!qword_1EA0E40A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E40A8);
  }
  return result;
}

unint64_t sub_1BE0045E8()
{
  unint64_t result = qword_1EA0E40B8;
  if (!qword_1EA0E40B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E40B8);
  }
  return result;
}

unint64_t sub_1BE00463C()
{
  unint64_t result = qword_1EA0E40C8;
  if (!qword_1EA0E40C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E40C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FakeDataReader.Event.Attendee.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE00475CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Attendee.CodingKeys()
{
  return &type metadata for FakeDataReader.Event.Attendee.CodingKeys;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.RecurrenceRule.CodingKeys()
{
  return &type metadata for FakeDataReader.Event.RecurrenceRule.CodingKeys;
}

unsigned char *_s13CalendarUIKit14FakeDataReaderV5EventV8LocationV11CoordinatesV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE004870);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Alarm.CodingKeys()
{
  return &type metadata for FakeDataReader.Event.Alarm.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FakeDataReader.Event.Time.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE004974);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FakeDataReader.Event.Time.CodingKeys()
{
  return &type metadata for FakeDataReader.Event.Time.CodingKeys;
}

unint64_t sub_1BE0049B0()
{
  unint64_t result = qword_1EA0E40D0;
  if (!qword_1EA0E40D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E40D0);
  }
  return result;
}

unint64_t sub_1BE004A08()
{
  unint64_t result = qword_1EA0E40D8;
  if (!qword_1EA0E40D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E40D8);
  }
  return result;
}

unint64_t sub_1BE004A60()
{
  unint64_t result = qword_1EA0E40E0;
  if (!qword_1EA0E40E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E40E0);
  }
  return result;
}

unint64_t sub_1BE004AB8()
{
  unint64_t result = qword_1EA0E40E8;
  if (!qword_1EA0E40E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E40E8);
  }
  return result;
}

unint64_t sub_1BE004B10()
{
  unint64_t result = qword_1EA0E40F0;
  if (!qword_1EA0E40F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E40F0);
  }
  return result;
}

unint64_t sub_1BE004B68()
{
  unint64_t result = qword_1EA0E40F8;
  if (!qword_1EA0E40F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E40F8);
  }
  return result;
}

unint64_t sub_1BE004BC0()
{
  unint64_t result = qword_1EA0E4100;
  if (!qword_1EA0E4100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4100);
  }
  return result;
}

unint64_t sub_1BE004C18()
{
  unint64_t result = qword_1EA0E4108;
  if (!qword_1EA0E4108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4108);
  }
  return result;
}

unint64_t sub_1BE004C70()
{
  unint64_t result = qword_1EA0E4110;
  if (!qword_1EA0E4110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4110);
  }
  return result;
}

unint64_t sub_1BE004CC8()
{
  unint64_t result = qword_1EA0E4118;
  if (!qword_1EA0E4118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4118);
  }
  return result;
}

unint64_t sub_1BE004D20()
{
  unint64_t result = qword_1EA0E4120;
  if (!qword_1EA0E4120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4120);
  }
  return result;
}

unint64_t sub_1BE004D78()
{
  unint64_t result = qword_1EA0E4128;
  if (!qword_1EA0E4128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4128);
  }
  return result;
}

uint64_t destroy for LocationView(uint64_t a1)
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 56);

  return sub_1BDF8A570(v2, v3);
}

uint64_t initializeWithCopy for LocationView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 48);
  char v7 = *(unsigned char *)(a2 + 56);
  swift_retain();
  swift_retain();
  id v8 = v5;
  swift_retain();
  swift_retain();
  sub_1BDF8A504(v6, v7);
  *(void *)(a1 + 48) = v6;
  *(unsigned char *)(a1 + 56) = v7;
  return a1;
}

uint64_t assignWithCopy for LocationView(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = v2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = (void *)v2[2];
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  *(void *)(a1 + 24) = v2[3];
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = v2[4];
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *((unsigned char *)v2 + 40);
  uint64_t v7 = v2[6];
  LOBYTE(v2) = *((unsigned char *)v2 + 56);
  sub_1BDF8A504(v7, (char)v2);
  uint64_t v8 = *(void *)(a1 + 48);
  char v9 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = (_BYTE)v2;
  sub_1BDF8A570(v8, v9);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LocationView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  char v4 = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)(a1 + 48);
  char v6 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = v4;
  sub_1BDF8A570(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationView()
{
  return &type metadata for LocationView;
}

uint64_t sub_1BE0050F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BE00510C()
{
  long long v6 = *v0;
  uint64_t v7 = *((void *)v0 + 2);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3900);
  MEMORY[0x1C1888A00](&v8, v1);
  id v2 = v8;
  if (v8 && (id v3 = objc_msgSend(v8, sel_title, v6, v7), v2, v3))
  {
    sub_1BE070500();

    uint64_t v4 = sub_1BE070060();
    sub_1BE070010();
  }
  else
  {
    if (qword_1EA0E2220 != -1) {
      swift_once();
    }
    swift_retain();
    return 0;
  }
  return v4;
}

uint64_t sub_1BE005230@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v32 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4130);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4138);
  MEMORY[0x1F4188790](v6);
  id v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4140);
  MEMORY[0x1F4188790](v30);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4148);
  uint64_t v11 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v33 = *(_OWORD *)v1;
  uint64_t v34 = *(void *)(v1 + 16);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3900);
  MEMORY[0x1C1888A00](&v35, v14);
  id v15 = v35;

  if (v15
    || (uint64_t v16 = *(void *)(v1 + 48),
        uint64_t v17 = *(unsigned __int8 *)(v2 + 56),
        sub_1BDF8A504(*(void *)(v2 + 48), *(unsigned char *)(v2 + 56)),
        char v18 = sub_1BDFCDD28(v16, v17),
        sub_1BDF8A570(v16, v17),
        (v18 & 1) != 0))
  {
    sub_1BE005590(v2, (uint64_t)v5);
    uint64_t v22 = sub_1BE06FBA0();
    uint64_t KeyPath = swift_getKeyPath();
    sub_1BDF86808((uint64_t)v5, (uint64_t)v8, &qword_1EA0E4130);
    int v24 = (uint64_t *)&v8[*(int *)(v6 + 36)];
    *int v24 = KeyPath;
    v24[1] = v22;
    sub_1BDF8686C((uint64_t)v5, &qword_1EA0E4130);
    uint64_t v25 = swift_getKeyPath();
    sub_1BDF86808((uint64_t)v8, (uint64_t)v10, &qword_1EA0E4138);
    uint64_t v26 = &v10[*(int *)(v30 + 36)];
    *(void *)uint64_t v26 = v25;
    *((void *)v26 + 1) = 2;
    unsigned char v26[16] = 0;
    sub_1BDF8686C((uint64_t)v8, &qword_1EA0E4138);
    *(void *)&long long v33 = sub_1BE06FFD0();
    swift_retain();
    uint64_t v27 = sub_1BE0701F0();
    sub_1BDF86808((uint64_t)v10, (uint64_t)v13, &qword_1EA0E4140);
    swift_release();
    uint64_t v21 = v31;
    *(void *)&v13[*(int *)(v31 + 36)] = v27;
    sub_1BDF8686C((uint64_t)v10, &qword_1EA0E4140);
    uint64_t v20 = v32;
    sub_1BDFB8210((uint64_t)v13, v32, &qword_1EA0E4148);
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = 1;
    uint64_t v21 = v31;
    uint64_t v20 = v32;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v20, v19, 1, v21);
}

uint64_t sub_1BE005590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4150);
  MEMORY[0x1F4188790](v41);
  uint64_t v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4158);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v39 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4160);
  uint64_t v38 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v37 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1BE00510C();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(a1 + 48);
  char v17 = *(unsigned char *)(a1 + 56);
  sub_1BDF8A504(v16, v17);
  char v18 = sub_1BDFCDD28(v16, v17);
  sub_1BDF8A570(v16, v17);
  if (v18)
  {
    uint64_t v29 = (_OWORD *)swift_allocObject();
    v36[1] = v36;
    long long v30 = *(_OWORD *)(a1 + 16);
    v29[1] = *(_OWORD *)a1;
    void v29[2] = v30;
    void v29[3] = *(_OWORD *)(a1 + 32);
    *(_OWORD *)((char *)v29 + 57) = *(_OWORD *)(a1 + 41);
    MEMORY[0x1F4188790](v29);
    uint64_t v40 = v9;
    v36[-4] = v9;
    v36[-3] = v11;
    v36[-2] = v13;
    v36[-1] = v15;
    sub_1BE005E68(a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4170);
    sub_1BDF86964(&qword_1EA0E4180, &qword_1EA0E4170);
    uint64_t v31 = v37;
    sub_1BE070150();
    uint64_t v32 = v38;
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v4, v31, v7);
    swift_storeEnumTagMultiPayload();
    sub_1BDF86964(&qword_1EA0E4178, &qword_1EA0E4160);
    uint64_t v33 = (uint64_t)v39;
    sub_1BE06F8E0();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v7);
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4168);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 0, 1, v34);
    return sub_1BDFB8210(v33, v42, &qword_1EA0E4158);
  }
  else
  {
    uint64_t v39 = (char *)v7;
    long long v43 = *(_OWORD *)a1;
    uint64_t v44 = *(void *)(a1 + 16);
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3900);
    MEMORY[0x1C1888A00](&v47, v19);
    id v20 = v47;

    if (v20)
    {
      uint64_t v21 = sub_1BE06F740();
      uint64_t v40 = v9;
      v36[0] = v13;
      sub_1BE005C28(v9, (uint64_t)&v43);
      long long v22 = v43;
      uint64_t v23 = v44;
      char v24 = v45;
      uint64_t v25 = v46;
      *(void *)uint64_t v4 = v21;
      *((void *)v4 + 1) = 0;
      v4[16] = 1;
      *(_OWORD *)(v4 + 24) = v22;
      *((void *)v4 + 5) = v23;
      v4[48] = v24;
      *((void *)v4 + 7) = v25;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      sub_1BDF8555C(*((uint64_t *)&v22 + 1), v23, v24);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BDF8555C(*((uint64_t *)&v22 + 1), v23, v24);
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4170);
      sub_1BDF86964(&qword_1EA0E4178, &qword_1EA0E4160);
      sub_1BDF86964(&qword_1EA0E4180, &qword_1EA0E4170);
      uint64_t v26 = v42;
      sub_1BE06F8E0();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BDF8587C(*((uint64_t *)&v22 + 1), v23, v24);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1BDF8587C(*((uint64_t *)&v22 + 1), v23, v24);
      swift_bridgeObjectRelease();
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4168);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 0, 1, v27);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4168);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v42, 1, 1, v35);
    }
  }
}

__n128 sub_1BE005B94@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1BE06F740();
  sub_1BE005C28(a1, (uint64_t)&v9);
  uint64_t v5 = v10;
  char v6 = v11;
  uint64_t v7 = v12;
  __n128 result = v9;
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(__n128 *)(a2 + 24) = result;
  *(void *)(a2 + 40) = v5;
  *(unsigned char *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  return result;
}

uint64_t sub_1BE005C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BDF859F0();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1BE06FD30();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = sub_1BE06FCD0();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  sub_1BDF8587C(v4, v6, v8);
  swift_bridgeObjectRelease();
  *(void *)a2 = a1;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v11;
  *(unsigned char *)(a2 + 24) = v15;
  *(void *)(a2 + 32) = v13;
  swift_retain();
  sub_1BDF8555C(v9, v11, v15);
  swift_bridgeObjectRetain();
  sub_1BDF8587C(v9, v11, v15);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE005D4C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE005230(a1);
}

uint64_t sub_1BE005DA0()
{
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  sub_1BDF8A570(*(void *)(v0 + 64), *(unsigned char *)(v0 + 72));

  return MEMORY[0x1F4186498](v0, 73, 7);
}

uint64_t sub_1BE005E04()
{
  return sub_1BE070210();
}

double sub_1BE005E5C@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1BE005B94(*(void *)(v1 + 16), a1).n128_u64[0];
  return result;
}

uint64_t sub_1BE005E68(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v5 = v2;
  sub_1BDF8A504(v3, v4);
  return a1;
}

uint64_t sub_1BE005EE4()
{
  return sub_1BE00614C(&qword_1EA0E4188, &qword_1EA0E4190, (void (*)(void))sub_1BE005F34);
}

unint64_t sub_1BE005F34()
{
  unint64_t result = qword_1EA0E4198;
  if (!qword_1EA0E4198)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4148);
    sub_1BE005FD4();
    sub_1BDF86964(&qword_1EA0E2FF8, &qword_1EA0E3000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4198);
  }
  return result;
}

unint64_t sub_1BE005FD4()
{
  unint64_t result = qword_1EA0E41A0;
  if (!qword_1EA0E41A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4140);
    sub_1BE006074();
    sub_1BDF86964(&qword_1EA0E1430, &qword_1EA0E1438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E41A0);
  }
  return result;
}

unint64_t sub_1BE006074()
{
  unint64_t result = qword_1EA0E41A8;
  if (!qword_1EA0E41A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4138);
    sub_1BE00614C(&qword_1EA0E41B0, &qword_1EA0E4130, (void (*)(void))sub_1BE0061B8);
    sub_1BDF86964(&qword_1EA0E1410, &qword_1EA0E1418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E41A8);
  }
  return result;
}

uint64_t sub_1BE00614C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BE0061B8()
{
  return sub_1BE00614C(&qword_1EA0E41B8, &qword_1EA0E4158, (void (*)(void))sub_1BE0061F4);
}

unint64_t sub_1BE0061F4()
{
  unint64_t result = qword_1EA0E41C0;
  if (!qword_1EA0E41C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4168);
    sub_1BDF86964(&qword_1EA0E4178, &qword_1EA0E4160);
    sub_1BDF86964(&qword_1EA0E4180, &qword_1EA0E4170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E41C0);
  }
  return result;
}

uint64_t EventDirectoryRecordModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v7 = v6;
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain();
  uint64_t v26 = v10(v8, v9);
  uint64_t v12 = v11;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  char v15 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 24);
  swift_bridgeObjectRetain();
  uint64_t v25 = v15(v13, v14);
  uint64_t v17 = v16;
  uint64_t v19 = a1[3];
  uint64_t v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  id v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 32);
  swift_bridgeObjectRetain();
  uint64_t v21 = v20(v19, v18);
  uint64_t v23 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a2 = v27;
  a2[1] = v7;
  a2[2] = v26;
  a2[3] = v12;
  a2[4] = v25;
  a2[5] = v17;
  a2[6] = v21;
  a2[7] = v23;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}