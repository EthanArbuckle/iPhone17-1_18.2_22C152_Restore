void EventDirectoryRecordModelObject.init(_:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t vars8;

  if (!a1) {
    goto LABEL_6;
  }
  v3 = a1;
  v4 = objc_msgSend(v3, sel_preferredAddress);
  if (!v4)
  {

LABEL_6:
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return;
  }
  v5 = v4;
  v23 = sub_1BE070500();
  v7 = v6;

  v8 = objc_msgSend(v3, sel_displayName);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1BE070500();
    v12 = v11;
  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  swift_bridgeObjectRetain();
  v13 = objc_msgSend(v3, sel_firstName);
  if (v13)
  {
    v14 = v13;
    v15 = sub_1BE070500();
    v17 = v16;
  }
  else
  {
    v15 = 0;
    v17 = 0;
  }
  swift_bridgeObjectRetain();
  v18 = objc_msgSend(v3, sel_lastName);
  if (v18)
  {
    v19 = v18;
    v20 = sub_1BE070500();
    v22 = v21;
  }
  else
  {

    v20 = 0;
    v22 = 0;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v15;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v20;
  *(void *)(a2 + 40) = v22;
  *(void *)(a2 + 48) = v23;
  *(void *)(a2 + 56) = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
}

uint64_t EventDirectoryRecordModelObject.displayName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventDirectoryRecordModelObject.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*EventDirectoryRecordModelObject.displayName.modify())()
{
  return nullsub_1;
}

uint64_t EventDirectoryRecordModelObject.firstName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventDirectoryRecordModelObject.firstName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*EventDirectoryRecordModelObject.firstName.modify())()
{
  return nullsub_1;
}

uint64_t EventDirectoryRecordModelObject.lastName.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventDirectoryRecordModelObject.lastName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*EventDirectoryRecordModelObject.lastName.modify())()
{
  return nullsub_1;
}

uint64_t EventDirectoryRecordModelObject.preferredAddress.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventDirectoryRecordModelObject.preferredAddress.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t (*EventDirectoryRecordModelObject.preferredAddress.modify())()
{
  return nullsub_1;
}

void __swiftcall EventDirectoryRecordModelObject.init(displayName:firstName:lastName:preferredAddress:)(CalendarUIKit::EventDirectoryRecordModelObject *__return_ptr retstr, Swift::String_optional displayName, Swift::String_optional firstName, Swift::String_optional lastName, Swift::String preferredAddress)
{
  retstr->displayName = displayName;
  retstr->firstName = firstName;
  retstr->lastName = lastName;
  retstr->preferredAddress = preferredAddress;
}

uint64_t EventDirectoryRecordModelObject.hash(into:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[5];
  if (v0[1])
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1BE070FD0();
    if (v2) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_1BE070FD0();
  if (!v1) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_4:
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
LABEL_7:
  sub_1BE070FD0();
LABEL_8:
  swift_bridgeObjectRetain();
  sub_1BE070590();

  return swift_bridgeObjectRelease();
}

uint64_t EventDirectoryRecordModelObject.hashValue.getter()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE006A18()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE006A78()
{
  return sub_1BE070FF0();
}

unint64_t sub_1BE006AD4()
{
  unint64_t result = 0x4E79616C70736964;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6D614E7473726966;
      break;
    case 2:
      unint64_t result = 0x656D614E7473616CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BE006B74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BE00783C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BE006B9C(uint64_t a1)
{
  unint64_t v2 = sub_1BE007348();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BE006BD8(uint64_t a1)
{
  unint64_t v2 = sub_1BE007348();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventDirectoryRecordModelObject.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E41C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE007348();
  sub_1BE071010();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v33 = 0;
    uint64_t v9 = sub_1BE070D50();
    uint64_t v12 = v11;
    uint64_t v29 = v9;
    char v32 = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1BE070D50();
    uint64_t v15 = v14;
    uint64_t v27 = v13;
    v28 = a2;
    char v31 = 2;
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1BE070D50();
    uint64_t v18 = v17;
    uint64_t v26 = v16;
    char v30 = 3;
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1BE070DB0();
    uint64_t v21 = v20;
    v22 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v25 = v19;
    v22(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v23 = v28;
    uint64_t *v28 = v29;
    v23[1] = v12;
    v23[2] = v27;
    v23[3] = v15;
    v23[4] = v26;
    v23[5] = v18;
    v23[6] = v25;
    v23[7] = v21;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t EventDirectoryRecordModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E41D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  v12[5] = v1[3];
  v12[6] = v7;
  uint64_t v8 = v1[4];
  v12[3] = v1[5];
  v12[4] = v8;
  uint64_t v9 = v1[6];
  v12[1] = v1[7];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE007348();
  sub_1BE071030();
  char v16 = 0;
  uint64_t v10 = v12[7];
  sub_1BE070E30();
  if (!v10)
  {
    char v15 = 1;
    sub_1BE070E30();
    char v14 = 2;
    sub_1BE070E30();
    char v13 = 3;
    sub_1BE070E60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BE00713C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return EventDirectoryRecordModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BE007154(void *a1)
{
  return EventDirectoryRecordModelObject.encode(to:)(a1);
}

uint64_t _s13CalendarUIKit31EventDirectoryRecordModelObjectV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v8 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v10 = a2[1];
  uint64_t v11 = a2[2];
  uint64_t v13 = a2[3];
  uint64_t v12 = a2[4];
  uint64_t v15 = a2[5];
  uint64_t v14 = a2[6];
  uint64_t v16 = a2[7];
  if (!v3)
  {
    if (v10) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v10) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v10) {
    goto LABEL_8;
  }
  uint64_t v33 = a1[5];
  uint64_t v34 = a2[5];
  uint64_t v17 = a1[4];
  uint64_t v18 = a2[7];
  uint64_t v19 = a2[6];
  uint64_t v20 = a1[7];
  uint64_t v21 = a1[6];
  uint64_t v22 = a2[4];
  char v23 = sub_1BE070EF0();
  uint64_t v12 = v22;
  uint64_t v7 = v21;
  uint64_t v9 = v20;
  uint64_t v14 = v19;
  uint64_t v16 = v18;
  uint64_t v5 = v17;
  uint64_t v8 = v33;
  uint64_t v15 = v34;
  char v24 = v23;
  uint64_t result = 0;
  if (v24)
  {
LABEL_8:
    if (v6)
    {
      if (!v13) {
        return 0;
      }
      if (v4 != v11 || v6 != v13)
      {
        uint64_t v26 = v7;
        uint64_t v27 = v12;
        char v28 = sub_1BE070EF0();
        uint64_t v12 = v27;
        uint64_t v7 = v26;
        char v29 = v28;
        uint64_t result = 0;
        if ((v29 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v13)
    {
      return 0;
    }
    if (v8)
    {
      if (v15)
      {
        if (v5 != v12 || v8 != v15)
        {
          uint64_t v30 = v7;
          char v31 = sub_1BE070EF0();
          uint64_t v7 = v30;
          char v32 = v31;
          uint64_t result = 0;
          if ((v32 & 1) == 0) {
            return result;
          }
        }
LABEL_24:
        if (v7 == v14 && v9 == v16) {
          return 1;
        }
        return sub_1BE070EF0();
      }
    }
    else if (!v15)
    {
      goto LABEL_24;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BE007348()
{
  unint64_t result = qword_1EA0E41D0;
  if (!qword_1EA0E41D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E41D0);
  }
  return result;
}

unint64_t sub_1BE0073A0()
{
  unint64_t result = qword_1EA0E41E0;
  if (!qword_1EA0E41E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E41E0);
  }
  return result;
}

void *initializeWithCopy for EventDirectoryRecordModelObject(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EventDirectoryRecordModelObject(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *assignWithTake for EventDirectoryRecordModelObject(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventDirectoryRecordModelObject(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventDirectoryRecordModelObject(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventDirectoryRecordModelObject()
{
  return &type metadata for EventDirectoryRecordModelObject;
}

unsigned char *storeEnumTagSinglePayload for EventDirectoryRecordModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE0076FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventDirectoryRecordModelObject.CodingKeys()
{
  return &type metadata for EventDirectoryRecordModelObject.CodingKeys;
}

unint64_t sub_1BE007738()
{
  unint64_t result = qword_1EA0E41E8;
  if (!qword_1EA0E41E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E41E8);
  }
  return result;
}

unint64_t sub_1BE007790()
{
  unint64_t result = qword_1EA0E41F0;
  if (!qword_1EA0E41F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E41F0);
  }
  return result;
}

unint64_t sub_1BE0077E8()
{
  unint64_t result = qword_1EA0E41F8[0];
  if (!qword_1EA0E41F8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA0E41F8);
  }
  return result;
}

uint64_t sub_1BE00783C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E7473726966 && a2 == 0xE900000000000065 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E7473616CLL && a2 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BE08D6B0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1BE007A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_1BE007A20()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BE007AB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BE007BBC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE007C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BE007CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BE007D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BE007DC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BE007E50(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1BE007F9CLL);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1BE007FB0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1BE008190);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *uint64_t v18 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            v18[1] = a2 - 1;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for NavigationButton()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BE0081D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BE008214(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3028);
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = sub_1BDF9D7C0();
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v23 = v3;
  uint64_t v24 = v4;
  unint64_t v25 = v5;
  uint64_t v26 = v6;
  uint64_t v7 = sub_1BE06F430();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unsigned int v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  unsigned int v13 = &v16[-v12];
  uint64_t v20 = v4;
  uint64_t v21 = v6;
  uint64_t v22 = v1;
  uint64_t v17 = v4;
  uint64_t v18 = v6;
  uint64_t v19 = v1;
  sub_1BE008638((uint64_t)sub_1BE00870C);
  swift_getWitnessTable();
  sub_1BDF9DEF0(v11);
  uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v8 + 8);
  v14(v11, v7);
  sub_1BDF9DEF0(v13);
  return ((uint64_t (*)(unsigned char *, uint64_t))v14)(v13, v7);
}

uint64_t sub_1BE0083F0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790]();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDF9DEF0(v4);
  sub_1BDF9DEF0(v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, a2);
}

double sub_1BE0084CC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for NavigationButton() + 36));
  uint64_t v4 = v3[1];
  uint64_t v32 = *v3;
  uint64_t v33 = v4;
  sub_1BDF859F0();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1BE06FD30();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  uint64_t v10 = sub_1BE06FD00();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  sub_1BDF8587C(v5, v7, v9);
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_1BE070320();
  sub_1BDF9AC90(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v28, 0.0, 1, 0.0, 1, v17, v18, v10, v12, v16, v14);
  sub_1BDF8587C(v10, v12, v16);
  swift_bridgeObjectRelease();
  double result = *(double *)&v29;
  long long v20 = v30;
  long long v21 = v31;
  long long v22 = v28[2];
  long long v23 = v28[3];
  long long v25 = v28[4];
  long long v24 = v28[5];
  long long v27 = v28[0];
  long long v26 = v28[1];
  a2[6] = v29;
  a2[7] = v20;
  a2[8] = v21;
  a2[2] = v22;
  a2[3] = v23;
  a2[4] = v25;
  a2[5] = v24;
  *a2 = v27;
  a2[1] = v26;
  return result;
}

uint64_t sub_1BE008638(uint64_t a1)
{
  uint64_t v1 = (void (*)(void))MEMORY[0x1F4188790](a1);
  v1();
  return sub_1BE06F420();
}

uint64_t sub_1BE00870C()
{
  return sub_1BE0083F0(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

double sub_1BE008718@<D0>(_OWORD *a1@<X8>)
{
  return sub_1BE0084CC(*(void *)(v1 + 32), a1);
}

uint64_t sub_1BE008724()
{
  return swift_getWitnessTable();
}

uint64_t EventRecurrenceRuleModel.dateComponents.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1110);
  MEMORY[0x1F4188790](v7 - 8);
  char v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1BE06F100();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = sub_1BE06F140();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  sub_1BE06EC40();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 56);
  uint64_t result = v12(a1, a2);
  if (result >= 1)
  {
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
    switch(v14)
    {
      case 0:
        v12(a1, a2);
        goto LABEL_7;
      case 1:
        uint64_t v15 = v12(a1, a2);
        if ((unsigned __int128)(v15 * (__int128)7) >> 64 != (7 * v15) >> 63)
        {
          __break(1u);
LABEL_10:
          type metadata accessor for EKRecurrenceFrequency(0);
          v16[1] = v14;
          sub_1BE070F40();
          __break(1u);
          JUMPOUT(0x1BE008AB0);
        }
LABEL_7:
        uint64_t result = sub_1BE06EBC0();
        break;
      case 2:
        v12(a1, a2);
        return sub_1BE06EC20();
      case 3:
        v12(a1, a2);
        return sub_1BE06EC00();
      default:
        goto LABEL_10;
    }
  }
  return result;
}

uint64_t dispatch thunk of EventRecurrenceRuleModel.recurrenceEnd.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventRecurrenceRuleModel.frequency.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EventRecurrenceRuleModel.interval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EventRecurrenceRuleModel.firstDayOfTheWeek.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EventRecurrenceRuleModel.daysOfTheWeek.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EventRecurrenceRuleModel.daysOfTheMonth.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EventRecurrenceRuleModel.daysOfTheYear.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EventRecurrenceRuleModel.weeksOfTheYear.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of EventRecurrenceRuleModel.monthsOfTheYear.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of EventRecurrenceRuleModel.setPositions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of EventRecurrenceDayOfWeekModel.dayOfTheWeek.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventRecurrenceDayOfWeekModel.weekNumber.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventRecurrenceEndModel.endDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventRecurrenceEndModel.occurrenceCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BE008BF8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1BDFF4810(0, v2, 0);
  uint64_t v3 = v12;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1BDFCE1C8(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BDFF4810(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1BDFF4810(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v6 + 1;
      uint64_t v7 = v3 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1BE008D40(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_1BDFF4A8C(0, v3 & ~(v3 >> 63), 0);
  uint64_t v4 = v10;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
    if (!v6) {
      return v4;
    }
  }
  else if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return v4;
  }
  if ((a1 & 0xC000000000000001) != 0) {
    id v7 = (id)MEMORY[0x1C18893C0](0, a1);
  }
  else {
    id v7 = *(id *)(a1 + 32);
  }
  uint64_t v8 = v7;
  sub_1BE070860();

  swift_release();
  return 0;
}

uint64_t (*EKRecurrenceRuleModelWrapper.ekRecurrenceRule.modify())()
{
  return nullsub_1;
}

id EKRecurrenceRuleModelWrapper.recurrenceEnd.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_recurrenceEnd);
  *a1 = result;
  return result;
}

CalendarUIKit::EKRecurrenceEndModelWrapper_optional __swiftcall EKRecurrenceEndModelWrapper.init(_:)(CalendarUIKit::EKRecurrenceEndModelWrapper_optional result)
{
  *uint64_t v1 = result.value.ekRecurrenceEnd.super.isa;
  return result;
}

id EKRecurrenceRuleModelWrapper.frequency.getter()
{
  return objc_msgSend(*v0, sel_frequency);
}

id EKRecurrenceRuleModelWrapper.interval.getter()
{
  return objc_msgSend(*v0, sel_interval);
}

uint64_t EKRecurrenceRuleModelWrapper.firstDayOfTheWeek.getter()
{
  objc_msgSend(*v0, sel_firstDayOfTheWeekRaw);
  return 2;
}

uint64_t EKRecurrenceRuleModelWrapper.daysOfTheWeek.getter()
{
  id v1 = objc_msgSend(*v0, sel_daysOfTheWeek);
  if (!v1) {
    return (uint64_t)v1;
  }
  sub_1BDFB7B1C(0, &qword_1EA0E4280);
  unint64_t v2 = sub_1BE070710();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1BE070CB0();
  swift_bridgeObjectRelease();
  if (!v3)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_4:
  uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BDFF4A5C(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    id v1 = v10;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x1C18893C0](v5, v2);
      }
      else {
        id v6 = *(id *)(v2 + 8 * v5 + 32);
      }
      id v7 = v6;
      unint64_t v9 = v10[2];
      unint64_t v8 = v10[3];
      if (v9 >= v8 >> 1) {
        sub_1BDFF4A5C(v8 > 1, v9 + 1, 1);
      }
      ++v5;
      v10[2] = v9 + 1;
      v10[v9 + 4] = v7;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return (uint64_t)v1;
  }
  __break(1u);
  return result;
}

id EKRecurrenceRuleModelWrapper.daysOfTheMonth.getter()
{
  return sub_1BE0091EC((SEL *)&selRef_daysOfTheMonth);
}

id EKRecurrenceRuleModelWrapper.daysOfTheYear.getter()
{
  return sub_1BE0091EC((SEL *)&selRef_daysOfTheYear);
}

id sub_1BE0091EC(SEL *a1)
{
  id result = [*v1 *a1];
  if (result)
  {
    uint64_t v3 = result;
    sub_1BDFB7B1C(0, &qword_1EA0E4288);
    unint64_t v4 = sub_1BE070710();

    uint64_t v5 = sub_1BE008D40(v4);
    swift_bridgeObjectRelease();
    return (id)v5;
  }
  return result;
}

id EKRecurrenceRuleModelWrapper.weeksOfTheYear.getter()
{
  return sub_1BE0091EC((SEL *)&selRef_weeksOfTheYear);
}

id EKRecurrenceRuleModelWrapper.monthsOfTheYear.getter()
{
  return sub_1BE0091EC((SEL *)&selRef_monthsOfTheYear);
}

id EKRecurrenceRuleModelWrapper.setPositions.getter()
{
  return sub_1BE0091EC((SEL *)&selRef_setPositions);
}

id sub_1BE009290@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_recurrenceEnd);
  *a1 = result;
  return result;
}

id sub_1BE0092CC()
{
  return objc_msgSend(*v0, sel_frequency);
}

id sub_1BE0092DC()
{
  return objc_msgSend(*v0, sel_interval);
}

uint64_t sub_1BE0092EC()
{
  return EKRecurrenceRuleModelWrapper.firstDayOfTheWeek.getter();
}

id sub_1BE00930C(uint64_t a1, uint64_t a2)
{
  return sub_1BE009324(a1, a2, (SEL *)&selRef_daysOfTheMonth);
}

id sub_1BE009318(uint64_t a1, uint64_t a2)
{
  return sub_1BE009324(a1, a2, (SEL *)&selRef_daysOfTheYear);
}

id sub_1BE009324(uint64_t a1, uint64_t a2, SEL *a3)
{
  id result = [*v3 *a3];
  if (result)
  {
    uint64_t v5 = result;
    sub_1BDFB7B1C(0, &qword_1EA0E4288);
    unint64_t v6 = sub_1BE070710();

    uint64_t v7 = sub_1BE008D40(v6);
    swift_bridgeObjectRelease();
    return (id)v7;
  }
  return result;
}

id sub_1BE0093A0(uint64_t a1, uint64_t a2)
{
  return sub_1BE009324(a1, a2, (SEL *)&selRef_weeksOfTheYear);
}

id sub_1BE0093AC(uint64_t a1, uint64_t a2)
{
  return sub_1BE009324(a1, a2, (SEL *)&selRef_monthsOfTheYear);
}

id sub_1BE0093B8(uint64_t a1, uint64_t a2)
{
  return sub_1BE009324(a1, a2, (SEL *)&selRef_setPositions);
}

uint64_t (*EKRecurrenceDayOfWeekModelWrapper.ekRecurrenceDayOfWeek.modify())()
{
  return nullsub_1;
}

id EKRecurrenceDayOfWeekModelWrapper.dayOfTheWeek.getter()
{
  return objc_msgSend(*v0, sel_dayOfTheWeek);
}

id EKRecurrenceDayOfWeekModelWrapper.weekNumber.getter()
{
  return objc_msgSend(*v0, sel_weekNumber);
}

id sub_1BE009404()
{
  return objc_msgSend(*v0, sel_dayOfTheWeek);
}

id sub_1BE009414()
{
  return objc_msgSend(*v0, sel_weekNumber);
}

id EKRecurrenceEndModelWrapper.ekRecurrenceEnd.getter()
{
  return *v0;
}

void EKRecurrenceEndModelWrapper.ekRecurrenceEnd.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t (*EKRecurrenceEndModelWrapper.ekRecurrenceEnd.modify())()
{
  return nullsub_1;
}

uint64_t EKRecurrenceEndModelWrapper.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_endDate);
  if (v3)
  {
    unint64_t v4 = v3;
    sub_1BE06EEC0();

    uint64_t v5 = sub_1BE06EEE0();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1BE06EEE0();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

id EKRecurrenceEndModelWrapper.occurrenceCount.getter()
{
  return objc_msgSend(*v0, sel_occurrenceCount);
}

CalendarUIKit::EKRecurrenceEndModelWrapper __swiftcall EKRecurrenceEndModelWrapper.init(_:)(CalendarUIKit::EKRecurrenceEndModelWrapper result)
{
  v1->ekRecurrenceEnd.super.isa = result.ekRecurrenceEnd.super.isa;
  return result;
}

uint64_t sub_1BE009558@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_endDate);
  if (v3)
  {
    unint64_t v4 = v3;
    sub_1BE06EEC0();

    uint64_t v5 = sub_1BE06EEE0();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a1;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1BE06EEE0();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

id sub_1BE009620()
{
  return objc_msgSend(*v0, sel_occurrenceCount);
}

_UNKNOWN **sub_1BE009630()
{
  return &protocol witness table for EKRecurrenceDayOfWeekModelWrapper;
}

_UNKNOWN **sub_1BE00963C()
{
  return &protocol witness table for EKRecurrenceEndModelWrapper;
}

ValueMetadata *type metadata accessor for EKRecurrenceRuleModelWrapper()
{
  return &type metadata for EKRecurrenceRuleModelWrapper;
}

ValueMetadata *type metadata accessor for EKRecurrenceDayOfWeekModelWrapper()
{
  return &type metadata for EKRecurrenceDayOfWeekModelWrapper;
}

ValueMetadata *type metadata accessor for EKRecurrenceEndModelWrapper()
{
  return &type metadata for EKRecurrenceEndModelWrapper;
}

uint64_t *sub_1BE009690(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    unint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1BE06F3D0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *unint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    char v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (char *)v4 + v14;
    uint64_t v19 = (char *)a2 + v14;
    *uint64_t v18 = *v19;
    *((void *)v18 + 1) = *((void *)v19 + 1);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1BE009828(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_1BE06F3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();

  return swift_release();
}

void *sub_1BE009928(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1BE06F3D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  char v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  *char v16 = *v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_1BE009A74(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1BDF8686C((uint64_t)a1, &qword_1EA0E2EE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1BE06F3D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_release();
  uint64_t v15 = a3[7];
  char v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *char v16 = *v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_retain();
  swift_release();
  return a1;
}

char *sub_1BE009BF0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1BE06F3D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  return a1;
}

char *sub_1BE009D20(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1BDF8686C((uint64_t)a1, &qword_1EA0E2EE0);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1BE06F3D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  swift_release();
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *uint64_t v13 = *v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_release();
  return a1;
}

uint64_t sub_1BE009E90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BE009EA4);
}

uint64_t sub_1BE009EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1BE009FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BE009FD4);
}

uint64_t sub_1BE009FD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for EditShareeView()
{
  uint64_t result = qword_1EA0E4298;
  if (!qword_1EA0E4298) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BE00A138()
{
  sub_1BE00A278(319, (unint64_t *)&qword_1EA0E2F00, MEMORY[0x1E4F3C818], MEMORY[0x1E4F3C650]);
  if (v0 <= 0x3F)
  {
    sub_1BE00A278(319, &qword_1EA0E42A8, (uint64_t (*)(uint64_t))type metadata accessor for EKShareeWithData, MEMORY[0x1E4F3EED0]);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1BE00A278(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1BE00A2DC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BE00A2F8(char a1@<W0>, uint64_t *a2@<X8>)
{
  type metadata accessor for EditShareeView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  sub_1BE0702C0();
  uint64_t v4 = *(void *)(v20 + 24);
  unint64_t v5 = *(void *)(v20 + 32);
  sub_1BDF9D478(v4, v5);
  swift_release();
  sub_1BE0702C0();
  id v6 = *(id *)(v20 + 16);
  swift_release();
  id v7 = objc_msgSend(v6, sel_name);

  if (v7)
  {
    uint64_t v8 = sub_1BE070500();
    uint64_t v10 = v9;

    sub_1BE0702C0();
    id v11 = *(id *)(v20 + 16);
    swift_release();
    id v12 = objc_msgSend(v11, sel_emailAddress);

    if (v12)
    {
      uint64_t v13 = sub_1BE070500();
      uint64_t v15 = v14;

      if (a1)
      {
LABEL_4:
        uint64_t v16 = sub_1BE070060();
        uint64_t v17 = sub_1BE06FBE0();
        uint64_t KeyPath = swift_getKeyPath();
        uint64_t v19 = sub_1BE070020();
LABEL_7:
        *a2 = v8;
        a2[1] = v10;
        a2[2] = v13;
        a2[3] = v15;
        a2[4] = v4;
        a2[5] = v5;
        a2[6] = v16;
        a2[7] = KeyPath;
        a2[8] = v17;
        a2[9] = v19;
        a2[10] = 0x4043000000000000;
        return;
      }
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v15 = 0;
      if (a1) {
        goto LABEL_4;
      }
    }
    uint64_t v16 = 0;
    uint64_t KeyPath = 0;
    uint64_t v17 = 0;
    uint64_t v19 = 0;
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1BE00A4C8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E43B0);
  MEMORY[0x1F4188790](v0);
  type metadata accessor for EditShareeView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  sub_1BE0702C0();
  id v1 = *(id *)(v7 + 16);
  swift_release();
  id v2 = objc_allocWithZone(MEMORY[0x1E4F1B990]);
  id v3 = v1;
  id v4 = objc_msgSend(v2, sel_init);
  objc_msgSend(v4, sel_setIncludeIncludeManagedAppleIDs_, 1);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B980]), sel_initWithConfiguration_, v4);

  sub_1BE00D45C();
  sub_1BE06FE60();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E43B8);
  sub_1BDF86964(&qword_1EA0E43C0, &qword_1EA0E43B8);
  swift_getOpaqueTypeConformance2();
  return sub_1BE06F420();
}

double sub_1BE00A6C4@<D0>(uint64_t a1@<X8>)
{
  sub_1BE00A2F8(0, v8);
  uint64_t v2 = v8[1];
  double result = v13;
  long long v4 = v9;
  long long v5 = v10;
  long long v6 = v11;
  long long v7 = v12;
  *(void *)a1 = v8[0];
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 64) = v7;
  *(double *)(a1 + 80) = result;
  return result;
}

uint64_t sub_1BE00A724(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E42B8);
  MEMORY[0x1F4188790](v2);
  long long v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)long long v4 = sub_1BE06F7D0();
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E42C8);
  sub_1BE00A8C0(a1, (uint64_t)&v4[*(int *)(v5 + 44)]);
  uint64_t v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E34E0);
  sub_1BDF86964(&qword_1EA0E42C0, &qword_1EA0E42B8);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E34E8);
  uint64_t v7 = sub_1BDF86964(&qword_1EA0E34F0, &qword_1EA0E34E8);
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  swift_getOpaqueTypeConformance2();
  sub_1BE06FF10();
  return sub_1BDF8686C((uint64_t)v4, &qword_1EA0E42B8);
}

uint64_t sub_1BE00A8C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1BE06F4E0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  uint64_t v57 = v5;
  MEMORY[0x1F4188790](v4);
  v48 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E42D0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E42D8);
  uint64_t v53 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v12 = &v45[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E42E0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v54 = v13;
  uint64_t v55 = v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = &v45[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E42E8);
  uint64_t v51 = *(void *)(v17 - 8);
  uint64_t v52 = v17;
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  v47 = &v45[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v18);
  v58 = &v45[-v20];
  uint64_t v49 = sub_1BE06F740();
  sub_1BE00AFE8((uint64_t)v60);
  *(_OWORD *)&v62[103] = v60[6];
  *(_OWORD *)&v62[87] = v60[5];
  *(_OWORD *)&v62[39] = v60[2];
  *(_OWORD *)&v62[23] = v60[1];
  *(_OWORD *)&v62[119] = v61[0];
  *(_OWORD *)&v62[129] = *(_OWORD *)((char *)v61 + 10);
  *(_OWORD *)&v62[55] = v60[3];
  char v63 = 1;
  *(_OWORD *)&v62[71] = v60[4];
  *(_OWORD *)&v62[7] = v60[0];
  int v46 = 1;
  long long v70 = *(_OWORD *)&v62[96];
  long long v71 = *(_OWORD *)&v62[112];
  long long v72 = *(_OWORD *)&v62[128];
  char v73 = BYTE9(v61[1]);
  long long v66 = *(_OWORD *)&v62[32];
  long long v67 = *(_OWORD *)&v62[48];
  long long v68 = *(_OWORD *)&v62[64];
  long long v69 = *(_OWORD *)&v62[80];
  long long v64 = *(_OWORD *)v62;
  long long v65 = *(_OWORD *)&v62[16];
  uint64_t v59 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E42F0);
  sub_1BDF86964(&qword_1EA0E42F8, &qword_1EA0E42F0);
  sub_1BE06FC30();
  uint64_t v21 = sub_1BDF86964(&qword_1EA0E4300, &qword_1EA0E42D0);
  long long v22 = v12;
  sub_1BE06FE10();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  long long v23 = v48;
  sub_1BE070360();
  uint64_t v76 = v7;
  uint64_t v77 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v25 = sub_1BE00D210(&qword_1EA0E3020, MEMORY[0x1E4F3CCF0]);
  long long v26 = v16;
  uint64_t v27 = v50;
  uint64_t v28 = v56;
  sub_1BE06FF50();
  (*(void (**)(unsigned char *, uint64_t))(v57 + 8))(v23, v28);
  (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v22, v27);
  uint64_t v76 = v27;
  uint64_t v77 = v28;
  *(void *)v78 = OpaqueTypeConformance2;
  *(void *)&v78[8] = v25;
  swift_getOpaqueTypeConformance2();
  long long v29 = v47;
  uint64_t v30 = v54;
  sub_1BE06FEA0();
  (*(void (**)(unsigned char *, uint64_t))(v55 + 8))(v26, v30);
  uint64_t v32 = v51;
  uint64_t v31 = v52;
  uint64_t v33 = v58;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v51 + 32))(v58, v29, v52);
  uint64_t v34 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v32 + 16);
  v34(v29, v33, v31);
  uint64_t v35 = v49;
  long long v74 = (unint64_t)v49;
  LOBYTE(v28) = v46;
  v75[0] = v46;
  *(_OWORD *)&v75[113] = v71;
  *(_OWORD *)&v75[97] = v70;
  *(_OWORD *)&v75[129] = v72;
  v75[145] = v73;
  *(_OWORD *)&v75[33] = v66;
  *(_OWORD *)&v75[49] = v67;
  *(_OWORD *)&v75[65] = v68;
  *(_OWORD *)&v75[81] = v69;
  *(_OWORD *)&v75[1] = v64;
  *(_OWORD *)&v75[17] = v65;
  long long v36 = *(_OWORD *)&v75[128];
  *(_OWORD *)(a2 + 128) = *(_OWORD *)&v75[112];
  *(_OWORD *)(a2 + 144) = v36;
  *(_WORD *)(a2 + 160) = *(_WORD *)&v75[144];
  long long v37 = *(_OWORD *)&v75[64];
  *(_OWORD *)(a2 + 64) = *(_OWORD *)&v75[48];
  *(_OWORD *)(a2 + 80) = v37;
  long long v38 = *(_OWORD *)&v75[96];
  *(_OWORD *)(a2 + 96) = *(_OWORD *)&v75[80];
  *(_OWORD *)(a2 + 112) = v38;
  long long v39 = *(_OWORD *)v75;
  *(_OWORD *)a2 = v74;
  *(_OWORD *)(a2 + 16) = v39;
  long long v40 = *(_OWORD *)&v75[32];
  *(_OWORD *)(a2 + 32) = *(_OWORD *)&v75[16];
  *(_OWORD *)(a2 + 48) = v40;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4308);
  v34((unsigned char *)(a2 + *(int *)(v41 + 48)), v29, v31);
  uint64_t v42 = a2 + *(int *)(v41 + 64);
  *(void *)uint64_t v42 = 0;
  *(unsigned char *)(v42 + 8) = 1;
  sub_1BE00CF44((uint64_t)&v74);
  v43 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
  v43(v58, v31);
  v43(v29, v31);
  long long v84 = v70;
  long long v85 = v71;
  long long v86 = v72;
  long long v80 = v66;
  long long v81 = v67;
  long long v82 = v68;
  long long v83 = v69;
  *(_OWORD *)&v78[1] = v64;
  uint64_t v76 = v35;
  uint64_t v77 = 0;
  v78[0] = v28;
  char v87 = v73;
  long long v79 = v65;
  return sub_1BE00CF84((uint64_t)&v76);
}

void sub_1BE00AFE8(uint64_t a1@<X8>)
{
  type metadata accessor for EditShareeView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  sub_1BE0702C0();
  id v2 = *(id *)(v57[0] + 16);
  swift_release();
  id v3 = objc_msgSend(v2, sel_name);

  if (v3)
  {
    sub_1BE070500();

    sub_1BDF859F0();
    uint64_t v4 = sub_1BE06FD30();
    uint64_t v6 = v5;
    char v8 = v7 & 1;
    sub_1BE06FB20();
    uint64_t v9 = sub_1BE06FD10();
    uint64_t v11 = v10;
    char v13 = v12;
    swift_release();
    char v14 = v13 & 1;
    sub_1BDF8587C(v4, v6, v8);
    swift_bridgeObjectRelease();
    sub_1BE070010();
    uint64_t v15 = sub_1BE06FCE0();
    uint64_t v17 = v16;
    char v19 = v18 & 1;
    sub_1BDF8587C(v9, v11, v14);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BE06FB60();
    uint64_t v20 = sub_1BE06FC90();
    uint64_t v22 = v21;
    LOBYTE(v9) = v23;
    uint64_t v25 = v24;
    sub_1BDF8587C(v15, v17, v19);
    swift_bridgeObjectRelease();
    LOBYTE(v15) = sub_1BE06FAD0();
    sub_1BE06F2D0();
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    char v34 = sub_1BE06FAF0();
    sub_1BE06F2D0();
    *(_DWORD *)uint64_t v59 = *(_DWORD *)v48;
    *(_DWORD *)&v59[3] = *(_DWORD *)&v48[3];
    *(_DWORD *)v62 = *(_DWORD *)v47;
    *(_DWORD *)&v62[3] = *(_DWORD *)&v47[3];
    *(_DWORD *)&v68[3] = *(_DWORD *)&v46[3];
    *(_DWORD *)long long v68 = *(_DWORD *)v46;
    *(_DWORD *)&v70[3] = *(_DWORD *)&v45[3];
    *(_DWORD *)long long v70 = *(_DWORD *)v45;
    DWORD1(v50) = *(_DWORD *)&v48[3];
    *(_DWORD *)((char *)&v50 + 1) = *(_DWORD *)v48;
    DWORD1(v51) = *(_DWORD *)&v47[3];
    *(_DWORD *)((char *)&v51 + 1) = *(_DWORD *)v47;
    HIDWORD(v53) = *(_DWORD *)&v46[3];
    *(void *)&long long v49 = v20;
    *((void *)&v49 + 1) = v22;
    LOBYTE(v50) = v9 & 1;
    *((void *)&v50 + 1) = v25;
    LOBYTE(v51) = v15;
    *((void *)&v51 + 1) = v27;
    *(void *)&long long v52 = v29;
    *((void *)&v52 + 1) = v31;
    *(void *)&long long v53 = v33;
    BYTE8(v53) = 0;
    *(_DWORD *)((char *)&v53 + 9) = *(_DWORD *)v46;
    LOBYTE(v54) = v34;
    DWORD1(v54) = *(_DWORD *)&v45[3];
    *(_DWORD *)((char *)&v54 + 1) = *(_DWORD *)v45;
    *((void *)&v54 + 1) = v35;
    *(void *)uint64_t v55 = v36;
    *(void *)&v55[8] = v37;
    *(void *)&v55[16] = v38;
    v55[24] = 0;
    long long v39 = v49;
    long long v40 = v50;
    long long v41 = v52;
    *(_OWORD *)(a1 + 32) = v51;
    *(_OWORD *)(a1 + 48) = v41;
    *(_OWORD *)a1 = v39;
    *(_OWORD *)(a1 + 16) = v40;
    long long v42 = v53;
    long long v43 = v54;
    long long v44 = *(_OWORD *)v55;
    *(_OWORD *)(a1 + 105) = *(_OWORD *)&v55[9];
    *(_OWORD *)(a1 + 80) = v43;
    *(_OWORD *)(a1 + 96) = v44;
    *(_OWORD *)(a1 + 64) = v42;
    char v56 = 1;
    *(void *)(a1 + 128) = 0;
    *(_WORD *)(a1 + 136) = 256;
    v57[0] = v20;
    v57[1] = v22;
    char v58 = v9 & 1;
    uint64_t v60 = v25;
    char v61 = v15;
    uint64_t v63 = v27;
    uint64_t v64 = v29;
    uint64_t v65 = v31;
    uint64_t v66 = v33;
    char v67 = 0;
    char v69 = v34;
    uint64_t v71 = v35;
    uint64_t v72 = v36;
    uint64_t v73 = v37;
    uint64_t v74 = v38;
    char v75 = 0;
    sub_1BE00D4B8((uint64_t)&v49);
    sub_1BE00D4F8((uint64_t)v57);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BE00B360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v51[0] = a1;
  uint64_t v65 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4310);
  uint64_t v63 = *(void *)(v3 - 8);
  uint64_t v64 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v59 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4318) - 8;
  uint64_t v5 = MEMORY[0x1F4188790](v62);
  uint64_t v60 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v61 = (uint64_t)v51 - v7;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4320);
  MEMORY[0x1F4188790](v55);
  v51[1] = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4328);
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  long long v52 = (char *)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4330) - 8;
  uint64_t v10 = MEMORY[0x1F4188790](v56);
  long long v53 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v54 = (uint64_t)v51 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4338);
  MEMORY[0x1F4188790](v13);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4340);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4348);
  uint64_t v19 = v18 - 8;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4350);
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v66 = (uint64_t)v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v67 = (uint64_t)v51 - v25;
  uint64_t v70 = a1;
  uint64_t v71 = sub_1BE06FFD0();
  sub_1BE06FE50();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4358);
  sub_1BDF86964(&qword_1EA0E4360, &qword_1EA0E4358);
  sub_1BE00CFE8();
  sub_1BE0702B0();
  uint64_t v26 = self;
  uint64_t v71 = MEMORY[0x1C1888840](objc_msgSend(v26, sel_cuik_tertiaryGroupedBackgroundColor));
  swift_retain();
  uint64_t v27 = sub_1BE0701F0();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v21, v17, v14);
  swift_release();
  *(void *)&v21[*(int *)(v19 + 44)] = v27;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v28 = v66;
  sub_1BDF86808((uint64_t)v21, v66, &qword_1EA0E4348);
  sub_1BDF8686C((uint64_t)v21, &qword_1EA0E4348);
  sub_1BDFB8210(v28, v67, &qword_1EA0E4350);
  uint64_t v29 = v51[0];
  uint64_t v69 = v51[0];
  sub_1BE00C2A4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4370);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4378);
  unint64_t v31 = sub_1BE00D09C();
  uint64_t v71 = v30;
  unint64_t v72 = MEMORY[0x1E4FBB390];
  unint64_t v73 = v31;
  uint64_t v74 = MEMORY[0x1E4FBB3A8];
  swift_getOpaqueTypeConformance2();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3598);
  unint64_t v33 = sub_1BDFCE760();
  uint64_t v71 = v32;
  unint64_t v72 = v33;
  swift_getOpaqueTypeConformance2();
  char v34 = v52;
  sub_1BE0702B0();
  uint64_t v71 = MEMORY[0x1C1888840](objc_msgSend(v26, sel_cuik_tertiaryGroupedBackgroundColor));
  swift_retain();
  uint64_t v35 = sub_1BE0701F0();
  uint64_t v36 = v57;
  uint64_t v37 = (uint64_t)v53;
  uint64_t v38 = v58;
  (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v53, v34, v58);
  swift_release();
  *(void *)(v37 + *(int *)(v56 + 44)) = v35;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v38);
  uint64_t v39 = v54;
  sub_1BDFB8210(v37, v54, &qword_1EA0E4330);
  uint64_t v68 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32C8);
  sub_1BDF86964(&qword_1EA0E3500, &qword_1EA0E32C8);
  long long v40 = v59;
  sub_1BE0702A0();
  uint64_t v71 = MEMORY[0x1C1888840](objc_msgSend(v26, sel_cuik_tertiaryGroupedBackgroundColor));
  swift_retain();
  uint64_t v41 = sub_1BE0701F0();
  uint64_t v43 = v63;
  uint64_t v42 = v64;
  uint64_t v44 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v60, v40, v64);
  swift_release();
  *(void *)(v44 + *(int *)(v62 + 44)) = v41;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v42);
  uint64_t v45 = v61;
  sub_1BDFB8210(v44, v61, &qword_1EA0E4318);
  uint64_t v46 = v66;
  uint64_t v47 = v67;
  sub_1BDF86808(v67, v66, &qword_1EA0E4350);
  sub_1BDF86808(v39, v37, &qword_1EA0E4330);
  sub_1BDF86808(v45, v44, &qword_1EA0E4318);
  uint64_t v48 = v65;
  sub_1BDF86808(v46, v65, &qword_1EA0E4350);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E43A0);
  sub_1BDF86808(v37, v48 + *(int *)(v49 + 48), &qword_1EA0E4330);
  sub_1BDF86808(v44, v48 + *(int *)(v49 + 64), &qword_1EA0E4318);
  sub_1BDF8686C(v45, &qword_1EA0E4318);
  sub_1BDF8686C(v39, &qword_1EA0E4330);
  sub_1BDF8686C(v47, &qword_1EA0E4350);
  sub_1BDF8686C(v44, &qword_1EA0E4318);
  sub_1BDF8686C(v37, &qword_1EA0E4330);
  return sub_1BDF8686C(v46, &qword_1EA0E4350);
}

uint64_t sub_1BE00BCEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v29 = a2;
  uint64_t v2 = type metadata accessor for EditShareeView();
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v27 = *(void *)(v28 + 64);
  MEMORY[0x1F4188790](v2);
  uint64_t v26 = (uint64_t)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3310);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4378);
  MEMORY[0x1F4188790](v24);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE0702D0();
  swift_getKeyPath();
  sub_1BE0702F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BE0701B0();
  uint64_t v14 = sub_1BE06FFE0();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = v14;
  swift_retain();
  uint64_t v16 = sub_1BE06F3A0();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v13, v11, v8);
  swift_release();
  uint64_t v17 = (uint64_t *)&v13[*(int *)(v24 + 36)];
  *uint64_t v17 = KeyPath;
  v17[1] = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1BE0702C0();
  uint64_t v18 = v30;
  swift_getKeyPath();
  uint64_t v30 = v18;
  sub_1BE00D210((unint64_t *)&qword_1EA0E2F78, (void (*)(uint64_t))type metadata accessor for EKShareeWithData);
  sub_1BE06F160();
  swift_release();
  LOBYTE(v14) = *(unsigned char *)(v18 + 40);
  swift_release();
  LOBYTE(v30) = v14;
  uint64_t v19 = v26;
  sub_1BE00CE58(v25, v26);
  unint64_t v20 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v21 = swift_allocObject();
  sub_1BE00CEC0(v19, v21 + v20);
  sub_1BE00D09C();
  sub_1BE06FF20();
  swift_release();
  return sub_1BDF8686C((uint64_t)v13, &qword_1EA0E4378);
}

uint64_t sub_1BE00C154@<X0>(uint64_t a1@<X8>)
{
  sub_1BE06F7A0();
  id v2 = CUIKBundle();
  uint64_t result = sub_1BE06FD20();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5 & 1;
  *(void *)(a1 + 24) = v6;
  return result;
}

void sub_1BE00C214(uint64_t a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  type metadata accessor for EditShareeView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  sub_1BE0702C0();
  id v3 = *(id *)(v5 + 16);
  swift_release();
  if (v2) {
    uint64_t v4 = 2;
  }
  else {
    uint64_t v4 = 1;
  }
  objc_msgSend(v3, sel_setShareeAccessLevel_, v4);
}

uint64_t sub_1BE00C2A4()
{
  sub_1BE06F7A0();
  id v0 = CUIKBundle();
  uint64_t v1 = sub_1BE06FD20();
  uint64_t v3 = v2;
  char v5 = v4 & 1;
  sub_1BE06FAE0();
  sub_1BE06F2D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3598);
  sub_1BDFCE760();
  sub_1BE06FE10();
  sub_1BDF8587C(v1, v3, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE00C3E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EditShareeView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E43A8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BE06F290();
  uint64_t v8 = sub_1BE06F2A0();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  sub_1BE00CE58(a1, (uint64_t)&v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_1BE00CEC0((uint64_t)&v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v10 + v9);
  uint64_t v13 = a1;
  return sub_1BE070140();
}

uint64_t sub_1BE00C5AC(uint64_t a1)
{
  uint64_t v2 = sub_1BE06F3D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EditShareeView();
  (*(void (**)(void))(a1 + *(int *)(v6 + 24)))();
  sub_1BDFCD954((uint64_t)v5);
  sub_1BE06F3C0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1BE00C6A0(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1BE06F790();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1BE06F780();
  sub_1BE06F770();
  type metadata accessor for EditShareeView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  sub_1BE0702C0();
  id v3 = *(id *)(v9 + 16);
  swift_release();
  id v4 = objc_msgSend(v3, sel_firstName);

  if (v4)
  {
    sub_1BE070500();

    sub_1BE06F760();
    swift_bridgeObjectRelease();
    sub_1BE06F770();
    sub_1BE06F7B0();
    id v5 = CUIKBundle();
    *(void *)a1 = sub_1BE06FD20();
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v7 & 1;
    *(void *)(a1 + 24) = v8;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BE00C85C(uint64_t a1)
{
  uint64_t v2 = sub_1BE06F940();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E34E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BE06F930();
  uint64_t v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32C8);
  sub_1BDF86964(&qword_1EA0E3500, &qword_1EA0E32C8);
  sub_1BE06F340();
  uint64_t v7 = sub_1BDF86964(&qword_1EA0E34F0, &qword_1EA0E34E8);
  MEMORY[0x1C1888180](v6, v3, v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BE00CA24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EditShareeView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v6 - 8);
  sub_1BE070450();
  id v7 = CUIKBundle();
  sub_1BE06EF70();
  v12[1] = sub_1BE070530();
  v12[2] = v8;
  sub_1BE00CE58(a1, (uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_1BE00CEC0((uint64_t)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  sub_1BDF859F0();
  return sub_1BE070170();
}

uint64_t sub_1BE00CC28()
{
  uint64_t v0 = sub_1BE06F3D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFCD954((uint64_t)v3);
  sub_1BE06F3C0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BE00CCF4()
{
  return sub_1BE06F4C0();
}

uint64_t sub_1BE00CE40()
{
  return sub_1BE00A724(*(void *)(v0 + 16));
}

uint64_t sub_1BE00CE48()
{
  return sub_1BE00C85C(*(void *)(v0 + 16));
}

uint64_t sub_1BE00CE50()
{
  return sub_1BE00CA24(*(void *)(v0 + 16));
}

uint64_t sub_1BE00CE58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditShareeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE00CEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EditShareeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE00CF24()
{
  return sub_1BE00D184((uint64_t (*)(uint64_t))sub_1BE00CC28);
}

uint64_t sub_1BE00CF3C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE00B360(*(void *)(v1 + 16), a1);
}

uint64_t sub_1BE00CF44(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BE00CF84(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BE00CFC4()
{
  return sub_1BE00A4C8();
}

unint64_t sub_1BE00CFE8()
{
  unint64_t result = qword_1EA0E4368;
  if (!qword_1EA0E4368)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4338);
    sub_1BE00D210(&qword_1EA0E1440, MEMORY[0x1E4F3DF58]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4368);
  }
  return result;
}

uint64_t sub_1BE00D094@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE00BCEC(*(void *)(v1 + 16), a1);
}

unint64_t sub_1BE00D09C()
{
  unint64_t result = qword_1EA0E4380;
  if (!qword_1EA0E4380)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4378);
    sub_1BDF86964(&qword_1EA0E4388, &qword_1EA0E3310);
    sub_1BDF86964(&qword_1EA0E4390, &qword_1EA0E4398);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4380);
  }
  return result;
}

uint64_t sub_1BE00D160()
{
  return sub_1BE00C3E4(*(void *)(v0 + 16));
}

uint64_t sub_1BE00D16C()
{
  return sub_1BE00D184(sub_1BE00C5AC);
}

uint64_t sub_1BE00D184(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for EditShareeView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

void sub_1BE00D1F8(uint64_t a1@<X8>)
{
}

uint64_t sub_1BE00D210(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroyTm_5()
{
  uint64_t v1 = type metadata accessor for EditShareeView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1BE06F3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v3 + v4;
  uint64_t v8 = v5 + *(int *)(v1 + 20);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4290);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, v7, v2 | 7);
}

void sub_1BE00D3D4(uint64_t a1, unsigned __int8 *a2)
{
  type metadata accessor for EditShareeView();

  sub_1BE00C214(a1, a2);
}

double sub_1BE00D454@<D0>(uint64_t a1@<X8>)
{
  return sub_1BE00A6C4(a1);
}

unint64_t sub_1BE00D45C()
{
  unint64_t result = qword_1EA0E4E90;
  if (!qword_1EA0E4E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4E90);
  }
  return result;
}

uint64_t sub_1BE00D4B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BE00D4F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BE00D538()
{
  return sub_1BDF86964(&qword_1EA0E43C8, (uint64_t *)&unk_1EA0E43D0);
}

uint64_t EventCalendarModel.displayColor.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(long long *__return_ptr))(a2 + 80))(&v3);
  if (v4 == 255) {
    return 0;
  }
  else {
    return CalendarColor.displayColor.getter();
  }
}

BOOL EventCalendarModel.isSharedToMe.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))() == 2;
}

BOOL EventCalendarModel.isLocalCalendar.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))() == 0;
}

uint64_t EventCalendarModel.isDelegate.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    char v10 = 0;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t dispatch thunk of EventCalendarModel.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventCalendarModel.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EventCalendarModel.externalID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EventCalendarModel.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EventCalendarModel.displayOrder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EventCalendarModel.color.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EventCalendarModel.allowsContentModifications.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EventCalendarModel.sharingStatus.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of EventCalendarModel.source.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of EventCalendarModel.isSubscribed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of EventCalendarModel.isHolidayCalendar.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of EventCalendarModel.isSubscribedHolidayCalendar.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of EventCalendarModel.isSuggestedEventCalendar.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of EventCalendarModel.allowsEvents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of EventCalendarModel.allowsScheduling.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of EventCalendarModel.sharedOwnerAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of EventCalendarModel.sharedOwnerAddresses.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of EventCalendarModel.ownerIdentityAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of EventCalendarModel.ownerIdentityEmail.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of EventCalendarModel.ownerIdentityPhoneNumber.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of EventCalendarModel.isDefaultCalendarForNewEvents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

id CUIKCreateFamilyCalendarFlowControllerManagerImpl.__allocating_init(delegate:)()
{
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC13CalendarUIKit49CUIKCreateFamilyCalendarFlowControllerManagerImpl____lazy_storage___viewController] = 0;
  swift_unknownObjectWeakAssign();
  v4.receiver = v1;
  v4.super_class = v0;
  id v2 = objc_msgSendSuper2(&v4, sel_init);
  swift_unknownObjectRelease();
  return v2;
}

id CUIKCreateFamilyCalendarFlowControllerManagerImpl.init(delegate:)()
{
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC13CalendarUIKit49CUIKCreateFamilyCalendarFlowControllerManagerImpl____lazy_storage___viewController] = 0;
  swift_unknownObjectWeakAssign();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CUIKCreateFamilyCalendarFlowControllerManagerImpl();
  id v1 = objc_msgSendSuper2(&v3, sel_init);
  swift_unknownObjectRelease();
  return v1;
}

uint64_t type metadata accessor for CUIKCreateFamilyCalendarFlowControllerManagerImpl()
{
  return self;
}

id sub_1BE00DB78()
{
  id v1 = v0;
  uint64_t FamilyCalendarFlow = type metadata accessor for CreateFamilyCalendarFlow();
  MEMORY[0x1F4188790](FamilyCalendarFlow - 8);
  objc_super v4 = (uint64_t *)((char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = OBJC_IVAR____TtC13CalendarUIKit49CUIKCreateFamilyCalendarFlowControllerManagerImpl____lazy_storage___viewController;
  uint64_t v6 = *(void **)&v1[OBJC_IVAR____TtC13CalendarUIKit49CUIKCreateFamilyCalendarFlowControllerManagerImpl____lazy_storage___viewController];
  if (v6)
  {
    id v7 = *(id *)&v1[OBJC_IVAR____TtC13CalendarUIKit49CUIKCreateFamilyCalendarFlowControllerManagerImpl____lazy_storage___viewController];
  }
  else
  {
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v1;
    uint64_t v9 = v1;
    CreateFamilyCalendarFlow.init(completion:)((uint64_t)sub_1BE00DDC8, v8, v4);
    id v10 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E43F0));
    uint64_t v11 = (void *)sub_1BE06F810();
    uint64_t v12 = *(void **)&v1[v5];
    *(void *)&v1[v5] = v11;
    id v7 = v11;

    uint64_t v6 = 0;
  }
  id v13 = v6;
  return v7;
}

void *sub_1BE00DCC8(void *a1, char a2, uint64_t a3)
{
  unint64_t result = (void *)MEMORY[0x1C188ADC0](a3 + OBJC_IVAR____TtC13CalendarUIKit49CUIKCreateFamilyCalendarFlowControllerManagerImpl_delegate);
  uint64_t v6 = result;
  if (a2)
  {
    if (!result) {
      return result;
    }
    id v7 = a1;
    uint64_t v8 = (void *)sub_1BE06EDA0();
    objc_msgSend(v6, sel_onFlowCompleteWithIsCalendarCreated_error_, 0, v8);
    sub_1BE00DFC4(a1, 1);
  }
  else
  {
    if (!result) {
      return result;
    }
    objc_msgSend(result, sel_onFlowCompleteWithIsCalendarCreated_error_, 1, 0);
  }

  return (void *)swift_unknownObjectRelease();
}

uint64_t sub_1BE00DD90()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void *sub_1BE00DDC8(void *a1, char a2)
{
  return sub_1BE00DCC8(a1, a2 & 1, *(void *)(v2 + 16));
}

id CUIKCreateFamilyCalendarFlowControllerManagerImpl.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void CUIKCreateFamilyCalendarFlowControllerManagerImpl.init()()
{
}

id CUIKCreateFamilyCalendarFlowControllerManagerImpl.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CUIKCreateFamilyCalendarFlowControllerManagerImpl();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BE00DE9C@<X0>(void *a1@<X8>)
{
  id result = sub_1BE00DB78();
  *a1 = result;
  return result;
}

void sub_1BE00DEC8(void **a1, void *a2)
{
  objc_super v2 = *a1;
  id v4 = *(id *)(*a2
             + OBJC_IVAR____TtC13CalendarUIKit49CUIKCreateFamilyCalendarFlowControllerManagerImpl____lazy_storage___viewController);
  *(void *)(*a2
            + OBJC_IVAR____TtC13CalendarUIKit49CUIKCreateFamilyCalendarFlowControllerManagerImpl____lazy_storage___viewController) = *a1;
  id v3 = v2;
}

uint64_t method lookup function for CUIKCreateFamilyCalendarFlowControllerManagerImpl(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CUIKCreateFamilyCalendarFlowControllerManagerImpl);
}

uint64_t dispatch thunk of CUIKCreateFamilyCalendarFlowControllerManagerImpl.__allocating_init(delegate:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of CUIKCreateFamilyCalendarFlowControllerManagerImpl.viewController.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

void sub_1BE00DFC4(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t sub_1BE00DFD0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BE00E050()
{
  return sub_1BE06F230();
}

uint64_t sub_1BE00E0D4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();

  return swift_release();
}

uint64_t sub_1BE00E150(uint64_t a1)
{
  uint64_t v2 = sub_1BE06EEE0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  v9(v6, (uint64_t)v8, v2);
  swift_retain();
  sub_1BE06F230();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

double sub_1BE00E2C0@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1BE00E340()
{
  return sub_1BE06F230();
}

uint64_t sub_1BE00E3BC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BE00E43C()
{
  return sub_1BE06F230();
}

uint64_t sub_1BE00E4B0@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BE00E530()
{
  return sub_1BE06F230();
}

uint64_t sub_1BE00E5A4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BE00E618()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();

  return swift_release();
}

double sub_1BE00E690()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BE00E704()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BE00E778()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  return v1;
}

void sub_1BE00E7EC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v1 = *(id *)(Strong + 16);
    swift_release();
    if (objc_msgSend(v1, sel_refresh))
    {
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        sub_1BE00E89C();
        swift_release();
      }
    }
  }
}

void sub_1BE00E89C()
{
  id v1 = *(void **)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_title);
  if (v2)
  {
    char v3 = v2;
    uint64_t v4 = sub_1BE070500();
    uint64_t v6 = v5;

    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1BE06F230();
    objc_msgSend(v1, sel_duration, v4, v6);
    uint64_t v8 = v7;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1BE06F230();
    objc_msgSend(v1, sel_isAllDay, v8);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1BE06F230();
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v11) = 0;
    swift_retain();
    sub_1BE06F230();
    id v9 = objc_msgSend(v1, sel_organizer, v11);
    id v10 = *(void **)(v0 + OBJC_IVAR____TtC13CalendarUIKit25CUIKProposedTimeViewModel_organizer);
    *(void *)(v0 + OBJC_IVAR____TtC13CalendarUIKit25CUIKProposedTimeViewModel_organizer) = v9;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BE00EA64()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13CalendarUIKit25CUIKProposedTimeViewModel__title;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4440);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13CalendarUIKit25CUIKProposedTimeViewModel__startDate;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E5280);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC13CalendarUIKit25CUIKProposedTimeViewModel__eventDuration;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4448);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtC13CalendarUIKit25CUIKProposedTimeViewModel__allDay;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4450);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v0 + OBJC_IVAR____TtC13CalendarUIKit25CUIKProposedTimeViewModel__pushAction;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);

  return swift_deallocClassInstance();
}

uint64_t sub_1BE00EC48()
{
  return type metadata accessor for CUIKProposedTimeViewModel();
}

uint64_t type metadata accessor for CUIKProposedTimeViewModel()
{
  uint64_t result = qword_1EA0E4420;
  if (!qword_1EA0E4420) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BE00EC9C()
{
  sub_1BE00EEE0(319, &qword_1EA0E4430);
  if (v0 <= 0x3F)
  {
    sub_1BE00EE88();
    if (v1 <= 0x3F)
    {
      sub_1BE00EEE0(319, &qword_1EA0E51C0);
      if (v2 <= 0x3F)
      {
        sub_1BE00EEE0(319, (unint64_t *)&unk_1EA0E51B0);
        if (v3 <= 0x3F)
        {
          sub_1BE00EEE0(319, (unint64_t *)&unk_1EA0E50B0);
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void sub_1BE00EE88()
{
  if (!qword_1EA0E4438)
  {
    sub_1BE06EEE0();
    unint64_t v0 = sub_1BE06F240();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA0E4438);
    }
  }
}

void sub_1BE00EEE0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1BE06F240();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1BE00EF28()
{
  return MEMORY[0x1E4F1ABE8];
}

uint64_t sub_1BE00EF34@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CUIKProposedTimeViewModel();
  uint64_t result = sub_1BE06F1E0();
  *a1 = result;
  return result;
}

id sub_1BE00EF9C(void *a1, char *a2)
{
  uint64_t v3 = v2;
  unint64_t v33 = a2;
  uint64_t v5 = sub_1BE070950();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1BE06EEE0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v29 - v12;
  *(void *)(v3 + 24) = MEMORY[0x1E4FBC870];
  *(unsigned char *)(v3 + 32) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC13CalendarUIKit25CUIKProposedTimeViewModel_organizer) = 0;
  *(void *)(v3 + 16) = a1;
  id v14 = a1;
  id result = objc_msgSend(v14, sel_title);
  if (result)
  {
    uint64_t v16 = result;
    uint64_t v17 = sub_1BE070500();
    uint64_t v19 = v18;

    swift_beginAccess();
    uint64_t v34 = v17;
    uint64_t v35 = v19;
    sub_1BE06F200();
    swift_endAccess();
    unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v20(v13, (uint64_t)v33, v7);
    swift_beginAccess();
    v20(v11, (uint64_t)v13, v7);
    sub_1BE06F200();
    uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
    v21(v13, v7);
    swift_endAccess();
    objc_msgSend(v14, sel_duration);
    uint64_t v23 = v22;
    swift_beginAccess();
    uint64_t v34 = v23;
    sub_1BE06F200();
    swift_endAccess();
    LOBYTE(v17) = objc_msgSend(v14, sel_isAllDay);
    swift_beginAccess();
    LOBYTE(v34) = v17;
    sub_1BE06F200();
    swift_endAccess();
    swift_beginAccess();
    LOBYTE(v34) = 0;
    sub_1BE06F200();
    swift_endAccess();
    id v24 = objc_msgSend(v14, sel_organizer);
    uint64_t v25 = *(void **)(v3 + OBJC_IVAR____TtC13CalendarUIKit25CUIKProposedTimeViewModel_organizer);
    *(void *)(v3 + OBJC_IVAR____TtC13CalendarUIKit25CUIKProposedTimeViewModel_organizer) = v24;

    id v26 = objc_msgSend(self, sel_defaultCenter);
    uint64_t v27 = v30;
    sub_1BE070960();

    swift_allocObject();
    swift_weakInit();
    sub_1BE00F480();
    uint64_t v28 = v32;
    sub_1BE06F260();
    swift_release();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v28);
    swift_beginAccess();
    sub_1BE06F1D0();
    swift_endAccess();
    swift_release();
    v21(v33, v7);
    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BE00F440()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1BE00F478()
{
}

unint64_t sub_1BE00F480()
{
  unint64_t result = qword_1EA0E5320;
  if (!qword_1EA0E5320)
  {
    sub_1BE070950();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E5320);
  }
  return result;
}

id EKParticipantModelWrapper.ekParticipant.getter()
{
  return *v0;
}

void EKParticipantModelWrapper.ekParticipant.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*EKParticipantModelWrapper.ekParticipant.modify())()
{
  return nullsub_1;
}

uint64_t EKParticipantModelWrapper.name.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_name);
}

uint64_t EKParticipantModelWrapper.emailAddress.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_emailAddress);
}

uint64_t EKParticipantModelWrapper.phoneNumber.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_phoneNumber);
}

uint64_t EKParticipantModelWrapper.url.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = [*v1 URL];
  sub_1BE06EDE0();

  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, 0, 1, v4);
}

id EKParticipantModelWrapper.id.getter()
{
  id result = objc_msgSend(*v0, sel_UUID);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_1BE070500();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id EKParticipantModelWrapper.isCurrentUser.getter()
{
  return objc_msgSend(*v0, sel_isCurrentUser);
}

uint64_t EKParticipantModelWrapper.contactID.getter()
{
  return 0;
}

CalendarUIKit::EKParticipantModelWrapper __swiftcall EKParticipantModelWrapper.init(_:)(CalendarUIKit::EKParticipantModelWrapper result)
{
  v1->ekParticipant.super.super.isa = result.ekParticipant.super.super.isa;
  return result;
}

CalendarUIKit::EKParticipantModelWrapper_optional __swiftcall EKParticipantModelWrapper.init(_:)(CalendarUIKit::EKParticipantModelWrapper_optional result)
{
  *uint64_t v1 = result.value.ekParticipant.super.super.isa;
  return result;
}

id sub_1BE00F684()
{
  id result = objc_msgSend(*v0, sel_UUID);
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = sub_1BE070500();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BE00F6E4(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_name);
}

uint64_t sub_1BE00F6F0(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_emailAddress);
}

uint64_t sub_1BE00F6FC(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_phoneNumber);
}

uint64_t sub_1BE00F708@<X0>(uint64_t a1@<X8>)
{
  id v3 = [*v1 URL];
  sub_1BE06EDE0();

  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, 0, 1, v4);
}

id sub_1BE00F79C()
{
  return objc_msgSend(*v0, sel_isCurrentUser);
}

void sub_1BE00F7C0(uint64_t *a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_UUID);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1BE070500();
    uint64_t v7 = v6;

    *a1 = v5;
    a1[1] = v7;
  }
  else
  {
    __break(1u);
  }
}

id EKAttendeeModelWrapper.ekAttendee.getter()
{
  return *v0;
}

void EKAttendeeModelWrapper.ekAttendee.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*EKAttendeeModelWrapper.ekAttendee.modify())()
{
  return nullsub_1;
}

id EKAttendeeModelWrapper.status.getter()
{
  return objc_msgSend(*v0, sel_participantStatus);
}

id EKAttendeeModelWrapper.role.getter()
{
  return objc_msgSend(*v0, sel_participantRole);
}

id EKAttendeeModelWrapper.type.getter()
{
  return objc_msgSend(*v0, sel_participantType);
}

uint64_t EKAttendeeModelWrapper.comment.getter()
{
  id v1 = objc_msgSend(*v0, sel_comment);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1BE070500();

  return v3;
}

unint64_t sub_1BE00F92C()
{
  unint64_t result = qword_1EB677D78;
  if (!qword_1EB677D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB677D78);
  }
  return result;
}

id sub_1BE00F984()
{
  return objc_msgSend(*v0, sel_participantStatus);
}

id sub_1BE00F994()
{
  return objc_msgSend(*v0, sel_participantRole);
}

id sub_1BE00F9A4()
{
  return objc_msgSend(*v0, sel_participantType);
}

uint64_t sub_1BE00F9B4()
{
  id v1 = objc_msgSend(*v0, sel_comment);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1BE070500();

  return v3;
}

uint64_t (*EKOrganizerModelWrapper.ekOrganizer.modify())()
{
  return nullsub_1;
}

uint64_t _s13CalendarUIKit22EKAttendeeModelWrapperV4nameSSSgvg_0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2);
}

uint64_t _s13CalendarUIKit22EKAttendeeModelWrapperV12emailAddressSSSgvg_0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
}

uint64_t _s13CalendarUIKit22EKAttendeeModelWrapperV11phoneNumberSSSgvg_0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(v1, v2);
}

uint64_t _s13CalendarUIKit22EKAttendeeModelWrapperV3url10Foundation3URLVSgvg_0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 48))(v1, v2);
}

uint64_t _s13CalendarUIKit22EKAttendeeModelWrapperV2idSSvg_0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t _s13CalendarUIKit22EKAttendeeModelWrapperV13isCurrentUserSbvg_0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 56))(v1, v2) & 1;
}

uint64_t _s13CalendarUIKit22EKAttendeeModelWrapperV9contactIDSSSgvg_0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[5];
  __swift_project_boxed_opaque_existential_1(v0 + 1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 64))(v1, v2);
}

id EKOrganizerModelWrapper.scheduleAgent.getter()
{
  return objc_msgSend(*v0, sel_scheduleAgent);
}

id _s13CalendarUIKit22EKAttendeeModelWrapperVyACSo0C0CcfC_0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = a1;
  a2[4] = &type metadata for EKParticipantModelWrapper;
  a2[5] = sub_1BE00F92C();
  a2[1] = a1;

  return a1;
}

id _s13CalendarUIKit22EKAttendeeModelWrapperVyACSgSo0C0CSgcfC_0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    *(void *)a2 = a1;
    *(void *)(a2 + 32) = &type metadata for EKParticipantModelWrapper;
    id v4 = a1;
    *(void *)(a2 + 40) = sub_1BE00F92C();
    a1 = v4;
    *(void *)(a2 + 8) = v4;
  }
  else
  {
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }

  return a1;
}

unint64_t sub_1BE00FDB4(uint64_t a1)
{
  unint64_t result = sub_1BE00FDDC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BE00FDDC()
{
  unint64_t result = qword_1EB677D70;
  if (!qword_1EB677D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB677D70);
  }
  return result;
}

unint64_t sub_1BE00FE30(uint64_t a1)
{
  unint64_t result = sub_1BE00FE58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BE00FE58()
{
  unint64_t result = qword_1EA0E1658;
  if (!qword_1EA0E1658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1658);
  }
  return result;
}

unint64_t sub_1BE00FEAC(uint64_t a1)
{
  unint64_t result = sub_1BE00FED4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BE00FED4()
{
  unint64_t result = qword_1EA0E1648;
  if (!qword_1EA0E1648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1648);
  }
  return result;
}

id sub_1BE00FF28()
{
  return objc_msgSend(*v0, sel_scheduleAgent);
}

unint64_t sub_1BE00FF38(uint64_t a1)
{
  unint64_t result = sub_1BE00FF60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BE00FF60()
{
  unint64_t result = qword_1EA0E1680;
  if (!qword_1EA0E1680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1680);
  }
  return result;
}

unint64_t sub_1BE00FFB4(uint64_t a1)
{
  unint64_t result = sub_1BE00FFDC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BE00FFDC()
{
  unint64_t result = qword_1EA0E1590;
  if (!qword_1EA0E1590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1590);
  }
  return result;
}

uint64_t sub_1BE010030@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  __swift_project_boxed_opaque_existential_1(v1 + 1, v3);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  *a1 = result;
  a1[1] = v6;
  return result;
}

ValueMetadata *type metadata accessor for EKParticipantModelWrapper()
{
  return &type metadata for EKParticipantModelWrapper;
}

uint64_t destroy for EKAttendeeModelWrapper(id *a1)
{
  uint64_t v1 = (uint64_t)(a1 + 1);

  return __swift_destroy_boxed_opaque_existential_1(v1);
}

void **assignWithCopy for EKAttendeeModelWrapper(void **a1, void **a2)
{
  uint64_t v4 = (uint64_t *)(a2 + 1);
  uint64_t v3 = *a2;
  uint64_t v5 = *a1;
  *a1 = *a2;
  uint64_t v6 = (uint64_t *)(a1 + 1);
  id v7 = v3;

  __swift_assign_boxed_opaque_existential_1(v6, v4);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for EKAttendeeModelWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for EKAttendeeModelWrapper()
{
  return &type metadata for EKAttendeeModelWrapper;
}

uint64_t _s13CalendarUIKit22EKAttendeeModelWrapperVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = a1 + 8;
  uint64_t v5 = a2 + 8;
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  id v9 = v3;
  v8(v4, v5, v7);
  return a1;
}

uint64_t _s13CalendarUIKit22EKAttendeeModelWrapperVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1BE0104A0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EKOrganizerModelWrapper()
{
  return &type metadata for EKOrganizerModelWrapper;
}

uint64_t EventVirtualConferenceModelObject.init(title:joinMethods:conferenceDetails:serializationBlockTitle:isWritable:source:firstPhoneNumber:urlWithAllowedScheme:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16 = type metadata accessor for EventVirtualConferenceModelObject(0);
  uint64_t v17 = a9 + *(int *)(v16 + 40);
  uint64_t v18 = sub_1BE06EE10();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  v19(v17, 1, 1, v18);
  uint64_t v20 = a9 + *(int *)(v16 + 44);
  v19(v20, 1, 1, v18);
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8;
  *(void *)(a9 + 64) = a10;
  sub_1BDF8BFB4(a11, v17);

  return sub_1BDF8BFB4(a12, v20);
}

uint64_t type metadata accessor for EventVirtualConferenceModelObject(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E1620);
}

uint64_t EventVirtualConferenceJoinMethodModelObject.init(title:url:isBroadcast:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  uint64_t v11 = (uint64_t)a5 + *(int *)(v10 + 20);
  uint64_t v12 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *a5 = a1;
  a5[1] = a2;
  uint64_t result = sub_1BDF8BFB4(a3, v11);
  *((unsigned char *)a5 + *(int *)(v10 + 24)) = a4;
  return result;
}

uint64_t type metadata accessor for EventVirtualConferenceJoinMethodModelObject(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E44D0);
}

uint64_t EventVirtualConferenceModelObject.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventVirtualConferenceModelObject.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*EventVirtualConferenceModelObject.title.modify())()
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceModelObject.joinMethods.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventVirtualConferenceModelObject.joinMethods.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*EventVirtualConferenceModelObject.joinMethods.modify())()
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceModelObject.conferenceDetails.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventVirtualConferenceModelObject.conferenceDetails.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*EventVirtualConferenceModelObject.conferenceDetails.modify())()
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceModelObject.serializationBlockTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventVirtualConferenceModelObject.serializationBlockTitle.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*EventVirtualConferenceModelObject.serializationBlockTitle.modify())()
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceModelObject.isWritable.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t EventVirtualConferenceModelObject.isWritable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*EventVirtualConferenceModelObject.isWritable.modify())()
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceModelObject.source.getter()
{
  return *(void *)(v0 + 64);
}

uint64_t EventVirtualConferenceModelObject.source.setter(uint64_t result)
{
  *(void *)(v1 + 64) = result;
  return result;
}

uint64_t (*EventVirtualConferenceModelObject.source.modify())()
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceModelObject.firstPhoneNumber.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventVirtualConferenceModelObject(0) + 40);

  return sub_1BDF8BF34(v3, a1);
}

uint64_t EventVirtualConferenceModelObject.firstPhoneNumber.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventVirtualConferenceModelObject(0) + 40);

  return sub_1BDF8BFB4(a1, v3);
}

uint64_t (*EventVirtualConferenceModelObject.firstPhoneNumber.modify())(void)
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceModelObject.urlWithAllowedScheme.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventVirtualConferenceModelObject(0) + 44);

  return sub_1BDF8BF34(v3, a1);
}

uint64_t EventVirtualConferenceModelObject.urlWithAllowedScheme.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventVirtualConferenceModelObject(0) + 44);

  return sub_1BDF8BFB4(a1, v3);
}

uint64_t (*EventVirtualConferenceModelObject.urlWithAllowedScheme.modify())(void)
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v71 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (void *)((char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v61 - v9;
  uint64_t v11 = type metadata accessor for EventVirtualConferenceModelObject(0);
  uint64_t v12 = v11 - 8;
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v14 + 6) = 0;
  *((_OWORD *)v14 + 1) = 0u;
  *((_OWORD *)v14 + 2) = 0u;
  *(_OWORD *)id v14 = 0u;
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  uint64_t v16 = sub_1BE06EE10();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v19 = v17 + 56;
  uint64_t v63 = v15;
  v18(v15, 1, 1, v16);
  uint64_t v64 = &v14[*(int *)(v12 + 52)];
  uint64_t v68 = v18;
  uint64_t v69 = v16;
  uint64_t v67 = v19;
  ((void (*)(void))v18)();
  uint64_t v20 = a1[3];
  uint64_t v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  *(void *)id v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
  *((void *)v14 + 1) = v22;
  uint64_t v65 = v14;
  uint64_t v23 = a1[3];
  uint64_t v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 32))(v23, v24);
  if (v25)
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33F0);
    uint64_t v26 = sub_1BE070C70();
    swift_bridgeObjectRelease();
    int64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      uint64_t v62 = a1;
      uint64_t v76 = MEMORY[0x1E4FBC860];
      sub_1BDFF49A8(0, v27, 0);
      v61[1] = v26;
      uint64_t v28 = v26 + 32;
      uint64_t v29 = (uint64_t)v71;
      do
      {
        sub_1BDFC3C28(v28, (uint64_t)v75);
        sub_1BDFC3C28((uint64_t)v75, (uint64_t)v72);
        void *v8 = 0;
        v8[1] = 0;
        uint64_t v30 = (uint64_t)v8 + *(int *)(v5 + 20);
        v68(v30, 1, 1, v69);
        uint64_t v32 = v73;
        uint64_t v31 = v74;
        __swift_project_boxed_opaque_existential_1(v72, v73);
        void *v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v32, v31);
        v8[1] = v33;
        uint64_t v34 = v73;
        uint64_t v35 = v74;
        __swift_project_boxed_opaque_existential_1(v72, v73);
        (*(void (**)(uint64_t, uint64_t))(v35 + 16))(v34, v35);
        sub_1BDF8BFB4(v29, v30);
        uint64_t v36 = v73;
        uint64_t v37 = v74;
        __swift_project_boxed_opaque_existential_1(v72, v73);
        *((unsigned char *)v8 + *(int *)(v5 + 24)) = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 24))(v36, v37) & 1;
        sub_1BE012FE8((uint64_t)v8, (uint64_t)v10, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
        sub_1BE013050((uint64_t)v8, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
        uint64_t v25 = v76;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDFF49A8(0, *(void *)(v25 + 16) + 1, 1);
          uint64_t v25 = v76;
        }
        unint64_t v39 = *(void *)(v25 + 16);
        unint64_t v38 = *(void *)(v25 + 24);
        if (v39 >= v38 >> 1)
        {
          sub_1BDFF49A8(v38 > 1, v39 + 1, 1);
          uint64_t v25 = v76;
        }
        *(void *)(v25 + 16) = v39 + 1;
        sub_1BE0130B0((uint64_t)v10, v25+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v39);
        v28 += 40;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      a1 = v62;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = MEMORY[0x1E4FBC860];
    }
  }
  uint64_t v40 = (uint64_t)v65;
  swift_bridgeObjectRelease();
  *(void *)(v40 + 16) = v25;
  uint64_t v41 = a1[3];
  uint64_t v42 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v41);
  uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 40))(v41, v42);
  uint64_t v45 = v44;
  swift_bridgeObjectRelease();
  *(void *)(v40 + 24) = v43;
  *(void *)(v40 + 32) = v45;
  uint64_t v46 = a1[3];
  uint64_t v47 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v46);
  uint64_t v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 48))(v46, v47);
  uint64_t v50 = v49;
  swift_bridgeObjectRelease();
  *(void *)(v40 + 40) = v48;
  *(void *)(v40 + 48) = v50;
  uint64_t v51 = a1[3];
  uint64_t v52 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v51);
  *(unsigned char *)(v40 + 56) = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 56))(v51, v52) & 1;
  uint64_t v53 = a1[3];
  uint64_t v54 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v53);
  *(void *)(v40 + 64) = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 64))(v53, v54);
  uint64_t v55 = a1[3];
  uint64_t v56 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v55);
  uint64_t v57 = (uint64_t)v71;
  (*(void (**)(uint64_t, uint64_t))(v56 + 72))(v55, v56);
  sub_1BDF8BFB4(v57, v63);
  uint64_t v58 = a1[3];
  uint64_t v59 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v58);
  (*(void (**)(uint64_t, uint64_t))(v59 + 80))(v58, v59);
  sub_1BDF8BFB4(v57, (uint64_t)v64);
  sub_1BE012FE8(v40, v66, type metadata accessor for EventVirtualConferenceModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BE013050(v40, type metadata accessor for EventVirtualConferenceModelObject);
}

uint64_t EventVirtualConferenceJoinMethodModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = (uint64_t)v10 + *(int *)(v8 + 28);
  uint64_t v12 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  *uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  v10[1] = v15;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v16, v17);
  sub_1BDF8BFB4((uint64_t)v6, v11);
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  *((unsigned char *)v10 + *(int *)(v8 + 32)) = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19) & 1;
  sub_1BE012FE8((uint64_t)v10, a2, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BE013050((uint64_t)v10, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
}

uint64_t EventVirtualConferenceModelObject.hash(into:)(uint64_t a1)
{
  uint64_t v3 = sub_1BE06EE10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v22 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v21 - v10;
  if (v1[1])
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    uint64_t v12 = v1[2];
    if (v12) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_1BE070FD0();
    uint64_t v12 = v1[2];
    if (v12)
    {
LABEL_3:
      sub_1BE070FD0();
      swift_bridgeObjectRetain();
      sub_1BE013600(a1, v12);
      swift_bridgeObjectRelease();
      if (v1[4]) {
        goto LABEL_4;
      }
LABEL_8:
      sub_1BE070FD0();
      if (v1[6]) {
        goto LABEL_5;
      }
      goto LABEL_9;
    }
  }
  sub_1BE070FD0();
  if (!v1[4]) {
    goto LABEL_8;
  }
LABEL_4:
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  if (v1[6])
  {
LABEL_5:
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
LABEL_9:
  sub_1BE070FD0();
LABEL_10:
  sub_1BE070FD0();
  sub_1BE070FC0();
  uint64_t v13 = type metadata accessor for EventVirtualConferenceModelObject(0);
  sub_1BDF8BF34((uint64_t)v1 + *(int *)(v13 + 40), (uint64_t)v11);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  if (v14(v11, 1, v3) == 1)
  {
    uint64_t v15 = v4;
    sub_1BE070FD0();
  }
  else
  {
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    uint64_t v21 = v9;
    uint64_t v17 = v22;
    v16(v22, v11, v3);
    sub_1BE070FD0();
    sub_1BE01491C(&qword_1EA0E2D48, MEMORY[0x1E4F276F0]);
    sub_1BE070410();
    uint64_t v15 = v4;
    uint64_t v18 = v17;
    uint64_t v9 = v21;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v18, v3);
  }
  sub_1BDF8BF34((uint64_t)v1 + *(int *)(v13 + 44), (uint64_t)v9);
  if (v14(v9, 1, v3) == 1) {
    return sub_1BE070FD0();
  }
  uint64_t v20 = v22;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v9, v3);
  sub_1BE070FD0();
  sub_1BE01491C(&qword_1EA0E2D48, MEMORY[0x1E4F276F0]);
  sub_1BE070410();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v3);
}

uint64_t EventVirtualConferenceModelObject.hashValue.getter()
{
  return sub_1BE011CAC((void (*)(unsigned char *))EventVirtualConferenceModelObject.hash(into:));
}

uint64_t sub_1BE011854()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE01185C()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_1BE011864()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_1BE01186C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF8BF34(v2 + *(int *)(a1 + 40), a2);
}

uint64_t sub_1BE01187C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF8BF34(v2 + *(int *)(a1 + 44), a2);
}

uint64_t sub_1BE01188C(uint64_t a1, uint64_t a2)
{
  return sub_1BE011E3C(a1, a2, (void (*)(unsigned char *))EventVirtualConferenceModelObject.hash(into:));
}

uint64_t sub_1BE0118A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BE011EA0(a1, a2, a3, (void (*)(unsigned char *))EventVirtualConferenceModelObject.hash(into:));
}

uint64_t (*EventVirtualConferenceJoinMethodModelObject.title.modify())()
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceJoinMethodModelObject.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0) + 20);

  return sub_1BDF8BF34(v3, a1);
}

uint64_t EventVirtualConferenceJoinMethodModelObject.url.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0) + 20);

  return sub_1BDF8BFB4(a1, v3);
}

uint64_t (*EventVirtualConferenceJoinMethodModelObject.url.modify())(void)
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceJoinMethodModelObject.isBroadcast.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0) + 24));
}

uint64_t EventVirtualConferenceJoinMethodModelObject.isBroadcast.setter(char a1)
{
  uint64_t result = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  *(unsigned char *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*EventVirtualConferenceJoinMethodModelObject.isBroadcast.modify())(void)
{
  return nullsub_1;
}

uint64_t EventVirtualConferenceJoinMethodModelObject.hash(into:)()
{
  uint64_t v1 = sub_1BE06EE10();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 8))
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BE070FD0();
  }
  uint64_t v8 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  sub_1BDF8BF34(v0 + *(int *)(v8 + 20), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1BE070FD0();
    sub_1BE01491C(&qword_1EA0E2D48, MEMORY[0x1E4F276F0]);
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_1BE070FD0();
}

uint64_t EventVirtualConferenceJoinMethodModelObject.hashValue.getter()
{
  return sub_1BE011CAC((void (*)(unsigned char *))EventVirtualConferenceJoinMethodModelObject.hash(into:));
}

uint64_t sub_1BE011CAC(void (*a1)(unsigned char *))
{
  sub_1BE070FB0();
  a1(v3);
  return sub_1BE070FF0();
}

unint64_t sub_1BE011CF4(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6874654D6E696F6ALL;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x6261746972577369;
      break;
    case 5:
      unint64_t result = 0x656372756F73;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BE011E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF8BF34(v2 + *(int *)(a1 + 20), a2);
}

uint64_t sub_1BE011E18(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_1BE011E24(uint64_t a1, uint64_t a2)
{
  return sub_1BE011E3C(a1, a2, (void (*)(unsigned char *))EventVirtualConferenceJoinMethodModelObject.hash(into:));
}

uint64_t sub_1BE011E3C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_1BE070FB0();
  a3(v5);
  return sub_1BE070FF0();
}

uint64_t sub_1BE011E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BE011EA0(a1, a2, a3, (void (*)(unsigned char *))EventVirtualConferenceJoinMethodModelObject.hash(into:));
}

uint64_t sub_1BE011EA0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_1BE070FB0();
  a4(v6);
  return sub_1BE070FF0();
}

unint64_t sub_1BE011EE8()
{
  return sub_1BE011CF4(*v0);
}

uint64_t sub_1BE011EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BE01693C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BE011F18(uint64_t a1)
{
  unint64_t v2 = sub_1BE0148C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BE011F54(uint64_t a1)
{
  unint64_t v2 = sub_1BE0148C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventVirtualConferenceModelObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v33 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v34 = (char *)&v31 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4458);
  uint64_t v35 = *(void *)(v7 - 8);
  uint64_t v36 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EventVirtualConferenceModelObject(0);
  uint64_t v11 = v10 - 8;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v13 + 6) = 0;
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  *(_OWORD *)uint64_t v13 = 0u;
  uint64_t v14 = &v13[*(int *)(v11 + 48)];
  uint64_t v15 = sub_1BE06EE10();
  uint64_t v16 = *(void (**)(void))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = (uint64_t)v14;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v16)(v14, 1, 1, v15);
  uint64_t v18 = (uint64_t)&v13[*(int *)(v11 + 52)];
  v16();
  uint64_t v19 = a1[3];
  unint64_t v38 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_1BE0148C8();
  uint64_t v20 = v37;
  sub_1BE071010();
  if (v20)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDF8686C(v17, &qword_1EB678020);
    return sub_1BDF8686C(v18, &qword_1EB678020);
  }
  else
  {
    uint64_t v21 = v35;
    LOBYTE(v39) = 0;
    uint64_t v22 = v17;
    *(void *)uint64_t v13 = sub_1BE070D50();
    *((void *)v13 + 1) = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4468);
    char v41 = 1;
    sub_1BE014964(&qword_1EA0E4470, &qword_1EA0E4478);
    sub_1BE070DA0();
    uint64_t v24 = v21;
    *((void *)v13 + 2) = v39;
    LOBYTE(v39) = 2;
    *((void *)v13 + 3) = sub_1BE070D50();
    *((void *)v13 + 4) = v25;
    LOBYTE(v39) = 3;
    *((void *)v13 + 5) = sub_1BE070D50();
    *((void *)v13 + 6) = v26;
    LOBYTE(v39) = 4;
    v13[56] = sub_1BE070D60() & 1;
    type metadata accessor for EKVirtualConferenceSource(0);
    char v41 = 5;
    sub_1BE01491C(&qword_1EA0E4480, type metadata accessor for EKVirtualConferenceSource);
    sub_1BE070DA0();
    uint64_t v27 = v39;
    if (v40) {
      uint64_t v27 = 0;
    }
    *((void *)v13 + 8) = v27;
    LOBYTE(v39) = 6;
    sub_1BE01491C(&qword_1EA0E2D60, MEMORY[0x1E4F276F0]);
    uint64_t v28 = (uint64_t)v34;
    sub_1BE070DA0();
    sub_1BDF8BFB4(v28, v22);
    LOBYTE(v39) = 7;
    uint64_t v29 = v36;
    sub_1BE070DA0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v29);
    sub_1BDF8BFB4(v33, v18);
    sub_1BE012FE8((uint64_t)v13, v32, type metadata accessor for EventVirtualConferenceModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    return sub_1BE013050((uint64_t)v13, type metadata accessor for EventVirtualConferenceModelObject);
  }
}

uint64_t EventVirtualConferenceModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4488);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE0148C8();
  sub_1BE071030();
  LOBYTE(v12) = 0;
  sub_1BE070E30();
  if (!v2)
  {
    uint64_t v12 = *(void *)(v3 + 16);
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4468);
    sub_1BE014964(&qword_1EA0E4490, &qword_1EA0E4498);
    sub_1BE070E50();
    LOBYTE(v12) = 2;
    sub_1BE070E30();
    LOBYTE(v12) = 3;
    sub_1BE070E30();
    LOBYTE(v12) = 4;
    sub_1BE070E70();
    uint64_t v12 = *(void *)(v3 + 64);
    char v11 = 5;
    type metadata accessor for EKVirtualConferenceSource(0);
    sub_1BE01491C(&qword_1EA0E44A0, type metadata accessor for EKVirtualConferenceSource);
    sub_1BE070EB0();
    type metadata accessor for EventVirtualConferenceModelObject(0);
    LOBYTE(v12) = 6;
    sub_1BE06EE10();
    sub_1BE01491C(&qword_1EA0E2D70, MEMORY[0x1E4F276F0]);
    sub_1BE070E50();
    LOBYTE(v12) = 7;
    sub_1BE070E50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BE0128A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventVirtualConferenceModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BE0128BC(void *a1)
{
  return EventVirtualConferenceModelObject.encode(to:)(a1);
}

uint64_t sub_1BE0128D4(uint64_t a1)
{
  unint64_t v2 = sub_1BE0149F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BE012910(uint64_t a1)
{
  unint64_t v2 = sub_1BE0149F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventVirtualConferenceJoinMethodModelObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v24 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E44A8);
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = (uint64_t)v10 + *(int *)(v8 + 20);
  uint64_t v12 = sub_1BE06EE10();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE0149F8();
  uint64_t v26 = v6;
  uint64_t v13 = v27;
  sub_1BE071010();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return sub_1BDF8686C(v11, &qword_1EB678020);
  }
  else
  {
    uint64_t v27 = v7;
    uint64_t v14 = v23;
    uint64_t v15 = (uint64_t)v24;
    char v30 = 0;
    uint64_t v16 = v25;
    *uint64_t v10 = sub_1BE070D50();
    v10[1] = v17;
    char v29 = 1;
    sub_1BE01491C(&qword_1EA0E2D60, MEMORY[0x1E4F276F0]);
    sub_1BE070DA0();
    sub_1BDF8BFB4(v15, v11);
    char v28 = 2;
    uint64_t v18 = v26;
    char v19 = sub_1BE070D60();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v16);
    uint64_t v20 = v22;
    *((unsigned char *)v10 + *(int *)(v27 + 24)) = v19 & 1;
    sub_1BE012FE8((uint64_t)v10, v20, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1BE013050((uint64_t)v10, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
  }
}

uint64_t EventVirtualConferenceJoinMethodModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E44B8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE0149F8();
  sub_1BE071030();
  v8[15] = 0;
  sub_1BE070E30();
  if (!v1)
  {
    type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
    v8[14] = 1;
    sub_1BE06EE10();
    sub_1BE01491C(&qword_1EA0E2D70, MEMORY[0x1E4F276F0]);
    sub_1BE070E50();
    v8[13] = 2;
    sub_1BE070E70();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BE012EA8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventVirtualConferenceJoinMethodModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BE012EC0(void *a1)
{
  return EventVirtualConferenceJoinMethodModelObject.encode(to:)(a1);
}

uint64_t sub_1BE012ED8()
{
  return sub_1BE0706E0();
}

uint64_t sub_1BE012F68()
{
  return sub_1BE0706B0();
}

uint64_t sub_1BE012FE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BE013050(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BE0130B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE013114(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1BE070FC0();
  if (v3)
  {
    uint64_t v5 = (uint64_t *)(a2 + 56);
    do
    {
      uint64_t v6 = *v5;
      uint64_t v7 = v5[2];
      if (*(v5 - 2))
      {
        sub_1BE070FD0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1BE070590();
        swift_bridgeObjectRelease();
        if (v6) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_1BE070FD0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v6)
        {
LABEL_7:
          sub_1BE070FD0();
          swift_bridgeObjectRetain();
          sub_1BE070590();
          swift_bridgeObjectRelease();
          if (!v7) {
            goto LABEL_11;
          }
          goto LABEL_3;
        }
      }
      sub_1BE070FD0();
      if (!v7)
      {
LABEL_11:
        sub_1BE070FD0();
        goto LABEL_4;
      }
LABEL_3:
      sub_1BE070FD0();
      swift_bridgeObjectRetain();
      sub_1BE070590();
      swift_bridgeObjectRelease();
LABEL_4:
      v5 += 10;
      swift_bridgeObjectRetain();
      sub_1BE070590();
      swift_bridgeObjectRelease();
      sub_1BE070FD0();
      sub_1BE070FD0();
      sub_1BE070FC0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_1BE0132F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1BE070FC0();
  if (v3)
  {
    for (uint64_t i = a2 + 32; ; i += 184)
    {
      sub_1BE016C74(i, (uint64_t)v13);
      sub_1BE016C74((uint64_t)v13, (uint64_t)v14);
      if (sub_1BE016CDC((uint64_t)v14) == 1) {
        break;
      }
      nullsub_1(v14);
      sub_1BE016C74((uint64_t)v13, (uint64_t)v12);
      uint64_t v6 = (_OWORD *)nullsub_1(v12);
      sub_1BE070FC0();
      v11[7] = v6[7];
      v11[8] = v6[8];
      v11[9] = v6[9];
      v11[10] = v6[10];
      v11[3] = v6[3];
      v11[4] = v6[4];
      v11[5] = v6[5];
      v11[6] = v6[6];
      v11[0] = *v6;
      v11[1] = v6[1];
      v11[2] = v6[2];
      uint64_t result = EventLocationModelObject.hash(into:)();
LABEL_4:
      if (!--v3) {
        return result;
      }
    }
    nullsub_1(v14);
    sub_1BE016C74((uint64_t)v13, (uint64_t)v12);
    uint64_t v7 = (void *)nullsub_1(v12);
    uint64_t v8 = v7[1];
    uint64_t v9 = v7[3];
    uint64_t v10 = v7[5];
    sub_1BE070FC0();
    if (v8)
    {
      sub_1BE070FD0();
      sub_1BE016E40((uint64_t)v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
      swift_bridgeObjectRetain();
      sub_1BE070590();
      swift_bridgeObjectRelease();
      if (v9)
      {
LABEL_8:
        sub_1BE070FD0();
        swift_bridgeObjectRetain();
        sub_1BE070590();
        swift_bridgeObjectRelease();
LABEL_11:
        sub_1BE070FD0();
        if (v10)
        {
          swift_bridgeObjectRetain();
          sub_1BE070590();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRetain();
        sub_1BE070590();
        swift_bridgeObjectRelease();
        sub_1BE070FD0();
        sub_1BE070FD0();
        sub_1BE070FC0();
        uint64_t result = sub_1BE016E40((uint64_t)v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016EB4);
        goto LABEL_4;
      }
    }
    else
    {
      sub_1BE070FD0();
      sub_1BE016C74((uint64_t)v13, (uint64_t)v11);
      nullsub_1(v11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9) {
        goto LABEL_8;
      }
    }
    sub_1BE070FD0();
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_1BE013600(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1BE06EE10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v20 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  uint64_t v9 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t result = sub_1BE070FC0();
  if (v12)
  {
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v21 = *(void *)(v9 + 72);
    uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v18 = (void (**)(char *, uint64_t))(v4 + 8);
    char v19 = (void (**)(char *, char *, uint64_t))(v4 + 32);
    do
    {
      sub_1BE012FE8(v14, (uint64_t)v11, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
      if (*((void *)v11 + 1))
      {
        sub_1BE070FD0();
        swift_bridgeObjectRetain();
        sub_1BE070590();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BE070FD0();
      }
      sub_1BDF8BF34((uint64_t)&v11[*(int *)(v22 + 20)], (uint64_t)v8);
      if ((*v15)(v8, 1, v3) == 1)
      {
        sub_1BE070FD0();
      }
      else
      {
        uint64_t v16 = v20;
        (*v19)(v20, v8, v3);
        sub_1BE070FD0();
        sub_1BE01491C(&qword_1EA0E2D48, MEMORY[0x1E4F276F0]);
        sub_1BE070410();
        (*v18)(v16, v3);
      }
      sub_1BE070FD0();
      uint64_t result = sub_1BE013050((uint64_t)v11, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
      v14 += v21;
      --v12;
    }
    while (v12);
  }
  return result;
}

uint64_t sub_1BE013944(uint64_t a1, uint64_t a2)
{
  uint64_t v17 = sub_1BE06EEE0();
  uint64_t v3 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for EventAlarmTrigger();
  MEMORY[0x1F4188790](v20);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for EventAlarmModelObject();
  uint64_t v8 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t result = sub_1BE070FC0();
  if (v11)
  {
    uint64_t v13 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v18 = *(void *)(v8 + 72);
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(v3 + 32);
    uint64_t v15 = (void (**)(char *, uint64_t))(v3 + 8);
    do
    {
      sub_1BE012FE8(v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
      sub_1BE012FE8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v16 = v17;
        (*v14)(v5, v7, v17);
        sub_1BE070FC0();
        sub_1BE01491C(&qword_1EA0E10E0, MEMORY[0x1E4F27928]);
        sub_1BE070410();
        (*v15)(v5, v16);
      }
      else
      {
        sub_1BE070FC0();
        sub_1BE070FE0();
      }
      sub_1BE070FD0();
      uint64_t result = sub_1BE013050((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
      v13 += v18;
      --v11;
    }
    while (v11);
  }
  return result;
}

uint64_t _s13CalendarUIKit43EventVirtualConferenceJoinMethodModelObjectV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2E98);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v33 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v33 - v18;
  uint64_t v20 = a1[1];
  uint64_t v21 = a2[1];
  if (!v20)
  {
    if (v21) {
      goto LABEL_14;
    }
    goto LABEL_8;
  }
  if (!v21) {
    goto LABEL_14;
  }
  if (*a1 == *a2 && v20 == v21 || (char v22 = sub_1BE070EF0(), v23 = 0, (v22 & 1) != 0))
  {
LABEL_8:
    uint64_t v33 = v7;
    uint64_t v24 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
    uint64_t v25 = *(int *)(v24 + 20);
    uint64_t v35 = a1;
    sub_1BDF8BF34((uint64_t)a1 + v25, (uint64_t)v19);
    uint64_t v34 = v24;
    uint64_t v26 = *(int *)(v24 + 20);
    uint64_t v36 = a2;
    sub_1BDF8BF34((uint64_t)a2 + v26, (uint64_t)v17);
    uint64_t v27 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_1BDF8BF34((uint64_t)v19, (uint64_t)v10);
    sub_1BDF8BF34((uint64_t)v17, v27);
    char v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v28((uint64_t)v10, 1, v4) == 1)
    {
      sub_1BDF8686C((uint64_t)v17, &qword_1EB678020);
      sub_1BDF8686C((uint64_t)v19, &qword_1EB678020);
      if (v28(v27, 1, v4) == 1)
      {
        sub_1BDF8686C((uint64_t)v10, &qword_1EB678020);
LABEL_17:
        char v23 = *((unsigned char *)v35 + *(int *)(v34 + 24)) ^ *((unsigned char *)v36 + *(int *)(v34 + 24)) ^ 1;
        return v23 & 1;
      }
      goto LABEL_13;
    }
    sub_1BDF8BF34((uint64_t)v10, (uint64_t)v14);
    if (v28(v27, 1, v4) == 1)
    {
      sub_1BDF8686C((uint64_t)v17, &qword_1EB678020);
      sub_1BDF8686C((uint64_t)v19, &qword_1EB678020);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_13:
      sub_1BDF8686C((uint64_t)v10, &qword_1EA0E2E98);
      goto LABEL_14;
    }
    char v30 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v33, v27, v4);
    sub_1BE01491C((unint64_t *)&qword_1EA0E2EA0, MEMORY[0x1E4F276F0]);
    char v31 = sub_1BE070440();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v5 + 8);
    v32(v30, v4);
    sub_1BDF8686C((uint64_t)v17, &qword_1EB678020);
    sub_1BDF8686C((uint64_t)v19, &qword_1EB678020);
    v32(v14, v4);
    sub_1BDF8686C((uint64_t)v10, &qword_1EB678020);
    if (v31) {
      goto LABEL_17;
    }
LABEL_14:
    char v23 = 0;
  }
  return v23 & 1;
}

BOOL _s13CalendarUIKit33EventVirtualConferenceModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2E98);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v95 = (uint64_t)&v80 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v80 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  char v22 = (char *)&v80 - v21;
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = *(void *)(a1 + 8);
  uint64_t v29 = *(void *)(a2 + 8);
  if (!v28)
  {
    uint64_t v91 = v26;
    uint64_t v92 = v27;
    uint64_t v93 = v8;
    uint64_t v94 = (uint64_t)&v80 - v25;
    if (v29) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v29) {
    return 0;
  }
  uint64_t v91 = v26;
  uint64_t v92 = v27;
  uint64_t v93 = v8;
  uint64_t v94 = (uint64_t)&v80 - v25;
  if (*(void *)a1 == *(void *)a2 && v28 == v29 || (v30 = sub_1BE070EF0(), BOOL result = 0, (v30 & 1) != 0))
  {
LABEL_8:
    v90 = v19;
    uint64_t v32 = *(void *)(a2 + 16);
    if (*(void *)(a1 + 16))
    {
      if (!v32) {
        return 0;
      }
      v89 = v22;
      uint64_t v33 = v16;
      uint64_t v34 = v7;
      uint64_t v35 = v11;
      uint64_t v36 = v5;
      uint64_t v37 = v4;
      swift_bridgeObjectRetain();
      uint64_t v38 = swift_bridgeObjectRetain();
      char v39 = sub_1BE057374(v38, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v39 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      v89 = v22;
      uint64_t v33 = v16;
      uint64_t v34 = v7;
      uint64_t v35 = v11;
      uint64_t v36 = v5;
      uint64_t v37 = v4;
      if (v32) {
        return 0;
      }
    }
    uint64_t v40 = *(void *)(a1 + 32);
    uint64_t v41 = *(void *)(a2 + 32);
    if (v40)
    {
      uint64_t v42 = (uint64_t)v90;
      if (!v41) {
        return 0;
      }
      uint64_t v43 = v37;
      uint64_t v44 = v36;
      uint64_t v45 = (uint64_t)v35;
      uint64_t v46 = v34;
      uint64_t v47 = (uint64_t)v33;
      uint64_t v48 = v89;
      if (*(void *)(a1 + 24) != *(void *)(a2 + 24) || v40 != v41)
      {
        char v49 = sub_1BE070EF0();
        BOOL result = 0;
        if ((v49 & 1) == 0) {
          return result;
        }
      }
    }
    else
    {
      uint64_t v43 = v37;
      uint64_t v44 = v36;
      uint64_t v45 = (uint64_t)v35;
      uint64_t v46 = v34;
      uint64_t v47 = (uint64_t)v33;
      uint64_t v48 = v89;
      uint64_t v42 = (uint64_t)v90;
      if (v41) {
        return 0;
      }
    }
    uint64_t v50 = *(void *)(a1 + 48);
    uint64_t v51 = *(void *)(a2 + 48);
    if (v50)
    {
      if (!v51) {
        return 0;
      }
      if (*(void *)(a1 + 40) != *(void *)(a2 + 40) || v50 != v51)
      {
        char v52 = sub_1BE070EF0();
        BOOL result = 0;
        if ((v52 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v51)
    {
      return 0;
    }
    if (*(unsigned __int8 *)(a1 + 56) != *(unsigned __int8 *)(a2 + 56) || *(void *)(a1 + 64) != *(void *)(a2 + 64)) {
      return 0;
    }
    v89 = v48;
    uint64_t v83 = v47;
    uint64_t v85 = v45;
    uint64_t v53 = type metadata accessor for EventVirtualConferenceModelObject(0);
    uint64_t v54 = v94;
    sub_1BDF8BF34(a1 + *(int *)(v53 + 40), v94);
    uint64_t v84 = v53;
    uint64_t v55 = a2 + *(int *)(v53 + 40);
    uint64_t v56 = v92;
    sub_1BDF8BF34(v55, v92);
    uint64_t v57 = v95;
    uint64_t v58 = v95 + *(int *)(v93 + 48);
    sub_1BDF8BF34(v54, v95);
    uint64_t v87 = v58;
    sub_1BDF8BF34(v56, v58);
    uint64_t v59 = v43;
    uint64_t v86 = v44;
    uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t))(v44 + 48);
    uint64_t v88 = v59;
    if (v60(v57, 1) == 1)
    {
      long long v82 = v46;
      sub_1BDF8686C(v56, &qword_1EB678020);
      sub_1BDF8686C(v54, &qword_1EB678020);
      uint64_t v61 = v88;
      int v62 = v60(v87, 1);
      uint64_t v63 = (uint64_t)v89;
      if (v62 == 1)
      {
        sub_1BDF8686C(v95, &qword_1EB678020);
LABEL_36:
        uint64_t v71 = v84;
        sub_1BDF8BF34(a1 + *(int *)(v84 + 44), v63);
        sub_1BDF8BF34(a2 + *(int *)(v71 + 44), v42);
        uint64_t v72 = v85;
        uint64_t v73 = v85 + *(int *)(v93 + 48);
        sub_1BDF8BF34(v63, v85);
        sub_1BDF8BF34(v42, v73);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v60)(v72, 1, v61) == 1)
        {
          sub_1BDF8686C(v42, &qword_1EB678020);
          sub_1BDF8686C(v63, &qword_1EB678020);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v60)(v73, 1, v61) == 1)
          {
            sub_1BDF8686C(v72, &qword_1EB678020);
            return 1;
          }
          goto LABEL_41;
        }
        uint64_t v74 = v83;
        sub_1BDF8BF34(v72, v83);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v60)(v73, 1, v61) == 1)
        {
          sub_1BDF8686C(v42, &qword_1EB678020);
          sub_1BDF8686C(v63, &qword_1EB678020);
          (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v74, v61);
LABEL_41:
          uint64_t v67 = v72;
          goto LABEL_42;
        }
        uint64_t v75 = v86;
        uint64_t v76 = v63;
        uint64_t v77 = v82;
        (*(void (**)(char *, uint64_t, uint64_t))(v86 + 32))(v82, v73, v61);
        sub_1BE01491C((unint64_t *)&qword_1EA0E2EA0, MEMORY[0x1E4F276F0]);
        char v78 = sub_1BE070440();
        long long v79 = *(void (**)(char *, uint64_t))(v75 + 8);
        v79(v77, v61);
        sub_1BDF8686C(v42, &qword_1EB678020);
        sub_1BDF8686C(v76, &qword_1EB678020);
        v79((char *)v74, v61);
        sub_1BDF8686C(v72, &qword_1EB678020);
        return (v78 & 1) != 0;
      }
    }
    else
    {
      uint64_t v64 = v91;
      sub_1BDF8BF34(v95, v91);
      uint64_t v65 = v87;
      uint64_t v61 = v88;
      int v66 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v60)(v87, 1, v88);
      uint64_t v63 = (uint64_t)v89;
      if (v66 != 1)
      {
        long long v81 = v60;
        uint64_t v68 = v86;
        (*(void (**)(char *, uint64_t, uint64_t))(v86 + 32))(v46, v65, v61);
        sub_1BE01491C((unint64_t *)&qword_1EA0E2EA0, MEMORY[0x1E4F276F0]);
        LODWORD(v87) = sub_1BE070440();
        uint64_t v69 = v68;
        uint64_t v60 = v81;
        uint64_t v70 = *(void (**)(char *, uint64_t))(v69 + 8);
        long long v82 = v46;
        v70(v46, v61);
        sub_1BDF8686C(v56, &qword_1EB678020);
        sub_1BDF8686C(v94, &qword_1EB678020);
        v70((char *)v64, v61);
        uint64_t v42 = (uint64_t)v90;
        sub_1BDF8686C(v95, &qword_1EB678020);
        if ((v87 & 1) == 0) {
          return 0;
        }
        goto LABEL_36;
      }
      sub_1BDF8686C(v56, &qword_1EB678020);
      sub_1BDF8686C(v94, &qword_1EB678020);
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v64, v61);
    }
    uint64_t v67 = v95;
LABEL_42:
    sub_1BDF8686C(v67, &qword_1EA0E2E98);
    return 0;
  }
  return result;
}

unint64_t sub_1BE0148C8()
{
  unint64_t result = qword_1EA0E4460;
  if (!qword_1EA0E4460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4460);
  }
  return result;
}

uint64_t sub_1BE01491C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BE014964(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4468);
    sub_1BE01491C(a2, (void (*)(uint64_t))type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BE0149F8()
{
  unint64_t result = qword_1EA0E44B0;
  if (!qword_1EA0E44B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E44B0);
  }
  return result;
}

_UNKNOWN **sub_1BE014A4C()
{
  return &protocol witness table for EventVirtualConferenceJoinMethodModelObject;
}

uint64_t sub_1BE014A58()
{
  return sub_1BE01491C(&qword_1EA0E44C0, (void (*)(uint64_t))type metadata accessor for EventVirtualConferenceModelObject);
}

uint64_t sub_1BE014AA0()
{
  return sub_1BE01491C(&qword_1EA0E44C8, (void (*)(uint64_t))type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
}

void *initializeBufferWithCopyOfBuffer for EventVirtualConferenceModelObject(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[6];
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 64) = a2[8];
    uint64_t v11 = *(int *)(a3 + 40);
    char v22 = (char *)a2 + v11;
    __dst = (void *)(a1 + v11);
    *(void *)(a1 + 48) = v10;
    uint64_t v12 = sub_1BE06EE10();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v22, 1, v12))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(__dst, v22, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 16))(__dst, v22, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = *(int *)(a3 + 44);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v14(v19, 1, v12))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t destroy for EventVirtualConferenceModelObject(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1BE06EE10();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 44);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

uint64_t initializeWithCopy for EventVirtualConferenceModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v9 = *(int *)(a3 + 40);
  __dst = (void *)(a1 + v9);
  uint64_t v10 = (const void *)(a2 + v9);
  *(void *)(a1 + 48) = v8;
  uint64_t v11 = sub_1BE06EE10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v15 = v12;
  uint64_t v16 = *(int *)(a3 + 44);
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  if (v13(v18, 1, v11))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v17, v18, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for EventVirtualConferenceModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v6 = *(int *)(a3 + 40);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1BE06EE10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 44);
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  int v18 = v11((void *)(a1 + v15), 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for EventVirtualConferenceModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v10 = sub_1BE06EE10();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 44);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (const void *)(a2 + v14);
  if (v12(v16, 1, v10))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for EventVirtualConferenceModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v9 = *(int *)(a3 + 40);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1BE06EE10();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 44);
  int v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  int v21 = v14((void *)(a1 + v18), 1, v12);
  int v22 = v14(v20, 1, v12);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 40))(v19, v20, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 32))(v19, v20, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventVirtualConferenceModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BE01589C);
}

uint64_t sub_1BE01589C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 40);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for EventVirtualConferenceModelObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BE015970);
}

uint64_t sub_1BE015970(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 40);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1BE015A1C()
{
  sub_1BDF92F60();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *initializeBufferWithCopyOfBuffer for EventVirtualConferenceJoinMethodModelObject(void *a1, void *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1BE06EE10();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t destroy for EventVirtualConferenceJoinMethodModelObject(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1BE06EE10();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for EventVirtualConferenceJoinMethodModelObject(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1BE06EE10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithCopy for EventVirtualConferenceJoinMethodModelObject(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BE06EE10();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *initializeWithTake for EventVirtualConferenceJoinMethodModelObject(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1BE06EE10();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for EventVirtualConferenceJoinMethodModelObject(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1BE06EE10();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for EventVirtualConferenceJoinMethodModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BE016304);
}

uint64_t sub_1BE016304(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for EventVirtualConferenceJoinMethodModelObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BE0163D8);
}

uint64_t sub_1BE0163D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1BE016484()
{
  sub_1BDF92F60();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for EventVirtualConferenceJoinMethodModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE0165F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventVirtualConferenceJoinMethodModelObject.CodingKeys()
{
  return &type metadata for EventVirtualConferenceJoinMethodModelObject.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for EventVirtualConferenceModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE0166F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventVirtualConferenceModelObject.CodingKeys()
{
  return &type metadata for EventVirtualConferenceModelObject.CodingKeys;
}

unint64_t sub_1BE016730()
{
  unint64_t result = qword_1EA0E44E0;
  if (!qword_1EA0E44E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E44E0);
  }
  return result;
}

unint64_t sub_1BE016788()
{
  unint64_t result = qword_1EA0E44E8;
  if (!qword_1EA0E44E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E44E8);
  }
  return result;
}

unint64_t sub_1BE0167E0()
{
  unint64_t result = qword_1EA0E44F0;
  if (!qword_1EA0E44F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E44F0);
  }
  return result;
}

unint64_t sub_1BE016838()
{
  unint64_t result = qword_1EA0E44F8;
  if (!qword_1EA0E44F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E44F8);
  }
  return result;
}

unint64_t sub_1BE016890()
{
  unint64_t result = qword_1EA0E4500;
  if (!qword_1EA0E4500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4500);
  }
  return result;
}

unint64_t sub_1BE0168E8()
{
  unint64_t result = qword_1EA0E4508;
  if (!qword_1EA0E4508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4508);
  }
  return result;
}

uint64_t sub_1BE01693C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874654D6E696F6ALL && a2 == 0xEB0000000073646FLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BE08D920 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BE08D630 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6261746972577369 && a2 == 0xEA0000000000656CLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BE08D650 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BE08D670)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1BE016C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE016CDC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 176);
}

uint64_t sub_1BE016CE4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a23)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v25 = a3;
    swift_bridgeObjectRetain();
    sub_1BDF9D478(a9, a10);
    return sub_1BDFE86FC(a12, a13, a14);
  }
}

uint64_t sub_1BE016E40(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 176);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    v4);
  return a1;
}

uint64_t sub_1BE016EB4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (a23)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BDF859DC(a9, a10);
    return sub_1BDFE8808(a12, a13, a14);
  }
}

BOOL EventSourceModel.isIntegrationSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))() == 6;
}

uint64_t dispatch thunk of EventSourceModel.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventSourceModel.appGroupID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventSourceModel.sourceType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventSourceModel.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EventSourceModel.isDelegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EventSourceModel.isManaged.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EventSourceModel.isWritable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EventSourceModel.isPrimaryLocalSource.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EventSourceModel.ownerAddresses.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EventSourceModel.preferredEventPrivateValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of EventSourceModel.defaultAlarmOffset.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of EventSourceModel.defaultAllDayAlarmOffset.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

BOOL EventSourceConstraintsModel.supportsMultipleAlarms.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))() != 0;
}

uint64_t dispatch thunk of EventSourceConstraintsModel.maxAlarmsAllowed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.requiresOutgoingInvitationsInDefaultCalendar.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.eventDurationConstrainedToRecurrenceInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.occurrencesMustOccurOnSeparateDays.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.supportsPrivateEvents.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.supportsAlarmTriggerDates.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.supportsMultipleAlarms.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.requiresOccurrencesConformToRecurrenceRule.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.supportsURLField.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.supportsFloatingTimeZone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.prohibitsMultipleDaysInMonthlyRecurrence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.prohibitsMultipleMonthsInYearlyRecurrence.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.prohibitsYearlyRecurrenceInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.canSetAvailability.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.eventAvailabilityLimited.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of EventSourceConstraintsModel.supportsStructuredLocations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

BOOL sub_1BE0172EC()
{
  return objc_msgSend(*v0, sel_maxAlarmsAllowed) != 0;
}

uint64_t EventRecurrenceRuleModelObject.init(recurrenceEnd:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:daysOfTheYear:weeksOfTheYear:monthsOfTheYear:setPositions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14 = type metadata accessor for EventRecurrenceEndModelObject(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a9, 1, 1, v14);
  uint64_t v15 = (int *)type metadata accessor for EventRecurrenceRuleModelObject(0);
  uint64_t v16 = a9 + v15[7];
  *(void *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 8) = 1;
  uint64_t v17 = v15[8];
  *(void *)(a9 + v17) = 0;
  uint64_t v18 = v15[9];
  *(void *)(a9 + v18) = 0;
  uint64_t v19 = v15[10];
  *(void *)(a9 + v19) = 0;
  uint64_t v20 = v15[11];
  *(void *)(a9 + v20) = 0;
  uint64_t v21 = v15[12];
  *(void *)(a9 + v21) = 0;
  uint64_t v22 = v15[13];
  *(void *)(a9 + v22) = 0;
  sub_1BDFF85F8(a1, a9, &qword_1EA0E3E70);
  *(void *)(a9 + v15[5]) = a2;
  *(void *)(a9 + v15[6]) = a3;
  *(void *)uint64_t v16 = a4;
  *(unsigned char *)(v16 + 8) = a5 & 1;
  swift_bridgeObjectRelease();
  *(void *)(a9 + v17) = a6;
  swift_bridgeObjectRelease();
  *(void *)(a9 + v18) = a7;
  swift_bridgeObjectRelease();
  *(void *)(a9 + v19) = a8;
  swift_bridgeObjectRelease();
  *(void *)(a9 + v20) = a10;
  swift_bridgeObjectRelease();
  *(void *)(a9 + v21) = a11;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a9 + v22) = a12;
  return result;
}

uint64_t type metadata accessor for EventRecurrenceEndModelObject(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E1970);
}

uint64_t type metadata accessor for EventRecurrenceRuleModelObject(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E1988);
}

uint64_t EventRecurrenceRuleModelObject.recurrenceEnd.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDF86808(v1, a1, &qword_1EA0E3E70);
}

uint64_t EventRecurrenceRuleModelObject.recurrenceEnd.setter(uint64_t a1)
{
  return sub_1BDFF85F8(a1, v1, &qword_1EA0E3E70);
}

uint64_t (*EventRecurrenceRuleModelObject.recurrenceEnd.modify())()
{
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.frequency.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 20));
}

uint64_t EventRecurrenceRuleModelObject.frequency.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for EventRecurrenceRuleModelObject(0);
  *(void *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.frequency.modify())(void)
{
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.interval.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 24));
}

uint64_t EventRecurrenceRuleModelObject.interval.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for EventRecurrenceRuleModelObject(0);
  *(void *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.interval.modify())(void)
{
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.firstDayOfTheWeek.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 28));
}

uint64_t EventRecurrenceRuleModelObject.firstDayOfTheWeek.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for EventRecurrenceRuleModelObject(0);
  uint64_t v6 = v2 + *(int *)(result + 28);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.firstDayOfTheWeek.modify())(void)
{
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.daysOfTheWeek.getter()
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);

  return swift_bridgeObjectRetain();
}

uint64_t EventRecurrenceRuleModelObject.daysOfTheWeek.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.daysOfTheWeek.modify())(void)
{
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.daysOfTheMonth.getter()
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);

  return swift_bridgeObjectRetain();
}

uint64_t EventRecurrenceRuleModelObject.daysOfTheMonth.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.daysOfTheMonth.modify())(void)
{
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.daysOfTheYear.getter()
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);

  return swift_bridgeObjectRetain();
}

uint64_t EventRecurrenceRuleModelObject.daysOfTheYear.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 40);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.daysOfTheYear.modify())(void)
{
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.weeksOfTheYear.getter()
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);

  return swift_bridgeObjectRetain();
}

uint64_t EventRecurrenceRuleModelObject.weeksOfTheYear.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 44);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.weeksOfTheYear.modify())(void)
{
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.monthsOfTheYear.getter()
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);

  return swift_bridgeObjectRetain();
}

uint64_t EventRecurrenceRuleModelObject.monthsOfTheYear.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 48);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.monthsOfTheYear.modify())(void)
{
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.setPositions.getter()
{
  type metadata accessor for EventRecurrenceRuleModelObject(0);

  return swift_bridgeObjectRetain();
}

uint64_t EventRecurrenceRuleModelObject.setPositions.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for EventRecurrenceRuleModelObject(0) + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventRecurrenceRuleModelObject.setPositions.modify())(void)
{
  return nullsub_1;
}

uint64_t EventRecurrenceRuleModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v86 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for EventRecurrenceEndModelObject(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v87 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
  MEMORY[0x1F4188790](v8 - 8);
  v90 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for EventRecurrenceRuleModelObject(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v92 = v5;
  uint64_t v91 = v6 + 56;
  v89 = v13;
  v13(v12, 1, 1, v5);
  uint64_t v14 = &v12[v10[7]];
  *(void *)uint64_t v14 = 0;
  uint64_t v93 = (uint64_t *)v14;
  v14[8] = 1;
  uint64_t v95 = v10[8];
  *(void *)&v12[v95] = 0;
  uint64_t v96 = v10[9];
  *(void *)&v12[v96] = 0;
  uint64_t v97 = v10[10];
  *(void *)&v12[v97] = 0;
  uint64_t v98 = v10[11];
  *(void *)&v12[v98] = 0;
  uint64_t v99 = v10[12];
  *(void *)&v12[v99] = 0;
  uint64_t v94 = (uint64_t)v10;
  uint64_t v100 = v10[13];
  *(void *)&v12[v100] = 0;
  uint64_t v16 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v15 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = sub_1BE0709E0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v85 - v20;
  v88(v16, v15);
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v21, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    uint64_t AssociatedConformanceWitness = 0;
    long long v109 = 0u;
    long long v110 = 0u;
  }
  else
  {
    *((void *)&v110 + 1) = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v109);
    (*(void (**)(uint64_t *, char *, uint64_t))(v22 + 32))(boxed_opaque_existential_1, v21, AssociatedTypeWitness);
  }
  sub_1BDF86808((uint64_t)&v109, (uint64_t)&v106, &qword_1EA0E4598);
  uint64_t v24 = (uint64_t)v90;
  if (v107)
  {
    sub_1BDFBEF38(&v106, (uint64_t)v105);
    sub_1BDFC3C28((uint64_t)v105, (uint64_t)v102);
    uint64_t v25 = sub_1BE06EEE0();
    uint64_t v26 = (uint64_t)v87;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v87, 1, 1, v25);
    uint64_t v27 = v103;
    uint64_t v28 = v104;
    __swift_project_boxed_opaque_existential_1(v102, v103);
    uint64_t v29 = (uint64_t)v86;
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
    sub_1BDFF85F8(v29, v26, &qword_1EB677CC0);
    uint64_t v30 = v103;
    uint64_t v31 = v104;
    __swift_project_boxed_opaque_existential_1(v102, v103);
    uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
    uint64_t v33 = v92;
    *(void *)(v26 + *(int *)(v92 + 20)) = v32;
    sub_1BE01BD30(v26, v24, type metadata accessor for EventRecurrenceEndModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v102);
    sub_1BE01BD98(v26, type metadata accessor for EventRecurrenceEndModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v105);
    uint64_t v34 = (char *)v24;
    uint64_t v35 = 0;
    uint64_t v36 = v33;
  }
  else
  {
    uint64_t v34 = v90;
    uint64_t v35 = 1;
    uint64_t v36 = v92;
  }
  v89(v34, v35, 1, v36);
  sub_1BDF8686C((uint64_t)&v109, &qword_1EA0E4598);
  sub_1BDFF85F8(v24, (uint64_t)v12, &qword_1EA0E3E70);
  uint64_t v37 = a1[3];
  uint64_t v38 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v37);
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 48))(v37, v38);
  uint64_t v40 = v94;
  *(void *)&v12[*(int *)(v94 + 20)] = v39;
  uint64_t v41 = a1[3];
  uint64_t v42 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v41);
  *(void *)&v12[*(int *)(v40 + 24)] = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 56))(v41, v42);
  uint64_t v43 = a1[3];
  uint64_t v44 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v43);
  uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 64))(v43, v44);
  uint64_t v46 = v93;
  *uint64_t v93 = v45;
  *((unsigned char *)v46 + 8) = v47 & 1;
  uint64_t v48 = a1[3];
  uint64_t v49 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v48);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v49 + 72))(v48, v49))
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E45A0);
    uint64_t v50 = sub_1BE070C70();
    swift_bridgeObjectRelease();
    int64_t v51 = *(void *)(v50 + 16);
    if (v51)
    {
      v105[0] = MEMORY[0x1E4FBC860];
      sub_1BDFF4AAC(0, v51, 0);
      uint64_t v94 = v50;
      uint64_t v52 = v50 + 32;
      uint64_t v53 = v105[0];
      do
      {
        sub_1BDFC3C28(v52, (uint64_t)&v109);
        sub_1BDFC3C28((uint64_t)&v109, (uint64_t)&v106);
        uint64_t v54 = v107;
        uint64_t v55 = v108;
        __swift_project_boxed_opaque_existential_1(&v106, v107);
        uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 8))(v54, v55);
        uint64_t v57 = v107;
        uint64_t v58 = v108;
        __swift_project_boxed_opaque_existential_1(&v106, v107);
        uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 16))(v57, v58);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v106);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v109);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDFF4AAC(0, *(void *)(v53 + 16) + 1, 1);
          uint64_t v53 = v105[0];
        }
        unint64_t v61 = *(void *)(v53 + 16);
        unint64_t v60 = *(void *)(v53 + 24);
        if (v61 >= v60 >> 1)
        {
          sub_1BDFF4AAC(v60 > 1, v61 + 1, 1);
          uint64_t v53 = v105[0];
        }
        *(void *)(v53 + 16) = v61 + 1;
        uint64_t v62 = v53 + 16 * v61;
        *(void *)(v62 + 32) = v56;
        *(void *)(v62 + 40) = v59;
        v52 += 40;
        --v51;
      }
      while (v51);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v53 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v53 = 0;
  }
  uint64_t v63 = v95;
  swift_bridgeObjectRelease();
  *(void *)&v12[v63] = v53;
  uint64_t v64 = a1[3];
  uint64_t v65 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v64);
  uint64_t v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 80))(v64, v65);
  uint64_t v67 = v96;
  swift_bridgeObjectRelease();
  *(void *)&v12[v67] = v66;
  uint64_t v68 = a1[3];
  uint64_t v69 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v68);
  uint64_t v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 88))(v68, v69);
  uint64_t v71 = v97;
  swift_bridgeObjectRelease();
  *(void *)&v12[v71] = v70;
  uint64_t v72 = a1[3];
  uint64_t v73 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v72);
  uint64_t v74 = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 96))(v72, v73);
  uint64_t v75 = v98;
  swift_bridgeObjectRelease();
  *(void *)&v12[v75] = v74;
  uint64_t v76 = a1[3];
  uint64_t v77 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v76);
  uint64_t v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 104))(v76, v77);
  uint64_t v79 = v99;
  swift_bridgeObjectRelease();
  *(void *)&v12[v79] = v78;
  uint64_t v80 = a1[3];
  uint64_t v81 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v80);
  uint64_t v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v81 + 112))(v80, v81);
  uint64_t v83 = v100;
  swift_bridgeObjectRelease();
  *(void *)&v12[v83] = v82;
  sub_1BE01BD30((uint64_t)v12, v101, type metadata accessor for EventRecurrenceRuleModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BE01BD98((uint64_t)v12, type metadata accessor for EventRecurrenceRuleModelObject);
}

uint64_t EventRecurrenceEndModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EventRecurrenceEndModelObject(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1BE06EEE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  sub_1BDFF85F8((uint64_t)v6, (uint64_t)v10, &qword_1EB677CC0);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  *(void *)&v10[*(int *)(v8 + 28)] = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  sub_1BE01BD30((uint64_t)v10, a2, type metadata accessor for EventRecurrenceEndModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BE01BD98((uint64_t)v10, type metadata accessor for EventRecurrenceEndModelObject);
}

uint64_t EventRecurrenceDayOfWeekModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  *a2 = v6;
  a2[1] = v9;

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t EventRecurrenceRuleModelObject.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1BE06EEE0();
  uint64_t v37 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for EventRecurrenceEndModelObject(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDF86808(v1, (uint64_t)v14, &qword_1EA0E3E70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    sub_1BE01BDF8((uint64_t)v14, (uint64_t)v11);
    sub_1BE070FD0();
    sub_1BDF86808((uint64_t)v11, (uint64_t)v7, &qword_1EB677CC0);
    uint64_t v15 = v37;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v7, 1, v2) == 1)
    {
      sub_1BE070FD0();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v4, v7, v2);
      sub_1BE070FD0();
      sub_1BE01C744(&qword_1EA0E10E0, MEMORY[0x1E4F27928]);
      sub_1BE070410();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v4, v2);
    }
    sub_1BE070FC0();
    sub_1BE01BD98((uint64_t)v11, type metadata accessor for EventRecurrenceEndModelObject);
  }
  uint64_t v16 = (int *)type metadata accessor for EventRecurrenceRuleModelObject(0);
  sub_1BE070FC0();
  sub_1BE070FC0();
  if (*(unsigned char *)(v1 + v16[7] + 8))
  {
    sub_1BE070FD0();
  }
  else
  {
    sub_1BE070FD0();
    sub_1BE070FC0();
  }
  uint64_t v17 = *(void *)(v1 + v16[8]);
  if (v17)
  {
    sub_1BE070FD0();
    sub_1BE070FC0();
    uint64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = v17 + 40;
      do
      {
        sub_1BE070FC0();
        sub_1BE070FC0();
        v19 += 16;
        --v18;
      }
      while (v18);
    }
  }
  else
  {
    sub_1BE070FD0();
  }
  uint64_t v20 = *(void *)(v1 + v16[9]);
  if (v20)
  {
    sub_1BE070FD0();
    sub_1BE070FC0();
    uint64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      uint64_t v22 = v20 + 32;
      do
      {
        v22 += 8;
        sub_1BE070FC0();
        --v21;
      }
      while (v21);
    }
  }
  else
  {
    sub_1BE070FD0();
  }
  uint64_t v23 = *(void *)(v1 + v16[10]);
  if (v23)
  {
    sub_1BE070FD0();
    sub_1BE070FC0();
    uint64_t v24 = *(void *)(v23 + 16);
    if (v24)
    {
      uint64_t v25 = v23 + 32;
      do
      {
        v25 += 8;
        sub_1BE070FC0();
        --v24;
      }
      while (v24);
    }
  }
  else
  {
    sub_1BE070FD0();
  }
  uint64_t v26 = *(void *)(v1 + v16[11]);
  if (v26)
  {
    sub_1BE070FD0();
    sub_1BE070FC0();
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      uint64_t v28 = v26 + 32;
      do
      {
        v28 += 8;
        sub_1BE070FC0();
        --v27;
      }
      while (v27);
    }
  }
  else
  {
    sub_1BE070FD0();
  }
  uint64_t v29 = *(void *)(v1 + v16[12]);
  if (v29)
  {
    sub_1BE070FD0();
    sub_1BE070FC0();
    uint64_t v30 = *(void *)(v29 + 16);
    if (v30)
    {
      uint64_t v31 = v29 + 32;
      do
      {
        v31 += 8;
        sub_1BE070FC0();
        --v30;
      }
      while (v30);
    }
  }
  else
  {
    sub_1BE070FD0();
  }
  uint64_t v32 = *(void *)(v1 + v16[13]);
  if (!v32) {
    return sub_1BE070FD0();
  }
  sub_1BE070FD0();
  uint64_t result = sub_1BE070FC0();
  uint64_t v34 = *(void *)(v32 + 16);
  if (v34)
  {
    uint64_t v35 = v32 + 32;
    do
    {
      v35 += 8;
      uint64_t result = sub_1BE070FC0();
      --v34;
    }
    while (v34);
  }
  return result;
}

uint64_t EventRecurrenceRuleModelObject.hashValue.getter()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE018E34@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDF86808(v1, a1, &qword_1EA0E3E70);
}

uint64_t sub_1BE018E5C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_1BE018E68(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 28));
}

uint64_t sub_1BE018E7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE018E88()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE018E94()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE018EA0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE018EAC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE018EB8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE018EC4()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE018F08()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE018F48(uint64_t a1)
{
  return sub_1BE018F94(a1, qword_1EA0E4520, 0, 1);
}

uint64_t static EventRecurrenceRuleModelObject.daily.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE01917C(&qword_1EA0E2240, (uint64_t)qword_1EA0E4520, a1);
}

uint64_t sub_1BE018F80(uint64_t a1)
{
  return sub_1BE018F94(a1, qword_1EA0E4538, 1, 1);
}

uint64_t sub_1BE018F94(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  __swift_allocate_value_buffer(v10, a2);
  uint64_t v11 = __swift_project_value_buffer(v10, (uint64_t)a2);
  uint64_t v12 = type metadata accessor for EventRecurrenceEndModelObject(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v9, 1, 1, v12);
  return EventRecurrenceRuleModelObject.init(recurrenceEnd:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:daysOfTheYear:weeksOfTheYear:monthsOfTheYear:setPositions:)((uint64_t)v9, a3, a4, 0, 1, 0, 0, 0, v11, 0, 0, 0);
}

uint64_t static EventRecurrenceRuleModelObject.weekly.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE01917C(&qword_1EA0E2248, (uint64_t)qword_1EA0E4538, a1);
}

uint64_t sub_1BE0190D4(uint64_t a1)
{
  return sub_1BE018F94(a1, qword_1EA0E4550, 1, 2);
}

uint64_t static EventRecurrenceRuleModelObject.biweekly.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE01917C(&qword_1EA0E2250, (uint64_t)qword_1EA0E4550, a1);
}

uint64_t sub_1BE01910C(uint64_t a1)
{
  return sub_1BE018F94(a1, qword_1EA0E4568, 2, 1);
}

uint64_t static EventRecurrenceRuleModelObject.monthly.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE01917C(&qword_1EA0E2258, (uint64_t)qword_1EA0E4568, a1);
}

uint64_t sub_1BE019144(uint64_t a1)
{
  return sub_1BE018F94(a1, qword_1EA0E4580, 3, 1);
}

uint64_t static EventRecurrenceRuleModelObject.yearly.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE01917C(&qword_1EA0E2260, (uint64_t)qword_1EA0E4580, a1);
}

uint64_t sub_1BE01917C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  return sub_1BE01BD30(v6, a3, type metadata accessor for EventRecurrenceRuleModelObject);
}

uint64_t EventRecurrenceRuleModelObject.isCustom.getter()
{
  uint64_t v1 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3DC8);
  uint64_t v5 = *(void *)(v2 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BE081780;
  uint64_t v8 = v7 + v6;
  if (qword_1EA0E2240 != -1) {
    goto LABEL_22;
  }
  while (1)
  {
    uint64_t v9 = __swift_project_value_buffer(v1, (uint64_t)qword_1EA0E4520);
    sub_1BE01BD30(v9, v8, type metadata accessor for EventRecurrenceRuleModelObject);
    if (qword_1EA0E2248 != -1) {
      swift_once();
    }
    uint64_t v10 = __swift_project_value_buffer(v1, (uint64_t)qword_1EA0E4538);
    sub_1BE01BD30(v10, v8 + v5, type metadata accessor for EventRecurrenceRuleModelObject);
    if (qword_1EA0E2250 != -1) {
      swift_once();
    }
    uint64_t v11 = __swift_project_value_buffer(v1, (uint64_t)qword_1EA0E4550);
    sub_1BE01BD30(v11, v8 + 2 * v5, type metadata accessor for EventRecurrenceRuleModelObject);
    if (qword_1EA0E2258 != -1) {
      swift_once();
    }
    uint64_t v12 = __swift_project_value_buffer(v1, (uint64_t)qword_1EA0E4568);
    sub_1BE01BD30(v12, v8 + 3 * v5, type metadata accessor for EventRecurrenceRuleModelObject);
    if (qword_1EA0E2260 != -1) {
      swift_once();
    }
    uint64_t v13 = __swift_project_value_buffer(v1, (uint64_t)qword_1EA0E4580);
    sub_1BE01BD30(v13, v8 + 4 * v5, type metadata accessor for EventRecurrenceRuleModelObject);
    uint64_t v14 = *(void *)(v7 + 16);
    if (!v14)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    sub_1BE01BD30(v8, (uint64_t)v4, type metadata accessor for EventRecurrenceRuleModelObject);
    uint64_t v8 = _s13CalendarUIKit30EventRecurrenceRuleModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v4, v0);
    swift_bridgeObjectRetain();
    sub_1BE01BD98((uint64_t)v4, type metadata accessor for EventRecurrenceRuleModelObject);
    if (v8)
    {
LABEL_12:
      swift_bridgeObjectRelease_n();
      return 0;
    }
    if (v14 == 1) {
      break;
    }
    uint64_t v1 = v7 + v5 + v6;
    unint64_t v6 = 1;
    while (1)
    {
      sub_1BE01BD30(v1, (uint64_t)v4, type metadata accessor for EventRecurrenceRuleModelObject);
      unint64_t v16 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        break;
      }
      uint64_t v8 = _s13CalendarUIKit30EventRecurrenceRuleModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v4, v0);
      sub_1BE01BD98((uint64_t)v4, type metadata accessor for EventRecurrenceRuleModelObject);
      if (v8) {
        goto LABEL_12;
      }
      ++v6;
      v1 += v5;
      if (v16 == v14) {
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_22:
    swift_once();
  }
LABEL_19:
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t EventRecurrenceDayOfWeekModelObject.dayOfTheWeek.getter()
{
  return *(void *)v0;
}

uint64_t EventRecurrenceDayOfWeekModelObject.dayOfTheWeek.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*EventRecurrenceDayOfWeekModelObject.dayOfTheWeek.modify())()
{
  return nullsub_1;
}

uint64_t EventRecurrenceDayOfWeekModelObject.weekNumber.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t EventRecurrenceDayOfWeekModelObject.weekNumber.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*EventRecurrenceDayOfWeekModelObject.weekNumber.modify())()
{
  return nullsub_1;
}

uint64_t EventRecurrenceDayOfWeekModelObject.init(dayOfTheWeek:weekNumber:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t EventRecurrenceDayOfWeekModelObject.hash(into:)()
{
  return sub_1BE070FC0();
}

BOOL static EventRecurrenceDayOfWeekModelObject.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t EventRecurrenceDayOfWeekModelObject.hashValue.getter()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE0196E8()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_1BE0196F0()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE01974C()
{
  return sub_1BE070FC0();
}

uint64_t sub_1BE019788()
{
  return sub_1BE070FF0();
}

BOOL sub_1BE0197E0(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t EventRecurrenceEndModelObject.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDF86808(v1, a1, &qword_1EB677CC0);
}

uint64_t EventRecurrenceEndModelObject.endDate.setter(uint64_t a1)
{
  return sub_1BDFF85F8(a1, v1, &qword_1EB677CC0);
}

uint64_t (*EventRecurrenceEndModelObject.endDate.modify())()
{
  return nullsub_1;
}

uint64_t EventRecurrenceEndModelObject.occurrenceCount.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventRecurrenceEndModelObject(0) + 20));
}

uint64_t EventRecurrenceEndModelObject.occurrenceCount.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for EventRecurrenceEndModelObject(0);
  *(void *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*EventRecurrenceEndModelObject.occurrenceCount.modify())(void)
{
  return nullsub_1;
}

uint64_t EventRecurrenceEndModelObject.init(endDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  sub_1BDFF85F8(a1, a2, &qword_1EB677CC0);
  uint64_t result = type metadata accessor for EventRecurrenceEndModelObject(0);
  *(void *)(a2 + *(int *)(result + 20)) = 0;
  return result;
}

uint64_t EventRecurrenceEndModelObject.init(occurrenceCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  v5(a2, 1, 1, v4);
  sub_1BDF8686C(a2, &qword_1EB677CC0);
  v5(a2, 1, 1, v4);
  uint64_t result = type metadata accessor for EventRecurrenceEndModelObject(0);
  *(void *)(a2 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t EventRecurrenceEndModelObject.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1BE06EEE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDF86808(v1, (uint64_t)v8, &qword_1EB677CC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1BE070FD0();
    sub_1BE01C744(&qword_1EA0E10E0, MEMORY[0x1E4F27928]);
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for EventRecurrenceEndModelObject(0);
  return sub_1BE070FC0();
}

uint64_t EventRecurrenceEndModelObject.hashValue.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1BE06EEE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE070FB0();
  sub_1BDF86808(v1, (uint64_t)v8, &qword_1EB677CC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1BE070FD0();
    sub_1BE01C744(&qword_1EA0E10E0, MEMORY[0x1E4F27928]);
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  type metadata accessor for EventRecurrenceEndModelObject(0);
  sub_1BE070FC0();
  return sub_1BE070FF0();
}

unint64_t sub_1BE019E28(char a1)
{
  unint64_t result = 0x6E65727275636572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x636E657571657266;
      break;
    case 2:
      unint64_t result = 0x6C61767265746E69;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
    case 5:
    case 6:
      unint64_t result = 0x6854664F73796164;
      break;
    case 7:
      unint64_t result = 0x54664F736B656577;
      break;
    case 8:
      unint64_t result = 0x664F7368746E6F6DLL;
      break;
    case 9:
      unint64_t result = 0x7469736F50746573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BE019F98@<X0>(uint64_t a1@<X8>)
{
  return sub_1BDF86808(v1, a1, &qword_1EB677CC0);
}

uint64_t sub_1BE019FC0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_1BE019FD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1BE06EEE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDF86808(v1, (uint64_t)v8, &qword_1EB677CC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1BE070FD0();
    sub_1BE01C744(&qword_1EA0E10E0, MEMORY[0x1E4F27928]);
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_1BE070FC0();
}

uint64_t sub_1BE01A1BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1BE06EEE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE070FB0();
  sub_1BDF86808(v1, (uint64_t)v8, &qword_1EB677CC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1BE070FD0();
    sub_1BE01C744(&qword_1EA0E10E0, MEMORY[0x1E4F27928]);
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1BE070FC0();
  return sub_1BE070FF0();
}

unint64_t sub_1BE01A3C0()
{
  return sub_1BE019E28(*v0);
}

uint64_t sub_1BE01A3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BE01EDD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BE01A3F0(uint64_t a1)
{
  unint64_t v2 = sub_1BE01C6F0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BE01A42C(uint64_t a1)
{
  unint64_t v2 = sub_1BE01C6F0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventRecurrenceRuleModelObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v32 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E45A8);
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for EventRecurrenceRuleModelObject(0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for EventRecurrenceEndModelObject(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = &v9[v7[7]];
  *(void *)uint64_t v11 = 0;
  v11[8] = 1;
  uint64_t v43 = v7[8];
  *(void *)&v9[v43] = 0;
  uint64_t v42 = v7[9];
  *(void *)&v9[v42] = 0;
  uint64_t v39 = v7[10];
  *(void *)&v9[v39] = 0;
  uint64_t v40 = v7[11];
  *(void *)&v9[v40] = 0;
  uint64_t v41 = v7[12];
  *(void *)&v9[v41] = 0;
  uint64_t v36 = v7[13];
  uint64_t v37 = a1;
  *(void *)&v9[v36] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE01C6F0();
  uint64_t v34 = v6;
  uint64_t v12 = v38;
  sub_1BE071010();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    sub_1BDF8686C((uint64_t)v9, &qword_1EA0E3E70);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v44) = 0;
    sub_1BE01C744(&qword_1EA0E45B8, (void (*)(uint64_t))type metadata accessor for EventRecurrenceEndModelObject);
    uint64_t v13 = (uint64_t)v32;
    sub_1BE070DA0();
    uint64_t v14 = v42;
    sub_1BDFF85F8(v13, (uint64_t)v9, &qword_1EA0E3E70);
    type metadata accessor for EKRecurrenceFrequency(0);
    char v46 = 1;
    sub_1BE01C744(&qword_1EA0E45C0, type metadata accessor for EKRecurrenceFrequency);
    sub_1BE070DF0();
    uint64_t v16 = v39;
    uint64_t v15 = v40;
    *(void *)&v9[v7[5]] = v44;
    LOBYTE(v44) = 2;
    *(void *)&v9[v7[6]] = sub_1BE070DE0();
    type metadata accessor for EKWeekday(0);
    char v46 = 3;
    sub_1BE01C744(&qword_1EA0E45C8, type metadata accessor for EKWeekday);
    sub_1BE070DA0();
    char v18 = v45;
    *(void *)uint64_t v11 = v44;
    v11[8] = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E45D0);
    char v46 = 4;
    sub_1BE01C7E0(&qword_1EA0E45D8, (void (*)(void))sub_1BE01C78C);
    sub_1BE070DA0();
    uint64_t v19 = v43;
    uint64_t v20 = v44;
    swift_bridgeObjectRelease();
    *(void *)&v9[v19] = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E45E8);
    char v46 = 5;
    sub_1BE01C8A4(&qword_1EA0E45F0);
    sub_1BE070DA0();
    uint64_t v21 = v44;
    swift_bridgeObjectRelease();
    *(void *)&v9[v14] = v21;
    char v46 = 6;
    sub_1BE070DA0();
    uint64_t v22 = v44;
    swift_bridgeObjectRelease();
    *(void *)&v9[v16] = v22;
    char v46 = 7;
    sub_1BE070DA0();
    uint64_t v23 = v44;
    swift_bridgeObjectRelease();
    *(void *)&v9[v15] = v23;
    char v46 = 8;
    sub_1BE070DA0();
    uint64_t v24 = v44;
    uint64_t v25 = v41;
    swift_bridgeObjectRelease();
    *(void *)&v9[v25] = v24;
    char v46 = 9;
    uint64_t v26 = v34;
    uint64_t v27 = v35;
    sub_1BE070DA0();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v26, v27);
    uint64_t v28 = v44;
    uint64_t v29 = v36;
    swift_bridgeObjectRelease();
    *(void *)&v9[v29] = v28;
    sub_1BE01BD30((uint64_t)v9, v31, type metadata accessor for EventRecurrenceRuleModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    return sub_1BE01BD98((uint64_t)v9, type metadata accessor for EventRecurrenceRuleModelObject);
  }
}

uint64_t EventRecurrenceRuleModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E45F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE01C6F0();
  sub_1BE071030();
  LOBYTE(v13) = 0;
  type metadata accessor for EventRecurrenceEndModelObject(0);
  sub_1BE01C744(&qword_1EA0E4600, (void (*)(uint64_t))type metadata accessor for EventRecurrenceEndModelObject);
  sub_1BE070E50();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for EventRecurrenceRuleModelObject(0);
    uint64_t v13 = *(void *)(v3 + v9[5]);
    char v15 = 1;
    type metadata accessor for EKRecurrenceFrequency(0);
    sub_1BE01C744(&qword_1EA0E4608, type metadata accessor for EKRecurrenceFrequency);
    sub_1BE070EB0();
    LOBYTE(v13) = 2;
    sub_1BE070E90();
    uint64_t v10 = (uint64_t *)(v3 + v9[7]);
    uint64_t v11 = *v10;
    LOBYTE(v10) = *((unsigned char *)v10 + 8);
    uint64_t v13 = v11;
    char v14 = (char)v10;
    char v15 = 3;
    type metadata accessor for EKWeekday(0);
    sub_1BE01C744(&qword_1EA0E4610, type metadata accessor for EKWeekday);
    sub_1BE070E50();
    uint64_t v13 = *(void *)(v3 + v9[8]);
    char v15 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E45D0);
    sub_1BE01C7E0(&qword_1EA0E4618, (void (*)(void))sub_1BE01C850);
    sub_1BE070E50();
    uint64_t v13 = *(void *)(v3 + v9[9]);
    char v15 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E45E8);
    sub_1BE01C8A4(&qword_1EA0E4628);
    sub_1BE070E50();
    uint64_t v13 = *(void *)(v3 + v9[10]);
    char v15 = 6;
    sub_1BE070E50();
    uint64_t v13 = *(void *)(v3 + v9[11]);
    char v15 = 7;
    sub_1BE070E50();
    uint64_t v13 = *(void *)(v3 + v9[12]);
    char v15 = 8;
    sub_1BE070E50();
    uint64_t v13 = *(void *)(v3 + v9[13]);
    char v15 = 9;
    sub_1BE070E50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BE01B02C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventRecurrenceRuleModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BE01B044(void *a1)
{
  return EventRecurrenceRuleModelObject.encode(to:)(a1);
}

uint64_t sub_1BE01B05C()
{
  if (*v0) {
    return 0x626D754E6B656577;
  }
  else {
    return 0x656854664F796164;
  }
}

uint64_t sub_1BE01B0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BE01F2C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BE01B0CC(uint64_t a1)
{
  unint64_t v2 = sub_1BE01C908();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BE01B108(uint64_t a1)
{
  unint64_t v2 = sub_1BE01C908();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventRecurrenceDayOfWeekModelObject.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4630);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE01C908();
  sub_1BE071010();
  if (!v2)
  {
    type metadata accessor for EKWeekday(0);
    v12[15] = 0;
    sub_1BE01C744(&qword_1EA0E45C8, type metadata accessor for EKWeekday);
    sub_1BE070DF0();
    uint64_t v9 = v13;
    v12[14] = 1;
    uint64_t v10 = sub_1BE070DE0();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t EventRecurrenceDayOfWeekModelObject.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4640);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE01C908();
  sub_1BE071030();
  uint64_t v13 = v8;
  char v12 = 0;
  type metadata accessor for EKWeekday(0);
  sub_1BE01C744(&qword_1EA0E4610, type metadata accessor for EKWeekday);
  sub_1BE070EB0();
  if (!v2)
  {
    char v11 = 1;
    sub_1BE070E90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BE01B4EC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return EventRecurrenceDayOfWeekModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BE01B504(void *a1)
{
  return EventRecurrenceDayOfWeekModelObject.encode(to:)(a1);
}

uint64_t sub_1BE01B51C()
{
  if (*v0) {
    return 0x6E6572727563636FLL;
  }
  else {
    return 0x65746144646E65;
  }
}

uint64_t sub_1BE01B564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BE01F3D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BE01B58C(uint64_t a1)
{
  unint64_t v2 = sub_1BE01C95C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BE01B5C8(uint64_t a1)
{
  unint64_t v2 = sub_1BE01C95C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventRecurrenceEndModelObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v23 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4648);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EventRecurrenceEndModelObject(0);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1BE06EEE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE01C95C();
  sub_1BE071010();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1BDF8686C((uint64_t)v11, &qword_1EB677CC0);
  }
  else
  {
    uint64_t v13 = v21;
    char v25 = 0;
    sub_1BE01C744(&qword_1EA0E36E8, MEMORY[0x1E4F27928]);
    uint64_t v14 = v22;
    sub_1BE070DA0();
    sub_1BDFF85F8(v23, (uint64_t)v11, &qword_1EB677CC0);
    char v24 = 1;
    uint64_t v16 = sub_1BE070D80();
    char v18 = v17;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
    if (v18) {
      uint64_t v19 = 0;
    }
    else {
      uint64_t v19 = v16;
    }
    *(void *)&v11[*(int *)(v9 + 20)] = v19;
    sub_1BE01BD30((uint64_t)v11, v20, type metadata accessor for EventRecurrenceEndModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1BE01BD98((uint64_t)v11, type metadata accessor for EventRecurrenceEndModelObject);
  }
}

uint64_t EventRecurrenceEndModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4658);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE01C95C();
  sub_1BE071030();
  v8[15] = 0;
  sub_1BE06EEE0();
  sub_1BE01C744(&qword_1EA0E10D8, MEMORY[0x1E4F27928]);
  sub_1BE070E50();
  if (!v1)
  {
    type metadata accessor for EventRecurrenceEndModelObject(0);
    v8[14] = 1;
    sub_1BE070E90();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BE01BAE0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventRecurrenceEndModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BE01BAF8(void *a1)
{
  return EventRecurrenceEndModelObject.encode(to:)(a1);
}

uint64_t sub_1BE01BB10()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BE01BBA0()
{
  return sub_1BE0706A0();
}

uint64_t sub_1BE01BC20()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BE01BCB0()
{
  return sub_1BE0706A0();
}

uint64_t sub_1BE01BD30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BE01BD98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BE01BDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventRecurrenceEndModelObject(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL _s13CalendarUIKit30EventRecurrenceRuleModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventRecurrenceEndModelObject(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v53 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E46D8);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  char v17 = (char *)&v52 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v52 - v18;
  uint64_t v54 = a1;
  sub_1BDF86808(a1, (uint64_t)&v52 - v18, &qword_1EA0E3E70);
  uint64_t v55 = a2;
  sub_1BDF86808(a2, (uint64_t)v17, &qword_1EA0E3E70);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1BDF86808((uint64_t)v19, (uint64_t)v10, &qword_1EA0E3E70);
  sub_1BDF86808((uint64_t)v17, v20, &qword_1EA0E3E70);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) != 1)
  {
    sub_1BDF86808((uint64_t)v10, (uint64_t)v14, &qword_1EA0E3E70);
    if (v21(v20, 1, v4) != 1)
    {
      uint64_t v22 = v53;
      sub_1BE01BDF8(v20, v53);
      BOOL v23 = _s13CalendarUIKit29EventRecurrenceEndModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v14, v22);
      sub_1BE01BD98(v22, type metadata accessor for EventRecurrenceEndModelObject);
      sub_1BDF8686C((uint64_t)v17, &qword_1EA0E3E70);
      sub_1BDF8686C((uint64_t)v19, &qword_1EA0E3E70);
      sub_1BE01BD98((uint64_t)v14, type metadata accessor for EventRecurrenceEndModelObject);
      sub_1BDF8686C((uint64_t)v10, &qword_1EA0E3E70);
      if (!v23) {
        return 0;
      }
      goto LABEL_8;
    }
    sub_1BDF8686C((uint64_t)v17, &qword_1EA0E3E70);
    sub_1BDF8686C((uint64_t)v19, &qword_1EA0E3E70);
    sub_1BE01BD98((uint64_t)v14, type metadata accessor for EventRecurrenceEndModelObject);
LABEL_6:
    sub_1BDF8686C((uint64_t)v10, &qword_1EA0E46D8);
    return 0;
  }
  sub_1BDF8686C((uint64_t)v17, &qword_1EA0E3E70);
  sub_1BDF8686C((uint64_t)v19, &qword_1EA0E3E70);
  if (v21(v20, 1, v4) != 1) {
    goto LABEL_6;
  }
  sub_1BDF8686C((uint64_t)v10, &qword_1EA0E3E70);
LABEL_8:
  char v24 = (int *)type metadata accessor for EventRecurrenceRuleModelObject(0);
  uint64_t v26 = v54;
  uint64_t v25 = v55;
  if (*(void *)(v54 + v24[5]) != *(void *)(v55 + v24[5])) {
    return 0;
  }
  uint64_t v27 = v24;
  if (*(void *)(v54 + v24[6]) != *(void *)(v55 + v24[6])) {
    return 0;
  }
  uint64_t v28 = v24[7];
  uint64_t v29 = (void *)(v54 + v28);
  char v30 = *(unsigned char *)(v54 + v28 + 8);
  uint64_t v31 = (void *)(v55 + v28);
  int v32 = *(unsigned __int8 *)(v55 + v28 + 8);
  if (v30)
  {
    if (!v32) {
      return 0;
    }
  }
  else
  {
    if (*v29 != *v31) {
      LOBYTE(v32) = 1;
    }
    if (v32) {
      return 0;
    }
  }
  uint64_t v33 = v24[8];
  uint64_t v34 = *(int64x2_t **)(v54 + v33);
  uint64_t v35 = *(int64x2_t **)(v55 + v33);
  if (v34)
  {
    if (!v35 || (sub_1BE057850(v34, v35) & 1) == 0) {
      return 0;
    }
  }
  else if (v35)
  {
    return 0;
  }
  uint64_t v36 = v27[9];
  uint64_t v37 = *(void **)(v26 + v36);
  uint64_t v38 = *(void **)(v25 + v36);
  if (v37)
  {
    if (!v38 || !sub_1BE0578C0(v37, v38)) {
      return 0;
    }
  }
  else if (v38)
  {
    return 0;
  }
  uint64_t v39 = v27[10];
  uint64_t v40 = *(void **)(v26 + v39);
  uint64_t v41 = *(void **)(v25 + v39);
  if (v40)
  {
    if (!v41 || !sub_1BE0578C0(v40, v41)) {
      return 0;
    }
  }
  else if (v41)
  {
    return 0;
  }
  uint64_t v42 = v27[11];
  uint64_t v43 = *(void **)(v26 + v42);
  uint64_t v44 = *(void **)(v25 + v42);
  if (v43)
  {
    if (!v44 || !sub_1BE0578C0(v43, v44)) {
      return 0;
    }
  }
  else if (v44)
  {
    return 0;
  }
  uint64_t v45 = v27[12];
  char v46 = *(void **)(v26 + v45);
  char v47 = *(void **)(v25 + v45);
  if (v46)
  {
    if (!v47 || !sub_1BE0578C0(v46, v47)) {
      return 0;
    }
  }
  else if (v47)
  {
    return 0;
  }
  uint64_t v48 = v27[13];
  uint64_t v49 = *(void **)(v26 + v48);
  uint64_t v50 = *(void **)(v25 + v48);
  if (v49) {
    return v50 && sub_1BE0578C0(v49, v50);
  }
  return !v50;
}

BOOL _s13CalendarUIKit29EventRecurrenceEndModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v28 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E46D0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  char v17 = (char *)&v27 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v27 - v18;
  uint64_t v29 = a1;
  sub_1BDF86808(a1, (uint64_t)&v27 - v18, &qword_1EB677CC0);
  uint64_t v30 = a2;
  sub_1BDF86808(a2, (uint64_t)v17, &qword_1EB677CC0);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1BDF86808((uint64_t)v19, (uint64_t)v10, &qword_1EB677CC0);
  sub_1BDF86808((uint64_t)v17, v20, &qword_1EB677CC0);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_1BDF8686C((uint64_t)v17, &qword_1EB677CC0);
    sub_1BDF8686C((uint64_t)v19, &qword_1EB677CC0);
    if (v21(v20, 1, v4) == 1)
    {
      sub_1BDF8686C((uint64_t)v10, &qword_1EB677CC0);
LABEL_8:
      uint64_t v25 = type metadata accessor for EventRecurrenceEndModelObject(0);
      return *(void *)(v29 + *(int *)(v25 + 20)) == *(void *)(v30 + *(int *)(v25 + 20));
    }
    goto LABEL_6;
  }
  sub_1BDF86808((uint64_t)v10, (uint64_t)v14, &qword_1EB677CC0);
  if (v21(v20, 1, v4) == 1)
  {
    sub_1BDF8686C((uint64_t)v17, &qword_1EB677CC0);
    sub_1BDF8686C((uint64_t)v19, &qword_1EB677CC0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_6:
    sub_1BDF8686C((uint64_t)v10, &qword_1EA0E46D0);
    return 0;
  }
  uint64_t v22 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v28, v20, v4);
  sub_1BE01C744((unint64_t *)&qword_1EA0E3328, MEMORY[0x1E4F27928]);
  char v23 = sub_1BE070440();
  char v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v22, v4);
  sub_1BDF8686C((uint64_t)v17, &qword_1EB677CC0);
  sub_1BDF8686C((uint64_t)v19, &qword_1EB677CC0);
  v24(v14, v4);
  sub_1BDF8686C((uint64_t)v10, &qword_1EB677CC0);
  if (v23) {
    goto LABEL_8;
  }
  return 0;
}

unint64_t sub_1BE01C6F0()
{
  unint64_t result = qword_1EA0E45B0;
  if (!qword_1EA0E45B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E45B0);
  }
  return result;
}

uint64_t sub_1BE01C744(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BE01C78C()
{
  unint64_t result = qword_1EA0E45E0;
  if (!qword_1EA0E45E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E45E0);
  }
  return result;
}

uint64_t sub_1BE01C7E0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E45D0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BE01C850()
{
  unint64_t result = qword_1EA0E4620;
  if (!qword_1EA0E4620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4620);
  }
  return result;
}

uint64_t sub_1BE01C8A4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E45E8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BE01C908()
{
  unint64_t result = qword_1EA0E4638;
  if (!qword_1EA0E4638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4638);
  }
  return result;
}

unint64_t sub_1BE01C95C()
{
  unint64_t result = qword_1EA0E4650;
  if (!qword_1EA0E4650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4650);
  }
  return result;
}

_UNKNOWN **sub_1BE01C9B0()
{
  return &protocol witness table for EventRecurrenceDayOfWeekModelObject;
}

_UNKNOWN **sub_1BE01C9BC()
{
  return &protocol witness table for EventRecurrenceEndModelObject;
}

uint64_t sub_1BE01C9C8()
{
  return sub_1BE01C744(&qword_1EA0E4660, (void (*)(uint64_t))type metadata accessor for EventRecurrenceRuleModelObject);
}

unint64_t sub_1BE01CA14()
{
  unint64_t result = qword_1EA0E4668;
  if (!qword_1EA0E4668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4668);
  }
  return result;
}

uint64_t sub_1BE01CA68()
{
  return sub_1BE01C744(&qword_1EA0E4670, (void (*)(uint64_t))type metadata accessor for EventRecurrenceEndModelObject);
}

uint64_t *initializeBufferWithCopyOfBuffer for EventRecurrenceRuleModelObject(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for EventRecurrenceEndModelObject(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_1BE06EEE0();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 20));
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v14 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
    uint64_t v15 = a3[7];
    uint64_t v16 = a3[8];
    char v17 = (char *)a1 + v15;
    uint64_t v18 = (char *)a2 + v15;
    *(void *)char v17 = *(void *)v18;
    v17[8] = v18[8];
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v19 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v19) = *(uint64_t *)((char *)a2 + v19);
    uint64_t v20 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)a1 + v20) = *(uint64_t *)((char *)a2 + v20);
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for EventRecurrenceRuleModelObject(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for EventRecurrenceEndModelObject(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    uint64_t v3 = sub_1BE06EEE0();
    uint64_t v4 = *(void *)(v3 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for EventRecurrenceRuleModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EventRecurrenceEndModelObject(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1BE06EEE0();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v12 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v17 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v18 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for EventRecurrenceRuleModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EventRecurrenceEndModelObject(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1BE01BD98((uint64_t)a1, type metadata accessor for EventRecurrenceEndModelObject);
      goto LABEL_7;
    }
    uint64_t v15 = sub_1BE06EEE0();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
    int v18 = v17(a1, 1, v15);
    int v19 = v17(a2, 1, v15);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(a1, a2, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
LABEL_16:
        *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
        goto LABEL_17;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 24))(a1, a2, v15);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(a1, v15);
    }
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v11 = sub_1BE06EEE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  char v23 = &a2[v21];
  uint64_t v24 = *(void *)v23;
  v22[8] = v23[8];
  *(void *)uint64_t v22 = v24;
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for EventRecurrenceRuleModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EventRecurrenceEndModelObject(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_1BE06EEE0();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(a1, a2, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v12 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v13 = a3[7];
  uint64_t v14 = a3[8];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v17 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v17] = *(void *)&a2[v17];
  uint64_t v18 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  return a1;
}

char *assignWithTake for EventRecurrenceRuleModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for EventRecurrenceEndModelObject(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1BE01BD98((uint64_t)a1, type metadata accessor for EventRecurrenceEndModelObject);
      goto LABEL_7;
    }
    uint64_t v15 = sub_1BE06EEE0();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
    int v18 = v17(a1, 1, v15);
    int v19 = v17(a2, 1, v15);
    if (v18)
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(a1, a2, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
LABEL_16:
        *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
        goto LABEL_17;
      }
    }
    else
    {
      if (!v19)
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 40))(a1, a2, v15);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(a1, v15);
    }
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
    memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v11 = sub_1BE06EEE0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  *(void *)&a1[*(int *)(v6 + 20)] = *(void *)&a2[*(int *)(v6 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_17:
  uint64_t v21 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v21] = *(void *)&a2[v21];
  uint64_t v22 = a3[7];
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v22];
  uint64_t v25 = &a2[v22];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  *(void *)&a1[v23] = *(void *)&a2[v23];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventRecurrenceRuleModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BE01DC50);
}

uint64_t sub_1BE01DC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for EventRecurrenceRuleModelObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BE01DD34);
}

uint64_t sub_1BE01DD34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E70);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = a2;
  }
  return result;
}

void sub_1BE01DDF4()
{
  sub_1BE01E848(319, &qword_1EA0E1980, (void (*)(uint64_t))type metadata accessor for EventRecurrenceEndModelObject);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for EventRecurrenceDayOfWeekModelObject()
{
  return &type metadata for EventRecurrenceDayOfWeekModelObject;
}

uint64_t *initializeBufferWithCopyOfBuffer for EventRecurrenceEndModelObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1BE06EEE0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for EventRecurrenceEndModelObject(uint64_t a1)
{
  uint64_t v2 = sub_1BE06EEE0();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

char *initializeWithCopy for EventRecurrenceEndModelObject(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithCopy for EventRecurrenceEndModelObject(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *initializeWithTake for EventRecurrenceEndModelObject(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for EventRecurrenceEndModelObject(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t getEnumTagSinglePayload for EventRecurrenceEndModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BE01E69C);
}

uint64_t sub_1BE01E69C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for EventRecurrenceEndModelObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BE01E720);
}

uint64_t sub_1BE01E720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_1BE01E794()
{
  sub_1BE01E848(319, &qword_1EB677CC8, MEMORY[0x1E4F27928]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1BE01E848(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1BE0709E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for EventRecurrenceEndModelObject.CodingKeys()
{
  return &type metadata for EventRecurrenceEndModelObject.CodingKeys;
}

unsigned char *_s13CalendarUIKit29EventRecurrenceEndModelObjectV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE01E97CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventRecurrenceDayOfWeekModelObject.CodingKeys()
{
  return &type metadata for EventRecurrenceDayOfWeekModelObject.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for EventRecurrenceRuleModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE01EA80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventRecurrenceRuleModelObject.CodingKeys()
{
  return &type metadata for EventRecurrenceRuleModelObject.CodingKeys;
}

unint64_t sub_1BE01EABC()
{
  unint64_t result = qword_1EA0E4678;
  if (!qword_1EA0E4678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4678);
  }
  return result;
}

unint64_t sub_1BE01EB14()
{
  unint64_t result = qword_1EA0E4680;
  if (!qword_1EA0E4680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4680);
  }
  return result;
}

unint64_t sub_1BE01EB6C()
{
  unint64_t result = qword_1EA0E4688;
  if (!qword_1EA0E4688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4688);
  }
  return result;
}

unint64_t sub_1BE01EBC4()
{
  unint64_t result = qword_1EA0E4690;
  if (!qword_1EA0E4690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4690);
  }
  return result;
}

unint64_t sub_1BE01EC1C()
{
  unint64_t result = qword_1EA0E4698;
  if (!qword_1EA0E4698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4698);
  }
  return result;
}

unint64_t sub_1BE01EC74()
{
  unint64_t result = qword_1EA0E46A0;
  if (!qword_1EA0E46A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E46A0);
  }
  return result;
}

unint64_t sub_1BE01ECCC()
{
  unint64_t result = qword_1EA0E46A8;
  if (!qword_1EA0E46A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E46A8);
  }
  return result;
}

unint64_t sub_1BE01ED24()
{
  unint64_t result = qword_1EA0E46B0;
  if (!qword_1EA0E46B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E46B0);
  }
  return result;
}

unint64_t sub_1BE01ED7C()
{
  unint64_t result = qword_1EA0E46B8;
  if (!qword_1EA0E46B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E46B8);
  }
  return result;
}

uint64_t sub_1BE01EDD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65727275636572 && a2 == 0xED0000646E456563;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x636E657571657266 && a2 == 0xE900000000000079 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61767265746E69 && a2 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BE08D940 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6854664F73796164 && a2 == 0xED00006B65655765 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6854664F73796164 && a2 == 0xEE0068746E6F4D65 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6854664F73796164 && a2 == 0xED00007261655965 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x54664F736B656577 && a2 == 0xEE00726165596568 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x664F7368746E6F6DLL && a2 == 0xEF72616559656854 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7469736F50746573 && a2 == 0xEC000000736E6F69)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_1BE01F2C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656854664F796164 && a2 == 0xEC0000006B656557;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x626D754E6B656577 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1BE01F3D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65746144646E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6572727563636FLL && a2 == 0xEF746E756F436563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t EventSourceModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v108 = a2;
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v116 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  uint64_t v6 = v5;
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  int v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 32);
  uint64_t v115 = v6;
  swift_bridgeObjectRetain();
  uint64_t v114 = v9(v7, v8);
  uint64_t v11 = v10;
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 40);
  uint64_t v107 = v11;
  swift_bridgeObjectRetain();
  uint64_t v113 = v14(v12, v13);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  uint64_t v112 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 48))(v15, v16);
  uint64_t v18 = v17;
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v20 + 56);
  uint64_t v106 = v18;
  swift_bridgeObjectRetain();
  LODWORD(v101) = v21(v19, v20);
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  int v100 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 64))(v22, v23);
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v24);
  int v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 72))(v24, v25);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  int v98 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 80))(v26, v27);
  uint64_t v28 = a1[3];
  uint64_t v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v28);
  int v97 = EventSourceModel.isIntegrationSource.getter(v28, v29);
  uint64_t v30 = a1[3];
  uint64_t v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 88))(v30, v31);
  uint64_t v33 = a1[3];
  uint64_t v34 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v33);
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 96);
  uint64_t v105 = v32;
  swift_bridgeObjectRetain();
  uint64_t v111 = v35(v33, v34);
  uint64_t v36 = a1[3];
  uint64_t v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v36);
  uint64_t v110 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 104))(v36, v37);
  LODWORD(v104) = v38;
  char v169 = v38 & 1;
  uint64_t v39 = a1[3];
  uint64_t v40 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v39);
  uint64_t v109 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 112))(v39, v40);
  LODWORD(v103) = v41;
  char v168 = v41 & 1;
  uint64_t v43 = a1[3];
  uint64_t v42 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v43);
  uint64_t v44 = *(void *)(v42 + 8);
  v102 = *(void (**)(uint64_t, uint64_t))(v44 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v46 = sub_1BE0709E0();
  uint64_t v47 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v49 = (char *)&v95 - v48;
  v102(v43, v44);
  uint64_t v50 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v49, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v46);
    uint64_t AssociatedConformanceWitness = 0;
    long long v164 = 0u;
    long long v165 = 0u;
  }
  else
  {
    *((void *)&v165 + 1) = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v164);
    (*(void (**)(uint64_t *, char *, uint64_t))(v50 + 32))(boxed_opaque_existential_1, v49, AssociatedTypeWitness);
  }
  char v53 = v100;
  char v52 = v101;
  char v54 = v98;
  char v55 = v99;
  char v56 = v97;
  sub_1BE01FDC8((uint64_t)&v164, (uint64_t)&v162);
  if (v163)
  {
    sub_1BDFBEF38(&v162, (uint64_t)v141);
    sub_1BDFC3C28((uint64_t)v141, (uint64_t)&v133);
    EventSourceConstraintsModelObject.init(_:)(&v133, (uint64_t)&v117);
    v102 = v117;
    if (v119) {
      uint64_t v57 = 256;
    }
    else {
      uint64_t v57 = 0;
    }
    uint64_t v58 = v57 | v118;
    if (v120) {
      uint64_t v59 = 0x10000;
    }
    else {
      uint64_t v59 = 0;
    }
    if (v121) {
      uint64_t v60 = 0x1000000;
    }
    else {
      uint64_t v60 = 0;
    }
    uint64_t v61 = v58 | v59 | v60;
    if (v122) {
      uint64_t v62 = 0x100000000;
    }
    else {
      uint64_t v62 = 0;
    }
    if (v123) {
      uint64_t v63 = 0x10000000000;
    }
    else {
      uint64_t v63 = 0;
    }
    uint64_t v64 = v62 | v63;
    if (v124) {
      uint64_t v65 = 0x1000000000000;
    }
    else {
      uint64_t v65 = 0;
    }
    uint64_t v66 = v61 | v64 | v65;
    uint64_t v67 = 0x100000000000000;
    if (!v125) {
      uint64_t v67 = 0;
    }
    uint64_t v101 = v66 | v67;
    if (v127) {
      uint64_t v68 = 256;
    }
    else {
      uint64_t v68 = 0;
    }
    uint64_t v69 = v68 | v126;
    if (v128) {
      uint64_t v70 = 0x10000;
    }
    else {
      uint64_t v70 = 0;
    }
    if (v129) {
      uint64_t v71 = 0x1000000;
    }
    else {
      uint64_t v71 = 0;
    }
    uint64_t v72 = v69 | v70 | v71;
    if (v130) {
      uint64_t v73 = 0x100000000;
    }
    else {
      uint64_t v73 = 0;
    }
    if (v131) {
      uint64_t v74 = 0x10000000000;
    }
    else {
      uint64_t v74 = 0;
    }
    uint64_t v75 = v73 | v74;
    if (v132) {
      uint64_t v76 = 0x1000000000000;
    }
    else {
      uint64_t v76 = 0;
    }
    unint64_t v77 = v72 | v75 | v76;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v141);
  }
  else
  {
    unint64_t v77 = 0;
    uint64_t v101 = 2;
    v102 = 0;
  }
  char v78 = v56 & 1;
  char v79 = v54 & 1;
  int v99 = v54 & 1;
  int v100 = v56 & 1;
  int v80 = v55 & 1;
  char v81 = v53 & 1;
  int v97 = v53 & 1;
  int v98 = v80;
  int v82 = v52 & 1;
  int v96 = v82;
  sub_1BE01FE30((uint64_t)&v164);
  *(void *)&long long v133 = v116;
  *((void *)&v133 + 1) = v115;
  uint64_t v84 = v106;
  uint64_t v83 = v107;
  *(void *)&long long v134 = v114;
  *((void *)&v134 + 1) = v107;
  *(void *)&long long v135 = v113;
  *((void *)&v135 + 1) = v112;
  *(void *)&long long v136 = v106;
  BYTE8(v136) = v82;
  BYTE9(v136) = v81;
  BYTE10(v136) = v80;
  BYTE11(v136) = v79;
  BYTE12(v136) = v78;
  uint64_t v85 = v105;
  *(void *)&long long v137 = v105;
  *((void *)&v137 + 1) = v111;
  *(void *)&long long v138 = v110;
  BYTE8(v138) = v104 & 1;
  *(void *)&long long v139 = v109;
  BYTE8(v139) = v103 & 1;
  uint64_t v87 = v101;
  uint64_t v86 = v102;
  *(void *)v140 = v102;
  *(void *)&v140[8] = v101;
  unint64_t v103 = HIWORD(v77);
  v140[22] = BYTE6(v77);
  unint64_t v104 = HIDWORD(v77);
  *(_WORD *)&v140[20] = WORD2(v77);
  *(_DWORD *)&v140[16] = v77;
  sub_1BDFC8920((uint64_t)&v133);
  uint64_t v88 = v115;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v89 = *(_OWORD *)v140;
  uint64_t v90 = v108;
  *(_OWORD *)(v108 + 96) = v139;
  *(_OWORD *)(v90 + 112) = v89;
  *(void *)(v90 + 127) = *(void *)&v140[15];
  long long v91 = v136;
  *(_OWORD *)(v90 + 32) = v135;
  *(_OWORD *)(v90 + 48) = v91;
  long long v92 = v138;
  *(_OWORD *)(v90 + 64) = v137;
  *(_OWORD *)(v90 + 80) = v92;
  long long v93 = v134;
  *(_OWORD *)uint64_t v90 = v133;
  *(_OWORD *)(v90 + 16) = v93;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v141[0] = v116;
  v141[1] = v88;
  v141[2] = v114;
  v141[3] = v83;
  v141[4] = v113;
  v141[5] = v112;
  v141[6] = v84;
  char v142 = v96;
  char v143 = v97;
  char v144 = v98;
  char v145 = v99;
  char v146 = v100;
  __int16 v147 = v170;
  char v148 = v171;
  uint64_t v149 = v85;
  uint64_t v150 = v111;
  uint64_t v151 = v110;
  char v152 = v169;
  *(_DWORD *)&v153[3] = *(_DWORD *)((char *)&v117 + 3);
  *(_DWORD *)v153 = v117;
  uint64_t v154 = v109;
  char v155 = v168;
  *(_DWORD *)v156 = *(_DWORD *)v167;
  *(_DWORD *)&v156[3] = *(_DWORD *)&v167[3];
  v157 = v86;
  uint64_t v158 = v87;
  char v161 = v103;
  __int16 v160 = v104;
  int v159 = v77;
  return sub_1BDFCAB98((uint64_t)v141);
}

__n128 EventSourceModelObject.init(id:appGroupID:sourceType:title:isDelegate:isManaged:isWritable:isPrimaryLocalSource:isIntegrationSource:ownerAddresses:preferredEventPrivateValue:defaultAlarmOffset:defaultAllDayAlarmOffset:constraints:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, char a11, char a12, char a13, long long a14, uint64_t a15, char a16, uint64_t a17, char a18, __n128 *a19)
{
  *(_OWORD *)(a9 + 64) = a14;
  __n128 result = *a19;
  unsigned __int32 v20 = a19[1].n128_u32[0];
  unsigned __int16 v21 = a19[1].n128_u16[2];
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(void *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 57) = a10;
  *(unsigned char *)(a9 + 58) = a11;
  *(unsigned char *)(a9 + 59) = a12;
  *(unsigned char *)(a9 + 60) = a13;
  *(void *)(a9 + 80) = a15;
  *(unsigned char *)(a9 + 88) = a16 & 1;
  *(void *)(a9 + 96) = a17;
  unsigned __int8 v22 = a19[1].n128_u8[6];
  *(unsigned char *)(a9 + 104) = a18 & 1;
  *(__n128 *)(a9 + 112) = result;
  *(_WORD *)(a9 + 132) = v21;
  *(_DWORD *)(a9 + 128) = v20;
  *(unsigned char *)(a9 + 134) = v22;
  return result;
}

uint64_t sub_1BE01FDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E46E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE01FE30(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E46E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t EventSourceModelObject.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventSourceModelObject.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*EventSourceModelObject.id.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.appGroupID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventSourceModelObject.appGroupID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*EventSourceModelObject.appGroupID.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.sourceType.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t EventSourceModelObject.sourceType.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*EventSourceModelObject.sourceType.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventSourceModelObject.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*EventSourceModelObject.title.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.isDelegate.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t EventSourceModelObject.isDelegate.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 56) = result;
  return result;
}

uint64_t (*EventSourceModelObject.isDelegate.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.isManaged.getter()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t EventSourceModelObject.isManaged.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 57) = result;
  return result;
}

uint64_t (*EventSourceModelObject.isManaged.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.isWritable.getter()
{
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t EventSourceModelObject.isWritable.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 58) = result;
  return result;
}

uint64_t (*EventSourceModelObject.isWritable.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.isPrimaryLocalSource.getter()
{
  return *(unsigned __int8 *)(v0 + 59);
}

uint64_t EventSourceModelObject.isPrimaryLocalSource.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 59) = result;
  return result;
}

uint64_t (*EventSourceModelObject.isPrimaryLocalSource.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.isIntegrationSource.getter()
{
  return *(unsigned __int8 *)(v0 + 60);
}

uint64_t EventSourceModelObject.isIntegrationSource.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 60) = result;
  return result;
}

uint64_t (*EventSourceModelObject.isIntegrationSource.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.ownerAddresses.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventSourceModelObject.ownerAddresses.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*EventSourceModelObject.ownerAddresses.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.preferredEventPrivateValue.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t EventSourceModelObject.preferredEventPrivateValue.setter(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t (*EventSourceModelObject.preferredEventPrivateValue.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.defaultAlarmOffset.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t EventSourceModelObject.defaultAlarmOffset.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 80) = result;
  *(unsigned char *)(v2 + 88) = a2 & 1;
  return result;
}

uint64_t (*EventSourceModelObject.defaultAlarmOffset.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.defaultAllDayAlarmOffset.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t EventSourceModelObject.defaultAllDayAlarmOffset.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 96) = result;
  *(unsigned char *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*EventSourceModelObject.defaultAllDayAlarmOffset.modify())()
{
  return nullsub_1;
}

__n128 EventSourceModelObject.constraints.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int32 v3 = *(_DWORD *)(v1 + 128);
  uint64_t v2 = v1 + 128;
  unsigned __int16 v4 = *(_WORD *)(v2 + 4);
  __n128 result = *(__n128 *)(v2 - 16);
  *a1 = result;
  a1[1].n128_u32[0] = v3;
  a1[1].n128_u16[2] = v4;
  a1[1].n128_u8[6] = *(unsigned char *)(v2 + 6);
  return result;
}

__n128 EventSourceModelObject.constraints.setter(__n128 *a1)
{
  unsigned __int32 v2 = a1[1].n128_u32[0];
  unsigned __int16 v3 = a1[1].n128_u16[2];
  __n128 result = *a1;
  v1[7] = *a1;
  v1[8].n128_u32[0] = v2;
  v1[8].n128_u16[2] = v3;
  v1[8].n128_u8[6] = a1[1].n128_u8[6];
  return result;
}

uint64_t (*EventSourceModelObject.constraints.modify())()
{
  return nullsub_1;
}

uint64_t EventSourceModelObject.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 64);
  char v8 = *(unsigned char *)(v0 + 88);
  int v6 = *(unsigned __int8 *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  sub_1BE070FD0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  sub_1BE070FC0();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BE070FC0();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BE070590();
      swift_bridgeObjectRelease();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_1BE070FC0();
  if (v8)
  {
    sub_1BE070FD0();
    if (!v6)
    {
LABEL_9:
      sub_1BE070FD0();
      sub_1BE070FE0();
      goto LABEL_12;
    }
  }
  else
  {
    sub_1BE070FD0();
    sub_1BE070FE0();
    if (!v6) {
      goto LABEL_9;
    }
  }
  sub_1BE070FD0();
LABEL_12:
  if (v7 == 2) {
    return sub_1BE070FD0();
  }
  sub_1BE070FD0();
  return EventSourceConstraintsModelObject.hash(into:)();
}

uint64_t EventSourceModelObject.hashValue.getter()
{
  return sub_1BE070FF0();
}

unint64_t sub_1BE020620(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x70756F7247707061;
      break;
    case 2:
      unint64_t result = 0x7954656372756F73;
      break;
    case 3:
      unint64_t result = 0x656C746974;
      break;
    case 4:
      unint64_t result = 0x6167656C65447369;
      break;
    case 5:
      unint64_t result = 0x6567616E614D7369;
      break;
    case 6:
      unint64_t result = 0x6261746972577369;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0x64644172656E776FLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 12:
      unint64_t result = 0xD000000000000018;
      break;
    case 13:
      unint64_t result = 0x69617274736E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BE0207F8()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_1BE020800()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t sub_1BE020808()
{
  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t sub_1BE020810()
{
  return *(unsigned __int8 *)(v0 + 59);
}

uint64_t sub_1BE020818()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE020820()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_1BE02082C()
{
  return *(void *)(v0 + 96);
}

uint64_t sub_1BE020838()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE02087C()
{
  return sub_1BE070FF0();
}

__n128 sub_1BE0208B8@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int32 v3 = *(_DWORD *)(v1 + 128);
  uint64_t v2 = v1 + 128;
  unsigned __int16 v4 = *(_WORD *)(v2 + 4);
  __n128 result = *(__n128 *)(v2 - 16);
  *a1 = result;
  a1[1].n128_u32[0] = v3;
  a1[1].n128_u16[2] = v4;
  a1[1].n128_u8[6] = *(unsigned char *)(v2 + 6);
  return result;
}

unint64_t sub_1BE0208EC()
{
  return sub_1BE020620(*v0);
}

uint64_t sub_1BE0208F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BE0224E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BE02091C(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_1BE020928(uint64_t a1)
{
  unint64_t v2 = sub_1BE021CAC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BE020964(uint64_t a1)
{
  unint64_t v2 = sub_1BE021CAC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventSourceModelObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E46E8);
  uint64_t v5 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v97 = 1;
  char v95 = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE021CAC();
  sub_1BE071010();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = v5;
    uint64_t v52 = a2;
    LOBYTE(v61) = 0;
    uint64_t v9 = sub_1BE070DB0();
    uint64_t v12 = v11;
    uint64_t v50 = v9;
    LOBYTE(v61) = 1;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1BE070D50();
    uint64_t v15 = v14;
    uint64_t v48 = v13;
    type metadata accessor for EKSourceType(0);
    LOBYTE(v53) = 2;
    sub_1BE022A90(&qword_1EA0E46F8, type metadata accessor for EKSourceType);
    swift_bridgeObjectRetain();
    sub_1BE070DF0();
    uint64_t v51 = v15;
    uint64_t v47 = v61;
    LOBYTE(v61) = 3;
    uint64_t v46 = sub_1BE070DB0();
    LOBYTE(v61) = 4;
    uint64_t v49 = v16;
    swift_bridgeObjectRetain();
    int v45 = sub_1BE070D60();
    LOBYTE(v61) = 5;
    int v44 = sub_1BE070D60();
    LOBYTE(v61) = 6;
    LODWORD(v43) = sub_1BE070DC0();
    LOBYTE(v61) = 7;
    LODWORD(v42) = sub_1BE070D60();
    LOBYTE(v61) = 8;
    LODWORD(v41) = sub_1BE070D60();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1AA0);
    LOBYTE(v53) = 9;
    sub_1BDFC8858(&qword_1EA0E3440);
    sub_1BE070DA0();
    if (v61) {
      uint64_t v17 = v61;
    }
    else {
      uint64_t v17 = MEMORY[0x1E4FBC860];
    }
    type metadata accessor for EKPrivacyLevel(0);
    LOBYTE(v53) = 10;
    sub_1BE022A90(&qword_1EA0E4700, type metadata accessor for EKPrivacyLevel);
    swift_bridgeObjectRetain();
    sub_1BE070DA0();
    uint64_t v18 = v61;
    if ((_BYTE)v62) {
      uint64_t v18 = 0;
    }
    uint64_t v39 = v18;
    LOBYTE(v61) = 11;
    uint64_t v19 = sub_1BE070D70();
    LODWORD(v40) = v20;
    uint64_t v21 = v19;
    char v97 = v20 & 1;
    LOBYTE(v61) = 12;
    uint64_t v38 = sub_1BE070D70();
    int v37 = v22 & 1;
    char v95 = v22 & 1;
    char v88 = 13;
    sub_1BE021D00();
    sub_1BE070DA0();
    int v23 = v45 & 1;
    v44 &= 1u;
    int v45 = v43 & 1;
    char v24 = v42 & 1;
    int v35 = v42 & 1;
    int v36 = v23;
    int v34 = v41 & 1;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v100);
    uint64_t v42 = v89;
    uint64_t v43 = v90;
    uint64_t v100 = v91;
    uint64_t v25 = v51;
    *(void *)&long long v53 = v50;
    *((void *)&v53 + 1) = v12;
    uint64_t v26 = v49;
    *(void *)&long long v54 = v48;
    *((void *)&v54 + 1) = v51;
    *(void *)&long long v55 = v47;
    *((void *)&v55 + 1) = v46;
    *(void *)&long long v56 = v49;
    BYTE8(v56) = v36;
    BYTE9(v56) = v44;
    BYTE10(v56) = v45;
    BYTE11(v56) = v24;
    char v27 = v34;
    BYTE12(v56) = v34;
    *(void *)&long long v57 = v17;
    *((void *)&v57 + 1) = v39;
    *(void *)&long long v58 = v21;
    BYTE8(v58) = v40 & 1;
    *(void *)&long long v59 = v38;
    BYTE8(v59) = v37;
    *(void *)uint64_t v60 = v89;
    *(void *)&v60[8] = v90;
    *(_DWORD *)&v60[16] = v91;
    v60[22] = v93;
    uint64_t v40 = v92 | (v93 << 16);
    uint64_t v41 = v93;
    *(_WORD *)&v60[20] = v92;
    sub_1BDFC8920((uint64_t)&v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v28 = *(_OWORD *)v60;
    uint64_t v29 = v52;
    *(_OWORD *)(v52 + 96) = v59;
    *(_OWORD *)(v29 + 112) = v28;
    *(void *)(v29 + 127) = *(void *)&v60[15];
    long long v30 = v56;
    *(_OWORD *)(v29 + 32) = v55;
    *(_OWORD *)(v29 + 48) = v30;
    long long v31 = v58;
    *(_OWORD *)(v29 + 64) = v57;
    *(_OWORD *)(v29 + 80) = v31;
    long long v32 = v54;
    *(_OWORD *)uint64_t v29 = v53;
    *(_OWORD *)(v29 + 16) = v32;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v61 = v50;
    uint64_t v62 = v12;
    uint64_t v63 = v48;
    uint64_t v64 = v25;
    uint64_t v65 = v47;
    uint64_t v66 = v46;
    uint64_t v67 = v26;
    char v68 = v36;
    char v69 = v44;
    char v70 = v45;
    char v71 = v35;
    char v72 = v27;
    __int16 v73 = v98;
    char v74 = v99;
    uint64_t v75 = v17;
    uint64_t v76 = v39;
    uint64_t v77 = v21;
    char v78 = v97;
    *(_DWORD *)char v79 = *(_DWORD *)v96;
    *(_DWORD *)&v79[3] = *(_DWORD *)&v96[3];
    uint64_t v80 = v38;
    char v81 = v95;
    *(_DWORD *)int v82 = *(_DWORD *)v94;
    *(_DWORD *)&v82[3] = *(_DWORD *)&v94[3];
    uint64_t v83 = v42;
    uint64_t v84 = v43;
    char v87 = v41;
    __int16 v86 = v40;
    int v85 = v100;
    return sub_1BDFCAB98((uint64_t)&v61);
  }
}

uint64_t EventSourceModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4710);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v37 = *(void *)(v1 + 24);
  uint64_t v38 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v35 = *(void *)(v1 + 40);
  uint64_t v36 = v8;
  uint64_t v34 = *(void *)(v1 + 48);
  int v45 = *(unsigned __int8 *)(v1 + 56);
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 57);
  int v32 = *(unsigned __int8 *)(v1 + 58);
  int v33 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 59);
  int v30 = *(unsigned __int8 *)(v1 + 60);
  int v31 = v8;
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v28 = *(void *)(v1 + 72);
  uint64_t v29 = v9;
  uint64_t v26 = *(void *)(v1 + 80);
  int v27 = *(unsigned __int8 *)(v1 + 88);
  uint64_t v10 = *(void *)(v1 + 96);
  int v25 = *(unsigned __int8 *)(v1 + 104);
  uint64_t v20 = *(void *)(v1 + 112);
  uint64_t v23 = *(void *)(v1 + 120);
  uint64_t v24 = v10;
  LODWORD(v5) = *(unsigned __int16 *)(v1 + 132);
  int v21 = *(unsigned __int8 *)(v1 + 134);
  int v22 = v5;
  uint64_t v11 = *(unsigned int *)(v1 + 128);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1;
  uint64_t v15 = v14;
  __swift_project_boxed_opaque_existential_1(v13, v12);
  sub_1BE021CAC();
  sub_1BE071030();
  LOBYTE(v40) = 0;
  uint64_t v16 = v39;
  sub_1BE070E60();
  if (!v16)
  {
    uint64_t v17 = v36;
    uint64_t v39 = v11;
    LOBYTE(v40) = 1;
    sub_1BE070E30();
    uint64_t v40 = v17;
    char v46 = 2;
    type metadata accessor for EKSourceType(0);
    sub_1BE022A90(&qword_1EA0E4718, type metadata accessor for EKSourceType);
    sub_1BE070EB0();
    LOBYTE(v40) = 3;
    sub_1BE070E60();
    LOBYTE(v40) = 4;
    sub_1BE070E70();
    LOBYTE(v40) = 5;
    sub_1BE070E70();
    LOBYTE(v40) = 6;
    sub_1BE070E70();
    LOBYTE(v40) = 7;
    sub_1BE070E70();
    LOBYTE(v40) = 8;
    sub_1BE070E70();
    uint64_t v40 = v29;
    char v46 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1AA0);
    sub_1BDFC8858(&qword_1EA0E3470);
    sub_1BE070EB0();
    uint64_t v40 = v28;
    char v46 = 10;
    type metadata accessor for EKPrivacyLevel(0);
    sub_1BE022A90(&qword_1EA0E4720, type metadata accessor for EKPrivacyLevel);
    sub_1BE070EB0();
    LOBYTE(v40) = 11;
    sub_1BE070E40();
    LOBYTE(v40) = 12;
    sub_1BE070E40();
    uint64_t v40 = v20;
    uint64_t v41 = v23;
    int v42 = v39;
    char v44 = (v39 | ((unint64_t)(v22 | (v21 << 16)) << 32)) >> 48;
    __int16 v43 = (v39 | ((unint64_t)(v22 | (v21 << 16)) << 32)) >> 32;
    char v46 = 13;
    sub_1BE021D54();
    sub_1BE070E50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v15);
}

uint64_t sub_1BE021778@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventSourceModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BE021790(void *a1)
{
  return EventSourceModelObject.encode(to:)(a1);
}

uint64_t sub_1BE0217A8()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BE021838()
{
  return sub_1BE0706A0();
}

uint64_t _s13CalendarUIKit22EventSourceModelObjectV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  int v70 = *(unsigned __int8 *)(a1 + 56);
  int v71 = *(unsigned __int8 *)(a1 + 57);
  int v7 = *(unsigned __int8 *)(a1 + 58);
  int v69 = *(unsigned __int8 *)(a1 + 59);
  int v68 = *(unsigned __int8 *)(a1 + 60);
  uint64_t v67 = *(void **)(a1 + 64);
  uint64_t v65 = *(void *)(a1 + 72);
  double v8 = *(double *)(a1 + 80);
  char v63 = *(unsigned char *)(a1 + 88);
  double v9 = *(double *)(a1 + 96);
  char v61 = *(unsigned char *)(a1 + 104);
  uint64_t v53 = *(void *)(a1 + 112);
  uint64_t v59 = *(void *)(a1 + 120);
  int v51 = *(unsigned __int8 *)(a1 + 134);
  int v50 = *(unsigned __int16 *)(a1 + 132);
  uint64_t v52 = *(unsigned int *)(a1 + 128);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  int v15 = *(unsigned __int8 *)(a2 + 56);
  int v16 = *(unsigned __int8 *)(a2 + 57);
  double v17 = *(double *)(a2 + 80);
  double v18 = *(double *)(a2 + 96);
  int v19 = *(unsigned __int8 *)(a2 + 58);
  int v20 = *(unsigned __int8 *)(a2 + 59);
  int v21 = *(unsigned __int8 *)(a2 + 60);
  uint64_t v66 = *(void **)(a2 + 64);
  uint64_t v64 = *(void *)(a2 + 72);
  int v62 = *(unsigned __int8 *)(a2 + 88);
  int v60 = *(unsigned __int8 *)(a2 + 104);
  uint64_t v57 = *(void *)(a2 + 112);
  uint64_t v58 = *(void *)(a2 + 120);
  int v55 = *(unsigned __int8 *)(a2 + 134);
  int v54 = *(unsigned __int16 *)(a2 + 132);
  uint64_t v56 = *(unsigned int *)(a2 + 128);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    goto LABEL_4;
  }
  int v46 = *(unsigned __int8 *)(a2 + 56);
  int v48 = *(unsigned __int8 *)(a1 + 58);
  int v43 = *(unsigned __int8 *)(a2 + 59);
  int v44 = *(unsigned __int8 *)(a2 + 57);
  int v42 = *(unsigned __int8 *)(a2 + 60);
  uint64_t v22 = *(void *)(a1 + 48);
  uint64_t v23 = *(void *)(a1 + 40);
  uint64_t v45 = *(void *)(a2 + 32);
  uint64_t v24 = *(void *)(a1 + 32);
  uint64_t v25 = *(void *)(a2 + 48);
  uint64_t v26 = *(void *)(a2 + 40);
  uint64_t v27 = *(void *)(a1 + 24);
  uint64_t v28 = *(void *)(a1 + 16);
  int v29 = *(unsigned __int8 *)(a2 + 58);
  uint64_t v30 = *(void *)(a2 + 24);
  uint64_t v31 = *(void *)(a2 + 16);
  char v32 = sub_1BE070EF0();
  uint64_t v11 = v31;
  uint64_t v10 = v30;
  int v19 = v29;
  uint64_t v2 = v28;
  uint64_t v3 = v27;
  uint64_t v12 = v26;
  uint64_t v14 = v25;
  uint64_t v4 = v24;
  uint64_t v13 = v45;
  uint64_t v5 = v23;
  uint64_t v6 = v22;
  int v21 = v42;
  int v20 = v43;
  int v16 = v44;
  int v15 = v46;
  int v7 = v48;
  char v33 = v32;
  uint64_t result = 0;
  if (v33)
  {
LABEL_4:
    if (v3)
    {
      if (!v10) {
        return 0;
      }
      if (v2 == v11 && v3 == v10)
      {
        if (v4 != v13) {
          return 0;
        }
      }
      else
      {
        int v47 = v19;
        uint64_t v35 = v12;
        uint64_t v49 = v5;
        char v36 = sub_1BE070EF0();
        uint64_t result = 0;
        if ((v36 & 1) == 0) {
          return result;
        }
        uint64_t v5 = v49;
        uint64_t v12 = v35;
        int v19 = v47;
        if (v4 != v13) {
          return result;
        }
      }
    }
    else
    {
      uint64_t result = 0;
      if (v10 || v4 != v13) {
        return result;
      }
    }
    int v37 = v7 ^ v19;
    if (v5 == v12 && v6 == v14)
    {
      uint64_t result = 0;
      if ((v70 ^ v15 | v71 ^ v16 | v37)) {
        return result;
      }
    }
    else
    {
      char v38 = sub_1BE070EF0();
      uint64_t result = 0;
      if ((v70 ^ v15) & 1 | ((v38 & 1) == 0) | (v71 ^ v16 | v37) & 1) {
        return result;
      }
    }
    if (((v69 ^ v20) & 1) == 0 && ((v68 ^ v21) & 1) == 0)
    {
      char v39 = sub_1BE05792C(v67, v66);
      uint64_t result = 0;
      if ((v39 & 1) != 0 && v65 == v64)
      {
        if (v63)
        {
          if (!v62) {
            return 0;
          }
        }
        else
        {
          char v40 = v62;
          if (v8 != v17) {
            char v40 = 1;
          }
          if (v40) {
            return 0;
          }
        }
        if (v61)
        {
          if (!v60) {
            return 0;
          }
        }
        else
        {
          char v41 = v60;
          if (v9 != v18) {
            char v41 = 1;
          }
          if (v41) {
            return 0;
          }
        }
        v76[0] = v57;
        v76[1] = v58;
        int v77 = v56;
        char v79 = (v56 | ((unint64_t)(v54 | (v55 << 16)) << 32)) >> 48;
        __int16 v78 = (v56 | ((unint64_t)(v54 | (v55 << 16)) << 32)) >> 32;
        if (v59 == 2)
        {
          if (v58 != 2) {
            return 0;
          }
        }
        else
        {
          v72[0] = v53;
          v72[1] = v59;
          int v73 = v52;
          char v75 = (v52 | ((unint64_t)(v50 | (v51 << 16)) << 32)) >> 48;
          __int16 v74 = (v52 | ((unint64_t)(v50 | (v51 << 16)) << 32)) >> 32;
          if (v58 == 2
            || (_s13CalendarUIKit33EventSourceConstraintsModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v72, (uint64_t)v76) & 1) == 0)
          {
            return 0;
          }
        }
        return 1;
      }
    }
  }
  return result;
}

unint64_t sub_1BE021CAC()
{
  unint64_t result = qword_1EA0E46F0;
  if (!qword_1EA0E46F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E46F0);
  }
  return result;
}

unint64_t sub_1BE021D00()
{
  unint64_t result = qword_1EA0E4708;
  if (!qword_1EA0E4708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4708);
  }
  return result;
}

unint64_t sub_1BE021D54()
{
  unint64_t result = qword_1EA0E4728;
  if (!qword_1EA0E4728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4728);
  }
  return result;
}

unint64_t sub_1BE021DA8(uint64_t a1)
{
  unint64_t result = sub_1BE021DD0();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BE021DD0()
{
  unint64_t result = qword_1EA0E4730;
  if (!qword_1EA0E4730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4730);
  }
  return result;
}

unint64_t sub_1BE021E28()
{
  unint64_t result = qword_1EA0E4738;
  if (!qword_1EA0E4738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4738);
  }
  return result;
}

uint64_t destroy for EventSourceModelObject()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EventSourceModelObject(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 127) = *(void *)(a2 + 127);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EventSourceModelObject(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v4 = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 80) = v4;
  uint64_t v5 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 127) = *(void *)(a2 + 127);
  *(_OWORD *)(a1 + 112) = v6;
  return a1;
}

__n128 __swift_memcpy135_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 127) = *(void *)(a2 + 127);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for EventSourceModelObject(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 127) = *(void *)(a2 + 127);
  return a1;
}

uint64_t getEnumTagSinglePayload for EventSourceModelObject(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 135)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventSourceModelObject(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 134) = 0;
    *(_WORD *)(result + 132) = 0;
    *(_DWORD *)(result + 128) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 135) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 135) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventSourceModelObject()
{
  return &type metadata for EventSourceModelObject;
}

uint64_t getEnumTagSinglePayload for EventSourceModelObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventSourceModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *__n128 result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE0223A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventSourceModelObject.CodingKeys()
{
  return &type metadata for EventSourceModelObject.CodingKeys;
}

unint64_t sub_1BE0223E0()
{
  unint64_t result = qword_1EA0E4740;
  if (!qword_1EA0E4740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4740);
  }
  return result;
}

unint64_t sub_1BE022438()
{
  unint64_t result = qword_1EA0E4748;
  if (!qword_1EA0E4748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4748);
  }
  return result;
}

unint64_t sub_1BE022490()
{
  unint64_t result = qword_1EA0E4750;
  if (!qword_1EA0E4750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4750);
  }
  return result;
}

uint64_t sub_1BE0224E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70756F7247707061 && a2 == 0xEA00000000004449 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7954656372756F73 && a2 == 0xEA00000000006570 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6167656C65447369 && a2 == 0xEA00000000006574 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6567616E614D7369 && a2 == 0xE900000000000064 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6261746972577369 && a2 == 0xEA0000000000656CLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BE08D590 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BE08D960 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x64644172656E776FLL && a2 == 0xEE00736573736572 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001BE08D980 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BE08D9A0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BE08D9C0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x69617274736E6F63 && a2 == 0xEB0000000073746ELL)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_1BE022A90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t EventAlarmModelObject.init(trigger:isDefault:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_1BE022DF0(a1, a3, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
  uint64_t result = type metadata accessor for EventAlarmModelObject();
  *(unsigned char *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for EventAlarmModelObject()
{
  uint64_t result = qword_1EA0E4790;
  if (!qword_1EA0E4790) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t EventAlarmModelObject.trigger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE0236E8(v1, a1, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
}

uint64_t EventAlarmModelObject.trigger.setter(uint64_t a1)
{
  return sub_1BE022BB0(a1, v1);
}

uint64_t sub_1BE022BB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for EventAlarmTrigger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*EventAlarmModelObject.trigger.modify())()
{
  return nullsub_1;
}

uint64_t EventAlarmModelObject.isDefault.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventAlarmModelObject() + 20));
}

uint64_t EventAlarmModelObject.isDefault.setter(char a1)
{
  uint64_t result = type metadata accessor for EventAlarmModelObject();
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*EventAlarmModelObject.isDefault.modify())(void)
{
  return nullsub_1;
}

uint64_t EventAlarmModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for EventAlarmModelObject();
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  BOOL v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v7[*(int *)(v5 + 28)] = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11) & 1;
  sub_1BE022DF0((uint64_t)v7, a2, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BE022DF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t EventAlarmModelObject.hash(into:)()
{
  return sub_1BE070FD0();
}

uint64_t static EventAlarmModelObject.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (_s13CalendarUIKit17EventAlarmTriggerO2eeoiySbAC_ACtFZ_0(a1, a2))
  {
    uint64_t v4 = type metadata accessor for EventAlarmModelObject();
    char v5 = *(unsigned char *)(a1 + *(int *)(v4 + 20)) ^ *(unsigned char *)(a2 + *(int *)(v4 + 20)) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t EventAlarmModelObject.hashValue.getter()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE022F48@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE0236E8(v1, a1, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
}

uint64_t sub_1BE022F7C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_1BE022F88()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE022FDC()
{
  return sub_1BE070FD0();
}

uint64_t sub_1BE02301C()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE02306C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (_s13CalendarUIKit17EventAlarmTriggerO2eeoiySbAC_ACtFZ_0(a1, a2)) {
    char v6 = *(unsigned char *)(a1 + *(int *)(a3 + 20)) ^ *(unsigned char *)(a2 + *(int *)(a3 + 20)) ^ 1;
  }
  else {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1BE0230CC()
{
  if (*v0) {
    return 0x6C75616665447369;
  }
  else {
    return 0x72656767697274;
  }
}

uint64_t sub_1BE02310C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BE0241C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BE023134(uint64_t a1)
{
  unint64_t v2 = sub_1BE023694();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BE023170(uint64_t a1)
{
  unint64_t v2 = sub_1BE023694();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventAlarmModelObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = type metadata accessor for EventAlarmTrigger();
  MEMORY[0x1F4188790](v4);
  uint64_t v20 = (uint64_t)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4760);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EventAlarmModelObject();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE023694();
  sub_1BE071010();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v18;
  char v22 = 0;
  sub_1BE0237F8(&qword_1EA0E4770, (void (*)(uint64_t))type metadata accessor for EventAlarmTrigger);
  uint64_t v14 = v19;
  sub_1BE070DF0();
  sub_1BE022DF0(v20, v12, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
  char v21 = 1;
  char v15 = sub_1BE070D60();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v14);
  *(unsigned char *)(v12 + *(int *)(v9 + 20)) = v15 & 1;
  sub_1BE0236E8(v12, v17, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1BE023750(v12, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
}

uint64_t EventAlarmModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4778);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE023694();
  sub_1BE071030();
  v8[15] = 0;
  type metadata accessor for EventAlarmTrigger();
  sub_1BE0237F8(&qword_1EA0E4780, (void (*)(uint64_t))type metadata accessor for EventAlarmTrigger);
  sub_1BE070EB0();
  if (!v1)
  {
    type metadata accessor for EventAlarmModelObject();
    v8[14] = 1;
    sub_1BE070E70();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BE023664@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EventAlarmModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BE02367C(void *a1)
{
  return EventAlarmModelObject.encode(to:)(a1);
}

unint64_t sub_1BE023694()
{
  unint64_t result = qword_1EA0E4768;
  if (!qword_1EA0E4768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4768);
  }
  return result;
}

uint64_t sub_1BE0236E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BE023750(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1BE0237B0()
{
  return sub_1BE0237F8(&qword_1EA0E4788, (void (*)(uint64_t))type metadata accessor for EventAlarmModelObject);
}

uint64_t sub_1BE0237F8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for EventAlarmModelObject(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for EventAlarmTrigger();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = sub_1BE06EEE0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for EventAlarmModelObject(uint64_t a1)
{
  type metadata accessor for EventAlarmTrigger();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_1BE06EEE0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for EventAlarmModelObject(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventAlarmTrigger();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1BE06EEE0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithCopy for EventAlarmModelObject(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BE023750((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
    uint64_t v6 = type metadata accessor for EventAlarmTrigger();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1BE06EEE0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *initializeWithTake for EventAlarmModelObject(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventAlarmTrigger();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1BE06EEE0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for EventAlarmModelObject(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BE023750((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
    uint64_t v6 = type metadata accessor for EventAlarmTrigger();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1BE06EEE0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for EventAlarmModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BE023D88);
}

uint64_t sub_1BE023D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for EventAlarmTrigger();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for EventAlarmModelObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BE023E6C);
}

uint64_t sub_1BE023E6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for EventAlarmTrigger();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1BE023F28()
{
  uint64_t result = type metadata accessor for EventAlarmTrigger();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EventAlarmModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE024088);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventAlarmModelObject.CodingKeys()
{
  return &type metadata for EventAlarmModelObject.CodingKeys;
}

unint64_t sub_1BE0240C4()
{
  unint64_t result = qword_1EA0E47A0;
  if (!qword_1EA0E47A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E47A0);
  }
  return result;
}

unint64_t sub_1BE02411C()
{
  unint64_t result = qword_1EA0E47A8;
  if (!qword_1EA0E47A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E47A8);
  }
  return result;
}

unint64_t sub_1BE024174()
{
  unint64_t result = qword_1EA0E47B0;
  if (!qword_1EA0E47B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E47B0);
  }
  return result;
}

uint64_t sub_1BE0241C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72656767697274 && a2 == 0xE700000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C75616665447369 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t static CodableViaNSSecureCoding.== infix(_:_:)(void **a1, void **a2)
{
  BOOL v2 = *a1;
  int v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      id v4 = v3;
      id v5 = v2;
      char v6 = sub_1BE070990();

      if (v6) {
        return 1;
      }
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

id CodableViaNSSecureCoding.wrappedValue.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void CodableViaNSSecureCoding.wrappedValue.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t (*CodableViaNSSecureCoding.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t CodableViaNSSecureCoding.init(wrappedValue:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CodableViaNSSecureCoding.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE071000();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E47C0);
    sub_1BE02493C(&qword_1EA0E47C8, (void (*)(void))sub_1BDFE7318);
    sub_1BE070F00();
    if (v10 >> 60 == 15)
    {
      id v5 = 0;
    }
    else
    {
      id v6 = objc_allocWithZone(MEMORY[0x1E4F28DC0]);
      sub_1BDF9D478(v9, v10);
      id v7 = sub_1BE02487C();
      sub_1BDF859DC(v9, v10);
      objc_msgSend(v7, sel_setRequiresSecureCoding_, 1);
      id v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCoder_, v7);
      objc_msgSend(v7, sel_finishDecoding);

      sub_1BDF859DC(v9, v10);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t CodableViaNSSecureCoding.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE071020();
  if (v2)
  {
    id v3 = objc_allocWithZone(MEMORY[0x1E4F28DB0]);
    id v4 = v2;
    id v5 = objc_msgSend(v3, sel_initRequiringSecureCoding_, 1);
    objc_msgSend(v4, sel_encodeWithCoder_, v5);
    objc_msgSend(v5, sel_finishEncoding);
    id v6 = objc_msgSend(v5, sel_encodedData);
    uint64_t v7 = sub_1BE06EE50();
    unint64_t v9 = v8;
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v9 = 0xF000000000000000;
  }
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E47C0);
  sub_1BE02493C(&qword_1EA0E47D8, (void (*)(void))sub_1BDFE72C4);
  sub_1BE070F10();
  sub_1BDF859DC(v7, v9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t CodableViaNSSecureCoding.hash(into:)()
{
  return sub_1BE0709F0();
}

uint64_t CodableViaNSSecureCoding.hashValue.getter()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE0247F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CodableViaNSSecureCoding.init(from:)(a1, a2);
}

uint64_t sub_1BE024810(void *a1)
{
  return CodableViaNSSecureCoding.encode(to:)(a1);
}

uint64_t sub_1BE024830()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE024874(void **a1, void **a2)
{
  return static CodableViaNSSecureCoding.== infix(_:_:)(a1, a2);
}

id sub_1BE02487C()
{
  v6[1] = *(id *)MEMORY[0x1E4F143B8];
  id v1 = (void *)sub_1BE06EE40();
  v6[0] = 0;
  id v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    id v3 = v6[0];
  }
  else
  {
    id v4 = v6[0];
    sub_1BE06EDB0();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1BE02493C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E47C0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BE0249AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BE0249C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

void **sub_1BE0249D0(void **a1, void **a2)
{
  id v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **sub_1BE024A00(void **a1, void **a2)
{
  id v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void **sub_1BE024A44(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_1BE024A78(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1BE024AD4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for CodableViaNSSecureCoding()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of EventLocationPredictedLOIModel.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventLocationPredictedLOIModel.customLabel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventLocationPredictedLOIModel.mapItemName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventLocationPredictedLOIModel.addressCountryCode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventLocationPredictedLOIModel.addressThoroughfare.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventLocationPredictedLOIModel.addressLocality.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_1BE024BB8@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BE024F50();
  sub_1BE06F160();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 40);
  return result;
}

uint64_t sub_1BE024C30()
{
  return swift_release();
}

uint64_t sub_1BE024CD0()
{
  swift_getKeyPath();
  sub_1BE024F50();
  sub_1BE06F160();
  swift_release();
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_1BE024D40()
{
  sub_1BDF859DC(*(void *)(v0 + 24), *(void *)(v0 + 32));
  uint64_t v1 = v0 + OBJC_IVAR____TtC13CalendarUIKit16EKShareeWithData___observationRegistrar;
  uint64_t v2 = sub_1BE06F180();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1BE024DF0()
{
  return type metadata accessor for EKShareeWithData();
}

uint64_t type metadata accessor for EKShareeWithData()
{
  uint64_t result = qword_1EA0E4870;
  if (!qword_1EA0E4870) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BE024E44()
{
  uint64_t result = sub_1BE06F180();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BE024EF8()
{
  return MEMORY[0x1E4FBB060];
}

uint64_t sub_1BE024F04@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EKShareeWithData();
  uint64_t result = sub_1BE070B90();
  *a1 = result;
  return result;
}

unint64_t sub_1BE024F50()
{
  unint64_t result = qword_1EA0E2F78;
  if (!qword_1EA0E2F78)
  {
    type metadata accessor for EKShareeWithData();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2F78);
  }
  return result;
}

void sub_1BE024FA8()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 40) = *(unsigned char *)(v0 + 24);
}

__n128 CUIKDateView.init(currentDate:styling:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v21 = *(_OWORD *)(a2 + 160);
  long long v22 = *(_OWORD *)(a2 + 176);
  long long v23 = *(_OWORD *)(a2 + 192);
  uint64_t v24 = *(void *)(a2 + 208);
  long long v17 = *(_OWORD *)(a2 + 96);
  long long v18 = *(_OWORD *)(a2 + 112);
  long long v19 = *(_OWORD *)(a2 + 128);
  long long v20 = *(_OWORD *)(a2 + 144);
  long long v13 = *(_OWORD *)(a2 + 32);
  long long v14 = *(_OWORD *)(a2 + 48);
  long long v15 = *(_OWORD *)(a2 + 64);
  long long v16 = *(_OWORD *)(a2 + 80);
  __n128 v11 = *(__n128 *)a2;
  long long v12 = *(_OWORD *)(a2 + 16);
  id v5 = (int *)type metadata accessor for CUIKDateView();
  uint64_t v6 = a3 + v5[6];
  strcpy((char *)v6, "EEEE, MMMM dd");
  *(_WORD *)(v6 + 14) = -4864;
  uint64_t v7 = (uint64_t *)(a3 + v5[7]);
  *uint64_t v7 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a3, a1, v8);
  uint64_t v9 = a3 + v5[5];
  *(_OWORD *)(v9 + 160) = v21;
  *(_OWORD *)(v9 + 176) = v22;
  *(_OWORD *)(v9 + 192) = v23;
  *(void *)(v9 + 208) = v24;
  *(_OWORD *)(v9 + 96) = v17;
  *(_OWORD *)(v9 + 112) = v18;
  *(_OWORD *)(v9 + 128) = v19;
  *(_OWORD *)(v9 + 144) = v20;
  *(_OWORD *)(v9 + 32) = v13;
  *(_OWORD *)(v9 + 48) = v14;
  *(_OWORD *)(v9 + 64) = v15;
  *(_OWORD *)(v9 + 80) = v16;
  __n128 result = v11;
  *(__n128 *)uint64_t v9 = v11;
  *(_OWORD *)(v9 + 16) = v12;
  return result;
}

uint64_t type metadata accessor for CUIKDateView()
{
  uint64_t result = qword_1EA0E10B8;
  if (!qword_1EA0E10B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BE025170(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v30 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1BE06F140();
  uint64_t v5 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1BE06F100();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  long long v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  long long v14 = (char *)&v29 - v13;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
  type metadata accessor for CUIKDateView();
  uint64_t v34 = v2;
  sub_1BDFCD994((uint64_t)v14);
  long long v16 = (void *)sub_1BE06F020();
  long long v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v14, v8);
  objc_msgSend(v15, sel_setCalendar_, v16);

  sub_1BDFCD994((uint64_t)v14);
  sub_1BE06F0C0();
  long long v18 = v14;
  long long v19 = v30;
  v17(v18, v8);
  long long v20 = (void *)sub_1BE06F120();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v31);
  objc_msgSend(v15, sel_setTimeZone_, v20);

  sub_1BDFCD994((uint64_t)v12);
  sub_1BE06F090();
  v17(v12, v8);
  uint64_t v21 = sub_1BE06EFC0();
  uint64_t v22 = *(void *)(v21 - 8);
  long long v23 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v21) != 1)
  {
    long long v23 = (void *)sub_1BE06EF40();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
  }
  objc_msgSend(v15, sel_setLocale_, v23);

  objc_msgSend(v15, sel_setFormattingContext_, 2);
  uint64_t v24 = (void *)sub_1BE0704C0();
  objc_msgSend(v15, sel_setLocalizedDateFormatFromTemplate_, v24);

  uint64_t v25 = (void *)sub_1BE06EEA0();
  id v26 = objc_msgSend(v15, sel_stringFromDate_, v25);

  uint64_t v27 = sub_1BE070500();
  return v27;
}

id sub_1BE02554C()
{
  uint64_t v28 = sub_1BE06F0E0();
  uint64_t v1 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1BE06F100();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v25 - v12;
  id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EE0]), sel_init);
  type metadata accessor for CUIKDateView();
  uint64_t v27 = v0;
  sub_1BDFCD994((uint64_t)v13);
  sub_1BE06F090();
  long long v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v25 = v7;
  v14(v13, v7);
  uint64_t v15 = sub_1BE06EFC0();
  uint64_t v16 = *(void *)(v15 - 8);
  long long v17 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v6, 1, v15) != 1)
  {
    long long v17 = (void *)sub_1BE06EF40();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v15);
  }
  id v18 = v26;
  objc_msgSend(v26, sel_setLocale_, v17);

  sub_1BDFCD994((uint64_t)v11);
  uint64_t v19 = v28;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F27BF0], v28);
  uint64_t v20 = sub_1BE06F0F0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v19);
  v14(v11, v25);
  id v21 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v20);
  id result = objc_msgSend(v18, sel_stringFromNumber_, v21);
  if (result)
  {
    long long v23 = result;
    uint64_t v24 = sub_1BE070500();

    return (id)v24;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1BE0258D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06F140();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_1BE06F100();
  uint64_t v8 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1110);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  long long v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  long long v17 = (char *)&v29 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v31 = (char *)&v29 - v18;
  uint64_t v32 = v4;
  if (a2) {
    uint64_t v19 = (void *)sub_1BE0704C0();
  }
  else {
    uint64_t v19 = 0;
  }
  uint64_t v20 = self;
  type metadata accessor for CUIKDateView();
  uint64_t v33 = v2;
  sub_1BDFCD994((uint64_t)v10);
  sub_1BE06F0C0();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v8 + 8);
  v30(v10, v34);
  id v21 = (void *)sub_1BE06F120();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v32);
  id v22 = objc_msgSend(v20, sel_overlayCalendarForCalendarIdentifier_timezone_, v19, v21);

  if (v22)
  {
    sub_1BE06F040();

    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v23 = 1;
  }
  uint64_t v24 = (uint64_t)v31;
  uint64_t v25 = v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v17, v23, 1, v34);
  sub_1BDFB8210((uint64_t)v17, v24, &qword_1EA0E1110);
  id v26 = (void *)sub_1BE06EEA0();
  sub_1BDF86808(v24, (uint64_t)v14, &qword_1EA0E1110);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v25) == 1)
  {
    uint64_t v27 = 0;
  }
  else
  {
    uint64_t v27 = (void *)sub_1BE06F020();
    v30(v14, v25);
  }
  id v28 = objc_msgSend(self, sel_monthDayStringForDate_inCalendar_, v26, v27);

  if (v28)
  {
    sub_1BE070500();

    sub_1BDF8686C(v24, &qword_1EA0E1110);
  }
  else
  {
    __break(1u);
  }
}

BOOL static CUIKDateView.Styling.VerticalContent.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CUIKDateView.Styling.VerticalContent.hash(into:)()
{
  return sub_1BE070FC0();
}

void CUIKDateView.Styling.firstLineContent.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *CUIKDateView.Styling.firstLineContent.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*CUIKDateView.Styling.firstLineContent.modify())()
{
  return nullsub_1;
}

void CUIKDateView.Styling.verticalContent.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *CUIKDateView.Styling.verticalContent.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*CUIKDateView.Styling.verticalContent.modify())()
{
  return nullsub_1;
}

void CUIKDateView.Styling.thirdLineContent.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *CUIKDateView.Styling.thirdLineContent.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*CUIKDateView.Styling.thirdLineContent.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.firstLinePosition.getter()
{
  return *(double *)(v0 + 8);
}

void CUIKDateView.Styling.firstLinePosition.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*CUIKDateView.Styling.firstLinePosition.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.secondLinePosition.getter()
{
  return *(double *)(v0 + 16);
}

void CUIKDateView.Styling.secondLinePosition.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*CUIKDateView.Styling.secondLinePosition.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.secondLineXOffset.getter()
{
  return *(double *)(v0 + 24);
}

void CUIKDateView.Styling.secondLineXOffset.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*CUIKDateView.Styling.secondLineXOffset.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.thirdLinePosition.getter()
{
  return *(double *)(v0 + 32);
}

void CUIKDateView.Styling.thirdLinePosition.setter(double a1)
{
  *(double *)(v1 + 32) = a1;
}

uint64_t (*CUIKDateView.Styling.thirdLinePosition.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.horizontalSpacing.getter()
{
  return *(double *)(v0 + 40);
}

void CUIKDateView.Styling.horizontalSpacing.setter(double a1)
{
  *(double *)(v1 + 40) = a1;
}

uint64_t (*CUIKDateView.Styling.horizontalSpacing.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.dayNumberFontSize.getter()
{
  return *(double *)(v0 + 48);
}

void CUIKDateView.Styling.dayNumberFontSize.setter(double a1)
{
  *(double *)(v1 + 48) = a1;
}

uint64_t (*CUIKDateView.Styling.dayNumberFontSize.modify())()
{
  return nullsub_1;
}

uint64_t CUIKDateView.Styling.monthYearFormat.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CUIKDateView.Styling.monthYearFormat.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*CUIKDateView.Styling.monthYearFormat.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.monthYearFontSize.getter()
{
  return *(double *)(v0 + 72);
}

void CUIKDateView.Styling.monthYearFontSize.setter(double a1)
{
  *(double *)(v1 + 72) = a1;
}

uint64_t (*CUIKDateView.Styling.monthYearFontSize.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.monthYearFontWeight.getter()
{
  return *(double *)(v0 + 80);
}

void CUIKDateView.Styling.monthYearFontWeight.setter(double a1)
{
  *(double *)(v1 + 80) = a1;
}

uint64_t (*CUIKDateView.Styling.monthYearFontWeight.modify())()
{
  return nullsub_1;
}

uint64_t CUIKDateView.Styling.monthYearContainsNumericText.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t CUIKDateView.Styling.monthYearContainsNumericText.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 88) = result;
  return result;
}

uint64_t (*CUIKDateView.Styling.monthYearContainsNumericText.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.monthYearTracking.getter()
{
  return *(double *)(v0 + 96);
}

void CUIKDateView.Styling.monthYearTracking.setter(double a1)
{
  *(double *)(v1 + 96) = a1;
}

uint64_t (*CUIKDateView.Styling.monthYearTracking.modify())()
{
  return nullsub_1;
}

uint64_t CUIKDateView.Styling.weekdayFormat.getter()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CUIKDateView.Styling.weekdayFormat.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = a2;
  return result;
}

uint64_t (*CUIKDateView.Styling.weekdayFormat.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.weekdayFontSize.getter()
{
  return *(double *)(v0 + 120);
}

void CUIKDateView.Styling.weekdayFontSize.setter(double a1)
{
  *(double *)(v1 + 120) = a1;
}

uint64_t (*CUIKDateView.Styling.weekdayFontSize.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.weekdayFontWeight.getter()
{
  return *(double *)(v0 + 128);
}

void CUIKDateView.Styling.weekdayFontWeight.setter(double a1)
{
  *(double *)(v1 + 128) = a1;
}

uint64_t (*CUIKDateView.Styling.weekdayFontWeight.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.weekdayTracking.getter()
{
  return *(double *)(v0 + 136);
}

void CUIKDateView.Styling.weekdayTracking.setter(double a1)
{
  *(double *)(v1 + 136) = a1;
}

uint64_t (*CUIKDateView.Styling.weekdayTracking.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.weekdayXOffset.getter()
{
  return *(double *)(v0 + 144);
}

void CUIKDateView.Styling.weekdayXOffset.setter(double a1)
{
  *(double *)(v1 + 144) = a1;
}

uint64_t (*CUIKDateView.Styling.weekdayXOffset.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.weekdayYOffset.getter()
{
  return *(double *)(v0 + 152);
}

void CUIKDateView.Styling.weekdayYOffset.setter(double a1)
{
  *(double *)(v1 + 152) = a1;
}

uint64_t (*CUIKDateView.Styling.weekdayYOffset.modify())()
{
  return nullsub_1;
}

uint64_t CUIKDateView.Styling.weekdayColor.getter()
{
  return swift_retain();
}

uint64_t CUIKDateView.Styling.weekdayColor.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 160) = a1;
  return result;
}

uint64_t (*CUIKDateView.Styling.weekdayColor.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.altCalFontSize.getter()
{
  return *(double *)(v0 + 168);
}

void CUIKDateView.Styling.altCalFontSize.setter(double a1)
{
  *(double *)(v1 + 168) = a1;
}

uint64_t (*CUIKDateView.Styling.altCalFontSize.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.altCalFontWeight.getter()
{
  return *(double *)(v0 + 176);
}

void CUIKDateView.Styling.altCalFontWeight.setter(double a1)
{
  *(double *)(v1 + 176) = a1;
}

uint64_t (*CUIKDateView.Styling.altCalFontWeight.modify())()
{
  return nullsub_1;
}

uint64_t CUIKDateView.Styling.altCalColor.getter()
{
  return swift_retain();
}

uint64_t CUIKDateView.Styling.altCalColor.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 184) = a1;
  return result;
}

uint64_t (*CUIKDateView.Styling.altCalColor.modify())()
{
  return nullsub_1;
}

double CUIKDateView.Styling.altCalTracking.getter()
{
  return *(double *)(v0 + 192);
}

void CUIKDateView.Styling.altCalTracking.setter(double a1)
{
  *(double *)(v1 + 192) = a1;
}

uint64_t (*CUIKDateView.Styling.altCalTracking.modify())()
{
  return nullsub_1;
}

uint64_t CUIKDateView.Styling.overlayCalendarID.getter()
{
  uint64_t v1 = *(void *)(v0 + 200);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CUIKDateView.Styling.overlayCalendarID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 200) = a1;
  *(void *)(v2 + 208) = a2;
  return result;
}

uint64_t (*CUIKDateView.Styling.overlayCalendarID.modify())()
{
  return nullsub_1;
}

unsigned char *CUIKDateView.Styling.init(firstLinePosition:firstLineContent:secondLinePosition:secondLineXOffset:verticalContent:horizontalSpacing:dayNumberFontSize:thirdLinePosition:thirdLineContent:monthYearFormat:monthYearFontSize:monthYearFontWeight:monthYearContainsNumericText:monthYearTracking:weekdayFormat:weekdayFontSize:weekdayFontWeight:weekdayTracking:weekdayXOffset:weekdayYOffset:weekdayColor:altCalFontSize:altCalFontWeight:altCalColor:altCalTracking:overlayCalendarID:)@<X0>(unsigned char *result@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>, double a16@<D6>, double a17@<D7>, uint64_t a18, long long a19, long long a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  char v28 = *a2;
  char v29 = *a3;
  *(unsigned char *)a9 = *result;
  *(unsigned char *)(a9 + 1) = v28;
  *(unsigned char *)(a9 + 2) = v29;
  *(double *)(a9 + 8) = a10;
  *(double *)(a9 + 16) = a11;
  *(double *)(a9 + 24) = a12;
  *(double *)(a9 + 32) = a15;
  *(double *)(a9 + 40) = a13;
  *(double *)(a9 + 48) = a14;
  *(void *)(a9 + 56) = a4;
  *(void *)(a9 + 64) = a5;
  *(double *)(a9 + 72) = a16;
  *(double *)(a9 + 80) = a17;
  *(unsigned char *)(a9 + 88) = a6;
  *(void *)(a9 + 96) = a18;
  *(void *)(a9 + 104) = a7;
  *(void *)(a9 + 112) = a8;
  *(_OWORD *)(a9 + 120) = a19;
  *(_OWORD *)(a9 + 136) = a20;
  *(void *)(a9 + 152) = a21;
  *(void *)(a9 + 160) = a22;
  *(void *)(a9 + 168) = a23;
  *(void *)(a9 + 176) = a24;
  *(void *)(a9 + 184) = a25;
  *(void *)(a9 + 192) = a26;
  *(void *)(a9 + 200) = a27;
  *(void *)(a9 + 208) = a28;
  return result;
}

uint64_t sub_1BE0263A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1408);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v35 = (uint64_t *)((char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1BE06F560();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  MEMORY[0x1F4188790](v7);
  char v36 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v9 = *(double *)(a1 + 48);
  id v37 = sub_1BE02554C();
  uint64_t v38 = v10;
  sub_1BDF859F0();
  uint64_t v11 = sub_1BE06FD30();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t v16 = sub_1BE0704C0();
  CTFontCreateWithNameAndOptions((CFStringRef)v16, v9, 0, 0x400uLL);

  sub_1BE06FC20();
  uint64_t v17 = sub_1BE06FD10();
  uint64_t v19 = v18;
  LOBYTE(v16) = v20;
  uint64_t v32 = v21;
  swift_release();
  char v22 = v16 & 1;
  sub_1BDF8587C(v11, v13, v15);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = v36;
  sub_1BE06F550();
  uint64_t v25 = swift_getKeyPath();
  uint64_t v27 = v34;
  id v26 = v35;
  char v28 = (char *)v35 + *(int *)(v5 + 36);
  uint64_t v29 = v33;
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v28, v24, v34);
  *id v26 = v25;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1318);
  sub_1BDF86808((uint64_t)v26, a2 + *(int *)(v30 + 36), &qword_1EA0E1408);
  *(void *)a2 = v17;
  *(void *)(a2 + 8) = v19;
  *(unsigned char *)(a2 + 16) = v22;
  *(void *)(a2 + 24) = v32;
  *(void *)(a2 + 32) = KeyPath;
  *(void *)(a2 + 40) = 1;
  *(unsigned char *)(a2 + 48) = 0;
  *(_WORD *)(a2 + 49) = 257;
  sub_1BDF8555C(v17, v19, v22);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BDF8686C((uint64_t)v26, &qword_1EA0E1408);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v27);
  sub_1BDF8587C(v17, v19, v22);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE026694@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v84 = sub_1BE06F480();
  uint64_t v83 = *(void *)(v84 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v84);
  uint64_t v80 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  char v81 = (char *)&v70 - v5;
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E18C0);
  MEMORY[0x1F4188790](v77);
  uint64_t v79 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1758);
  uint64_t v7 = MEMORY[0x1F4188790](v97);
  uint64_t v78 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v82 = (uint64_t)&v70 - v9;
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E17C0);
  MEMORY[0x1F4188790](v94);
  uint64_t v96 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_1BE06F560();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  int v73 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E17B8);
  uint64_t v12 = MEMORY[0x1F4188790](v95);
  char v72 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v76 = (uint64_t)&v70 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1448);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1870);
  uint64_t v92 = *(void *)(v18 - 8);
  uint64_t v93 = v18;
  MEMORY[0x1F4188790](v18);
  char v88 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1728) - 8;
  MEMORY[0x1F4188790](v91);
  uint64_t v21 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1790) - 8;
  MEMORY[0x1F4188790](v90);
  char v87 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1BE06EB50();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  id v26 = (char *)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1[7];
  uint64_t v28 = a1[8];
  uint64_t v85 = a1[10];
  uint64_t v29 = sub_1BE025170(v27, v28);
  uint64_t v31 = v30;
  uint64_t v99 = v29;
  uint64_t v100 = v30;
  sub_1BE06EAF0();
  sub_1BDF859F0();
  sub_1BE070A20();
  int v86 = v32;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  uint64_t v71 = v29;
  uint64_t v99 = v29;
  uint64_t v100 = v31;
  uint64_t v89 = v31;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1BE06FD30();
  uint64_t v35 = v34;
  LOBYTE(v23) = v36 & 1;
  uint64_t v37 = sub_1BE06FB50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v17, 1, 1, v37);
  sub_1BE06FB80();
  sub_1BDF8686C((uint64_t)v17, &qword_1EA0E1448);
  uint64_t v38 = sub_1BE06FD10();
  uint64_t v40 = v39;
  LOBYTE(v31) = v41;
  uint64_t v43 = v42;
  swift_release();
  LOBYTE(v31) = v31 & 1;
  sub_1BDF8587C(v33, v35, v23);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v99 = v38;
  uint64_t v100 = v40;
  char v101 = v31;
  uint64_t v102 = v43;
  uint64_t v103 = KeyPath;
  uint64_t v104 = 1;
  char v105 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1270);
  sub_1BDF866F8();
  uint64_t v45 = v88;
  sub_1BE06FF30();
  uint64_t v46 = v38;
  uint64_t v47 = (uint64_t)v87;
  sub_1BDF8587C(v46, v40, v31);
  swift_release();
  swift_bridgeObjectRelease();
  LODWORD(v33) = sub_1BE06F990();
  uint64_t v49 = v92;
  uint64_t v48 = v93;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v21, v45, v93);
  *(_DWORD *)&v21[*(int *)(v91 + 44)] = v33;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v45, v48);
  sub_1BDF86808((uint64_t)v21, v47, &qword_1EA0E1728);
  *(_WORD *)(v47 + *(int *)(v90 + 44)) = 257;
  sub_1BDF8686C((uint64_t)v21, &qword_1EA0E1728);
  if (v86)
  {
    uint64_t v60 = v79;
    sub_1BDF86808(v47, v79, &qword_1EA0E1790);
    char v61 = (uint64_t *)(v60 + *(int *)(v77 + 52));
    uint64_t v62 = v89;
    *char v61 = v71;
    v61[1] = v62;
    char v63 = v81;
    sub_1BE06F470();
    uint64_t v64 = v83;
    uint64_t v65 = v84;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v63, v84);
    sub_1BE02D1C8(&qword_1EA0E1220, MEMORY[0x1E4F3CA10]);
    uint64_t v66 = sub_1BE06F3B0();
    uint64_t v67 = v78;
    sub_1BDF86808(v60, v78, &qword_1EA0E18C0);
    *(void *)(v67 + *(int *)(v97 + 36)) = v66;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
    sub_1BDF8686C(v60, &qword_1EA0E18C0);
    uint64_t v57 = &qword_1EA0E1758;
    uint64_t v68 = v82;
    sub_1BDFB8210(v67, v82, &qword_1EA0E1758);
    sub_1BDF86808(v68, v96, &qword_1EA0E1758);
    swift_storeEnumTagMultiPayload();
    sub_1BE02D57C();
    sub_1BE02D2E4(&qword_1EA0E1750, &qword_1EA0E1758, &qword_1EA0E18B8, &qword_1EA0E18C0);
    sub_1BE06F8E0();
    uint64_t v59 = v68;
  }
  else
  {
    swift_bridgeObjectRelease();
    int v50 = v73;
    sub_1BE06F550();
    uint64_t v51 = swift_getKeyPath();
    uint64_t v52 = (uint64_t)v72;
    uint64_t v53 = (uint64_t *)&v72[*(int *)(v95 + 36)];
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1408);
    uint64_t v55 = v74;
    uint64_t v56 = v75;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))((char *)v53 + *(int *)(v54 + 28), v50, v75);
    *uint64_t v53 = v51;
    sub_1BDF86808(v47, v52, &qword_1EA0E1790);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v50, v56);
    uint64_t v57 = &qword_1EA0E17B8;
    uint64_t v58 = v76;
    sub_1BDFB8210(v52, v76, &qword_1EA0E17B8);
    sub_1BDF86808(v58, v96, &qword_1EA0E17B8);
    swift_storeEnumTagMultiPayload();
    sub_1BE02D57C();
    sub_1BE02D2E4(&qword_1EA0E1750, &qword_1EA0E1758, &qword_1EA0E18B8, &qword_1EA0E18C0);
    sub_1BE06F8E0();
    uint64_t v59 = v58;
  }
  sub_1BDF8686C(v59, v57);
  return sub_1BDF8686C(v47, &qword_1EA0E1790);
}

uint64_t sub_1BE027154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v114 = a2;
  uint64_t v93 = sub_1BE06F480();
  uint64_t v92 = *(void *)(v93 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v93);
  uint64_t v89 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v90 = (char *)&v80 - v5;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1490);
  MEMORY[0x1F4188790](v86);
  char v88 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E12C8);
  uint64_t v7 = MEMORY[0x1F4188790](v113);
  uint64_t v87 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v91 = (uint64_t)&v80 - v9;
  uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1390);
  MEMORY[0x1F4188790](v110);
  uint64_t v112 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_1BE06F560();
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  char v81 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1280);
  uint64_t v12 = MEMORY[0x1F4188790](v111);
  uint64_t v80 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v84 = (uint64_t)&v80 - v14;
  uint64_t v106 = sub_1BE06FCC0();
  uint64_t v103 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v100 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1448);
  MEMORY[0x1F4188790](v16 - 8);
  uint64_t v18 = (char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1468);
  uint64_t v105 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107);
  char v101 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1470);
  uint64_t v102 = *(void *)(v104 - 8);
  MEMORY[0x1F4188790](v104);
  uint64_t v98 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E12B0);
  MEMORY[0x1F4188790](v99);
  uint64_t v97 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1458);
  uint64_t v108 = *(void *)(v22 - 8);
  uint64_t v109 = v22;
  MEMORY[0x1F4188790](v22);
  uint64_t v115 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v95 = *(unsigned __int8 *)(a1 + 1);
  uint64_t v24 = *(void *)(a1 + 104);
  uint64_t v25 = *(void *)(a1 + 112);
  uint64_t v94 = *(void *)(a1 + 128);
  uint64_t v26 = *(void *)(a1 + 160);
  uint64_t v27 = sub_1BE025170(v24, v25);
  uint64_t v29 = v28;
  uint64_t v85 = v27;
  uint64_t v116 = v27;
  uint64_t v117 = v28;
  sub_1BDF859F0();
  uint64_t v96 = v29;
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1BE06FD30();
  uint64_t v32 = v31;
  LOBYTE(v29) = v33 & 1;
  uint64_t v116 = v26;
  swift_retain();
  uint64_t v34 = sub_1BE06FCE0();
  uint64_t v36 = v35;
  LOBYTE(a1) = v37 & 1;
  sub_1BDF8587C(v30, v32, v29);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = sub_1BE06FB50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v18, 1, 1, v38);
  sub_1BE06FB80();
  sub_1BDF8686C((uint64_t)v18, &qword_1EA0E1448);
  uint64_t v39 = sub_1BE06FD10();
  uint64_t v41 = v40;
  LOBYTE(v30) = v42;
  uint64_t v44 = v43;
  swift_release();
  uint64_t v45 = v34;
  int v46 = v95;
  sub_1BDF8587C(v45, v36, a1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v116 = v39;
  uint64_t v117 = v41;
  char v118 = v30 & 1;
  uint64_t v119 = v44;
  uint64_t v120 = KeyPath;
  uint64_t v121 = 1;
  char v122 = 0;
  uint64_t v48 = v100;
  if (v46) {
    sub_1BE06FCB0();
  }
  else {
    sub_1BE06FCA0();
  }
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1270);
  unint64_t v50 = sub_1BDF866F8();
  uint64_t v51 = v101;
  sub_1BE06FDB0();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v48, v106);
  sub_1BDF8587C(v116, v117, v118);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v116 = v49;
  uint64_t v117 = v50;
  swift_getOpaqueTypeConformance2();
  uint64_t v52 = v98;
  uint64_t v53 = v107;
  sub_1BE06FF30();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v51, v53);
  uint64_t v54 = v102;
  uint64_t v55 = (uint64_t)v97;
  uint64_t v56 = v104;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v97, v52, v104);
  *(_WORD *)(v55 + *(int *)(v99 + 36)) = 257;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v56);
  sub_1BE02CF58();
  uint64_t v57 = v115;
  sub_1BE06FD40();
  sub_1BDF8686C(v55, &qword_1EA0E12B0);
  uint64_t v59 = v108;
  uint64_t v58 = v109;
  if (v46)
  {
    uint64_t v60 = (uint64_t)v88;
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v88, v57, v109);
    char v61 = (uint64_t *)(v60 + *(int *)(v86 + 52));
    uint64_t v62 = v96;
    *char v61 = v85;
    v61[1] = v62;
    char v63 = v90;
    sub_1BE06F470();
    uint64_t v64 = v92;
    uint64_t v65 = v93;
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v89, v63, v93);
    sub_1BE02D1C8(&qword_1EA0E1220, MEMORY[0x1E4F3CA10]);
    uint64_t v66 = sub_1BE06F3B0();
    uint64_t v67 = v87;
    sub_1BDF86808(v60, v87, &qword_1EA0E1490);
    *(void *)(v67 + *(int *)(v113 + 36)) = v66;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v63, v65);
    sub_1BDF8686C(v60, &qword_1EA0E1490);
    uint64_t v68 = &qword_1EA0E12C8;
    uint64_t v69 = v91;
    sub_1BDFB8210(v67, v91, &qword_1EA0E12C8);
    sub_1BDF86808(v69, v112, &qword_1EA0E12C8);
    swift_storeEnumTagMultiPayload();
    sub_1BE02D210();
    sub_1BE02D2E4(&qword_1EA0E12C0, &qword_1EA0E12C8, &qword_1EA0E1488, &qword_1EA0E1490);
    sub_1BE06F8E0();
    uint64_t v70 = v69;
    uint64_t v57 = v115;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v71 = v81;
    sub_1BE06F550();
    uint64_t v72 = swift_getKeyPath();
    uint64_t v73 = (uint64_t)v80;
    uint64_t v74 = (uint64_t *)&v80[*(int *)(v111 + 36)];
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1408);
    uint64_t v76 = v82;
    uint64_t v77 = v83;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))((char *)v74 + *(int *)(v75 + 28), v71, v83);
    *uint64_t v74 = v72;
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v73, v57, v58);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v71, v77);
    uint64_t v68 = &qword_1EA0E1280;
    uint64_t v78 = v84;
    sub_1BDFB8210(v73, v84, &qword_1EA0E1280);
    sub_1BDF86808(v78, v112, &qword_1EA0E1280);
    swift_storeEnumTagMultiPayload();
    sub_1BE02D210();
    sub_1BE02D2E4(&qword_1EA0E12C0, &qword_1EA0E12C8, &qword_1EA0E1488, &qword_1EA0E1490);
    sub_1BE06F8E0();
    uint64_t v70 = v78;
  }
  sub_1BDF8686C(v70, v68);
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v57, v58);
}

uint64_t sub_1BE027DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4898);
  MEMORY[0x1F4188790](v69);
  uint64_t v71 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E48A0);
  MEMORY[0x1F4188790](v70);
  uint64_t v52 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_1BE06F560();
  uint64_t v55 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v68 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1BE06FCC0();
  uint64_t v62 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v73 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1448);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1468);
  uint64_t v64 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v60 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1470);
  uint64_t v61 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v59 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E12B0);
  MEMORY[0x1F4188790](v58);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E48A8);
  MEMORY[0x1F4188790](v54);
  uint64_t v67 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v57 = *(unsigned __int8 *)(a1 + 1);
  uint64_t v66 = *(void *)(a1 + 184);
  sub_1BE0258D0(*(void *)(a1 + 200), *(void *)(a1 + 208));
  uint64_t v74 = v15;
  uint64_t v75 = v16;
  sub_1BDF859F0();
  uint64_t v17 = sub_1BE06FD30();
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  uint64_t v22 = sub_1BE06FB50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v9, 1, 1, v22);
  sub_1BE06FB80();
  sub_1BDF8686C((uint64_t)v9, &qword_1EA0E1448);
  uint64_t v23 = sub_1BE06FD10();
  uint64_t v25 = v24;
  char v27 = v26;
  uint64_t v29 = v28;
  swift_release();
  sub_1BDF8587C(v17, v19, v21);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v74 = v23;
  uint64_t v75 = v25;
  char v76 = v27 & 1;
  uint64_t v77 = v29;
  uint64_t v78 = KeyPath;
  uint64_t v79 = 1;
  char v80 = 0;
  if (v57 == 1) {
    sub_1BE06FCA0();
  }
  else {
    sub_1BE06FCB0();
  }
  uint64_t v31 = v56;
  uint64_t v32 = v55;
  uint64_t v33 = v54;
  uint64_t v34 = v53;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1270);
  unint64_t v36 = sub_1BDF866F8();
  char v37 = v60;
  uint64_t v38 = v73;
  sub_1BE06FDB0();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v38, v65);
  sub_1BDF8587C(v74, v75, v76);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v74 = v35;
  uint64_t v75 = v36;
  swift_getOpaqueTypeConformance2();
  uint64_t v39 = v59;
  sub_1BE06FF30();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v34);
  uint64_t v40 = v61;
  uint64_t v41 = v63;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v13, v39, v63);
  *(_WORD *)&v13[*(int *)(v58 + 36)] = 257;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v41);
  char v42 = v68;
  sub_1BE06F550();
  uint64_t v43 = swift_getKeyPath();
  uint64_t v44 = (uint64_t)v67;
  uint64_t v45 = (uint64_t *)&v67[*(int *)(v33 + 36)];
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1408);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))((char *)v45 + *(int *)(v46 + 28), v42, v31);
  *uint64_t v45 = v43;
  sub_1BDF86808((uint64_t)v13, v44, &qword_1EA0E12B0);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v42, v31);
  sub_1BDF8686C((uint64_t)v13, &qword_1EA0E12B0);
  uint64_t v47 = v66;
  if (v66)
  {
    uint64_t v48 = v52;
    sub_1BDF86808(v44, v52, &qword_1EA0E48A8);
    uint64_t v49 = v71;
    *(void *)(v48 + *(int *)(v70 + 36)) = v47;
    sub_1BDF86808(v48, v49, &qword_1EA0E48A0);
    swift_storeEnumTagMultiPayload();
    sub_1BE02CE18();
    sub_1BE02CEB8();
    swift_retain();
    sub_1BE06F8E0();
    sub_1BDF8686C(v48, &qword_1EA0E48A0);
  }
  else
  {
    sub_1BDF86808(v44, v71, &qword_1EA0E48A8);
    swift_storeEnumTagMultiPayload();
    sub_1BE02CE18();
    sub_1BE02CEB8();
    sub_1BE06F8E0();
  }
  return sub_1BDF8686C(v44, &qword_1EA0E48A8);
}

uint64_t CUIKDateView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v31 = a1;
  uint64_t v28 = sub_1BE06F9B0();
  uint64_t v3 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CUIKDateView();
  uint64_t v7 = v6 - 8;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E15A8);
  uint64_t v11 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1708);
  MEMORY[0x1F4188790](v30);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE02AF40(v2, (uint64_t)v10);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1BE02B134((uint64_t)v10, v17 + v16);
  uint64_t v32 = (uint64_t)sub_1BE02B198;
  uint64_t v33 = v17;
  sub_1BE06F9A0();
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E16D8);
  uint64_t v19 = sub_1BDF86964(&qword_1EA0E16D0, &qword_1EA0E16D8);
  sub_1BE06FE70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v28);
  swift_release();
  uint64_t v32 = sub_1BE025170(*(void *)(v2 + *(int *)(v7 + 32)), *(void *)(v2 + *(int *)(v7 + 32) + 8));
  uint64_t v33 = v20;
  sub_1BDF859F0();
  uint64_t v21 = sub_1BE06FD30();
  uint64_t v23 = v22;
  LOBYTE(v7) = v24 & 1;
  uint64_t v32 = v18;
  uint64_t v33 = v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v29;
  sub_1BE06FE40();
  sub_1BDF8587C(v21, v23, v7);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v25);
  sub_1BE06F490();
  return sub_1BDF8686C((uint64_t)v15, &qword_1EA0E1708);
}

uint64_t sub_1BE028A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = sub_1BE070320();
  a3[1] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E15A0);
  return sub_1BE028A64(a2, a1, (uint64_t)a3 + *(int *)(v7 + 44));
}

uint64_t sub_1BE028A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v92 = a1;
  uint64_t v98 = a3;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E13B8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v81 = (uint64_t)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1230);
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v80 = (uint64_t)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1238);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v97 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  *(void *)&long long v96 = (char *)&v80 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1480);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E12B8);
  uint64_t v13 = MEMORY[0x1F4188790](v89);
  uint64_t v93 = (uint64_t)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v88 = (uint64_t)&v80 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v91 = (char *)&v80 - v17;
  uint64_t v86 = sub_1BE06F3F0();
  uint64_t v18 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v85 = v19;
  uint64_t v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for CUIKDateView();
  uint64_t v84 = *(void *)(v87 - 8);
  uint64_t v21 = *(void *)(v84 + 64);
  MEMORY[0x1F4188790](v87);
  uint64_t v22 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1690);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  uint64_t v90 = (uint64_t)&v80 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v80 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v99 = (uint64_t)&v80 - v29;
  unsigned __int8 v30 = sub_1BE06FA90();
  unsigned __int8 v31 = sub_1BE06FAB0();
  char v32 = sub_1BE06FAA0();
  sub_1BE06FAA0();
  if (sub_1BE06FAA0() != v30) {
    char v32 = sub_1BE06FAA0();
  }
  sub_1BE06FAA0();
  if (sub_1BE06FAA0() != v31) {
    char v32 = sub_1BE06FAA0();
  }
  unsigned char *v28 = v32;
  uint64_t v83 = &v28[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E16B8) + 44)];
  char v101 = &unk_1F1876060;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = v92;
  sub_1BE02AF40(v92, (uint64_t)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v100, v86);
  unint64_t v35 = (*(unsigned __int8 *)(v84 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  unint64_t v36 = (v21 + *(unsigned __int8 *)(v18 + 80) + v35) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1BE02B134((uint64_t)v22, v37 + v35);
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v37 + v36, v20, v34);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1508);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1738);
  sub_1BDF86964(&qword_1EA0E1510, &qword_1EA0E1508);
  sub_1BE02CC2C();
  sub_1BE070260();
  sub_1BDFB8210((uint64_t)v28, v99, &qword_1EA0E1690);
  uint64_t v38 = v33 + *(int *)(v87 + 20);
  if (*(unsigned char *)(v38 + 1) == 1) {
    uint64_t v39 = 0;
  }
  else {
    uint64_t v39 = *(void *)(v38 + 40);
  }
  uint64_t v40 = v96;
  uint64_t v41 = v95;
  uint64_t v42 = (uint64_t)v91;
  *(void *)uint64_t v12 = sub_1BE06F740();
  *((void *)v12 + 1) = v39;
  unsigned char v12[16] = 0;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1200);
  sub_1BE02A000(v33, (uint64_t)&v12[*(int *)(v43 + 44)]);
  sub_1BE06F3E0();
  double v45 = *(double *)(v38 + 16);
  double v46 = *(double *)(v38 + 24) + v44 * 0.5;
  sub_1BE06F3E0();
  double v48 = v45 * v47;
  uint64_t v49 = v88;
  sub_1BDF86808((uint64_t)v12, v88, &qword_1EA0E1480);
  unint64_t v50 = (double *)(v49 + *(int *)(v89 + 36));
  *unint64_t v50 = v46;
  v50[1] = v48;
  sub_1BDF8686C((uint64_t)v12, &qword_1EA0E1480);
  sub_1BDFB8210(v49, v42, &qword_1EA0E12B8);
  uint64_t v51 = 1;
  if (*(unsigned char *)(v38 + 2) == 1)
  {
    uint64_t v52 = *(void *)(v38 + 24);
    uint64_t v53 = *(void *)(v38 + 48);
    uint64_t v54 = *(void *)(v38 + 56);
    uint64_t v55 = *(void *)(v38 + 64);
    char v56 = *(unsigned char *)(v38 + 88);
    uint64_t v57 = *(void *)(v38 + 96);
    uint64_t v58 = *(void *)(v38 + 104);
    uint64_t v59 = *(void *)(v38 + 112);
    uint64_t v60 = *(void *)(v38 + 152);
    uint64_t v61 = *(void *)(v38 + 160);
    uint64_t v62 = *(void *)(v38 + 184);
    uint64_t v63 = *(void *)(v38 + 192);
    LOWORD(v101) = *(_WORD *)v38;
    BYTE2(v101) = 1;
    long long v102 = *(_OWORD *)(v38 + 8);
    uint64_t v103 = v52;
    long long v96 = *(_OWORD *)(v38 + 32);
    long long v104 = v96;
    uint64_t v105 = v53;
    uint64_t v106 = v54;
    uint64_t v107 = v55;
    long long v108 = *(_OWORD *)(v38 + 72);
    char v109 = v56;
    uint64_t v110 = v57;
    uint64_t v111 = v58;
    uint64_t v112 = v59;
    long long v113 = *(_OWORD *)(v38 + 120);
    long long v114 = *(_OWORD *)(v38 + 136);
    uint64_t v115 = v60;
    long long v117 = *(_OWORD *)(v38 + 168);
    uint64_t v116 = v61;
    uint64_t v118 = v62;
    uint64_t v119 = v63;
    long long v120 = *(_OWORD *)(v38 + 200);
    uint64_t v64 = v81;
    sub_1BE027DF0((uint64_t)&v101, v81);
    sub_1BE06F3E0();
    double v66 = v65 * 0.5;
    sub_1BE06F3E0();
    double v68 = v67 * *(double *)&v96;
    uint64_t v69 = v80;
    sub_1BDF86808(v64, v80, &qword_1EA0E13B8);
    uint64_t v70 = (double *)(v69 + *(int *)(v41 + 36));
    *uint64_t v70 = v66;
    v70[1] = v68;
    sub_1BDF8686C(v64, &qword_1EA0E13B8);
    sub_1BDFB8210(v69, v40, &qword_1EA0E1230);
    uint64_t v51 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v40, v51, 1, v41);
  uint64_t v71 = v99;
  uint64_t v72 = v90;
  sub_1BDF86808(v99, v90, &qword_1EA0E1690);
  uint64_t v73 = v42;
  uint64_t v74 = v42;
  uint64_t v75 = v93;
  sub_1BDF86808(v73, v93, &qword_1EA0E12B8);
  uint64_t v76 = v97;
  sub_1BDF86808(v40, v97, &qword_1EA0E1238);
  uint64_t v77 = v98;
  sub_1BDF86808(v72, v98, &qword_1EA0E1690);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1698);
  sub_1BDF86808(v75, v77 + *(int *)(v78 + 48), &qword_1EA0E12B8);
  sub_1BDF86808(v76, v77 + *(int *)(v78 + 64), &qword_1EA0E1238);
  sub_1BDF8686C(v40, &qword_1EA0E1238);
  sub_1BDF8686C(v74, &qword_1EA0E12B8);
  sub_1BDF8686C(v71, &qword_1EA0E1690);
  sub_1BDF8686C(v76, &qword_1EA0E1238);
  sub_1BDF8686C(v75, &qword_1EA0E12B8);
  return sub_1BDF8686C(v72, &qword_1EA0E1690);
}

uint64_t sub_1BE02943C@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1890);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (double *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v9 = *a1;
  uint64_t v10 = sub_1BE06F730();
  uint64_t v11 = a2 + *(int *)(type metadata accessor for CUIKDateView() + 20);
  double v12 = v9 * *(double *)(v11 + 40);
  *(void *)uint64_t v8 = v10;
  v8[1] = v12;
  *((unsigned char *)v8 + 16) = 0;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E16A8);
  sub_1BE029574(a2, (uint64_t)v8 + *(int *)(v13 + 44));
  sub_1BE06F3E0();
  double v15 = v14 * 0.5;
  double v16 = *(double *)(v11 + 8);
  sub_1BE06F3E0();
  double v18 = v16 * v17;
  sub_1BDF86808((uint64_t)v8, a3, &qword_1EA0E1890);
  uint64_t v19 = (double *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1738) + 36));
  *uint64_t v19 = v15;
  v19[1] = v18;
  return sub_1BDF8686C((uint64_t)v8, &qword_1EA0E1890);
}

uint64_t sub_1BE029574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E17E8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E17D8);
  MEMORY[0x1F4188790](v87);
  uint64_t v91 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1900);
  MEMORY[0x1F4188790](v90);
  double v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1830);
  MEMORY[0x1F4188790](v10);
  double v12 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1800);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  double v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v89 = (uint64_t)&v62 - v17;
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E13B0);
  uint64_t v18 = MEMORY[0x1F4188790](v86);
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v88 = (uint64_t)&v62 - v21;
  uint64_t v22 = a1 + *(int *)(type metadata accessor for CUIKDateView() + 20);
  if (*(unsigned char *)v22)
  {
    __int16 v23 = *(_WORD *)(v22 + 1);
    uint64_t v24 = *(void *)(v22 + 56);
    uint64_t v25 = *(void *)(v22 + 64);
    char v26 = *(unsigned char *)(v22 + 88);
    uint64_t v27 = *(void *)(v22 + 96);
    uint64_t v28 = *(void *)(v22 + 104);
    uint64_t v29 = *(void *)(v22 + 112);
    uint64_t v30 = *(void *)(v22 + 152);
    uint64_t v31 = *(void *)(v22 + 160);
    uint64_t v32 = *(void *)(v22 + 184);
    uint64_t v33 = *(void *)(v22 + 192);
    if (*(unsigned char *)v22 == 1)
    {
      LOBYTE(v92) = 1;
      *(_WORD *)((char *)&v92 + 1) = v23;
      long long v93 = *(_OWORD *)(v22 + 8);
      long long v94 = *(_OWORD *)(v22 + 24);
      long long v95 = *(_OWORD *)(v22 + 40);
      uint64_t v96 = v24;
      uint64_t v97 = v25;
      long long v98 = *(_OWORD *)(v22 + 72);
      char v99 = v26;
      uint64_t v100 = v27;
      uint64_t v101 = v28;
      uint64_t v102 = v29;
      long long v103 = *(_OWORD *)(v22 + 120);
      long long v104 = *(_OWORD *)(v22 + 136);
      uint64_t v105 = v30;
      long long v107 = *(_OWORD *)(v22 + 168);
      uint64_t v106 = v31;
      uint64_t v108 = v32;
      uint64_t v109 = v33;
      long long v110 = *(_OWORD *)(v22 + 200);
      uint64_t v34 = v88;
      sub_1BE027154((uint64_t)&v92, v88);
      sub_1BDF86808(v34, v91, &qword_1EA0E13B0);
      swift_storeEnumTagMultiPayload();
      sub_1BDF86964(&qword_1EA0E18F8, &qword_1EA0E1900);
      sub_1BE02D444();
      sub_1BE06F8E0();
      sub_1BDF86808((uint64_t)v12, (uint64_t)v6, &qword_1EA0E1830);
      swift_storeEnumTagMultiPayload();
      sub_1BE02D3A4();
      sub_1BE02D4E0();
      sub_1BE06F8E0();
      sub_1BDF8686C((uint64_t)v12, &qword_1EA0E1830);
      uint64_t v35 = v34;
      unint64_t v36 = &qword_1EA0E13B0;
    }
    else
    {
      LOBYTE(v92) = 2;
      *(_WORD *)((char *)&v92 + 1) = v23;
      long long v93 = *(_OWORD *)(v22 + 8);
      long long v94 = *(_OWORD *)(v22 + 24);
      long long v95 = *(_OWORD *)(v22 + 40);
      uint64_t v96 = v24;
      uint64_t v97 = v25;
      long long v98 = *(_OWORD *)(v22 + 72);
      char v99 = v26;
      uint64_t v100 = v27;
      uint64_t v101 = v28;
      uint64_t v102 = v29;
      long long v103 = *(_OWORD *)(v22 + 120);
      long long v104 = *(_OWORD *)(v22 + 136);
      uint64_t v105 = v30;
      long long v107 = *(_OWORD *)(v22 + 168);
      uint64_t v106 = v31;
      uint64_t v108 = v32;
      uint64_t v109 = v33;
      long long v110 = *(_OWORD *)(v22 + 200);
      uint64_t v60 = v89;
      sub_1BE026694(&v92, v89);
      sub_1BDF86808(v60, (uint64_t)v6, &qword_1EA0E1800);
      swift_storeEnumTagMultiPayload();
      sub_1BE02D3A4();
      sub_1BE02D4E0();
      sub_1BE06F8E0();
      uint64_t v35 = v60;
      unint64_t v36 = &qword_1EA0E1800;
    }
  }
  else
  {
    uint64_t v82 = v6;
    char v37 = *(unsigned char *)(v22 + 1);
    uint64_t v85 = a2;
    char v38 = *(unsigned char *)(v22 + 2);
    uint64_t v39 = *(void *)(v22 + 8);
    uint64_t v40 = *(void *)(v22 + 16);
    uint64_t v41 = *(void *)(v22 + 24);
    uint64_t v42 = *(void *)(v22 + 32);
    uint64_t v43 = *(void *)(v22 + 40);
    uint64_t v44 = *(void *)(v22 + 48);
    uint64_t v81 = v4;
    uint64_t v46 = *(void *)(v22 + 56);
    uint64_t v45 = *(void *)(v22 + 64);
    uint64_t v84 = v10;
    uint64_t v47 = *(void *)(v22 + 80);
    uint64_t v79 = *(void *)(v22 + 72);
    uint64_t v83 = v13;
    int v78 = *(unsigned __int8 *)(v22 + 88);
    uint64_t v77 = *(void *)(v22 + 96);
    uint64_t v80 = v12;
    uint64_t v48 = *(void *)(v22 + 112);
    uint64_t v76 = *(void *)(v22 + 104);
    uint64_t v75 = v48;
    uint64_t v49 = *(void *)(v22 + 128);
    uint64_t v74 = *(void *)(v22 + 120);
    uint64_t v73 = v49;
    uint64_t v50 = *(void *)(v22 + 144);
    uint64_t v72 = *(void *)(v22 + 136);
    uint64_t v71 = v50;
    uint64_t v70 = *(void *)(v22 + 152);
    uint64_t v69 = *(void *)(v22 + 160);
    uint64_t v51 = *(void *)(v22 + 176);
    uint64_t v68 = *(void *)(v22 + 168);
    uint64_t v67 = v51;
    uint64_t v66 = *(void *)(v22 + 184);
    uint64_t v65 = *(void *)(v22 + 192);
    uint64_t v52 = *(void *)(v22 + 200);
    uint64_t v53 = *(void *)(v22 + 208);
    uint64_t v64 = v52;
    uint64_t v63 = v53;
    LOBYTE(v92) = 0;
    BYTE1(v92) = v37;
    char v54 = v37;
    BYTE2(v92) = v38;
    *(void *)&long long v93 = v39;
    *((void *)&v93 + 1) = v40;
    *(void *)&long long v94 = v41;
    *((void *)&v94 + 1) = v42;
    *(void *)&long long v95 = v43;
    *((void *)&v95 + 1) = v44;
    uint64_t v96 = v46;
    uint64_t v97 = v45;
    uint64_t v55 = v45;
    *(void *)&long long v98 = v79;
    *((void *)&v98 + 1) = v47;
    char v99 = v78;
    uint64_t v100 = v77;
    uint64_t v101 = v76;
    uint64_t v102 = v48;
    *(void *)&long long v103 = v74;
    *((void *)&v103 + 1) = v49;
    *(void *)&long long v104 = v72;
    *((void *)&v104 + 1) = v50;
    uint64_t v105 = v70;
    uint64_t v106 = v69;
    *(void *)&long long v107 = v68;
    *((void *)&v107 + 1) = v51;
    uint64_t v108 = v66;
    uint64_t v109 = v65;
    *(void *)&long long v110 = v52;
    *((void *)&v110 + 1) = v53;
    uint64_t v56 = v88;
    sub_1BE027154((uint64_t)&v92, v88);
    LOBYTE(v92) = 0;
    BYTE1(v92) = v54;
    BYTE2(v92) = v38;
    *(void *)&long long v93 = v39;
    *((void *)&v93 + 1) = v40;
    *(void *)&long long v94 = v41;
    *((void *)&v94 + 1) = v42;
    *(void *)&long long v95 = v43;
    *((void *)&v95 + 1) = v44;
    uint64_t v96 = v46;
    uint64_t v97 = v55;
    *(void *)&long long v98 = v79;
    *((void *)&v98 + 1) = v47;
    char v99 = v78;
    uint64_t v100 = v77;
    uint64_t v101 = v76;
    uint64_t v102 = v75;
    *(void *)&long long v103 = v74;
    *((void *)&v103 + 1) = v73;
    *(void *)&long long v104 = v72;
    *((void *)&v104 + 1) = v71;
    uint64_t v105 = v70;
    uint64_t v106 = v69;
    *(void *)&long long v107 = v68;
    *((void *)&v107 + 1) = v67;
    uint64_t v108 = v66;
    uint64_t v109 = v65;
    *(void *)&long long v110 = v64;
    *((void *)&v110 + 1) = v63;
    uint64_t v57 = v89;
    sub_1BE026694(&v92, v89);
    sub_1BDF86808(v56, (uint64_t)v20, &qword_1EA0E13B0);
    sub_1BDF86808(v57, (uint64_t)v16, &qword_1EA0E1800);
    sub_1BDF86808((uint64_t)v20, (uint64_t)v9, &qword_1EA0E13B0);
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E17F0);
    sub_1BDF86808((uint64_t)v16, (uint64_t)&v9[*(int *)(v58 + 48)], &qword_1EA0E1800);
    sub_1BDF8686C((uint64_t)v16, &qword_1EA0E1800);
    sub_1BDF8686C((uint64_t)v20, &qword_1EA0E13B0);
    sub_1BDF86808((uint64_t)v9, v91, &qword_1EA0E1900);
    swift_storeEnumTagMultiPayload();
    sub_1BDF86964(&qword_1EA0E18F8, &qword_1EA0E1900);
    sub_1BE02D444();
    uint64_t v59 = (uint64_t)v80;
    sub_1BE06F8E0();
    sub_1BDF8686C((uint64_t)v9, &qword_1EA0E1900);
    sub_1BDF86808(v59, (uint64_t)v82, &qword_1EA0E1830);
    swift_storeEnumTagMultiPayload();
    sub_1BE02D3A4();
    sub_1BE02D4E0();
    sub_1BE06F8E0();
    sub_1BDF8686C(v59, &qword_1EA0E1830);
    sub_1BDF8686C(v57, &qword_1EA0E1800);
    uint64_t v35 = v56;
    unint64_t v36 = &qword_1EA0E13B0;
  }
  return sub_1BDF8686C(v35, v36);
}

uint64_t sub_1BE02A000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E14D0);
  MEMORY[0x1F4188790](v4);
  uint64_t v125 = (uint64_t)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E13B8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v121 = (uint64_t)&v105 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1240);
  uint64_t v8 = MEMORY[0x1F4188790](v120);
  uint64_t v123 = (uint64_t)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v124 = (uint64_t)&v105 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E13A0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v105 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1398);
  MEMORY[0x1F4188790](v127);
  uint64_t v129 = (uint64_t)&v105 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E14C0);
  MEMORY[0x1F4188790](v128);
  uint64_t v122 = (uint64_t)&v105 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E13C8);
  MEMORY[0x1F4188790](v16);
  char v130 = (char *)&v105 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E13B0);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1228);
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v105 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v119 = (uint64_t)&v105 - v25;
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1318);
  uint64_t v26 = MEMORY[0x1F4188790](v131);
  uint64_t v126 = (uint64_t)&v105 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v105 - v28;
  uint64_t v30 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for CUIKDateView() + 20));
  if (v30[1])
  {
    if (v30[1] != 1)
    {
      unsigned __int8 v93 = v30[2];
      uint64_t v94 = *((void *)v30 + 7);
      uint64_t v95 = *((void *)v30 + 8);
      unsigned __int8 v96 = v30[88];
      uint64_t v97 = *((void *)v30 + 12);
      uint64_t v98 = *((void *)v30 + 13);
      uint64_t v99 = *((void *)v30 + 14);
      uint64_t v100 = *((void *)v30 + 19);
      uint64_t v101 = *((void *)v30 + 20);
      uint64_t v102 = *((void *)v30 + 23);
      uint64_t v103 = *((void *)v30 + 24);
      char v133 = *v30;
      char v134 = 2;
      unsigned __int8 v135 = v93;
      long long v136 = *(_OWORD *)(v30 + 8);
      long long v137 = *(_OWORD *)(v30 + 24);
      long long v138 = *(_OWORD *)(v30 + 40);
      uint64_t v139 = v94;
      uint64_t v140 = v95;
      long long v141 = *(_OWORD *)(v30 + 72);
      unsigned __int8 v142 = v96;
      uint64_t v143 = v97;
      uint64_t v144 = v98;
      uint64_t v145 = v99;
      long long v146 = *(_OWORD *)(v30 + 120);
      long long v147 = *(_OWORD *)(v30 + 136);
      uint64_t v148 = v100;
      long long v150 = *(_OWORD *)(v30 + 168);
      uint64_t v149 = v101;
      uint64_t v151 = v102;
      uint64_t v152 = v103;
      long long v153 = *(_OWORD *)(v30 + 200);
      sub_1BE0263A4((uint64_t)&v133, (uint64_t)v29);
      sub_1BDF86808((uint64_t)v29, (uint64_t)v13, &qword_1EA0E1318);
      swift_storeEnumTagMultiPayload();
      sub_1BE02D044();
      sub_1BE02D104();
      sub_1BE06F8E0();
      return sub_1BDF8686C((uint64_t)v29, &qword_1EA0E1318);
    }
    uint64_t v116 = v11;
    LODWORD(v122) = *v30;
    uint64_t v118 = a2;
    unsigned __int8 v31 = v30[2];
    uint64_t v32 = *((void *)v30 + 1);
    uint64_t v33 = *((void *)v30 + 2);
    uint64_t v34 = *((void *)v30 + 3);
    uint64_t v35 = *((void *)v30 + 4);
    uint64_t v36 = *((void *)v30 + 5);
    uint64_t v119 = *((void *)v30 + 6);
    uint64_t v38 = *((void *)v30 + 7);
    uint64_t v37 = *((void *)v30 + 8);
    uint64_t v39 = *((void *)v30 + 9);
    uint64_t v113 = *((void *)v30 + 10);
    uint64_t v115 = v13;
    unsigned __int8 v40 = v30[88];
    uint64_t v112 = *((void *)v30 + 12);
    uint64_t v42 = *((void *)v30 + 13);
    uint64_t v41 = *((void *)v30 + 14);
    uint64_t v117 = v16;
    uint64_t v43 = *((void *)v30 + 16);
    uint64_t v111 = *((void *)v30 + 15);
    uint64_t v110 = v43;
    uint64_t v44 = *((void *)v30 + 18);
    uint64_t v109 = *((void *)v30 + 17);
    uint64_t v45 = *((void *)v30 + 19);
    char v132 = v29;
    uint64_t v46 = *((void *)v30 + 20);
    uint64_t v47 = *((void *)v30 + 22);
    uint64_t v108 = *((void *)v30 + 21);
    uint64_t v107 = v47;
    uint64_t v48 = *((void *)v30 + 23);
    uint64_t v106 = *((void *)v30 + 24);
    uint64_t v114 = v4;
    uint64_t v49 = *((void *)v30 + 25);
    uint64_t v105 = *((void *)v30 + 26);
    char v133 = v122;
    char v134 = 1;
    unsigned __int8 v135 = v31;
    *(void *)&long long v136 = v32;
    *((void *)&v136 + 1) = v33;
    *(void *)&long long v137 = v34;
    *((void *)&v137 + 1) = v35;
    *(void *)&long long v138 = v36;
    *((void *)&v138 + 1) = v119;
    uint64_t v139 = v38;
    uint64_t v140 = v37;
    uint64_t v50 = v37;
    *(void *)&long long v141 = v39;
    *((void *)&v141 + 1) = v113;
    unsigned __int8 v142 = v40;
    unsigned __int8 v51 = v40;
    uint64_t v143 = v112;
    uint64_t v144 = v42;
    uint64_t v145 = v41;
    uint64_t v52 = v41;
    *(void *)&long long v146 = v111;
    *((void *)&v146 + 1) = v43;
    *(void *)&long long v147 = v109;
    *((void *)&v147 + 1) = v44;
    uint64_t v148 = v45;
    uint64_t v149 = v46;
    *(void *)&long long v150 = v108;
    *((void *)&v150 + 1) = v47;
    uint64_t v151 = v48;
    uint64_t v152 = v106;
    *(void *)&long long v153 = v49;
    *((void *)&v153 + 1) = v105;
    sub_1BE0263A4((uint64_t)&v133, (uint64_t)v132);
    char v133 = v122;
    char v134 = 1;
    unsigned __int8 v135 = v31;
    *(void *)&long long v136 = v32;
    *((void *)&v136 + 1) = v33;
    *(void *)&long long v137 = v34;
    *((void *)&v137 + 1) = v35;
    *(void *)&long long v138 = v36;
    *((void *)&v138 + 1) = v119;
    uint64_t v139 = v38;
    uint64_t v140 = v50;
    *(void *)&long long v141 = v39;
    *((void *)&v141 + 1) = v113;
    unsigned __int8 v142 = v51;
    uint64_t v143 = v112;
    uint64_t v144 = v42;
    uint64_t v145 = v52;
    *(void *)&long long v146 = v111;
    *((void *)&v146 + 1) = v110;
    *(void *)&long long v147 = v109;
    *((void *)&v147 + 1) = v44;
    uint64_t v148 = v45;
    uint64_t v149 = v46;
    uint64_t v53 = (uint64_t)v132;
    *(void *)&long long v150 = v108;
    *((void *)&v150 + 1) = v107;
    uint64_t v151 = v48;
    uint64_t v152 = v106;
    *(void *)&long long v153 = v49;
    *((void *)&v153 + 1) = v105;
    uint64_t v54 = v121;
    sub_1BE027DF0((uint64_t)&v133, v121);
    uint64_t v55 = v123;
    sub_1BDF86808(v54, v123, &qword_1EA0E13B8);
    uint64_t v56 = (void *)(v55 + *(int *)(v120 + 36));
    *uint64_t v56 = v44;
    v56[1] = v45;
    sub_1BDF8686C(v54, &qword_1EA0E13B8);
    uint64_t v57 = &qword_1EA0E1240;
    uint64_t v58 = v124;
    sub_1BDFB8210(v55, v124, &qword_1EA0E1240);
    uint64_t v29 = (char *)v53;
    uint64_t v59 = v126;
    sub_1BDF86808(v53, v126, &qword_1EA0E1318);
    sub_1BDF86808(v58, v55, &qword_1EA0E1240);
    uint64_t v60 = v125;
    sub_1BDF86808(v59, v125, &qword_1EA0E1318);
    uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E48C0);
    sub_1BDF86808(v55, v60 + *(int *)(v61 + 48), &qword_1EA0E1240);
    sub_1BDF8686C(v55, &qword_1EA0E1240);
    sub_1BDF8686C(v59, &qword_1EA0E1318);
    sub_1BDF86808(v60, v129, &qword_1EA0E14D0);
    swift_storeEnumTagMultiPayload();
    sub_1BDF86964(&qword_1EA0E14B8, &qword_1EA0E14C0);
    sub_1BDF86964(&qword_1EA0E14C8, &qword_1EA0E14D0);
    uint64_t v62 = (uint64_t)v130;
    sub_1BE06F8E0();
    sub_1BDF8686C(v60, &qword_1EA0E14D0);
    sub_1BDF86808(v62, (uint64_t)v115, &qword_1EA0E13C8);
    swift_storeEnumTagMultiPayload();
    sub_1BE02D044();
    sub_1BE02D104();
    sub_1BE06F8E0();
    uint64_t v63 = v62;
  }
  else
  {
    uint64_t v116 = v11;
    LODWORD(v125) = *v30;
    unsigned __int8 v64 = v30[2];
    uint64_t v65 = *((void *)v30 + 1);
    uint64_t v66 = *((void *)v30 + 2);
    uint64_t v67 = *((void *)v30 + 3);
    uint64_t v68 = *((void *)v30 + 4);
    uint64_t v69 = *((void *)v30 + 5);
    uint64_t v124 = *((void *)v30 + 6);
    uint64_t v117 = v16;
    uint64_t v70 = *((void *)v30 + 7);
    uint64_t v71 = *((void *)v30 + 8);
    uint64_t v114 = v4;
    uint64_t v72 = *((void *)v30 + 9);
    uint64_t v123 = *((void *)v30 + 10);
    char v132 = v29;
    unsigned __int8 v73 = v30[88];
    uint64_t v121 = *((void *)v30 + 12);
    uint64_t v118 = a2;
    uint64_t v74 = *((void *)v30 + 13);
    uint64_t v75 = *((void *)v30 + 14);
    uint64_t v115 = v13;
    uint64_t v76 = *((void *)v30 + 16);
    uint64_t v120 = *((void *)v30 + 15);
    uint64_t v113 = v76;
    uint64_t v77 = *((void *)v30 + 18);
    uint64_t v112 = *((void *)v30 + 17);
    uint64_t v78 = *((void *)v30 + 19);
    uint64_t v111 = *((void *)v30 + 20);
    uint64_t v79 = *((void *)v30 + 22);
    uint64_t v110 = *((void *)v30 + 21);
    uint64_t v109 = v79;
    uint64_t v108 = *((void *)v30 + 23);
    uint64_t v107 = *((void *)v30 + 24);
    uint64_t v81 = *((void *)v30 + 25);
    uint64_t v80 = *((void *)v30 + 26);
    uint64_t v106 = v81;
    uint64_t v105 = v80;
    char v133 = v125;
    char v134 = 0;
    unsigned __int8 v135 = v64;
    unsigned __int8 v82 = v64;
    *(void *)&long long v136 = v65;
    *((void *)&v136 + 1) = v66;
    *(void *)&long long v137 = v67;
    *((void *)&v137 + 1) = v68;
    *(void *)&long long v138 = v69;
    *((void *)&v138 + 1) = v124;
    uint64_t v139 = v70;
    uint64_t v83 = v70;
    uint64_t v140 = v71;
    uint64_t v84 = v71;
    *(void *)&long long v141 = v72;
    *((void *)&v141 + 1) = v123;
    unsigned __int8 v142 = v73;
    uint64_t v143 = v121;
    uint64_t v144 = v74;
    uint64_t v85 = v74;
    uint64_t v145 = v75;
    *(void *)&long long v146 = v120;
    *((void *)&v146 + 1) = v76;
    *(void *)&long long v147 = v112;
    *((void *)&v147 + 1) = v77;
    uint64_t v148 = v78;
    uint64_t v149 = v111;
    *(void *)&long long v150 = v110;
    *((void *)&v150 + 1) = v79;
    uint64_t v151 = v108;
    uint64_t v152 = v107;
    *(void *)&long long v153 = v81;
    *((void *)&v153 + 1) = v80;
    sub_1BE0263A4((uint64_t)&v133, (uint64_t)v132);
    char v133 = v125;
    char v134 = 0;
    unsigned __int8 v135 = v82;
    *(void *)&long long v136 = v65;
    *((void *)&v136 + 1) = v66;
    *(void *)&long long v137 = v67;
    *((void *)&v137 + 1) = v68;
    *(void *)&long long v138 = v69;
    *((void *)&v138 + 1) = v124;
    uint64_t v139 = v83;
    uint64_t v140 = v84;
    *(void *)&long long v141 = v72;
    *((void *)&v141 + 1) = v123;
    unsigned __int8 v142 = v73;
    uint64_t v86 = (uint64_t)v132;
    uint64_t v143 = v121;
    uint64_t v144 = v85;
    uint64_t v145 = v75;
    *(void *)&long long v146 = v120;
    *((void *)&v146 + 1) = v113;
    *(void *)&long long v147 = v112;
    *((void *)&v147 + 1) = v77;
    uint64_t v148 = v78;
    uint64_t v149 = v111;
    *(void *)&long long v150 = v110;
    *((void *)&v150 + 1) = v109;
    uint64_t v151 = v108;
    uint64_t v152 = v107;
    *(void *)&long long v153 = v106;
    *((void *)&v153 + 1) = v105;
    sub_1BE027154((uint64_t)&v133, (uint64_t)v20);
    sub_1BDF86808((uint64_t)v20, (uint64_t)v24, &qword_1EA0E13B0);
    uint64_t v87 = &v24[*(int *)(v21 + 36)];
    *(void *)uint64_t v87 = v77;
    *((void *)v87 + 1) = v78;
    sub_1BDF8686C((uint64_t)v20, &qword_1EA0E13B0);
    uint64_t v57 = &qword_1EA0E1228;
    uint64_t v58 = v119;
    sub_1BDFB8210((uint64_t)v24, v119, &qword_1EA0E1228);
    uint64_t v29 = (char *)v86;
    uint64_t v88 = v86;
    uint64_t v89 = v126;
    sub_1BDF86808(v88, v126, &qword_1EA0E1318);
    sub_1BDF86808(v58, (uint64_t)v24, &qword_1EA0E1228);
    uint64_t v90 = v122;
    sub_1BDF86808(v89, v122, &qword_1EA0E1318);
    uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E48C8);
    sub_1BDF86808((uint64_t)v24, v90 + *(int *)(v91 + 48), &qword_1EA0E1228);
    sub_1BDF8686C((uint64_t)v24, &qword_1EA0E1228);
    sub_1BDF8686C(v89, &qword_1EA0E1318);
    sub_1BDF86808(v90, v129, &qword_1EA0E14C0);
    swift_storeEnumTagMultiPayload();
    sub_1BDF86964(&qword_1EA0E14B8, &qword_1EA0E14C0);
    sub_1BDF86964(&qword_1EA0E14C8, &qword_1EA0E14D0);
    uint64_t v92 = (uint64_t)v130;
    sub_1BE06F8E0();
    sub_1BDF8686C(v90, &qword_1EA0E14C0);
    sub_1BDF86808(v92, (uint64_t)v115, &qword_1EA0E13C8);
    swift_storeEnumTagMultiPayload();
    sub_1BE02D044();
    sub_1BE02D104();
    sub_1BE06F8E0();
    uint64_t v63 = v92;
  }
  sub_1BDF8686C(v63, &qword_1EA0E13C8);
  sub_1BDF8686C(v58, v57);
  return sub_1BDF8686C((uint64_t)v29, &qword_1EA0E1318);
}

uint64_t sub_1BE02AF40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CUIKDateView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE02AFA4()
{
  uint64_t v1 = (int *)(type metadata accessor for CUIKDateView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  uint64_t v5 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1BE06F100();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1BE02B134(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CUIKDateView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE02B198@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CUIKDateView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1BE028A0C(a1, v6, a2);
}

unint64_t sub_1BE02B21C()
{
  unint64_t result = qword_1EA0E4880;
  if (!qword_1EA0E4880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4880);
  }
  return result;
}

unint64_t sub_1BE02B274()
{
  unint64_t result = qword_1EA0E4888;
  if (!qword_1EA0E4888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4888);
  }
  return result;
}

unint64_t sub_1BE02B2CC()
{
  unint64_t result = qword_1EA0E4890;
  if (!qword_1EA0E4890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4890);
  }
  return result;
}

uint64_t sub_1BE02B320()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for CUIKDateView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1BE06EEE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *uint64_t v10 = *v11;
    *(_WORD *)(v10 + 1) = *(_WORD *)(v11 + 1);
    *(_OWORD *)(v10 + 8) = *(_OWORD *)(v11 + 8);
    *(_OWORD *)(v10 + 24) = *(_OWORD *)(v11 + 24);
    *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
    uint64_t v12 = *((void *)v11 + 8);
    *((void *)v10 + 7) = *((void *)v11 + 7);
    *((void *)v10 + 8) = v12;
    *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
    v10[88] = v11[88];
    *((_OWORD *)v10 + 6) = *((_OWORD *)v11 + 6);
    *((void *)v10 + 14) = *((void *)v11 + 14);
    *(_OWORD *)(v10 + 120) = *(_OWORD *)(v11 + 120);
    *(_OWORD *)(v10 + 136) = *(_OWORD *)(v11 + 136);
    uint64_t v13 = *((void *)v11 + 20);
    *((void *)v10 + 19) = *((void *)v11 + 19);
    *((void *)v10 + 20) = v13;
    *(_OWORD *)(v10 + 168) = *(_OWORD *)(v11 + 168);
    *((void *)v10 + 23) = *((void *)v11 + 23);
    *((_OWORD *)v10 + 12) = *((_OWORD *)v11 + 12);
    *((void *)v10 + 26) = *((void *)v11 + 26);
    uint64_t v14 = (uint64_t *)((char *)a1 + v9);
    uint64_t v15 = (uint64_t *)((char *)a2 + v9);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = a3[7];
    uint64_t v19 = (uint64_t *)((char *)a2 + v18);
    uint64_t v20 = (uint64_t *)((char *)a1 + v18);
    *uint64_t v14 = v16;
    v14[1] = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_1BE06F100();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v20, v19, v21);
    }
    else
    {
      *uint64_t v20 = *v19;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for CUIKDateView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1BE06F100();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for CUIKDateView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  *(_WORD *)(v9 + 1) = *(_WORD *)(v10 + 1);
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
  uint64_t v11 = *(void *)(v10 + 64);
  *(void *)(v9 + 56) = *(void *)(v10 + 56);
  *(void *)(v9 + 64) = v11;
  *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
  *(unsigned char *)(v9 + 88) = *(unsigned char *)(v10 + 88);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v10 + 96);
  *(void *)(v9 + 112) = *(void *)(v10 + 112);
  *(_OWORD *)(v9 + 120) = *(_OWORD *)(v10 + 120);
  *(_OWORD *)(v9 + 136) = *(_OWORD *)(v10 + 136);
  uint64_t v12 = *(void *)(v10 + 160);
  *(void *)(v9 + 152) = *(void *)(v10 + 152);
  *(void *)(v9 + 160) = v12;
  *(_OWORD *)(v9 + 168) = *(_OWORD *)(v10 + 168);
  *(void *)(v9 + 184) = *(void *)(v10 + 184);
  *(_OWORD *)(v9 + 192) = *(_OWORD *)(v10 + 192);
  *(void *)(v9 + 208) = *(void *)(v10 + 208);
  uint64_t v13 = (void *)(a1 + v8);
  uint64_t v14 = (uint64_t *)(a2 + v8);
  uint64_t v15 = *v14;
  uint64_t v16 = v14[1];
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a2 + v17);
  uint64_t v19 = (void *)(a1 + v17);
  *uint64_t v13 = v15;
  v13[1] = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = sub_1BE06F100();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v19, v18, v20);
  }
  else
  {
    *uint64_t v19 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for CUIKDateView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(v8 + 1) = *(unsigned char *)(a2 + v7 + 1);
  *(unsigned char *)(v8 + 2) = *(unsigned char *)(a2 + v7 + 2);
  *(void *)(v8 + 8) = *(void *)(a2 + v7 + 8);
  *(void *)(v8 + 16) = *(void *)(a2 + v7 + 16);
  *(void *)(v8 + 24) = *(void *)(a2 + v7 + 24);
  *(void *)(v8 + 32) = *(void *)(a2 + v7 + 32);
  *(void *)(v8 + 40) = *(void *)(a2 + v7 + 40);
  *(void *)(v8 + 48) = *(void *)(a2 + v7 + 48);
  *(void *)(v8 + 56) = *(void *)(a2 + v7 + 56);
  *(void *)(v8 + 64) = *(void *)(a2 + v7 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 72) = *(void *)(v9 + 72);
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(v9 + 88);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  *(void *)(v8 + 112) = *(void *)(v9 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 120) = *(void *)(v9 + 120);
  *(void *)(v8 + 128) = *(void *)(v9 + 128);
  *(void *)(v8 + 136) = *(void *)(v9 + 136);
  *(void *)(v8 + 144) = *(void *)(v9 + 144);
  *(void *)(v8 + 152) = *(void *)(v9 + 152);
  *(void *)(v8 + 160) = *(void *)(v9 + 160);
  swift_retain();
  swift_release();
  *(void *)(v8 + 168) = *(void *)(v9 + 168);
  *(void *)(v8 + 176) = *(void *)(v9 + 176);
  *(void *)(v8 + 184) = *(void *)(v9 + 184);
  swift_retain();
  swift_release();
  *(void *)(v8 + 192) = *(void *)(v9 + 192);
  *(void *)(v8 + 200) = *(void *)(v9 + 200);
  *(void *)(v8 + 208) = *(void *)(v9 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v13 = a3[7];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (void *)(a2 + v13);
    sub_1BDF8686C(a1 + v13, &qword_1EA0E11D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_1BE06F100();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *uint64_t v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for CUIKDateView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = (long long *)(a2 + v7);
  *(void *)(v9 + 208) = *((void *)v10 + 26);
  long long v11 = v10[5];
  *(_OWORD *)(v9 + 64) = v10[4];
  *(_OWORD *)(v9 + 80) = v11;
  long long v12 = v10[3];
  *(_OWORD *)(v9 + 32) = v10[2];
  *(_OWORD *)(v9 + 48) = v12;
  long long v13 = v10[9];
  *(_OWORD *)(v9 + 128) = v10[8];
  *(_OWORD *)(v9 + 144) = v13;
  long long v14 = v10[7];
  *(_OWORD *)(v9 + 96) = v10[6];
  *(_OWORD *)(v9 + 112) = v14;
  long long v15 = v10[12];
  long long v16 = v10[10];
  *(_OWORD *)(v9 + 176) = v10[11];
  *(_OWORD *)(v9 + 192) = v15;
  *(_OWORD *)(v9 + 160) = v16;
  long long v17 = *v10;
  long long v18 = v10[1];
  uint64_t v19 = a3[7];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  *(_OWORD *)uint64_t v9 = v17;
  *(_OWORD *)(v9 + 16) = v18;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = sub_1BE06F100();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for CUIKDateView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)(a2 + v7);
  *(_WORD *)(v8 + 1) = *(_WORD *)(a2 + v7 + 1);
  *(_OWORD *)(v8 + 8) = *(_OWORD *)(a2 + v7 + 8);
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(v8 + 40) = *(_OWORD *)(a2 + v7 + 40);
  uint64_t v10 = *(void *)(a2 + v7 + 64);
  *(void *)(v8 + 56) = *(void *)(a2 + v7 + 56);
  *(void *)(v8 + 64) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 72) = *(_OWORD *)(v9 + 72);
  *(unsigned char *)(v8 + 88) = *(unsigned char *)(v9 + 88);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  uint64_t v11 = *(void *)(v9 + 112);
  *(void *)(v8 + 104) = *(void *)(v9 + 104);
  *(void *)(v8 + 112) = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 120) = *(_OWORD *)(v9 + 120);
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
  *(void *)(v8 + 152) = *(void *)(v9 + 152);
  *(void *)(v8 + 160) = *(void *)(v9 + 160);
  swift_release();
  *(_OWORD *)(v8 + 168) = *(_OWORD *)(v9 + 168);
  *(void *)(v8 + 184) = *(void *)(v9 + 184);
  swift_release();
  *(void *)(v8 + 192) = *(void *)(v9 + 192);
  uint64_t v12 = *(void *)(v9 + 208);
  *(void *)(v8 + 200) = *(void *)(v9 + 200);
  *(void *)(v8 + 208) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[6];
  long long v14 = (void *)(a1 + v13);
  long long v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *long long v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (const void *)(a2 + v18);
    sub_1BDF8686C(a1 + v18, &qword_1EA0E11D0);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_1BE06F100();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for CUIKDateView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BE02BEA8);
}

uint64_t sub_1BE02BEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 64);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3080);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for CUIKDateView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BE02BFF0);
}

uint64_t sub_1BE02BFF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1BE06EEE0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 64) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3080);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_1BE02C124()
{
  sub_1BE06EEE0();
  if (v0 <= 0x3F)
  {
    sub_1BE02C200();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1BE02C200()
{
  if (!qword_1EA0E11D8)
  {
    sub_1BE06F100();
    unint64_t v0 = sub_1BE06F310();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA0E11D8);
    }
  }
}

uint64_t destroy for CUIKDateView.Styling()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CUIKDateView.Styling(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v3 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v3;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  uint64_t v4 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v4;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CUIKDateView.Styling(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_retain();
  swift_release();
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_retain();
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy216_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 192);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for CUIKDateView.Styling(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v5 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_release();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_release();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  uint64_t v6 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CUIKDateView.Styling(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 216)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CUIKDateView.Styling(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 216) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 216) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CUIKDateView.Styling()
{
  return &type metadata for CUIKDateView.Styling;
}

ValueMetadata *type metadata accessor for CUIKDateView.Styling.FirstLineContent()
{
  return &type metadata for CUIKDateView.Styling.FirstLineContent;
}

ValueMetadata *type metadata accessor for CUIKDateView.Styling.VerticalContent()
{
  return &type metadata for CUIKDateView.Styling.VerticalContent;
}

unsigned char *_s13CalendarUIKit12CUIKDateViewV7StylingV16FirstLineContentOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE02C7D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CUIKDateView.Styling.ThirdLineContent()
{
  return &type metadata for CUIKDateView.Styling.ThirdLineContent;
}

unint64_t sub_1BE02C810()
{
  unint64_t result = qword_1EA0E1700;
  if (!qword_1EA0E1700)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1708);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E16D8);
    sub_1BDF86964(&qword_1EA0E16D0, &qword_1EA0E16D8);
    swift_getOpaqueTypeConformance2();
    sub_1BE02D1C8(&qword_1EA0E1440, MEMORY[0x1E4F3DF58]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1700);
  }
  return result;
}

uint64_t sub_1BE02C91C()
{
  uint64_t v1 = (int *)(type metadata accessor for CUIKDateView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v14 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = sub_1BE06F3F0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v3, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v0 + v3 + v1[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E11D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_1BE06F100();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }
  uint64_t v11 = (v3 + v14 + v6) & ~v6;
  uint64_t v12 = v11 + v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v11, v4);

  return MEMORY[0x1F4186498](v0, v12, v2 | v6 | 7);
}

uint64_t sub_1BE02CB48@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for CUIKDateView() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1BE06F3F0();

  return sub_1BE02943C(a1, v2 + v6, a2);
}

unint64_t sub_1BE02CC2C()
{
  unint64_t result = qword_1EA0E1730;
  if (!qword_1EA0E1730)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1738);
    sub_1BDF86964(&qword_1EA0E1888, &qword_1EA0E1890);
    sub_1BE02CCCC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1730);
  }
  return result;
}

unint64_t sub_1BE02CCCC()
{
  unint64_t result = qword_1EA0E1360;
  if (!qword_1EA0E1360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1360);
  }
  return result;
}

uint64_t sub_1BE02CD20(uint64_t a1)
{
  uint64_t v2 = sub_1BE06F560();
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1BE06F5E0();
}

uint64_t sub_1BE02CDF0()
{
  return sub_1BE06F5D0();
}

unint64_t sub_1BE02CE18()
{
  unint64_t result = qword_1EA0E48B0;
  if (!qword_1EA0E48B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E48A0);
    sub_1BE02CEB8();
    sub_1BDF86964(&qword_1EA0E13F0, &qword_1EA0E13F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E48B0);
  }
  return result;
}

unint64_t sub_1BE02CEB8()
{
  unint64_t result = qword_1EA0E48B8;
  if (!qword_1EA0E48B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E48A8);
    sub_1BE02CF58();
    sub_1BDF86964(&qword_1EA0E1400, &qword_1EA0E1408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E48B8);
  }
  return result;
}

unint64_t sub_1BE02CF58()
{
  unint64_t result = qword_1EA0E12A8;
  if (!qword_1EA0E12A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E12B0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1468);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1270);
    sub_1BDF866F8();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E12A8);
  }
  return result;
}

unint64_t sub_1BE02D044()
{
  unint64_t result = qword_1EA0E13C0;
  if (!qword_1EA0E13C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E13C8);
    sub_1BDF86964(&qword_1EA0E14B8, &qword_1EA0E14C0);
    sub_1BDF86964(&qword_1EA0E14C8, &qword_1EA0E14D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E13C0);
  }
  return result;
}

unint64_t sub_1BE02D104()
{
  unint64_t result = qword_1EA0E1310;
  if (!qword_1EA0E1310)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1318);
    sub_1BE02D640(&qword_1EA0E12E0, &qword_1EA0E12E8, (void (*)(void))sub_1BDF866F8);
    sub_1BDF86964(&qword_1EA0E1400, &qword_1EA0E1408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1310);
  }
  return result;
}

uint64_t sub_1BE02D1C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BE02D210()
{
  unint64_t result = qword_1EA0E1278;
  if (!qword_1EA0E1278)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1280);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E12B0);
    sub_1BE02CF58();
    swift_getOpaqueTypeConformance2();
    sub_1BDF86964(&qword_1EA0E1400, &qword_1EA0E1408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1278);
  }
  return result;
}

uint64_t sub_1BE02D2E4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_1BDF86964(a3, a4);
    sub_1BDF86964(&qword_1EA0E13D0, &qword_1EA0E13D8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BE02D3A4()
{
  unint64_t result = qword_1EA0E1828;
  if (!qword_1EA0E1828)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1830);
    sub_1BDF86964(&qword_1EA0E18F8, &qword_1EA0E1900);
    sub_1BE02D444();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1828);
  }
  return result;
}

unint64_t sub_1BE02D444()
{
  unint64_t result = qword_1EA0E13A8;
  if (!qword_1EA0E13A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E13B0);
    sub_1BE02D210();
    sub_1BE02D2E4(&qword_1EA0E12C0, &qword_1EA0E12C8, &qword_1EA0E1488, &qword_1EA0E1490);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E13A8);
  }
  return result;
}

unint64_t sub_1BE02D4E0()
{
  unint64_t result = qword_1EA0E17F8;
  if (!qword_1EA0E17F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1800);
    sub_1BE02D57C();
    sub_1BE02D2E4(&qword_1EA0E1750, &qword_1EA0E1758, &qword_1EA0E18B8, &qword_1EA0E18C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E17F8);
  }
  return result;
}

unint64_t sub_1BE02D57C()
{
  unint64_t result = qword_1EA0E17B0;
  if (!qword_1EA0E17B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E17B8);
    sub_1BE02D640(&qword_1EA0E1788, &qword_1EA0E1790, (void (*)(void))sub_1BE02D6C0);
    sub_1BDF86964(&qword_1EA0E1400, &qword_1EA0E1408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E17B0);
  }
  return result;
}

uint64_t sub_1BE02D640(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BE02D6C0()
{
  unint64_t result = qword_1EA0E1720;
  if (!qword_1EA0E1720)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1728);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1270);
    sub_1BDF866F8();
    swift_getOpaqueTypeConformance2();
    sub_1BDF86964(&qword_1EA0E13E0, &qword_1EA0E13E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1720);
  }
  return result;
}

uint64_t sub_1BE02D7A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v3 - 8);
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (int *)type metadata accessor for FamilyCalendarColorSelectionView();
  uint64_t v5 = (char *)a1 + v4[5];
  type metadata accessor for CreateFamilyCalendarViewModel();
  sub_1BE0320EC(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  *(void *)uint64_t v5 = sub_1BE06F320();
  v5[8] = v6 & 1;
  uint64_t v7 = (uint64_t *)((char *)a1 + v4[6]);
  id v8 = CUIKAppTintColor();
  MEMORY[0x1C1888840](v8);
  sub_1BE070100();
  *uint64_t v7 = v14;
  v7[1] = v15;
  uint64_t v9 = (char *)a1 + v4[7];
  sub_1BE070100();
  *uint64_t v9 = v14;
  *((void *)v9 + 1) = v15;
  uint64_t v10 = (uint64_t *)((char *)a1 + v4[8]);
  sub_1BE070450();
  id v11 = CUIKBundle();
  sub_1BE06EF70();
  uint64_t result = sub_1BE070530();
  *uint64_t v10 = result;
  v10[1] = v13;
  return result;
}

uint64_t type metadata accessor for FamilyCalendarColorSelectionView()
{
  uint64_t result = qword_1EA0E48D0;
  if (!qword_1EA0E48D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1BE02DA1C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1BE06F3D0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    id v11 = (char *)a1 + v9;
    uint64_t v12 = (char *)a2 + v9;
    uint64_t v13 = *(void *)v12;
    LOBYTE(v12) = v12[8];
    *(void *)id v11 = v13;
    v11[8] = (char)v12;
    uint64_t v14 = (uint64_t *)((char *)a1 + v10);
    uint64_t v15 = (uint64_t *)((char *)a2 + v10);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = a3[7];
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)a1 + v17;
    uint64_t v20 = (char *)a2 + v17;
    *uint64_t v19 = *v20;
    *((void *)v19 + 1) = *((void *)v20 + 1);
    uint64_t v21 = (uint64_t *)((char *)a1 + v18);
    uint64_t v22 = (uint64_t *)((char *)a2 + v18);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BE02DBB0(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1BE06F3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_1BE02DC90(void *a1, void *a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1BE06F3D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)a2 + v7;
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  uint64_t v12 = (void *)((char *)a1 + v8);
  uint64_t v13 = (void *)((char *)a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v15;
  uint64_t v18 = (char *)a2 + v15;
  *uint64_t v17 = *v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  uint64_t v19 = (void *)((char *)a1 + v16);
  uint64_t v20 = (void *)((char *)a2 + v16);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1BE02DDD4(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1BDF8686C((uint64_t)a1, &qword_1EA0E2EE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1BE06F3D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  LOBYTE(v9) = v9[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = (char)v9;
  swift_retain();
  swift_release();
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  swift_retain();
  swift_release();
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_retain();
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *uint64_t v15 = *v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_retain();
  swift_release();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1BE02DF74(char *a1, char *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1BE06F3D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  uint64_t v12 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  return a1;
}

char *sub_1BE02E074(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1BDF8686C((uint64_t)a1, &qword_1EA0E2EE0);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1BE06F3D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  swift_release();
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_release();
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *uint64_t v16 = *v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_release();
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BE02E1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BE02E200);
}

uint64_t sub_1BE02E200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1BE02E2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BE02E2D8);
}

uint64_t sub_1BE02E2D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

void sub_1BE02E398()
{
  sub_1BDF989A4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1BE02E444()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BE02E460@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v45 = sub_1BE06F970();
  uint64_t v47 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FamilyCalendarColorSelectionView();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E49E0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  uint64_t v44 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A58);
  uint64_t v42 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v41 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E49D8);
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = *a1;
  long long v54 = *(_OWORD *)(a1 + 1);
  sub_1BDFB8210((uint64_t)(a1 + 3), (uint64_t)v53, &qword_1EA0E3060);
  sub_1BE0313CC(v3, (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = a2;
  long long v22 = *((_OWORD *)a1 + 1);
  *(_OWORD *)(v21 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v21 + 40) = v22;
  *(void *)(v21 + 56) = a1[4];
  sub_1BE031434((uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20);
  uint64_t v49 = a1;
  uint64_t v50 = v3;
  char v51 = a2;
  sub_1BDFCE8E4((uint64_t)&v55);
  sub_1BDFCE910((uint64_t)&v54);
  sub_1BDFCE910((uint64_t)v53);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A60);
  sub_1BDF86964(&qword_1EA0E4A68, &qword_1EA0E4A60);
  sub_1BE070150();
  sub_1BE06F960();
  sub_1BDF86964(&qword_1EA0E49E8, &qword_1EA0E49E0);
  sub_1BE0320EC(&qword_1EA0E3008, MEMORY[0x1E4F3D8A8]);
  uint64_t v23 = v41;
  uint64_t v24 = v43;
  uint64_t v25 = v45;
  sub_1BE06FD90();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v7, v25);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v24);
  id v26 = objc_msgSend(self, sel_cuik_tertiaryGroupedBackgroundColor);
  uint64_t v52 = MEMORY[0x1C1888840](v26);
  swift_retain();
  uint64_t v27 = sub_1BE0701F0();
  uint64_t v28 = v42;
  uint64_t v29 = v46;
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v19, v23, v46);
  swift_release();
  *(void *)&v19[*(int *)(v17 + 44)] = v27;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v29);
  LOBYTE(v10) = sub_1BE06FB00();
  sub_1BE06F2D0();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v38 = v48;
  sub_1BDF86808((uint64_t)v19, v48, &qword_1EA0E49D8);
  uint64_t v39 = v38 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E49B8) + 36);
  *(unsigned char *)uint64_t v39 = v10;
  *(void *)(v39 + 8) = v31;
  *(void *)(v39 + 16) = v33;
  *(void *)(v39 + 24) = v35;
  *(void *)(v39 + 32) = v37;
  *(unsigned char *)(v39 + 40) = 0;
  return sub_1BDF8686C((uint64_t)v19, &qword_1EA0E49D8);
}

uint64_t sub_1BE02E9E4(char a1, uint64_t a2, uint64_t a3)
{
  if (a1) {
    type metadata accessor for FamilyCalendarColorSelectionView();
  }
  else {
    swift_bridgeObjectRetain();
  }
  swift_retain();
  swift_bridgeObjectRetain();
  char v5 = *(unsigned char *)(a3 + *(int *)(type metadata accessor for FamilyCalendarColorSelectionView() + 20) + 8);
  uint64_t v6 = swift_retain();
  sub_1BDFCD744(v6, v5);
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1F4188790](KeyPath);
  sub_1BE0320EC(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BE06F150();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (a1)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32B8);
    sub_1BE070110();
    sub_1BE070120();
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BE02EC4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v13 = *a1;
  long long v12 = *(_OWORD *)(a1 + 1);
  sub_1BDFB8210((uint64_t)(a1 + 3), (uint64_t)v11, &qword_1EA0E3060);
  long long v8 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v8;
  *(void *)(a4 + 32) = a1[4];
  uint64_t v9 = a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A60) + 40);
  sub_1BDFCE8E4((uint64_t)&v13);
  sub_1BDFCE910((uint64_t)&v12);
  sub_1BDFCE910((uint64_t)v11);
  sub_1BDFCE8E4((uint64_t)&v13);
  sub_1BDFCE910((uint64_t)&v12);
  sub_1BDFCE910((uint64_t)v11);
  sub_1BE02ED3C(a2, a1, a3, v9);
  sub_1BDFCE93C((uint64_t)&v13);
  sub_1BDFCE968((uint64_t)&v12);
  uint64_t result = sub_1BDFCE968((uint64_t)v11);
  *(unsigned char *)(a4 + 40) = 1;
  return result;
}

uint64_t sub_1BE02ED3C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v35 = a3;
  uint64_t v37 = a4;
  uint64_t v6 = type metadata accessor for FamilyCalendarColorSelectionView();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  long long v12 = (char *)v34 - v11;
  uint64_t v13 = *(int *)(v10 + 20);
  uint64_t v36 = a1;
  char v14 = *(unsigned char *)(a1 + v13 + 8);
  uint64_t v15 = swift_retain();
  uint64_t v16 = (void *)sub_1BDFCD744(v15, v14);
  swift_release();
  swift_getKeyPath();
  uint64_t v38 = (uint64_t)v16;
  v34[1] = sub_1BE0320EC(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v17 = v16[10];
  uint64_t v19 = v16[11];
  uint64_t v18 = v16[12];
  uint64_t v20 = v16[13];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  if ((sub_1BE06FF80() & 1) == 0) {
    goto LABEL_15;
  }
  BOOL v21 = v17 == a2[1] && v19 == a2[2];
  if (!v21 && (sub_1BE070EF0() & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v22 = a2[4];
  if (!v20)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v25 = v36;
    uint64_t v24 = v37;
    if (!v22) {
      goto LABEL_24;
    }
    goto LABEL_16;
  }
  if (!v22)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v25 = v36;
    uint64_t v24 = v37;
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_16;
  }
  BOOL v23 = v18 == a2[3] && v20 == v22;
  uint64_t v25 = v36;
  uint64_t v24 = v37;
  if (!v23)
  {
    char v26 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v26) {
      goto LABEL_24;
    }
LABEL_16:
    sub_1BE0313CC(v25, (uint64_t)v12);
    sub_1BE0313CC((uint64_t)v12, (uint64_t)v9);
    if (v35)
    {
      char v27 = v9[*(int *)(v6 + 20) + 8];
      uint64_t v28 = swift_retain();
      uint64_t v29 = sub_1BDFCD744(v28, v27);
      swift_release();
      swift_getKeyPath();
      uint64_t v38 = v29;
      sub_1BE06F160();
      swift_release();
      char v30 = *(unsigned char *)(v29 + 64);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_release();
      sub_1BE031FBC((uint64_t)v9);
      sub_1BE031FBC((uint64_t)v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (v30) {
        goto LABEL_25;
      }
    }
    else
    {
      sub_1BE031FBC((uint64_t)v9);
      sub_1BE031FBC((uint64_t)v12);
    }
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v24, 1, 1, v31);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
LABEL_24:
  sub_1BE0313CC(v25, (uint64_t)v12);
  sub_1BE031FBC((uint64_t)v12);
LABEL_25:
  uint64_t v38 = sub_1BE070060();
  sub_1BE06FEB0();
  swift_release();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A70);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v24, 0, 1, v33);
}

uint64_t sub_1BE02F174(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E48F0);
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)uint64_t v4 = sub_1BE06F7D0();
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4938);
  sub_1BE02F310(a1, (uint64_t)&v4[*(int *)(v5 + 44)]);
  uint64_t v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E48F8);
  sub_1BDF86964(&qword_1EA0E4900, &qword_1EA0E48F0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4908);
  uint64_t v7 = sub_1BDF86964(&qword_1EA0E4910, &qword_1EA0E4908);
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  swift_getOpaqueTypeConformance2();
  sub_1BE06FF10();
  return sub_1BDF8686C((uint64_t)v4, &qword_1EA0E48F0);
}

uint64_t sub_1BE02F310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v3 = sub_1BE06F4E0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  uint64_t v61 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4950);
  uint64_t v57 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4958);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v58 = v9;
  uint64_t v59 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4960);
  uint64_t v13 = *(void *)(v56 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v56);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v62 = (char *)&v47 - v17;
  uint64_t v18 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v19 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v53 = sub_1BE070060();
  uint64_t v52 = sub_1BE06FB20();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1BE070450();
  id v20 = CUIKBundle();
  sub_1BE06EF70();
  uint64_t v49 = sub_1BE070530();
  uint64_t v50 = v21;
  int v48 = sub_1BE06FAE0();
  sub_1BE06F2D0();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v63 = v54;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4968);
  sub_1BDF86964(&qword_1EA0E4970, &qword_1EA0E4968);
  sub_1BE06FC30();
  sub_1BE070360();
  uint64_t v30 = sub_1BDF86964(&qword_1EA0E4978, &qword_1EA0E4950);
  uint64_t v31 = sub_1BE0320EC(&qword_1EA0E3020, MEMORY[0x1E4F3CCF0]);
  uint64_t v32 = v12;
  uint64_t v33 = v6;
  uint64_t v34 = v55;
  uint64_t v35 = v60;
  sub_1BE06FF50();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v33, v35);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v8, v34);
  uint64_t v64 = v34;
  uint64_t v65 = v35;
  uint64_t v66 = v30;
  uint64_t v67 = v31;
  swift_getOpaqueTypeConformance2();
  uint64_t v36 = v16;
  uint64_t v47 = v16;
  uint64_t v37 = v58;
  sub_1BE06FEA0();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v37);
  uint64_t v38 = v62;
  uint64_t v39 = v56;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v62, v16, v56);
  unsigned __int8 v40 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v40(v36, v38, v39);
  uint64_t v41 = KeyPath;
  *(void *)a2 = v53;
  *(void *)(a2 + 8) = v41;
  uint64_t v42 = v49;
  *(void *)(a2 + 16) = v52;
  *(void *)(a2 + 24) = v42;
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 32) = v50;
  *(unsigned char *)(a2 + 56) = v48;
  *(void *)(a2 + 64) = v23;
  *(void *)(a2 + 72) = v25;
  *(void *)(a2 + 80) = v27;
  *(void *)(a2 + 88) = v29;
  *(unsigned char *)(a2 + 96) = 0;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4980);
  uint64_t v44 = v47;
  v40((char *)(a2 + *(int *)(v43 + 48)), v47, v39);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v13 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v45(v62, v39);
  v45(v44, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BE02F9DC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4988);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4990);
  MEMORY[0x1F4188790](v67);
  uint64_t v65 = (uint64_t)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4998);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v66 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E49A0) - 8;
  uint64_t v9 = MEMORY[0x1F4188790](v61);
  uint64_t v68 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v60 = (uint64_t)&v57 - v11;
  uint64_t v12 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v59 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v15 = type metadata accessor for FamilyCalendarColorSelectionView();
  uint64_t v16 = v15 - 8;
  uint64_t v17 = *(void *)(v15 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E49A8);
  uint64_t v63 = *(void *)(v19 - 8);
  uint64_t v64 = v19;
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v62 = (char *)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v58 = (char *)&v57 - v22;
  char v23 = *(unsigned char *)(a1 + *(int *)(v16 + 28) + 8);
  uint64_t v24 = swift_retain();
  uint64_t v25 = sub_1BDFCD744(v24, v23);
  swift_release();
  uint64_t v26 = *(void *)(v25 + 56);
  swift_bridgeObjectRetain();
  swift_release();
  *(void *)&long long v70 = v26;
  sub_1BE0313CC(a1, (uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v27 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v28 = swift_allocObject();
  sub_1BE031434((uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v28 + v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E49B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E49B8);
  sub_1BDF86964(&qword_1EA0E49C0, &qword_1EA0E49B0);
  sub_1BE031CA4(&qword_1EA0E49C8, &qword_1EA0E49B8, (void (*)(void))sub_1BE03185C);
  sub_1BE0319A4();
  sub_1BE070270();
  uint64_t v29 = (uint64_t *)(a1 + *(int *)(v16 + 32));
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *(void *)&long long v70 = v31;
  *((void *)&v70 + 1) = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4930);
  sub_1BE070110();
  uint64_t v32 = v73[0];
  uint64_t v57 = v73[0];
  sub_1BE070450();
  id v33 = CUIKBundle();
  sub_1BE06EF70();
  uint64_t v34 = sub_1BE070530();
  uint64_t v59 = (char *)v35;
  v73[0] = v32;
  v73[1] = v34;
  v73[3] = 0;
  v73[4] = 0;
  v73[2] = v35;
  uint64_t v36 = v60;
  sub_1BE02E460(v73, 1, v60);
  uint64_t v37 = sub_1BE070320();
  uint64_t v39 = v38;
  uint64_t v40 = v36 + *(int *)(v61 + 44);
  *(void *)uint64_t v5 = sub_1BE06F740();
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E49F8);
  sub_1BE030134(a1, &v5[*(int *)(v41 + 44)]);
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v42 = v65;
  sub_1BDF86808((uint64_t)v5, v65, &qword_1EA0E4988);
  uint64_t v43 = (_OWORD *)(v42 + *(int *)(v67 + 36));
  long long v44 = v71;
  *uint64_t v43 = v70;
  v43[1] = v44;
  v43[2] = v72;
  sub_1BDF8686C((uint64_t)v5, &qword_1EA0E4988);
  sub_1BE0319F8();
  uint64_t v45 = (uint64_t)v66;
  sub_1BE06FE50();
  sub_1BDF8686C(v42, &qword_1EA0E4990);
  sub_1BDFB8210(v45, v40, &qword_1EA0E4998);
  uint64_t v46 = (uint64_t *)(v40 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A10) + 36));
  *uint64_t v46 = v37;
  v46[1] = v39;
  uint64_t v47 = v62;
  uint64_t v48 = v63;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  uint64_t v50 = v58;
  uint64_t v51 = v64;
  v49(v62, v58, v64);
  uint64_t v52 = v68;
  sub_1BDF86808(v36, v68, &qword_1EA0E49A0);
  uint64_t v53 = v69;
  v49(v69, v47, v51);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A18);
  sub_1BDF86808(v52, (uint64_t)&v53[*(int *)(v54 + 48)], &qword_1EA0E49A0);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BDF8686C(v36, &qword_1EA0E49A0);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v48 + 8);
  v55(v50, v51);
  sub_1BDF8686C(v52, &qword_1EA0E49A0);
  return ((uint64_t (*)(char *, uint64_t))v55)(v47, v51);
}

uint64_t sub_1BE030134@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v56 = a2;
  uint64_t v3 = type metadata accessor for FamilyCalendarColorSelectionView();
  uint64_t v4 = v3 - 8;
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v50 = *(void *)(v51 + 64);
  MEMORY[0x1F4188790](v3);
  uint64_t v49 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A20);
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v53 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v52 = (char *)&v41 - v9;
  uint64_t v10 = (uint64_t *)(a1 + *(int *)(v4 + 32));
  uint64_t v11 = *v10;
  uint64_t v47 = v10[1];
  uint64_t v48 = v11;
  *(void *)&v57[0] = v11;
  *((void *)&v57[0] + 1) = v47;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4930);
  sub_1BE070130();
  uint64_t v44 = *(void *)v73;
  long long v43 = *(_OWORD *)&v73[8];
  uint64_t v12 = a1 + *(int *)(v4 + 36);
  char v13 = *(unsigned char *)v12;
  uint64_t v14 = *(void *)(v12 + 8);
  LOBYTE(v57[0]) = v13;
  *((void *)&v57[0] + 1) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32B8);
  sub_1BE070130();
  uint64_t v42 = *(void *)&v73[8];
  uint64_t v15 = *(void *)v73;
  char v16 = v73[16];
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v17 = v64;
  char v18 = v65;
  uint64_t v19 = v66;
  char v20 = v67;
  uint64_t v21 = v68;
  uint64_t v22 = v69;
  char v23 = sub_1BE06FAF0();
  sub_1BE06F2D0();
  char v72 = v18;
  char v71 = v20;
  char v70 = 0;
  *(void *)&v57[0] = v44;
  *(_OWORD *)((char *)v57 + 8) = v43;
  *((void *)&v57[1] + 1) = v15;
  *(void *)&long long v58 = v42;
  BYTE8(v58) = v16;
  *(void *)&long long v59 = v17;
  BYTE8(v59) = v18;
  *(void *)&long long v60 = v19;
  BYTE8(v60) = v20;
  *(void *)&long long v61 = v21;
  *((void *)&v61 + 1) = v22;
  LOBYTE(v62) = v23;
  *((void *)&v62 + 1) = v24;
  *(void *)&v63[0] = v25;
  *((void *)&v63[0] + 1) = v26;
  *(void *)&v63[1] = v27;
  BYTE8(v63[1]) = 0;
  *(void *)unsigned __int8 v73 = v48;
  *(void *)&v73[8] = v47;
  sub_1BE070110();
  uint64_t v28 = v49;
  sub_1BE0313CC(v45, v49);
  unint64_t v29 = (*(unsigned __int8 *)(v51 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
  uint64_t v30 = swift_allocObject();
  sub_1BE031434(v28, v30 + v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A28);
  sub_1BE031CA4(&qword_1EA0E4A30, &qword_1EA0E4A28, (void (*)(void))sub_1BE031C74);
  sub_1BE031D20();
  uint64_t v31 = v52;
  sub_1BE06FF20();
  swift_release();
  swift_release();
  long long v78 = v62;
  v79[0] = v63[0];
  *(_OWORD *)((char *)v79 + 9) = *(_OWORD *)((char *)v63 + 9);
  long long v74 = v58;
  long long v75 = v59;
  long long v76 = v60;
  long long v77 = v61;
  *(_OWORD *)unsigned __int8 v73 = v57[0];
  *(_OWORD *)&v73[16] = v57[1];
  sub_1BE031D74((uint64_t)v73);
  id v33 = v53;
  uint64_t v32 = v54;
  uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  uint64_t v35 = v31;
  uint64_t v36 = v55;
  v34(v53, v31, v55);
  uint64_t v37 = v56;
  v34(v56, v33, v36);
  uint64_t v38 = &v37[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A50) + 48)];
  *(void *)uint64_t v38 = 0;
  v38[8] = 1;
  uint64_t v39 = *(void (**)(char *, uint64_t))(v32 + 8);
  v39(v35, v36);
  return ((uint64_t (*)(char *, uint64_t))v39)(v33, v36);
}

uint64_t sub_1BE030598(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = *(unsigned char *)(a3 + *(int *)(type metadata accessor for FamilyCalendarColorSelectionView() + 20) + 8);
  uint64_t v4 = swift_retain();
  sub_1BDFCD744(v4, v3);
  swift_release();
  swift_getKeyPath();
  sub_1BE0320EC(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  swift_retain();
  swift_release();
  char v5 = sub_1BE06FF80();
  uint64_t result = swift_release();
  if ((v5 & 1) == 0)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_retain();
    sub_1BDFCD744(v7, v3);
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x1F4188790](KeyPath);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1BE06F150();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1BE0307C4(uint64_t a1)
{
  uint64_t v2 = sub_1BE06F940();
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4908);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BE06F930();
  uint64_t v10 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4940);
  sub_1BE03157C();
  sub_1BE06F340();
  uint64_t v7 = sub_1BDF86964(&qword_1EA0E4910, &qword_1EA0E4908);
  MEMORY[0x1C1888180](v6, v3, v7);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BE030968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v28 = a2;
  uint64_t v27 = sub_1BE06F300();
  uint64_t v2 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FamilyCalendarColorSelectionView();
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v25 + 64);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = sub_1BE06EFC0();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = sub_1BE0704B0();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E32C8);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BE070450();
  id v13 = CUIKBundle();
  sub_1BE06EF70();
  uint64_t v29 = sub_1BE070530();
  uint64_t v30 = v14;
  sub_1BE0313CC(v26, (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v15 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v16 = swift_allocObject();
  sub_1BE031434((uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15);
  sub_1BDF859F0();
  sub_1BE070170();
  uint64_t v17 = v27;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E4F3C600], v27);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4940);
  uint64_t v20 = v28;
  uint64_t v21 = (uint64_t *)(v28 + *(int *)(v19 + 36));
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2CA0);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)v21 + *(int *)(v22 + 28), v4, v17);
  *uint64_t v21 = KeyPath;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v20, v12, v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1BE030D44()
{
  uint64_t v0 = sub_1BE06F3D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFCD954((uint64_t)v3);
  sub_1BE06F3C0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BE030E10(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  sub_1BE0707D0();
  *(void *)(v1 + 48) = sub_1BE0707C0();
  uint64_t v3 = sub_1BE0707B0();
  return MEMORY[0x1F4188298](sub_1BE030EA8, v3, v2);
}

uint64_t sub_1BE030EA8()
{
  uint64_t v1 = v0[5];
  swift_release();
  uint64_t v2 = type metadata accessor for FamilyCalendarColorSelectionView();
  char v3 = *(unsigned char *)(v1 + *(int *)(v2 + 20) + 8);
  uint64_t v4 = swift_retain();
  uint64_t v5 = sub_1BDFCD744(v4, v3);
  swift_release();
  swift_getKeyPath();
  v0[2] = v5;
  sub_1BE0320EC(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v6 = *(void *)(v5 + 72);
  swift_retain();
  swift_release();
  uint64_t v7 = (uint64_t *)(v1 + *(int *)(v2 + 24));
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  v0[2] = v9;
  v0[3] = v8;
  v0[4] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4930);
  sub_1BE070120();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1BE03100C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v32 = sub_1BE070800();
  uint64_t v30 = *(void *)(v32 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v32);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(a1 - 8);
  uint64_t v7 = *(void *)(v28 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E48E0);
  uint64_t v8 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v2;
  v27[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E48E8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E48F0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E48F8);
  uint64_t v13 = sub_1BDF86964(&qword_1EA0E4900, &qword_1EA0E48F0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4908);
  uint64_t v15 = sub_1BDF86964(&qword_1EA0E4910, &qword_1EA0E4908);
  uint64_t v34 = v14;
  uint64_t v35 = v15;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = v11;
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  uint64_t v37 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  sub_1BE06F4C0();
  sub_1BE0313CC(v27[2], (uint64_t)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v17 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v18 = swift_allocObject();
  sub_1BE031434((uint64_t)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + v17);
  sub_1BE0707E0();
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4928);
  uint64_t v20 = v31;
  uint64_t v21 = (char *)(v31 + *(int *)(v19 + 36));
  uint64_t v22 = sub_1BE06F400();
  uint64_t v23 = v30;
  uint64_t v24 = v32;
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(&v21[*(int *)(v22 + 20)], v6, v32);
  *(void *)uint64_t v21 = &unk_1EA0E4920;
  *((void *)v21 + 1) = v18;
  uint64_t v25 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v20, v10, v29);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v25);
}

uint64_t sub_1BE0313C4()
{
  return sub_1BE02F174(*(void *)(v0 + 16));
}

uint64_t sub_1BE0313CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FamilyCalendarColorSelectionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE031434(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FamilyCalendarColorSelectionView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE031498()
{
  uint64_t v2 = *(void *)(type metadata accessor for FamilyCalendarColorSelectionView() - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1BDF9BB60;
  return sub_1BE030E10(v3);
}

uint64_t sub_1BE03156C()
{
  return sub_1BE0307C4(*(void *)(v0 + 16));
}

uint64_t sub_1BE031574@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE030968(*(void *)(v1 + 16), a1);
}

unint64_t sub_1BE03157C()
{
  unint64_t result = qword_1EA0E4948;
  if (!qword_1EA0E4948)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4940);
    sub_1BDF86964(&qword_1EA0E3500, &qword_1EA0E32C8);
    sub_1BDF86964(&qword_1EA0E2CC0, &qword_1EA0E2CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4948);
  }
  return result;
}

uint64_t sub_1BE031644()
{
  type metadata accessor for FamilyCalendarColorSelectionView();

  return sub_1BE030D44();
}

uint64_t sub_1BE0316A4()
{
  return sub_1BE06F580();
}

uint64_t sub_1BE0316C8()
{
  return sub_1BE06F580();
}

uint64_t sub_1BE0316EC(uint64_t a1)
{
  uint64_t v2 = sub_1BE06F300();
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return MEMORY[0x1C1887D90](v4);
}

uint64_t sub_1BE0317C0@<X0>(char *a1@<X8>)
{
  return sub_1BE02F9DC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1BE0317CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for FamilyCalendarColorSelectionView();
  long long v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  uint64_t v7 = *(void *)(a1 + 32);
  return sub_1BE02E460((uint64_t *)v6, 0, a2);
}

unint64_t sub_1BE03185C()
{
  unint64_t result = qword_1EA0E49D0;
  if (!qword_1EA0E49D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E49D8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E49E0);
    sub_1BE06F970();
    sub_1BDF86964(&qword_1EA0E49E8, &qword_1EA0E49E0);
    sub_1BE0320EC(&qword_1EA0E3008, MEMORY[0x1E4F3D8A8]);
    swift_getOpaqueTypeConformance2();
    sub_1BDF86964(&qword_1EA0E2FF8, &qword_1EA0E3000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E49D0);
  }
  return result;
}

unint64_t sub_1BE0319A4()
{
  unint64_t result = qword_1EA0E49F0;
  if (!qword_1EA0E49F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E49F0);
  }
  return result;
}

unint64_t sub_1BE0319F8()
{
  unint64_t result = qword_1EA0E4A00;
  if (!qword_1EA0E4A00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4990);
    sub_1BDF86964(&qword_1EA0E4A08, &qword_1EA0E4988);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4A00);
  }
  return result;
}

uint64_t objectdestroyTm_6()
{
  uint64_t v1 = *(void *)(type metadata accessor for FamilyCalendarColorSelectionView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1BE06F3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1BE031BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for FamilyCalendarColorSelectionView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1BE030598(a1, a2, v6);
}

uint64_t sub_1BE031C74()
{
  return sub_1BE031CA4(&qword_1EA0E4A38, &qword_1EA0E4A40, (void (*)(void))sub_1BDFB97CC);
}

uint64_t sub_1BE031CA4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BE031D20()
{
  unint64_t result = qword_1EA0E4A48;
  if (!qword_1EA0E4A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4A48);
  }
  return result;
}

uint64_t sub_1BE031D74(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BE031DD8()
{
  uint64_t v1 = *(void *)(type metadata accessor for FamilyCalendarColorSelectionView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 64) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1BE06F3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1BE031F48()
{
  uint64_t v1 = *(void *)(type metadata accessor for FamilyCalendarColorSelectionView() - 8);
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1BE02E9E4(v2, v0 + 24, v3);
}

uint64_t sub_1BE031FB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE02EC4C(*(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_1BE031FBC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FamilyCalendarColorSelectionView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BE03201C()
{
  unint64_t result = qword_1EA0E4A78;
  if (!qword_1EA0E4A78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4928);
    sub_1BDF86964(&qword_1EA0E4A80, &qword_1EA0E48E0);
    sub_1BE0320EC(&qword_1EA0E2F60, MEMORY[0x1E4F3C908]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4A78);
  }
  return result;
}

uint64_t sub_1BE0320EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BE032134()
{
  return sub_1BDFCE8C8();
}

id EKSourceConstraintsModelWrapper.canSetAvailability.getter()
{
  return objc_msgSend(*v0, sel_canSetAvailability);
}

id EKSourceConstraintsModelWrapper.eventAvailabilityLimited.getter()
{
  return objc_msgSend(*v0, sel_eventAvailabilityLimited);
}

id EKSourceConstraintsModelWrapper.ekConstraints.getter()
{
  return *v0;
}

uint64_t EKSourceConstraintsModelWrapper.maxAlarmsAllowed.getter()
{
  LODWORD(result) = objc_msgSend(*v0, sel_maxAlarmsAllowed);
  if ((int)result < 0) {
    return -1;
  }
  else {
    return result;
  }
}

id EKSourceConstraintsModelWrapper.requiresOutgoingInvitationsInDefaultCalendar.getter()
{
  return objc_msgSend(*v0, sel_requiresOutgoingInvitationsInDefaultCalendar);
}

id EKSourceConstraintsModelWrapper.eventDurationConstrainedToRecurrenceInterval.getter()
{
  return objc_msgSend(*v0, sel_eventDurationConstrainedToRecurrenceInterval);
}

id EKSourceConstraintsModelWrapper.occurrencesMustOccurOnSeparateDays.getter()
{
  return objc_msgSend(*v0, sel_occurrencesMustOccurOnSeparateDays);
}

id EKSourceConstraintsModelWrapper.supportsPrivateEvents.getter()
{
  return objc_msgSend(*v0, sel_supportsPrivateEvents);
}

id EKSourceConstraintsModelWrapper.supportsAlarmTriggerDates.getter()
{
  return objc_msgSend(*v0, sel_supportsAlarmTriggerDates);
}

id EKSourceConstraintsModelWrapper.requiresOccurrencesConformToRecurrenceRule.getter()
{
  return objc_msgSend(*v0, sel_requiresOccurrencesConformToRecurrenceRule);
}

id EKSourceConstraintsModelWrapper.supportsURLField.getter()
{
  return objc_msgSend(*v0, sel_supportsURLField);
}

id EKSourceConstraintsModelWrapper.supportsFloatingTimeZone.getter()
{
  return objc_msgSend(*v0, sel_supportsFloatingTimeZone);
}

id EKSourceConstraintsModelWrapper.prohibitsMultipleDaysInMonthlyRecurrence.getter()
{
  return objc_msgSend(*v0, sel_prohibitsMultipleDaysInMonthlyRecurrence);
}

id EKSourceConstraintsModelWrapper.prohibitsMultipleMonthsInYearlyRecurrence.getter()
{
  return objc_msgSend(*v0, sel_prohibitsMultipleMonthsInYearlyRecurrence);
}

id EKSourceConstraintsModelWrapper.prohibitsYearlyRecurrenceInterval.getter()
{
  return objc_msgSend(*v0, sel_prohibitsYearlyRecurrenceInterval);
}

id EKSourceConstraintsModelWrapper.supportsStructuredLocations.getter()
{
  return objc_msgSend(*v0, sel_supportsStructuredLocations);
}

uint64_t sub_1BE03237C()
{
  LODWORD(result) = objc_msgSend(*v0, sel_maxAlarmsAllowed);
  if ((int)result < 0) {
    return -1;
  }
  else {
    return result;
  }
}

id sub_1BE0323AC()
{
  return objc_msgSend(*v0, sel_requiresOutgoingInvitationsInDefaultCalendar);
}

id sub_1BE0323D0()
{
  return objc_msgSend(*v0, sel_eventDurationConstrainedToRecurrenceInterval);
}

id sub_1BE0323F4()
{
  return objc_msgSend(*v0, sel_occurrencesMustOccurOnSeparateDays);
}

id sub_1BE032418()
{
  return objc_msgSend(*v0, sel_supportsPrivateEvents);
}

id sub_1BE03243C()
{
  return objc_msgSend(*v0, sel_supportsAlarmTriggerDates);
}

id sub_1BE032460()
{
  return objc_msgSend(*v0, sel_requiresOccurrencesConformToRecurrenceRule);
}

id sub_1BE032484()
{
  return objc_msgSend(*v0, sel_supportsURLField);
}

id sub_1BE0324A8()
{
  return objc_msgSend(*v0, sel_supportsFloatingTimeZone);
}

id sub_1BE0324CC()
{
  return objc_msgSend(*v0, sel_prohibitsMultipleDaysInMonthlyRecurrence);
}

id sub_1BE0324F0()
{
  return objc_msgSend(*v0, sel_prohibitsMultipleMonthsInYearlyRecurrence);
}

id sub_1BE032514()
{
  return objc_msgSend(*v0, sel_prohibitsYearlyRecurrenceInterval);
}

id sub_1BE032538()
{
  return objc_msgSend(*v0, sel_canSetAvailability);
}

id sub_1BE03255C()
{
  return objc_msgSend(*v0, sel_eventAvailabilityLimited);
}

id sub_1BE032580()
{
  return objc_msgSend(*v0, sel_supportsStructuredLocations);
}

ValueMetadata *type metadata accessor for EKSourceConstraintsModelWrapper()
{
  return &type metadata for EKSourceConstraintsModelWrapper;
}

uint64_t sub_1BE0325B4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BE03366C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE032660()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE032740@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(uint64_t a1)@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1BE03366C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F160();
  swift_release();
  uint64_t v5 = *(void *)(v3 + 128);
  uint64_t v4 = *(void *)(v3 + 136);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = sub_1BE034224;
  a2[1] = (uint64_t (*)(uint64_t))v6;
  return swift_retain();
}

uint64_t sub_1BE032818(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  swift_getKeyPath();
  sub_1BE03366C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  swift_retain();
  sub_1BE06F150();
  swift_release();
  return swift_release();
}

uint64_t sub_1BE032934()
{
  return sub_1BE06F660();
}

uint64_t CreateFamilyCalendarFlow.init(completion:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t FamilyCalendarFlow = type metadata accessor for CreateFamilyCalendarFlow();
  uint64_t v7 = FamilyCalendarFlow - 8;
  uint64_t v8 = *(void *)(FamilyCalendarFlow - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](FamilyCalendarFlow);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = (uint64_t *)((char *)a3 + *(int *)(v7 + 28));
  type metadata accessor for CreateFamilyCalendarViewModel();
  swift_allocObject();
  uint64_t v23 = sub_1BDFD7474();
  sub_1BE070100();
  uint64_t v12 = v24;
  uint64_t v13 = v25;
  *uint64_t v11 = v24;
  v11[1] = v13;
  uint64_t v14 = (uint64_t *)((char *)a3 + *(int *)(v7 + 32));
  *uint64_t v14 = a1;
  v14[1] = a2;
  uint64_t v24 = v12;
  uint64_t v25 = v13;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A88);
  sub_1BE070110();
  uint64_t v15 = v23;
  sub_1BE032D3C((uint64_t)a3, (uint64_t)v10);
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1BE032EDC((uint64_t)v10, v17 + v16);
  swift_getKeyPath();
  uint64_t v20 = v15;
  uint64_t v21 = sub_1BE032F40;
  uint64_t v22 = v17;
  uint64_t v24 = v15;
  sub_1BE03366C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06F150();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for CreateFamilyCalendarFlow()
{
  uint64_t result = qword_1EA0E4AF8;
  if (!qword_1EA0E4AF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1BE032C0C()
{
  return sub_1BE06F660();
}

uint64_t sub_1BE032C30(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = a2 & 1;
  uint64_t v6 = sub_1BE06F3D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t FamilyCalendarFlow = type metadata accessor for CreateFamilyCalendarFlow();
  (*(void (**)(uint64_t, uint64_t))(a3 + *(int *)(FamilyCalendarFlow + 24)))(a1, v5);
  sub_1BDFCD954((uint64_t)v9);
  sub_1BE06F3C0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BE032D3C(uint64_t a1, uint64_t a2)
{
  uint64_t FamilyCalendarFlow = type metadata accessor for CreateFamilyCalendarFlow();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(FamilyCalendarFlow - 8) + 16))(a2, a1, FamilyCalendarFlow);
  return a2;
}

uint64_t sub_1BE032DA0()
{
  uint64_t v1 = *(void *)(type metadata accessor for CreateFamilyCalendarFlow() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_1BE06F3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, v3 + v4, v2 | 7);
}

uint64_t sub_1BE032EDC(uint64_t a1, uint64_t a2)
{
  uint64_t FamilyCalendarFlow = type metadata accessor for CreateFamilyCalendarFlow();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(FamilyCalendarFlow - 8) + 32))(a2, a1, FamilyCalendarFlow);
  return a2;
}

uint64_t sub_1BE032F40(uint64_t a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for CreateFamilyCalendarFlow() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1BE032C30(a1, v4, v6);
}

uint64_t sub_1BE032FC8()
{
  return sub_1BDFD7438(v0[2], v0[3], v0[4]);
}

uint64_t CreateFamilyCalendarFlow.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A90);
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v29 = v2;
  MEMORY[0x1F4188790](v2);
  char v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A98);
  MEMORY[0x1F4188790](v27);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (ValueMetadata **)(v1 + *(int *)(type metadata accessor for CreateFamilyCalendarFlow() + 20));
  uint64_t v8 = *v7;
  uint64_t v25 = v7[1];
  uint64_t v26 = v8;
  uint64_t v39 = v8;
  *(void *)&long long v40 = v25;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4A88);
  sub_1BE070130();
  uint64_t v9 = v31;
  uint64_t v10 = v32;
  uint64_t v11 = v33;
  swift_getKeyPath();
  uint64_t v31 = v9;
  uint64_t v32 = v10;
  uint64_t v33 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4AA0);
  sub_1BE070220();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v37 = v39;
  long long v38 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4AA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4AB0);
  sub_1BDF86964(&qword_1EA0E4AB8, &qword_1EA0E4AA8);
  sub_1BDF86964(&qword_1EA0E4AC0, &qword_1EA0E4AA8);
  sub_1BDF86964(&qword_1EA0E4AC8, &qword_1EA0E4AA8);
  uint64_t FamilyCalendarShareeView = type metadata accessor for CreateFamilyCalendarShareeView();
  unint64_t v13 = sub_1BE0335C4();
  unint64_t v14 = sub_1BE033618();
  uint64_t v15 = sub_1BE03366C(&qword_1EA0E4AE0, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarShareeView);
  uint64_t v31 = &type metadata for CreateFamilyCalendarView;
  uint64_t v32 = &type metadata for CreateFamilyCalendarViewModel.FamilyCalendarScreens;
  uint64_t v33 = FamilyCalendarShareeView;
  unint64_t v34 = v13;
  unint64_t v35 = v14;
  uint64_t v36 = v15;
  swift_getOpaqueTypeConformance2();
  sub_1BE06F4B0();
  id v16 = CUIKAppTintColor();
  uint64_t v17 = MEMORY[0x1C1888840](v16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v31 = (ValueMetadata *)v17;
  swift_retain();
  uint64_t v19 = sub_1BE06F3A0();
  uint64_t v21 = v28;
  uint64_t v20 = v29;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v6, v4, v29);
  swift_release();
  uint64_t v22 = (uint64_t *)&v6[*(int *)(v27 + 36)];
  *uint64_t v22 = KeyPath;
  v22[1] = v19;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v20);
  uint64_t v31 = v26;
  uint64_t v32 = v25;
  sub_1BE070110();
  type metadata accessor for CreateFamilyCalendarViewModel();
  sub_1BE03376C();
  sub_1BE03366C(&qword_1EA0E2F08, (void (*)(uint64_t))type metadata accessor for CreateFamilyCalendarViewModel);
  sub_1BE06FDA0();
  swift_release();
  return sub_1BDF8686C((uint64_t)v6, &qword_1EA0E4A98);
}

uint64_t sub_1BE033450()
{
  return swift_release();
}

unint64_t sub_1BE0335C4()
{
  unint64_t result = qword_1EA0E4AD0;
  if (!qword_1EA0E4AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4AD0);
  }
  return result;
}

unint64_t sub_1BE033618()
{
  unint64_t result = qword_1EA0E4AD8;
  if (!qword_1EA0E4AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4AD8);
  }
  return result;
}

uint64_t sub_1BE03366C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BE0336BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BE06F640();
  *a1 = result;
  return result;
}

uint64_t sub_1BE0336E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1BE06F640();
  *a1 = result;
  return result;
}

uint64_t sub_1BE033714()
{
  return sub_1BE06F650();
}

uint64_t sub_1BE033740()
{
  return sub_1BE06F650();
}

unint64_t sub_1BE03376C()
{
  unint64_t result = qword_1EA0E4AE8;
  if (!qword_1EA0E4AE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4A98);
    sub_1BDF86964(&qword_1EA0E4AF0, &qword_1EA0E4A90);
    sub_1BDF86964(&qword_1EA0E4390, &qword_1EA0E4398);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4AE8);
  }
  return result;
}

uint64_t sub_1BE033830()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for CreateFamilyCalendarFlow(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    char v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1BE06F3D0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *char v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (uint64_t *)((char *)v4 + v9);
    uint64_t v12 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    unint64_t v14 = (uint64_t *)((char *)v4 + v10);
    uint64_t v15 = (uint64_t *)((char *)a2 + v10);
    uint64_t v16 = v15[1];
    *unint64_t v14 = *v15;
    v14[1] = v16;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t destroy for CreateFamilyCalendarFlow(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_1BE06F3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return swift_release();
}

void *initializeWithCopy for CreateFamilyCalendarFlow(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1BE06F3D0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)((char *)a1 + v7);
  uint64_t v10 = (void *)((char *)a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)((char *)a1 + v8);
  uint64_t v13 = (void *)((char *)a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CreateFamilyCalendarFlow(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BDF8686C((uint64_t)a1, &qword_1EA0E2EE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1BE06F3D0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_retain();
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  swift_retain();
  swift_release();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

char *initializeWithTake for CreateFamilyCalendarFlow(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_1BE06F3D0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  return a1;
}

char *assignWithTake for CreateFamilyCalendarFlow(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1BDF8686C((uint64_t)a1, &qword_1EA0E2EE0);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1BE06F3D0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_release();
  *((void *)v9 + 1) = *((void *)v10 + 1);
  swift_release();
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateFamilyCalendarFlow(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BE033EA8);
}

uint64_t sub_1BE033EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for CreateFamilyCalendarFlow(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BE033F80);
}

uint64_t sub_1BE033F80(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2EE8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

void sub_1BE034040()
{
  sub_1BDF989A4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1BE0340E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BE034190()
{
  return sub_1BDFD729C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1BE0341AC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1BE0341E4(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1BE034224(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1BE03425C()
{
  return sub_1BE032FC8();
}

uint64_t sub_1BE034274()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BE034318(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 41) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *(void *)a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    uint64_t v12 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v12;
    uint64_t v13 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v13;
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    uint64_t v14 = (a1 + v6 + 41) & ~v6;
    uint64_t v15 = ((unint64_t)a2 + v6 + 41) & ~v6;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16(v14, v15, v4);
  }
  return a1;
}

uint64_t sub_1BE03444C(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

uint64_t sub_1BE0344D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a3 + 16);
  unint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v6 - 8) + 80);
  uint64_t v9 = (v8 + 41 + a1) & ~v8;
  uint64_t v10 = (v8 + 41 + a2) & ~v8;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v9, v10, v6);
  return a1;
}

uint64_t sub_1BE034590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))((*(unsigned __int8 *)(v6 + 80) + 41 + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(unsigned __int8 *)(v6 + 80) + 41 + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1BE034668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))((*(unsigned __int8 *)(v5 + 80) + 41 + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(unsigned __int8 *)(v5 + 80) + 41 + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_1BE0346E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(unsigned __int8 *)(v8 + 80) + 41 + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(unsigned __int8 *)(v8 + 80) + 41 + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_1BE034798(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 41) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 41) & ~v6);
      }
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1BE034938(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 41) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1BE034BA0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (unint64_t)&a1[v9 + 41] & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0)
          {
            *(_OWORD *)(a1 + 8) = 0u;
            uint64_t v18 = a2 ^ 0x80000000;
            *(_OWORD *)(a1 + 24) = 0u;
          }
          else
          {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ColorField()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BE034BE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BE034C24(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  unsigned int v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x1F4188790](TupleTypeMetadata);
    unsigned int v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      size_t v10 = (long long *)(v5 + 2);
      BOOL v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *BOOL v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        unsigned int v16 = &v8[8 * v9];
        int v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)unsigned int v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_1BE0703A0();
}

uint64_t sub_1BE034DE8(uint64_t a1)
{
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E1250);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E3598);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4B88);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v21 = v3;
  uint64_t v22 = v4;
  swift_getTupleTypeMetadata();
  sub_1BE070390();
  swift_getWitnessTable();
  uint64_t v5 = sub_1BE070190();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  unint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  BOOL v11 = &v15[-v10];
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v16 = v4;
  uint64_t v17 = v12;
  uint64_t v18 = v1;
  sub_1BE06F740();
  sub_1BE070180();
  swift_getWitnessTable();
  sub_1BDF9DEF0(v9);
  long long v13 = *(void (**)(unsigned char *, uint64_t))(v6 + 8);
  v13(v9, v5);
  sub_1BDF9DEF0(v11);
  return ((uint64_t (*)(unsigned char *, uint64_t))v13)(v11, v5);
}

uint64_t sub_1BE035004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v50 = a4;
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v48 = a2;
  uint64_t v49 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v53 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = (uint64_t *)MEMORY[0x1F4188790](v6);
  uint64_t v47 = &v38[-v9];
  uint64_t v51 = *v8;
  swift_retain();
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v46 = v80[5];
  int v45 = v81;
  uint64_t v44 = v82;
  int v43 = v83;
  uint64_t v41 = v85;
  uint64_t v42 = v84;
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v62 = *(void *)(a1 + 8);
  uint64_t v63 = v10;
  sub_1BDF859F0();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1BE06FD30();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t v62 = sub_1BE070010();
  uint64_t v16 = sub_1BE06FCE0();
  uint64_t v40 = v17;
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_1BDF8587C(v11, v13, v15);
  swift_release();
  swift_bridgeObjectRelease();
  int v39 = sub_1BE06FAF0();
  sub_1BE06F2D0();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  LOBYTE(v13) = *(unsigned char *)(a1 + 40);
  uint64_t v30 = v48;
  uint64_t v31 = type metadata accessor for ColorField();
  uint64_t v32 = v47;
  sub_1BDF9DEF0(a1 + *(int *)(v31 + 40));
  uint64_t v72 = v51;
  __int16 v73 = 256;
  uint64_t v74 = v46;
  char v75 = v45;
  uint64_t v76 = v44;
  char v77 = v43;
  uint64_t v33 = v40;
  uint64_t v78 = v42;
  uint64_t v79 = v41;
  uint64_t v62 = v16;
  uint64_t v63 = v40;
  char v64 = v21;
  uint64_t v65 = v19;
  char v66 = v39;
  uint64_t v67 = v23;
  uint64_t v68 = v25;
  uint64_t v69 = v27;
  uint64_t v70 = v29;
  char v71 = 0;
  v80[0] = &v72;
  v80[1] = &v62;
  uint64_t v59 = 0;
  char v60 = v13;
  char v61 = v13 ^ 1;
  v80[2] = &v59;
  uint64_t v34 = v49;
  unint64_t v35 = v53;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v49 + 16))(v53, v32, v30);
  v80[3] = v35;
  swift_retain();
  sub_1BDF8555C(v16, v33, v21);
  swift_bridgeObjectRetain();
  v58[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1250);
  v58[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3598);
  v58[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4B88);
  v58[3] = v30;
  unint64_t v54 = sub_1BDFB76F0();
  unint64_t v55 = sub_1BDFCE760();
  unint64_t v56 = sub_1BE035410();
  uint64_t v57 = v52;
  sub_1BE034C24((uint64_t)v80, 4uLL, (uint64_t)v58);
  uint64_t v36 = *(void (**)(unsigned char *, uint64_t))(v34 + 8);
  v36(v32, v30);
  sub_1BDF8587C(v16, v33, v21);
  swift_release();
  swift_bridgeObjectRelease();
  v36(v53, v30);
  sub_1BDF8587C(v62, v63, v64);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BE035404@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE035004(v1[4], v1[2], v1[3], a1);
}

unint64_t sub_1BE035410()
{
  unint64_t result = qword_1EA0E4B90;
  if (!qword_1EA0E4B90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4B88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4B90);
  }
  return result;
}

uint64_t sub_1BE03547C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BE035548(uint64_t a1)
{
  uint64_t v2 = sub_1BE06EFA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E10B0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1BDFF61E8((uint64_t)&unk_1F18778A0);
  swift_arrayDestroy();
  sub_1BE035848(a1, (uint64_t)v8);
  uint64_t v13 = sub_1BE06EFC0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1BE06EFB0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
    sub_1BE06EF90();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v16 = sub_1BE06EF60();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1BE0358B0((uint64_t)v11);
    }
    else
    {
      uint64_t v18 = sub_1BE06EF50();
      uint64_t v20 = v19;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v16);
      char v21 = sub_1BDF9E290(v18, v20, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21) {
        return sub_1BE070010();
      }
    }
    return sub_1BE06FF90();
  }
  return result;
}

ValueMetadata *type metadata accessor for CUIKSwiftUIUtils()
{
  return &type metadata for CUIKSwiftUIUtils;
}

uint64_t sub_1BE035848(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE0358B0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E10B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for BigHeadsView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for BigHeadsView(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for BigHeadsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for BigHeadsView(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BigHeadsView()
{
  return &type metadata for BigHeadsView;
}

uint64_t sub_1BE035A30()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1BE035A4C()
{
  qword_1EA0E4B98 = 0x4054000000000000;
}

uint64_t sub_1BE035A5C(void *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (a1)
  {
    id v3 = a1;
    swift_bridgeObjectRetain();
    id v4 = v3;
    MEMORY[0x1C1888EF0]();
    if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1BE070740();
    }
    sub_1BE070770();
    sub_1BE070720();

    return a2;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v2;
}

uint64_t sub_1BE035B14@<X0>(void *a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (a1)
  {
    id v6 = a1;
    uint64_t v7 = sub_1BE06F740();
    sub_1BE035D8C(a1, a2, v6, v13);
    *(_OWORD *)((char *)&v15[7] + 7) = v13[7];
    *(_OWORD *)((char *)&v15[8] + 7) = v13[8];
    *(_OWORD *)((char *)&v15[9] + 7) = v14[0];
    v15[10] = *(_OWORD *)((char *)v14 + 9);
    *(_OWORD *)((char *)&v15[3] + 7) = v13[3];
    *(_OWORD *)((char *)&v15[4] + 7) = v13[4];
    *(_OWORD *)((char *)&v15[5] + 7) = v13[5];
    *(_OWORD *)((char *)&v15[6] + 7) = v13[6];
    *(_OWORD *)((char *)v15 + 7) = v13[0];
    *(_OWORD *)((char *)&v15[1] + 7) = v13[1];
    char v16 = 1;
    *(_OWORD *)((char *)&v15[2] + 7) = v13[2];
    *(void *)&long long v17 = sub_1BE06FFD0();
    uint64_t v8 = sub_1BE0701F0();
    long long v26 = v15[7];
    long long v27 = v15[8];
    v28[0] = v15[9];
    v28[1] = v15[10];
    long long v22 = v15[3];
    long long v23 = v15[4];
    long long v24 = v15[5];
    long long v25 = v15[6];
    long long v19 = v15[0];
    long long v17 = (unint64_t)v7;
    char v18 = 1;
    long long v20 = v15[1];
    long long v21 = v15[2];
    uint64_t v29 = v8;
    sub_1BE06F350();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4BB0);
    sub_1BE036518();
    sub_1BE06FE30();

    sub_1BE0365DC((uint64_t)&v17);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4BA8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a3, 0, 1, v9);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4BA8);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a3, 1, 1, v11);
  }
}

uint64_t sub_1BE035D8C@<X0>(void *a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, _OWORD *a4@<X8>)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 == 1)
  {
    uint64_t v9 = sub_1BE06F740();
    sub_1BE0362E4(a3, a2, (uint64_t)&v34);
    v33[0] = 1;
    v32[0] = v35;
    LOBYTE(v58) = v36[0];
    uint64_t v42 = (void *)v9;
    uint64_t v43 = 0;
    char v44 = 1;
    long long v45 = v34;
    LOBYTE(v46) = v35;
    *((void *)&v46 + 1) = *((void *)&v35 + 1);
    char v47 = v36[0];
    long long v48 = *(_OWORD *)&v36[8];
    uint64_t v49 = *(void *)&v36[24];
    uint64_t v50 = v37;
    char v51 = BYTE8(v37);
    uint64_t v52 = v38;
    char v53 = BYTE8(v38);
    long long v54 = v39;
    sub_1BE036CE0((uint64_t)&v42);
    sub_1BDFB8210((uint64_t)&v42, (uint64_t)&v34, &qword_1EA0E4BD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4BE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4BE8);
    sub_1BDF86964(&qword_1EA0E4BF0, &qword_1EA0E4BE0);
    sub_1BE036808();
    sub_1BE06F8E0();
    long long v39 = v56;
    *(_OWORD *)uint64_t v40 = v57[0];
    long long v10 = *(_OWORD *)((char *)v57 + 9);
LABEL_28:
    *(_OWORD *)&v40[9] = v10;
    *(_OWORD *)uint64_t v36 = v55[2];
    *(_OWORD *)&v36[16] = v55[3];
    long long v37 = v55[4];
    long long v38 = v55[5];
    long long v34 = v55[0];
    long long v35 = v55[1];
    nullsub_1(&v34);
    goto LABEL_29;
  }
  if (v8 < 2)
  {
    sub_1BE0366E0((uint64_t)&v34);
LABEL_29:
    sub_1BDFB8210((uint64_t)&v34, (uint64_t)v55, &qword_1EA0E4BD0);
    sub_1BDFB8210((uint64_t)v55, (uint64_t)v32, &qword_1EA0E4BD0);
    sub_1BDFB8210((uint64_t)v32, (uint64_t)v33, &qword_1EA0E4BD0);
    *(void *)&long long v34 = 0;
    BYTE8(v34) = 1;
    sub_1BDFB8210((uint64_t)v33, (uint64_t)&v35, &qword_1EA0E4BD0);
    *(void *)&v41[16] = 0;
    v41[24] = 1;
    long long v27 = *(_OWORD *)v41;
    a4[8] = *(_OWORD *)&v40[16];
    a4[9] = v27;
    long long v28 = v38;
    a4[4] = v37;
    a4[5] = v28;
    long long v29 = *(_OWORD *)v40;
    a4[6] = v39;
    a4[7] = v29;
    long long v30 = v35;
    *a4 = v34;
    a4[1] = v30;
    long long v31 = *(_OWORD *)&v36[16];
    a4[2] = *(_OWORD *)v36;
    a4[3] = v31;
    *(_OWORD *)((char *)a4 + 153) = *(_OWORD *)&v41[9];
    sub_1BDFB8210((uint64_t)v32, (uint64_t)&v42, &qword_1EA0E4BD0);
    sub_1BE036790((uint64_t)v33, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE036704);
    return sub_1BE036790((uint64_t)&v42, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE036654);
  }
  unint64_t v11 = sub_1BE035A5C(a1, a2);
  unint64_t v12 = v11;
  if (!(v11 >> 62))
  {
    uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_8;
    }
LABEL_24:
    char v16 = (void *)MEMORY[0x1E4FBC860];
LABEL_25:
    swift_bridgeObjectRelease_n();
    if (qword_1EA0E2268 != -1) {
      swift_once();
    }
    sub_1BE070320();
    sub_1BE06F390();
    uint64_t v42 = v16;
    uint64_t v43 = v58;
    char v44 = v59;
    *(void *)&long long v45 = v60;
    BYTE8(v45) = v61;
    long long v46 = v62;
    sub_1BE0367FC((uint64_t)&v42);
    sub_1BDFB8210((uint64_t)&v42, (uint64_t)&v34, &qword_1EA0E4BD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4BE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4BE8);
    sub_1BDF86964(&qword_1EA0E4BF0, &qword_1EA0E4BE0);
    sub_1BE036808();
    sub_1BE06F8E0();
    long long v39 = v56;
    *(_OWORD *)uint64_t v40 = v57[0];
    long long v10 = *(_OWORD *)((char *)v57 + 9);
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1BE070CB0();
  uint64_t v13 = result;
  if (!result) {
    goto LABEL_24;
  }
LABEL_8:
  if (v13 >= 1)
  {
    uint64_t v15 = 0;
    char v16 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v12 & 0xC000000000000001) != 0) {
        id v17 = (id)MEMORY[0x1C18893C0](v15, v12);
      }
      else {
        id v17 = *(id *)(v12 + 8 * v15 + 32);
      }
      char v18 = v17;
      id v19 = objc_msgSend(v17, sel_emailAddress);
      if (v19)
      {
        long long v20 = v19;
        uint64_t v21 = sub_1BE070500();
        uint64_t v23 = v22;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v16 = sub_1BE054CEC(0, v16[2] + 1, 1, v16);
        }
        unint64_t v25 = v16[2];
        unint64_t v24 = v16[3];
        if (v25 >= v24 >> 1) {
          char v16 = sub_1BE054CEC((void *)(v24 > 1), v25 + 1, 1, v16);
        }
        void v16[2] = v25 + 1;
        long long v26 = &v16[2 * v25];
        v26[4] = v21;
        v26[5] = v23;
      }
      else
      {
      }
      ++v15;
    }
    while (v13 != v15);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

void sub_1BE0362E4(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1568);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BE07ABD0;
  id v7 = objc_msgSend(a1, sel_emailAddress);
  if (!v7) {
    goto LABEL_11;
  }
  uint64_t v8 = v7;
  uint64_t v9 = sub_1BE070500();
  uint64_t v11 = v10;

  *(void *)(v6 + 32) = v9;
  *(void *)(v6 + 40) = v11;
  if (qword_1EA0E2268 != -1) {
    swift_once();
  }
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BE07ABD0;
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v13 = *(id *)(a2 + 32);
      goto LABEL_7;
    }
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  id v13 = (id)MEMORY[0x1C18893C0](0, a2);
LABEL_7:
  uint64_t v14 = v13;
  id v15 = objc_msgSend(v13, sel_emailAddress, v25, v23);

  if (v15)
  {
    uint64_t v16 = sub_1BE070500();
    uint64_t v18 = v17;

    *(void *)(v12 + 32) = v16;
    *(void *)(v12 + 40) = v18;
    sub_1BE070320();
    sub_1BE06F390();
    *(void *)a3 = v6;
    *(void *)(a3 + 8) = v21;
    *(unsigned char *)(a3 + 16) = v22;
    *(void *)(a3 + 24) = v20;
    *(unsigned char *)(a3 + 32) = v24;
    *(void *)(a3 + 40) = v19;
    *(void *)(a3 + 48) = v26;
    *(void *)(a3 + 56) = v12;
    *(void *)(a3 + 64) = v27;
    *(unsigned char *)(a3 + 72) = v28;
    *(void *)(a3 + 80) = v29;
    *(unsigned char *)(a3 + 88) = v30;
    *(_OWORD *)(a3 + 96) = v31;
    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_1BE036510@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE035B14(*(void **)v1, *(void *)(v1 + 8), a1);
}

unint64_t sub_1BE036518()
{
  unint64_t result = qword_1EA0E4BB8;
  if (!qword_1EA0E4BB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4BB0);
    sub_1BDF86964(&qword_1EA0E4BC0, &qword_1EA0E4BC8);
    sub_1BDF86964(&qword_1EA0E2FF8, &qword_1EA0E3000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4BB8);
  }
  return result;
}

uint64_t sub_1BE0365DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BE036654(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned __int8 a18)
{
  if (a18 != 255) {
    return sub_1BE036698(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18 & 1);
  }
  return result;
}

uint64_t sub_1BE036698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if ((a18 & 1) == 0) {
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

double sub_1BE0366E0(uint64_t a1)
{
  *(void *)(a1 + 128) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 136) = -1;
  return result;
}

uint64_t sub_1BE036704(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned __int8 a18)
{
  if (a18 != 255) {
    return sub_1BE036748(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18 & 1);
  }
  return result;
}

uint64_t sub_1BE036748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if ((a18 & 1) == 0) {
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE036790(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 136);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), v4);
  return a1;
}

uint64_t sub_1BE0367FC(uint64_t result)
{
  *(unsigned char *)(result + 136) = 1;
  return result;
}

unint64_t sub_1BE036808()
{
  unint64_t result = qword_1EA0E4BF8;
  if (!qword_1EA0E4BF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4BE8);
    sub_1BDFDC67C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4BF8);
  }
  return result;
}

void sub_1BE036884()
{
  qword_1EA0E4BA0 = 0x4010000000000000;
}

double sub_1BE036894@<D0>(uint64_t a1@<X8>)
{
  if (qword_1EA0E2270 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_1EA0E4BA0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4C10);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BE079670;
  *(void *)(v3 + 32) = 0;
  *(double *)(v3 + 40) = v2 + v2;
  sub_1BE06F330();
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v4 = sub_1BE070020();
  uint64_t KeyPath = swift_getKeyPath();
  double result = v8;
  *(void *)a1 = v7;
  *(double *)(a1 + 8) = v8;
  *(void *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  *(unsigned char *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v14;
  *(unsigned char *)(a1 + 64) = v15;
  *(void *)(a1 + 72) = v16;
  *(void *)(a1 + 80) = v17;
  *(void *)(a1 + 88) = KeyPath;
  *(void *)(a1 + 96) = v4;
  return result;
}

double sub_1BE036A10@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_1BE06FC80();
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetMinX(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetMidY(v15);
  sub_1BE06FC60();
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetMaxX(v16);
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetMidY(v17);
  sub_1BE06FC70();
  double result = *(double *)&v11;
  *(_OWORD *)a1 = v11;
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v13;
  return result;
}

uint64_t sub_1BE036AF8()
{
  return MEMORY[0x1F40FC688]();
}

void (*sub_1BE036B10(void *a1))(void *a1)
{
  double v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BE06F270();
  return sub_1BE036B80;
}

void sub_1BE036B80(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_1BE036BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BE037060();

  return MEMORY[0x1F40FC6E0](a1, a2, a3, v6);
}

uint64_t sub_1BE036C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BE037060();

  return MEMORY[0x1F40FC698](a1, a2, a3, v6);
}

uint64_t sub_1BE036C94(uint64_t a1)
{
  unint64_t v2 = sub_1BE037060();

  return MEMORY[0x1F40FC6B8](a1, v2);
}

uint64_t sub_1BE036CE0(uint64_t result)
{
  *(unsigned char *)(result + 136) = 0;
  return result;
}

ValueMetadata *type metadata accessor for DottedLine()
{
  return &type metadata for DottedLine;
}

unint64_t sub_1BE036CFC()
{
  unint64_t result = qword_1EA0E4C00;
  if (!qword_1EA0E4C00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4C08);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4BB0);
    sub_1BE036518();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4C00);
  }
  return result;
}

uint64_t sub_1BE036DA4()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for HorizontalLine()
{
  return &type metadata for HorizontalLine;
}

unint64_t sub_1BE036DDC()
{
  unint64_t result = qword_1EA0E4C18;
  if (!qword_1EA0E4C18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4C20);
    sub_1BE036E7C();
    sub_1BDF86964(&qword_1EA0E1420, &qword_1EA0E1428);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4C18);
  }
  return result;
}

unint64_t sub_1BE036E7C()
{
  unint64_t result = qword_1EA0E4C28;
  if (!qword_1EA0E4C28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4C30);
    sub_1BDF86964(&qword_1EA0E4C38, &qword_1EA0E4C40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4C28);
  }
  return result;
}

uint64_t sub_1BE036F1C()
{
  return sub_1BDF86964(&qword_1EA0E4C48, &qword_1EA0E4C50);
}

unint64_t sub_1BE036F5C()
{
  unint64_t result = qword_1EA0E4C58;
  if (!qword_1EA0E4C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4C58);
  }
  return result;
}

unint64_t sub_1BE036FB4()
{
  unint64_t result = qword_1EA0E4C60;
  if (!qword_1EA0E4C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4C60);
  }
  return result;
}

unint64_t sub_1BE03700C()
{
  unint64_t result = qword_1EA0E4C68;
  if (!qword_1EA0E4C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4C68);
  }
  return result;
}

unint64_t sub_1BE037060()
{
  unint64_t result = qword_1EA0E4C70;
  if (!qword_1EA0E4C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4C70);
  }
  return result;
}

uint64_t EventSourceConstrained.maxAlarmsAllowed.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v10 = -1;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t EventSourceConstrained.requiresOutgoingInvitationsInDefaultCalendar.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    char v10 = 0;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.eventDurationConstrainedToRecurrenceInterval.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    char v10 = 0;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.occurrencesMustOccurOnSeparateDays.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    char v10 = 0;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.supportsPrivateEvents.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  char v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.supportsAlarmTriggerDates.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  char v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.supportsMultipleAlarms.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  char v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.requiresOccurrencesConformToRecurrenceRule.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    char v10 = 0;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.supportsURLField.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  char v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.supportsFloatingTimeZone.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  char v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 80))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.prohibitsMultipleDaysInMonthlyRecurrence.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    char v10 = 0;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 88))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.prohibitsMultipleMonthsInYearlyRecurrence.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    char v10 = 0;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 96))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.prohibitsYearlyRecurrenceInterval.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    char v10 = 0;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.canSetAvailability.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  char v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 112))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.eventAvailabilityLimited.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  char v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 120))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventSourceConstrained.supportsStructuredLocations.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  double v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  char v10 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 128))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t dispatch thunk of EventSourceConstrained.constraints.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventDirectoryRecordModel.displayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventDirectoryRecordModel.firstName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventDirectoryRecordModel.lastName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventDirectoryRecordModel.preferredAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

void EventModelObject.init(id:uniqueID:title:startDate:endDate:isAllDay:isProposedTime:startTimeZone:endTimeZone:isFloating:floatingTimeZone:virtualConference:location:locationWithoutPrediction:locationsWithoutPrediction:structuredLocation:structuredLocationWithoutPrediction:preferredLocation:travelTime:travelRoutingMode:calendar:privacyLevel:status:alarms:notes:availability:recurrenceDate:recurrenceRules:organizer:attendees:selfAttendee:url:hasAttachment:conferenceURLForDisplayCached:conferenceURLForDisplay:integration:isEditable:isNew:isSuggestedEvent:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void (*a6)(void, void, void)@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, unsigned __int8 a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,unsigned __int8 a40,unsigned __int8 a41,uint64_t a42,uint64_t *a43,unsigned __int8 a44,unsigned __int8 a45,unsigned __int8 a46)
{
  uint64_t v144 = a8;
  uint64_t v178 = a7;
  long long v141 = a6;
  uint64_t v138 = a4;
  uint64_t v139 = a5;
  uint64_t v136 = a2;
  uint64_t v137 = a3;
  uint64_t v133 = a1;
  int v177 = a46;
  int v176 = a45;
  int v175 = a44;
  int v174 = a41;
  int v173 = a40;
  uint64_t v172 = a39;
  uint64_t v171 = a38;
  uint64_t v170 = a37;
  uint64_t v168 = a36;
  uint64_t v167 = a35;
  uint64_t v150 = a34;
  uint64_t v159 = a33;
  uint64_t v158 = a32;
  uint64_t v156 = a31;
  uint64_t v155 = a30;
  uint64_t v154 = a29;
  uint64_t v153 = a28;
  uint64_t v152 = a27;
  uint64_t v151 = a26;
  uint64_t v149 = a21;
  uint64_t v148 = a20;
  uint64_t v146 = a19;
  uint64_t v145 = a18;
  uint64_t v143 = a17;
  uint64_t v142 = a16;
  int v140 = a15;
  uint64_t v135 = a14;
  uint64_t v132 = a13;
  int v131 = a12;
  int v130 = a11;
  uint64_t v169 = a42;
  uint64_t v147 = a22;
  uint64_t v179 = sub_1BE06EEE0();
  uint64_t v48 = *(void *)(v179 - 8);
  MEMORY[0x1F4188790](v179);
  char v134 = (char *)&v108 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v50 - 8);
  v157 = (char *)&v108 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDFB8210(a23, (uint64_t)v180, &qword_1EA0E3E38);
  sub_1BDFB8210(a24, (uint64_t)v181, &qword_1EA0E3E38);
  sub_1BDFB8210(a25, (uint64_t)v182, &qword_1EA0E3E38);
  uint64_t v52 = *a43;
  uint64_t v165 = a43[1];
  uint64_t v166 = v52;
  uint64_t v53 = a43[2];
  uint64_t v163 = a43[3];
  uint64_t v164 = v53;
  uint64_t v54 = a43[4];
  uint64_t v161 = a43[5];
  uint64_t v162 = v54;
  uint64_t v160 = a43[6];
  unint64_t v55 = (int *)type metadata accessor for EventModelObject();
  uint64_t v116 = (uint64_t)a9 + v55[11];
  uint64_t v56 = v116;
  uint64_t v57 = sub_1BE06F140();
  uint64_t v58 = *(void (**)(void))(*(void *)(v57 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v58)(v56, 1, 1, v57);
  uint64_t v114 = (uint64_t)a9 + v55[12];
  v58();
  uint64_t v113 = (uint64_t)a9 + v55[14];
  v58();
  uint64_t v110 = (uint64_t)a9 + v55[15];
  uint64_t v59 = v110;
  uint64_t v60 = type metadata accessor for EventVirtualConferenceModelObject(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v59, 1, 1, v60);
  char v61 = (void *)((char *)a9 + v55[16]);
  *char v61 = 0;
  v61[1] = 0;
  long long v62 = (void *)((char *)a9 + v55[17]);
  *long long v62 = 0;
  v62[1] = 0;
  uint64_t v112 = v55[18];
  *(void *)((char *)a9 + v112) = 0;
  uint64_t v111 = (uint64_t)a9 + v55[19];
  uint64_t v63 = v111;
  sub_1BDFF80B8(v183);
  sub_1BDFB8210((uint64_t)v183, v63, &qword_1EA0E3E38);
  uint64_t v115 = (uint64_t)a9 + v55[20];
  sub_1BDFB8210((uint64_t)v183, v115, &qword_1EA0E3E38);
  uint64_t v117 = (uint64_t)a9 + v55[21];
  sub_1BDFB8210((uint64_t)v183, v117, &qword_1EA0E3E38);
  uint64_t v118 = (uint64_t)a9 + v55[24];
  uint64_t v64 = v118;
  uint64_t v65 = type metadata accessor for EventCalendarModelObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v64, 1, 1, v65);
  uint64_t v119 = v55[27];
  *(void *)((char *)a9 + v119) = 0;
  char v66 = (void *)((char *)a9 + v55[28]);
  uint64_t v120 = v66;
  *char v66 = 0;
  v66[1] = 0;
  uint64_t v67 = *(void (**)(void))(v48 + 56);
  uint64_t v129 = (uint64_t)a9 + v55[30];
  uint64_t v125 = v67;
  uint64_t v126 = v48 + 56;
  v67();
  uint64_t v128 = v55[31];
  *(void *)((char *)a9 + v128) = 0;
  uint64_t v68 = (uint64_t)a9 + v55[32];
  uint64_t v69 = type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56);
  uint64_t v127 = v68;
  v70(v68, 1, 1, v69);
  uint64_t v124 = v55[33];
  *(void *)((char *)a9 + v124) = 0;
  uint64_t v71 = (uint64_t)a9 + v55[34];
  uint64_t v72 = type metadata accessor for EventAttendeeModelObject(0);
  __int16 v73 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56);
  uint64_t v123 = v71;
  v73(v71, 1, 1, v72);
  uint64_t v74 = (uint64_t)a9 + v55[35];
  uint64_t v75 = sub_1BE06EE10();
  uint64_t v76 = *(void (**)(void))(*(void *)(v75 - 8) + 56);
  uint64_t v122 = v74;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v76)(v74, 1, 1, v75);
  uint64_t v121 = (uint64_t)a9 + v55[38];
  v76();
  char v77 = (char *)a9 + v55[39];
  *(void *)char v77 = 0;
  *((void *)v77 + 1) = 0;
  *((void *)v77 + 2) = 1;
  *(_OWORD *)(v77 + 24) = 0u;
  *(_OWORD *)(v77 + 40) = 0u;
  uint64_t v78 = v136;
  *a9 = v133;
  a9[1] = v78;
  uint64_t v79 = v138;
  a9[2] = v137;
  a9[3] = v79;
  uint64_t v80 = v141;
  a9[4] = v139;
  a9[5] = v80;
  unsigned __int8 v81 = (char *)a9 + v55[7];
  uint64_t v109 = v48;
  uint64_t v82 = v179;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v81, v178, v179);
  unsigned __int8 v83 = (char *)a9 + v55[8];
  long long v141 = *(void (**)(void, void, void))(v48 + 32);
  v141(v83, v144, v82);
  *((unsigned char *)a9 + v55[9]) = v130;
  *((unsigned char *)a9 + v55[10]) = v131;
  sub_1BDFF85F8(v132, v116, &qword_1EA0E1118);
  sub_1BDFF85F8(v135, v114, &qword_1EA0E1118);
  *((unsigned char *)a9 + v55[13]) = v140;
  sub_1BDFF85F8(v142, v113, &qword_1EA0E1118);
  sub_1BDFF85F8(v143, v110, &qword_1EA0E3E18);
  swift_bridgeObjectRelease();
  uint64_t v84 = v146;
  *char v61 = v145;
  v61[1] = v84;
  uint64_t v85 = v134;
  swift_bridgeObjectRelease();
  uint64_t v86 = v149;
  *long long v62 = v148;
  v62[1] = v86;
  uint64_t v87 = v150;
  uint64_t v88 = v112;
  swift_bridgeObjectRelease();
  *(void *)((char *)a9 + v88) = v147;
  uint64_t v89 = v111;
  sub_1BDFB8210(v111, (uint64_t)v184, &qword_1EA0E3E38);
  sub_1BE03A394(v184, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  sub_1BDFB8210((uint64_t)v180, v89, &qword_1EA0E3E38);
  uint64_t v90 = v115;
  sub_1BDFB8210(v115, (uint64_t)v185, &qword_1EA0E3E38);
  sub_1BE03A394(v185, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  sub_1BDFB8210((uint64_t)v181, v90, &qword_1EA0E3E38);
  uint64_t v91 = v117;
  sub_1BDFB8210(v117, (uint64_t)v186, &qword_1EA0E3E38);
  uint64_t v92 = v179;
  sub_1BE03A394(v186, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  uint64_t v93 = v91;
  uint64_t v94 = (void (*)(char *, uint64_t, uint64_t))v141;
  sub_1BDFB8210((uint64_t)v182, v93, &qword_1EA0E3E38);
  *(double *)((char *)a9 + v55[22]) = a10;
  uint64_t v95 = v152;
  *(void *)((char *)a9 + v55[23]) = v151;
  sub_1BDFF85F8(v95, v118, &qword_1EA0E3E10);
  *(void *)((char *)a9 + v55[25]) = v153;
  *(void *)((char *)a9 + v55[26]) = v154;
  uint64_t v96 = v119;
  swift_bridgeObjectRelease();
  *(void *)((char *)a9 + v96) = v155;
  uint64_t v97 = v120;
  swift_bridgeObjectRelease();
  uint64_t v98 = v158;
  *uint64_t v97 = v156;
  v97[1] = v98;
  uint64_t v99 = v109;
  *(void *)((char *)a9 + v55[29]) = v159;
  v94(v85, v178, v92);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v87, 1, v92) == 1)
  {
    uint64_t v100 = (uint64_t)v157;
    v94(v157, (uint64_t)v85, v92);
    sub_1BDF8686C(v87, &qword_1EB677CC0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v99 + 8))(v85, v92);
    uint64_t v100 = (uint64_t)v157;
    v94(v157, v87, v92);
  }
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v125)(v100, 0, 1, v92);
  sub_1BDFF85F8(v100, v129, &qword_1EB677CC0);
  uint64_t v101 = v128;
  swift_bridgeObjectRelease();
  uint64_t v102 = v168;
  *(void *)((char *)a9 + v101) = v167;
  sub_1BDFF85F8(v102, v127, &qword_1EA0E3E28);
  uint64_t v103 = v124;
  swift_bridgeObjectRelease();
  uint64_t v104 = v171;
  *(void *)((char *)a9 + v103) = v170;
  sub_1BDFF85F8(v104, v123, &qword_1EA0E3E20);
  sub_1BDFF85F8(v172, v122, &qword_1EB678020);
  *((unsigned char *)a9 + v55[36]) = v173 & 1;
  *((unsigned char *)a9 + v55[37]) = v174 & 1;
  sub_1BDFF85F8(v169, v121, &qword_1EB678020);
  sub_1BE039724(*(void *)v77, *((void *)v77 + 1), *((void *)v77 + 2), *((void *)v77 + 3), *((void *)v77 + 4), *((void *)v77 + 5), *((void *)v77 + 6));
  uint64_t v105 = v165;
  *(void *)char v77 = v166;
  *((void *)v77 + 1) = v105;
  uint64_t v106 = v163;
  *((void *)v77 + 2) = v164;
  *((void *)v77 + 3) = v106;
  uint64_t v107 = v161;
  *((void *)v77 + 4) = v162;
  *((void *)v77 + 5) = v107;
  *((void *)v77 + 6) = v160;
  *((unsigned char *)a9 + v55[40]) = v175 & 1;
  *((unsigned char *)a9 + v55[41]) = v176 & 1;
  *((unsigned char *)a9 + v55[42]) = v177 & 1;
}

uint64_t type metadata accessor for EventModelObject()
{
  uint64_t result = qword_1EA0E15E0;
  if (!qword_1EA0E15E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1BE039724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    sub_1BDFDB194(a4, a5, a6, a7);
  }
}

uint64_t EventModelObject.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*EventModelObject.id.modify())()
{
  return nullsub_1;
}

uint64_t EventModelObject.uniqueID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.uniqueID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*EventModelObject.uniqueID.modify())()
{
  return nullsub_1;
}

uint64_t EventModelObject.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*EventModelObject.title.modify())()
{
  return nullsub_1;
}

uint64_t EventModelObject.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventModelObject() + 28);
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EventModelObject.startDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventModelObject() + 28);
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EventModelObject.startDate.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventModelObject() + 32);
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t EventModelObject.endDate.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventModelObject() + 32);
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*EventModelObject.endDate.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.duration.getter()
{
  return sub_1BE06EE90();
}

uint64_t EventModelObject.isAllDay.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 36));
}

uint64_t EventModelObject.isAllDay.setter(char a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*EventModelObject.isAllDay.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.isProposedTime.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 40));
}

uint64_t EventModelObject.isProposedTime.setter(char a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*EventModelObject.isProposedTime.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.startTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDF86808(v1 + *(int *)(v3 + 44), a1, &qword_1EA0E1118);
}

uint64_t EventModelObject.startTimeZone.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDFF85F8(a1, v1 + *(int *)(v3 + 44), &qword_1EA0E1118);
}

uint64_t (*EventModelObject.startTimeZone.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.endTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDF86808(v1 + *(int *)(v3 + 48), a1, &qword_1EA0E1118);
}

uint64_t EventModelObject.endTimeZone.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDFF85F8(a1, v1 + *(int *)(v3 + 48), &qword_1EA0E1118);
}

uint64_t (*EventModelObject.endTimeZone.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.isFloating.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 52));
}

uint64_t EventModelObject.isFloating.setter(char a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(unsigned char *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*EventModelObject.isFloating.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.floatingTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDF86808(v1 + *(int *)(v3 + 56), a1, &qword_1EA0E1118);
}

uint64_t EventModelObject.floatingTimeZone.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDFF85F8(a1, v1 + *(int *)(v3 + 56), &qword_1EA0E1118);
}

uint64_t (*EventModelObject.floatingTimeZone.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.virtualConference.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDF86808(v1 + *(int *)(v3 + 60), a1, &qword_1EA0E3E18);
}

uint64_t EventModelObject.virtualConference.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDFF85F8(a1, v1 + *(int *)(v3 + 60), &qword_1EA0E3E18);
}

uint64_t (*EventModelObject.virtualConference.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.location.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.location.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for EventModelObject() + 64));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EventModelObject.location.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.locationWithoutPrediction.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.locationWithoutPrediction.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for EventModelObject() + 68));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EventModelObject.locationWithoutPrediction.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.locationsWithoutPrediction.getter()
{
  type metadata accessor for EventModelObject();

  return swift_bridgeObjectRetain();
}

uint64_t EventModelObject.locationsWithoutPrediction.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for EventModelObject() + 72);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventModelObject.locationsWithoutPrediction.modify())(void)
{
  return nullsub_1;
}

void *EventModelObject.structuredLocation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  sub_1BDFB8210(v1 + *(int *)(v3 + 76), (uint64_t)v5, &qword_1EA0E3E38);
  sub_1BDFB8210((uint64_t)v5, a1, &qword_1EA0E3E38);
  return sub_1BE03A394(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
}

void *sub_1BE03A394(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t EventModelObject.structuredLocation.setter(uint64_t a1)
{
  sub_1BDFB8210(a1, (uint64_t)v4, &qword_1EA0E3E38);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for EventModelObject() + 76);
  sub_1BDFB8210(v2, (uint64_t)v5, &qword_1EA0E3E38);
  sub_1BE03A394(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  return sub_1BDFB8210((uint64_t)v4, v2, &qword_1EA0E3E38);
}

uint64_t (*EventModelObject.structuredLocation.modify())(void)
{
  return nullsub_1;
}

void *EventModelObject.structuredLocationWithoutPrediction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  sub_1BDFB8210(v1 + *(int *)(v3 + 80), (uint64_t)v5, &qword_1EA0E3E38);
  sub_1BDFB8210((uint64_t)v5, a1, &qword_1EA0E3E38);
  return sub_1BE03A394(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
}

uint64_t EventModelObject.structuredLocationWithoutPrediction.setter(uint64_t a1)
{
  sub_1BDFB8210(a1, (uint64_t)v4, &qword_1EA0E3E38);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for EventModelObject() + 80);
  sub_1BDFB8210(v2, (uint64_t)v5, &qword_1EA0E3E38);
  sub_1BE03A394(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  return sub_1BDFB8210((uint64_t)v4, v2, &qword_1EA0E3E38);
}

uint64_t (*EventModelObject.structuredLocationWithoutPrediction.modify())(void)
{
  return nullsub_1;
}

void *EventModelObject.preferredLocation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  sub_1BDFB8210(v1 + *(int *)(v3 + 84), (uint64_t)v5, &qword_1EA0E3E38);
  sub_1BDFB8210((uint64_t)v5, a1, &qword_1EA0E3E38);
  return sub_1BE03A394(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
}

uint64_t EventModelObject.preferredLocation.setter(uint64_t a1)
{
  sub_1BDFB8210(a1, (uint64_t)v4, &qword_1EA0E3E38);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for EventModelObject() + 84);
  sub_1BDFB8210(v2, (uint64_t)v5, &qword_1EA0E3E38);
  sub_1BE03A394(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  return sub_1BDFB8210((uint64_t)v4, v2, &qword_1EA0E3E38);
}

uint64_t (*EventModelObject.preferredLocation.modify())(void)
{
  return nullsub_1;
}

double EventModelObject.travelTime.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 88));
}

uint64_t EventModelObject.travelTime.setter(double a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(double *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*EventModelObject.travelTime.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.travelRoutingMode.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 92));
}

uint64_t EventModelObject.travelRoutingMode.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(void *)(v1 + *(int *)(result + 92)) = a1;
  return result;
}

uint64_t (*EventModelObject.travelRoutingMode.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.calendar.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDF86808(v1 + *(int *)(v3 + 96), a1, &qword_1EA0E3E10);
}

uint64_t EventModelObject.calendar.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDFF85F8(a1, v1 + *(int *)(v3 + 96), &qword_1EA0E3E10);
}

uint64_t (*EventModelObject.calendar.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.privacyLevel.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 100));
}

uint64_t EventModelObject.privacyLevel.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(void *)(v1 + *(int *)(result + 100)) = a1;
  return result;
}

uint64_t (*EventModelObject.privacyLevel.modify())(void)
{
  return nullsub_1;
}

BOOL EventModelObject.isPrivate.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 100)) != 0;
}

uint64_t sub_1BE03AA34(unsigned __int8 *a1, uint64_t a2)
{
  int v3 = *a1;
  uint64_t result = type metadata accessor for EventModelObject();
  uint64_t v5 = result;
  uint64_t v6 = 0;
  if (v3 == 1)
  {
    uint64_t v7 = a2 + *(int *)(result + 96);
    uint64_t v8 = type metadata accessor for EventCalendarModelObject();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8);
    if (result
      || (sub_1BDFB8210(v7 + 104, (uint64_t)v9, &qword_1EA0E3400),
          sub_1BDFB8210((uint64_t)v9, (uint64_t)v10, &qword_1EA0E3400),
          uint64_t result = sub_1BDFC49E4((uint64_t)v10),
          result == 1))
    {
      uint64_t v6 = 2;
    }
    else
    {
      uint64_t v6 = *(void *)(v7 + 176);
    }
  }
  *(void *)(a2 + *(int *)(v5 + 100)) = v6;
  return result;
}

uint64_t EventModelObject.isPrivate.setter(char a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  uint64_t v4 = result;
  uint64_t v5 = 0;
  if (a1)
  {
    uint64_t v6 = v1 + *(int *)(result + 96);
    uint64_t v7 = type metadata accessor for EventCalendarModelObject();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
    if (result
      || (sub_1BDFB8210(v6 + 104, (uint64_t)v8, &qword_1EA0E3400),
          sub_1BDFB8210((uint64_t)v8, (uint64_t)v9, &qword_1EA0E3400),
          uint64_t result = sub_1BDFC49E4((uint64_t)v9),
          result == 1))
    {
      uint64_t v5 = 2;
    }
    else
    {
      uint64_t v5 = *(void *)(v6 + 176);
    }
  }
  *(void *)(v1 + *(int *)(v4 + 100)) = v5;
  return result;
}

void (*EventModelObject.isPrivate.modify(void *a1))(uint64_t *a1)
{
  int v3 = malloc(0x128uLL);
  *a1 = v3;
  v3[34] = v1;
  uint64_t v4 = type metadata accessor for EventModelObject();
  v3[35] = v4;
  uint64_t v5 = *(int *)(v4 + 100);
  *((unsigned char *)v3 + 135) = *(void *)(v1 + v5) != 0;
  *((_DWORD *)v3 + 72) = v5;
  return sub_1BE03AC70;
}

void sub_1BE03AC70(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = *a1 + 136;
  if (*(unsigned char *)(*a1 + 135))
  {
    uint64_t v3 = *(void *)(v1 + 272) + *(int *)(*(void *)(v1 + 280) + 96);
    uint64_t v4 = type metadata accessor for EventCalendarModelObject();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4)
      || (sub_1BDFB8210(v3 + 104, v2, &qword_1EA0E3400),
          sub_1BDFB8210(v2, v1, &qword_1EA0E3400),
          sub_1BDFC49E4(v1) == 1))
    {
      uint64_t v5 = 2;
    }
    else
    {
      uint64_t v5 = *(void *)(v3 + 176);
    }
  }
  else
  {
    uint64_t v5 = 0;
  }
  *(void *)(*(void *)(v1 + 272) + *(int *)(v1 + 288)) = v5;

  free((void *)v1);
}

uint64_t EventModelObject.status.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 104));
}

uint64_t EventModelObject.status.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(void *)(v1 + *(int *)(result + 104)) = a1;
  return result;
}

uint64_t (*EventModelObject.status.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.alarms.getter()
{
  type metadata accessor for EventModelObject();

  return swift_bridgeObjectRetain();
}

uint64_t EventModelObject.alarms.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for EventModelObject() + 108);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventModelObject.alarms.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.notes.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 112));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EventModelObject.notes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for EventModelObject() + 112));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*EventModelObject.notes.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.availability.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 116));
}

uint64_t EventModelObject.availability.setter(uint64_t a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(void *)(v1 + *(int *)(result + 116)) = a1;
  return result;
}

uint64_t (*EventModelObject.availability.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.recurrenceDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDF86808(v1 + *(int *)(v3 + 120), a1, &qword_1EB677CC0);
}

uint64_t EventModelObject.recurrenceDate.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDFF85F8(a1, v1 + *(int *)(v3 + 120), &qword_1EB677CC0);
}

uint64_t (*EventModelObject.recurrenceDate.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.recurrenceRules.getter()
{
  type metadata accessor for EventModelObject();

  return swift_bridgeObjectRetain();
}

uint64_t EventModelObject.recurrenceRules.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for EventModelObject() + 124);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventModelObject.recurrenceRules.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.singleRecurrenceRule.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for EventModelObject() + 124));
  if (v3)
  {
    uint64_t v4 = *(void *)(v3 + 16);
    uint64_t v5 = type metadata accessor for EventRecurrenceRuleModelObject(0);
    uint64_t v6 = *(void *)(v5 - 8);
    if (v4)
    {
      uint64_t v13 = *(void *)(v5 - 8);
      sub_1BE047C78(v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a1, type metadata accessor for EventRecurrenceRuleModelObject);
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
      uint64_t v8 = a1;
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      uint64_t v8 = a1;
      uint64_t v9 = 1;
    }
    uint64_t v11 = v5;
  }
  else
  {
    uint64_t v10 = type metadata accessor for EventRecurrenceRuleModelObject(0);
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v11 = v10;
    uint64_t v8 = a1;
    uint64_t v9 = 1;
  }

  return v7(v8, v9, 1, v11);
}

uint64_t sub_1BE03B2D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for EventModelObject() + 124));
  if (v3)
  {
    uint64_t v4 = *(void *)(v3 + 16);
    uint64_t v5 = type metadata accessor for EventRecurrenceRuleModelObject(0);
    uint64_t v6 = *(void *)(v5 - 8);
    if (v4)
    {
      uint64_t v13 = *(void *)(v5 - 8);
      sub_1BE047C78(v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a2, type metadata accessor for EventRecurrenceRuleModelObject);
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
      uint64_t v8 = a2;
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
      uint64_t v8 = a2;
      uint64_t v9 = 1;
    }
    uint64_t v11 = v5;
  }
  else
  {
    uint64_t v10 = type metadata accessor for EventRecurrenceRuleModelObject(0);
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v11 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v7(v8, v9, 1, v11);
}

uint64_t sub_1BE03B400(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4C78);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDF86808(a1, (uint64_t)v4, &qword_1EA0E4C78);
  return EventModelObject.singleRecurrenceRule.setter((uint64_t)v4);
}

uint64_t EventModelObject.singleRecurrenceRule.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4C78);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BDF86808(a1, (uint64_t)v9, &qword_1EA0E4C78);
  int v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3);
  uint64_t v11 = 0;
  if (v10 != 1)
  {
    sub_1BE047C10((uint64_t)v9, (uint64_t)v6, type metadata accessor for EventRecurrenceRuleModelObject);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3DC8);
    unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1BE07ABD0;
    sub_1BE047C10((uint64_t)v6, v11 + v12, type metadata accessor for EventRecurrenceRuleModelObject);
  }
  sub_1BDF8686C(a1, &qword_1EA0E4C78);
  uint64_t v13 = *(int *)(type metadata accessor for EventModelObject() + 124);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v13) = v11;
  return result;
}

void (*EventModelObject.singleRecurrenceRule.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x48uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v3[2] = v5;
  v3[3] = malloc(*(void *)(v5 + 64));
  size_t v7 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4C78) - 8) + 64);
  v3[4] = malloc(v7);
  v3[5] = malloc(v7);
  v3[6] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v3[7] = v8;
  uint64_t v9 = *(int *)(type metadata accessor for EventModelObject() + 124);
  *((_DWORD *)v3 + 16) = v9;
  uint64_t v10 = *(void *)(v1 + v9);
  if (v10 && *(void *)(v10 + 16))
  {
    sub_1BE047C78(v10 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), (uint64_t)v8, type metadata accessor for EventRecurrenceRuleModelObject);
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = 1;
  }
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v8, v11, 1, v4);
  return sub_1BE03B7EC;
}

void sub_1BE03B7EC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (*a1)[7];
  if (a2)
  {
    uint64_t v5 = v2[4];
    uint64_t v4 = v2[5];
    uint64_t v6 = v2[1];
    uint64_t v7 = v2[2];
    sub_1BDF86808(v3, v4, &qword_1EA0E4C78);
    sub_1BDF86808(v4, v5, &qword_1EA0E4C78);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      uint64_t v8 = 0;
    }
    else
    {
      uint64_t v13 = v2[3];
      uint64_t v14 = v2[2];
      sub_1BE047C10(v2[4], v13, type metadata accessor for EventRecurrenceRuleModelObject);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3DC8);
      unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1BE07ABD0;
      sub_1BE047C10(v13, v8 + v15, type metadata accessor for EventRecurrenceRuleModelObject);
    }
    uint64_t v16 = *((int *)v2 + 16);
    uint64_t v18 = (void *)v2[6];
    CGRect v17 = (void *)v2[7];
    uint64_t v20 = (void *)v2[4];
    uint64_t v19 = (void *)v2[5];
    uint64_t v21 = (void *)v2[3];
    uint64_t v22 = *v2;
    sub_1BDF8686C((uint64_t)v19, &qword_1EA0E4C78);
    swift_bridgeObjectRelease();
    *(void *)(v22 + v16) = v8;
    sub_1BDF8686C((uint64_t)v17, &qword_1EA0E4C78);
  }
  else
  {
    uint64_t v9 = v2[6];
    uint64_t v10 = v2[1];
    uint64_t v11 = v2[2];
    sub_1BDF86808(v3, v9, &qword_1EA0E4C78);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v24 = v2[2];
      uint64_t v23 = v2[3];
      sub_1BE047C10(v2[6], v23, type metadata accessor for EventRecurrenceRuleModelObject);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3DC8);
      unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BE07ABD0;
      sub_1BE047C10(v23, v12 + v25, type metadata accessor for EventRecurrenceRuleModelObject);
    }
    uint64_t v26 = *((int *)v2 + 16);
    uint64_t v18 = (void *)v2[6];
    CGRect v17 = (void *)v2[7];
    uint64_t v20 = (void *)v2[4];
    uint64_t v19 = (void *)v2[5];
    uint64_t v21 = (void *)v2[3];
    uint64_t v27 = *v2;
    sub_1BDF8686C((uint64_t)v17, &qword_1EA0E4C78);
    swift_bridgeObjectRelease();
    *(void *)(v27 + v26) = v12;
  }
  free(v17);
  free(v18);
  free(v19);
  free(v20);
  free(v21);

  free(v2);
}

uint64_t EventModelObject.organizer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDF86808(v1 + *(int *)(v3 + 128), a1, &qword_1EA0E3E28);
}

uint64_t EventModelObject.organizer.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDFF85F8(a1, v1 + *(int *)(v3 + 128), &qword_1EA0E3E28);
}

uint64_t (*EventModelObject.organizer.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.attendees.getter()
{
  type metadata accessor for EventModelObject();

  return swift_bridgeObjectRetain();
}

uint64_t EventModelObject.attendees.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for EventModelObject() + 132);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*EventModelObject.attendees.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.selfAttendee.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDF86808(v1 + *(int *)(v3 + 136), a1, &qword_1EA0E3E20);
}

uint64_t EventModelObject.selfAttendee.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDFF85F8(a1, v1 + *(int *)(v3 + 136), &qword_1EA0E3E20);
}

uint64_t (*EventModelObject.selfAttendee.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDF86808(v1 + *(int *)(v3 + 140), a1, &qword_1EB678020);
}

uint64_t EventModelObject.url.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDFF85F8(a1, v1 + *(int *)(v3 + 140), &qword_1EB678020);
}

uint64_t (*EventModelObject.url.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.hasAttachment.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 144));
}

uint64_t EventModelObject.hasAttachment.setter(char a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(unsigned char *)(v1 + *(int *)(result + 144)) = a1;
  return result;
}

uint64_t (*EventModelObject.hasAttachment.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.conferenceURLForDisplayCached.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 148));
}

uint64_t EventModelObject.conferenceURLForDisplayCached.setter(char a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(unsigned char *)(v1 + *(int *)(result + 148)) = a1;
  return result;
}

uint64_t (*EventModelObject.conferenceURLForDisplayCached.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.conferenceURLForDisplay.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDF86808(v1 + *(int *)(v3 + 152), a1, &qword_1EB678020);
}

uint64_t EventModelObject.conferenceURLForDisplay.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for EventModelObject();
  return sub_1BDFF85F8(a1, v1 + *(int *)(v3 + 152), &qword_1EB678020);
}

uint64_t (*EventModelObject.conferenceURLForDisplay.modify())(void)
{
  return nullsub_1;
}

void EventModelObject.integration.getter(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for EventModelObject() + 156));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  unint64_t v10 = v3[6];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;

  sub_1BE044638(v4, v5, v6, v7, v8, v9, v10);
}

__n128 EventModelObject.integration.setter(long long *a1)
{
  long long v6 = a1[1];
  long long v7 = *a1;
  __n128 v5 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = v1 + *(int *)(type metadata accessor for EventModelObject() + 156);
  sub_1BE039724(*(void *)v3, *(void *)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48));
  *(_OWORD *)uint64_t v3 = v7;
  *(_OWORD *)(v3 + 16) = v6;
  __n128 result = v5;
  *(__n128 *)(v3 + 32) = v5;
  *(void *)(v3 + 48) = v2;
  return result;
}

uint64_t (*EventModelObject.integration.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.isEditable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 160));
}

uint64_t EventModelObject.isEditable.setter(char a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(unsigned char *)(v1 + *(int *)(result + 160)) = a1;
  return result;
}

uint64_t (*EventModelObject.isEditable.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.isNew.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 164));
}

uint64_t EventModelObject.isNew.setter(char a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(unsigned char *)(v1 + *(int *)(result + 164)) = a1;
  return result;
}

uint64_t (*EventModelObject.isNew.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.isSuggestedEvent.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for EventModelObject() + 168));
}

uint64_t EventModelObject.isSuggestedEvent.setter(char a1)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *(unsigned char *)(v1 + *(int *)(result + 168)) = a1;
  return result;
}

uint64_t (*EventModelObject.isSuggestedEvent.modify())(void)
{
  return nullsub_1;
}

uint64_t EventModelObject.constraints.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
  MEMORY[0x1F4188790](v3 - 8);
  __n128 v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for EventModelObject();
  sub_1BDF86808(v1 + *(int *)(v6 + 96), (uint64_t)v5, &qword_1EA0E3E10);
  uint64_t v7 = type metadata accessor for EventCalendarModelObject();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    uint64_t result = sub_1BDF8686C((uint64_t)v5, &qword_1EA0E3E10);
    *(_OWORD *)a1 = xmmword_1BE07CF00;
    *(unsigned char *)(a1 + 22) = 0;
    *(_WORD *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 16) = 0;
  }
  else
  {
    sub_1BDFB8210((uint64_t)(v5 + 104), (uint64_t)v13, &qword_1EA0E3400);
    sub_1BDFB8210((uint64_t)v13, (uint64_t)v14, &qword_1EA0E3400);
    int v9 = sub_1BDFC49E4((uint64_t)v14);
    unint64_t v10 = v16 | ((unint64_t)(v17 | (v18 << 16)) << 32);
    if (v9 == 1) {
      unint64_t v10 = 0;
    }
    int32x2_t v11 = vdup_n_s32(v9 == 1);
    v12.i64[0] = v11.u32[0];
    v12.i64[1] = v11.u32[1];
    *(int8x16_t *)a1 = vbslq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v12, 0x3FuLL)), (int8x16_t)xmmword_1BE07CF00, v15);
    *(_DWORD *)(a1 + 16) = v10;
    *(unsigned char *)(a1 + 22) = BYTE6(v10);
    *(_WORD *)(a1 + 20) = WORD2(v10);
    return sub_1BE0446A0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
  }
  return result;
}

uint64_t EventModelObject.init(_:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void (*v299)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unint64_t v303;
  uint64_t v304;
  void *v305;
  uint64_t v306;
  uint64_t v307;
  char v308;
  int *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v316;
  char *v317;
  uint64_t v318;
  void (*v319)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v320;
  uint64_t v321;
  uint64_t *v322;
  uint64_t *v323;
  uint64_t v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  void (*v330)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v331;
  uint64_t v332;
  char *v333;
  uint64_t v334;
  uint64_t *v335;
  uint64_t v336;
  void (*v337)(uint64_t, void, uint64_t, uint64_t);
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  char *v341;
  uint64_t v342;
  void (*v343)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  void (*v350)(void);
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  char *v355;
  uint64_t v356;
  char *v357;
  void *v358;
  char *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  int *v364;
  void *v365;
  void *v366;
  char *v367;
  uint64_t v368;
  uint64_t *v369;
  long long v370;
  long long v371;
  long long v372;
  long long v373;
  long long v374;
  long long v375;
  long long v376;
  long long v377;
  long long v378;
  long long v379;
  long long v380;
  void v381[4];
  void v382[3];
  uint64_t v383;
  uint64_t v384;
  void v385[5];
  long long v386;
  uint64_t v387;
  long long v388;
  long long v389;
  uint64_t v390;
  _OWORD v391[11];
  long long v392;
  uint64_t v393;
  _OWORD v394[11];
  long long v395;
  long long v396;
  uint64_t v397;
  _OWORD v398[11];
  long long v399;
  uint64_t v400;
  _OWORD v401[11];
  long long v402;
  long long v403;
  uint64_t v404;
  long long v405;
  long long v406;
  long long v407;
  long long v408;
  long long v409;
  long long v410;
  long long v411;
  long long v412;
  long long v413;
  long long v414;
  long long v415;
  long long v416;
  uint64_t v417;
  long long v418;
  long long v419;
  uint64_t AssociatedConformanceWitness;
  long long v421;
  long long v422;
  uint64_t v423;
  _OWORD v424[11];

  v360 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v3 - 8);
  v359 = (char *)&v316 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E20);
  MEMORY[0x1F4188790](v5 - 8);
  v357 = (char *)&v316 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EventAttendeeModelObject(0);
  v363 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  v355 = (char *)&v316 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
  MEMORY[0x1F4188790](v9 - 8);
  v349 = (char *)&v316 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  v347 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11 - 8);
  v346 = (char *)&v316 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  v340 = (uint64_t)&v316 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  v341 = (char *)&v316 - v16;
  uint64_t v17 = type metadata accessor for EventAlarmModelObject();
  v368 = *(void *)(v17 - 8);
  v369 = (uint64_t *)v17;
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  v367 = (char *)&v316 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  v317 = (char *)&v316 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
  MEMORY[0x1F4188790](v21 - 8);
  v333 = (char *)&v316 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E18);
  MEMORY[0x1F4188790](v23 - 8);
  v325 = (char *)&v316 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v316 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v28 = (int *)type metadata accessor for EventModelObject();
  uint64_t v29 = MEMORY[0x1F4188790](v28);
  long long v31 = (uint64_t *)((char *)&v316 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  v364 = (int *)((char *)v31 + *(int *)(v29 + 44));
  uint64_t v32 = v364;
  uint64_t v33 = sub_1BE06F140();
  long long v34 = *(void (**)(void))(*(void *)(v33 - 8) + 56);
  ((void (*)(int *, uint64_t, uint64_t, uint64_t))v34)(v32, 1, 1, v33);
  v366 = (void *)((char *)v31 + v28[12]);
  v34();
  v365 = (void *)((char *)v31 + v28[14]);
  v34();
  uint64_t v35 = (uint64_t)v31 + v28[15];
  uint64_t v36 = type metadata accessor for EventVirtualConferenceModelObject(0);
  uint64_t v37 = *(void *)(v36 - 8);
  long long v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  v320 = v36;
  v321 = v35;
  v318 = v37 + 56;
  v319 = v38;
  ((void (*)(uint64_t, uint64_t, uint64_t))v38)(v35, 1, 1);
  long long v39 = (void *)((char *)v31 + v28[16]);
  *long long v39 = 0;
  v39[1] = 0;
  v322 = v39;
  uint64_t v40 = (void *)((char *)v31 + v28[17]);
  *uint64_t v40 = 0;
  v40[1] = 0;
  v323 = v40;
  v324 = v28[18];
  *(void *)((char *)v31 + v324) = 0;
  uint64_t v41 = (uint64_t)v31 + v28[19];
  sub_1BDFF80B8(v424);
  v326 = v41;
  sub_1BDFB8210((uint64_t)v424, v41, &qword_1EA0E3E38);
  v327 = (uint64_t)v31 + v28[20];
  sub_1BDFB8210((uint64_t)v424, v327, &qword_1EA0E3E38);
  v328 = (uint64_t)v31 + v28[21];
  sub_1BDFB8210((uint64_t)v424, v328, &qword_1EA0E3E38);
  uint64_t v42 = (uint64_t)v31 + v28[24];
  uint64_t v43 = type metadata accessor for EventCalendarModelObject();
  uint64_t v44 = *(void *)(v43 - 8);
  long long v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
  v331 = v43;
  v332 = v42;
  v329 = v44 + 56;
  v330 = v45;
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v42, 1, 1);
  v334 = v28[27];
  *(void *)((char *)v31 + v334) = 0;
  long long v46 = (void *)((char *)v31 + v28[28]);
  *long long v46 = 0;
  v46[1] = 0;
  v335 = v46;
  uint64_t v47 = (uint64_t)v31 + v28[30];
  uint64_t v48 = sub_1BE06EEE0();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56);
  v361 = v48;
  v362 = v47;
  v338 = v49 + 56;
  v336 = v49;
  v337 = v50;
  ((void (*)(uint64_t, uint64_t, uint64_t))v50)(v47, 1, 1);
  v339 = v28[31];
  *(void *)((char *)v31 + v339) = 0;
  uint64_t v51 = (uint64_t)v31 + v28[32];
  uint64_t v52 = type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
  v344 = v52;
  v345 = v51;
  v342 = v53 + 56;
  v343 = v54;
  ((void (*)(uint64_t, uint64_t, uint64_t))v54)(v51, 1, 1);
  v348 = v28[33];
  *(void *)((char *)v31 + v348) = 0;
  uint64_t v55 = (uint64_t)v31 + v28[34];
  uint64_t v56 = *(void (**)(void))(v363 + 56);
  v351 = v363 + 56;
  v352 = v55;
  v356 = v7;
  v350 = v56;
  v56();
  uint64_t v57 = (uint64_t)v31 + v28[35];
  uint64_t v58 = sub_1BE06EE10();
  uint64_t v59 = *(void (**)(void))(*(void *)(v58 - 8) + 56);
  v353 = v57;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v59)(v57, 1, 1, v58);
  v354 = (uint64_t)v31 + v28[38];
  v59();
  uint64_t v60 = (char *)v31 + v28[39];
  *(void *)uint64_t v60 = 0;
  *((void *)v60 + 1) = 0;
  *((void *)v60 + 2) = 1;
  *(_OWORD *)(v60 + 24) = 0u;
  v358 = v60;
  *(_OWORD *)(v60 + 40) = 0u;
  uint64_t v61 = a1[3];
  uint64_t v62 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v61);
  *long long v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 152))(v61, v62);
  v31[1] = v63;
  uint64_t v64 = a1[3];
  uint64_t v65 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v64);
  v31[2] = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 168))(v64, v65);
  v31[3] = v66;
  uint64_t v67 = a1[3];
  uint64_t v68 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v67);
  v31[4] = (*(uint64_t (**)(uint64_t, uint64_t))(v68 + 160))(v67, v68);
  v31[5] = v69;
  uint64_t v70 = a1[3];
  uint64_t v71 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v70);
  (*(void (**)(uint64_t, uint64_t))(v71 + 176))(v70, v71);
  uint64_t v72 = a1[3];
  uint64_t v73 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v72);
  (*(void (**)(uint64_t, uint64_t))(v73 + 184))(v72, v73);
  uint64_t v74 = a1[3];
  uint64_t v75 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v74);
  *((unsigned char *)v31 + v28[9]) = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 200))(v74, v75) & 1;
  uint64_t v76 = a1[3];
  uint64_t v77 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v76);
  *((unsigned char *)v31 + v28[10]) = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 208))(v76, v77) & 1;
  uint64_t v78 = a1[3];
  uint64_t v79 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v78);
  (*(void (**)(uint64_t, uint64_t))(v79 + 216))(v78, v79);
  sub_1BDFF85F8((uint64_t)v27, (uint64_t)v364, &qword_1EA0E1118);
  uint64_t v80 = a1[3];
  uint64_t v81 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v80);
  (*(void (**)(uint64_t, uint64_t))(v81 + 224))(v80, v81);
  sub_1BDFF85F8((uint64_t)v27, (uint64_t)v366, &qword_1EA0E1118);
  uint64_t v82 = a1[3];
  uint64_t v83 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v82);
  char v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 232))(v82, v83);
  v364 = v28;
  uint64_t v85 = v28[13];
  v366 = v31;
  *((unsigned char *)v31 + v85) = v84 & 1;
  uint64_t v86 = a1[3];
  uint64_t v87 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v86);
  (*(void (**)(uint64_t, uint64_t))(v87 + 240))(v86, v87);
  sub_1BDFF85F8((uint64_t)v27, (uint64_t)v365, &qword_1EA0E1118);
  uint64_t v88 = a1[3];
  uint64_t v89 = a1[4];
  v365 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v88);
  uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v89 + 248);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v92 = sub_1BE0709E0();
  uint64_t v93 = *(void *)(v92 - 8);
  MEMORY[0x1F4188790](v92);
  uint64_t v95 = (char *)&v316 - v94;
  v90(v88, v89);
  uint64_t v96 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v95, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v93 + 8))(v95, v92);
    uint64_t AssociatedConformanceWitness = 0;
    v419 = 0u;
    v418 = 0u;
  }
  else
  {
    *((void *)&v419 + 1) = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v418);
    (*(void (**)(uint64_t *, char *, uint64_t))(v96 + 32))(boxed_opaque_existential_1, v95, AssociatedTypeWitness);
  }
  sub_1BDF86808((uint64_t)&v418, (uint64_t)&v405, &qword_1EA0E4C80);
  uint64_t v98 = (uint64_t)v325;
  if (*((void *)&v406 + 1))
  {
    sub_1BDFBEF38(&v405, (uint64_t)v401);
    sub_1BDFC3C28((uint64_t)v401, (uint64_t)v398);
    EventVirtualConferenceModelObject.init(_:)(v398, v98);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v401);
    uint64_t v99 = (char *)v98;
    uint64_t v100 = 0;
  }
  else
  {
    uint64_t v99 = v325;
    uint64_t v100 = 1;
  }
  v319(v99, v100, 1, v320);
  sub_1BDF8686C((uint64_t)&v418, &qword_1EA0E4C80);
  sub_1BDFF85F8(v98, v321, &qword_1EA0E3E18);
  uint64_t v101 = v365;
  uint64_t v102 = v365[3];
  uint64_t v103 = v365[4];
  __swift_project_boxed_opaque_existential_1(v365, v102);
  uint64_t v104 = (*(uint64_t (**)(uint64_t, uint64_t))(v103 + 256))(v102, v103);
  uint64_t v106 = v105;
  uint64_t v107 = v322;
  swift_bridgeObjectRelease();
  *uint64_t v107 = v104;
  v107[1] = v106;
  uint64_t v108 = v101[3];
  uint64_t v109 = v101[4];
  __swift_project_boxed_opaque_existential_1(v101, v108);
  uint64_t v110 = (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 264))(v108, v109);
  uint64_t v112 = v111;
  uint64_t v113 = v323;
  swift_bridgeObjectRelease();
  *uint64_t v113 = v110;
  v113[1] = v112;
  uint64_t v114 = v101[3];
  uint64_t v115 = v101[4];
  __swift_project_boxed_opaque_existential_1(v101, v114);
  uint64_t v116 = (*(uint64_t (**)(uint64_t, uint64_t))(v115 + 272))(v114, v115);
  uint64_t v117 = (uint64_t)v366;
  uint64_t v118 = v324;
  swift_bridgeObjectRelease();
  *(void *)(v117 + v118) = v116;
  uint64_t v119 = v101[3];
  uint64_t v120 = v101[4];
  __swift_project_boxed_opaque_existential_1(v101, v119);
  v325 = (char *)(v120 + 280);
  uint64_t v121 = *(void (**)(uint64_t, uint64_t))(v120 + 280);
  uint64_t v122 = swift_getAssociatedTypeWitness();
  uint64_t v123 = sub_1BE0709E0();
  uint64_t v124 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  uint64_t v126 = (char *)&v316 - v125;
  v121(v119, v120);
  uint64_t v127 = *(void *)(v122 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48))(v126, 1, v122) == 1)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v126, v123);
    v423 = 0;
    v422 = 0u;
    v421 = 0u;
  }
  else
  {
    *((void *)&v422 + 1) = v122;
    v423 = swift_getAssociatedConformanceWitness();
    uint64_t v128 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v421);
    (*(void (**)(uint64_t *, char *, uint64_t))(v127 + 32))(v128, v126, v122);
  }
  sub_1BDF86808((uint64_t)&v421, (uint64_t)&v416, &qword_1EB678038);
  if (v417)
  {
    sub_1BDFBEF38(&v416, (uint64_t)&v418);
    sub_1BDFC3C28((uint64_t)&v418, (uint64_t)v398);
    EventLocationModelObject.init(_:)(v398, v401);
    v413 = v401[8];
    v414 = v401[9];
    v415 = v401[10];
    v409 = v401[4];
    v410 = v401[5];
    v412 = v401[7];
    v411 = v401[6];
    v405 = v401[0];
    v406 = v401[1];
    v408 = v401[3];
    v407 = v401[2];
    nullsub_1(&v405);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v418);
    uint64_t v129 = &v405;
  }
  else
  {
    uint64_t v129 = v424;
  }
  sub_1BDFB8210((uint64_t)v129, (uint64_t)&v418, &qword_1EA0E3E38);
  sub_1BDF8686C((uint64_t)&v421, &qword_1EB678038);
  uint64_t v130 = v326;
  sub_1BDFB8210(v326, (uint64_t)&v405, &qword_1EA0E3E38);
  sub_1BE03A394(&v405, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  sub_1BDFB8210((uint64_t)&v418, v130, &qword_1EA0E3E38);
  uint64_t v131 = v365[3];
  uint64_t v132 = v365[4];
  __swift_project_boxed_opaque_existential_1(v365, v131);
  v326 = v132 + 288;
  uint64_t v133 = *(void (**)(uint64_t, uint64_t))(v132 + 288);
  uint64_t v134 = swift_getAssociatedTypeWitness();
  uint64_t v135 = sub_1BE0709E0();
  uint64_t v136 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  uint64_t v138 = (char *)&v316 - v137;
  v133(v131, v132);
  uint64_t v139 = *(void *)(v134 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48))(v138, 1, v134) == 1)
  {
    (*(void (**)(char *, uint64_t))(v136 + 8))(v138, v135);
    v404 = 0;
    v403 = 0u;
    v402 = 0u;
  }
  else
  {
    *((void *)&v403 + 1) = v134;
    v404 = swift_getAssociatedConformanceWitness();
    int v140 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v402);
    (*(void (**)(uint64_t *, char *, uint64_t))(v139 + 32))(v140, v138, v134);
  }
  sub_1BDF86808((uint64_t)&v402, (uint64_t)&v399, &qword_1EB678038);
  if (v400)
  {
    sub_1BDFBEF38(&v399, (uint64_t)v401);
    sub_1BDFC3C28((uint64_t)v401, (uint64_t)v391);
    EventLocationModelObject.init(_:)(v391, v394);
    v398[8] = v394[8];
    v398[9] = v394[9];
    v398[10] = v394[10];
    v398[4] = v394[4];
    v398[5] = v394[5];
    v398[7] = v394[7];
    v398[6] = v394[6];
    v398[0] = v394[0];
    v398[1] = v394[1];
    v398[3] = v394[3];
    v398[2] = v394[2];
    nullsub_1(v398);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v401);
    long long v141 = v398;
  }
  else
  {
    long long v141 = v424;
  }
  sub_1BDFB8210((uint64_t)v141, (uint64_t)v401, &qword_1EA0E3E38);
  sub_1BDF8686C((uint64_t)&v402, &qword_1EB678038);
  uint64_t v142 = v327;
  sub_1BDFB8210(v327, (uint64_t)v398, &qword_1EA0E3E38);
  sub_1BE03A394(v398, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  sub_1BDFB8210((uint64_t)v401, v142, &qword_1EA0E3E38);
  uint64_t v143 = v365[3];
  uint64_t v144 = v365[4];
  __swift_project_boxed_opaque_existential_1(v365, v143);
  v327 = v144 + 296;
  uint64_t v145 = *(void (**)(uint64_t, uint64_t))(v144 + 296);
  uint64_t v146 = swift_getAssociatedTypeWitness();
  uint64_t v147 = sub_1BE0709E0();
  uint64_t v148 = *(void *)(v147 - 8);
  MEMORY[0x1F4188790](v147);
  uint64_t v150 = (char *)&v316 - v149;
  v145(v143, v144);
  uint64_t v151 = *(void *)(v146 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48))(v150, 1, v146) == 1)
  {
    (*(void (**)(char *, uint64_t))(v148 + 8))(v150, v147);
    v397 = 0;
    v396 = 0u;
    v395 = 0u;
  }
  else
  {
    *((void *)&v396 + 1) = v146;
    v397 = swift_getAssociatedConformanceWitness();
    uint64_t v152 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v395);
    (*(void (**)(uint64_t *, char *, uint64_t))(v151 + 32))(v152, v150, v146);
  }
  sub_1BDF86808((uint64_t)&v395, (uint64_t)&v392, &qword_1EB678038);
  if (v393)
  {
    sub_1BDFBEF38(&v392, (uint64_t)v394);
    sub_1BDFC3C28((uint64_t)v394, (uint64_t)&v388);
    EventLocationModelObject.init(_:)(&v388, &v370);
    v391[8] = v378;
    v391[9] = v379;
    v391[10] = v380;
    v391[4] = v374;
    v391[5] = v375;
    v391[6] = v376;
    v391[7] = v377;
    v391[0] = v370;
    v391[1] = v371;
    v391[2] = v372;
    v391[3] = v373;
    nullsub_1(v391);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v394);
    uint64_t v153 = v391;
  }
  else
  {
    uint64_t v153 = v424;
  }
  sub_1BDFB8210((uint64_t)v153, (uint64_t)v394, &qword_1EA0E3E38);
  sub_1BDF8686C((uint64_t)&v395, &qword_1EB678038);
  uint64_t v154 = v328;
  sub_1BDFB8210(v328, (uint64_t)v391, &qword_1EA0E3E38);
  sub_1BE03A394(v391, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  sub_1BDFB8210((uint64_t)v394, v154, &qword_1EA0E3E38);
  uint64_t v155 = v365;
  uint64_t v156 = v365[3];
  uint64_t v157 = v365[4];
  __swift_project_boxed_opaque_existential_1(v365, v156);
  double v158 = (*(double (**)(uint64_t, uint64_t))(v157 + 304))(v156, v157);
  uint64_t v159 = v364;
  uint64_t v160 = (uint64_t)v366;
  *(double *)((char *)v366 + v364[22]) = v158;
  uint64_t v161 = v155[3];
  uint64_t v162 = v155[4];
  __swift_project_boxed_opaque_existential_1(v155, v161);
  *(void *)(v160 + v159[23]) = (*(uint64_t (**)(uint64_t, uint64_t))(v162 + 312))(v161, v162);
  uint64_t v163 = v155[3];
  uint64_t v164 = v155[4];
  __swift_project_boxed_opaque_existential_1(v155, v163);
  v328 = v164 + 320;
  uint64_t v165 = *(void (**)(uint64_t, uint64_t))(v164 + 320);
  uint64_t v166 = swift_getAssociatedTypeWitness();
  uint64_t v167 = sub_1BE0709E0();
  uint64_t v168 = *(void *)(v167 - 8);
  MEMORY[0x1F4188790](v167);
  uint64_t v170 = (char *)&v316 - v169;
  v165(v163, v164);
  uint64_t v171 = *(void *)(v166 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48))(v170, 1, v166) == 1)
  {
    (*(void (**)(char *, uint64_t))(v168 + 8))(v170, v167);
    *(void *)&v372 = 0;
    v370 = 0u;
    v371 = 0u;
  }
  else
  {
    *((void *)&v371 + 1) = v166;
    *(void *)&v372 = swift_getAssociatedConformanceWitness();
    uint64_t v172 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v370);
    (*(void (**)(uint64_t *, char *, uint64_t))(v171 + 32))(v172, v170, v166);
  }
  uint64_t v173 = (uint64_t)v346;
  uint64_t v174 = (uint64_t)v333;
  sub_1BDF86808((uint64_t)&v370, (uint64_t)&v388, &qword_1EA0E4C88);
  if (*((void *)&v389 + 1))
  {
    sub_1BDFBEF38(&v388, (uint64_t)&v386);
    sub_1BDFC3C28((uint64_t)&v386, (uint64_t)v385);
    EventCalendarModelObject.init(_:)(v385, v174);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v386);
    uint64_t v175 = v174;
    uint64_t v176 = 0;
  }
  else
  {
    uint64_t v175 = v174;
    uint64_t v176 = 1;
  }
  v330(v175, v176, 1, v331);
  sub_1BDF8686C((uint64_t)&v370, &qword_1EA0E4C88);
  sub_1BDFF85F8(v174, v332, &qword_1EA0E3E10);
  int v177 = v365;
  uint64_t v178 = v365[3];
  uint64_t v179 = v365[4];
  __swift_project_boxed_opaque_existential_1(v365, v178);
  uint64_t v180 = (*(uint64_t (**)(uint64_t, uint64_t))(v179 + 328))(v178, v179);
  v181 = v364;
  uint64_t v182 = (uint64_t)v366;
  *(void *)((char *)v366 + v364[25]) = v180;
  uint64_t v183 = v177[3];
  uint64_t v184 = v177[4];
  __swift_project_boxed_opaque_existential_1(v177, v183);
  *(void *)(v182 + v181[26]) = (*(uint64_t (**)(uint64_t, uint64_t))(v184 + 336))(v183, v184);
  uint64_t v185 = v177[3];
  uint64_t v186 = v177[4];
  __swift_project_boxed_opaque_existential_1(v177, v185);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v186 + 344))(v185, v186))
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4CB0);
    uint64_t v187 = sub_1BE070C70();
    swift_bridgeObjectRelease();
    int64_t v188 = *(void *)(v187 + 16);
    if (v188)
    {
      *(void *)&v386 = MEMORY[0x1E4FBC860];
      sub_1BDFF49E4(0, v188, 0);
      v346 = (char *)v187;
      uint64_t v189 = v187 + 32;
      uint64_t v190 = v386;
      uint64_t v191 = (uint64_t)v317;
      do
      {
        sub_1BDFC3C28(v189, (uint64_t)&v370);
        sub_1BDFC3C28((uint64_t)&v370, (uint64_t)&v388);
        uint64_t v192 = *((void *)&v389 + 1);
        uint64_t v193 = v390;
        __swift_project_boxed_opaque_existential_1(&v388, *((uint64_t *)&v389 + 1));
        uint64_t v194 = (uint64_t)v367;
        (*(void (**)(uint64_t, uint64_t))(v193 + 8))(v192, v193);
        uint64_t v195 = *((void *)&v389 + 1);
        uint64_t v196 = v390;
        __swift_project_boxed_opaque_existential_1(&v388, *((uint64_t *)&v389 + 1));
        char v197 = (*(uint64_t (**)(uint64_t, uint64_t))(v196 + 16))(v195, v196);
        *(unsigned char *)(v194 + *((int *)v369 + 5)) = v197 & 1;
        sub_1BE047C10(v194, v191, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v388);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v370);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDFF49E4(0, *(void *)(v190 + 16) + 1, 1);
          uint64_t v190 = v386;
        }
        unint64_t v199 = *(void *)(v190 + 16);
        unint64_t v198 = *(void *)(v190 + 24);
        if (v199 >= v198 >> 1)
        {
          sub_1BDFF49E4(v198 > 1, v199 + 1, 1);
          uint64_t v190 = v386;
        }
        *(void *)(v190 + 16) = v199 + 1;
        sub_1BE047C10(v191, v190+ ((*(unsigned __int8 *)(v368 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v368 + 80))+ *(void *)(v368 + 72) * v199, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
        v189 += 40;
        --v188;
      }
      while (v188);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v190 = MEMORY[0x1E4FBC860];
    }
  }
  else
  {
    uint64_t v190 = 0;
  }
  uint64_t v200 = (uint64_t)v366;
  uint64_t v201 = v334;
  swift_bridgeObjectRelease();
  *(void *)(v200 + v201) = v190;
  v202 = v365;
  uint64_t v203 = v365[3];
  uint64_t v204 = v365[4];
  __swift_project_boxed_opaque_existential_1(v365, v203);
  uint64_t v205 = (*(uint64_t (**)(uint64_t, uint64_t))(v204 + 352))(v203, v204);
  uint64_t v207 = v206;
  v208 = v335;
  swift_bridgeObjectRelease();
  uint64_t *v208 = v205;
  v208[1] = v207;
  uint64_t v209 = v202[3];
  uint64_t v210 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v209);
  uint64_t v211 = (*(uint64_t (**)(uint64_t, uint64_t))(v210 + 360))(v209, v210);
  *(void *)(v200 + v364[29]) = v211;
  uint64_t v212 = v340;
  sub_1BDF86808(v362, v340, &qword_1EB677CC0);
  sub_1BDFC3C28((uint64_t)v202, (uint64_t)&v370);
  uint64_t v213 = v336;
  uint64_t v214 = v361;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v336 + 48))(v212, 1, v361) == 1)
  {
    uint64_t v215 = *((void *)&v371 + 1);
    uint64_t v216 = v372;
    __swift_project_boxed_opaque_existential_1(&v370, *((uint64_t *)&v371 + 1));
    uint64_t v217 = (uint64_t)v341;
    (*(void (**)(uint64_t, uint64_t))(v216 + 176))(v215, v216);
    uint64_t v214 = v361;
    sub_1BDF8686C(v212, &qword_1EB677CC0);
  }
  else
  {
    uint64_t v217 = (uint64_t)v341;
    (*(void (**)(char *, uint64_t, uint64_t))(v213 + 32))(v341, v212, v214);
  }
  uint64_t v218 = v347;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v370);
  v337(v217, 0, 1, v214);
  sub_1BDFF85F8(v217, v362, &qword_1EB677CC0);
  uint64_t v219 = v202[3];
  uint64_t v220 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v219);
  uint64_t v221 = (*(uint64_t (**)(uint64_t, uint64_t))(v220 + 376))(v219, v220);
  if (v221)
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4CA8);
    uint64_t v222 = sub_1BE070C70();
    swift_bridgeObjectRelease();
    int64_t v223 = *(void *)(v222 + 16);
    if (v223)
    {
      v385[0] = MEMORY[0x1E4FBC860];
      sub_1BDFF4B2C(0, v223, 0);
      uint64_t v224 = v222 + 32;
      uint64_t v221 = v385[0];
      do
      {
        sub_1BDFC3C28(v224, (uint64_t)&v388);
        sub_1BDFC3C28((uint64_t)&v388, (uint64_t)&v386);
        EventRecurrenceRuleModelObject.init(_:)(&v386, v173);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v388);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDFF4B2C(0, *(void *)(v221 + 16) + 1, 1);
          uint64_t v221 = v385[0];
        }
        unint64_t v226 = *(void *)(v221 + 16);
        unint64_t v225 = *(void *)(v221 + 24);
        if (v226 >= v225 >> 1)
        {
          sub_1BDFF4B2C(v225 > 1, v226 + 1, 1);
          uint64_t v221 = v385[0];
        }
        *(void *)(v221 + 16) = v226 + 1;
        sub_1BE047C10(v173, v221+ ((*(unsigned __int8 *)(v218 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v218 + 80))+ *(void *)(v218 + 72) * v226, type metadata accessor for EventRecurrenceRuleModelObject);
        v224 += 40;
        --v223;
      }
      while (v223);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v221 = MEMORY[0x1E4FBC860];
    }
  }
  uint64_t v227 = (uint64_t)v366;
  uint64_t v228 = v339;
  swift_bridgeObjectRelease();
  *(void *)(v227 + v228) = v221;
  uint64_t v229 = v202[3];
  uint64_t v230 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v229);
  v368 = v230 + 392;
  v231 = *(void (**)(uint64_t, uint64_t))(v230 + 392);
  uint64_t v232 = swift_getAssociatedTypeWitness();
  uint64_t v233 = sub_1BE0709E0();
  v369 = &v316;
  uint64_t v234 = *(void *)(v233 - 8);
  MEMORY[0x1F4188790](v233);
  v236 = (char *)&v316 - v235;
  v231(v229, v230);
  uint64_t v237 = *(void *)(v232 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v237 + 48))(v236, 1, v232) == 1)
  {
    (*(void (**)(char *, uint64_t))(v234 + 8))(v236, v233);
    v390 = 0;
    v388 = 0u;
    v389 = 0u;
  }
  else
  {
    *((void *)&v389 + 1) = v232;
    v390 = swift_getAssociatedConformanceWitness();
    v238 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v388);
    (*(void (**)(uint64_t *, char *, uint64_t))(v237 + 32))(v238, v236, v232);
  }
  uint64_t v239 = v363;
  uint64_t v240 = (uint64_t)v355;
  uint64_t v241 = (uint64_t)v349;
  sub_1BDF86808((uint64_t)&v388, (uint64_t)&v386, &qword_1EA0E4C90);
  if (v387)
  {
    sub_1BDFBEF38(&v386, (uint64_t)v385);
    sub_1BDFC3C28((uint64_t)v385, (uint64_t)v382);
    EventOrganizerModelObject.init(_:)(v382, v241);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v385);
    uint64_t v242 = v241;
    uint64_t v243 = 0;
  }
  else
  {
    uint64_t v242 = v241;
    uint64_t v243 = 1;
  }
  v343(v242, v243, 1, v344);
  sub_1BDF8686C((uint64_t)&v388, &qword_1EA0E4C90);
  sub_1BDFF85F8(v241, v345, &qword_1EA0E3E28);
  uint64_t v244 = v202[3];
  uint64_t v245 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v244);
  uint64_t v246 = (*(uint64_t (**)(uint64_t, uint64_t))(v245 + 400))(v244, v245);
  if (v246)
  {
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33C0);
    uint64_t v247 = sub_1BE070C70();
    swift_bridgeObjectRelease();
    int64_t v248 = *(void *)(v247 + 16);
    if (v248)
    {
      v385[0] = MEMORY[0x1E4FBC860];
      sub_1BDFF4A20(0, v248, 0);
      uint64_t v249 = v247 + 32;
      uint64_t v246 = v385[0];
      do
      {
        sub_1BDFC3C28(v249, (uint64_t)&v388);
        sub_1BDFC3C28((uint64_t)&v388, (uint64_t)&v386);
        EventAttendeeModelObject.init(_:)(&v386, v240);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v388);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BDFF4A20(0, *(void *)(v246 + 16) + 1, 1);
          uint64_t v246 = v385[0];
        }
        unint64_t v251 = *(void *)(v246 + 16);
        unint64_t v250 = *(void *)(v246 + 24);
        if (v251 >= v250 >> 1)
        {
          sub_1BDFF4A20(v250 > 1, v251 + 1, 1);
          uint64_t v246 = v385[0];
        }
        *(void *)(v246 + 16) = v251 + 1;
        sub_1BE047C10(v240, v246+ ((*(unsigned __int8 *)(v239 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v239 + 80))+ *(void *)(v239 + 72) * v251, type metadata accessor for EventAttendeeModelObject);
        v249 += 40;
        --v248;
      }
      while (v248);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v246 = MEMORY[0x1E4FBC860];
    }
  }
  uint64_t v252 = (uint64_t)v366;
  uint64_t v253 = v348;
  swift_bridgeObjectRelease();
  *(void *)(v252 + v253) = v246;
  uint64_t v254 = v202[3];
  uint64_t v255 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v254);
  v368 = v255 + 408;
  v256 = *(void (**)(uint64_t, uint64_t))(v255 + 408);
  uint64_t v257 = swift_getAssociatedTypeWitness();
  uint64_t v258 = sub_1BE0709E0();
  v369 = &v316;
  uint64_t v259 = *(void *)(v258 - 8);
  MEMORY[0x1F4188790](v258);
  v261 = (char *)&v316 - v260;
  v256(v254, v255);
  uint64_t v262 = *(void *)(v257 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v262 + 48))(v261, 1, v257) == 1)
  {
    (*(void (**)(char *, uint64_t))(v259 + 8))(v261, v258);
    v390 = 0;
    v388 = 0u;
    v389 = 0u;
  }
  else
  {
    *((void *)&v389 + 1) = v257;
    v390 = swift_getAssociatedConformanceWitness();
    v263 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v388);
    (*(void (**)(uint64_t *, char *, uint64_t))(v262 + 32))(v263, v261, v257);
  }
  uint64_t v264 = (uint64_t)v357;
  sub_1BDF86808((uint64_t)&v388, (uint64_t)&v386, &qword_1EA0E4C98);
  if (v387)
  {
    sub_1BDFBEF38(&v386, (uint64_t)v385);
    sub_1BDFC3C28((uint64_t)v385, (uint64_t)v382);
    EventAttendeeModelObject.init(_:)(v382, v264);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v385);
    uint64_t v265 = v264;
    uint64_t v266 = 0;
  }
  else
  {
    uint64_t v265 = v264;
    uint64_t v266 = 1;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v350)(v265, v266, 1, v356);
  sub_1BDF8686C((uint64_t)&v388, &qword_1EA0E4C98);
  sub_1BDFF85F8(v264, v352, &qword_1EA0E3E20);
  uint64_t v267 = v202[3];
  uint64_t v268 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v267);
  uint64_t v269 = (uint64_t)v359;
  (*(void (**)(uint64_t, uint64_t))(v268 + 416))(v267, v268);
  sub_1BDFF85F8(v269, v353, &qword_1EB678020);
  uint64_t v270 = v202[3];
  uint64_t v271 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v270);
  char v272 = (*(uint64_t (**)(uint64_t, uint64_t))(v271 + 424))(v270, v271);
  v273 = v364;
  uint64_t v274 = (uint64_t)v366;
  *((unsigned char *)v366 + v364[36]) = v272 & 1;
  uint64_t v275 = v202[3];
  uint64_t v276 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v275);
  *(unsigned char *)(v274 + v273[37]) = (*(uint64_t (**)(uint64_t, uint64_t))(v276 + 432))(v275, v276) & 1;
  uint64_t v277 = v202[3];
  uint64_t v278 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v277);
  (*(void (**)(uint64_t, uint64_t))(v278 + 440))(v277, v278);
  sub_1BDFF85F8(v269, v354, &qword_1EB678020);
  uint64_t v279 = v202[3];
  uint64_t v280 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v279);
  v368 = v280 + 448;
  v281 = *(void (**)(uint64_t, uint64_t))(v280 + 448);
  uint64_t v282 = swift_getAssociatedTypeWitness();
  uint64_t v283 = sub_1BE0709E0();
  v369 = &v316;
  uint64_t v284 = *(void *)(v283 - 8);
  MEMORY[0x1F4188790](v283);
  v286 = (char *)&v316 - v285;
  v281(v279, v280);
  uint64_t v287 = *(void *)(v282 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v287 + 48))(v286, 1, v282) == 1)
  {
    (*(void (**)(char *, uint64_t))(v284 + 8))(v286, v283);
    v390 = 0;
    v388 = 0u;
    v389 = 0u;
  }
  else
  {
    *((void *)&v389 + 1) = v282;
    v390 = swift_getAssociatedConformanceWitness();
    v288 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v388);
    (*(void (**)(uint64_t *, char *, uint64_t))(v287 + 32))(v288, v286, v282);
  }
  sub_1BDF86808((uint64_t)&v388, (uint64_t)&v386, &qword_1EA0E4CA0);
  if (v387)
  {
    sub_1BDFBEF38(&v386, (uint64_t)v385);
    sub_1BDFC3C28((uint64_t)v385, (uint64_t)v382);
    uint64_t v289 = v383;
    uint64_t v290 = v384;
    __swift_project_boxed_opaque_existential_1(v382, v383);
    char v291 = (*(uint64_t (**)(uint64_t, uint64_t))(v290 + 8))(v289, v290);
    uint64_t v292 = v383;
    uint64_t v293 = v384;
    __swift_project_boxed_opaque_existential_1(v382, v383);
    uint64_t v294 = (*(uint64_t (**)(uint64_t, uint64_t))(v293 + 16))(v292, v293);
    uint64_t v296 = v295;
    uint64_t v297 = v383;
    uint64_t v298 = v384;
    __swift_project_boxed_opaque_existential_1(v382, v383);
    v299 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v298 + 24);
    swift_bridgeObjectRetain();
    v299(v381, v297, v298);
    v300 = v381[0];
    v301 = v381[1];
    v302 = v381[2];
    v303 = v381[3];
    swift_bridgeObjectRetain();
    sub_1BDFDB0F8(v300, v301, v302, v303);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v382);
    swift_bridgeObjectRelease();
    sub_1BDFDB194(v300, v301, v302, v303);
    v304 = v291 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v385);
  }
  else
  {
    v304 = 0;
    uint64_t v294 = 0;
    v300 = 0;
    v301 = 0;
    v302 = 0;
    v303 = 0;
    uint64_t v296 = 1;
  }
  sub_1BDF8686C((uint64_t)&v388, &qword_1EA0E4CA0);
  v305 = v358;
  sub_1BE039724(*v358, v358[1], v358[2], v358[3], v358[4], v358[5], v358[6]);
  *v305 = v304;
  v305[1] = v294;
  v305[2] = v296;
  v305[3] = v300;
  v305[4] = v301;
  v305[5] = v302;
  v305[6] = v303;
  v306 = v202[3];
  v307 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v306);
  v308 = (*(uint64_t (**)(uint64_t, uint64_t))(v307 + 456))(v306, v307);
  v309 = v364;
  v310 = (uint64_t)v366;
  *((unsigned char *)v366 + v364[40]) = v308 & 1;
  v311 = v202[3];
  v312 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v311);
  *(unsigned char *)(v310 + v309[41]) = (*(uint64_t (**)(uint64_t, uint64_t))(v312 + 464))(v311, v312) & 1;
  v313 = v202[3];
  v314 = v202[4];
  __swift_project_boxed_opaque_existential_1(v202, v313);
  *(unsigned char *)(v310 + v309[42]) = (*(uint64_t (**)(uint64_t, uint64_t))(v314 + 472))(v313, v314) & 1;
  sub_1BE047C78(v310, v360, (uint64_t (*)(void))type metadata accessor for EventModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v202);
  return sub_1BE0446A0(v310, (uint64_t (*)(void))type metadata accessor for EventModelObject);
}

uint64_t EventModelObject.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v114 = *(void *)(v4 - 8);
  uint64_t v115 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v113 = (char *)&v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v112 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v111 = (uint64_t)&v97 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E20);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v126 = (uint64_t)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v127 = *(void *)(v125 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v125);
  uint64_t v104 = (uint64_t)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v97 - v14;
  uint64_t v16 = type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v123 = *(void *)(v16 - 8);
  uint64_t v124 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v103 = (uint64_t)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v122 = (uint64_t)&v97 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for EventRecurrenceRuleModelObject(0);
  uint64_t v98 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v22 = (char *)&v97 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_1BE06EEE0();
  uint64_t v121 = *(void *)(v128 - 8);
  MEMORY[0x1F4188790](v128);
  uint64_t v102 = (char *)&v97 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v24 - 8);
  uint64_t v120 = (uint64_t)&v97 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for EventCalendarModelObject();
  uint64_t v119 = *(void *)(v110 - 8);
  MEMORY[0x1F4188790](v110);
  uint64_t v101 = (uint64_t)&v97 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
  MEMORY[0x1F4188790](v27 - 8);
  uint64_t v118 = (uint64_t)&v97 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for EventVirtualConferenceModelObject(0);
  uint64_t v108 = *(void *)(v29 - 8);
  uint64_t v109 = v29;
  MEMORY[0x1F4188790](v29);
  uint64_t v99 = (uint64_t)&v97 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E18);
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v107 = (uint64_t)&v97 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_1BE06F140();
  uint64_t v130 = *(void *)(v116 - 8);
  MEMORY[0x1F4188790](v116);
  uint64_t v105 = (char *)&v97 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
  uint64_t v35 = MEMORY[0x1F4188790](v34 - 8);
  uint64_t v117 = (uint64_t)&v97 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v106 = (uint64_t)&v97 - v38;
  MEMORY[0x1F4188790](v37);
  uint64_t v40 = (char *)&v97 - v39;
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BE070590();
  swift_bridgeObjectRelease();
  uint64_t v41 = type metadata accessor for EventModelObject();
  uint64_t v42 = sub_1BE05346C(&qword_1EA0E10E0, MEMORY[0x1E4F27928]);
  sub_1BE070410();
  uint64_t v43 = v116;
  uint64_t v100 = v42;
  sub_1BE070410();
  sub_1BE070FD0();
  sub_1BE070FD0();
  uint64_t v44 = v130;
  sub_1BDF86808(v2 + *(int *)(v41 + 44), (uint64_t)v40, &qword_1EA0E1118);
  uint64_t v129 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
  int v45 = v129(v40, 1, v43);
  uint64_t v131 = v2;
  uint64_t v132 = (int *)v41;
  if (v45 == 1)
  {
    long long v46 = v105;
    sub_1BE070FD0();
    uint64_t v47 = v130;
  }
  else
  {
    uint64_t v48 = v105;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v105, v40, v43);
    sub_1BE070FD0();
    sub_1BE05346C(&qword_1EA0E4CB8, MEMORY[0x1E4F27D68]);
    sub_1BE070410();
    uint64_t v47 = v130;
    long long v46 = v48;
    (*(void (**)(char *, uint64_t))(v130 + 8))(v48, v43);
  }
  uint64_t v49 = v106;
  sub_1BDF86808(v131 + v132[12], v106, &qword_1EA0E1118);
  if (v129((char *)v49, 1, v43) == 1)
  {
    sub_1BE070FD0();
    uint64_t v50 = v46;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v46, v49, v43);
    sub_1BE070FD0();
    sub_1BE05346C(&qword_1EA0E4CB8, MEMORY[0x1E4F27D68]);
    sub_1BE070410();
    uint64_t v51 = v47;
    uint64_t v50 = v46;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v46, v43);
  }
  uint64_t v52 = v131;
  uint64_t v53 = v132;
  sub_1BE070FD0();
  uint64_t v54 = v117;
  sub_1BDF86808(v52 + v53[14], v117, &qword_1EA0E1118);
  if (v129((char *)v54, 1, v43) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    uint64_t v55 = v50;
    uint64_t v56 = v130;
    (*(void (**)(char *, uint64_t, uint64_t))(v130 + 32))(v55, v54, v43);
    sub_1BE070FD0();
    sub_1BE05346C(&qword_1EA0E4CB8, MEMORY[0x1E4F27D68]);
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v43);
  }
  uint64_t v58 = v108;
  uint64_t v57 = v109;
  uint64_t v59 = v132;
  uint64_t v60 = v107;
  sub_1BDF86808(v52 + v132[15], v107, &qword_1EA0E3E18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v60, 1, v57) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    uint64_t v61 = v99;
    sub_1BE047C10(v60, v99, type metadata accessor for EventVirtualConferenceModelObject);
    sub_1BE070FD0();
    EventVirtualConferenceModelObject.hash(into:)(a1);
    sub_1BE0446A0(v61, type metadata accessor for EventVirtualConferenceModelObject);
  }
  if (*(void *)(v52 + v59[16] + 8))
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BE070FD0();
  }
  if (*(void *)(v52 + v59[17] + 8))
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BE070FD0();
  }
  uint64_t v62 = *(void *)(v52 + v59[18]);
  if (v62)
  {
    sub_1BE070FD0();
    sub_1BE070FC0();
    uint64_t v63 = *(void *)(v62 + 16);
    if (v63)
    {
      swift_bridgeObjectRetain();
      uint64_t v64 = v62 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1BE070590();
        swift_bridgeObjectRelease();
        v64 += 16;
        --v63;
      }
      while (v63);
      swift_bridgeObjectRelease();
      uint64_t v52 = v131;
    }
  }
  else
  {
    sub_1BE070FD0();
  }
  sub_1BDFB8210(v52 + v59[19], (uint64_t)v150, &qword_1EA0E3E38);
  sub_1BDFB8210((uint64_t)v150, (uint64_t)v151, &qword_1EA0E3E38);
  if (sub_1BDFF8094((uint64_t)v151) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    sub_1BDFB8210((uint64_t)v150, (uint64_t)v149, &qword_1EA0E3E38);
    v148[8] = v149[8];
    v148[9] = v149[9];
    v148[10] = v149[10];
    v148[4] = v149[4];
    v148[5] = v149[5];
    v148[7] = v149[7];
    v148[6] = v149[6];
    v148[0] = v149[0];
    v148[1] = v149[1];
    v148[3] = v149[3];
    v148[2] = v149[2];
    sub_1BE070FD0();
    EventLocationModelObject.hash(into:)();
  }
  uint64_t v65 = v128;
  uint64_t v66 = v110;
  sub_1BDFB8210(v52 + v59[20], (uint64_t)v148, &qword_1EA0E3E38);
  sub_1BDFB8210((uint64_t)v148, (uint64_t)v149, &qword_1EA0E3E38);
  if (sub_1BDFF8094((uint64_t)v149) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    sub_1BDFB8210((uint64_t)v148, (uint64_t)v147, &qword_1EA0E3E38);
    v146[8] = v147[8];
    v146[9] = v147[9];
    v146[10] = v147[10];
    v146[4] = v147[4];
    v146[5] = v147[5];
    v146[6] = v147[6];
    v146[7] = v147[7];
    v146[0] = v147[0];
    v146[1] = v147[1];
    v146[2] = v147[2];
    v146[3] = v147[3];
    sub_1BE070FD0();
    EventLocationModelObject.hash(into:)();
  }
  sub_1BDFB8210(v52 + v59[21], (uint64_t)v146, &qword_1EA0E3E38);
  sub_1BDFB8210((uint64_t)v146, (uint64_t)v147, &qword_1EA0E3E38);
  if (sub_1BDFF8094((uint64_t)v147) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    sub_1BDFB8210((uint64_t)v146, (uint64_t)&v144, &qword_1EA0E3E38);
    long long v141 = v145[7];
    long long v142 = v145[8];
    long long v143 = v145[9];
    long long v137 = v145[3];
    long long v138 = v145[4];
    long long v139 = v145[5];
    long long v140 = v145[6];
    long long v133 = v144;
    long long v134 = v145[0];
    long long v135 = v145[1];
    long long v136 = v145[2];
    sub_1BE070FD0();
    EventLocationModelObject.hash(into:)();
  }
  sub_1BE070FE0();
  sub_1BE070FC0();
  uint64_t v67 = v118;
  sub_1BDF86808(v52 + v59[24], v118, &qword_1EA0E3E10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v119 + 48))(v67, 1, v66) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    uint64_t v68 = v101;
    sub_1BE047C10(v67, v101, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
    sub_1BE070FD0();
    EventCalendarModelObject.hash(into:)();
    sub_1BE0446A0(v68, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
  }
  sub_1BE070FC0();
  sub_1BE070FC0();
  uint64_t v69 = *(void *)(v52 + v59[27]);
  sub_1BE070FD0();
  if (v69)
  {
    swift_bridgeObjectRetain();
    sub_1BE013944(a1, v69);
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v52 + v59[28] + 8))
  {
    sub_1BE070FD0();
    swift_bridgeObjectRetain();
    sub_1BE070590();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BE070FD0();
  }
  sub_1BE070FC0();
  uint64_t v70 = v120;
  sub_1BDF86808(v52 + v59[30], v120, &qword_1EB677CC0);
  uint64_t v71 = v121;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48))(v70, 1, v65) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    uint64_t v72 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 32))(v102, v70, v65);
    sub_1BE070FD0();
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v65);
  }
  uint64_t v73 = *(void *)(v52 + v59[31]);
  if (v73)
  {
    sub_1BE070FD0();
    sub_1BE070FC0();
    uint64_t v74 = *(void *)(v73 + 16);
    if (v74)
    {
      uint64_t v75 = v73 + ((*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80));
      uint64_t v76 = *(void *)(v98 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1BE047C78(v75, (uint64_t)v22, type metadata accessor for EventRecurrenceRuleModelObject);
        EventRecurrenceRuleModelObject.hash(into:)();
        sub_1BE0446A0((uint64_t)v22, type metadata accessor for EventRecurrenceRuleModelObject);
        v75 += v76;
        --v74;
      }
      while (v74);
      swift_bridgeObjectRelease();
      uint64_t v52 = v131;
    }
  }
  else
  {
    sub_1BE070FD0();
  }
  uint64_t v77 = v122;
  sub_1BDF86808(v52 + v59[32], v122, &qword_1EA0E3E28);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v77, 1, v124) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    uint64_t v78 = v103;
    sub_1BE047C10(v77, v103, type metadata accessor for EventOrganizerModelObject);
    sub_1BE070FD0();
    EventOrganizerModelObject.hash(into:)();
    sub_1BE0446A0(v78, type metadata accessor for EventOrganizerModelObject);
  }
  uint64_t v79 = *(void *)(v52 + v59[33]);
  if (v79)
  {
    sub_1BE070FD0();
    sub_1BE070FC0();
    uint64_t v80 = *(void *)(v79 + 16);
    if (v80)
    {
      uint64_t v81 = v52;
      uint64_t v82 = v79 + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
      uint64_t v83 = *(void *)(v127 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1BE047C78(v82, (uint64_t)v15, type metadata accessor for EventAttendeeModelObject);
        EventAttendeeModelObject.hash(into:)();
        sub_1BE0446A0((uint64_t)v15, type metadata accessor for EventAttendeeModelObject);
        v82 += v83;
        --v80;
      }
      while (v80);
      swift_bridgeObjectRelease();
      uint64_t v52 = v81;
    }
  }
  else
  {
    sub_1BE070FD0();
  }
  uint64_t v84 = v126;
  sub_1BDF86808(v52 + v59[34], v126, &qword_1EA0E3E20);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v84, 1, v125) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    uint64_t v85 = v104;
    sub_1BE047C10(v84, v104, type metadata accessor for EventAttendeeModelObject);
    sub_1BE070FD0();
    EventAttendeeModelObject.hash(into:)();
    sub_1BE0446A0(v85, type metadata accessor for EventAttendeeModelObject);
  }
  uint64_t v87 = v114;
  uint64_t v86 = v115;
  uint64_t v88 = v111;
  sub_1BDF86808(v52 + v59[35], v111, &qword_1EB678020);
  uint64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
  if (v89(v88, 1, v86) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    uint64_t v90 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v113, v88, v86);
    sub_1BE070FD0();
    sub_1BE05346C(&qword_1EA0E2D48, MEMORY[0x1E4F276F0]);
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v90, v86);
  }
  uint64_t v91 = (uint64_t)v112;
  sub_1BE070FD0();
  sub_1BE070FD0();
  sub_1BDF86808(v52 + v59[38], v91, &qword_1EB678020);
  if (v89(v91, 1, v86) == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    uint64_t v92 = v113;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v113, v91, v86);
    sub_1BE070FD0();
    sub_1BE05346C(&qword_1EA0E2D48, MEMORY[0x1E4F276F0]);
    sub_1BE070410();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v92, v86);
  }
  uint64_t v93 = v52 + v59[39];
  uint64_t v94 = *(void *)(v93 + 16);
  if (v94 == 1)
  {
    sub_1BE070FD0();
  }
  else
  {
    uint64_t v95 = *(void *)(v93 + 8);
    LOBYTE(v144) = *(unsigned char *)v93 & 1;
    *((void *)&v144 + 1) = v95;
    *(void *)&v145[0] = v94;
    *(_OWORD *)((char *)v145 + 8) = *(_OWORD *)(v93 + 24);
    *(_OWORD *)((char *)&v145[1] + 8) = *(_OWORD *)(v93 + 40);
    sub_1BE070FD0();
    EventIntegrationModelObject.hash(into:)();
  }
  sub_1BE070FD0();
  sub_1BE070FD0();
  return sub_1BE070FD0();
}

uint64_t EventModelObject.hashValue.getter()
{
  sub_1BE070FB0();
  EventModelObject.hash(into:)((uint64_t)v1);
  return sub_1BE070FF0();
}

unint64_t sub_1BE0404E4(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4449657571696E75;
      break;
    case 2:
      unint64_t result = 0x656C746974;
      break;
    case 3:
      unint64_t result = 0x7461447472617473;
      break;
    case 4:
      unint64_t result = 0x65746144646E65;
      break;
    case 5:
      unint64_t result = 0x7961446C6C417369;
      break;
    case 6:
      unint64_t result = 0x736F706F72507369;
      break;
    case 7:
      unint64_t result = 0x6D69547472617473;
      break;
    case 8:
      unint64_t result = 0x5A656D6954646E65;
      break;
    case 9:
      unint64_t result = 0x6974616F6C467369;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    case 11:
    case 17:
    case 19:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 13:
      unint64_t result = 0xD000000000000019;
      break;
    case 14:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 15:
      unint64_t result = 0xD000000000000012;
      break;
    case 16:
      unint64_t result = 0xD000000000000023;
      break;
    case 18:
      unint64_t result = 0x69546C6576617274;
      break;
    case 20:
    case 21:
      unint64_t result = 0x7261646E656C6163;
      break;
    case 22:
      unint64_t result = 0x4C79636176697270;
      break;
    case 23:
      unint64_t result = 0x737574617473;
      break;
    case 24:
      unint64_t result = 0x736D72616C61;
      break;
    case 25:
      unint64_t result = 0x7365746F6ELL;
      break;
    case 26:
      unint64_t result = 0x6962616C69617661;
      break;
    case 27:
    case 28:
      unint64_t result = 0x6E65727275636572;
      break;
    case 29:
      unint64_t result = 0x657A696E6167726FLL;
      break;
    case 30:
      unint64_t result = 0x6565646E65747461;
      break;
    case 31:
      unint64_t result = 0x65747441666C6573;
      break;
    case 32:
      unint64_t result = 7107189;
      break;
    case 33:
      unint64_t result = 0x6361747441736168;
      break;
    case 34:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 35:
      unint64_t result = 0xD000000000000017;
      break;
    case 36:
      unint64_t result = 0x7461726765746E69;
      break;
    case 37:
      unint64_t result = 0x6261746964457369;
      break;
    case 38:
      unint64_t result = 0x77654E7369;
      break;
    case 39:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BE0409A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_1BE06EEE0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1BE040A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_1BE06EEE0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1BE040A88()
{
  return sub_1BE06EE90();
}

uint64_t sub_1BE040AB8(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_1BE040AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF86808(v2 + *(int *)(a1 + 44), a2, &qword_1EA0E1118);
}

uint64_t sub_1BE040AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF86808(v2 + *(int *)(a1 + 48), a2, &qword_1EA0E1118);
}

uint64_t sub_1BE040B1C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t sub_1BE040B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF86808(v2 + *(int *)(a1 + 56), a2, &qword_1EA0E1118);
}

uint64_t sub_1BE040B54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF86808(v2 + *(int *)(a1 + 60), a2, &qword_1EA0E3E18);
}

uint64_t sub_1BE040B80(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 64));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BE040BB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 68));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BE040BF0()
{
  return swift_bridgeObjectRetain();
}

void *sub_1BE040BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BDFB8210(v2 + *(int *)(a1 + 76), (uint64_t)v5, &qword_1EA0E3E38);
  sub_1BDFB8210((uint64_t)v5, a2, &qword_1EA0E3E38);
  return sub_1BE03A394(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
}

void *sub_1BE040C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BDFB8210(v2 + *(int *)(a1 + 80), (uint64_t)v5, &qword_1EA0E3E38);
  sub_1BDFB8210((uint64_t)v5, a2, &qword_1EA0E3E38);
  return sub_1BE03A394(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
}

void *sub_1BE040CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1BDFB8210(v2 + *(int *)(a1 + 84), (uint64_t)v5, &qword_1EA0E3E38);
  sub_1BDFB8210((uint64_t)v5, a2, &qword_1EA0E3E38);
  return sub_1BE03A394(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
}

double sub_1BE040D4C(uint64_t a1)
{
  return *(double *)(v1 + *(int *)(a1 + 88));
}

uint64_t sub_1BE040D58(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 92));
}

uint64_t sub_1BE040D64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF86808(v2 + *(int *)(a1 + 96), a2, &qword_1EA0E3E10);
}

uint64_t sub_1BE040D90(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 100));
}

uint64_t sub_1BE040D9C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 104));
}

uint64_t sub_1BE040DA8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE040DB4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 112));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BE040DEC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 116));
}

uint64_t sub_1BE040DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF86808(v2 + *(int *)(a1 + 120), a2, &qword_1EB677CC0);
}

uint64_t sub_1BE040E24()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE040E34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF86808(v2 + *(int *)(a1 + 128), a2, &qword_1EA0E3E28);
}

uint64_t sub_1BE040E60()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE040E6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF86808(v2 + *(int *)(a1 + 136), a2, &qword_1EA0E3E20);
}

uint64_t sub_1BE040E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF86808(v2 + *(int *)(a1 + 140), a2, &qword_1EB678020);
}

uint64_t sub_1BE040EC4(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 144));
}

uint64_t sub_1BE040ED0(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 148));
}

uint64_t sub_1BE040EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BDF86808(v2 + *(int *)(a1 + 152), a2, &qword_1EB678020);
}

void sub_1BE040F08(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(v2 + *(int *)(a1 + 156));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  uint64_t v9 = v3[5];
  unint64_t v10 = v3[6];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v9;
  a2[6] = v10;
  sub_1BE044638(v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1BE040F34(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 160));
}

uint64_t sub_1BE040F40(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 164));
}

uint64_t sub_1BE040F4C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 168));
}

uint64_t sub_1BE040F58()
{
  sub_1BE070FB0();
  EventModelObject.hash(into:)((uint64_t)v1);
  return sub_1BE070FF0();
}

uint64_t sub_1BE040F9C()
{
  sub_1BE070FB0();
  EventModelObject.hash(into:)((uint64_t)v1);
  return sub_1BE070FF0();
}

unint64_t sub_1BE040FE0()
{
  return sub_1BE0404E4(*v0);
}

uint64_t sub_1BE040FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BE052320(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BE041010(unsigned char *a1@<X8>)
{
  *a1 = 40;
}

uint64_t sub_1BE04101C(uint64_t a1)
{
  unint64_t v2 = sub_1BE047694();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BE041058(uint64_t a1)
{
  unint64_t v2 = sub_1BE047694();

  return MEMORY[0x1F41862B0](a1, v2);
}

void EventModelObject.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v166 = a1;
  uint64_t v129 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v128 = (uint64_t)&v118 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v127 = (uint64_t)&v118 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E20);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v126 = (uint64_t)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v125 = (uint64_t)&v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v124 = (uint64_t)&v118 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v122 = (uint64_t)&v118 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E18);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v131 = (uint64_t)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v132 = (uint64_t)&v118 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  long long v133 = (char *)&v118 - v20;
  MEMORY[0x1F4188790](v19);
  long long v134 = (char *)&v118 - v21;
  uint64_t v22 = sub_1BE06EEE0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  *(void *)&long long v136 = (char *)&v118 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  *(void *)&long long v137 = (char *)&v118 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4CC0);
  uint64_t v138 = *(void *)(v27 - 8);
  uint64_t v139 = v27;
  MEMORY[0x1F4188790](v27);
  uint64_t v165 = (char *)&v118 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = (int *)type metadata accessor for EventModelObject();
  uint64_t v30 = MEMORY[0x1F4188790](v29);
  uint64_t v32 = (uint64_t *)((char *)&v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = (uint64_t)v32 + *(int *)(v30 + 44);
  uint64_t v34 = sub_1BE06F140();
  uint64_t v35 = *(void (**)(void))(*(void *)(v34 - 8) + 56);
  uint64_t v161 = v33;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v35)(v33, 1, 1, v34);
  uint64_t v159 = (char *)v32 + v29[12];
  v35();
  double v158 = (char *)v32 + v29[14];
  uint64_t v135 = v34;
  v35();
  uint64_t v36 = (uint64_t)v32 + v29[15];
  uint64_t v37 = type metadata accessor for EventVirtualConferenceModelObject(0);
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
  uint64_t v157 = v36;
  uint64_t v130 = v37;
  v38(v36, 1, 1);
  uint64_t v39 = (char *)v32 + v29[16];
  *(void *)uint64_t v39 = 0;
  *((void *)v39 + 1) = 0;
  uint64_t v156 = v39;
  uint64_t v40 = (char *)v32 + v29[17];
  *(void *)uint64_t v40 = 0;
  *((void *)v40 + 1) = 0;
  uint64_t v155 = v40;
  uint64_t v150 = v29[18];
  *(uint64_t *)((char *)v32 + v150) = 0;
  uint64_t v41 = (uint64_t)v32 + v29[19];
  sub_1BDFF80B8(v180);
  uint64_t v152 = v41;
  sub_1BDFB8210((uint64_t)v180, v41, &qword_1EA0E3E38);
  uint64_t v151 = (char *)v32 + v29[20];
  sub_1BDFB8210((uint64_t)v180, (uint64_t)v151, &qword_1EA0E3E38);
  uint64_t v153 = (char *)v32 + v29[21];
  sub_1BDFB8210((uint64_t)v180, (uint64_t)v153, &qword_1EA0E3E38);
  uint64_t v42 = (uint64_t)v32 + v29[24];
  uint64_t v43 = type metadata accessor for EventCalendarModelObject();
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
  uint64_t v154 = v42;
  uint64_t v121 = v43;
  v44(v42, 1, 1);
  uint64_t v147 = v29[27];
  *(uint64_t *)((char *)v32 + v147) = 0;
  int v45 = (char *)v32 + v29[28];
  *(void *)int v45 = 0;
  *((void *)v45 + 1) = 0;
  uint64_t v148 = v45;
  uint64_t v46 = v29[30];
  uint64_t v162 = v23;
  uint64_t v47 = *(void (**)(void))(v23 + 56);
  uint64_t v149 = (char *)v32 + v46;
  uint64_t v160 = v22;
  v47();
  uint64_t v145 = v29[31];
  *(uint64_t *)((char *)v32 + v145) = 0;
  uint64_t v48 = (uint64_t)v32 + v29[32];
  uint64_t v49 = type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56);
  uint64_t v146 = v48;
  uint64_t v123 = v49;
  v50(v48, 1, 1);
  uint64_t v143 = v29[33];
  *(uint64_t *)((char *)v32 + v143) = 0;
  uint64_t v51 = (uint64_t)v32 + v29[34];
  uint64_t v52 = type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
  uint64_t v144 = v51;
  v53(v51, 1, 1, v52);
  uint64_t v54 = (uint64_t)v32 + v29[35];
  uint64_t v55 = sub_1BE06EE10();
  uint64_t v56 = *(void (**)(void))(*(void *)(v55 - 8) + 56);
  uint64_t v142 = v54;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v56)(v54, 1, 1, v55);
  long long v141 = (char *)v32 + v29[38];
  v56();
  uint64_t v163 = v29;
  uint64_t v164 = v32;
  uint64_t v57 = (char *)v32 + v29[39];
  *(void *)uint64_t v57 = 0;
  *((void *)v57 + 1) = 0;
  *((void *)v57 + 2) = 1;
  *(_OWORD *)(v57 + 24) = 0u;
  *(_OWORD *)(v57 + 40) = 0u;
  __swift_project_boxed_opaque_existential_1(v166, v166[3]);
  sub_1BE047694();
  uint64_t v58 = v140;
  sub_1BE071010();
  if (v58)
  {
    unint64_t v61 = 0x8CFD93FD80;
    uint64_t v69 = v160;
    goto LABEL_4;
  }
  uint64_t v59 = v137;
  uint64_t v120 = v52;
  *(void *)&long long v140 = v55;
  LOBYTE(v179[0]) = 0;
  uint64_t v60 = sub_1BE070DB0();
  uint64_t v66 = v164;
  *uint64_t v164 = v60;
  v66[1] = v67;
  LOBYTE(v179[0]) = 1;
  uint64_t v68 = sub_1BE070DB0();
  uint64_t v69 = v160;
  v66[2] = v68;
  v66[3] = v70;
  LOBYTE(v179[0]) = 2;
  v66[4] = sub_1BE070DB0();
  v66[5] = v71;
  LOBYTE(v179[0]) = 3;
  uint64_t v72 = v59;
  uint64_t v73 = sub_1BE05346C(&qword_1EA0E36E8, MEMORY[0x1E4F27928]);
  sub_1BE070DF0();
  uint64_t v74 = (char *)v66 + v163[7];
  uint64_t v119 = 0;
  *(void *)&long long v137 = *(void *)(v162 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v137)(v74, v72, v69);
  LOBYTE(v179[0]) = 4;
  uint64_t v75 = v136;
  uint64_t v76 = v119;
  sub_1BE070DF0();
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v138 + 8))(v165, v139);
    unint64_t v61 = 0x8CFD93FD8FLL;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v166);
    uint64_t v62 = (v61 >> 4) & 1;
    uint64_t v64 = v162;
    uint64_t v63 = v163;
    uint64_t v65 = v164;
    if (v61)
    {
      swift_bridgeObjectRelease();
      if ((v61 & 2) == 0)
      {
LABEL_6:
        if ((v61 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_11;
      }
    }
    else if ((v61 & 2) == 0)
    {
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    if ((v61 & 4) == 0)
    {
LABEL_7:
      if ((v61 & 8) != 0)
      {
LABEL_26:
        uint64_t v115 = *(void (**)(char *, uint64_t))(v64 + 8);
        v115((char *)v65 + v63[7], v69);
        if (v62) {
          v115((char *)v65 + v63[8], v69);
        }
      }
LABEL_28:
      sub_1BDF8686C(v161, &qword_1EA0E1118);
      sub_1BDF8686C((uint64_t)v159, &qword_1EA0E1118);
      sub_1BDF8686C((uint64_t)v158, &qword_1EA0E1118);
      sub_1BDF8686C(v157, &qword_1EA0E3E18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BDFB8210(v152, (uint64_t)v177, &qword_1EA0E3E38);
      sub_1BE03A394(v177, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
      sub_1BDFB8210((uint64_t)v151, (uint64_t)v178, &qword_1EA0E3E38);
      sub_1BE03A394(v178, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
      sub_1BDFB8210((uint64_t)v153, (uint64_t)v179, &qword_1EA0E3E38);
      sub_1BE03A394(v179, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
      sub_1BDF8686C(v154, &qword_1EA0E3E10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BDF8686C((uint64_t)v149, &qword_1EB677CC0);
      swift_bridgeObjectRelease();
      sub_1BDF8686C(v146, &qword_1EA0E3E28);
      swift_bridgeObjectRelease();
      sub_1BDF8686C(v144, &qword_1EA0E3E20);
      sub_1BDF8686C(v142, &qword_1EB678020);
      sub_1BDF8686C((uint64_t)v141, &qword_1EB678020);
      sub_1BE039724(*(void *)v57, *((void *)v57 + 1), *((void *)v57 + 2), *((void *)v57 + 3), *((void *)v57 + 4), *((void *)v57 + 5), *((void *)v57 + 6));
      return;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    if ((v61 & 8) != 0) {
      goto LABEL_26;
    }
    goto LABEL_28;
  }
  uint64_t v119 = v73;
  uint64_t v77 = v163;
  ((void (*)(char *, uint64_t, uint64_t))v137)((char *)v66 + v163[8], v75, v69);
  LOBYTE(v179[0]) = 5;
  *((unsigned char *)v66 + v77[9]) = sub_1BE070DC0() & 1;
  LOBYTE(v179[0]) = 6;
  *((unsigned char *)v66 + v77[10]) = sub_1BE070D60() & 1;
  LOBYTE(v179[0]) = 7;
  sub_1BE05346C(&qword_1EA0E4CD0, MEMORY[0x1E4F27D68]);
  uint64_t v78 = (uint64_t)v134;
  sub_1BE070DA0();
  sub_1BDFF85F8(v78, v161, &qword_1EA0E1118);
  LOBYTE(v179[0]) = 8;
  uint64_t v79 = (uint64_t)v133;
  sub_1BE070DA0();
  sub_1BDFF85F8(v79, (uint64_t)v159, &qword_1EA0E1118);
  LOBYTE(v179[0]) = 9;
  *((unsigned char *)v164 + v163[13]) = sub_1BE070D60() & 1;
  LOBYTE(v179[0]) = 10;
  sub_1BE070DA0();
  sub_1BDFF85F8(v132, (uint64_t)v158, &qword_1EA0E1118);
  LOBYTE(v179[0]) = 11;
  sub_1BE05346C(&qword_1EA0E4CD8, (void (*)(uint64_t))type metadata accessor for EventVirtualConferenceModelObject);
  sub_1BE070DA0();
  sub_1BDFF85F8(v131, v157, &qword_1EA0E3E18);
  LOBYTE(v179[0]) = 12;
  uint64_t v80 = sub_1BE070D50();
  uint64_t v82 = v81;
  uint64_t v83 = (uint64_t *)v156;
  swift_bridgeObjectRelease();
  *uint64_t v83 = v80;
  v83[1] = v82;
  LOBYTE(v179[0]) = 13;
  uint64_t v84 = sub_1BE070D50();
  uint64_t v86 = v85;
  uint64_t v87 = (uint64_t *)v155;
  swift_bridgeObjectRelease();
  *uint64_t v87 = v84;
  v87[1] = v86;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1AA0);
  LOBYTE(v178[0]) = 14;
  sub_1BDFC8858(&qword_1EA0E3440);
  sub_1BE070DA0();
  uint64_t v88 = v179[0];
  uint64_t v89 = v150;
  uint64_t v90 = v164;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v90 + v89) = v88;
  char v184 = 15;
  sub_1BE0476E8();
  sub_1BE070DA0();
  sub_1BDFB8210((uint64_t)v179, (uint64_t)v177, &qword_1EA0E3E38);
  uint64_t v91 = v152;
  sub_1BDFB8210(v152, (uint64_t)v178, &qword_1EA0E3E38);
  sub_1BE03A394(v178, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  sub_1BDFB8210((uint64_t)v177, v91, &qword_1EA0E3E38);
  char v183 = 16;
  sub_1BE070DA0();
  sub_1BDFB8210((uint64_t)&v176, (uint64_t)v174, &qword_1EA0E3E38);
  uint64_t v92 = (uint64_t)v151;
  sub_1BDFB8210((uint64_t)v151, (uint64_t)v175, &qword_1EA0E3E38);
  sub_1BE03A394(v175, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  sub_1BDFB8210((uint64_t)v174, v92, &qword_1EA0E3E38);
  char v182 = 17;
  sub_1BE070DA0();
  sub_1BDFB8210((uint64_t)&v173, (uint64_t)v171, &qword_1EA0E3E38);
  uint64_t v93 = (uint64_t)v153;
  sub_1BDFB8210((uint64_t)v153, (uint64_t)v172, &qword_1EA0E3E38);
  sub_1BE03A394(v172, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
  sub_1BDFB8210((uint64_t)v171, v93, &qword_1EA0E3E38);
  LOBYTE(v167) = 18;
  double v94 = COERCE_DOUBLE(sub_1BE070D70());
  if (v95) {
    double v94 = 0.0;
  }
  *(double *)((char *)v164 + v163[22]) = v94;
  type metadata accessor for EKLocationRoutingMode(0);
  char v181 = 19;
  sub_1BE05346C(&qword_1EA0E4CE8, type metadata accessor for EKLocationRoutingMode);
  sub_1BE070DA0();
  uint64_t v96 = v167;
  if (BYTE8(v167)) {
    uint64_t v96 = 0;
  }
  *(uint64_t *)((char *)v164 + v163[23]) = v96;
  LOBYTE(v167) = 20;
  sub_1BE05346C(&qword_1EA0E4CF0, (void (*)(uint64_t))type metadata accessor for EventCalendarModelObject);
  sub_1BE070DA0();
  sub_1BDFF85F8(v122, v154, &qword_1EA0E3E10);
  type metadata accessor for EKPrivacyLevel(0);
  char v181 = 22;
  sub_1BE05346C(&qword_1EA0E4700, type metadata accessor for EKPrivacyLevel);
  sub_1BE070DA0();
  uint64_t v97 = v167;
  if (BYTE8(v167)) {
    uint64_t v97 = 0;
  }
  *(uint64_t *)((char *)v164 + v163[25]) = v97;
  type metadata accessor for EKEventStatus(0);
  char v181 = 23;
  sub_1BE05346C(&qword_1EA0E4CF8, type metadata accessor for EKEventStatus);
  sub_1BE070DA0();
  uint64_t v98 = v167;
  if (BYTE8(v167)) {
    uint64_t v98 = 0;
  }
  *(uint64_t *)((char *)v164 + v163[26]) = v98;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4D00);
  char v181 = 24;
  sub_1BE04773C();
  sub_1BE070DA0();
  uint64_t v99 = v167;
  uint64_t v100 = v147;
  uint64_t v101 = v164;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v101 + v100) = v99;
  LOBYTE(v167) = 25;
  uint64_t v102 = sub_1BE070D50();
  uint64_t v104 = v103;
  uint64_t v105 = (uint64_t *)v148;
  swift_bridgeObjectRelease();
  *uint64_t v105 = v102;
  v105[1] = v104;
  type metadata accessor for EKEventAvailability(0);
  char v181 = 26;
  sub_1BE05346C(&qword_1EA0E4D18, type metadata accessor for EKEventAvailability);
  sub_1BE070DA0();
  uint64_t v106 = v167;
  if (BYTE8(v167)) {
    uint64_t v106 = 0;
  }
  *(uint64_t *)((char *)v164 + v163[29]) = v106;
  LOBYTE(v167) = 27;
  sub_1BE070DA0();
  sub_1BDFF85F8(v124, (uint64_t)v149, &qword_1EB677CC0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4D20);
  char v181 = 28;
  sub_1BE0477E0();
  sub_1BE070DA0();
  uint64_t v107 = v167;
  uint64_t v108 = v145;
  uint64_t v109 = v164;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v109 + v108) = v107;
  LOBYTE(v167) = 29;
  sub_1BE05346C(&qword_1EA0E4D38, (void (*)(uint64_t))type metadata accessor for EventOrganizerModelObject);
  sub_1BE070DA0();
  sub_1BDFF85F8(v125, v146, &qword_1EA0E3E28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4D40);
  char v181 = 30;
  sub_1BE047884();
  sub_1BE070DA0();
  uint64_t v110 = v167;
  uint64_t v111 = v143;
  uint64_t v112 = v164;
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v112 + v111) = v110;
  LOBYTE(v167) = 31;
  sub_1BE05346C(&qword_1EA0E4D50, (void (*)(uint64_t))type metadata accessor for EventAttendeeModelObject);
  sub_1BE070DA0();
  sub_1BDFF85F8(v126, v144, &qword_1EA0E3E20);
  LOBYTE(v167) = 32;
  sub_1BE05346C(&qword_1EA0E2D60, MEMORY[0x1E4F276F0]);
  sub_1BE070DA0();
  sub_1BDFF85F8(v127, v142, &qword_1EB678020);
  LOBYTE(v167) = 33;
  *((unsigned char *)v164 + v163[36]) = sub_1BE070D60() & 1;
  LOBYTE(v167) = 34;
  *((unsigned char *)v164 + v163[37]) = sub_1BE070D60() & 1;
  LOBYTE(v167) = 35;
  sub_1BE070DA0();
  sub_1BDFF85F8(v128, (uint64_t)v141, &qword_1EB678020);
  char v181 = 36;
  sub_1BE047928();
  sub_1BE070DA0();
  long long v140 = v167;
  long long v136 = v169;
  long long v137 = v168;
  uint64_t v113 = v170;
  sub_1BE039724(*(void *)v57, *((void *)v57 + 1), *((void *)v57 + 2), *((void *)v57 + 3), *((void *)v57 + 4), *((void *)v57 + 5), *((void *)v57 + 6));
  long long v114 = v137;
  *(_OWORD *)uint64_t v57 = v140;
  *((_OWORD *)v57 + 1) = v114;
  *((_OWORD *)v57 + 2) = v136;
  *((void *)v57 + 6) = v113;
  LOBYTE(v167) = 37;
  *((unsigned char *)v164 + v163[40]) = sub_1BE070DC0() & 1;
  LOBYTE(v167) = 38;
  *((unsigned char *)v164 + v163[41]) = sub_1BE070D60() & 1;
  LOBYTE(v167) = 39;
  LOBYTE(v113) = sub_1BE070D60();
  (*(void (**)(char *, uint64_t))(v138 + 8))(v165, v139);
  char v116 = v113 & 1;
  uint64_t v117 = (uint64_t)v164;
  *((unsigned char *)v164 + v163[42]) = v116;
  sub_1BE047C78(v117, v129, (uint64_t (*)(void))type metadata accessor for EventModelObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v166);
  sub_1BE0446A0(v117, (uint64_t (*)(void))type metadata accessor for EventModelObject);
}

uint64_t EventModelObject.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4D60);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE047694();
  sub_1BE071030();
  v24[0] = 0;
  sub_1BE070E60();
  if (!v2)
  {
    v24[0] = 1;
    sub_1BE070E60();
    v24[0] = 2;
    sub_1BE070E60();
    uint64_t v16 = (int *)type metadata accessor for EventModelObject();
    v24[0] = 3;
    sub_1BE06EEE0();
    sub_1BE05346C(&qword_1EA0E10D8, MEMORY[0x1E4F27928]);
    sub_1BE070EB0();
    v24[0] = 4;
    sub_1BE070EB0();
    v24[0] = 5;
    sub_1BE070E70();
    v24[0] = 6;
    sub_1BE070E70();
    unint64_t v15 = v3 + v16[11];
    v24[0] = 7;
    uint64_t v9 = sub_1BE06F140();
    uint64_t v14 = sub_1BE05346C(&qword_1EA0E4D68, MEMORY[0x1E4F27D68]);
    unint64_t v15 = v9;
    sub_1BE070E50();
    v24[0] = 8;
    sub_1BE070E50();
    v24[0] = 9;
    sub_1BE070E70();
    v24[0] = 10;
    sub_1BE070E50();
    unint64_t v15 = v3 + v16[15];
    v24[0] = 11;
    type metadata accessor for EventVirtualConferenceModelObject(0);
    sub_1BE05346C(&qword_1EA0E4D70, (void (*)(uint64_t))type metadata accessor for EventVirtualConferenceModelObject);
    sub_1BE070E50();
    v24[0] = 12;
    sub_1BE070E30();
    v24[0] = 13;
    sub_1BE070E30();
    uint64_t v25 = *(void *)(v3 + v16[18]);
    v24[183] = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1AA0);
    sub_1BDFC8858(&qword_1EA0E3470);
    sub_1BE070E50();
    sub_1BDFB8210(v3 + v16[19], (uint64_t)v24, &qword_1EA0E3E38);
    sub_1BDFB8210((uint64_t)v24, (uint64_t)&v23, &qword_1EA0E3E38);
    v22[183] = 15;
    unint64_t v15 = sub_1BE04797C();
    sub_1BE070E50();
    sub_1BDFB8210(v3 + v16[20], (uint64_t)v22, &qword_1EA0E3E38);
    sub_1BDFB8210((uint64_t)v22, (uint64_t)&v21, &qword_1EA0E3E38);
    v20[183] = 16;
    sub_1BE070E50();
    sub_1BDFB8210(v3 + v16[21], (uint64_t)v20, &qword_1EA0E3E38);
    sub_1BDFB8210((uint64_t)v20, (uint64_t)v18, &qword_1EA0E3E38);
    char v17 = 17;
    sub_1BE070E50();
    LOBYTE(v18[0]) = 18;
    sub_1BE070E80();
    *(void *)&v18[0] = *(void *)(v3 + v16[23]);
    char v17 = 19;
    type metadata accessor for EKLocationRoutingMode(0);
    sub_1BE05346C(&qword_1EA0E4D80, type metadata accessor for EKLocationRoutingMode);
    sub_1BE070EB0();
    unint64_t v15 = v3 + v16[24];
    LOBYTE(v18[0]) = 20;
    type metadata accessor for EventCalendarModelObject();
    sub_1BE05346C(&qword_1EA0E4D88, (void (*)(uint64_t))type metadata accessor for EventCalendarModelObject);
    sub_1BE070E50();
    *(void *)&v18[0] = *(void *)(v3 + v16[25]);
    char v17 = 22;
    type metadata accessor for EKPrivacyLevel(0);
    sub_1BE05346C(&qword_1EA0E4720, type metadata accessor for EKPrivacyLevel);
    sub_1BE070EB0();
    *(void *)&v18[0] = *(void *)(v3 + v16[26]);
    char v17 = 23;
    type metadata accessor for EKEventStatus(0);
    sub_1BE05346C(&qword_1EA0E4D90, type metadata accessor for EKEventStatus);
    sub_1BE070EB0();
    *(void *)&v18[0] = *(void *)(v3 + v16[27]);
    char v17 = 24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4D00);
    sub_1BE0479D0();
    sub_1BE070E50();
    LOBYTE(v18[0]) = 25;
    sub_1BE070E30();
    *(void *)&v18[0] = *(void *)(v3 + v16[29]);
    char v17 = 26;
    type metadata accessor for EKEventAvailability(0);
    sub_1BE05346C(&qword_1EA0E4DA8, type metadata accessor for EKEventAvailability);
    sub_1BE070EB0();
    LOBYTE(v18[0]) = 27;
    sub_1BE070E50();
    *(void *)&v18[0] = *(void *)(v3 + v16[31]);
    char v17 = 28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4D20);
    sub_1BE047A74();
    sub_1BE070E50();
    LOBYTE(v18[0]) = 29;
    type metadata accessor for EventOrganizerModelObject(0);
    sub_1BE05346C(&qword_1EA0E4DC0, (void (*)(uint64_t))type metadata accessor for EventOrganizerModelObject);
    sub_1BE070E50();
    *(void *)&v18[0] = *(void *)(v3 + v16[33]);
    char v17 = 30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4D40);
    sub_1BE047B18();
    sub_1BE070E50();
    LOBYTE(v18[0]) = 31;
    type metadata accessor for EventAttendeeModelObject(0);
    sub_1BE05346C(&qword_1EA0E4DD0, (void (*)(uint64_t))type metadata accessor for EventAttendeeModelObject);
    sub_1BE070E50();
    LOBYTE(v18[0]) = 32;
    sub_1BE06EE10();
    sub_1BE05346C(&qword_1EA0E2D70, MEMORY[0x1E4F276F0]);
    sub_1BE070E50();
    LOBYTE(v18[0]) = 33;
    sub_1BE070E70();
    LOBYTE(v18[0]) = 34;
    sub_1BE070E70();
    LOBYTE(v18[0]) = 35;
    sub_1BE070E50();
    uint64_t v10 = v3 + v16[39];
    uint64_t v11 = *(void *)(v10 + 48);
    long long v12 = *(_OWORD *)(v10 + 16);
    v18[0] = *(_OWORD *)v10;
    v18[1] = v12;
    v18[2] = *(_OWORD *)(v10 + 32);
    uint64_t v19 = v11;
    char v17 = 36;
    sub_1BE047BBC();
    sub_1BE070E50();
    LOBYTE(v18[0]) = 37;
    sub_1BE070E70();
    LOBYTE(v18[0]) = 38;
    sub_1BE070E70();
    LOBYTE(v18[0]) = 39;
    sub_1BE070E70();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BE04384C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_1BE043864(void *a1)
{
  return EventModelObject.encode(to:)(a1);
}

uint64_t EventModelObject.init(from:configuration:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v40 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for EventCalendarModelObject();
  uint64_t v42 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4CC0);
  uint64_t v41 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v43 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for EventModelObject();
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v36 - v17;
  sub_1BDFC3C28((uint64_t)a1, (uint64_t)v44);
  EventModelObject.init(from:)(v44, (uint64_t)v16);
  if (v3)
  {
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    uint64_t v38 = v7;
    uint64_t v39 = v11;
    uint64_t v37 = v10;
    uint64_t v20 = v42;
    sub_1BE047C10((uint64_t)v16, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for EventModelObject);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BE047694();
    sub_1BE071010();
    LOBYTE(v44[0]) = 21;
    uint64_t v21 = v39;
    uint64_t v22 = v43;
    uint64_t v23 = sub_1BE070D50();
    if (v24)
    {
      v36[0] = a1;
      v36[1] = 0;
      uint64_t v25 = *(void *)(v45 + 16);
      uint64_t v26 = v40;
      if (*(void *)(v25 + 16))
      {
        unint64_t v27 = sub_1BDFC7B88(v23, v24);
        uint64_t v28 = v20;
        uint64_t v29 = (uint64_t)v38;
        if (v30)
        {
          sub_1BE047C78(*(void *)(v25 + 56) + *(void *)(v28 + 72) * v27, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
          uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
          v31(v29, 0, 1, v8);
        }
        else
        {
          uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
          v31((uint64_t)v38, 1, 1, v8);
        }
      }
      else
      {
        uint64_t v28 = v20;
        uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
        uint64_t v29 = (uint64_t)v38;
        v31((uint64_t)v38, 1, 1, v8);
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v39);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v29, 1, v8) == 1)
      {
        sub_1BDF8686C(v29, &qword_1EA0E3E10);
      }
      else
      {
        uint64_t v32 = v29;
        uint64_t v33 = (uint64_t)v37;
        sub_1BE047C10(v32, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
        uint64_t v34 = (uint64_t)&v18[*(int *)(v13 + 96)];
        sub_1BDF8686C(v34, &qword_1EA0E3E10);
        sub_1BE047C10(v33, v34, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
        uint64_t v35 = v34;
        uint64_t v26 = v40;
        v31(v35, 0, 1, v8);
      }
      a1 = (void *)v36[0];
    }
    else
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v21);
      uint64_t v26 = v40;
    }
    sub_1BE047C78((uint64_t)v18, v26, (uint64_t (*)(void))type metadata accessor for EventModelObject);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1BE0446A0((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for EventModelObject);
  }
}

uint64_t EventModelObject.encode(to:configuration:)(void *a1, uint64_t a2)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4D60);
  uint64_t v23 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for EventModelObject();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  sub_1BE047C78(v2, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for EventModelObject);
  if ((*(unsigned char *)(a2 + 16) & 1) == 0)
  {
    uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 96)];
    sub_1BDF8686C(v15, &qword_1EA0E3E10);
    uint64_t v16 = type metadata accessor for EventCalendarModelObject();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  }
  EventModelObject.encode(to:)(a1);
  if (!v3)
  {
    uint64_t v21 = v9;
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BE047694();
    sub_1BE071030();
    sub_1BDF86808(v22 + *(int *)(v12 + 96), (uint64_t)v8, &qword_1EA0E3E10);
    uint64_t v17 = type metadata accessor for EventCalendarModelObject();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v8, 1, v17) == 1)
    {
      sub_1BDF8686C((uint64_t)v8, &qword_1EA0E3E10);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1BE0446A0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
    }
    uint64_t v18 = v21;
    char v24 = 21;
    sub_1BE070E30();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v18);
    swift_bridgeObjectRelease();
  }
  return sub_1BE0446A0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for EventModelObject);
}

uint64_t EventModelObject.EncodingConfiguration.__allocating_init(includeCalendar:)(char a1)
{
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = a1;
  return result;
}

uint64_t EventModelObject.EncodingConfiguration.init(includeCalendar:)(char a1)
{
  *(unsigned char *)(v1 + 16) = a1;
  return v1;
}

uint64_t EventModelObject.EncodingConfiguration.deinit()
{
  return v0;
}

uint64_t EventModelObject.EncodingConfiguration.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t EventModelObject.DecodingConfiguration.__allocating_init(calendarsById:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t EventModelObject.DecodingConfiguration.init(calendarsById:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t EventModelObject.DecodingConfiguration.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EventModelObject.DecodingConfiguration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1BE0441C0@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return EventModelObject.init(from:configuration:)(a1, *a2, a3);
}

uint64_t sub_1BE0441DC(void *a1, uint64_t *a2)
{
  return EventModelObject.encode(to:configuration:)(a1, *a2);
}

uint64_t sub_1BE0441F8()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BE044288()
{
  return sub_1BE0706A0();
}

uint64_t sub_1BE044308()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BE044398()
{
  return sub_1BE0706A0();
}

uint64_t sub_1BE044418()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BE0444A8()
{
  return sub_1BE0706A0();
}

uint64_t sub_1BE044528()
{
  return sub_1BE0706D0();
}

uint64_t sub_1BE0445B8()
{
  return sub_1BE0706A0();
}

void sub_1BE044638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BDFDB0F8(a4, a5, a6, a7);
  }
}

uint64_t sub_1BE0446A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s13CalendarUIKit16EventModelObjectV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v322 = *(void *)(v4 - 8);
  uint64_t v323 = v4;
  MEMORY[0x1F4188790](v4);
  v320 = (char *)&v283 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v316 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2E98);
  uint64_t v6 = MEMORY[0x1F4188790](v316);
  uint64_t v321 = (uint64_t)&v283 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v315 = (uint64_t)&v283 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v319 = (uint64_t)&v283 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v317 = (uint64_t)&v283 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v318 = (uint64_t)&v283 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v314 = (uint64_t)&v283 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v312 = (uint64_t)&v283 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v313 = (uint64_t)&v283 - v20;
  uint64_t v21 = type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v309 = *(void *)(v21 - 8);
  uint64_t v310 = v21;
  MEMORY[0x1F4188790](v21);
  v308 = (unsigned int (**)(uint64_t, uint64_t, unint64_t))((char *)&v283
                                                                          - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4E40);
  MEMORY[0x1F4188790](v23);
  uint64_t v311 = (uint64_t)&v283 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E20);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  v307 = (unsigned int (**)(uint64_t, uint64_t, unint64_t))((char *)&v283
                                                                          - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v305 = (uint64_t)&v283 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v306 = (uint64_t)&v283 - v30;
  uint64_t v31 = type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v302 = *(void *)(v31 - 8);
  uint64_t v303 = v31;
  MEMORY[0x1F4188790](v31);
  v301 = (unsigned int (**)(uint64_t, uint64_t, unint64_t))((char *)&v283
                                                                          - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v297 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4E48);
  MEMORY[0x1F4188790](v297);
  uint64_t v304 = (uint64_t)&v283 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
  uint64_t v35 = MEMORY[0x1F4188790](v34 - 8);
  v300 = (unsigned int (**)(uint64_t, uint64_t, unint64_t))((char *)&v283
                                                                          - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v298 = (uint64_t)&v283 - v38;
  MEMORY[0x1F4188790](v37);
  uint64_t v299 = (uint64_t)&v283 - v39;
  uint64_t v296 = sub_1BE06EEE0();
  uint64_t v294 = *(void *)(v296 - 8);
  MEMORY[0x1F4188790](v296);
  uint64_t v293 = (char *)&v283 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E46D0);
  MEMORY[0x1F4188790](v289);
  uint64_t v295 = (uint64_t)&v283 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v43 = MEMORY[0x1F4188790](v42 - 8);
  uint64_t v292 = (uint64_t)&v283 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v290 = (uint64_t)&v283 - v46;
  MEMORY[0x1F4188790](v45);
  uint64_t v291 = (uint64_t)&v283 - v47;
  uint64_t v328 = type metadata accessor for EventCalendarModelObject();
  uint64_t v326 = *(void *)(v328 - 8);
  MEMORY[0x1F4188790](v328);
  uint64_t v324 = (uint64_t)&v283 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v325 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4E50);
  MEMORY[0x1F4188790](v325);
  uint64_t v331 = (uint64_t)&v283 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
  uint64_t v51 = MEMORY[0x1F4188790](v50 - 8);
  uint64_t v327 = (uint64_t)&v283 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  uint64_t v329 = (uint64_t)&v283 - v54;
  MEMORY[0x1F4188790](v53);
  uint64_t v330 = (uint64_t)&v283 - v55;
  uint64_t v334 = type metadata accessor for EventVirtualConferenceModelObject(0);
  uint64_t v340 = *(void *)(v334 - 8);
  MEMORY[0x1F4188790](v334);
  uint64_t v332 = (uint64_t)&v283 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v333 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4E58);
  MEMORY[0x1F4188790](v333);
  uint64_t v335 = (uint64_t)&v283 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E18);
  uint64_t v59 = MEMORY[0x1F4188790](v58 - 8);
  v337 = (char *)&v283 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = MEMORY[0x1F4188790](v59);
  v338 = (char *)&v283 - v62;
  MEMORY[0x1F4188790](v61);
  v339 = (char *)&v283 - v63;
  unint64_t v347 = sub_1BE06F140();
  uint64_t v348 = *(void *)(v347 - 8);
  MEMORY[0x1F4188790](v347);
  uint64_t v345 = (uint64_t)&v283 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v346 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4E60);
  uint64_t v65 = MEMORY[0x1F4188790](v346);
  uint64_t v341 = (uint64_t)&v283 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = MEMORY[0x1F4188790](v65);
  uint64_t v344 = (uint64_t)&v283 - v68;
  MEMORY[0x1F4188790](v67);
  uint64_t v70 = (char *)&v283 - v69;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
  uint64_t v72 = MEMORY[0x1F4188790](v71 - 8);
  uint64_t v336 = (uint64_t)&v283 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = MEMORY[0x1F4188790](v72);
  *(void *)&long long v342 = (char *)&v283 - v75;
  uint64_t v76 = MEMORY[0x1F4188790](v74);
  *((void *)&v342 + 1) = (char *)&v283 - v77;
  uint64_t v78 = MEMORY[0x1F4188790](v76);
  unint64_t v343 = (unint64_t)&v283 - v79;
  uint64_t v80 = MEMORY[0x1F4188790](v78);
  uint64_t v82 = (char *)&v283 - v81;
  uint64_t v83 = MEMORY[0x1F4188790](v80);
  uint64_t v85 = (char *)&v283 - v84;
  uint64_t v86 = MEMORY[0x1F4188790](v83);
  uint64_t v88 = (char *)&v283 - v87;
  uint64_t v89 = MEMORY[0x1F4188790](v86);
  uint64_t v91 = (char *)&v283 - v90;
  MEMORY[0x1F4188790](v89);
  uint64_t v93 = (char *)&v283 - v92;
  uint64_t v94 = *a1;
  uint64_t v95 = a1[1];
  uint64_t v96 = *a2;
  uint64_t v97 = a2[1];
  v349 = a2;
  if (v94 != v96 || v95 != v97)
  {
    char v98 = sub_1BE070EF0();
    char v99 = 0;
    if ((v98 & 1) == 0) {
      return v99 & 1;
    }
  }
  if (a1[2] != v349[2] || a1[3] != v349[3])
  {
    char v100 = sub_1BE070EF0();
    char v99 = 0;
    if ((v100 & 1) == 0) {
      return v99 & 1;
    }
  }
  if (a1[4] != v349[4] || a1[5] != v349[5])
  {
    char v101 = sub_1BE070EF0();
    char v99 = 0;
    if ((v101 & 1) == 0) {
      return v99 & 1;
    }
  }
  uint64_t v288 = v23;
  uint64_t v102 = (int *)type metadata accessor for EventModelObject();
  uint64_t v103 = v349;
  if ((sub_1BE06EEB0() & 1) == 0
    || (sub_1BE06EEB0() & 1) == 0
    || *((unsigned __int8 *)a1 + v102[9]) != *((unsigned __int8 *)v103 + v102[9])
    || *((unsigned __int8 *)a1 + v102[10]) != *((unsigned __int8 *)v103 + v102[10]))
  {
    goto LABEL_28;
  }
  uint64_t v104 = v102[11];
  uint64_t v285 = a1;
  sub_1BDF86808((uint64_t)a1 + v104, (uint64_t)v93, &qword_1EA0E1118);
  v286 = v102;
  sub_1BDF86808((uint64_t)v103 + v102[11], (uint64_t)v91, &qword_1EA0E1118);
  uint64_t v105 = (uint64_t)&v70[*(int *)(v346 + 48)];
  sub_1BDF86808((uint64_t)v93, (uint64_t)v70, &qword_1EA0E1118);
  uint64_t v287 = v105;
  sub_1BDF86808((uint64_t)v91, v105, &qword_1EA0E1118);
  uint64_t v106 = v348 + 48;
  uint64_t v107 = *(unsigned int (**)(uint64_t, uint64_t, unint64_t))(v348 + 48);
  unint64_t v108 = v347;
  if (v107((uint64_t)v70, 1, v347) == 1)
  {
    sub_1BDF8686C((uint64_t)v91, &qword_1EA0E1118);
    sub_1BDF8686C((uint64_t)v93, &qword_1EA0E1118);
    if (v107(v287, 1, v108) == 1)
    {
      uint64_t v283 = v107;
      uint64_t v284 = v106;
      sub_1BDF8686C((uint64_t)v70, &qword_1EA0E1118);
      goto LABEL_21;
    }
LABEL_19:
    uint64_t v109 = &qword_1EA0E4E60;
    uint64_t v110 = (uint64_t)v70;
    goto LABEL_27;
  }
  sub_1BDF86808((uint64_t)v70, (uint64_t)v88, &qword_1EA0E1118);
  if (v107(v287, 1, v108) == 1)
  {
    sub_1BDF8686C((uint64_t)v91, &qword_1EA0E1118);
    sub_1BDF8686C((uint64_t)v93, &qword_1EA0E1118);
    (*(void (**)(char *, unint64_t))(v348 + 8))(v88, v108);
    goto LABEL_19;
  }
  uint64_t v283 = v107;
  uint64_t v284 = v106;
  uint64_t v111 = v348;
  (*(void (**)(uint64_t, uint64_t, unint64_t))(v348 + 32))(v345, v287, v108);
  sub_1BE05346C(&qword_1EA0E4E68, MEMORY[0x1E4F27D68]);
  LODWORD(v287) = sub_1BE070440();
  uint64_t v112 = *(void (**)(uint64_t, unint64_t))(v111 + 8);
  v112(v345, v108);
  sub_1BDF8686C((uint64_t)v91, &qword_1EA0E1118);
  sub_1BDF8686C((uint64_t)v93, &qword_1EA0E1118);
  v112((uint64_t)v88, v108);
  sub_1BDF8686C((uint64_t)v70, &qword_1EA0E1118);
  if ((v287 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_21:
  uint64_t v113 = v285;
  long long v114 = v286;
  sub_1BDF86808((uint64_t)v285 + v286[12], (uint64_t)v85, &qword_1EA0E1118);
  uint64_t v115 = v114[12];
  unint64_t v116 = v347;
  sub_1BDF86808((uint64_t)v349 + v115, (uint64_t)v82, &qword_1EA0E1118);
  uint64_t v117 = v344;
  uint64_t v118 = v344 + *(int *)(v346 + 48);
  sub_1BDF86808((uint64_t)v85, v344, &qword_1EA0E1118);
  sub_1BDF86808((uint64_t)v82, v118, &qword_1EA0E1118);
  uint64_t v119 = v283;
  if (v283(v117, 1, v116) == 1)
  {
    sub_1BDF8686C((uint64_t)v82, &qword_1EA0E1118);
    unint64_t v116 = v347;
    sub_1BDF8686C((uint64_t)v85, &qword_1EA0E1118);
    if (v119(v118, 1, v116) == 1)
    {
      sub_1BDF8686C(v117, &qword_1EA0E1118);
      goto LABEL_31;
    }
LABEL_26:
    uint64_t v109 = &qword_1EA0E4E60;
    uint64_t v110 = v117;
    goto LABEL_27;
  }
  unint64_t v120 = v343;
  sub_1BDF86808(v117, v343, &qword_1EA0E1118);
  if (v119(v118, 1, v116) == 1)
  {
    sub_1BDF8686C((uint64_t)v82, &qword_1EA0E1118);
    sub_1BDF8686C((uint64_t)v85, &qword_1EA0E1118);
    (*(void (**)(unint64_t, unint64_t))(v348 + 8))(v120, v116);
    goto LABEL_26;
  }
  uint64_t v122 = v348;
  uint64_t v123 = v345;
  (*(void (**)(uint64_t, uint64_t, unint64_t))(v348 + 32))(v345, v118, v116);
  sub_1BE05346C(&qword_1EA0E4E68, MEMORY[0x1E4F27D68]);
  unint64_t v124 = v120;
  int v125 = sub_1BE070440();
  uint64_t v113 = v285;
  LODWORD(v287) = v125;
  uint64_t v126 = *(void (**)(uint64_t, unint64_t))(v122 + 8);
  v126(v123, v116);
  sub_1BDF8686C((uint64_t)v82, &qword_1EA0E1118);
  sub_1BDF8686C((uint64_t)v85, &qword_1EA0E1118);
  v126(v124, v116);
  sub_1BDF8686C(v117, &qword_1EA0E1118);
  if ((v287 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_31:
  if (*((unsigned __int8 *)v113 + v286[13]) != *((unsigned __int8 *)v349 + v286[13])) {
    goto LABEL_28;
  }
  uint64_t v127 = v113;
  uint64_t v128 = v349;
  uint64_t v129 = *((void *)&v342 + 1);
  unint64_t v130 = v116;
  uint64_t v131 = v286;
  sub_1BDF86808((uint64_t)v127 + v286[14], *((uint64_t *)&v342 + 1), &qword_1EA0E1118);
  uint64_t v132 = v342;
  sub_1BDF86808((uint64_t)v128 + v131[14], v342, &qword_1EA0E1118);
  uint64_t v133 = v341;
  uint64_t v134 = v341 + *(int *)(v346 + 48);
  sub_1BDF86808(v129, v341, &qword_1EA0E1118);
  sub_1BDF86808(v132, v134, &qword_1EA0E1118);
  uint64_t v135 = (uint64_t (*)(uint64_t, uint64_t, unint64_t))v283;
  if (v283(v133, 1, v130) == 1)
  {
    sub_1BDF8686C(v132, &qword_1EA0E1118);
    sub_1BDF8686C(v129, &qword_1EA0E1118);
    int v136 = v135(v134, 1, v130);
    uint64_t v138 = (uint64_t)v339;
    uint64_t v137 = v340;
    uint64_t v139 = (uint64_t)v337;
    uint64_t v140 = (uint64_t)v338;
    if (v136 == 1)
    {
      sub_1BDF8686C(v133, &qword_1EA0E1118);
      goto LABEL_39;
    }
LABEL_37:
    uint64_t v109 = &qword_1EA0E4E60;
    uint64_t v110 = v133;
    goto LABEL_27;
  }
  uint64_t v141 = v336;
  sub_1BDF86808(v133, v336, &qword_1EA0E1118);
  int v142 = v135(v134, 1, v130);
  uint64_t v138 = (uint64_t)v339;
  uint64_t v137 = v340;
  uint64_t v140 = (uint64_t)v338;
  if (v142 == 1)
  {
    sub_1BDF8686C(v342, &qword_1EA0E1118);
    sub_1BDF8686C(*((uint64_t *)&v342 + 1), &qword_1EA0E1118);
    (*(void (**)(uint64_t, unint64_t))(v348 + 8))(v141, v130);
    goto LABEL_37;
  }
  uint64_t v143 = v348;
  uint64_t v144 = v345;
  (*(void (**)(uint64_t, uint64_t, unint64_t))(v348 + 32))(v345, v134, v130);
  sub_1BE05346C(&qword_1EA0E4E68, MEMORY[0x1E4F27D68]);
  char v145 = sub_1BE070440();
  uint64_t v146 = *(void (**)(uint64_t, unint64_t))(v143 + 8);
  v146(v144, v130);
  sub_1BDF8686C(v342, &qword_1EA0E1118);
  sub_1BDF8686C(*((uint64_t *)&v342 + 1), &qword_1EA0E1118);
  v146(v141, v130);
  uint64_t v139 = (uint64_t)v337;
  sub_1BDF8686C(v341, &qword_1EA0E1118);
  if ((v145 & 1) == 0) {
    goto LABEL_28;
  }
LABEL_39:
  uint64_t v147 = v286;
  sub_1BDF86808((uint64_t)v285 + v286[15], v138, &qword_1EA0E3E18);
  sub_1BDF86808((uint64_t)v349 + v147[15], v140, &qword_1EA0E3E18);
  uint64_t v148 = v335;
  uint64_t v149 = v335 + *(int *)(v333 + 48);
  sub_1BDF86808(v138, v335, &qword_1EA0E3E18);
  sub_1BDF86808(v140, v149, &qword_1EA0E3E18);
  uint64_t v150 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v137 + 48);
  uint64_t v151 = v334;
  if (v150(v148, 1, v334) == 1)
  {
    sub_1BDF8686C(v140, &qword_1EA0E3E18);
    sub_1BDF8686C(v138, &qword_1EA0E3E18);
    if (v150(v149, 1, v151) == 1)
    {
      sub_1BDF8686C(v148, &qword_1EA0E3E18);
      goto LABEL_46;
    }
LABEL_44:
    uint64_t v109 = &qword_1EA0E4E58;
    uint64_t v110 = v148;
    goto LABEL_27;
  }
  sub_1BDF86808(v148, v139, &qword_1EA0E3E18);
  if (v150(v149, 1, v151) == 1)
  {
    sub_1BDF8686C(v140, &qword_1EA0E3E18);
    sub_1BDF8686C(v138, &qword_1EA0E3E18);
    sub_1BE0446A0(v139, type metadata accessor for EventVirtualConferenceModelObject);
    goto LABEL_44;
  }
  uint64_t v152 = v332;
  sub_1BE047C10(v149, v332, type metadata accessor for EventVirtualConferenceModelObject);
  BOOL v153 = _s13CalendarUIKit33EventVirtualConferenceModelObjectV2eeoiySbAC_ACtFZ_0(v139, v152);
  sub_1BE0446A0(v152, type metadata accessor for EventVirtualConferenceModelObject);
  sub_1BDF8686C(v140, &qword_1EA0E3E18);
  sub_1BDF8686C(v138, &qword_1EA0E3E18);
  sub_1BE0446A0(v139, type metadata accessor for EventVirtualConferenceModelObject);
  sub_1BDF8686C(v148, &qword_1EA0E3E18);
  if (!v153) {
    goto LABEL_28;
  }
LABEL_46:
  uint64_t v155 = v285;
  uint64_t v154 = v286;
  uint64_t v156 = v286[16];
  uint64_t v157 = (void *)((char *)v285 + v156);
  uint64_t v158 = *(void *)((char *)v285 + v156 + 8);
  uint64_t v159 = (void *)((char *)v349 + v156);
  uint64_t v160 = v159[1];
  if (v158)
  {
    if (!v160) {
      goto LABEL_28;
    }
    if (*v157 != *v159 || v158 != v160)
    {
      char v161 = sub_1BE070EF0();
      uint64_t v154 = v286;
      char v99 = 0;
      if ((v161 & 1) == 0) {
        return v99 & 1;
      }
    }
  }
  else if (v160)
  {
    goto LABEL_28;
  }
  uint64_t v162 = v154[17];
  uint64_t v163 = (void *)((char *)v155 + v162);
  uint64_t v164 = *(void *)((char *)v155 + v162 + 8);
  uint64_t v165 = (void *)((char *)v349 + v162);
  uint64_t v166 = v165[1];
  if (!v164)
  {
    if (v166) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
  if (!v166) {
    goto LABEL_28;
  }
  uint64_t v155 = v285;
  uint64_t v154 = v286;
  if (*v163 == *v165 && v164 == v166 || (v167 = sub_1BE070EF0(), v154 = v286, char v99 = 0, (v167 & 1) != 0))
  {
LABEL_60:
    uint64_t v168 = v154[18];
    long long v169 = *(void **)((char *)v155 + v168);
    uint64_t v170 = *(void **)((char *)v349 + v168);
    if (v169)
    {
      if (!v170 || (sub_1BE05792C(v169, v170) & 1) == 0) {
        goto LABEL_28;
      }
    }
    else if (v170)
    {
      goto LABEL_28;
    }
    uint64_t v171 = v286;
    sub_1BDFB8210((uint64_t)v285 + v286[19], (uint64_t)v417, &qword_1EA0E3E38);
    sub_1BDFB8210((uint64_t)v349 + v171[19], (uint64_t)v418, &qword_1EA0E3E38);
    sub_1BDFB8210((uint64_t)v417, (uint64_t)v419, &qword_1EA0E3E38);
    if (sub_1BDFF8094((uint64_t)v419) == 1)
    {
      sub_1BDFB8210((uint64_t)v418, (uint64_t)v411, &qword_1EA0E3E38);
      if (sub_1BDFF8094((uint64_t)v411) == 1) {
        goto LABEL_72;
      }
    }
    else
    {
      sub_1BDFB8210((uint64_t)v417, (uint64_t)&v400, &qword_1EA0E3E38);
      sub_1BDFB8210((uint64_t)v418, (uint64_t)v411, &qword_1EA0E3E38);
      if (sub_1BDFF8094((uint64_t)v411) != 1)
      {
        sub_1BDFB8210((uint64_t)v418, (uint64_t)&v387, &qword_1EA0E3E38);
        long long v384 = v395;
        long long v385 = v396;
        long long v386 = v397;
        long long v380 = v391;
        long long v381 = v392;
        long long v383 = v394;
        long long v382 = v393;
        long long v376 = v387;
        long long v377 = v388;
        long long v379 = v390;
        long long v378 = v389;
        sub_1BDFB8210((uint64_t)v417, (uint64_t)v398, &qword_1EA0E3E38);
        sub_1BE03A394(v417, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
        sub_1BDFE8F5C(v398);
        BOOL v173 = _s13CalendarUIKit24EventLocationModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)&v400, (uint64_t)&v376);
        v399[8] = v408;
        v399[9] = v409;
        v399[10] = v410;
        v399[4] = v404;
        v399[5] = v405;
        v399[7] = v407;
        v399[6] = v406;
        v399[0] = v400;
        v399[1] = v401;
        v399[3] = v403;
        v399[2] = v402;
        sub_1BDFE9034(v399);
        sub_1BE03A394(v417, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
        if (!v173) {
          goto LABEL_28;
        }
LABEL_72:
        uint64_t v174 = v286;
        sub_1BDFB8210((uint64_t)v285 + v286[20], (uint64_t)v398, &qword_1EA0E3E38);
        sub_1BDFB8210((uint64_t)v349 + v174[20], (uint64_t)v399, &qword_1EA0E3E38);
        sub_1BDFB8210((uint64_t)v398, (uint64_t)&v400, &qword_1EA0E3E38);
        if (sub_1BDFF8094((uint64_t)&v400) == 1)
        {
          sub_1BDFB8210((uint64_t)v399, (uint64_t)v411, &qword_1EA0E3E38);
          if (sub_1BDFF8094((uint64_t)v411) == 1)
          {
LABEL_79:
            uint64_t v176 = v286;
            sub_1BDFB8210((uint64_t)v285 + v286[21], (uint64_t)v375, &qword_1EA0E3E38);
            sub_1BDFB8210((uint64_t)v349 + v176[21], (uint64_t)&v376, &qword_1EA0E3E38);
            sub_1BDFB8210((uint64_t)v375, (uint64_t)&v387, &qword_1EA0E3E38);
            if (sub_1BDFF8094((uint64_t)&v387) == 1)
            {
              sub_1BDFB8210((uint64_t)&v376, (uint64_t)v411, &qword_1EA0E3E38);
              if (sub_1BDFF8094((uint64_t)v411) == 1) {
                goto LABEL_87;
              }
            }
            else
            {
              sub_1BDFB8210((uint64_t)v375, (uint64_t)&v364, &qword_1EA0E3E38);
              sub_1BDFB8210((uint64_t)&v376, (uint64_t)v411, &qword_1EA0E3E38);
              if (sub_1BDFF8094((uint64_t)v411) != 1)
              {
                sub_1BDFB8210((uint64_t)&v376, (uint64_t)v351, &qword_1EA0E3E38);
                v350[8] = v351[8];
                v350[9] = v351[9];
                v350[10] = v351[10];
                v350[4] = v351[4];
                v350[5] = v351[5];
                v350[6] = v351[6];
                v350[7] = v351[7];
                v350[0] = v351[0];
                v350[1] = v351[1];
                v350[2] = v351[2];
                v350[3] = v351[3];
                sub_1BDFB8210((uint64_t)v375, (uint64_t)v352, &qword_1EA0E3E38);
                sub_1BE03A394(v375, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
                sub_1BDFE8F5C(v352);
                BOOL v177 = _s13CalendarUIKit24EventLocationModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)&v364, (uint64_t)v350);
                long long v361 = v372;
                long long v362 = v373;
                long long v363 = v374;
                long long v357 = v368;
                long long v358 = v369;
                long long v360 = v371;
                long long v359 = v370;
                long long v353 = v364;
                long long v354 = v365;
                long long v356 = v367;
                long long v355 = v366;
                sub_1BDFE9034(&v353);
                sub_1BE03A394(v375, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
                if (!v177) {
                  goto LABEL_28;
                }
LABEL_87:
                if (*(double *)((char *)v285 + v286[22]) != *(double *)((char *)v349 + v286[22])
                  || *(void *)((char *)v285 + v286[23]) != *(void *)((char *)v349 + v286[23]))
                {
                  goto LABEL_28;
                }
                uint64_t v178 = v286;
                uint64_t v179 = v330;
                sub_1BDF86808((uint64_t)v285 + v286[24], v330, &qword_1EA0E3E10);
                uint64_t v180 = v329;
                sub_1BDF86808((uint64_t)v349 + v178[24], v329, &qword_1EA0E3E10);
                uint64_t v181 = v331;
                uint64_t v182 = v331 + *(int *)(v325 + 48);
                sub_1BDF86808(v179, v331, &qword_1EA0E3E10);
                sub_1BDF86808(v180, v182, &qword_1EA0E3E10);
                char v183 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v326 + 48);
                if (v183(v181, 1, v328) == 1)
                {
                  sub_1BDF8686C(v329, &qword_1EA0E3E10);
                  sub_1BDF8686C(v330, &qword_1EA0E3E10);
                  if (v183(v182, 1, v328) == 1)
                  {
                    sub_1BDF8686C(v331, &qword_1EA0E3E10);
                    goto LABEL_96;
                  }
                }
                else
                {
                  sub_1BDF86808(v331, v327, &qword_1EA0E3E10);
                  if (v183(v182, 1, v328) != 1)
                  {
                    uint64_t v184 = v324;
                    sub_1BE047C10(v182, v324, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
                    uint64_t v185 = v327;
                    char v186 = static EventCalendarModelObject.== infix(_:_:)(v327, v184);
                    sub_1BE0446A0(v184, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
                    sub_1BDF8686C(v329, &qword_1EA0E3E10);
                    sub_1BDF8686C(v330, &qword_1EA0E3E10);
                    sub_1BE0446A0(v185, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
                    sub_1BDF8686C(v331, &qword_1EA0E3E10);
                    if ((v186 & 1) == 0) {
                      goto LABEL_28;
                    }
LABEL_96:
                    if (*(void *)((char *)v285 + v286[25]) != *(void *)((char *)v349 + v286[25])
                      || *(void *)((char *)v285 + v286[26]) != *(void *)((char *)v349 + v286[26]))
                    {
                      goto LABEL_28;
                    }
                    uint64_t v187 = v286[27];
                    uint64_t v188 = *(void *)((char *)v349 + v187);
                    if (*(void *)((char *)v285 + v187))
                    {
                      if (!v188) {
                        goto LABEL_28;
                      }
                      swift_bridgeObjectRetain();
                      uint64_t v189 = swift_bridgeObjectRetain();
                      char v190 = sub_1BE0579F4(v189, v188);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v190 & 1) == 0) {
                        goto LABEL_28;
                      }
                    }
                    else if (v188)
                    {
                      goto LABEL_28;
                    }
                    uint64_t v191 = v286[28];
                    uint64_t v192 = (void *)((char *)v285 + v191);
                    uint64_t v193 = *(void *)((char *)v285 + v191 + 8);
                    uint64_t v194 = (void *)((char *)v349 + v191);
                    uint64_t v195 = v194[1];
                    if (v193)
                    {
                      if (!v195 || (*v192 != *v194 || v193 != v195) && (sub_1BE070EF0() & 1) == 0) {
                        goto LABEL_28;
                      }
                    }
                    else if (v195)
                    {
                      goto LABEL_28;
                    }
                    if (*(void *)((char *)v285 + v286[29]) != *(void *)((char *)v349 + v286[29])) {
                      goto LABEL_28;
                    }
                    uint64_t v196 = v286;
                    uint64_t v197 = v291;
                    sub_1BDF86808((uint64_t)v285 + v286[30], v291, &qword_1EB677CC0);
                    uint64_t v198 = v290;
                    sub_1BDF86808((uint64_t)v349 + v196[30], v290, &qword_1EB677CC0);
                    uint64_t v199 = v295;
                    uint64_t v200 = v295 + *(int *)(v289 + 48);
                    sub_1BDF86808(v197, v295, &qword_1EB677CC0);
                    sub_1BDF86808(v198, v200, &qword_1EB677CC0);
                    uint64_t v201 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v294 + 48);
                    if (v201(v199, 1, v296) == 1)
                    {
                      sub_1BDF8686C(v290, &qword_1EB677CC0);
                      sub_1BDF8686C(v291, &qword_1EB677CC0);
                      if (v201(v200, 1, v296) == 1)
                      {
                        sub_1BDF8686C(v295, &qword_1EB677CC0);
                        goto LABEL_118;
                      }
                    }
                    else
                    {
                      sub_1BDF86808(v295, v292, &qword_1EB677CC0);
                      if (v201(v200, 1, v296) != 1)
                      {
                        v202 = v293;
                        uint64_t v203 = v294;
                        uint64_t v204 = v296;
                        (*(void (**)(char *, uint64_t, uint64_t))(v294 + 32))(v293, v200, v296);
                        sub_1BE05346C((unint64_t *)&qword_1EA0E3328, MEMORY[0x1E4F27928]);
                        uint64_t v205 = v292;
                        char v206 = sub_1BE070440();
                        uint64_t v207 = *(void (**)(char *, uint64_t))(v203 + 8);
                        v207(v202, v204);
                        sub_1BDF8686C(v290, &qword_1EB677CC0);
                        sub_1BDF8686C(v291, &qword_1EB677CC0);
                        v207((char *)v205, v204);
                        sub_1BDF8686C(v295, &qword_1EB677CC0);
                        if ((v206 & 1) == 0) {
                          goto LABEL_28;
                        }
LABEL_118:
                        uint64_t v208 = v286[31];
                        uint64_t v209 = *(void *)((char *)v349 + v208);
                        if (*(void *)((char *)v285 + v208))
                        {
                          if (!v209) {
                            goto LABEL_28;
                          }
                          swift_bridgeObjectRetain();
                          uint64_t v210 = swift_bridgeObjectRetain();
                          char v211 = sub_1BE057F00(v210, v209);
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if ((v211 & 1) == 0) {
                            goto LABEL_28;
                          }
                        }
                        else if (v209)
                        {
                          goto LABEL_28;
                        }
                        uint64_t v212 = v286;
                        uint64_t v213 = v299;
                        sub_1BDF86808((uint64_t)v285 + v286[32], v299, &qword_1EA0E3E28);
                        uint64_t v214 = v298;
                        sub_1BDF86808((uint64_t)v349 + v212[32], v298, &qword_1EA0E3E28);
                        uint64_t v215 = v304;
                        uint64_t v216 = v304 + *(int *)(v297 + 48);
                        sub_1BDF86808(v213, v304, &qword_1EA0E3E28);
                        sub_1BDF86808(v214, v216, &qword_1EA0E3E28);
                        uint64_t v217 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v302 + 48);
                        if (v217(v215, 1, v303) == 1)
                        {
                          sub_1BDF8686C(v298, &qword_1EA0E3E28);
                          sub_1BDF8686C(v299, &qword_1EA0E3E28);
                          if (v217(v216, 1, v303) == 1)
                          {
                            sub_1BDF8686C(v304, &qword_1EA0E3E28);
                            goto LABEL_130;
                          }
                        }
                        else
                        {
                          sub_1BDF86808(v304, (uint64_t)v300, &qword_1EA0E3E28);
                          if (v217(v216, 1, v303) != 1)
                          {
                            uint64_t v218 = v301;
                            sub_1BE047C10(v216, (uint64_t)v301, type metadata accessor for EventOrganizerModelObject);
                            uint64_t v219 = v300;
                            BOOL v220 = _s13CalendarUIKit25EventOrganizerModelObjectV2eeoiySbAC_ACtFZ_0(v300, v218);
                            sub_1BE0446A0((uint64_t)v218, type metadata accessor for EventOrganizerModelObject);
                            sub_1BDF8686C(v298, &qword_1EA0E3E28);
                            sub_1BDF8686C(v299, &qword_1EA0E3E28);
                            sub_1BE0446A0((uint64_t)v219, type metadata accessor for EventOrganizerModelObject);
                            sub_1BDF8686C(v304, &qword_1EA0E3E28);
                            if (!v220) {
                              goto LABEL_28;
                            }
LABEL_130:
                            uint64_t v221 = v286[33];
                            uint64_t v222 = *(void *)((char *)v349 + v221);
                            if (*(void *)((char *)v285 + v221))
                            {
                              if (!v222) {
                                goto LABEL_28;
                              }
                              swift_bridgeObjectRetain();
                              uint64_t v223 = swift_bridgeObjectRetain();
                              char v224 = sub_1BE057F40(v223, v222);
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              if ((v224 & 1) == 0) {
                                goto LABEL_28;
                              }
                            }
                            else if (v222)
                            {
                              goto LABEL_28;
                            }
                            unint64_t v225 = v286;
                            uint64_t v226 = v306;
                            sub_1BDF86808((uint64_t)v285 + v286[34], v306, &qword_1EA0E3E20);
                            uint64_t v227 = v305;
                            sub_1BDF86808((uint64_t)v349 + v225[34], v305, &qword_1EA0E3E20);
                            uint64_t v228 = v311;
                            uint64_t v229 = v311 + *(int *)(v288 + 48);
                            sub_1BDF86808(v226, v311, &qword_1EA0E3E20);
                            sub_1BDF86808(v227, v229, &qword_1EA0E3E20);
                            uint64_t v230 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v309 + 48);
                            if (v230(v228, 1, v310) == 1)
                            {
                              sub_1BDF8686C(v305, &qword_1EA0E3E20);
                              sub_1BDF8686C(v306, &qword_1EA0E3E20);
                              if (v230(v229, 1, v310) == 1)
                              {
                                sub_1BDF8686C(v311, &qword_1EA0E3E20);
                                goto LABEL_142;
                              }
                            }
                            else
                            {
                              sub_1BDF86808(v311, (uint64_t)v307, &qword_1EA0E3E20);
                              if (v230(v229, 1, v310) != 1)
                              {
                                v231 = v308;
                                sub_1BE047C10(v229, (uint64_t)v308, type metadata accessor for EventAttendeeModelObject);
                                uint64_t v232 = v307;
                                char v233 = _s13CalendarUIKit24EventAttendeeModelObjectV2eeoiySbAC_ACtFZ_0(v307, v231);
                                sub_1BE0446A0((uint64_t)v231, type metadata accessor for EventAttendeeModelObject);
                                sub_1BDF8686C(v305, &qword_1EA0E3E20);
                                sub_1BDF8686C(v306, &qword_1EA0E3E20);
                                sub_1BE0446A0((uint64_t)v232, type metadata accessor for EventAttendeeModelObject);
                                sub_1BDF8686C(v311, &qword_1EA0E3E20);
                                if ((v233 & 1) == 0) {
                                  goto LABEL_28;
                                }
LABEL_142:
                                uint64_t v234 = v286;
                                uint64_t v235 = v313;
                                sub_1BDF86808((uint64_t)v285 + v286[35], v313, &qword_1EB678020);
                                uint64_t v236 = v312;
                                sub_1BDF86808((uint64_t)v349 + v234[35], v312, &qword_1EB678020);
                                uint64_t v237 = v315;
                                uint64_t v238 = v315 + *(int *)(v316 + 48);
                                sub_1BDF86808(v235, v315, &qword_1EB678020);
                                sub_1BDF86808(v236, v238, &qword_1EB678020);
                                uint64_t v239 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v322 + 48);
                                if (v239(v237, 1, v323) == 1)
                                {
                                  sub_1BDF8686C(v312, &qword_1EB678020);
                                  sub_1BDF8686C(v313, &qword_1EB678020);
                                  if (v239(v238, 1, v323) == 1)
                                  {
                                    sub_1BDF8686C(v315, &qword_1EB678020);
LABEL_149:
                                    if (*((unsigned __int8 *)v285 + v286[36]) != *((unsigned __int8 *)v349 + v286[36])
                                      || *((unsigned __int8 *)v285 + v286[37]) != *((unsigned __int8 *)v349 + v286[37]))
                                    {
                                      goto LABEL_28;
                                    }
                                    uint64_t v246 = v286;
                                    uint64_t v247 = v318;
                                    sub_1BDF86808((uint64_t)v285 + v286[38], v318, &qword_1EB678020);
                                    uint64_t v248 = v317;
                                    sub_1BDF86808((uint64_t)v349 + v246[38], v317, &qword_1EB678020);
                                    uint64_t v249 = v321;
                                    uint64_t v250 = v321 + *(int *)(v316 + 48);
                                    sub_1BDF86808(v247, v321, &qword_1EB678020);
                                    sub_1BDF86808(v248, v250, &qword_1EB678020);
                                    if (v239(v249, 1, v323) == 1)
                                    {
                                      sub_1BDF8686C(v317, &qword_1EB678020);
                                      sub_1BDF8686C(v318, &qword_1EB678020);
                                      if (v239(v250, 1, v323) == 1)
                                      {
                                        sub_1BDF8686C(v321, &qword_1EB678020);
LABEL_158:
                                        uint64_t v257 = v286[39];
                                        uint64_t v258 = *(void *)((char *)v285 + v257);
                                        uint64_t v259 = *(void *)((char *)v285 + v257 + 16);
                                        uint64_t v348 = *(void *)((char *)v285 + v257 + 8);
                                        uint64_t v261 = *(void *)((char *)v285 + v257 + 24);
                                        uint64_t v260 = *(void *)((char *)v285 + v257 + 32);
                                        uint64_t v344 = v258;
                                        uint64_t v345 = v260;
                                        unint64_t v262 = *(void *)((char *)v285 + v257 + 48);
                                        uint64_t v346 = *(void *)((char *)v285 + v257 + 40);
                                        unint64_t v347 = v262;
                                        v263 = (void *)((char *)v349 + v257);
                                        uint64_t v264 = *v263;
                                        uint64_t v265 = v263[1];
                                        uint64_t v267 = v263[2];
                                        uint64_t v266 = v263[3];
                                        uint64_t v268 = v263[4];
                                        uint64_t v270 = v263[5];
                                        unint64_t v269 = v263[6];
                                        *(void *)&long long v342 = v268;
                                        *((void *)&v342 + 1) = v270;
                                        unint64_t v343 = v269;
                                        if (v259 == 1)
                                        {
                                          if (v267 == 1) {
                                            goto LABEL_165;
                                          }
                                          goto LABEL_163;
                                        }
                                        v411[0] = v344;
                                        v411[1] = v348;
                                        v411[2] = v259;
                                        uint64_t v412 = v261;
                                        uint64_t v413 = v345;
                                        uint64_t v414 = v346;
                                        unint64_t v415 = v347;
                                        if (v267 == 1)
                                        {
                                          swift_bridgeObjectRetain();
                                          uint64_t v272 = v345;
                                          uint64_t v271 = v346;
                                          unint64_t v273 = v347;
                                          sub_1BDFDB0F8(v261, v345, v346, v347);
                                          swift_bridgeObjectRetain();
                                          sub_1BDFDB0F8(v261, v272, v271, v273);
                                          swift_bridgeObjectRelease();
                                          sub_1BDFDB194(v261, v272, v271, v273);
LABEL_163:
                                          long long v274 = v342;
                                          unint64_t v275 = v343;
                                          sub_1BE044638(v264, v265, v267, v266, v342, *((uint64_t *)&v342 + 1), v343);
                                          sub_1BE039724(v344, v348, v259, v261, v345, v346, v347);
                                          sub_1BE039724(v264, v265, v267, v266, v274, *((uint64_t *)&v274 + 1), v275);
                                          goto LABEL_28;
                                        }
                                        LOBYTE(v364) = v264 & 1;
                                        *((void *)&v364 + 1) = v265;
                                        *(void *)&long long v365 = v267;
                                        *((void *)&v365 + 1) = v266;
                                        long long v366 = v342;
                                        uint64_t v276 = v344;
                                        *(void *)&long long v367 = v343;
                                        uint64_t v278 = v345;
                                        uint64_t v277 = v346;
                                        unint64_t v279 = v347;
                                        sub_1BE044638(v344, v348, v259, v261, v345, v346, v347);
                                        swift_bridgeObjectRetain();
                                        sub_1BDFDB0F8(v261, v278, v277, v279);
                                        LODWORD(v343) = _s13CalendarUIKit27EventIntegrationModelObjectV2eeoiySbAC_ACtFZ_0(v411, &v364);
                                        uint64_t v280 = v412;
                                        uint64_t v281 = v413;
                                        uint64_t v282 = v414;
                                        *((void *)&v342 + 1) = v415;
                                        swift_bridgeObjectRelease();
                                        sub_1BDFDB194(v280, v281, v282, *((unint64_t *)&v342 + 1));
                                        sub_1BE039724(v276, v348, v259, v261, v278, v277, v279);
                                        if (v343)
                                        {
LABEL_165:
                                          if (*((unsigned __int8 *)v285 + v286[40]) == *((unsigned __int8 *)v349
                                                                                        + v286[40])
                                            && *((unsigned __int8 *)v285 + v286[41]) == *((unsigned __int8 *)v349
                                                                                        + v286[41]))
                                          {
                                            char v99 = *((unsigned char *)v285 + v286[42]) ^ *((unsigned char *)v349 + v286[42]) ^ 1;
                                            return v99 & 1;
                                          }
                                        }
LABEL_28:
                                        char v99 = 0;
                                        return v99 & 1;
                                      }
                                    }
                                    else
                                    {
                                      sub_1BDF86808(v321, v319, &qword_1EB678020);
                                      if (v239(v250, 1, v323) != 1)
                                      {
                                        uint64_t v252 = v322;
                                        uint64_t v251 = v323;
                                        uint64_t v253 = v320;
                                        (*(void (**)(char *, uint64_t, uint64_t))(v322 + 32))(v320, v250, v323);
                                        sub_1BE05346C((unint64_t *)&qword_1EA0E2EA0, MEMORY[0x1E4F276F0]);
                                        uint64_t v254 = v319;
                                        char v255 = sub_1BE070440();
                                        v256 = *(void (**)(char *, uint64_t))(v252 + 8);
                                        v256(v253, v251);
                                        sub_1BDF8686C(v317, &qword_1EB678020);
                                        sub_1BDF8686C(v318, &qword_1EB678020);
                                        v256((char *)v254, v251);
                                        sub_1BDF8686C(v321, &qword_1EB678020);
                                        if ((v255 & 1) == 0) {
                                          goto LABEL_28;
                                        }
                                        goto LABEL_158;
                                      }
                                      sub_1BDF8686C(v317, &qword_1EB678020);
                                      sub_1BDF8686C(v318, &qword_1EB678020);
                                      (*(void (**)(uint64_t, uint64_t))(v322 + 8))(v319, v323);
                                    }
                                    uint64_t v109 = &qword_1EA0E2E98;
                                    uint64_t v110 = v321;
LABEL_27:
                                    sub_1BDF8686C(v110, v109);
                                    goto LABEL_28;
                                  }
                                }
                                else
                                {
                                  sub_1BDF86808(v315, v314, &qword_1EB678020);
                                  if (v239(v238, 1, v323) != 1)
                                  {
                                    uint64_t v240 = v322;
                                    uint64_t v241 = v323;
                                    uint64_t v242 = v320;
                                    (*(void (**)(char *, uint64_t, uint64_t))(v322 + 32))(v320, v238, v323);
                                    sub_1BE05346C((unint64_t *)&qword_1EA0E2EA0, MEMORY[0x1E4F276F0]);
                                    uint64_t v243 = v314;
                                    char v244 = sub_1BE070440();
                                    uint64_t v245 = *(void (**)(char *, uint64_t))(v240 + 8);
                                    v245(v242, v241);
                                    sub_1BDF8686C(v312, &qword_1EB678020);
                                    sub_1BDF8686C(v313, &qword_1EB678020);
                                    v245((char *)v243, v241);
                                    sub_1BDF8686C(v315, &qword_1EB678020);
                                    if ((v244 & 1) == 0) {
                                      goto LABEL_28;
                                    }
                                    goto LABEL_149;
                                  }
                                  sub_1BDF8686C(v312, &qword_1EB678020);
                                  sub_1BDF8686C(v313, &qword_1EB678020);
                                  (*(void (**)(uint64_t, uint64_t))(v322 + 8))(v314, v323);
                                }
                                uint64_t v109 = &qword_1EA0E2E98;
                                uint64_t v110 = v315;
                                goto LABEL_27;
                              }
                              sub_1BDF8686C(v305, &qword_1EA0E3E20);
                              sub_1BDF8686C(v306, &qword_1EA0E3E20);
                              sub_1BE0446A0((uint64_t)v307, type metadata accessor for EventAttendeeModelObject);
                            }
                            uint64_t v109 = &qword_1EA0E4E40;
                            uint64_t v110 = v311;
                            goto LABEL_27;
                          }
                          sub_1BDF8686C(v298, &qword_1EA0E3E28);
                          sub_1BDF8686C(v299, &qword_1EA0E3E28);
                          sub_1BE0446A0((uint64_t)v300, type metadata accessor for EventOrganizerModelObject);
                        }
                        uint64_t v109 = &qword_1EA0E4E48;
                        uint64_t v110 = v304;
                        goto LABEL_27;
                      }
                      sub_1BDF8686C(v290, &qword_1EB677CC0);
                      sub_1BDF8686C(v291, &qword_1EB677CC0);
                      (*(void (**)(uint64_t, uint64_t))(v294 + 8))(v292, v296);
                    }
                    uint64_t v109 = &qword_1EA0E46D0;
                    uint64_t v110 = v295;
                    goto LABEL_27;
                  }
                  sub_1BDF8686C(v329, &qword_1EA0E3E10);
                  sub_1BDF8686C(v330, &qword_1EA0E3E10);
                  sub_1BE0446A0(v327, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
                }
                uint64_t v109 = &qword_1EA0E4E50;
                uint64_t v110 = v331;
                goto LABEL_27;
              }
              v352[9] = v373;
              v352[10] = v374;
              v352[4] = v368;
              v352[5] = v369;
              v352[7] = v371;
              v352[8] = v372;
              v352[6] = v370;
              v352[0] = v364;
              v352[1] = v365;
              v352[2] = v366;
              v352[3] = v367;
              sub_1BDFB8210((uint64_t)v375, (uint64_t)&v353, &qword_1EA0E3E38);
              sub_1BDFE8F5C(&v353);
              sub_1BDFE8F5C(&v353);
              sub_1BDFE9034(v352);
            }
            sub_1BDFB8210((uint64_t)v375, (uint64_t)v411, &qword_1EA0E3E38);
            sub_1BDFB8210((uint64_t)&v376, (uint64_t)v416, &qword_1EA0E3E38);
            uint64_t v172 = &v376;
LABEL_85:
            sub_1BE03A394(v172, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
            sub_1BE053354((uint64_t)v411);
            goto LABEL_28;
          }
        }
        else
        {
          sub_1BDFB8210((uint64_t)v398, (uint64_t)&v387, &qword_1EA0E3E38);
          sub_1BDFB8210((uint64_t)v399, (uint64_t)v411, &qword_1EA0E3E38);
          if (sub_1BDFF8094((uint64_t)v411) != 1)
          {
            sub_1BDFB8210((uint64_t)v399, (uint64_t)&v364, &qword_1EA0E3E38);
            long long v361 = v372;
            long long v362 = v373;
            long long v363 = v374;
            long long v357 = v368;
            long long v358 = v369;
            long long v360 = v371;
            long long v359 = v370;
            long long v353 = v364;
            long long v354 = v365;
            long long v356 = v367;
            long long v355 = v366;
            sub_1BDFB8210((uint64_t)v398, (uint64_t)v375, &qword_1EA0E3E38);
            sub_1BE03A394(v398, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF80E0);
            sub_1BDFE8F5C(v375);
            BOOL v175 = _s13CalendarUIKit24EventLocationModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)&v387, (uint64_t)&v353);
            long long v384 = v395;
            long long v385 = v396;
            long long v386 = v397;
            long long v380 = v391;
            long long v381 = v392;
            long long v383 = v394;
            long long v382 = v393;
            long long v376 = v387;
            long long v377 = v388;
            long long v379 = v390;
            long long v378 = v389;
            sub_1BDFE9034(&v376);
            sub_1BE03A394(v398, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1BDFF8254);
            if (!v175) {
              goto LABEL_28;
            }
            goto LABEL_79;
          }
          v375[8] = v395;
          v375[9] = v396;
          v375[10] = v397;
          v375[4] = v391;
          v375[5] = v392;
          v375[7] = v394;
          v375[6] = v393;
          v375[0] = v387;
          v375[1] = v388;
          v375[3] = v390;
          v375[2] = v389;
          sub_1BDFB8210((uint64_t)v398, (uint64_t)&v376, &qword_1EA0E3E38);
          sub_1BDFE8F5C(&v376);
          sub_1BDFE8F5C(&v376);
          sub_1BDFE9034(v375);
        }
        sub_1BDFB8210((uint64_t)v398, (uint64_t)v411, &qword_1EA0E3E38);
        sub_1BDFB8210((uint64_t)v399, (uint64_t)v416, &qword_1EA0E3E38);
        uint64_t v172 = v399;
        goto LABEL_85;
      }
      v398[8] = v408;
      v398[9] = v409;
      v398[10] = v410;
      v398[4] = v404;
      v398[5] = v405;
      v398[7] = v407;
      v398[6] = v406;
      v398[0] = v400;
      v398[1] = v401;
      v398[3] = v403;
      v398[2] = v402;
      sub_1BDFB8210((uint64_t)v417, (uint64_t)v399, &qword_1EA0E3E38);
      sub_1BDFE8F5C(v399);
      sub_1BDFE8F5C(v399);
      sub_1BDFE9034(v398);
    }
    sub_1BDFB8210((uint64_t)v417, (uint64_t)v411, &qword_1EA0E3E38);
    sub_1BDFB8210((uint64_t)v418, (uint64_t)v416, &qword_1EA0E3E38);
    uint64_t v172 = (long long *)v418;
    goto LABEL_85;
  }
  return v99 & 1;
}

unint64_t sub_1BE047694()
{
  unint64_t result = qword_1EA0E4CC8;
  if (!qword_1EA0E4CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4CC8);
  }
  return result;
}

unint64_t sub_1BE0476E8()
{
  unint64_t result = qword_1EA0E4CE0;
  if (!qword_1EA0E4CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4CE0);
  }
  return result;
}

unint64_t sub_1BE04773C()
{
  unint64_t result = qword_1EA0E4D08;
  if (!qword_1EA0E4D08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4D00);
    sub_1BE05346C(&qword_1EA0E4D10, (void (*)(uint64_t))type metadata accessor for EventAlarmModelObject);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4D08);
  }
  return result;
}

unint64_t sub_1BE0477E0()
{
  unint64_t result = qword_1EA0E4D28;
  if (!qword_1EA0E4D28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4D20);
    sub_1BE05346C(&qword_1EA0E4D30, (void (*)(uint64_t))type metadata accessor for EventRecurrenceRuleModelObject);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4D28);
  }
  return result;
}

unint64_t sub_1BE047884()
{
  unint64_t result = qword_1EA0E4D48;
  if (!qword_1EA0E4D48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4D40);
    sub_1BE05346C(&qword_1EA0E4D50, (void (*)(uint64_t))type metadata accessor for EventAttendeeModelObject);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4D48);
  }
  return result;
}

unint64_t sub_1BE047928()
{
  unint64_t result = qword_1EA0E4D58;
  if (!qword_1EA0E4D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4D58);
  }
  return result;
}

unint64_t sub_1BE04797C()
{
  unint64_t result = qword_1EA0E4D78;
  if (!qword_1EA0E4D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4D78);
  }
  return result;
}

unint64_t sub_1BE0479D0()
{
  unint64_t result = qword_1EA0E4D98;
  if (!qword_1EA0E4D98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4D00);
    sub_1BE05346C(&qword_1EA0E4DA0, (void (*)(uint64_t))type metadata accessor for EventAlarmModelObject);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4D98);
  }
  return result;
}

unint64_t sub_1BE047A74()
{
  unint64_t result = qword_1EA0E4DB0;
  if (!qword_1EA0E4DB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4D20);
    sub_1BE05346C(&qword_1EA0E4DB8, (void (*)(uint64_t))type metadata accessor for EventRecurrenceRuleModelObject);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4DB0);
  }
  return result;
}

unint64_t sub_1BE047B18()
{
  unint64_t result = qword_1EA0E4DC8;
  if (!qword_1EA0E4DC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4D40);
    sub_1BE05346C(&qword_1EA0E4DD0, (void (*)(uint64_t))type metadata accessor for EventAttendeeModelObject);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4DC8);
  }
  return result;
}

unint64_t sub_1BE047BBC()
{
  unint64_t result = qword_1EA0E4DD8;
  if (!qword_1EA0E4DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4DD8);
  }
  return result;
}

uint64_t sub_1BE047C10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BE047C78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_UNKNOWN **sub_1BE047CE0()
{
  return &protocol witness table for EventAlarmModelObject;
}

uint64_t sub_1BE047CEC()
{
  return sub_1BE05346C(&qword_1EA0E4DE0, (void (*)(uint64_t))type metadata accessor for EventAttendeeModelObject);
}

uint64_t sub_1BE047D34()
{
  return sub_1BE05346C(&qword_1EA0E4DE8, (void (*)(uint64_t))type metadata accessor for EventCalendarModelObject);
}

_UNKNOWN **sub_1BE047D7C()
{
  return &protocol witness table for EventIntegrationModelObject;
}

_UNKNOWN **sub_1BE047D88()
{
  return &protocol witness table for EventLocationModelObject;
}

uint64_t sub_1BE047D94()
{
  return sub_1BE05346C(&qword_1EA0E4DF0, (void (*)(uint64_t))type metadata accessor for EventOrganizerModelObject);
}

_UNKNOWN **sub_1BE047DDC()
{
  return &protocol witness table for EventRecurrenceRuleModelObject;
}

_UNKNOWN **sub_1BE047DE8()
{
  return &protocol witness table for EventVirtualConferenceModelObject;
}

uint64_t sub_1BE047DF4(uint64_t a1)
{
  uint64_t result = sub_1BE05346C(&qword_1EA0E4DF8, (void (*)(uint64_t))type metadata accessor for EventModelObject);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BE047E4C()
{
  return sub_1BE05346C(&qword_1EA0E4E00, (void (*)(uint64_t))type metadata accessor for EventModelObject);
}

uint64_t sub_1BE047E94@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result = type metadata accessor for EventModelObject();
  *a2 = *(void *)(a1 + *(int *)(result + 100)) != 0;
  return result;
}

void *initializeBufferWithCopyOfBuffer for EventModelObject(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v18 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v8;
    uint64_t v9 = *((void *)a2 + 5);
    uint64_t v10 = a3[7];
    long long v274 = &a1[v10];
    uint64_t v11 = &a2[v10];
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = v9;
    uint64_t v12 = sub_1BE06EEE0();
    uint64_t v278 = *(void *)(v12 - 8);
    uint64_t v13 = a2;
    uint64_t v14 = a3;
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v278 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v274, v11, v12);
    uint64_t v275 = v12;
    unint64_t v269 = v15;
    v15(&a1[v14[8]], &v13[v14[8]], v12);
    uint64_t v16 = v14;
    uint64_t v17 = v13;
    uint64_t v18 = a1;
    uint64_t v19 = v16[10];
    a1[v16[9]] = *((unsigned char *)v17 + v16[9]);
    a1[v19] = *((unsigned char *)v17 + v19);
    uint64_t v20 = v16[11];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = (char *)v17 + v20;
    uint64_t v23 = sub_1BE06F140();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    if (v25(v22, 1, v23))
    {
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
      memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    uint64_t v28 = v16[12];
    uint64_t v29 = &a1[v28];
    uint64_t v30 = (char *)v17 + v28;
    if (v25((char *)v17 + v28, 1, v23))
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v29, v30, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v29, 0, 1, v23);
    }
    uint64_t v32 = v16[14];
    a1[v16[13]] = *((unsigned char *)v17 + v16[13]);
    uint64_t v33 = &a1[v32];
    uint64_t v34 = (char *)v17 + v32;
    if (v25((char *)v17 + v32, 1, v23))
    {
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v33, v34, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v33, 0, 1, v23);
    }
    uint64_t v36 = v16[15];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = (void *)((char *)v17 + v36);
    uint64_t v39 = type metadata accessor for EventVirtualConferenceModelObject(0);
    uint64_t v40 = *(void *)(v39 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E18);
      memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      uint64_t v262 = v40;
      uint64_t v42 = v38[1];
      *(void *)uint64_t v37 = *v38;
      *((void *)v37 + 1) = v42;
      uint64_t v43 = v38[3];
      *((void *)v37 + 2) = v38[2];
      *((void *)v37 + 3) = v43;
      uint64_t v44 = v38[5];
      *((void *)v37 + 4) = v38[4];
      *((void *)v37 + 5) = v44;
      *((void *)v37 + 6) = v38[6];
      v37[56] = *((unsigned char *)v38 + 56);
      *((void *)v37 + 8) = v38[8];
      uint64_t v45 = *(int *)(v39 + 40);
      __dst = &v37[v45];
      __src = (char *)v38 + v45;
      uint64_t v46 = sub_1BE06EE10();
      uint64_t v47 = *(void *)(v46 - 8);
      uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v257 = v47;
      if (v48(__src, 1, v46))
      {
        uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
        memcpy(__dst, __src, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(__dst, __src, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(__dst, 0, 1, v46);
      }
      uint64_t v50 = *(int *)(v39 + 44);
      uint64_t v51 = &v37[v50];
      uint64_t v52 = (char *)v38 + v50;
      if (v48(v52, 1, v46))
      {
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v257 + 16))(v51, v52, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v257 + 56))(v51, 0, 1, v46);
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v262 + 56))(v37, 0, 1, v39);
    }
    uint64_t v54 = v16[16];
    uint64_t v55 = v16[17];
    uint64_t v56 = &a1[v54];
    uint64_t v57 = (void *)((char *)v17 + v54);
    uint64_t v58 = v57[1];
    *(void *)uint64_t v56 = *v57;
    *((void *)v56 + 1) = v58;
    uint64_t v59 = &a1[v55];
    uint64_t v60 = (void *)((char *)v17 + v55);
    uint64_t v61 = *v60;
    uint64_t v62 = v60[1];
    uint64_t v63 = v16[18];
    uint64_t v64 = v16[19];
    uint64_t v65 = *(void *)((char *)v17 + v63);
    *(void *)uint64_t v59 = v61;
    *((void *)v59 + 1) = v62;
    *(void *)&a1[v63] = v65;
    uint64_t v66 = &a1[v64];
    uint64_t v67 = (uint64_t)v17 + v64;
    uint64_t v68 = *(void *)((char *)v17 + v64 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v68 == 1)
    {
      long long v69 = *(_OWORD *)(v67 + 144);
      *((_OWORD *)v66 + 8) = *(_OWORD *)(v67 + 128);
      *((_OWORD *)v66 + 9) = v69;
      *((_OWORD *)v66 + 10) = *(_OWORD *)(v67 + 160);
      long long v70 = *(_OWORD *)(v67 + 80);
      *((_OWORD *)v66 + 4) = *(_OWORD *)(v67 + 64);
      *((_OWORD *)v66 + 5) = v70;
      long long v71 = *(_OWORD *)(v67 + 112);
      *((_OWORD *)v66 + 6) = *(_OWORD *)(v67 + 96);
      *((_OWORD *)v66 + 7) = v71;
      long long v72 = *(_OWORD *)(v67 + 16);
      *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
      *((_OWORD *)v66 + 1) = v72;
      long long v73 = *(_OWORD *)(v67 + 48);
      *((_OWORD *)v66 + 2) = *(_OWORD *)(v67 + 32);
      *((_OWORD *)v66 + 3) = v73;
    }
    else
    {
      *(void *)uint64_t v66 = *(void *)v67;
      *((void *)v66 + 1) = v68;
      uint64_t v74 = *(void **)(v67 + 16);
      *((void *)v66 + 2) = v74;
      *(_OWORD *)(v66 + 24) = *(_OWORD *)(v67 + 24);
      uint64_t v75 = *(void *)(v67 + 48);
      *((void *)v66 + 5) = *(void *)(v67 + 40);
      *((void *)v66 + 6) = v75;
      *((void *)v66 + 7) = *(void *)(v67 + 56);
      __srca = (uint64_t *)(v67 + 64);
      unint64_t v76 = *(void *)(v67 + 72);
      swift_bridgeObjectRetain();
      id v77 = v74;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v76 >> 60 == 15)
      {
        *((_OWORD *)v66 + 4) = *(_OWORD *)__srca;
      }
      else
      {
        uint64_t v78 = *__srca;
        sub_1BDF840AC(*__srca, v76);
        *((void *)v66 + 8) = v78;
        *((void *)v66 + 9) = v76;
      }
      v66[80] = *(unsigned char *)(v67 + 80);
      uint64_t v79 = *(void *)(v67 + 104);
      if (v79 == 1)
      {
        long long v80 = *(_OWORD *)(v67 + 136);
        *(_OWORD *)(v66 + 120) = *(_OWORD *)(v67 + 120);
        *(_OWORD *)(v66 + 136) = v80;
        *(_OWORD *)(v66 + 152) = *(_OWORD *)(v67 + 152);
        *((void *)v66 + 21) = *(void *)(v67 + 168);
        long long v81 = *(_OWORD *)(v67 + 104);
        *(_OWORD *)(v66 + 88) = *(_OWORD *)(v67 + 88);
        *(_OWORD *)(v66 + 104) = v81;
      }
      else
      {
        *(_OWORD *)(v66 + 88) = *(_OWORD *)(v67 + 88);
        uint64_t v82 = *(void *)(v67 + 112);
        uint64_t v83 = *(void *)(v67 + 120);
        *((void *)v66 + 13) = v79;
        *((void *)v66 + 14) = v82;
        uint64_t v84 = *(void *)(v67 + 128);
        uint64_t v85 = *(void *)(v67 + 136);
        *((void *)v66 + 15) = v83;
        *((void *)v66 + 16) = v84;
        uint64_t v86 = *(void *)(v67 + 144);
        uint64_t v87 = *(void *)(v67 + 152);
        *((void *)v66 + 17) = v85;
        *((void *)v66 + 18) = v86;
        uint64_t v88 = *(void *)(v67 + 160);
        uint64_t v89 = *(void *)(v67 + 168);
        *((void *)v66 + 19) = v87;
        *((void *)v66 + 20) = v88;
        *((void *)v66 + 21) = v89;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    uint64_t v90 = v16[20];
    uint64_t v91 = (char *)v18 + v90;
    uint64_t v92 = (uint64_t)v17 + v90;
    uint64_t v93 = *(void *)((char *)v17 + v90 + 8);
    if (v93 == 1)
    {
      long long v94 = *(_OWORD *)(v92 + 144);
      *((_OWORD *)v91 + 8) = *(_OWORD *)(v92 + 128);
      *((_OWORD *)v91 + 9) = v94;
      *((_OWORD *)v91 + 10) = *(_OWORD *)(v92 + 160);
      long long v95 = *(_OWORD *)(v92 + 80);
      *((_OWORD *)v91 + 4) = *(_OWORD *)(v92 + 64);
      *((_OWORD *)v91 + 5) = v95;
      long long v96 = *(_OWORD *)(v92 + 112);
      *((_OWORD *)v91 + 6) = *(_OWORD *)(v92 + 96);
      *((_OWORD *)v91 + 7) = v96;
      long long v97 = *(_OWORD *)(v92 + 16);
      *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
      *((_OWORD *)v91 + 1) = v97;
      long long v98 = *(_OWORD *)(v92 + 48);
      *((_OWORD *)v91 + 2) = *(_OWORD *)(v92 + 32);
      *((_OWORD *)v91 + 3) = v98;
      uint64_t v99 = v278;
    }
    else
    {
      *(void *)uint64_t v91 = *(void *)v92;
      *((void *)v91 + 1) = v93;
      char v100 = *(void **)(v92 + 16);
      *((void *)v91 + 2) = v100;
      *(_OWORD *)(v91 + 24) = *(_OWORD *)(v92 + 24);
      uint64_t v101 = *(void *)(v92 + 48);
      *((void *)v91 + 5) = *(void *)(v92 + 40);
      *((void *)v91 + 6) = v101;
      *((void *)v91 + 7) = *(void *)(v92 + 56);
      uint64_t v102 = (uint64_t *)(v92 + 64);
      unint64_t v103 = *(void *)(v92 + 72);
      swift_bridgeObjectRetain();
      id v104 = v100;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v103 >> 60 == 15)
      {
        *((_OWORD *)v91 + 4) = *(_OWORD *)v102;
      }
      else
      {
        uint64_t v105 = *v102;
        sub_1BDF840AC(*v102, v103);
        *((void *)v91 + 8) = v105;
        *((void *)v91 + 9) = v103;
      }
      v91[80] = *(unsigned char *)(v92 + 80);
      uint64_t v106 = *(void *)(v92 + 104);
      uint64_t v99 = v278;
      if (v106 == 1)
      {
        long long v107 = *(_OWORD *)(v92 + 136);
        *(_OWORD *)(v91 + 120) = *(_OWORD *)(v92 + 120);
        *(_OWORD *)(v91 + 136) = v107;
        *(_OWORD *)(v91 + 152) = *(_OWORD *)(v92 + 152);
        *((void *)v91 + 21) = *(void *)(v92 + 168);
        long long v108 = *(_OWORD *)(v92 + 104);
        *(_OWORD *)(v91 + 88) = *(_OWORD *)(v92 + 88);
        *(_OWORD *)(v91 + 104) = v108;
      }
      else
      {
        *(_OWORD *)(v91 + 88) = *(_OWORD *)(v92 + 88);
        uint64_t v109 = *(void *)(v92 + 112);
        uint64_t v110 = *(void *)(v92 + 120);
        *((void *)v91 + 13) = v106;
        *((void *)v91 + 14) = v109;
        uint64_t v111 = *(void *)(v92 + 128);
        uint64_t v112 = *(void *)(v92 + 136);
        *((void *)v91 + 15) = v110;
        *((void *)v91 + 16) = v111;
        uint64_t v113 = *(void *)(v92 + 144);
        uint64_t v114 = *(void *)(v92 + 152);
        *((void *)v91 + 17) = v112;
        *((void *)v91 + 18) = v113;
        uint64_t v115 = *(void *)(v92 + 160);
        uint64_t v116 = *(void *)(v92 + 168);
        *((void *)v91 + 19) = v114;
        *((void *)v91 + 20) = v115;
        *((void *)v91 + 21) = v116;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    uint64_t v117 = v16[21];
    uint64_t v118 = (char *)v18 + v117;
    uint64_t v119 = (uint64_t)v17 + v117;
    uint64_t v120 = *(void *)((char *)v17 + v117 + 8);
    if (v120 == 1)
    {
      long long v121 = *(_OWORD *)(v119 + 144);
      *((_OWORD *)v118 + 8) = *(_OWORD *)(v119 + 128);
      *((_OWORD *)v118 + 9) = v121;
      *((_OWORD *)v118 + 10) = *(_OWORD *)(v119 + 160);
      long long v122 = *(_OWORD *)(v119 + 80);
      *((_OWORD *)v118 + 4) = *(_OWORD *)(v119 + 64);
      *((_OWORD *)v118 + 5) = v122;
      long long v123 = *(_OWORD *)(v119 + 112);
      *((_OWORD *)v118 + 6) = *(_OWORD *)(v119 + 96);
      *((_OWORD *)v118 + 7) = v123;
      long long v124 = *(_OWORD *)(v119 + 16);
      *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
      *((_OWORD *)v118 + 1) = v124;
      long long v125 = *(_OWORD *)(v119 + 48);
      *((_OWORD *)v118 + 2) = *(_OWORD *)(v119 + 32);
      *((_OWORD *)v118 + 3) = v125;
    }
    else
    {
      *(void *)uint64_t v118 = *(void *)v119;
      *((void *)v118 + 1) = v120;
      uint64_t v126 = *(void **)(v119 + 16);
      *((void *)v118 + 2) = v126;
      *(_OWORD *)(v118 + 24) = *(_OWORD *)(v119 + 24);
      uint64_t v127 = *(void *)(v119 + 48);
      *((void *)v118 + 5) = *(void *)(v119 + 40);
      *((void *)v118 + 6) = v127;
      *((void *)v118 + 7) = *(void *)(v119 + 56);
      uint64_t v128 = (uint64_t *)(v119 + 64);
      unint64_t v129 = *(void *)(v119 + 72);
      swift_bridgeObjectRetain();
      id v130 = v126;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v129 >> 60 == 15)
      {
        *((_OWORD *)v118 + 4) = *(_OWORD *)v128;
      }
      else
      {
        uint64_t v131 = *v128;
        sub_1BDF840AC(*v128, v129);
        *((void *)v118 + 8) = v131;
        *((void *)v118 + 9) = v129;
      }
      v118[80] = *(unsigned char *)(v119 + 80);
      uint64_t v132 = *(void *)(v119 + 104);
      uint64_t v99 = v278;
      if (v132 == 1)
      {
        long long v133 = *(_OWORD *)(v119 + 136);
        *(_OWORD *)(v118 + 120) = *(_OWORD *)(v119 + 120);
        *(_OWORD *)(v118 + 136) = v133;
        *(_OWORD *)(v118 + 152) = *(_OWORD *)(v119 + 152);
        *((void *)v118 + 21) = *(void *)(v119 + 168);
        long long v134 = *(_OWORD *)(v119 + 104);
        *(_OWORD *)(v118 + 88) = *(_OWORD *)(v119 + 88);
        *(_OWORD *)(v118 + 104) = v134;
      }
      else
      {
        *(_OWORD *)(v118 + 88) = *(_OWORD *)(v119 + 88);
        uint64_t v135 = *(void *)(v119 + 112);
        uint64_t v136 = *(void *)(v119 + 120);
        *((void *)v118 + 13) = v132;
        *((void *)v118 + 14) = v135;
        uint64_t v137 = *(void *)(v119 + 128);
        uint64_t v138 = *(void *)(v119 + 136);
        *((void *)v118 + 15) = v136;
        *((void *)v118 + 16) = v137;
        uint64_t v139 = *(void *)(v119 + 144);
        uint64_t v140 = *(void *)(v119 + 152);
        *((void *)v118 + 17) = v138;
        *((void *)v118 + 18) = v139;
        uint64_t v141 = *(void *)(v119 + 160);
        uint64_t v142 = *(void *)(v119 + 168);
        *((void *)v118 + 19) = v140;
        *((void *)v118 + 20) = v141;
        *((void *)v118 + 21) = v142;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    uint64_t v143 = v16[23];
    *(void *)((char *)v18 + v16[22]) = *(void *)((char *)v17 + v16[22]);
    *(void *)((char *)v18 + v143) = *(void *)((char *)v17 + v143);
    uint64_t v144 = v16[24];
    char v145 = (void *)((char *)v18 + v144);
    uint64_t v146 = (void *)((char *)v17 + v144);
    uint64_t v147 = type metadata accessor for EventCalendarModelObject();
    uint64_t v148 = *(void *)(v147 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v148 + 48))(v146, 1, v147))
    {
      uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
      memcpy(v145, v146, *(void *)(*(void *)(v149 - 8) + 64));
    }
    else
    {
      uint64_t v263 = v148;
      uint64_t v150 = v146[1];
      *char v145 = *v146;
      v145[1] = v150;
      *((_OWORD *)v145 + 1) = *((_OWORD *)v146 + 1);
      uint64_t v151 = v146[5];
      v145[4] = v146[4];
      v145[5] = v151;
      uint64_t v152 = v146[7];
      v145[6] = v146[6];
      v145[7] = v152;
      *((_OWORD *)v145 + 4) = *((_OWORD *)v146 + 4);
      *(_OWORD *)((char *)v145 + 73) = *(_OWORD *)((char *)v146 + 73);
      *((unsigned char *)v145 + 89) = *((unsigned char *)v146 + 89);
      v145[12] = v146[12];
      uint64_t v153 = v146[14];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v153)
      {
        v145[13] = v146[13];
        v145[14] = v153;
        uint64_t v154 = v146[16];
        v145[15] = v146[15];
        v145[16] = v154;
        *(_OWORD *)(v145 + 17) = *(_OWORD *)(v146 + 17);
        v145[19] = v146[19];
        *((_DWORD *)v145 + 40) = *((_DWORD *)v146 + 40);
        *((unsigned char *)v145 + 164) = *((unsigned char *)v146 + 164);
        uint64_t v155 = v146[22];
        v145[21] = v146[21];
        v145[22] = v155;
        v145[23] = v146[23];
        *((unsigned char *)v145 + 192) = *((unsigned char *)v146 + 192);
        v145[25] = v146[25];
        *((unsigned char *)v145 + 208) = *((unsigned char *)v146 + 208);
        *(_OWORD *)(v145 + 27) = *(_OWORD *)(v146 + 27);
        *(void *)((char *)v145 + 231) = *(void *)((char *)v146 + 231);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v156 = *(_OWORD *)(v146 + 27);
        *(_OWORD *)(v145 + 25) = *(_OWORD *)(v146 + 25);
        *(_OWORD *)(v145 + 27) = v156;
        *(void *)((char *)v145 + 231) = *(void *)((char *)v146 + 231);
        long long v157 = *(_OWORD *)(v146 + 19);
        *(_OWORD *)(v145 + 17) = *(_OWORD *)(v146 + 17);
        *(_OWORD *)(v145 + 19) = v157;
        long long v158 = *(_OWORD *)(v146 + 23);
        *(_OWORD *)(v145 + 21) = *(_OWORD *)(v146 + 21);
        *(_OWORD *)(v145 + 23) = v158;
        long long v159 = *(_OWORD *)(v146 + 15);
        *(_OWORD *)(v145 + 13) = *(_OWORD *)(v146 + 13);
        *(_OWORD *)(v145 + 15) = v159;
      }
      *(_DWORD *)((char *)v145 + 239) = *(_DWORD *)((char *)v146 + 239);
      *(_WORD *)((char *)v145 + 243) = *(_WORD *)((char *)v146 + 243);
      uint64_t v160 = v146[32];
      v145[31] = v146[31];
      v145[32] = v160;
      v145[33] = v146[33];
      __srcb = (int *)v147;
      uint64_t v161 = *(int *)(v147 + 84);
      uint64_t v259 = (char *)v145 + v161;
      uint64_t v261 = (char *)v146 + v161;
      uint64_t v162 = sub_1BE06EE10();
      uint64_t v163 = *(void *)(v162 - 8);
      uint64_t v260 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v260(v261, 1, v162))
      {
        uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
        memcpy(v259, v261, *(void *)(*(void *)(v164 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v163 + 16))(v259, v261, v162);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v259, 0, 1, v162);
      }
      uint64_t v99 = v278;
      uint64_t v165 = __srcb[22];
      uint64_t v166 = (void *)((char *)v145 + v165);
      char v167 = (void *)((char *)v146 + v165);
      uint64_t v168 = v167[1];
      *uint64_t v166 = *v167;
      v166[1] = v168;
      uint64_t v169 = __srcb[23];
      uint64_t v170 = (void *)((char *)v145 + v169);
      uint64_t v171 = (void *)((char *)v146 + v169);
      uint64_t v172 = v171[1];
      *uint64_t v170 = *v171;
      v170[1] = v172;
      *((unsigned char *)v145 + __srcb[24]) = *((unsigned char *)v146 + __srcb[24]);
      BOOL v173 = *(void (**)(void *, void, uint64_t, int *))(v263 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v173(v145, 0, 1, __srcb);
    }
    uint64_t v174 = v16[26];
    *(void *)((char *)v18 + v16[25]) = *(void *)((char *)v17 + v16[25]);
    *(void *)((char *)v18 + v174) = *(void *)((char *)v17 + v174);
    uint64_t v175 = v16[28];
    *(void *)((char *)v18 + v16[27]) = *(void *)((char *)v17 + v16[27]);
    uint64_t v176 = (void *)((char *)v18 + v175);
    BOOL v177 = (void *)((char *)v17 + v175);
    uint64_t v178 = v177[1];
    *uint64_t v176 = *v177;
    v176[1] = v178;
    uint64_t v179 = v16[30];
    *(void *)((char *)v18 + v16[29]) = *(void *)((char *)v17 + v16[29]);
    uint64_t v180 = (char *)v18 + v179;
    uint64_t v181 = (char *)v17 + v179;
    uint64_t v182 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v182(v181, 1, v275))
    {
      uint64_t v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
      memcpy(v180, v181, *(void *)(*(void *)(v183 - 8) + 64));
    }
    else
    {
      v269(v180, v181, v275);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v180, 0, 1, v275);
    }
    uint64_t v184 = v16[32];
    *(void *)((char *)v18 + v16[31]) = *(void *)((char *)v17 + v16[31]);
    uint64_t v185 = (void *)((char *)v18 + v184);
    char v186 = (void *)((char *)v17 + v184);
    uint64_t v187 = (int *)type metadata accessor for EventOrganizerModelObject(0);
    uint64_t v188 = *((void *)v187 - 1);
    uint64_t v189 = *(unsigned int (**)(void *, uint64_t, int *))(v188 + 48);
    swift_bridgeObjectRetain();
    if (v189(v186, 1, v187))
    {
      uint64_t v190 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
      memcpy(v185, v186, *(void *)(*(void *)(v190 - 8) + 64));
    }
    else
    {
      uint64_t v272 = v188;
      uint64_t v191 = v186[1];
      *uint64_t v185 = *v186;
      v185[1] = v191;
      uint64_t v192 = v186[3];
      v185[2] = v186[2];
      v185[3] = v192;
      uint64_t v193 = v186[5];
      v185[4] = v186[4];
      v185[5] = v193;
      uint64_t v194 = v187[7];
      uint64_t v270 = (char *)v185 + v194;
      unint64_t v279 = (char *)v186 + v194;
      uint64_t v195 = sub_1BE06EE10();
      __srcc = *(void **)(v195 - 8);
      uint64_t v276 = (unsigned int (*)(char *, uint64_t, uint64_t))__srcc[6];
      uint64_t v196 = v195;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v276(v279, 1, v196))
      {
        uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
        memcpy(v270, v279, *(void *)(*(void *)(v197 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))__srcc[2])(v270, v279, v196);
        ((void (*)(char *, void, uint64_t, uint64_t))__srcc[7])(v270, 0, 1, v196);
      }
      uint64_t v198 = v187[8];
      uint64_t v199 = (void *)((char *)v185 + v198);
      uint64_t v200 = (void *)((char *)v186 + v198);
      uint64_t v201 = v200[1];
      *uint64_t v199 = *v200;
      v199[1] = v201;
      *((unsigned char *)v185 + v187[9]) = *((unsigned char *)v186 + v187[9]);
      uint64_t v202 = v187[10];
      uint64_t v203 = (void *)((char *)v185 + v202);
      uint64_t v204 = (void *)((char *)v186 + v202);
      uint64_t v205 = v204[1];
      *uint64_t v203 = *v204;
      v203[1] = v205;
      *(void *)((char *)v185 + v187[11]) = *(void *)((char *)v186 + v187[11]);
      char v206 = *(void (**)(void *, void, uint64_t, int *))(v272 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v206(v185, 0, 1, v187);
    }
    uint64_t v207 = v16[34];
    *(void *)((char *)v18 + v16[33]) = *(void *)((char *)v17 + v16[33]);
    uint64_t v208 = (void *)((char *)v18 + v207);
    uint64_t v209 = (void *)((char *)v17 + v207);
    uint64_t v210 = (int *)type metadata accessor for EventAttendeeModelObject(0);
    uint64_t v211 = *((void *)v210 - 1);
    uint64_t v212 = *(unsigned int (**)(void *, uint64_t, int *))(v211 + 48);
    swift_bridgeObjectRetain();
    if (v212(v209, 1, v210))
    {
      uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E20);
      memcpy(v208, v209, *(void *)(*(void *)(v213 - 8) + 64));
    }
    else
    {
      uint64_t v273 = v211;
      uint64_t v214 = v209[1];
      void *v208 = *v209;
      v208[1] = v214;
      uint64_t v215 = v209[3];
      v208[2] = v209[2];
      v208[3] = v215;
      uint64_t v216 = v209[5];
      v208[4] = v209[4];
      v208[5] = v216;
      uint64_t v217 = v210[7];
      uint64_t v271 = (char *)v208 + v217;
      uint64_t v280 = (char *)v209 + v217;
      uint64_t v218 = sub_1BE06EE10();
      __srcd = *(void **)(v218 - 8);
      uint64_t v277 = (unsigned int (*)(char *, uint64_t, uint64_t))__srcd[6];
      uint64_t v219 = v218;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v277(v280, 1, v219))
      {
        uint64_t v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
        memcpy(v271, v280, *(void *)(*(void *)(v220 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))__srcd[2])(v271, v280, v219);
        ((void (*)(char *, void, uint64_t, uint64_t))__srcd[7])(v271, 0, 1, v219);
      }
      uint64_t v221 = v210[8];
      uint64_t v222 = (void *)((char *)v208 + v221);
      uint64_t v223 = (void *)((char *)v209 + v221);
      uint64_t v224 = v223[1];
      *uint64_t v222 = *v223;
      v222[1] = v224;
      *((unsigned char *)v208 + v210[9]) = *((unsigned char *)v209 + v210[9]);
      uint64_t v225 = v210[10];
      uint64_t v226 = (void *)((char *)v208 + v225);
      uint64_t v227 = (void *)((char *)v209 + v225);
      uint64_t v228 = v227[1];
      *uint64_t v226 = *v227;
      v226[1] = v228;
      *(void *)((char *)v208 + v210[11]) = *(void *)((char *)v209 + v210[11]);
      *(void *)((char *)v208 + v210[12]) = *(void *)((char *)v209 + v210[12]);
      *(void *)((char *)v208 + v210[13]) = *(void *)((char *)v209 + v210[13]);
      uint64_t v229 = v210[14];
      uint64_t v230 = (void *)((char *)v208 + v229);
      v231 = (void *)((char *)v209 + v229);
      uint64_t v232 = v231[1];
      *uint64_t v230 = *v231;
      v230[1] = v232;
      char v233 = *(void (**)(void *, void, uint64_t, int *))(v273 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v233(v208, 0, 1, v210);
    }
    uint64_t v234 = v16[35];
    uint64_t v235 = (char *)v18 + v234;
    uint64_t v236 = (char *)v17 + v234;
    uint64_t v237 = sub_1BE06EE10();
    uint64_t v238 = *(void *)(v237 - 8);
    uint64_t v239 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v238 + 48);
    if (v239(v236, 1, v237))
    {
      uint64_t v240 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(v235, v236, *(void *)(*(void *)(v240 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v238 + 16))(v235, v236, v237);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v238 + 56))(v235, 0, 1, v237);
    }
    uint64_t v241 = v16[37];
    *((unsigned char *)v18 + v16[36]) = *((unsigned char *)v17 + v16[36]);
    *((unsigned char *)v18 + v241) = *((unsigned char *)v17 + v241);
    uint64_t v242 = v16[38];
    uint64_t v243 = (char *)v18 + v242;
    char v244 = (char *)v17 + v242;
    if (v239((char *)v17 + v242, 1, v237))
    {
      uint64_t v245 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v238 + 16))(v243, v244, v237);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v238 + 56))(v243, 0, 1, v237);
    }
    uint64_t v246 = v16[39];
    uint64_t v247 = (char *)v18 + v246;
    uint64_t v248 = (char *)v17 + v246;
    uint64_t v249 = *(void *)((char *)v17 + v246 + 16);
    if (v249 == 1)
    {
      long long v250 = *((_OWORD *)v248 + 1);
      *(_OWORD *)uint64_t v247 = *(_OWORD *)v248;
      *((_OWORD *)v247 + 1) = v250;
      *((_OWORD *)v247 + 2) = *((_OWORD *)v248 + 2);
      *((void *)v247 + 6) = *((void *)v248 + 6);
    }
    else
    {
      *uint64_t v247 = *v248;
      *((void *)v247 + 1) = *((void *)v248 + 1);
      *((void *)v247 + 2) = v249;
      uint64_t v251 = *((void *)v248 + 4);
      swift_bridgeObjectRetain();
      if (v251)
      {
        *((void *)v247 + 3) = *((void *)v248 + 3);
        *((void *)v247 + 4) = v251;
        uint64_t v252 = *((void *)v248 + 5);
        unint64_t v253 = *((void *)v248 + 6);
        swift_bridgeObjectRetain();
        sub_1BDF840AC(v252, v253);
        *((void *)v247 + 5) = v252;
        *((void *)v247 + 6) = v253;
      }
      else
      {
        long long v254 = *(_OWORD *)(v248 + 40);
        *(_OWORD *)(v247 + 24) = *(_OWORD *)(v248 + 24);
        *(_OWORD *)(v247 + 40) = v254;
      }
    }
    uint64_t v255 = v16[41];
    *((unsigned char *)v18 + v16[40]) = *((unsigned char *)v17 + v16[40]);
    *((unsigned char *)v18 + v255) = *((unsigned char *)v17 + v255);
    *((unsigned char *)v18 + v16[42]) = *((unsigned char *)v17 + v16[42]);
  }
  return v18;
}

uint64_t destroy for EventModelObject(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_1BE06EEE0();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
  v6(v4, v5);
  uint64_t v54 = v6;
  v6(a1 + a2[8], v5);
  uint64_t v7 = a1 + a2[11];
  uint64_t v8 = sub_1BE06F140();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v10(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v11 = a1 + a2[12];
  if (!v10(v11, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v12 = a1 + a2[14];
  if (!v10(v12, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
  }
  uint64_t v13 = a1 + a2[15];
  uint64_t v14 = type metadata accessor for EventVirtualConferenceModelObject(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v53 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v13 + *(int *)(v14 + 40);
    uint64_t v16 = sub_1BE06EE10();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    if (!v18(v15, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
    uint64_t v19 = v13 + *(int *)(v14 + 44);
    unsigned int v20 = v18(v19, 1, v16);
    uint64_t v5 = v53;
    if (!v20) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v16);
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = a1 + a2[19];
  if (*(void *)(v21 + 8) != 1)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v22 = *(void *)(v21 + 72);
    if (v22 >> 60 != 15) {
      sub_1BDF841A4(*(void *)(v21 + 64), v22);
    }
    if (*(void *)(v21 + 104) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v23 = a1 + a2[20];
  if (*(void *)(v23 + 8) != 1)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v24 = *(void *)(v23 + 72);
    if (v24 >> 60 != 15) {
      sub_1BDF841A4(*(void *)(v23 + 64), v24);
    }
    if (*(void *)(v23 + 104) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v25 = a1 + a2[21];
  if (*(void *)(v25 + 8) != 1)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v26 = *(void *)(v25 + 72);
    if (v26 >> 60 != 15) {
      sub_1BDF841A4(*(void *)(v25 + 64), v26);
    }
    if (*(void *)(v25 + 104) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v27 = a1 + a2[24];
  uint64_t v28 = type metadata accessor for EventCalendarModelObject();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v27, 1, v28))
  {
    uint64_t v29 = v5;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v27 + 112))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = v27 + *(int *)(v28 + 84);
    uint64_t v31 = sub_1BE06EE10();
    uint64_t v32 = *(void *)(v31 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = v29;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v33 = a1 + a2[30];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v33, 1, v5)) {
    v54(v33, v5);
  }
  swift_bridgeObjectRelease();
  uint64_t v34 = a1 + a2[32];
  uint64_t v35 = type metadata accessor for EventOrganizerModelObject(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v34 + *(int *)(v35 + 28);
    uint64_t v37 = sub_1BE06EE10();
    uint64_t v38 = *(void *)(v37 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v39 = a1 + a2[34];
  uint64_t v40 = type metadata accessor for EventAttendeeModelObject(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v39, 1, v40))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = v39 + *(int *)(v40 + 28);
    uint64_t v42 = sub_1BE06EE10();
    uint64_t v43 = *(void *)(v42 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42)) {
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v44 = a1 + a2[35];
  uint64_t v45 = sub_1BE06EE10();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
  if (!v47(v44, 1, v45)) {
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v44, v45);
  }
  uint64_t v48 = a1 + a2[38];
  if (!v47(v48, 1, v45)) {
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v45);
  }
  uint64_t v49 = (void *)(a1 + a2[39]);
  uint64_t result = v49[2];
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t result = v49[4];
    if (result)
    {
      swift_bridgeObjectRelease();
      uint64_t v51 = v49[5];
      unint64_t v52 = v49[6];
      return sub_1BDF841A4(v51, v52);
    }
  }
  return result;
}

char *initializeWithCopy for EventModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  uint64_t v8 = *((void *)a2 + 5);
  uint64_t v9 = a3[7];
  uint64_t v272 = &a1[v9];
  uint64_t v10 = &a2[v9];
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v8;
  uint64_t v11 = sub_1BE06EEE0();
  uint64_t v269 = *(void *)(v11 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v269 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v272, v10, v11);
  uint64_t v266 = (void *)v11;
  uint64_t v261 = (void (*)(char *, char *, void *))v12;
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  uint64_t v13 = a3;
  uint64_t v14 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v14] = a2[v14];
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_1BE06F140();
  uint64_t v19 = *(void *)(v18 - 8);
  unsigned int v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v17, 1, v18))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v22 = a3[12];
  uint64_t v23 = &a1[v22];
  unint64_t v24 = &a2[v22];
  if (v20(&a2[v22], 1, v18))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v23, v24, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v23, 0, 1, v18);
  }
  uint64_t v26 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  if (v20(&a2[v26], 1, v18))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v27, v28, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v27, 0, 1, v18);
  }
  uint64_t v30 = a3[15];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = type metadata accessor for EventVirtualConferenceModelObject(0);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v273 = a3;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E18);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    uint64_t v36 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v36;
    uint64_t v37 = *((void *)v32 + 3);
    *((void *)v31 + 2) = *((void *)v32 + 2);
    *((void *)v31 + 3) = v37;
    uint64_t v38 = *((void *)v32 + 5);
    *((void *)v31 + 4) = *((void *)v32 + 4);
    *((void *)v31 + 5) = v38;
    *((void *)v31 + 6) = *((void *)v32 + 6);
    v31[56] = v32[56];
    *((void *)v31 + 8) = *((void *)v32 + 8);
    uint64_t v39 = *(int *)(v33 + 40);
    __dst = &v31[v39];
    unint64_t v253 = &v32[v39];
    uint64_t v40 = sub_1BE06EE10();
    uint64_t v41 = *(void *)(v40 - 8);
    uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    uint64_t v43 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v42(v253, 1, v43))
    {
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(__dst, v253, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(__dst, v253, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(__dst, 0, 1, v43);
    }
    uint64_t v45 = *(int *)(v33 + 44);
    uint64_t v46 = &v31[v45];
    uint64_t v47 = &v32[v45];
    unsigned int v48 = v42(v47, 1, v43);
    uint64_t v13 = v273;
    if (v48)
    {
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v46, v47, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v46, 0, 1, v43);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  uint64_t v50 = v13[16];
  uint64_t v51 = v13[17];
  unint64_t v52 = &a1[v50];
  uint64_t v53 = &a2[v50];
  uint64_t v54 = *((void *)v53 + 1);
  *(void *)unint64_t v52 = *(void *)v53;
  *((void *)v52 + 1) = v54;
  uint64_t v55 = &a1[v51];
  uint64_t v56 = (uint64_t *)&a2[v51];
  uint64_t v57 = *v56;
  uint64_t v58 = v56[1];
  uint64_t v59 = v13[18];
  uint64_t v60 = v13[19];
  uint64_t v61 = *(void *)&a2[v59];
  *(void *)uint64_t v55 = v57;
  *((void *)v55 + 1) = v58;
  *(void *)&a1[v59] = v61;
  uint64_t v62 = &a1[v60];
  uint64_t v63 = &a2[v60];
  uint64_t v64 = *(void *)&a2[v60 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v64 == 1)
  {
    long long v65 = *((_OWORD *)v63 + 9);
    *((_OWORD *)v62 + 8) = *((_OWORD *)v63 + 8);
    *((_OWORD *)v62 + 9) = v65;
    *((_OWORD *)v62 + 10) = *((_OWORD *)v63 + 10);
    long long v66 = *((_OWORD *)v63 + 5);
    *((_OWORD *)v62 + 4) = *((_OWORD *)v63 + 4);
    *((_OWORD *)v62 + 5) = v66;
    long long v67 = *((_OWORD *)v63 + 7);
    *((_OWORD *)v62 + 6) = *((_OWORD *)v63 + 6);
    *((_OWORD *)v62 + 7) = v67;
    long long v68 = *((_OWORD *)v63 + 1);
    *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
    *((_OWORD *)v62 + 1) = v68;
    long long v69 = *((_OWORD *)v63 + 3);
    *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
    *((_OWORD *)v62 + 3) = v69;
  }
  else
  {
    *(void *)uint64_t v62 = *(void *)v63;
    *((void *)v62 + 1) = v64;
    long long v70 = (void *)*((void *)v63 + 2);
    *((void *)v62 + 2) = v70;
    *(_OWORD *)(v62 + 24) = *(_OWORD *)(v63 + 24);
    uint64_t v71 = *((void *)v63 + 6);
    *((void *)v62 + 5) = *((void *)v63 + 5);
    *((void *)v62 + 6) = v71;
    *((void *)v62 + 7) = *((void *)v63 + 7);
    long long v72 = (uint64_t *)(v63 + 64);
    unint64_t v73 = *((void *)v63 + 9);
    swift_bridgeObjectRetain();
    id v74 = v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v73 >> 60 == 15)
    {
      *((_OWORD *)v62 + 4) = *(_OWORD *)v72;
    }
    else
    {
      uint64_t v75 = *v72;
      sub_1BDF840AC(*v72, v73);
      *((void *)v62 + 8) = v75;
      *((void *)v62 + 9) = v73;
    }
    v62[80] = v63[80];
    uint64_t v76 = *((void *)v63 + 13);
    uint64_t v13 = v273;
    if (v76 == 1)
    {
      long long v77 = *(_OWORD *)(v63 + 136);
      *(_OWORD *)(v62 + 120) = *(_OWORD *)(v63 + 120);
      *(_OWORD *)(v62 + 136) = v77;
      *(_OWORD *)(v62 + 152) = *(_OWORD *)(v63 + 152);
      *((void *)v62 + 21) = *((void *)v63 + 21);
      long long v78 = *(_OWORD *)(v63 + 104);
      *(_OWORD *)(v62 + 88) = *(_OWORD *)(v63 + 88);
      *(_OWORD *)(v62 + 104) = v78;
    }
    else
    {
      *(_OWORD *)(v62 + 88) = *(_OWORD *)(v63 + 88);
      uint64_t v79 = *((void *)v63 + 14);
      uint64_t v80 = *((void *)v63 + 15);
      *((void *)v62 + 13) = v76;
      *((void *)v62 + 14) = v79;
      uint64_t v81 = *((void *)v63 + 16);
      uint64_t v82 = *((void *)v63 + 17);
      *((void *)v62 + 15) = v80;
      *((void *)v62 + 16) = v81;
      uint64_t v83 = *((void *)v63 + 18);
      uint64_t v84 = *((void *)v63 + 19);
      *((void *)v62 + 17) = v82;
      *((void *)v62 + 18) = v83;
      uint64_t v85 = *((void *)v63 + 20);
      uint64_t v86 = *((void *)v63 + 21);
      *((void *)v62 + 19) = v84;
      *((void *)v62 + 20) = v85;
      *((void *)v62 + 21) = v86;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v87 = v13[20];
  uint64_t v88 = &a1[v87];
  uint64_t v89 = &a2[v87];
  uint64_t v90 = *(void *)&a2[v87 + 8];
  if (v90 == 1)
  {
    long long v91 = *((_OWORD *)v89 + 9);
    *((_OWORD *)v88 + 8) = *((_OWORD *)v89 + 8);
    *((_OWORD *)v88 + 9) = v91;
    *((_OWORD *)v88 + 10) = *((_OWORD *)v89 + 10);
    long long v92 = *((_OWORD *)v89 + 5);
    *((_OWORD *)v88 + 4) = *((_OWORD *)v89 + 4);
    *((_OWORD *)v88 + 5) = v92;
    long long v93 = *((_OWORD *)v89 + 7);
    *((_OWORD *)v88 + 6) = *((_OWORD *)v89 + 6);
    *((_OWORD *)v88 + 7) = v93;
    long long v94 = *((_OWORD *)v89 + 1);
    *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
    *((_OWORD *)v88 + 1) = v94;
    long long v95 = *((_OWORD *)v89 + 3);
    *((_OWORD *)v88 + 2) = *((_OWORD *)v89 + 2);
    *((_OWORD *)v88 + 3) = v95;
  }
  else
  {
    *(void *)uint64_t v88 = *(void *)v89;
    *((void *)v88 + 1) = v90;
    long long v96 = (void *)*((void *)v89 + 2);
    *((void *)v88 + 2) = v96;
    *(_OWORD *)(v88 + 24) = *(_OWORD *)(v89 + 24);
    uint64_t v97 = *((void *)v89 + 6);
    *((void *)v88 + 5) = *((void *)v89 + 5);
    *((void *)v88 + 6) = v97;
    *((void *)v88 + 7) = *((void *)v89 + 7);
    long long v98 = (uint64_t *)(v89 + 64);
    unint64_t v99 = *((void *)v89 + 9);
    swift_bridgeObjectRetain();
    id v100 = v96;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v99 >> 60 == 15)
    {
      *((_OWORD *)v88 + 4) = *(_OWORD *)v98;
    }
    else
    {
      uint64_t v101 = *v98;
      sub_1BDF840AC(*v98, v99);
      *((void *)v88 + 8) = v101;
      *((void *)v88 + 9) = v99;
    }
    v88[80] = v89[80];
    uint64_t v102 = *((void *)v89 + 13);
    if (v102 == 1)
    {
      long long v103 = *(_OWORD *)(v89 + 136);
      *(_OWORD *)(v88 + 120) = *(_OWORD *)(v89 + 120);
      *(_OWORD *)(v88 + 136) = v103;
      *(_OWORD *)(v88 + 152) = *(_OWORD *)(v89 + 152);
      *((void *)v88 + 21) = *((void *)v89 + 21);
      long long v104 = *(_OWORD *)(v89 + 104);
      *(_OWORD *)(v88 + 88) = *(_OWORD *)(v89 + 88);
      *(_OWORD *)(v88 + 104) = v104;
    }
    else
    {
      *(_OWORD *)(v88 + 88) = *(_OWORD *)(v89 + 88);
      uint64_t v105 = *((void *)v89 + 14);
      uint64_t v106 = *((void *)v89 + 15);
      *((void *)v88 + 13) = v102;
      *((void *)v88 + 14) = v105;
      uint64_t v107 = *((void *)v89 + 16);
      uint64_t v108 = *((void *)v89 + 17);
      *((void *)v88 + 15) = v106;
      *((void *)v88 + 16) = v107;
      uint64_t v109 = *((void *)v89 + 18);
      uint64_t v110 = *((void *)v89 + 19);
      *((void *)v88 + 17) = v108;
      *((void *)v88 + 18) = v109;
      uint64_t v111 = *((void *)v89 + 20);
      uint64_t v112 = *((void *)v89 + 21);
      *((void *)v88 + 19) = v110;
      *((void *)v88 + 20) = v111;
      *((void *)v88 + 21) = v112;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v113 = v13[21];
  uint64_t v114 = &a1[v113];
  uint64_t v115 = &a2[v113];
  uint64_t v116 = *(void *)&a2[v113 + 8];
  if (v116 == 1)
  {
    long long v117 = *((_OWORD *)v115 + 9);
    *((_OWORD *)v114 + 8) = *((_OWORD *)v115 + 8);
    *((_OWORD *)v114 + 9) = v117;
    *((_OWORD *)v114 + 10) = *((_OWORD *)v115 + 10);
    long long v118 = *((_OWORD *)v115 + 5);
    *((_OWORD *)v114 + 4) = *((_OWORD *)v115 + 4);
    *((_OWORD *)v114 + 5) = v118;
    long long v119 = *((_OWORD *)v115 + 7);
    *((_OWORD *)v114 + 6) = *((_OWORD *)v115 + 6);
    *((_OWORD *)v114 + 7) = v119;
    long long v120 = *((_OWORD *)v115 + 1);
    *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
    *((_OWORD *)v114 + 1) = v120;
    long long v121 = *((_OWORD *)v115 + 3);
    *((_OWORD *)v114 + 2) = *((_OWORD *)v115 + 2);
    *((_OWORD *)v114 + 3) = v121;
  }
  else
  {
    *(void *)uint64_t v114 = *(void *)v115;
    *((void *)v114 + 1) = v116;
    long long v122 = (void *)*((void *)v115 + 2);
    *((void *)v114 + 2) = v122;
    *(_OWORD *)(v114 + 24) = *(_OWORD *)(v115 + 24);
    uint64_t v123 = *((void *)v115 + 6);
    *((void *)v114 + 5) = *((void *)v115 + 5);
    *((void *)v114 + 6) = v123;
    *((void *)v114 + 7) = *((void *)v115 + 7);
    long long v124 = (uint64_t *)(v115 + 64);
    unint64_t v125 = *((void *)v115 + 9);
    swift_bridgeObjectRetain();
    id v126 = v122;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v125 >> 60 == 15)
    {
      *((_OWORD *)v114 + 4) = *(_OWORD *)v124;
    }
    else
    {
      uint64_t v127 = *v124;
      sub_1BDF840AC(*v124, v125);
      *((void *)v114 + 8) = v127;
      *((void *)v114 + 9) = v125;
    }
    v114[80] = v115[80];
    uint64_t v128 = *((void *)v115 + 13);
    if (v128 == 1)
    {
      long long v129 = *(_OWORD *)(v115 + 136);
      *(_OWORD *)(v114 + 120) = *(_OWORD *)(v115 + 120);
      *(_OWORD *)(v114 + 136) = v129;
      *(_OWORD *)(v114 + 152) = *(_OWORD *)(v115 + 152);
      *((void *)v114 + 21) = *((void *)v115 + 21);
      long long v130 = *(_OWORD *)(v115 + 104);
      *(_OWORD *)(v114 + 88) = *(_OWORD *)(v115 + 88);
      *(_OWORD *)(v114 + 104) = v130;
    }
    else
    {
      *(_OWORD *)(v114 + 88) = *(_OWORD *)(v115 + 88);
      uint64_t v131 = *((void *)v115 + 14);
      uint64_t v132 = *((void *)v115 + 15);
      *((void *)v114 + 13) = v128;
      *((void *)v114 + 14) = v131;
      uint64_t v133 = *((void *)v115 + 16);
      uint64_t v134 = *((void *)v115 + 17);
      *((void *)v114 + 15) = v132;
      *((void *)v114 + 16) = v133;
      uint64_t v135 = *((void *)v115 + 18);
      uint64_t v136 = *((void *)v115 + 19);
      *((void *)v114 + 17) = v134;
      *((void *)v114 + 18) = v135;
      uint64_t v137 = *((void *)v115 + 20);
      uint64_t v138 = *((void *)v115 + 21);
      *((void *)v114 + 19) = v136;
      *((void *)v114 + 20) = v137;
      *((void *)v114 + 21) = v138;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v139 = v13[23];
  *(void *)&a1[v13[22]] = *(void *)&a2[v13[22]];
  *(void *)&a1[v139] = *(void *)&a2[v139];
  uint64_t v140 = v13[24];
  uint64_t v141 = &a1[v140];
  uint64_t v142 = &a2[v140];
  uint64_t v143 = (int *)type metadata accessor for EventCalendarModelObject();
  uint64_t v144 = (unsigned int (**)(void *, uint64_t, int *))*((void *)v143 - 1);
  uint64_t v145 = v269;
  if (((unsigned int (**)(char *, uint64_t, int *))v144)[6](v142, 1, v143))
  {
    uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
    memcpy(v141, v142, *(void *)(*(void *)(v146 - 8) + 64));
  }
  else
  {
    __dsta = v144;
    uint64_t v147 = *((void *)v142 + 1);
    *(void *)uint64_t v141 = *(void *)v142;
    *((void *)v141 + 1) = v147;
    *((_OWORD *)v141 + 1) = *((_OWORD *)v142 + 1);
    uint64_t v148 = *((void *)v142 + 5);
    *((void *)v141 + 4) = *((void *)v142 + 4);
    *((void *)v141 + 5) = v148;
    uint64_t v149 = *((void *)v142 + 7);
    *((void *)v141 + 6) = *((void *)v142 + 6);
    *((void *)v141 + 7) = v149;
    *((_OWORD *)v141 + 4) = *((_OWORD *)v142 + 4);
    *(_OWORD *)(v141 + 73) = *(_OWORD *)(v142 + 73);
    v141[89] = v142[89];
    *((void *)v141 + 12) = *((void *)v142 + 12);
    uint64_t v150 = *((void *)v142 + 14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v150)
    {
      *((void *)v141 + 13) = *((void *)v142 + 13);
      *((void *)v141 + 14) = v150;
      uint64_t v151 = *((void *)v142 + 16);
      *((void *)v141 + 15) = *((void *)v142 + 15);
      *((void *)v141 + 16) = v151;
      *(_OWORD *)(v141 + 136) = *(_OWORD *)(v142 + 136);
      *((void *)v141 + 19) = *((void *)v142 + 19);
      *((_DWORD *)v141 + 40) = *((_DWORD *)v142 + 40);
      v141[164] = v142[164];
      uint64_t v152 = *((void *)v142 + 22);
      *((void *)v141 + 21) = *((void *)v142 + 21);
      *((void *)v141 + 22) = v152;
      *((void *)v141 + 23) = *((void *)v142 + 23);
      v141[192] = v142[192];
      *((void *)v141 + 25) = *((void *)v142 + 25);
      v141[208] = v142[208];
      *(_OWORD *)(v141 + 216) = *(_OWORD *)(v142 + 216);
      *(void *)(v141 + 231) = *(void *)(v142 + 231);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v153 = *(_OWORD *)(v142 + 216);
      *(_OWORD *)(v141 + 200) = *(_OWORD *)(v142 + 200);
      *(_OWORD *)(v141 + 216) = v153;
      *(void *)(v141 + 231) = *(void *)(v142 + 231);
      long long v154 = *(_OWORD *)(v142 + 152);
      *(_OWORD *)(v141 + 136) = *(_OWORD *)(v142 + 136);
      *(_OWORD *)(v141 + 152) = v154;
      long long v155 = *(_OWORD *)(v142 + 184);
      *(_OWORD *)(v141 + 168) = *(_OWORD *)(v142 + 168);
      *(_OWORD *)(v141 + 184) = v155;
      long long v156 = *(_OWORD *)(v142 + 120);
      *(_OWORD *)(v141 + 104) = *(_OWORD *)(v142 + 104);
      *(_OWORD *)(v141 + 120) = v156;
    }
    *(_DWORD *)(v141 + 239) = *(_DWORD *)(v142 + 239);
    *(_WORD *)(v141 + 243) = *(_WORD *)(v142 + 243);
    uint64_t v157 = *((void *)v142 + 32);
    *((void *)v141 + 31) = *((void *)v142 + 31);
    *((void *)v141 + 32) = v157;
    *((void *)v141 + 33) = *((void *)v142 + 33);
    uint64_t v258 = v143;
    uint64_t v158 = v143[21];
    long long v254 = &v142[v158];
    uint64_t v255 = &v141[v158];
    uint64_t v159 = sub_1BE06EE10();
    uint64_t v160 = *(void *)(v159 - 8);
    uint64_t v161 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v161(v254, 1, v159))
    {
      uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(v255, v254, *(void *)(*(void *)(v162 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v255, v254, v159);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v160 + 56))(v255, 0, 1, v159);
    }
    uint64_t v145 = v269;
    uint64_t v13 = v273;
    uint64_t v163 = v143[22];
    uint64_t v164 = &v141[v163];
    uint64_t v165 = &v142[v163];
    uint64_t v166 = *((void *)v165 + 1);
    *(void *)uint64_t v164 = *(void *)v165;
    *((void *)v164 + 1) = v166;
    uint64_t v167 = v143[23];
    uint64_t v168 = &v141[v167];
    uint64_t v169 = &v142[v167];
    uint64_t v170 = *((void *)v169 + 1);
    *(void *)uint64_t v168 = *(void *)v169;
    *((void *)v168 + 1) = v170;
    v141[v143[24]] = v142[v143[24]];
    uint64_t v171 = (void (*)(char *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v171(v141, 0, 1, v258);
  }
  uint64_t v172 = v13[26];
  *(void *)&a1[v13[25]] = *(void *)&a2[v13[25]];
  *(void *)&a1[v172] = *(void *)&a2[v172];
  uint64_t v173 = v13[28];
  *(void *)&a1[v13[27]] = *(void *)&a2[v13[27]];
  uint64_t v174 = &a1[v173];
  uint64_t v175 = &a2[v173];
  uint64_t v176 = *((void *)v175 + 1);
  *(void *)uint64_t v174 = *(void *)v175;
  *((void *)v174 + 1) = v176;
  uint64_t v177 = v13[30];
  *(void *)&a1[v13[29]] = *(void *)&a2[v13[29]];
  uint64_t v178 = &a1[v177];
  uint64_t v179 = &a2[v177];
  uint64_t v180 = *(unsigned int (**)(char *, uint64_t, void *))(v145 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v180(v179, 1, v266))
  {
    uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v178, v179, *(void *)(*(void *)(v181 - 8) + 64));
  }
  else
  {
    v261(v178, v179, v266);
    (*(void (**)(char *, void, uint64_t, void *))(v145 + 56))(v178, 0, 1, v266);
  }
  uint64_t v182 = v13[32];
  *(void *)&a1[v13[31]] = *(void *)&a2[v13[31]];
  uint64_t v183 = &a1[v182];
  uint64_t v184 = &a2[v182];
  uint64_t v185 = (int *)type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v186 = *((void *)v185 - 1);
  uint64_t v187 = *(unsigned int (**)(char *, uint64_t, int *))(v186 + 48);
  swift_bridgeObjectRetain();
  if (v187(v184, 1, v185))
  {
    uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
    memcpy(v183, v184, *(void *)(*(void *)(v188 - 8) + 64));
  }
  else
  {
    uint64_t v189 = *((void *)v184 + 1);
    *(void *)uint64_t v183 = *(void *)v184;
    *((void *)v183 + 1) = v189;
    uint64_t v190 = *((void *)v184 + 3);
    *((void *)v183 + 2) = *((void *)v184 + 2);
    *((void *)v183 + 3) = v190;
    uint64_t v191 = *((void *)v184 + 5);
    *((void *)v183 + 4) = *((void *)v184 + 4);
    *((void *)v183 + 5) = v191;
    uint64_t v192 = v185[7];
    uint64_t v267 = &v183[v192];
    uint64_t v270 = v186;
    uint64_t v264 = &v184[v192];
    uint64_t v193 = sub_1BE06EE10();
    uint64_t v259 = *(void *)(v193 - 8);
    uint64_t v262 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v259 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v262(v264, 1, v193))
    {
      uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(v267, v264, *(void *)(*(void *)(v194 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v259 + 16))(v267, v264, v193);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v259 + 56))(v267, 0, 1, v193);
    }
    uint64_t v195 = v185[8];
    uint64_t v196 = &v183[v195];
    uint64_t v197 = &v184[v195];
    uint64_t v198 = *((void *)v197 + 1);
    *(void *)uint64_t v196 = *(void *)v197;
    *((void *)v196 + 1) = v198;
    v183[v185[9]] = v184[v185[9]];
    uint64_t v199 = v185[10];
    uint64_t v200 = &v183[v199];
    uint64_t v201 = &v184[v199];
    uint64_t v202 = *((void *)v201 + 1);
    *(void *)uint64_t v200 = *(void *)v201;
    *((void *)v200 + 1) = v202;
    *(void *)&v183[v185[11]] = *(void *)&v184[v185[11]];
    uint64_t v203 = *(void (**)(char *, void, uint64_t, int *))(v270 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v203(v183, 0, 1, v185);
    uint64_t v13 = v273;
  }
  uint64_t v204 = v13[34];
  *(void *)&a1[v13[33]] = *(void *)&a2[v13[33]];
  uint64_t v205 = &a1[v204];
  char v206 = &a2[v204];
  uint64_t v207 = (int *)type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v208 = *((void *)v207 - 1);
  uint64_t v209 = *(unsigned int (**)(char *, uint64_t, int *))(v208 + 48);
  swift_bridgeObjectRetain();
  if (v209(v206, 1, v207))
  {
    uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E20);
    memcpy(v205, v206, *(void *)(*(void *)(v210 - 8) + 64));
  }
  else
  {
    uint64_t v211 = *((void *)v206 + 1);
    *(void *)uint64_t v205 = *(void *)v206;
    *((void *)v205 + 1) = v211;
    uint64_t v212 = *((void *)v206 + 3);
    *((void *)v205 + 2) = *((void *)v206 + 2);
    *((void *)v205 + 3) = v212;
    uint64_t v213 = *((void *)v206 + 5);
    *((void *)v205 + 4) = *((void *)v206 + 4);
    *((void *)v205 + 5) = v213;
    uint64_t v214 = v207[7];
    uint64_t v268 = &v205[v214];
    uint64_t v271 = v208;
    uint64_t v265 = &v206[v214];
    uint64_t v215 = sub_1BE06EE10();
    uint64_t v260 = *(void *)(v215 - 8);
    uint64_t v263 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v260 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v263(v265, 1, v215))
    {
      uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(v268, v265, *(void *)(*(void *)(v216 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v260 + 16))(v268, v265, v215);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v260 + 56))(v268, 0, 1, v215);
    }
    uint64_t v217 = v207[8];
    uint64_t v218 = &v205[v217];
    uint64_t v219 = &v206[v217];
    uint64_t v220 = *((void *)v219 + 1);
    *(void *)uint64_t v218 = *(void *)v219;
    *((void *)v218 + 1) = v220;
    v205[v207[9]] = v206[v207[9]];
    uint64_t v221 = v207[10];
    uint64_t v222 = &v205[v221];
    uint64_t v223 = &v206[v221];
    uint64_t v224 = *((void *)v223 + 1);
    *(void *)uint64_t v222 = *(void *)v223;
    *((void *)v222 + 1) = v224;
    *(void *)&v205[v207[11]] = *(void *)&v206[v207[11]];
    *(void *)&v205[v207[12]] = *(void *)&v206[v207[12]];
    *(void *)&v205[v207[13]] = *(void *)&v206[v207[13]];
    uint64_t v225 = v207[14];
    uint64_t v226 = &v205[v225];
    uint64_t v227 = &v206[v225];
    uint64_t v228 = *((void *)v227 + 1);
    *(void *)uint64_t v226 = *(void *)v227;
    *((void *)v226 + 1) = v228;
    uint64_t v229 = *(void (**)(char *, void, uint64_t, int *))(v271 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v229(v205, 0, 1, v207);
    uint64_t v13 = v273;
  }
  uint64_t v230 = v13[35];
  v231 = &a1[v230];
  uint64_t v232 = &a2[v230];
  uint64_t v233 = sub_1BE06EE10();
  uint64_t v234 = *(void *)(v233 - 8);
  uint64_t v235 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v234 + 48);
  if (v235(v232, 1, v233))
  {
    uint64_t v236 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v231, v232, *(void *)(*(void *)(v236 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v234 + 16))(v231, v232, v233);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v234 + 56))(v231, 0, 1, v233);
  }
  uint64_t v237 = v13[37];
  a1[v13[36]] = a2[v13[36]];
  a1[v237] = a2[v237];
  uint64_t v238 = v13[38];
  uint64_t v239 = &a1[v238];
  uint64_t v240 = &a2[v238];
  if (v235(&a2[v238], 1, v233))
  {
    uint64_t v241 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v239, v240, *(void *)(*(void *)(v241 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v234 + 16))(v239, v240, v233);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v234 + 56))(v239, 0, 1, v233);
  }
  uint64_t v242 = v13[39];
  uint64_t v243 = &a1[v242];
  char v244 = &a2[v242];
  uint64_t v245 = *(void *)&a2[v242 + 16];
  if (v245 == 1)
  {
    long long v246 = *((_OWORD *)v244 + 1);
    *(_OWORD *)uint64_t v243 = *(_OWORD *)v244;
    *((_OWORD *)v243 + 1) = v246;
    *((_OWORD *)v243 + 2) = *((_OWORD *)v244 + 2);
    *((void *)v243 + 6) = *((void *)v244 + 6);
  }
  else
  {
    *uint64_t v243 = *v244;
    *((void *)v243 + 1) = *((void *)v244 + 1);
    *((void *)v243 + 2) = v245;
    uint64_t v247 = *((void *)v244 + 4);
    swift_bridgeObjectRetain();
    if (v247)
    {
      *((void *)v243 + 3) = *((void *)v244 + 3);
      *((void *)v243 + 4) = v247;
      uint64_t v248 = *((void *)v244 + 5);
      unint64_t v249 = *((void *)v244 + 6);
      swift_bridgeObjectRetain();
      sub_1BDF840AC(v248, v249);
      *((void *)v243 + 5) = v248;
      *((void *)v243 + 6) = v249;
    }
    else
    {
      long long v250 = *(_OWORD *)(v244 + 40);
      *(_OWORD *)(v243 + 24) = *(_OWORD *)(v244 + 24);
      *(_OWORD *)(v243 + 40) = v250;
    }
  }
  uint64_t v251 = v13[41];
  a1[v13[40]] = a2[v13[40]];
  a1[v251] = a2[v251];
  a1[v13[42]] = a2[v13[42]];
  return a1;
}

void *assignWithCopy for EventModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v5 + 2) = *((void *)v4 + 2);
  *((void *)v5 + 3) = *((void *)v4 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v5 + 4) = *((void *)v4 + 4);
  *((void *)v5 + 5) = *((void *)v4 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = &v5[v6];
  uint64_t v8 = &v4[v6];
  uint64_t v9 = sub_1BE06EEE0();
  v441 = *(void **)(v9 - 8);
  uint64_t v10 = (void (*)(char *, char *, uint64_t))v441[3];
  v10(v7, v8, v9);
  uint64_t v437 = v9;
  v434 = v10;
  v10(&v5[a3[8]], &v4[a3[8]], v9);
  v5[a3[9]] = v4[a3[9]];
  v5[a3[10]] = v4[a3[10]];
  v446 = a3;
  uint64_t v11 = a3[11];
  uint64_t v12 = &v5[v11];
  uint64_t v13 = &v4[v11];
  uint64_t v14 = sub_1BE06F140();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  uint64_t v20 = a3[12];
  uint64_t v21 = &v5[v20];
  uint64_t v22 = &v4[v20];
  int v23 = v16(&v5[v20], 1, v14);
  int v24 = v16(v22, 1, v14);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v21, v22, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
LABEL_12:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v21, v22, v14);
LABEL_13:
  v5[a3[13]] = v4[a3[13]];
  uint64_t v26 = a3[14];
  uint64_t v27 = &v5[v26];
  uint64_t v28 = &v4[v26];
  int v29 = v16(&v5[v26], 1, v14);
  int v30 = v16(v28, 1, v14);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v27, v28, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v27, 0, 1, v14);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v27, v14);
LABEL_18:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v27, v28, v14);
LABEL_19:
  uint64_t v32 = a3;
  uint64_t v33 = a3[15];
  uint64_t v34 = (uint64_t)&v5[v33];
  uint64_t v35 = &v4[v33];
  uint64_t v36 = type metadata accessor for EventVirtualConferenceModelObject(0);
  uint64_t v37 = *(void **)(v36 - 8);
  uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v37[6];
  int v39 = v38(v34, 1, v36);
  int v40 = v38((uint64_t)v35, 1, v36);
  v445 = v4;
  if (!v39)
  {
    if (!v40)
    {
      *(void *)uint64_t v34 = *(void *)v35;
      *(void *)(v34 + 8) = *((void *)v35 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v34 + 16) = *((void *)v35 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v34 + 24) = *((void *)v35 + 3);
      *(void *)(v34 + 32) = *((void *)v35 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v34 + 40) = *((void *)v35 + 5);
      *(void *)(v34 + 48) = *((void *)v35 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v34 + 56) = v35[56];
      *(void *)(v34 + 64) = *((void *)v35 + 8);
      uint64_t v48 = *(int *)(v36 + 40);
      uint64_t v49 = (void *)(v34 + v48);
      uint64_t v50 = &v35[v48];
      uint64_t v51 = sub_1BE06EE10();
      __dsta = *(void **)(v51 - 8);
      unint64_t v52 = (uint64_t (*)(void *, uint64_t, uint64_t))__dsta[6];
      int v53 = v52(v49, 1, v51);
      __srca = v50;
      int v54 = v52(v50, 1, v51);
      if (v53)
      {
        if (v54)
        {
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
          memcpy(v49, v50, *(void *)(*(void *)(v55 - 8) + 64));
          uint64_t v56 = __dsta;
        }
        else
        {
          uint64_t v56 = __dsta;
          ((void (*)(void *, char *, uint64_t))__dsta[2])(v49, __srca, v51);
          ((void (*)(void *, void, uint64_t, uint64_t))__dsta[7])(v49, 0, 1, v51);
        }
      }
      else
      {
        uint64_t v56 = __dsta;
        if (v54)
        {
          ((void (*)(void *, uint64_t))__dsta[1])(v49, v51);
          uint64_t v298 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
          memcpy(v49, __srca, *(void *)(*(void *)(v298 - 8) + 64));
        }
        else
        {
          ((void (*)(void *, char *, uint64_t))__dsta[3])(v49, __srca, v51);
        }
      }
      uint64_t v308 = *(int *)(v36 + 44);
      uint64_t v309 = (void *)(v34 + v308);
      uint64_t v310 = &v35[v308];
      int v311 = v52(v309, 1, v51);
      int v312 = v52(v310, 1, v51);
      uint64_t v32 = v446;
      if (v311)
      {
        uint64_t v4 = v445;
        if (!v312)
        {
          ((void (*)(void *, char *, uint64_t))v56[2])(v309, v310, v51);
          ((void (*)(void *, void, uint64_t, uint64_t))v56[7])(v309, 0, 1, v51);
          goto LABEL_38;
        }
      }
      else
      {
        uint64_t v4 = v445;
        if (!v312)
        {
          ((void (*)(void *, char *, uint64_t))v56[3])(v309, v310, v51);
          goto LABEL_38;
        }
        ((void (*)(void *, uint64_t))v56[1])(v309, v51);
      }
      size_t v45 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020) - 8) + 64);
      uint64_t v46 = v309;
      uint64_t v47 = v310;
LABEL_26:
      memcpy(v46, v47, v45);
      goto LABEL_38;
    }
    sub_1BE0446A0(v34, type metadata accessor for EventVirtualConferenceModelObject);
LABEL_25:
    size_t v45 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E18) - 8) + 64);
    uint64_t v46 = (void *)v34;
    uint64_t v47 = v35;
    goto LABEL_26;
  }
  if (v40) {
    goto LABEL_25;
  }
  __src = (void (**)(uint64_t, void, uint64_t, uint64_t))v37;
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = *((void *)v35 + 1);
  *(void *)(v34 + 16) = *((void *)v35 + 2);
  *(void *)(v34 + 24) = *((void *)v35 + 3);
  *(void *)(v34 + 32) = *((void *)v35 + 4);
  *(void *)(v34 + 40) = *((void *)v35 + 5);
  *(void *)(v34 + 48) = *((void *)v35 + 6);
  *(unsigned char *)(v34 + 56) = v35[56];
  *(void *)(v34 + 64) = *((void *)v35 + 8);
  uint64_t v41 = *(int *)(v36 + 40);
  __dst = (void *)(v34 + v41);
  v424 = &v35[v41];
  uint64_t v42 = sub_1BE06EE10();
  uint64_t v425 = *(void *)(v42 - 8);
  uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v425 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v43(v424, 1, v42))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(__dst, v424, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v425 + 16))(__dst, v424, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v425 + 56))(__dst, 0, 1, v42);
  }
  uint64_t v57 = *(int *)(v36 + 44);
  uint64_t v58 = (void *)(v34 + v57);
  uint64_t v59 = &v35[v57];
  if (v43(v59, 1, v42))
  {
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v425 + 16))(v58, v59, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v425 + 56))(v58, 0, 1, v42);
  }
  __src[7](v34, 0, 1, v36);
  uint64_t v32 = v446;
LABEL_38:
  uint64_t v61 = v32[16];
  uint64_t v62 = &v5[v61];
  uint64_t v63 = &v4[v61];
  *(void *)uint64_t v62 = *(void *)v63;
  *((void *)v62 + 1) = *((void *)v63 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = v32[17];
  long long v65 = &v5[v64];
  long long v66 = &v4[v64];
  *(void *)long long v65 = *(void *)v66;
  *((void *)v65 + 1) = *((void *)v66 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v5[v32[18]] = *(void *)&v4[v32[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v67 = v32[19];
  uint64_t v68 = (uint64_t)&v5[v67];
  long long v69 = &v4[v67];
  uint64_t v70 = *(void *)&v5[v67 + 8];
  uint64_t v71 = *(void *)&v4[v67 + 8];
  if (v70 == 1)
  {
    if (v71 == 1)
    {
      long long v72 = *(_OWORD *)v69;
      long long v73 = *((_OWORD *)v69 + 2);
      *(_OWORD *)(v68 + 16) = *((_OWORD *)v69 + 1);
      *(_OWORD *)(v68 + 32) = v73;
      *(_OWORD *)uint64_t v68 = v72;
      long long v74 = *((_OWORD *)v69 + 3);
      long long v75 = *((_OWORD *)v69 + 4);
      long long v76 = *((_OWORD *)v69 + 6);
      *(_OWORD *)(v68 + 80) = *((_OWORD *)v69 + 5);
      *(_OWORD *)(v68 + 96) = v76;
      *(_OWORD *)(v68 + 48) = v74;
      *(_OWORD *)(v68 + 64) = v75;
      long long v77 = *((_OWORD *)v69 + 7);
      long long v78 = *((_OWORD *)v69 + 8);
      long long v79 = *((_OWORD *)v69 + 10);
      *(_OWORD *)(v68 + 144) = *((_OWORD *)v69 + 9);
      *(_OWORD *)(v68 + 160) = v79;
      *(_OWORD *)(v68 + 112) = v77;
      *(_OWORD *)(v68 + 128) = v78;
      goto LABEL_62;
    }
    *(void *)uint64_t v68 = *(void *)v69;
    *(void *)(v68 + 8) = *((void *)v69 + 1);
    uint64_t v88 = (void *)*((void *)v69 + 2);
    *(void *)(v68 + 16) = v88;
    *(void *)(v68 + 24) = *((void *)v69 + 3);
    *(void *)(v68 + 32) = *((void *)v69 + 4);
    *(void *)(v68 + 40) = *((void *)v69 + 5);
    *(void *)(v68 + 48) = *((void *)v69 + 6);
    *(void *)(v68 + 56) = *((void *)v69 + 7);
    uint64_t v89 = (uint64_t *)(v69 + 64);
    unint64_t v90 = *((void *)v69 + 9);
    swift_bridgeObjectRetain();
    id v91 = v88;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v90 >> 60 == 15)
    {
      *(_OWORD *)(v68 + 64) = *(_OWORD *)v89;
    }
    else
    {
      uint64_t v98 = *v89;
      sub_1BDF840AC(*v89, v90);
      *(void *)(v68 + 64) = v98;
      *(void *)(v68 + 72) = v90;
    }
    *(unsigned char *)(v68 + 80) = v69[80];
    if (*((void *)v69 + 13) == 1)
    {
      long long v99 = *(_OWORD *)(v69 + 104);
      *(_OWORD *)(v68 + 88) = *(_OWORD *)(v69 + 88);
      *(_OWORD *)(v68 + 104) = v99;
      long long v100 = *(_OWORD *)(v69 + 120);
      long long v101 = *(_OWORD *)(v69 + 136);
      long long v102 = *(_OWORD *)(v69 + 152);
      *(void *)(v68 + 168) = *((void *)v69 + 21);
      *(_OWORD *)(v68 + 136) = v101;
      *(_OWORD *)(v68 + 152) = v102;
      *(_OWORD *)(v68 + 120) = v100;
      goto LABEL_62;
    }
LABEL_58:
    *(void *)(v68 + 88) = *((void *)v69 + 11);
    *(void *)(v68 + 96) = *((void *)v69 + 12);
    *(void *)(v68 + 104) = *((void *)v69 + 13);
    *(void *)(v68 + 112) = *((void *)v69 + 14);
    *(void *)(v68 + 120) = *((void *)v69 + 15);
    *(void *)(v68 + 128) = *((void *)v69 + 16);
    *(void *)(v68 + 136) = *((void *)v69 + 17);
    *(void *)(v68 + 144) = *((void *)v69 + 18);
    *(void *)(v68 + 152) = *((void *)v69 + 19);
    *(void *)(v68 + 160) = *((void *)v69 + 20);
    *(void *)(v68 + 168) = *((void *)v69 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_62;
  }
  if (v71 == 1)
  {
    sub_1BE04E3E4(v68);
    long long v81 = *((_OWORD *)v69 + 1);
    long long v80 = *((_OWORD *)v69 + 2);
    *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
    *(_OWORD *)(v68 + 16) = v81;
    *(_OWORD *)(v68 + 32) = v80;
    long long v82 = *((_OWORD *)v69 + 6);
    long long v84 = *((_OWORD *)v69 + 3);
    long long v83 = *((_OWORD *)v69 + 4);
    *(_OWORD *)(v68 + 80) = *((_OWORD *)v69 + 5);
    *(_OWORD *)(v68 + 96) = v82;
    *(_OWORD *)(v68 + 48) = v84;
    *(_OWORD *)(v68 + 64) = v83;
    long long v85 = *((_OWORD *)v69 + 10);
    long long v87 = *((_OWORD *)v69 + 7);
    long long v86 = *((_OWORD *)v69 + 8);
    *(_OWORD *)(v68 + 144) = *((_OWORD *)v69 + 9);
    *(_OWORD *)(v68 + 160) = v85;
    *(_OWORD *)(v68 + 112) = v87;
    *(_OWORD *)(v68 + 128) = v86;
    goto LABEL_62;
  }
  *(void *)uint64_t v68 = *(void *)v69;
  *(void *)(v68 + 8) = *((void *)v69 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v92 = *(void **)(v68 + 16);
  long long v93 = (void *)*((void *)v69 + 2);
  *(void *)(v68 + 16) = v93;
  id v94 = v93;

  *(void *)(v68 + 24) = *((void *)v69 + 3);
  *(void *)(v68 + 32) = *((void *)v69 + 4);
  *(void *)(v68 + 40) = *((void *)v69 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v68 + 48) = *((void *)v69 + 6);
  *(void *)(v68 + 56) = *((void *)v69 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v95 = (uint64_t *)(v69 + 64);
  unint64_t v96 = *((void *)v69 + 9);
  if (*(void *)(v68 + 72) >> 60 == 15)
  {
    if (v96 >> 60 != 15)
    {
      uint64_t v97 = *v95;
      sub_1BDF840AC(*v95, *((void *)v69 + 9));
      *(void *)(v68 + 64) = v97;
      *(void *)(v68 + 72) = v96;
      goto LABEL_55;
    }
    goto LABEL_53;
  }
  if (v96 >> 60 == 15)
  {
    sub_1BDFCECD8(v68 + 64);
LABEL_53:
    *(_OWORD *)(v68 + 64) = *(_OWORD *)v95;
    goto LABEL_55;
  }
  uint64_t v103 = *v95;
  sub_1BDF840AC(*v95, *((void *)v69 + 9));
  uint64_t v104 = *(void *)(v68 + 64);
  unint64_t v105 = *(void *)(v68 + 72);
  *(void *)(v68 + 64) = v103;
  *(void *)(v68 + 72) = v96;
  sub_1BDF841A4(v104, v105);
LABEL_55:
  *(unsigned char *)(v68 + 80) = v69[80];
  uint64_t v106 = (_OWORD *)(v68 + 88);
  uint64_t v107 = v69 + 88;
  uint64_t v108 = *((void *)v69 + 13);
  if (*(void *)(v68 + 104) == 1)
  {
    if (v108 == 1)
    {
      long long v109 = *(_OWORD *)(v69 + 104);
      *uint64_t v106 = *v107;
      *(_OWORD *)(v68 + 104) = v109;
      long long v110 = *(_OWORD *)(v69 + 120);
      long long v111 = *(_OWORD *)(v69 + 136);
      long long v112 = *(_OWORD *)(v69 + 152);
      *(void *)(v68 + 168) = *((void *)v69 + 21);
      *(_OWORD *)(v68 + 136) = v111;
      *(_OWORD *)(v68 + 152) = v112;
      *(_OWORD *)(v68 + 120) = v110;
      goto LABEL_62;
    }
    goto LABEL_58;
  }
  if (v108 == 1)
  {
    sub_1BDFEAFC0(v68 + 88);
    long long v113 = *(_OWORD *)(v69 + 104);
    *uint64_t v106 = *v107;
    *(_OWORD *)(v68 + 104) = v113;
    long long v115 = *(_OWORD *)(v69 + 136);
    long long v114 = *(_OWORD *)(v69 + 152);
    long long v116 = *(_OWORD *)(v69 + 120);
    *(void *)(v68 + 168) = *((void *)v69 + 21);
    *(_OWORD *)(v68 + 136) = v115;
    *(_OWORD *)(v68 + 152) = v114;
    *(_OWORD *)(v68 + 120) = v116;
  }
  else
  {
    *(void *)(v68 + 88) = *((void *)v69 + 11);
    *(void *)(v68 + 96) = *((void *)v69 + 12);
    *(void *)(v68 + 104) = *((void *)v69 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v68 + 112) = *((void *)v69 + 14);
    *(void *)(v68 + 120) = *((void *)v69 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v68 + 128) = *((void *)v69 + 16);
    *(void *)(v68 + 136) = *((void *)v69 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v68 + 144) = *((void *)v69 + 18);
    *(void *)(v68 + 152) = *((void *)v69 + 19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v68 + 160) = *((void *)v69 + 20);
    *(void *)(v68 + 168) = *((void *)v69 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_62:
  uint64_t v117 = v32[20];
  uint64_t v118 = (uint64_t)&v5[v117];
  long long v119 = &v4[v117];
  uint64_t v120 = *(void *)&v5[v117 + 8];
  uint64_t v121 = *(void *)&v4[v117 + 8];
  if (v120 == 1)
  {
    if (v121 == 1)
    {
      long long v122 = *(_OWORD *)v119;
      long long v123 = *((_OWORD *)v119 + 2);
      *(_OWORD *)(v118 + 16) = *((_OWORD *)v119 + 1);
      *(_OWORD *)(v118 + 32) = v123;
      *(_OWORD *)uint64_t v118 = v122;
      long long v124 = *((_OWORD *)v119 + 3);
      long long v125 = *((_OWORD *)v119 + 4);
      long long v126 = *((_OWORD *)v119 + 6);
      *(_OWORD *)(v118 + 80) = *((_OWORD *)v119 + 5);
      *(_OWORD *)(v118 + 96) = v126;
      *(_OWORD *)(v118 + 48) = v124;
      *(_OWORD *)(v118 + 64) = v125;
      long long v127 = *((_OWORD *)v119 + 7);
      long long v128 = *((_OWORD *)v119 + 8);
      long long v129 = *((_OWORD *)v119 + 10);
      *(_OWORD *)(v118 + 144) = *((_OWORD *)v119 + 9);
      *(_OWORD *)(v118 + 160) = v129;
      *(_OWORD *)(v118 + 112) = v127;
      *(_OWORD *)(v118 + 128) = v128;
      goto LABEL_86;
    }
    *(void *)uint64_t v118 = *(void *)v119;
    *(void *)(v118 + 8) = *((void *)v119 + 1);
    uint64_t v138 = (void *)*((void *)v119 + 2);
    *(void *)(v118 + 16) = v138;
    *(void *)(v118 + 24) = *((void *)v119 + 3);
    *(void *)(v118 + 32) = *((void *)v119 + 4);
    *(void *)(v118 + 40) = *((void *)v119 + 5);
    *(void *)(v118 + 48) = *((void *)v119 + 6);
    *(void *)(v118 + 56) = *((void *)v119 + 7);
    uint64_t v139 = (uint64_t *)(v119 + 64);
    unint64_t v140 = *((void *)v119 + 9);
    swift_bridgeObjectRetain();
    id v141 = v138;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v140 >> 60 == 15)
    {
      *(_OWORD *)(v118 + 64) = *(_OWORD *)v139;
    }
    else
    {
      uint64_t v148 = *v139;
      sub_1BDF840AC(*v139, v140);
      *(void *)(v118 + 64) = v148;
      *(void *)(v118 + 72) = v140;
    }
    *(unsigned char *)(v118 + 80) = v119[80];
    if (*((void *)v119 + 13) == 1)
    {
      long long v149 = *(_OWORD *)(v119 + 104);
      *(_OWORD *)(v118 + 88) = *(_OWORD *)(v119 + 88);
      *(_OWORD *)(v118 + 104) = v149;
      long long v150 = *(_OWORD *)(v119 + 120);
      long long v151 = *(_OWORD *)(v119 + 136);
      long long v152 = *(_OWORD *)(v119 + 152);
      *(void *)(v118 + 168) = *((void *)v119 + 21);
      *(_OWORD *)(v118 + 136) = v151;
      *(_OWORD *)(v118 + 152) = v152;
      *(_OWORD *)(v118 + 120) = v150;
      goto LABEL_86;
    }
LABEL_82:
    *(void *)(v118 + 88) = *((void *)v119 + 11);
    *(void *)(v118 + 96) = *((void *)v119 + 12);
    *(void *)(v118 + 104) = *((void *)v119 + 13);
    *(void *)(v118 + 112) = *((void *)v119 + 14);
    *(void *)(v118 + 120) = *((void *)v119 + 15);
    *(void *)(v118 + 128) = *((void *)v119 + 16);
    *(void *)(v118 + 136) = *((void *)v119 + 17);
    *(void *)(v118 + 144) = *((void *)v119 + 18);
    *(void *)(v118 + 152) = *((void *)v119 + 19);
    *(void *)(v118 + 160) = *((void *)v119 + 20);
    *(void *)(v118 + 168) = *((void *)v119 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_86;
  }
  if (v121 == 1)
  {
    sub_1BE04E3E4(v118);
    long long v131 = *((_OWORD *)v119 + 1);
    long long v130 = *((_OWORD *)v119 + 2);
    *(_OWORD *)uint64_t v118 = *(_OWORD *)v119;
    *(_OWORD *)(v118 + 16) = v131;
    *(_OWORD *)(v118 + 32) = v130;
    long long v132 = *((_OWORD *)v119 + 6);
    long long v134 = *((_OWORD *)v119 + 3);
    long long v133 = *((_OWORD *)v119 + 4);
    *(_OWORD *)(v118 + 80) = *((_OWORD *)v119 + 5);
    *(_OWORD *)(v118 + 96) = v132;
    *(_OWORD *)(v118 + 48) = v134;
    *(_OWORD *)(v118 + 64) = v133;
    long long v135 = *((_OWORD *)v119 + 10);
    long long v137 = *((_OWORD *)v119 + 7);
    long long v136 = *((_OWORD *)v119 + 8);
    *(_OWORD *)(v118 + 144) = *((_OWORD *)v119 + 9);
    *(_OWORD *)(v118 + 160) = v135;
    *(_OWORD *)(v118 + 112) = v137;
    *(_OWORD *)(v118 + 128) = v136;
    goto LABEL_86;
  }
  *(void *)uint64_t v118 = *(void *)v119;
  *(void *)(v118 + 8) = *((void *)v119 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v142 = *(void **)(v118 + 16);
  uint64_t v143 = (void *)*((void *)v119 + 2);
  *(void *)(v118 + 16) = v143;
  id v144 = v143;

  *(void *)(v118 + 24) = *((void *)v119 + 3);
  *(void *)(v118 + 32) = *((void *)v119 + 4);
  *(void *)(v118 + 40) = *((void *)v119 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v118 + 48) = *((void *)v119 + 6);
  *(void *)(v118 + 56) = *((void *)v119 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v145 = (uint64_t *)(v119 + 64);
  unint64_t v146 = *((void *)v119 + 9);
  if (*(void *)(v118 + 72) >> 60 == 15)
  {
    if (v146 >> 60 != 15)
    {
      uint64_t v147 = *v145;
      sub_1BDF840AC(*v145, *((void *)v119 + 9));
      *(void *)(v118 + 64) = v147;
      *(void *)(v118 + 72) = v146;
      goto LABEL_79;
    }
    goto LABEL_77;
  }
  if (v146 >> 60 == 15)
  {
    sub_1BDFCECD8(v118 + 64);
LABEL_77:
    *(_OWORD *)(v118 + 64) = *(_OWORD *)v145;
    goto LABEL_79;
  }
  uint64_t v153 = *v145;
  sub_1BDF840AC(*v145, *((void *)v119 + 9));
  uint64_t v154 = *(void *)(v118 + 64);
  unint64_t v155 = *(void *)(v118 + 72);
  *(void *)(v118 + 64) = v153;
  *(void *)(v118 + 72) = v146;
  sub_1BDF841A4(v154, v155);
LABEL_79:
  *(unsigned char *)(v118 + 80) = v119[80];
  long long v156 = (_OWORD *)(v118 + 88);
  uint64_t v157 = v119 + 88;
  uint64_t v158 = *((void *)v119 + 13);
  if (*(void *)(v118 + 104) == 1)
  {
    if (v158 == 1)
    {
      long long v159 = *(_OWORD *)(v119 + 104);
      *long long v156 = *v157;
      *(_OWORD *)(v118 + 104) = v159;
      long long v160 = *(_OWORD *)(v119 + 120);
      long long v161 = *(_OWORD *)(v119 + 136);
      long long v162 = *(_OWORD *)(v119 + 152);
      *(void *)(v118 + 168) = *((void *)v119 + 21);
      *(_OWORD *)(v118 + 136) = v161;
      *(_OWORD *)(v118 + 152) = v162;
      *(_OWORD *)(v118 + 120) = v160;
      goto LABEL_86;
    }
    goto LABEL_82;
  }
  if (v158 == 1)
  {
    sub_1BDFEAFC0(v118 + 88);
    long long v163 = *(_OWORD *)(v119 + 104);
    *long long v156 = *v157;
    *(_OWORD *)(v118 + 104) = v163;
    long long v165 = *(_OWORD *)(v119 + 136);
    long long v164 = *(_OWORD *)(v119 + 152);
    long long v166 = *(_OWORD *)(v119 + 120);
    *(void *)(v118 + 168) = *((void *)v119 + 21);
    *(_OWORD *)(v118 + 136) = v165;
    *(_OWORD *)(v118 + 152) = v164;
    *(_OWORD *)(v118 + 120) = v166;
  }
  else
  {
    *(void *)(v118 + 88) = *((void *)v119 + 11);
    *(void *)(v118 + 96) = *((void *)v119 + 12);
    *(void *)(v118 + 104) = *((void *)v119 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v118 + 112) = *((void *)v119 + 14);
    *(void *)(v118 + 120) = *((void *)v119 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v118 + 128) = *((void *)v119 + 16);
    *(void *)(v118 + 136) = *((void *)v119 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v118 + 144) = *((void *)v119 + 18);
    *(void *)(v118 + 152) = *((void *)v119 + 19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v118 + 160) = *((void *)v119 + 20);
    *(void *)(v118 + 168) = *((void *)v119 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_86:
  uint64_t v167 = v32[21];
  uint64_t v168 = (uint64_t)&v5[v167];
  uint64_t v169 = &v4[v167];
  uint64_t v170 = *(void *)&v5[v167 + 8];
  uint64_t v171 = *(void *)&v4[v167 + 8];
  if (v170 == 1)
  {
    if (v171 == 1)
    {
      long long v172 = *(_OWORD *)v169;
      long long v173 = *((_OWORD *)v169 + 2);
      *(_OWORD *)(v168 + 16) = *((_OWORD *)v169 + 1);
      *(_OWORD *)(v168 + 32) = v173;
      *(_OWORD *)uint64_t v168 = v172;
      long long v174 = *((_OWORD *)v169 + 3);
      long long v175 = *((_OWORD *)v169 + 4);
      long long v176 = *((_OWORD *)v169 + 6);
      *(_OWORD *)(v168 + 80) = *((_OWORD *)v169 + 5);
      *(_OWORD *)(v168 + 96) = v176;
      *(_OWORD *)(v168 + 48) = v174;
      *(_OWORD *)(v168 + 64) = v175;
      long long v177 = *((_OWORD *)v169 + 7);
      long long v178 = *((_OWORD *)v169 + 8);
      long long v179 = *((_OWORD *)v169 + 10);
      *(_OWORD *)(v168 + 144) = *((_OWORD *)v169 + 9);
      *(_OWORD *)(v168 + 160) = v179;
      *(_OWORD *)(v168 + 112) = v177;
      *(_OWORD *)(v168 + 128) = v178;
      goto LABEL_110;
    }
    *(void *)uint64_t v168 = *(void *)v169;
    *(void *)(v168 + 8) = *((void *)v169 + 1);
    uint64_t v188 = (void *)*((void *)v169 + 2);
    *(void *)(v168 + 16) = v188;
    *(void *)(v168 + 24) = *((void *)v169 + 3);
    *(void *)(v168 + 32) = *((void *)v169 + 4);
    *(void *)(v168 + 40) = *((void *)v169 + 5);
    *(void *)(v168 + 48) = *((void *)v169 + 6);
    *(void *)(v168 + 56) = *((void *)v169 + 7);
    uint64_t v189 = (uint64_t *)(v169 + 64);
    unint64_t v190 = *((void *)v169 + 9);
    swift_bridgeObjectRetain();
    id v191 = v188;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v190 >> 60 == 15)
    {
      *(_OWORD *)(v168 + 64) = *(_OWORD *)v189;
    }
    else
    {
      uint64_t v198 = *v189;
      sub_1BDF840AC(*v189, v190);
      *(void *)(v168 + 64) = v198;
      *(void *)(v168 + 72) = v190;
    }
    *(unsigned char *)(v168 + 80) = v169[80];
    if (*((void *)v169 + 13) == 1)
    {
      long long v199 = *(_OWORD *)(v169 + 104);
      *(_OWORD *)(v168 + 88) = *(_OWORD *)(v169 + 88);
      *(_OWORD *)(v168 + 104) = v199;
      long long v200 = *(_OWORD *)(v169 + 120);
      long long v201 = *(_OWORD *)(v169 + 136);
      long long v202 = *(_OWORD *)(v169 + 152);
      *(void *)(v168 + 168) = *((void *)v169 + 21);
      *(_OWORD *)(v168 + 136) = v201;
      *(_OWORD *)(v168 + 152) = v202;
      *(_OWORD *)(v168 + 120) = v200;
      goto LABEL_110;
    }
LABEL_106:
    *(void *)(v168 + 88) = *((void *)v169 + 11);
    *(void *)(v168 + 96) = *((void *)v169 + 12);
    *(void *)(v168 + 104) = *((void *)v169 + 13);
    *(void *)(v168 + 112) = *((void *)v169 + 14);
    *(void *)(v168 + 120) = *((void *)v169 + 15);
    *(void *)(v168 + 128) = *((void *)v169 + 16);
    *(void *)(v168 + 136) = *((void *)v169 + 17);
    *(void *)(v168 + 144) = *((void *)v169 + 18);
    *(void *)(v168 + 152) = *((void *)v169 + 19);
    *(void *)(v168 + 160) = *((void *)v169 + 20);
    *(void *)(v168 + 168) = *((void *)v169 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_110;
  }
  if (v171 == 1)
  {
    sub_1BE04E3E4(v168);
    long long v181 = *((_OWORD *)v169 + 1);
    long long v180 = *((_OWORD *)v169 + 2);
    *(_OWORD *)uint64_t v168 = *(_OWORD *)v169;
    *(_OWORD *)(v168 + 16) = v181;
    *(_OWORD *)(v168 + 32) = v180;
    long long v182 = *((_OWORD *)v169 + 6);
    long long v184 = *((_OWORD *)v169 + 3);
    long long v183 = *((_OWORD *)v169 + 4);
    *(_OWORD *)(v168 + 80) = *((_OWORD *)v169 + 5);
    *(_OWORD *)(v168 + 96) = v182;
    *(_OWORD *)(v168 + 48) = v184;
    *(_OWORD *)(v168 + 64) = v183;
    long long v185 = *((_OWORD *)v169 + 10);
    long long v187 = *((_OWORD *)v169 + 7);
    long long v186 = *((_OWORD *)v169 + 8);
    *(_OWORD *)(v168 + 144) = *((_OWORD *)v169 + 9);
    *(_OWORD *)(v168 + 160) = v185;
    *(_OWORD *)(v168 + 112) = v187;
    *(_OWORD *)(v168 + 128) = v186;
    goto LABEL_110;
  }
  *(void *)uint64_t v168 = *(void *)v169;
  *(void *)(v168 + 8) = *((void *)v169 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v192 = *(void **)(v168 + 16);
  uint64_t v193 = (void *)*((void *)v169 + 2);
  *(void *)(v168 + 16) = v193;
  id v194 = v193;

  *(void *)(v168 + 24) = *((void *)v169 + 3);
  *(void *)(v168 + 32) = *((void *)v169 + 4);
  *(void *)(v168 + 40) = *((void *)v169 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v168 + 48) = *((void *)v169 + 6);
  *(void *)(v168 + 56) = *((void *)v169 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v195 = (uint64_t *)(v169 + 64);
  unint64_t v196 = *((void *)v169 + 9);
  if (*(void *)(v168 + 72) >> 60 == 15)
  {
    if (v196 >> 60 != 15)
    {
      uint64_t v197 = *v195;
      sub_1BDF840AC(*v195, *((void *)v169 + 9));
      *(void *)(v168 + 64) = v197;
      *(void *)(v168 + 72) = v196;
      goto LABEL_103;
    }
    goto LABEL_101;
  }
  if (v196 >> 60 == 15)
  {
    sub_1BDFCECD8(v168 + 64);
LABEL_101:
    *(_OWORD *)(v168 + 64) = *(_OWORD *)v195;
    goto LABEL_103;
  }
  uint64_t v203 = *v195;
  sub_1BDF840AC(*v195, *((void *)v169 + 9));
  uint64_t v204 = *(void *)(v168 + 64);
  unint64_t v205 = *(void *)(v168 + 72);
  *(void *)(v168 + 64) = v203;
  *(void *)(v168 + 72) = v196;
  sub_1BDF841A4(v204, v205);
LABEL_103:
  *(unsigned char *)(v168 + 80) = v169[80];
  char v206 = (_OWORD *)(v168 + 88);
  uint64_t v207 = v169 + 88;
  uint64_t v208 = *((void *)v169 + 13);
  if (*(void *)(v168 + 104) == 1)
  {
    if (v208 == 1)
    {
      long long v209 = *(_OWORD *)(v169 + 104);
      *char v206 = *v207;
      *(_OWORD *)(v168 + 104) = v209;
      long long v210 = *(_OWORD *)(v169 + 120);
      long long v211 = *(_OWORD *)(v169 + 136);
      long long v212 = *(_OWORD *)(v169 + 152);
      *(void *)(v168 + 168) = *((void *)v169 + 21);
      *(_OWORD *)(v168 + 136) = v211;
      *(_OWORD *)(v168 + 152) = v212;
      *(_OWORD *)(v168 + 120) = v210;
      goto LABEL_110;
    }
    goto LABEL_106;
  }
  if (v208 == 1)
  {
    sub_1BDFEAFC0(v168 + 88);
    long long v213 = *(_OWORD *)(v169 + 104);
    *char v206 = *v207;
    *(_OWORD *)(v168 + 104) = v213;
    long long v215 = *(_OWORD *)(v169 + 136);
    long long v214 = *(_OWORD *)(v169 + 152);
    long long v216 = *(_OWORD *)(v169 + 120);
    *(void *)(v168 + 168) = *((void *)v169 + 21);
    *(_OWORD *)(v168 + 136) = v215;
    *(_OWORD *)(v168 + 152) = v214;
    *(_OWORD *)(v168 + 120) = v216;
  }
  else
  {
    *(void *)(v168 + 88) = *((void *)v169 + 11);
    *(void *)(v168 + 96) = *((void *)v169 + 12);
    *(void *)(v168 + 104) = *((void *)v169 + 13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v168 + 112) = *((void *)v169 + 14);
    *(void *)(v168 + 120) = *((void *)v169 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v168 + 128) = *((void *)v169 + 16);
    *(void *)(v168 + 136) = *((void *)v169 + 17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v168 + 144) = *((void *)v169 + 18);
    *(void *)(v168 + 152) = *((void *)v169 + 19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v168 + 160) = *((void *)v169 + 20);
    *(void *)(v168 + 168) = *((void *)v169 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_110:
  *(void *)&v5[v32[22]] = *(void *)&v4[v32[22]];
  *(void *)&v5[v32[23]] = *(void *)&v4[v32[23]];
  uint64_t v217 = v32[24];
  uint64_t v218 = &v5[v217];
  uint64_t v219 = &v4[v217];
  uint64_t v220 = type metadata accessor for EventCalendarModelObject();
  uint64_t v221 = *(void *)(v220 - 8);
  uint64_t v222 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v221 + 48);
  int v223 = v222(v218, 1, v220);
  int v224 = v222(v219, 1, v220);
  if (!v223)
  {
    uint64_t v226 = v437;
    if (v224)
    {
      sub_1BE0446A0((uint64_t)v218, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
      uint64_t v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
      memcpy(v218, v219, *(void *)(*(void *)(v227 - 8) + 64));
      goto LABEL_126;
    }
    __srcb = (int *)v220;
    *(void *)uint64_t v218 = *(void *)v219;
    *((void *)v218 + 1) = *((void *)v219 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v218 + 2) = *((void *)v219 + 2);
    *((void *)v218 + 3) = *((void *)v219 + 3);
    *((void *)v218 + 4) = *((void *)v219 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v218 + 5) = *((void *)v219 + 5);
    *((void *)v218 + 6) = *((void *)v219 + 6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v218 + 7) = *((void *)v219 + 7);
    long long v233 = *((_OWORD *)v219 + 4);
    *(_OWORD *)(v218 + 73) = *(_OWORD *)(v219 + 73);
    *((_OWORD *)v218 + 4) = v233;
    v218[89] = v219[89];
    *((void *)v218 + 12) = *((void *)v219 + 12);
    uint64_t v234 = v218 + 104;
    uint64_t v235 = v219 + 104;
    uint64_t v236 = *((void *)v219 + 14);
    if (*((void *)v218 + 14))
    {
      if (v236)
      {
        *((void *)v218 + 13) = *((void *)v219 + 13);
        *((void *)v218 + 14) = *((void *)v219 + 14);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((void *)v218 + 15) = *((void *)v219 + 15);
        *((void *)v218 + 16) = *((void *)v219 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((void *)v218 + 17) = *((void *)v219 + 17);
        *((void *)v218 + 18) = *((void *)v219 + 18);
        *((void *)v218 + 19) = *((void *)v219 + 19);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v218[160] = v219[160];
        v218[161] = v219[161];
        v218[162] = v219[162];
        v218[163] = v219[163];
        v218[164] = v219[164];
        *((void *)v218 + 21) = *((void *)v219 + 21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((void *)v218 + 22) = *((void *)v219 + 22);
        uint64_t v237 = *((void *)v219 + 23);
        v218[192] = v219[192];
        *((void *)v218 + 23) = v237;
        uint64_t v238 = *((void *)v219 + 25);
        v218[208] = v219[208];
        *((void *)v218 + 25) = v238;
        long long v239 = *(_OWORD *)(v219 + 216);
        *(void *)(v218 + 231) = *(void *)(v219 + 231);
        *(_OWORD *)(v218 + 216) = v239;
      }
      else
      {
        sub_1BDFC9668((uint64_t)(v218 + 104));
        *uint64_t v234 = *v235;
        long long v302 = *(_OWORD *)(v219 + 168);
        long long v304 = *(_OWORD *)(v219 + 120);
        long long v303 = *(_OWORD *)(v219 + 136);
        *(_OWORD *)(v218 + 152) = *(_OWORD *)(v219 + 152);
        *(_OWORD *)(v218 + 168) = v302;
        *(_OWORD *)(v218 + 120) = v304;
        *(_OWORD *)(v218 + 136) = v303;
        long long v306 = *(_OWORD *)(v219 + 200);
        long long v305 = *(_OWORD *)(v219 + 216);
        long long v307 = *(_OWORD *)(v219 + 184);
        *(void *)(v218 + 231) = *(void *)(v219 + 231);
        *(_OWORD *)(v218 + 200) = v306;
        *(_OWORD *)(v218 + 216) = v305;
        *(_OWORD *)(v218 + 184) = v307;
      }
    }
    else if (v236)
    {
      *((void *)v218 + 13) = *((void *)v219 + 13);
      *((void *)v218 + 14) = *((void *)v219 + 14);
      *((void *)v218 + 15) = *((void *)v219 + 15);
      *((void *)v218 + 16) = *((void *)v219 + 16);
      *((void *)v218 + 17) = *((void *)v219 + 17);
      *((void *)v218 + 18) = *((void *)v219 + 18);
      *((void *)v218 + 19) = *((void *)v219 + 19);
      v218[160] = v219[160];
      v218[161] = v219[161];
      v218[162] = v219[162];
      v218[163] = v219[163];
      v218[164] = v219[164];
      *((void *)v218 + 21) = *((void *)v219 + 21);
      *((void *)v218 + 22) = *((void *)v219 + 22);
      uint64_t v299 = *((void *)v219 + 23);
      v218[192] = v219[192];
      *((void *)v218 + 23) = v299;
      uint64_t v300 = *((void *)v219 + 25);
      v218[208] = v219[208];
      *((void *)v218 + 25) = v300;
      long long v301 = *(_OWORD *)(v219 + 216);
      *(void *)(v218 + 231) = *(void *)(v219 + 231);
      *(_OWORD *)(v218 + 216) = v301;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *uint64_t v234 = *v235;
      long long v313 = *(_OWORD *)(v219 + 120);
      long long v314 = *(_OWORD *)(v219 + 136);
      long long v315 = *(_OWORD *)(v219 + 168);
      *(_OWORD *)(v218 + 152) = *(_OWORD *)(v219 + 152);
      *(_OWORD *)(v218 + 168) = v315;
      *(_OWORD *)(v218 + 120) = v313;
      *(_OWORD *)(v218 + 136) = v314;
      long long v316 = *(_OWORD *)(v219 + 184);
      long long v317 = *(_OWORD *)(v219 + 200);
      long long v318 = *(_OWORD *)(v219 + 216);
      *(void *)(v218 + 231) = *(void *)(v219 + 231);
      *(_OWORD *)(v218 + 200) = v317;
      *(_OWORD *)(v218 + 216) = v318;
      *(_OWORD *)(v218 + 184) = v316;
    }
    v218[239] = v219[239];
    v218[240] = v219[240];
    v218[241] = v219[241];
    v218[242] = v219[242];
    v218[243] = v219[243];
    v218[244] = v219[244];
    *((void *)v218 + 31) = *((void *)v219 + 31);
    *((void *)v218 + 32) = *((void *)v219 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v218 + 33) = *((void *)v219 + 33);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v319 = __srcb[21];
    v320 = &v218[v319];
    uint64_t v321 = &v219[v319];
    uint64_t v322 = sub_1BE06EE10();
    uint64_t v323 = *(void *)(v322 - 8);
    uint64_t v324 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v323 + 48);
    int v325 = v324(v320, 1, v322);
    int v326 = v324(v321, 1, v322);
    if (v325)
    {
      uint64_t v226 = v437;
      if (!v326)
      {
        (*(void (**)(char *, char *, uint64_t))(v323 + 16))(v320, v321, v322);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v323 + 56))(v320, 0, 1, v322);
LABEL_169:
        uint64_t v328 = __srcb[22];
        uint64_t v329 = &v218[v328];
        uint64_t v330 = &v219[v328];
        *(void *)uint64_t v329 = *(void *)v330;
        *((void *)v329 + 1) = *((void *)v330 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v331 = __srcb[23];
        uint64_t v332 = &v218[v331];
        uint64_t v333 = &v219[v331];
        *(void *)uint64_t v332 = *(void *)v333;
        *((void *)v332 + 1) = *((void *)v333 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v218[__srcb[24]] = v219[__srcb[24]];
        uint64_t v4 = v445;
        uint64_t v32 = v446;
        goto LABEL_126;
      }
    }
    else
    {
      uint64_t v226 = v437;
      if (!v326)
      {
        (*(void (**)(char *, char *, uint64_t))(v323 + 24))(v320, v321, v322);
        goto LABEL_169;
      }
      (*(void (**)(char *, uint64_t))(v323 + 8))(v320, v322);
    }
    uint64_t v327 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v320, v321, *(void *)(*(void *)(v327 - 8) + 64));
    goto LABEL_169;
  }
  if (v224)
  {
    uint64_t v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
    memcpy(v218, v219, *(void *)(*(void *)(v225 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v218 = *(void *)v219;
    *((void *)v218 + 1) = *((void *)v219 + 1);
    *((void *)v218 + 2) = *((void *)v219 + 2);
    *((void *)v218 + 3) = *((void *)v219 + 3);
    *((void *)v218 + 4) = *((void *)v219 + 4);
    *((void *)v218 + 5) = *((void *)v219 + 5);
    *((void *)v218 + 6) = *((void *)v219 + 6);
    *((void *)v218 + 7) = *((void *)v219 + 7);
    long long v228 = *((_OWORD *)v219 + 4);
    *(_OWORD *)(v218 + 73) = *(_OWORD *)(v219 + 73);
    *((_OWORD *)v218 + 4) = v228;
    v218[89] = v219[89];
    *((void *)v218 + 12) = *((void *)v219 + 12);
    uint64_t v229 = *((void *)v219 + 14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v426 = v221;
    if (v229)
    {
      *((void *)v218 + 13) = *((void *)v219 + 13);
      *((void *)v218 + 14) = *((void *)v219 + 14);
      *((void *)v218 + 15) = *((void *)v219 + 15);
      *((void *)v218 + 16) = *((void *)v219 + 16);
      *((void *)v218 + 17) = *((void *)v219 + 17);
      *((void *)v218 + 18) = *((void *)v219 + 18);
      *((void *)v218 + 19) = *((void *)v219 + 19);
      v218[160] = v219[160];
      v218[161] = v219[161];
      v218[162] = v219[162];
      v218[163] = v219[163];
      v218[164] = v219[164];
      *((void *)v218 + 21) = *((void *)v219 + 21);
      *((void *)v218 + 22) = *((void *)v219 + 22);
      uint64_t v230 = *((void *)v219 + 23);
      v218[192] = v219[192];
      *((void *)v218 + 23) = v230;
      uint64_t v231 = *((void *)v219 + 25);
      v218[208] = v219[208];
      *((void *)v218 + 25) = v231;
      long long v232 = *(_OWORD *)(v219 + 216);
      *(void *)(v218 + 231) = *(void *)(v219 + 231);
      *(_OWORD *)(v218 + 216) = v232;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v218 + 104) = *(_OWORD *)(v219 + 104);
      long long v240 = *(_OWORD *)(v219 + 120);
      long long v241 = *(_OWORD *)(v219 + 136);
      long long v242 = *(_OWORD *)(v219 + 168);
      *(_OWORD *)(v218 + 152) = *(_OWORD *)(v219 + 152);
      *(_OWORD *)(v218 + 168) = v242;
      *(_OWORD *)(v218 + 120) = v240;
      *(_OWORD *)(v218 + 136) = v241;
      long long v243 = *(_OWORD *)(v219 + 184);
      long long v244 = *(_OWORD *)(v219 + 200);
      long long v245 = *(_OWORD *)(v219 + 216);
      *(void *)(v218 + 231) = *(void *)(v219 + 231);
      *(_OWORD *)(v218 + 200) = v244;
      *(_OWORD *)(v218 + 216) = v245;
      *(_OWORD *)(v218 + 184) = v243;
    }
    v218[239] = v219[239];
    v218[240] = v219[240];
    v218[241] = v219[241];
    v218[242] = v219[242];
    v218[243] = v219[243];
    v218[244] = v219[244];
    *((void *)v218 + 31) = *((void *)v219 + 31);
    *((void *)v218 + 32) = *((void *)v219 + 32);
    *((void *)v218 + 33) = *((void *)v219 + 33);
    uint64_t v246 = *(int *)(v220 + 84);
    __dstb = &v218[v246];
    __srcc = (int *)v220;
    uint64_t v247 = &v219[v246];
    uint64_t v248 = sub_1BE06EE10();
    uint64_t v249 = *(void *)(v248 - 8);
    long long v250 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v249 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v250(v247, 1, v248))
    {
      uint64_t v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(__dstb, v247, *(void *)(*(void *)(v251 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v249 + 16))(__dstb, v247, v248);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v249 + 56))(__dstb, 0, 1, v248);
    }
    uint64_t v4 = v445;
    uint64_t v32 = v446;
    uint64_t v252 = __srcc[22];
    unint64_t v253 = &v218[v252];
    long long v254 = &v219[v252];
    *(void *)unint64_t v253 = *(void *)v254;
    *((void *)v253 + 1) = *((void *)v254 + 1);
    uint64_t v255 = __srcc[23];
    v256 = &v218[v255];
    uint64_t v257 = &v219[v255];
    *(void *)v256 = *(void *)v257;
    *((void *)v256 + 1) = *((void *)v257 + 1);
    v218[__srcc[24]] = v219[__srcc[24]];
    uint64_t v258 = *(void (**)(void *, void, uint64_t, int *))(v426 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v258(v218, 0, 1, __srcc);
  }
  uint64_t v226 = v437;
LABEL_126:
  *(void *)&v5[v32[25]] = *(void *)&v4[v32[25]];
  *(void *)&v5[v32[26]] = *(void *)&v4[v32[26]];
  *(void *)&v5[v32[27]] = *(void *)&v4[v32[27]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v259 = v32[28];
  uint64_t v260 = &v5[v259];
  uint64_t v261 = &v4[v259];
  *(void *)uint64_t v260 = *(void *)v261;
  *((void *)v260 + 1) = *((void *)v261 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v5[v32[29]] = *(void *)&v4[v32[29]];
  uint64_t v262 = v32[30];
  uint64_t v263 = &v5[v262];
  uint64_t v264 = &v4[v262];
  uint64_t v265 = (uint64_t (*)(char *, uint64_t, uint64_t))v441[6];
  int v266 = v265(&v5[v262], 1, v226);
  int v267 = v265(v264, 1, v226);
  if (v266)
  {
    if (!v267)
    {
      ((void (*)(char *, char *, uint64_t))v441[2])(v263, v264, v226);
      ((void (*)(char *, void, uint64_t, uint64_t))v441[7])(v263, 0, 1, v226);
      goto LABEL_132;
    }
    goto LABEL_131;
  }
  if (v267)
  {
    ((void (*)(char *, uint64_t))v441[1])(v263, v226);
LABEL_131:
    uint64_t v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v263, v264, *(void *)(*(void *)(v268 - 8) + 64));
    goto LABEL_132;
  }
  v434(v263, v264, v226);
LABEL_132:
  *(void *)&v5[v32[31]] = *(void *)&v4[v32[31]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v269 = v32[32];
  uint64_t v270 = &v5[v269];
  uint64_t v271 = &v4[v269];
  uint64_t v272 = (int *)type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v273 = *((void *)v272 - 1);
  long long v274 = *(uint64_t (**)(void *, uint64_t, int *))(v273 + 48);
  int v275 = v274(v270, 1, v272);
  int v276 = v274(v271, 1, v272);
  v444 = v5;
  if (!v275)
  {
    if (v276)
    {
      sub_1BE0446A0((uint64_t)v270, type metadata accessor for EventOrganizerModelObject);
      goto LABEL_138;
    }
    *(void *)uint64_t v270 = *(void *)v271;
    *((void *)v270 + 1) = *((void *)v271 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v270 + 2) = *((void *)v271 + 2);
    *((void *)v270 + 3) = *((void *)v271 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v270 + 4) = *((void *)v271 + 4);
    *((void *)v270 + 5) = *((void *)v271 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v282 = v272[7];
    uint64_t v283 = &v270[v282];
    uint64_t v284 = &v271[v282];
    uint64_t v285 = sub_1BE06EE10();
    uint64_t v286 = *(void *)(v285 - 8);
    uint64_t v287 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v286 + 48);
    v439 = v283;
    LODWORD(v283) = v287(v283, 1, v285);
    int v288 = v287(v284, 1, v285);
    if (v283)
    {
      if (!v288)
      {
        (*(void (**)(void *, char *, uint64_t))(v286 + 16))(v439, v284, v285);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v286 + 56))(v439, 0, 1, v285);
        goto LABEL_171;
      }
      size_t v289 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020) - 8) + 64);
      uint64_t v290 = v439;
    }
    else
    {
      if (!v288)
      {
        (*(void (**)(void *, char *, uint64_t))(v286 + 24))(v439, v284, v285);
        goto LABEL_171;
      }
      (*(void (**)(void *, uint64_t))(v286 + 8))(v439, v285);
      size_t v289 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020) - 8) + 64);
      uint64_t v290 = v439;
    }
    memcpy(v290, v284, v289);
LABEL_171:
    uint64_t v4 = v445;
    uint64_t v334 = v272[8];
    uint64_t v335 = &v270[v334];
    uint64_t v336 = &v271[v334];
    *(void *)uint64_t v335 = *(void *)v336;
    *((void *)v335 + 1) = *((void *)v336 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v270[v272[9]] = v271[v272[9]];
    uint64_t v337 = v272[10];
    v338 = &v270[v337];
    v339 = &v271[v337];
    *(void *)v338 = *(void *)v339;
    *((void *)v338 + 1) = *((void *)v339 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v270[v272[11]] = *(void *)&v271[v272[11]];
    uint64_t v32 = v446;
    goto LABEL_172;
  }
  if (v276)
  {
LABEL_138:
    uint64_t v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
    memcpy(v270, v271, *(void *)(*(void *)(v281 - 8) + 64));
    goto LABEL_172;
  }
  *(void *)uint64_t v270 = *(void *)v271;
  *((void *)v270 + 1) = *((void *)v271 + 1);
  *((void *)v270 + 2) = *((void *)v271 + 2);
  *((void *)v270 + 3) = *((void *)v271 + 3);
  *((void *)v270 + 4) = *((void *)v271 + 4);
  *((void *)v270 + 5) = *((void *)v271 + 5);
  uint64_t v277 = v272[7];
  v442 = &v270[v277];
  v435 = &v271[v277];
  uint64_t v278 = sub_1BE06EE10();
  uint64_t v279 = *(void *)(v278 - 8);
  v438 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v279 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v438(v435, 1, v278))
  {
    uint64_t v280 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v442, v435, *(void *)(*(void *)(v280 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v279 + 16))(v442, v435, v278);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v279 + 56))(v442, 0, 1, v278);
  }
  uint64_t v4 = v445;
  uint64_t v32 = v446;
  uint64_t v291 = v272[8];
  uint64_t v292 = &v270[v291];
  uint64_t v293 = &v271[v291];
  *(void *)uint64_t v292 = *(void *)v293;
  *((void *)v292 + 1) = *((void *)v293 + 1);
  v270[v272[9]] = v271[v272[9]];
  uint64_t v294 = v272[10];
  uint64_t v295 = &v270[v294];
  uint64_t v296 = &v271[v294];
  *(void *)uint64_t v295 = *(void *)v296;
  *((void *)v295 + 1) = *((void *)v296 + 1);
  *(void *)&v270[v272[11]] = *(void *)&v271[v272[11]];
  uint64_t v297 = *(void (**)(void *, void, uint64_t, int *))(v273 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v297(v270, 0, 1, v272);
  uint64_t v5 = v444;
LABEL_172:
  *(void *)&v5[v32[33]] = *(void *)&v4[v32[33]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v340 = v32[34];
  uint64_t v341 = &v5[v340];
  long long v342 = &v4[v340];
  unint64_t v343 = (int *)type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v344 = *((void *)v343 - 1);
  uint64_t v345 = *(uint64_t (**)(void *, uint64_t, int *))(v344 + 48);
  int v346 = v345(v341, 1, v343);
  int v347 = v345(v342, 1, v343);
  if (v346)
  {
    if (!v347)
    {
      *(void *)uint64_t v341 = *(void *)v342;
      *((void *)v341 + 1) = *((void *)v342 + 1);
      *((void *)v341 + 2) = *((void *)v342 + 2);
      *((void *)v341 + 3) = *((void *)v342 + 3);
      *((void *)v341 + 4) = *((void *)v342 + 4);
      *((void *)v341 + 5) = *((void *)v342 + 5);
      uint64_t v348 = v343[7];
      v443 = &v341[v348];
      v436 = &v342[v348];
      uint64_t v349 = sub_1BE06EE10();
      uint64_t v350 = *(void *)(v349 - 8);
      v440 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v350 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v440(v436, 1, v349))
      {
        uint64_t v351 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
        memcpy(v443, v436, *(void *)(*(void *)(v351 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v350 + 16))(v443, v436, v349);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v350 + 56))(v443, 0, 1, v349);
      }
      uint64_t v4 = v445;
      uint64_t v32 = v446;
      uint64_t v361 = v343[8];
      long long v362 = &v341[v361];
      long long v363 = &v342[v361];
      *(void *)long long v362 = *(void *)v363;
      *((void *)v362 + 1) = *((void *)v363 + 1);
      v341[v343[9]] = v342[v343[9]];
      uint64_t v364 = v343[10];
      long long v365 = &v341[v364];
      long long v366 = &v342[v364];
      *(void *)long long v365 = *(void *)v366;
      *((void *)v365 + 1) = *((void *)v366 + 1);
      *(void *)&v341[v343[11]] = *(void *)&v342[v343[11]];
      *(void *)&v341[v343[12]] = *(void *)&v342[v343[12]];
      *(void *)&v341[v343[13]] = *(void *)&v342[v343[13]];
      uint64_t v367 = v343[14];
      long long v368 = &v341[v367];
      long long v369 = &v342[v367];
      *(void *)long long v368 = *(void *)v369;
      *((void *)v368 + 1) = *((void *)v369 + 1);
      long long v370 = *(void (**)(void *, void, uint64_t, int *))(v344 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v370(v341, 0, 1, v343);
      goto LABEL_184;
    }
LABEL_178:
    uint64_t v352 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E20);
    memcpy(v341, v342, *(void *)(*(void *)(v352 - 8) + 64));
LABEL_184:
    long long v371 = v444;
    goto LABEL_185;
  }
  if (v347)
  {
    sub_1BE0446A0((uint64_t)v341, type metadata accessor for EventAttendeeModelObject);
    goto LABEL_178;
  }
  *(void *)uint64_t v341 = *(void *)v342;
  *((void *)v341 + 1) = *((void *)v342 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v341 + 2) = *((void *)v342 + 2);
  *((void *)v341 + 3) = *((void *)v342 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v341 + 4) = *((void *)v342 + 4);
  *((void *)v341 + 5) = *((void *)v342 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v353 = v343[7];
  long long v354 = &v341[v353];
  long long v355 = &v342[v353];
  uint64_t v356 = sub_1BE06EE10();
  uint64_t v357 = *(void *)(v356 - 8);
  long long v358 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v357 + 48);
  int v359 = v358(v354, 1, v356);
  int v360 = v358(v355, 1, v356);
  if (!v359)
  {
    if (!v360)
    {
      (*(void (**)(char *, char *, uint64_t))(v357 + 24))(v354, v355, v356);
      goto LABEL_217;
    }
    (*(void (**)(char *, uint64_t))(v357 + 8))(v354, v356);
    goto LABEL_216;
  }
  if (v360)
  {
LABEL_216:
    uint64_t v412 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v354, v355, *(void *)(*(void *)(v412 - 8) + 64));
    goto LABEL_217;
  }
  (*(void (**)(char *, char *, uint64_t))(v357 + 16))(v354, v355, v356);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v357 + 56))(v354, 0, 1, v356);
LABEL_217:
  long long v371 = v444;
  uint64_t v4 = v445;
  uint64_t v32 = v446;
  uint64_t v413 = v343[8];
  uint64_t v414 = &v341[v413];
  unint64_t v415 = &v342[v413];
  *(void *)uint64_t v414 = *(void *)v415;
  *((void *)v414 + 1) = *((void *)v415 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v341[v343[9]] = v342[v343[9]];
  uint64_t v416 = v343[10];
  v417 = &v341[v416];
  v418 = &v342[v416];
  *(void *)v417 = *(void *)v418;
  *((void *)v417 + 1) = *((void *)v418 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v341[v343[11]] = *(void *)&v342[v343[11]];
  *(void *)&v341[v343[12]] = *(void *)&v342[v343[12]];
  *(void *)&v341[v343[13]] = *(void *)&v342[v343[13]];
  uint64_t v419 = v343[14];
  v420 = &v341[v419];
  v421 = &v342[v419];
  *(void *)v420 = *(void *)v421;
  *((void *)v420 + 1) = *((void *)v421 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_185:
  uint64_t v372 = v32[35];
  long long v373 = (char *)v371 + v372;
  long long v374 = &v4[v372];
  uint64_t v375 = sub_1BE06EE10();
  uint64_t v376 = *(void *)(v375 - 8);
  long long v377 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v376 + 48);
  int v378 = v377(v373, 1, v375);
  int v379 = v377(v374, 1, v375);
  if (v378)
  {
    if (!v379)
    {
      (*(void (**)(char *, char *, uint64_t))(v376 + 16))(v373, v374, v375);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v376 + 56))(v373, 0, 1, v375);
      goto LABEL_191;
    }
    goto LABEL_190;
  }
  if (v379)
  {
    (*(void (**)(char *, uint64_t))(v376 + 8))(v373, v375);
LABEL_190:
    uint64_t v380 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v373, v374, *(void *)(*(void *)(v380 - 8) + 64));
    goto LABEL_191;
  }
  (*(void (**)(char *, char *, uint64_t))(v376 + 24))(v373, v374, v375);
LABEL_191:
  *((unsigned char *)v371 + v446[36]) = v4[v446[36]];
  *((unsigned char *)v371 + v446[37]) = v4[v446[37]];
  uint64_t v381 = v446[38];
  long long v382 = (char *)v371 + v381;
  long long v383 = &v4[v381];
  int v384 = v377((char *)v371 + v381, 1, v375);
  int v385 = v377(v383, 1, v375);
  if (v384)
  {
    if (!v385)
    {
      (*(void (**)(char *, char *, uint64_t))(v376 + 16))(v382, v383, v375);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v376 + 56))(v382, 0, 1, v375);
      goto LABEL_197;
    }
    goto LABEL_196;
  }
  if (v385)
  {
    (*(void (**)(char *, uint64_t))(v376 + 8))(v382, v375);
LABEL_196:
    uint64_t v386 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v382, v383, *(void *)(*(void *)(v386 - 8) + 64));
    goto LABEL_197;
  }
  (*(void (**)(char *, char *, uint64_t))(v376 + 24))(v382, v383, v375);
LABEL_197:
  uint64_t v387 = v446[39];
  uint64_t v388 = (uint64_t)v371 + v387;
  long long v389 = &v4[v387];
  uint64_t v390 = *(void *)((char *)v371 + v387 + 16);
  uint64_t v391 = *(void *)&v4[v387 + 16];
  if (v390 == 1)
  {
    if (v391 == 1)
    {
      long long v392 = *(_OWORD *)v389;
      long long v393 = *((_OWORD *)v389 + 1);
      long long v394 = *((_OWORD *)v389 + 2);
      *(void *)(v388 + 48) = *((void *)v389 + 6);
      *(_OWORD *)(v388 + 16) = v393;
      *(_OWORD *)(v388 + 32) = v394;
      *(_OWORD *)uint64_t v388 = v392;
    }
    else
    {
      *(unsigned char *)uint64_t v388 = *v389;
      *(void *)(v388 + 8) = *((void *)v389 + 1);
      *(void *)(v388 + 16) = *((void *)v389 + 2);
      uint64_t v398 = *((void *)v389 + 4);
      swift_bridgeObjectRetain();
      if (v398)
      {
        *(void *)(v388 + 24) = *((void *)v389 + 3);
        *(void *)(v388 + 32) = *((void *)v389 + 4);
        uint64_t v399 = *((void *)v389 + 5);
        unint64_t v400 = *((void *)v389 + 6);
        swift_bridgeObjectRetain();
        sub_1BDF840AC(v399, v400);
        *(void *)(v388 + 40) = v399;
        *(void *)(v388 + 48) = v400;
      }
      else
      {
        long long v408 = *(_OWORD *)(v389 + 40);
        *(_OWORD *)(v388 + 24) = *(_OWORD *)(v389 + 24);
        *(_OWORD *)(v388 + 40) = v408;
      }
      long long v371 = v444;
    }
  }
  else if (v391 == 1)
  {
    sub_1BE04E438(v388);
    long long v396 = *((_OWORD *)v389 + 1);
    long long v395 = *((_OWORD *)v389 + 2);
    long long v397 = *(_OWORD *)v389;
    *(void *)(v388 + 48) = *((void *)v389 + 6);
    *(_OWORD *)(v388 + 16) = v396;
    *(_OWORD *)(v388 + 32) = v395;
    *(_OWORD *)uint64_t v388 = v397;
  }
  else
  {
    *(unsigned char *)uint64_t v388 = *v389;
    *(void *)(v388 + 8) = *((void *)v389 + 1);
    *(void *)(v388 + 16) = *((void *)v389 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v401 = (_OWORD *)(v388 + 24);
    long long v402 = v389 + 24;
    uint64_t v403 = *((void *)v389 + 4);
    if (*(void *)(v388 + 32))
    {
      if (v403)
      {
        *(void *)(v388 + 24) = *((void *)v389 + 3);
        *(void *)(v388 + 32) = *((void *)v389 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v404 = *((void *)v389 + 5);
        unint64_t v405 = *((void *)v389 + 6);
        sub_1BDF840AC(v404, v405);
        uint64_t v406 = *(void *)(v388 + 40);
        unint64_t v407 = *(void *)(v388 + 48);
        *(void *)(v388 + 40) = v404;
        *(void *)(v388 + 48) = v405;
        sub_1BDF841A4(v406, v407);
      }
      else
      {
        sub_1BDFDC130(v388 + 24);
        long long v411 = *(_OWORD *)(v389 + 40);
        *long long v401 = *v402;
        *(_OWORD *)(v388 + 40) = v411;
      }
    }
    else if (v403)
    {
      *(void *)(v388 + 24) = *((void *)v389 + 3);
      *(void *)(v388 + 32) = *((void *)v389 + 4);
      uint64_t v409 = *((void *)v389 + 5);
      unint64_t v410 = *((void *)v389 + 6);
      swift_bridgeObjectRetain();
      sub_1BDF840AC(v409, v410);
      *(void *)(v388 + 40) = v409;
      *(void *)(v388 + 48) = v410;
    }
    else
    {
      long long v422 = *(_OWORD *)(v389 + 40);
      *long long v401 = *v402;
      *(_OWORD *)(v388 + 40) = v422;
    }
  }
  *((unsigned char *)v371 + v446[40]) = v4[v446[40]];
  *((unsigned char *)v371 + v446[41]) = v4[v446[41]];
  *((unsigned char *)v371 + v446[42]) = v4[v446[42]];
  return v371;
}

uint64_t sub_1BE04E3E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1BE04E438(uint64_t a1)
{
  return a1;
}

char *initializeWithTake for EventModelObject(char *a1, char *a2, int *a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v7 = a3[7];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_1BE06EEE0();
  uint64_t v139 = *(void **)(v10 - 8);
  uint64_t v11 = (void (*)(char *, char *, uint64_t))v139[4];
  v11(v8, v9, v10);
  long long v136 = v11;
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v12 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v12] = a2[v12];
  uint64_t v13 = a3[11];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_1BE06F140();
  uint64_t v17 = *(void *)(v16 - 8);
  int v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v15, 1, v16))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v20 = a3[12];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  if (v18(&a2[v20], 1, v16))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v22, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
  }
  uint64_t v24 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v18(&a2[v24], 1, v16))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v25, v26, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v25, 0, 1, v16);
  }
  uint64_t v28 = a3[15];
  int v29 = &a1[v28];
  int v30 = &a2[v28];
  uint64_t v31 = type metadata accessor for EventVirtualConferenceModelObject(0);
  uint64_t v32 = *(void *)(v31 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E18);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    uint64_t v137 = v10;
    *(_OWORD *)int v29 = *(_OWORD *)v30;
    *((void *)v29 + 2) = *((void *)v30 + 2);
    *(_OWORD *)(v29 + 24) = *(_OWORD *)(v30 + 24);
    *(_OWORD *)(v29 + 40) = *(_OWORD *)(v30 + 40);
    v29[56] = v30[56];
    *((void *)v29 + 8) = *((void *)v30 + 8);
    uint64_t v34 = *(int *)(v31 + 40);
    __dst = &v29[v34];
    uint64_t v35 = &v30[v34];
    uint64_t v36 = sub_1BE06EE10();
    uint64_t v37 = *(void *)(v36 - 8);
    long long v133 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
    if (v133(v35, 1, v36))
    {
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(__dst, v35, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(__dst, v35, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
    }
    uint64_t v39 = *(int *)(v31 + 44);
    int v40 = &v29[v39];
    uint64_t v41 = &v30[v39];
    if (v133(v41, 1, v36))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v40, v41, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v36);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    uint64_t v10 = v137;
  }
  uint64_t v43 = a3[17];
  *(_OWORD *)&a1[a3[16]] = *(_OWORD *)&a2[a3[16]];
  *(_OWORD *)&a1[v43] = *(_OWORD *)&a2[v43];
  uint64_t v44 = a3[19];
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  size_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  long long v47 = *((_OWORD *)v46 + 1);
  *(_OWORD *)size_t v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v47;
  long long v48 = *((_OWORD *)v46 + 5);
  *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
  *((_OWORD *)v45 + 5) = v48;
  long long v49 = *((_OWORD *)v46 + 3);
  *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
  *((_OWORD *)v45 + 3) = v49;
  long long v50 = *((_OWORD *)v46 + 10);
  long long v51 = *((_OWORD *)v46 + 8);
  *((_OWORD *)v45 + 9) = *((_OWORD *)v46 + 9);
  *((_OWORD *)v45 + 10) = v50;
  long long v52 = *((_OWORD *)v46 + 7);
  *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
  *((_OWORD *)v45 + 7) = v52;
  *((_OWORD *)v45 + 8) = v51;
  uint64_t v53 = a3[20];
  uint64_t v54 = a3[21];
  uint64_t v55 = &a1[v53];
  uint64_t v56 = &a2[v53];
  long long v57 = *((_OWORD *)v56 + 1);
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  *((_OWORD *)v55 + 1) = v57;
  long long v58 = *((_OWORD *)v56 + 5);
  *((_OWORD *)v55 + 4) = *((_OWORD *)v56 + 4);
  *((_OWORD *)v55 + 5) = v58;
  long long v59 = *((_OWORD *)v56 + 3);
  *((_OWORD *)v55 + 2) = *((_OWORD *)v56 + 2);
  *((_OWORD *)v55 + 3) = v59;
  long long v60 = *((_OWORD *)v56 + 10);
  long long v61 = *((_OWORD *)v56 + 8);
  *((_OWORD *)v55 + 9) = *((_OWORD *)v56 + 9);
  *((_OWORD *)v55 + 10) = v60;
  long long v62 = *((_OWORD *)v56 + 7);
  *((_OWORD *)v55 + 6) = *((_OWORD *)v56 + 6);
  *((_OWORD *)v55 + 7) = v62;
  *((_OWORD *)v55 + 8) = v61;
  uint64_t v63 = &a1[v54];
  uint64_t v64 = &a2[v54];
  long long v65 = *((_OWORD *)v64 + 1);
  *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
  *((_OWORD *)v63 + 1) = v65;
  long long v66 = *((_OWORD *)v64 + 5);
  *((_OWORD *)v63 + 4) = *((_OWORD *)v64 + 4);
  *((_OWORD *)v63 + 5) = v66;
  long long v67 = *((_OWORD *)v64 + 3);
  *((_OWORD *)v63 + 2) = *((_OWORD *)v64 + 2);
  *((_OWORD *)v63 + 3) = v67;
  long long v68 = *((_OWORD *)v64 + 10);
  long long v69 = *((_OWORD *)v64 + 8);
  *((_OWORD *)v63 + 9) = *((_OWORD *)v64 + 9);
  *((_OWORD *)v63 + 10) = v68;
  long long v70 = *((_OWORD *)v64 + 7);
  *((_OWORD *)v63 + 6) = *((_OWORD *)v64 + 6);
  *((_OWORD *)v63 + 7) = v70;
  *((_OWORD *)v63 + 8) = v69;
  uint64_t v71 = a3[23];
  *(void *)&a1[a3[22]] = *(void *)&a2[a3[22]];
  *(void *)&a1[v71] = *(void *)&a2[v71];
  uint64_t v72 = a3[24];
  long long v73 = &a1[v72];
  long long v74 = &a2[v72];
  long long v75 = (int *)type metadata accessor for EventCalendarModelObject();
  uint64_t v76 = *((void *)v75 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v76 + 48))(v74, 1, v75))
  {
    uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
    memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
  }
  else
  {
    uint64_t v138 = v10;
    *(_OWORD *)long long v73 = *(_OWORD *)v74;
    *((void *)v73 + 2) = *((void *)v74 + 2);
    *(_OWORD *)(v73 + 24) = *(_OWORD *)(v74 + 24);
    *(_OWORD *)(v73 + 40) = *(_OWORD *)(v74 + 40);
    *((void *)v73 + 7) = *((void *)v74 + 7);
    *((_OWORD *)v73 + 4) = *((_OWORD *)v74 + 4);
    *(_OWORD *)(v73 + 73) = *(_OWORD *)(v74 + 73);
    v73[89] = v74[89];
    *((void *)v73 + 12) = *((void *)v74 + 12);
    *(_OWORD *)(v73 + 184) = *(_OWORD *)(v74 + 184);
    *(_OWORD *)(v73 + 200) = *(_OWORD *)(v74 + 200);
    *(_OWORD *)(v73 + 216) = *(_OWORD *)(v74 + 216);
    *(void *)(v73 + 231) = *(void *)(v74 + 231);
    *(_OWORD *)(v73 + 120) = *(_OWORD *)(v74 + 120);
    *(_OWORD *)(v73 + 136) = *(_OWORD *)(v74 + 136);
    *(_OWORD *)(v73 + 152) = *(_OWORD *)(v74 + 152);
    *(_OWORD *)(v73 + 168) = *(_OWORD *)(v74 + 168);
    *(_OWORD *)(v73 + 104) = *(_OWORD *)(v74 + 104);
    *(_DWORD *)(v73 + 239) = *(_DWORD *)(v74 + 239);
    *(_WORD *)(v73 + 243) = *(_WORD *)(v74 + 243);
    *(_OWORD *)(v73 + 248) = *(_OWORD *)(v74 + 248);
    *((void *)v73 + 33) = *((void *)v74 + 33);
    uint64_t v78 = v75[21];
    __dsta = &v73[v78];
    long long v79 = &v74[v78];
    uint64_t v80 = sub_1BE06EE10();
    uint64_t v81 = *(void *)(v80 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
    {
      uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(__dsta, v79, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 32))(__dsta, v79, v80);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(__dsta, 0, 1, v80);
    }
    uint64_t v10 = v138;
    *(_OWORD *)&v73[v75[22]] = *(_OWORD *)&v74[v75[22]];
    *(_OWORD *)&v73[v75[23]] = *(_OWORD *)&v74[v75[23]];
    v73[v75[24]] = v74[v75[24]];
    (*(void (**)(char *, void, uint64_t, int *))(v76 + 56))(v73, 0, 1, v75);
  }
  uint64_t v83 = a3[26];
  *(void *)&a1[a3[25]] = *(void *)&a2[a3[25]];
  *(void *)&a1[v83] = *(void *)&a2[v83];
  uint64_t v84 = a3[28];
  *(void *)&a1[a3[27]] = *(void *)&a2[a3[27]];
  *(_OWORD *)&a1[v84] = *(_OWORD *)&a2[v84];
  uint64_t v85 = a3[30];
  *(void *)&a1[a3[29]] = *(void *)&a2[a3[29]];
  long long v86 = &a1[v85];
  long long v87 = &a2[v85];
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v139[6])(&a2[v85], 1, v10))
  {
    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
  }
  else
  {
    v136(v86, v87, v10);
    ((void (*)(char *, void, uint64_t, uint64_t))v139[7])(v86, 0, 1, v10);
  }
  uint64_t v89 = a3[32];
  *(void *)&a1[a3[31]] = *(void *)&a2[a3[31]];
  unint64_t v90 = &a1[v89];
  id v91 = &a2[v89];
  long long v92 = (int *)type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v93 = *((void *)v92 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v93 + 48))(v91, 1, v92))
  {
    uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
    memcpy(v90, v91, *(void *)(*(void *)(v94 - 8) + 64));
  }
  else
  {
    long long v95 = *((_OWORD *)v91 + 1);
    *(_OWORD *)unint64_t v90 = *(_OWORD *)v91;
    *((_OWORD *)v90 + 1) = v95;
    *((_OWORD *)v90 + 2) = *((_OWORD *)v91 + 2);
    uint64_t v96 = v92[7];
    unint64_t v140 = &v90[v96];
    uint64_t v97 = &v91[v96];
    uint64_t v98 = sub_1BE06EE10();
    uint64_t v99 = *(void *)(v98 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
    {
      uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(v140, v97, *(void *)(*(void *)(v100 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v99 + 32))(v140, v97, v98);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v140, 0, 1, v98);
    }
    *(_OWORD *)&v90[v92[8]] = *(_OWORD *)&v91[v92[8]];
    v90[v92[9]] = v91[v92[9]];
    *(_OWORD *)&v90[v92[10]] = *(_OWORD *)&v91[v92[10]];
    *(void *)&v90[v92[11]] = *(void *)&v91[v92[11]];
    (*(void (**)(char *, void, uint64_t, int *))(v93 + 56))(v90, 0, 1, v92);
  }
  uint64_t v101 = a3[34];
  *(void *)&a1[a3[33]] = *(void *)&a2[a3[33]];
  long long v102 = &a1[v101];
  uint64_t v103 = &a2[v101];
  uint64_t v104 = (int *)type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v105 = *((void *)v104 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v105 + 48))(v103, 1, v104))
  {
    uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E20);
    memcpy(v102, v103, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    long long v107 = *((_OWORD *)v103 + 1);
    *(_OWORD *)long long v102 = *(_OWORD *)v103;
    *((_OWORD *)v102 + 1) = v107;
    *((_OWORD *)v102 + 2) = *((_OWORD *)v103 + 2);
    uint64_t v108 = v104[7];
    id v141 = &v102[v108];
    long long v109 = &v103[v108];
    uint64_t v110 = sub_1BE06EE10();
    uint64_t v111 = *(void *)(v110 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v109, 1, v110))
    {
      uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
      memcpy(v141, v109, *(void *)(*(void *)(v112 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v141, v109, v110);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v111 + 56))(v141, 0, 1, v110);
    }
    *(_OWORD *)&v102[v104[8]] = *(_OWORD *)&v103[v104[8]];
    v102[v104[9]] = v103[v104[9]];
    *(_OWORD *)&v102[v104[10]] = *(_OWORD *)&v103[v104[10]];
    *(void *)&v102[v104[11]] = *(void *)&v103[v104[11]];
    *(void *)&v102[v104[12]] = *(void *)&v103[v104[12]];
    *(void *)&v102[v104[13]] = *(void *)&v103[v104[13]];
    *(_OWORD *)&v102[v104[14]] = *(_OWORD *)&v103[v104[14]];
    (*(void (**)(char *, void, uint64_t, int *))(v105 + 56))(v102, 0, 1, v104);
  }
  uint64_t v113 = a3[35];
  long long v114 = &a1[v113];
  long long v115 = &a2[v113];
  uint64_t v116 = sub_1BE06EE10();
  uint64_t v117 = *(void *)(v116 - 8);
  uint64_t v118 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48);
  if (v118(v115, 1, v116))
  {
    uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v114, v115, *(void *)(*(void *)(v119 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v114, v115, v116);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(v114, 0, 1, v116);
  }
  uint64_t v120 = a3[37];
  a1[a3[36]] = a2[a3[36]];
  a1[v120] = a2[v120];
  uint64_t v121 = a3[38];
  long long v122 = &a1[v121];
  long long v123 = &a2[v121];
  if (v118(&a2[v121], 1, v116))
  {
    uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v122, v123, v116);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v117 + 56))(v122, 0, 1, v116);
  }
  uint64_t v125 = a3[39];
  uint64_t v126 = a3[40];
  long long v127 = &a1[v125];
  long long v128 = &a2[v125];
  long long v129 = *((_OWORD *)v128 + 1);
  *(_OWORD *)long long v127 = *(_OWORD *)v128;
  *((_OWORD *)v127 + 1) = v129;
  long long v130 = *((_OWORD *)v128 + 2);
  *((void *)v127 + 6) = *((void *)v128 + 6);
  *((_OWORD *)v127 + 2) = v130;
  a1[v126] = a2[v126];
  uint64_t v131 = a3[42];
  a1[a3[41]] = a2[a3[41]];
  a1[v131] = a2[v131];
  return a1;
}

char *assignWithTake for EventModelObject(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *((void *)a2 + 3);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *((void *)a2 + 5);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_1BE06EEE0();
  uint64_t v321 = *(void *)(v12 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v321 + 40);
  v13(v10, v11, v12);
  __src = (void *)v12;
  long long v318 = (void (*)(char *, char *, void *))v13;
  v13(&a1[a3[8]], &a2[a3[8]], v12);
  uint64_t v14 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v14] = a2[v14];
  uint64_t v15 = a3[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_1BE06F140();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  LODWORD(v13) = v20(v16, 1, v18);
  int v21 = v20(v17, 1, v18);
  if (v13)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
    memcpy(v16, v17, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v16, v17, v18);
LABEL_7:
  uint64_t v23 = a3[12];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  int v26 = v20(&a1[v23], 1, v18);
  int v27 = v20(v25, 1, v18);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v25, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v24, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, v18);
LABEL_12:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v24, v25, v18);
LABEL_13:
  uint64_t v29 = a3[14];
  a1[a3[13]] = a2[a3[13]];
  int v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  int v32 = v20(&a1[v29], 1, v18);
  int v33 = v20(v31, 1, v18);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v30, v31, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v30, 0, 1, v18);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v30, v18);
LABEL_18:
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v30, v31, v18);
LABEL_19:
  uint64_t v35 = a3[15];
  uint64_t v36 = (uint64_t)&a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = type metadata accessor for EventVirtualConferenceModelObject(0);
  uint64_t v39 = *(void *)(v38 - 8);
  int v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40((uint64_t)v37, 1, v38);
  if (!v41)
  {
    if (v42)
    {
      sub_1BE0446A0(v36, type metadata accessor for EventVirtualConferenceModelObject);
      goto LABEL_25;
    }
    uint64_t v51 = *((void *)v37 + 1);
    *(void *)uint64_t v36 = *(void *)v37;
    *(void *)(v36 + 8) = v51;
    swift_bridgeObjectRelease();
    *(void *)(v36 + 16) = *((void *)v37 + 2);
    swift_bridgeObjectRelease();
    uint64_t v52 = *((void *)v37 + 4);
    *(void *)(v36 + 24) = *((void *)v37 + 3);
    *(void *)(v36 + 32) = v52;
    swift_bridgeObjectRelease();
    uint64_t v53 = *((void *)v37 + 6);
    *(void *)(v36 + 40) = *((void *)v37 + 5);
    *(void *)(v36 + 48) = v53;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v36 + 56) = v37[56];
    *(void *)(v36 + 64) = *((void *)v37 + 8);
    uint64_t v54 = *(int *)(v38 + 40);
    uint64_t v55 = (void *)(v36 + v54);
    __dsta = &v37[v54];
    uint64_t v56 = sub_1BE06EE10();
    uint64_t v309 = *(void *)(v56 - 8);
    int v312 = v55;
    long long v57 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v309 + 48);
    LODWORD(v55) = v57(v55, 1, v56);
    int v58 = v57(__dsta, 1, v56);
    if (v55)
    {
      if (!v58)
      {
        (*(void (**)(void *, char *, uint64_t))(v309 + 32))(v312, __dsta, v56);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v309 + 56))(v312, 0, 1, v56);
        goto LABEL_130;
      }
      size_t v59 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020) - 8) + 64);
      long long v60 = v312;
    }
    else
    {
      if (!v58)
      {
        (*(void (**)(void *, char *, uint64_t))(v309 + 40))(v312, __dsta, v56);
        goto LABEL_130;
      }
      (*(void (**)(void *, uint64_t))(v309 + 8))(v312, v56);
      size_t v59 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020) - 8) + 64);
      long long v60 = v312;
    }
    memcpy(v60, __dsta, v59);
LABEL_130:
    uint64_t v216 = *(int *)(v38 + 44);
    uint64_t v217 = (void *)(v36 + v216);
    uint64_t v218 = &v37[v216];
    int v219 = v57(v217, 1, v56);
    int v220 = v57(v218, 1, v56);
    if (v219)
    {
      if (!v220)
      {
        (*(void (**)(void *, char *, uint64_t))(v309 + 32))(v217, v218, v56);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v309 + 56))(v217, 0, 1, v56);
        goto LABEL_38;
      }
    }
    else
    {
      if (!v220)
      {
        (*(void (**)(void *, char *, uint64_t))(v309 + 40))(v217, v218, v56);
        goto LABEL_38;
      }
      (*(void (**)(void *, uint64_t))(v309 + 8))(v217, v56);
    }
    size_t v48 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020) - 8) + 64);
    long long v49 = v217;
    long long v50 = v218;
LABEL_26:
    memcpy(v49, v50, v48);
    goto LABEL_38;
  }
  if (v42)
  {
LABEL_25:
    size_t v48 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E18) - 8) + 64);
    long long v49 = (void *)v36;
    long long v50 = v37;
    goto LABEL_26;
  }
  *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  *(void *)(v36 + 16) = *((void *)v37 + 2);
  *(_OWORD *)(v36 + 24) = *(_OWORD *)(v37 + 24);
  *(_OWORD *)(v36 + 40) = *(_OWORD *)(v37 + 40);
  *(unsigned char *)(v36 + 56) = v37[56];
  *(void *)(v36 + 64) = *((void *)v37 + 8);
  uint64_t v43 = *(int *)(v38 + 40);
  uint64_t v311 = v39;
  __dst = (void *)(v36 + v43);
  uint64_t v44 = &v37[v43];
  uint64_t v45 = sub_1BE06EE10();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v308 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
  if (v308(v44, 1, v45))
  {
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(__dst, v44, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v46 + 32))(__dst, v44, v45);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 1, v45);
  }
  uint64_t v61 = *(int *)(v38 + 44);
  long long v62 = (void *)(v36 + v61);
  uint64_t v63 = &v37[v61];
  if (v308(v63, 1, v45))
  {
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v62, v63, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v46 + 32))(v62, v63, v45);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(v62, 0, 1, v45);
  }
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v311 + 56))(v36, 0, 1, v38);
LABEL_38:
  uint64_t v65 = a3[16];
  long long v66 = &a1[v65];
  long long v67 = (uint64_t *)&a2[v65];
  uint64_t v69 = *v67;
  uint64_t v68 = v67[1];
  *(void *)long long v66 = v69;
  *((void *)v66 + 1) = v68;
  swift_bridgeObjectRelease();
  uint64_t v70 = a3[17];
  uint64_t v71 = &a1[v70];
  uint64_t v72 = (uint64_t *)&a2[v70];
  uint64_t v74 = *v72;
  uint64_t v73 = v72[1];
  *(void *)uint64_t v71 = v74;
  *((void *)v71 + 1) = v73;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  swift_bridgeObjectRelease();
  uint64_t v75 = a3[19];
  uint64_t v76 = (uint64_t)&a1[v75];
  uint64_t v77 = &a2[v75];
  if (*(void *)&a1[v75 + 8] == 1)
  {
LABEL_41:
    long long v79 = *((_OWORD *)v77 + 9);
    *(_OWORD *)(v76 + 128) = *((_OWORD *)v77 + 8);
    *(_OWORD *)(v76 + 144) = v79;
    *(_OWORD *)(v76 + 160) = *((_OWORD *)v77 + 10);
    long long v80 = *((_OWORD *)v77 + 5);
    *(_OWORD *)(v76 + 64) = *((_OWORD *)v77 + 4);
    *(_OWORD *)(v76 + 80) = v80;
    long long v81 = *((_OWORD *)v77 + 7);
    *(_OWORD *)(v76 + 96) = *((_OWORD *)v77 + 6);
    *(_OWORD *)(v76 + 112) = v81;
    long long v82 = *((_OWORD *)v77 + 1);
    *(_OWORD *)uint64_t v76 = *(_OWORD *)v77;
    *(_OWORD *)(v76 + 16) = v82;
    long long v83 = *((_OWORD *)v77 + 3);
    *(_OWORD *)(v76 + 32) = *((_OWORD *)v77 + 2);
    *(_OWORD *)(v76 + 48) = v83;
    goto LABEL_42;
  }
  uint64_t v78 = *((void *)v77 + 1);
  if (v78 == 1)
  {
    sub_1BE04E3E4(v76);
    goto LABEL_41;
  }
  *(void *)uint64_t v76 = *(void *)v77;
  *(void *)(v76 + 8) = v78;
  swift_bridgeObjectRelease();
  uint64_t v119 = *(void **)(v76 + 16);
  *(void *)(v76 + 16) = *((void *)v77 + 2);

  *(void *)(v76 + 24) = *((void *)v77 + 3);
  uint64_t v120 = *((void *)v77 + 5);
  *(void *)(v76 + 32) = *((void *)v77 + 4);
  *(void *)(v76 + 40) = v120;
  swift_bridgeObjectRelease();
  uint64_t v121 = *((void *)v77 + 7);
  *(void *)(v76 + 48) = *((void *)v77 + 6);
  *(void *)(v76 + 56) = v121;
  swift_bridgeObjectRelease();
  long long v122 = v77 + 64;
  unint64_t v123 = *(void *)(v76 + 72);
  if (v123 >> 60 == 15) {
    goto LABEL_61;
  }
  unint64_t v124 = *((void *)v77 + 9);
  if (v124 >> 60 == 15)
  {
    sub_1BDFCECD8(v76 + 64);
LABEL_61:
    *(_OWORD *)(v76 + 64) = *v122;
    goto LABEL_95;
  }
  uint64_t v180 = *(void *)(v76 + 64);
  *(void *)(v76 + 64) = *(void *)v122;
  *(void *)(v76 + 72) = v124;
  sub_1BDF841A4(v180, v123);
LABEL_95:
  *(unsigned char *)(v76 + 80) = v77[80];
  if (*(void *)(v76 + 104) == 1)
  {
LABEL_98:
    long long v182 = *(_OWORD *)(v77 + 136);
    *(_OWORD *)(v76 + 120) = *(_OWORD *)(v77 + 120);
    *(_OWORD *)(v76 + 136) = v182;
    *(_OWORD *)(v76 + 152) = *(_OWORD *)(v77 + 152);
    *(void *)(v76 + 168) = *((void *)v77 + 21);
    long long v183 = *(_OWORD *)(v77 + 104);
    *(_OWORD *)(v76 + 88) = *(_OWORD *)(v77 + 88);
    *(_OWORD *)(v76 + 104) = v183;
    goto LABEL_42;
  }
  uint64_t v181 = *((void *)v77 + 13);
  if (v181 == 1)
  {
    sub_1BDFEAFC0(v76 + 88);
    goto LABEL_98;
  }
  *(_OWORD *)(v76 + 88) = *(_OWORD *)(v77 + 88);
  *(void *)(v76 + 104) = v181;
  swift_bridgeObjectRelease();
  uint64_t v192 = *((void *)v77 + 15);
  *(void *)(v76 + 112) = *((void *)v77 + 14);
  *(void *)(v76 + 120) = v192;
  swift_bridgeObjectRelease();
  uint64_t v193 = *((void *)v77 + 17);
  *(void *)(v76 + 128) = *((void *)v77 + 16);
  *(void *)(v76 + 136) = v193;
  swift_bridgeObjectRelease();
  uint64_t v194 = *((void *)v77 + 19);
  *(void *)(v76 + 144) = *((void *)v77 + 18);
  *(void *)(v76 + 152) = v194;
  swift_bridgeObjectRelease();
  uint64_t v195 = *((void *)v77 + 21);
  *(void *)(v76 + 160) = *((void *)v77 + 20);
  *(void *)(v76 + 168) = v195;
  swift_bridgeObjectRelease();
LABEL_42:
  uint64_t v84 = a3[20];
  uint64_t v85 = (uint64_t)&a1[v84];
  long long v86 = &a2[v84];
  if (*(void *)&a1[v84 + 8] == 1)
  {
LABEL_45:
    long long v88 = *((_OWORD *)v86 + 9);
    *(_OWORD *)(v85 + 128) = *((_OWORD *)v86 + 8);
    *(_OWORD *)(v85 + 144) = v88;
    *(_OWORD *)(v85 + 160) = *((_OWORD *)v86 + 10);
    long long v89 = *((_OWORD *)v86 + 5);
    *(_OWORD *)(v85 + 64) = *((_OWORD *)v86 + 4);
    *(_OWORD *)(v85 + 80) = v89;
    long long v90 = *((_OWORD *)v86 + 7);
    *(_OWORD *)(v85 + 96) = *((_OWORD *)v86 + 6);
    *(_OWORD *)(v85 + 112) = v90;
    long long v91 = *((_OWORD *)v86 + 1);
    *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
    *(_OWORD *)(v85 + 16) = v91;
    long long v92 = *((_OWORD *)v86 + 3);
    *(_OWORD *)(v85 + 32) = *((_OWORD *)v86 + 2);
    *(_OWORD *)(v85 + 48) = v92;
    goto LABEL_46;
  }
  uint64_t v87 = *((void *)v86 + 1);
  if (v87 == 1)
  {
    sub_1BE04E3E4(v85);
    goto LABEL_45;
  }
  *(void *)uint64_t v85 = *(void *)v86;
  *(void *)(v85 + 8) = v87;
  swift_bridgeObjectRelease();
  uint64_t v125 = *(void **)(v85 + 16);
  *(void *)(v85 + 16) = *((void *)v86 + 2);

  *(void *)(v85 + 24) = *((void *)v86 + 3);
  uint64_t v126 = *((void *)v86 + 5);
  *(void *)(v85 + 32) = *((void *)v86 + 4);
  *(void *)(v85 + 40) = v126;
  swift_bridgeObjectRelease();
  uint64_t v127 = *((void *)v86 + 7);
  *(void *)(v85 + 48) = *((void *)v86 + 6);
  *(void *)(v85 + 56) = v127;
  swift_bridgeObjectRelease();
  long long v128 = v86 + 64;
  unint64_t v129 = *(void *)(v85 + 72);
  if (v129 >> 60 == 15) {
    goto LABEL_65;
  }
  unint64_t v130 = *((void *)v86 + 9);
  if (v130 >> 60 == 15)
  {
    sub_1BDFCECD8(v85 + 64);
LABEL_65:
    *(_OWORD *)(v85 + 64) = *v128;
    goto LABEL_100;
  }
  uint64_t v184 = *(void *)(v85 + 64);
  *(void *)(v85 + 64) = *(void *)v128;
  *(void *)(v85 + 72) = v130;
  sub_1BDF841A4(v184, v129);
LABEL_100:
  *(unsigned char *)(v85 + 80) = v86[80];
  if (*(void *)(v85 + 104) == 1)
  {
LABEL_103:
    long long v186 = *(_OWORD *)(v86 + 136);
    *(_OWORD *)(v85 + 120) = *(_OWORD *)(v86 + 120);
    *(_OWORD *)(v85 + 136) = v186;
    *(_OWORD *)(v85 + 152) = *(_OWORD *)(v86 + 152);
    *(void *)(v85 + 168) = *((void *)v86 + 21);
    long long v187 = *(_OWORD *)(v86 + 104);
    *(_OWORD *)(v85 + 88) = *(_OWORD *)(v86 + 88);
    *(_OWORD *)(v85 + 104) = v187;
    goto LABEL_46;
  }
  uint64_t v185 = *((void *)v86 + 13);
  if (v185 == 1)
  {
    sub_1BDFEAFC0(v85 + 88);
    goto LABEL_103;
  }
  *(_OWORD *)(v85 + 88) = *(_OWORD *)(v86 + 88);
  *(void *)(v85 + 104) = v185;
  swift_bridgeObjectRelease();
  uint64_t v196 = *((void *)v86 + 15);
  *(void *)(v85 + 112) = *((void *)v86 + 14);
  *(void *)(v85 + 120) = v196;
  swift_bridgeObjectRelease();
  uint64_t v197 = *((void *)v86 + 17);
  *(void *)(v85 + 128) = *((void *)v86 + 16);
  *(void *)(v85 + 136) = v197;
  swift_bridgeObjectRelease();
  uint64_t v198 = *((void *)v86 + 19);
  *(void *)(v85 + 144) = *((void *)v86 + 18);
  *(void *)(v85 + 152) = v198;
  swift_bridgeObjectRelease();
  uint64_t v199 = *((void *)v86 + 21);
  *(void *)(v85 + 160) = *((void *)v86 + 20);
  *(void *)(v85 + 168) = v199;
  swift_bridgeObjectRelease();
LABEL_46:
  uint64_t v93 = a3[21];
  uint64_t v94 = (uint64_t)&a1[v93];
  long long v95 = &a2[v93];
  if (*(void *)&a1[v93 + 8] == 1)
  {
LABEL_49:
    long long v97 = *((_OWORD *)v95 + 9);
    *(_OWORD *)(v94 + 128) = *((_OWORD *)v95 + 8);
    *(_OWORD *)(v94 + 144) = v97;
    *(_OWORD *)(v94 + 160) = *((_OWORD *)v95 + 10);
    long long v98 = *((_OWORD *)v95 + 5);
    *(_OWORD *)(v94 + 64) = *((_OWORD *)v95 + 4);
    *(_OWORD *)(v94 + 80) = v98;
    long long v99 = *((_OWORD *)v95 + 7);
    *(_OWORD *)(v94 + 96) = *((_OWORD *)v95 + 6);
    *(_OWORD *)(v94 + 112) = v99;
    long long v100 = *((_OWORD *)v95 + 1);
    *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
    *(_OWORD *)(v94 + 16) = v100;
    long long v101 = *((_OWORD *)v95 + 3);
    *(_OWORD *)(v94 + 32) = *((_OWORD *)v95 + 2);
    *(_OWORD *)(v94 + 48) = v101;
    goto LABEL_50;
  }
  uint64_t v96 = *((void *)v95 + 1);
  if (v96 == 1)
  {
    sub_1BE04E3E4(v94);
    goto LABEL_49;
  }
  *(void *)uint64_t v94 = *(void *)v95;
  *(void *)(v94 + 8) = v96;
  swift_bridgeObjectRelease();
  uint64_t v131 = *(void **)(v94 + 16);
  *(void *)(v94 + 16) = *((void *)v95 + 2);

  *(void *)(v94 + 24) = *((void *)v95 + 3);
  uint64_t v132 = *((void *)v95 + 5);
  *(void *)(v94 + 32) = *((void *)v95 + 4);
  *(void *)(v94 + 40) = v132;
  swift_bridgeObjectRelease();
  uint64_t v133 = *((void *)v95 + 7);
  *(void *)(v94 + 48) = *((void *)v95 + 6);
  *(void *)(v94 + 56) = v133;
  swift_bridgeObjectRelease();
  long long v134 = v95 + 64;
  unint64_t v135 = *(void *)(v94 + 72);
  if (v135 >> 60 == 15) {
    goto LABEL_69;
  }
  unint64_t v136 = *((void *)v95 + 9);
  if (v136 >> 60 == 15)
  {
    sub_1BDFCECD8(v94 + 64);
LABEL_69:
    *(_OWORD *)(v94 + 64) = *v134;
    goto LABEL_105;
  }
  uint64_t v188 = *(void *)(v94 + 64);
  *(void *)(v94 + 64) = *(void *)v134;
  *(void *)(v94 + 72) = v136;
  sub_1BDF841A4(v188, v135);
LABEL_105:
  *(unsigned char *)(v94 + 80) = v95[80];
  if (*(void *)(v94 + 104) == 1)
  {
LABEL_108:
    long long v190 = *(_OWORD *)(v95 + 136);
    *(_OWORD *)(v94 + 120) = *(_OWORD *)(v95 + 120);
    *(_OWORD *)(v94 + 136) = v190;
    *(_OWORD *)(v94 + 152) = *(_OWORD *)(v95 + 152);
    *(void *)(v94 + 168) = *((void *)v95 + 21);
    long long v191 = *(_OWORD *)(v95 + 104);
    *(_OWORD *)(v94 + 88) = *(_OWORD *)(v95 + 88);
    *(_OWORD *)(v94 + 104) = v191;
    goto LABEL_50;
  }
  uint64_t v189 = *((void *)v95 + 13);
  if (v189 == 1)
  {
    sub_1BDFEAFC0(v94 + 88);
    goto LABEL_108;
  }
  *(_OWORD *)(v94 + 88) = *(_OWORD *)(v95 + 88);
  *(void *)(v94 + 104) = v189;
  swift_bridgeObjectRelease();
  uint64_t v200 = *((void *)v95 + 15);
  *(void *)(v94 + 112) = *((void *)v95 + 14);
  *(void *)(v94 + 120) = v200;
  swift_bridgeObjectRelease();
  uint64_t v201 = *((void *)v95 + 17);
  *(void *)(v94 + 128) = *((void *)v95 + 16);
  *(void *)(v94 + 136) = v201;
  swift_bridgeObjectRelease();
  uint64_t v202 = *((void *)v95 + 19);
  *(void *)(v94 + 144) = *((void *)v95 + 18);
  *(void *)(v94 + 152) = v202;
  swift_bridgeObjectRelease();
  uint64_t v203 = *((void *)v95 + 21);
  *(void *)(v94 + 160) = *((void *)v95 + 20);
  *(void *)(v94 + 168) = v203;
  swift_bridgeObjectRelease();
LABEL_50:
  uint64_t v102 = a3[23];
  *(void *)&a1[a3[22]] = *(void *)&a2[a3[22]];
  *(void *)&a1[v102] = *(void *)&a2[v102];
  uint64_t v103 = a3[24];
  uint64_t v104 = (uint64_t)&a1[v103];
  uint64_t v105 = &a2[v103];
  uint64_t v106 = (int *)type metadata accessor for EventCalendarModelObject();
  uint64_t v107 = *((void *)v106 - 1);
  uint64_t v108 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v107 + 48);
  int v109 = v108(v104, 1, v106);
  int v110 = v108((uint64_t)v105, 1, v106);
  if (!v109)
  {
    if (v110)
    {
      sub_1BE0446A0(v104, (uint64_t (*)(void))type metadata accessor for EventCalendarModelObject);
      goto LABEL_56;
    }
    uint64_t v137 = *((void *)v105 + 1);
    *(void *)uint64_t v104 = *(void *)v105;
    *(void *)(v104 + 8) = v137;
    swift_bridgeObjectRelease();
    *(_OWORD *)(v104 + 16) = *((_OWORD *)v105 + 1);
    *(void *)(v104 + 32) = *((void *)v105 + 4);
    swift_bridgeObjectRelease();
    uint64_t v138 = *((void *)v105 + 6);
    *(void *)(v104 + 40) = *((void *)v105 + 5);
    *(void *)(v104 + 48) = v138;
    swift_bridgeObjectRelease();
    *(void *)(v104 + 56) = *((void *)v105 + 7);
    *(_OWORD *)(v104 + 64) = *((_OWORD *)v105 + 4);
    *(_OWORD *)(v104 + 73) = *(_OWORD *)(v105 + 73);
    *(unsigned char *)(v104 + 89) = v105[89];
    *(void *)(v104 + 96) = *((void *)v105 + 12);
    if (*(void *)(v104 + 112))
    {
      uint64_t v139 = *((void *)v105 + 14);
      if (v139)
      {
        *(void *)(v104 + 104) = *((void *)v105 + 13);
        *(void *)(v104 + 112) = v139;
        swift_bridgeObjectRelease();
        uint64_t v140 = *((void *)v105 + 16);
        *(void *)(v104 + 120) = *((void *)v105 + 15);
        *(void *)(v104 + 128) = v140;
        swift_bridgeObjectRelease();
        *(_OWORD *)(v104 + 136) = *(_OWORD *)(v105 + 136);
        *(void *)(v104 + 152) = *((void *)v105 + 19);
        swift_bridgeObjectRelease();
        *(unsigned char *)(v104 + 160) = v105[160];
        *(unsigned char *)(v104 + 161) = v105[161];
        *(unsigned char *)(v104 + 162) = v105[162];
        *(unsigned char *)(v104 + 163) = v105[163];
        *(unsigned char *)(v104 + 164) = v105[164];
        *(void *)(v104 + 168) = *((void *)v105 + 21);
        swift_bridgeObjectRelease();
        uint64_t v141 = *((void *)v105 + 23);
        *(void *)(v104 + 176) = *((void *)v105 + 22);
        *(void *)(v104 + 184) = v141;
        *(unsigned char *)(v104 + 192) = v105[192];
        *(void *)(v104 + 200) = *((void *)v105 + 25);
        *(unsigned char *)(v104 + 208) = v105[208];
        *(_OWORD *)(v104 + 216) = *(_OWORD *)(v105 + 216);
        *(void *)(v104 + 231) = *(void *)(v105 + 231);
        goto LABEL_121;
      }
      sub_1BDFC9668(v104 + 104);
    }
    long long v204 = *(_OWORD *)(v105 + 216);
    *(_OWORD *)(v104 + 200) = *(_OWORD *)(v105 + 200);
    *(_OWORD *)(v104 + 216) = v204;
    *(void *)(v104 + 231) = *(void *)(v105 + 231);
    long long v205 = *(_OWORD *)(v105 + 152);
    *(_OWORD *)(v104 + 136) = *(_OWORD *)(v105 + 136);
    *(_OWORD *)(v104 + 152) = v205;
    long long v206 = *(_OWORD *)(v105 + 184);
    *(_OWORD *)(v104 + 168) = *(_OWORD *)(v105 + 168);
    *(_OWORD *)(v104 + 184) = v206;
    long long v207 = *(_OWORD *)(v105 + 120);
    *(_OWORD *)(v104 + 104) = *(_OWORD *)(v105 + 104);
    *(_OWORD *)(v104 + 120) = v207;
LABEL_121:
    *(unsigned char *)(v104 + 239) = v105[239];
    *(unsigned char *)(v104 + 240) = v105[240];
    *(unsigned char *)(v104 + 241) = v105[241];
    *(unsigned char *)(v104 + 242) = v105[242];
    *(unsigned char *)(v104 + 243) = v105[243];
    *(unsigned char *)(v104 + 244) = v105[244];
    uint64_t v208 = *((void *)v105 + 32);
    *(void *)(v104 + 248) = *((void *)v105 + 31);
    *(void *)(v104 + 256) = v208;
    swift_bridgeObjectRelease();
    *(void *)(v104 + 264) = *((void *)v105 + 33);
    swift_bridgeObjectRelease();
    uint64_t v209 = v106[21];
    long long v210 = (void *)(v104 + v209);
    __dstc = &v105[v209];
    uint64_t v211 = sub_1BE06EE10();
    uint64_t v310 = *(void *)(v211 - 8);
    long long v313 = v210;
    long long v212 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v310 + 48);
    LODWORD(v210) = v212(v210, 1, v211);
    int v213 = v212(__dstc, 1, v211);
    if (v210)
    {
      uint64_t v117 = __src;
      if (!v213)
      {
        (*(void (**)(void *, char *, uint64_t))(v310 + 32))(v313, __dstc, v211);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v310 + 56))(v313, 0, 1, v211);
        goto LABEL_155;
      }
      size_t v214 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020) - 8) + 64);
      long long v215 = v313;
    }
    else
    {
      uint64_t v117 = __src;
      if (!v213)
      {
        (*(void (**)(void *, char *, uint64_t))(v310 + 40))(v313, __dstc, v211);
        goto LABEL_155;
      }
      (*(void (**)(void *, uint64_t))(v310 + 8))(v313, v211);
      size_t v214 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020) - 8) + 64);
      long long v215 = v313;
    }
    memcpy(v215, __dstc, v214);
LABEL_155:
    uint64_t v256 = v106[22];
    uint64_t v257 = (void *)(v104 + v256);
    uint64_t v258 = &v105[v256];
    uint64_t v260 = *(void *)v258;
    uint64_t v259 = *((void *)v258 + 1);
    *uint64_t v257 = v260;
    v257[1] = v259;
    swift_bridgeObjectRelease();
    uint64_t v261 = v106[23];
    uint64_t v262 = (void *)(v104 + v261);
    uint64_t v263 = &v105[v261];
    uint64_t v265 = *(void *)v263;
    uint64_t v264 = *((void *)v263 + 1);
    *uint64_t v262 = v265;
    v262[1] = v264;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v104 + v106[24]) = v105[v106[24]];
    goto LABEL_57;
  }
  if (v110)
  {
LABEL_56:
    uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
    memcpy((void *)v104, v105, *(void *)(*(void *)(v116 - 8) + 64));
    uint64_t v117 = __src;
LABEL_57:
    uint64_t v118 = v321;
    goto LABEL_75;
  }
  *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
  *(void *)(v104 + 16) = *((void *)v105 + 2);
  *(_OWORD *)(v104 + 24) = *(_OWORD *)(v105 + 24);
  *(_OWORD *)(v104 + 40) = *(_OWORD *)(v105 + 40);
  *(void *)(v104 + 56) = *((void *)v105 + 7);
  *(_OWORD *)(v104 + 64) = *((_OWORD *)v105 + 4);
  *(_OWORD *)(v104 + 73) = *(_OWORD *)(v105 + 73);
  *(unsigned char *)(v104 + 89) = v105[89];
  *(void *)(v104 + 96) = *((void *)v105 + 12);
  *(_OWORD *)(v104 + 184) = *(_OWORD *)(v105 + 184);
  *(_OWORD *)(v104 + 200) = *(_OWORD *)(v105 + 200);
  *(_OWORD *)(v104 + 216) = *(_OWORD *)(v105 + 216);
  *(void *)(v104 + 231) = *(void *)(v105 + 231);
  *(_OWORD *)(v104 + 120) = *(_OWORD *)(v105 + 120);
  *(_OWORD *)(v104 + 136) = *(_OWORD *)(v105 + 136);
  *(_OWORD *)(v104 + 152) = *(_OWORD *)(v105 + 152);
  *(_OWORD *)(v104 + 168) = *(_OWORD *)(v105 + 168);
  *(_OWORD *)(v104 + 104) = *(_OWORD *)(v105 + 104);
  *(_DWORD *)(v104 + 239) = *(_DWORD *)(v105 + 239);
  *(_WORD *)(v104 + 243) = *(_WORD *)(v105 + 243);
  *(_OWORD *)(v104 + 248) = *(_OWORD *)(v105 + 248);
  *(void *)(v104 + 264) = *((void *)v105 + 33);
  uint64_t v111 = v106[21];
  __dstb = (void *)(v104 + v111);
  uint64_t v112 = &v105[v111];
  uint64_t v113 = sub_1BE06EE10();
  uint64_t v114 = *(void *)(v113 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113))
  {
    uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(__dstb, v112, *(void *)(*(void *)(v115 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v114 + 32))(__dstb, v112, v113);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(__dstb, 0, 1, v113);
  }
  uint64_t v118 = v321;
  *(_OWORD *)(v104 + v106[22]) = *(_OWORD *)&v105[v106[22]];
  *(_OWORD *)(v104 + v106[23]) = *(_OWORD *)&v105[v106[23]];
  *(unsigned char *)(v104 + v106[24]) = v105[v106[24]];
  (*(void (**)(uint64_t, void, uint64_t, int *))(v107 + 56))(v104, 0, 1, v106);
  uint64_t v117 = __src;
LABEL_75:
  uint64_t v142 = a3[26];
  *(void *)&a1[a3[25]] = *(void *)&a2[a3[25]];
  *(void *)&a1[v142] = *(void *)&a2[v142];
  *(void *)&a1[a3[27]] = *(void *)&a2[a3[27]];
  swift_bridgeObjectRelease();
  uint64_t v143 = a3[28];
  id v144 = &a1[v143];
  uint64_t v145 = (uint64_t *)&a2[v143];
  uint64_t v147 = *v145;
  uint64_t v146 = v145[1];
  *(void *)id v144 = v147;
  *((void *)v144 + 1) = v146;
  swift_bridgeObjectRelease();
  uint64_t v148 = a3[30];
  *(void *)&a1[a3[29]] = *(void *)&a2[a3[29]];
  long long v149 = &a1[v148];
  long long v150 = &a2[v148];
  long long v151 = *(uint64_t (**)(char *, uint64_t, void *))(v118 + 48);
  int v152 = v151(&a1[v148], 1, v117);
  int v153 = v151(v150, 1, v117);
  if (v152)
  {
    if (!v153)
    {
      (*(void (**)(char *, char *, void *))(v118 + 32))(v149, v150, v117);
      (*(void (**)(char *, void, uint64_t, void *))(v118 + 56))(v149, 0, 1, v117);
      goto LABEL_81;
    }
    goto LABEL_80;
  }
  if (v153)
  {
    (*(void (**)(char *, void *))(v118 + 8))(v149, v117);
LABEL_80:
    uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
    memcpy(v149, v150, *(void *)(*(void *)(v154 - 8) + 64));
    goto LABEL_81;
  }
  v318(v149, v150, v117);
LABEL_81:
  *(void *)&a1[a3[31]] = *(void *)&a2[a3[31]];
  swift_bridgeObjectRelease();
  uint64_t v155 = a3[32];
  long long v156 = &a1[v155];
  uint64_t v157 = &a2[v155];
  uint64_t v158 = (int *)type metadata accessor for EventOrganizerModelObject(0);
  uint64_t v159 = *((void *)v158 - 1);
  long long v160 = *(uint64_t (**)(void *, uint64_t, int *))(v159 + 48);
  int v161 = v160(v156, 1, v158);
  int v162 = v160(v157, 1, v158);
  if (!v161)
  {
    if (v162)
    {
      sub_1BE0446A0((uint64_t)v156, type metadata accessor for EventOrganizerModelObject);
      goto LABEL_87;
    }
    uint64_t v170 = *((void *)v157 + 1);
    *(void *)long long v156 = *(void *)v157;
    *((void *)v156 + 1) = v170;
    swift_bridgeObjectRelease();
    uint64_t v171 = *((void *)v157 + 3);
    *((void *)v156 + 2) = *((void *)v157 + 2);
    *((void *)v156 + 3) = v171;
    swift_bridgeObjectRelease();
    uint64_t v172 = *((void *)v157 + 5);
    *((void *)v156 + 4) = *((void *)v157 + 4);
    *((void *)v156 + 5) = v172;
    swift_bridgeObjectRelease();
    uint64_t v173 = v158[7];
    long long v174 = &v156[v173];
    __srcb = &v157[v173];
    uint64_t v175 = sub_1BE06EE10();
    uint64_t v319 = *(void *)(v175 - 8);
    uint64_t v322 = v174;
    long long v176 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v319 + 48);
    LODWORD(v174) = v176(v174, 1, v175);
    int v177 = v176(__srcb, 1, v175);
    if (v174)
    {
      if (!v177)
      {
        (*(void (**)(void *, char *, uint64_t))(v319 + 32))(v322, __srcb, v175);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v319 + 56))(v322, 0, 1, v175);
        goto LABEL_137;
      }
      size_t v178 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020) - 8) + 64);
      long long v179 = v322;
    }
    else
    {
      if (!v177)
      {
        (*(void (**)(void *, char *, uint64_t))(v319 + 40))(v322, __srcb, v175);
        goto LABEL_137;
      }
      (*(void (**)(void *, uint64_t))(v319 + 8))(v322, v175);
      size_t v178 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020) - 8) + 64);
      long long v179 = v322;
    }
    memcpy(v179, __srcb, v178);
LABEL_137:
    uint64_t v221 = v158[8];
    uint64_t v222 = &v156[v221];
    int v223 = (uint64_t *)&v157[v221];
    uint64_t v225 = *v223;
    uint64_t v224 = v223[1];
    *(void *)uint64_t v222 = v225;
    *((void *)v222 + 1) = v224;
    swift_bridgeObjectRelease();
    v156[v158[9]] = v157[v158[9]];
    uint64_t v226 = v158[10];
    uint64_t v227 = &v156[v226];
    long long v228 = (uint64_t *)&v157[v226];
    uint64_t v230 = *v228;
    uint64_t v229 = v228[1];
    *(void *)uint64_t v227 = v230;
    *((void *)v227 + 1) = v229;
    swift_bridgeObjectRelease();
    *(void *)&v156[v158[11]] = *(void *)&v157[v158[11]];
    goto LABEL_138;
  }
  if (v162)
  {
LABEL_87:
    uint64_t v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
    memcpy(v156, v157, *(void *)(*(void *)(v169 - 8) + 64));
    goto LABEL_138;
  }
  long long v163 = *((_OWORD *)v157 + 1);
  *(_OWORD *)long long v156 = *(_OWORD *)v157;
  *((_OWORD *)v156 + 1) = v163;
  *((_OWORD *)v156 + 2) = *((_OWORD *)v157 + 2);
  uint64_t v164 = v158[7];
  __srca = &v156[v164];
  long long v165 = &v157[v164];
  uint64_t v166 = sub_1BE06EE10();
  uint64_t v167 = *(void *)(v166 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48))(v165, 1, v166))
  {
    uint64_t v168 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(__srca, v165, *(void *)(*(void *)(v168 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v167 + 32))(__srca, v165, v166);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v167 + 56))(__srca, 0, 1, v166);
  }
  *(_OWORD *)&v156[v158[8]] = *(_OWORD *)&v157[v158[8]];
  v156[v158[9]] = v157[v158[9]];
  *(_OWORD *)&v156[v158[10]] = *(_OWORD *)&v157[v158[10]];
  *(void *)&v156[v158[11]] = *(void *)&v157[v158[11]];
  (*(void (**)(char *, void, uint64_t, int *))(v159 + 56))(v156, 0, 1, v158);
LABEL_138:
  *(void *)&a1[a3[33]] = *(void *)&a2[a3[33]];
  swift_bridgeObjectRelease();
  uint64_t v231 = a3[34];
  long long v232 = &a1[v231];
  long long v233 = &a2[v231];
  uint64_t v234 = (int *)type metadata accessor for EventAttendeeModelObject(0);
  uint64_t v235 = *((void *)v234 - 1);
  uint64_t v236 = *(uint64_t (**)(void *, uint64_t, int *))(v235 + 48);
  int v237 = v236(v232, 1, v234);
  int v238 = v236(v233, 1, v234);
  if (!v237)
  {
    if (v238)
    {
      sub_1BE0446A0((uint64_t)v232, type metadata accessor for EventAttendeeModelObject);
      goto LABEL_144;
    }
    uint64_t v246 = *((void *)v233 + 1);
    *(void *)long long v232 = *(void *)v233;
    *((void *)v232 + 1) = v246;
    swift_bridgeObjectRelease();
    uint64_t v247 = *((void *)v233 + 3);
    *((void *)v232 + 2) = *((void *)v233 + 2);
    *((void *)v232 + 3) = v247;
    swift_bridgeObjectRelease();
    uint64_t v248 = *((void *)v233 + 5);
    *((void *)v232 + 4) = *((void *)v233 + 4);
    *((void *)v232 + 5) = v248;
    swift_bridgeObjectRelease();
    uint64_t v249 = v234[7];
    long long v250 = &v232[v249];
    __srcd = &v233[v249];
    uint64_t v251 = sub_1BE06EE10();
    uint64_t v320 = *(void *)(v251 - 8);
    uint64_t v323 = v250;
    uint64_t v252 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v320 + 48);
    LODWORD(v250) = v252(v250, 1, v251);
    int v253 = v252(__srcd, 1, v251);
    if (v250)
    {
      if (!v253)
      {
        (*(void (**)(void *, char *, uint64_t))(v320 + 32))(v323, __srcd, v251);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v320 + 56))(v323, 0, 1, v251);
        goto LABEL_158;
      }
      size_t v254 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020) - 8) + 64);
      uint64_t v255 = v323;
    }
    else
    {
      if (!v253)
      {
        (*(void (**)(void *, char *, uint64_t))(v320 + 40))(v323, __srcd, v251);
        goto LABEL_158;
      }
      (*(void (**)(void *, uint64_t))(v320 + 8))(v323, v251);
      size_t v254 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020) - 8) + 64);
      uint64_t v255 = v323;
    }
    memcpy(v255, __srcd, v254);
LABEL_158:
    uint64_t v266 = v234[8];
    int v267 = &v232[v266];
    uint64_t v268 = (uint64_t *)&v233[v266];
    uint64_t v270 = *v268;
    uint64_t v269 = v268[1];
    *(void *)int v267 = v270;
    *((void *)v267 + 1) = v269;
    swift_bridgeObjectRelease();
    v232[v234[9]] = v233[v234[9]];
    uint64_t v271 = v234[10];
    uint64_t v272 = &v232[v271];
    uint64_t v273 = (uint64_t *)&v233[v271];
    uint64_t v275 = *v273;
    uint64_t v274 = v273[1];
    *(void *)uint64_t v272 = v275;
    *((void *)v272 + 1) = v274;
    swift_bridgeObjectRelease();
    *(void *)&v232[v234[11]] = *(void *)&v233[v234[11]];
    *(void *)&v232[v234[12]] = *(void *)&v233[v234[12]];
    *(void *)&v232[v234[13]] = *(void *)&v233[v234[13]];
    uint64_t v276 = v234[14];
    uint64_t v277 = &v232[v276];
    uint64_t v278 = (uint64_t *)&v233[v276];
    uint64_t v280 = *v278;
    uint64_t v279 = v278[1];
    *(void *)uint64_t v277 = v280;
    *((void *)v277 + 1) = v279;
    swift_bridgeObjectRelease();
    goto LABEL_159;
  }
  if (v238)
  {
LABEL_144:
    uint64_t v245 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E20);
    memcpy(v232, v233, *(void *)(*(void *)(v245 - 8) + 64));
    goto LABEL_159;
  }
  long long v239 = *((_OWORD *)v233 + 1);
  *(_OWORD *)long long v232 = *(_OWORD *)v233;
  *((_OWORD *)v232 + 1) = v239;
  *((_OWORD *)v232 + 2) = *((_OWORD *)v233 + 2);
  uint64_t v240 = v234[7];
  __srcc = &v232[v240];
  long long v241 = &v233[v240];
  uint64_t v242 = sub_1BE06EE10();
  uint64_t v243 = *(void *)(v242 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v243 + 48))(v241, 1, v242))
  {
    uint64_t v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(__srcc, v241, *(void *)(*(void *)(v244 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v243 + 32))(__srcc, v241, v242);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v243 + 56))(__srcc, 0, 1, v242);
  }
  *(_OWORD *)&v232[v234[8]] = *(_OWORD *)&v233[v234[8]];
  v232[v234[9]] = v233[v234[9]];
  *(_OWORD *)&v232[v234[10]] = *(_OWORD *)&v233[v234[10]];
  *(void *)&v232[v234[11]] = *(void *)&v233[v234[11]];
  *(void *)&v232[v234[12]] = *(void *)&v233[v234[12]];
  *(void *)&v232[v234[13]] = *(void *)&v233[v234[13]];
  *(_OWORD *)&v232[v234[14]] = *(_OWORD *)&v233[v234[14]];
  (*(void (**)(char *, void, uint64_t, int *))(v235 + 56))(v232, 0, 1, v234);
LABEL_159:
  uint64_t v281 = a3[35];
  uint64_t v282 = &a1[v281];
  uint64_t v283 = &a2[v281];
  uint64_t v284 = sub_1BE06EE10();
  uint64_t v285 = *(void *)(v284 - 8);
  uint64_t v286 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v285 + 48);
  int v287 = v286(v282, 1, v284);
  int v288 = v286(v283, 1, v284);
  if (v287)
  {
    if (!v288)
    {
      (*(void (**)(char *, char *, uint64_t))(v285 + 32))(v282, v283, v284);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v285 + 56))(v282, 0, 1, v284);
      goto LABEL_165;
    }
    goto LABEL_164;
  }
  if (v288)
  {
    (*(void (**)(char *, uint64_t))(v285 + 8))(v282, v284);
LABEL_164:
    uint64_t v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v282, v283, *(void *)(*(void *)(v289 - 8) + 64));
    goto LABEL_165;
  }
  (*(void (**)(char *, char *, uint64_t))(v285 + 40))(v282, v283, v284);
LABEL_165:
  uint64_t v290 = a3[37];
  a1[a3[36]] = a2[a3[36]];
  a1[v290] = a2[v290];
  uint64_t v291 = a3[38];
  uint64_t v292 = &a1[v291];
  uint64_t v293 = &a2[v291];
  int v294 = v286(&a1[v291], 1, v284);
  int v295 = v286(v293, 1, v284);
  if (v294)
  {
    if (!v295)
    {
      (*(void (**)(char *, char *, uint64_t))(v285 + 32))(v292, v293, v284);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v285 + 56))(v292, 0, 1, v284);
      goto LABEL_171;
    }
    goto LABEL_170;
  }
  if (v295)
  {
    (*(void (**)(char *, uint64_t))(v285 + 8))(v292, v284);
LABEL_170:
    uint64_t v296 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
    memcpy(v292, v293, *(void *)(*(void *)(v296 - 8) + 64));
    goto LABEL_171;
  }
  (*(void (**)(char *, char *, uint64_t))(v285 + 40))(v292, v293, v284);
LABEL_171:
  uint64_t v297 = a3[39];
  uint64_t v298 = (uint64_t)&a1[v297];
  uint64_t v299 = &a2[v297];
  if (*(void *)&a1[v297 + 16] != 1)
  {
    uint64_t v300 = *((void *)v299 + 2);
    if (v300 != 1)
    {
      *(unsigned char *)uint64_t v298 = *v299;
      *(void *)(v298 + 8) = *((void *)v299 + 1);
      *(void *)(v298 + 16) = v300;
      swift_bridgeObjectRelease();
      if (*(void *)(v298 + 32))
      {
        uint64_t v304 = *((void *)v299 + 4);
        if (v304)
        {
          *(void *)(v298 + 24) = *((void *)v299 + 3);
          *(void *)(v298 + 32) = v304;
          swift_bridgeObjectRelease();
          uint64_t v305 = *(void *)(v298 + 40);
          unint64_t v306 = *(void *)(v298 + 48);
          *(_OWORD *)(v298 + 40) = *(_OWORD *)(v299 + 40);
          sub_1BDF841A4(v305, v306);
          goto LABEL_175;
        }
        sub_1BDFDC130(v298 + 24);
      }
      long long v307 = *(_OWORD *)(v299 + 40);
      *(_OWORD *)(v298 + 24) = *(_OWORD *)(v299 + 24);
      *(_OWORD *)(v298 + 40) = v307;
      goto LABEL_175;
    }
    sub_1BE04E438(v298);
  }
  long long v301 = *((_OWORD *)v299 + 1);
  *(_OWORD *)uint64_t v298 = *(_OWORD *)v299;
  *(_OWORD *)(v298 + 16) = v301;
  *(_OWORD *)(v298 + 32) = *((_OWORD *)v299 + 2);
  *(void *)(v298 + 48) = *((void *)v299 + 6);
LABEL_175:
  uint64_t v302 = a3[41];
  a1[a3[40]] = a2[a3[40]];
  a1[v302] = a2[v302];
  a1[a3[42]] = a2[a3[42]];
  return a1;
}

uint64_t getEnumTagSinglePayload for EventModelObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1BE0515E8);
}

uint64_t sub_1BE0515E8(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1BE06EEE0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[7];
LABEL_19:
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v18(a1 + v11, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[11];
    goto LABEL_19;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E18);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a3[15];
    goto LABEL_19;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a3[24];
    goto LABEL_19;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v9 = v15;
    uint64_t v10 = *(void *)(v15 - 8);
    uint64_t v11 = a3[30];
    goto LABEL_19;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v9 = v16;
    uint64_t v10 = *(void *)(v16 - 8);
    uint64_t v11 = a3[32];
    goto LABEL_19;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E20);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v9 = v17;
    uint64_t v10 = *(void *)(v17 - 8);
    uint64_t v11 = a3[34];
    goto LABEL_19;
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[35];

  return v20(v22, a2, v21);
}

uint64_t storeEnumTagSinglePayload for EventModelObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1BE05190C);
}

uint64_t sub_1BE05190C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1BE06EEE0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[7];
LABEL_17:
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v18(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[11];
    goto LABEL_17;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E18);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v9 = v13;
    uint64_t v10 = *(void *)(v13 - 8);
    uint64_t v11 = a4[15];
    goto LABEL_17;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E10);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a3)
  {
    uint64_t v9 = v14;
    uint64_t v10 = *(void *)(v14 - 8);
    uint64_t v11 = a4[24];
    goto LABEL_17;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a3)
  {
    uint64_t v9 = v15;
    uint64_t v10 = *(void *)(v15 - 8);
    uint64_t v11 = a4[30];
    goto LABEL_17;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E28);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v9 = v16;
    uint64_t v10 = *(void *)(v16 - 8);
    uint64_t v11 = a4[32];
    goto LABEL_17;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3E20);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v9 = v17;
    uint64_t v10 = *(void *)(v17 - 8);
    uint64_t v11 = a4[34];
    goto LABEL_17;
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = v5 + a4[35];

  return v20(v22, a2, a2, v21);
}

void sub_1BE051C1C()
{
  sub_1BE06EEE0();
  if (v0 <= 0x3F)
  {
    sub_1BE051F90(319, &qword_1EA0E15C0, MEMORY[0x1E4F27D68]);
    if (v1 <= 0x3F)
    {
      sub_1BE051F90(319, &qword_1EA0E1630, (void (*)(uint64_t))type metadata accessor for EventVirtualConferenceModelObject);
      if (v2 <= 0x3F)
      {
        sub_1BE051F90(319, &qword_1EA0E15D8, (void (*)(uint64_t))type metadata accessor for EventCalendarModelObject);
        if (v3 <= 0x3F)
        {
          sub_1BE051F90(319, &qword_1EB677CC8, MEMORY[0x1E4F27928]);
          if (v4 <= 0x3F)
          {
            sub_1BE051F90(319, &qword_1EA0E1618, (void (*)(uint64_t))type metadata accessor for EventOrganizerModelObject);
            if (v5 <= 0x3F)
            {
              sub_1BE051F90(319, &qword_1EA0E1600, (void (*)(uint64_t))type metadata accessor for EventAttendeeModelObject);
              if (v6 <= 0x3F)
              {
                sub_1BE051F90(319, (unint64_t *)&qword_1EA0E15B8, MEMORY[0x1E4F276F0]);
                if (v7 <= 0x3F) {
                  swift_initStructMetadata();
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1BE051F90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1BE0709E0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for EventModelObject.EncodingConfiguration()
{
  return self;
}

uint64_t method lookup function for EventModelObject.EncodingConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EventModelObject.EncodingConfiguration);
}

uint64_t dispatch thunk of EventModelObject.EncodingConfiguration.__allocating_init(includeCalendar:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for EventModelObject.DecodingConfiguration()
{
  return self;
}

uint64_t method lookup function for EventModelObject.DecodingConfiguration(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for EventModelObject.DecodingConfiguration);
}

uint64_t dispatch thunk of EventModelObject.DecodingConfiguration.__allocating_init(calendarsById:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t getEnumTagSinglePayload for EventModelObject.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD9) {
    goto LABEL_17;
  }
  if (a2 + 39 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 39) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 39;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 39;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 39;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x28;
  int v8 = v6 - 40;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 39 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 39) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD8)
  {
    unsigned int v6 = ((a2 - 217) >> 8) + 1;
    *uint64_t result = a2 + 39;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE0521E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 39;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventModelObject.CodingKeys()
{
  return &type metadata for EventModelObject.CodingKeys;
}

unint64_t sub_1BE05221C()
{
  unint64_t result = qword_1EA0E4E08;
  if (!qword_1EA0E4E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4E08);
  }
  return result;
}

unint64_t sub_1BE052274()
{
  unint64_t result = qword_1EA0E4E10;
  if (!qword_1EA0E4E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4E10);
  }
  return result;
}

unint64_t sub_1BE0522CC()
{
  unint64_t result = qword_1EA0E4E18;
  if (!qword_1EA0E4E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4E18);
  }
  return result;
}

uint64_t sub_1BE052320(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449657571696E75 && a2 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65746144646E65 && a2 == 0xE700000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7961446C6C417369 && a2 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x736F706F72507369 && a2 == 0xEE00656D69546465 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xED0000656E6F5A65 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x5A656D6954646E65 && a2 == 0xEB00000000656E6FLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6974616F6C467369 && a2 == 0xEA0000000000676ELL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BE08DBD0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BE08D5B0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001BE08DBF0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001BE08DC10 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BE08DC30 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001BE08DC50 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BE08DC80 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x69546C6576617274 && a2 == 0xEA0000000000656DLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BE08DCA0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x7261646E656C6163 && a2 == 0xE800000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x7261646E656C6163 && a2 == 0xEA00000000004449 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x4C79636176697270 && a2 == 0xEC0000006C657665 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x736D72616C61 && a2 == 0xE600000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x7365746F6ELL && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x6962616C69617661 && a2 == 0xEC0000007974696CLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x6E65727275636572 && a2 == 0xEE00657461446563 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0x6E65727275636572 && a2 == 0xEF73656C75526563 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0x657A696E6167726FLL && a2 == 0xE900000000000072 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0x6565646E65747461 && a2 == 0xE900000000000073 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0x65747441666C6573 && a2 == 0xEC0000006565646ELL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0x6361747441736168 && a2 == 0xED0000746E656D68 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001BE08D5F0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BE08D610 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0x7461726765746E69 && a2 == 0xEB000000006E6F69 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0x6261746964457369 && a2 == 0xEA0000000000656CLL || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0x77654E7369 && a2 == 0xE500000000000000 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BE08DCC0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else
  {
    char v6 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 39;
    }
    else {
      return 40;
    }
  }
}

uint64_t sub_1BE053354(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 184);
  uint64_t v13 = *(void *)(a1 + 176);
  int v3 = *(void **)(a1 + 192);
  uint64_t v4 = *(void *)(a1 + 200);
  uint64_t v5 = *(void *)(a1 + 208);
  uint64_t v6 = *(void *)(a1 + 216);
  uint64_t v7 = *(void *)(a1 + 224);
  uint64_t v8 = *(void *)(a1 + 232);
  long long v11 = *(_OWORD *)(a1 + 256);
  long long v12 = *(_OWORD *)(a1 + 240);
  long long v10 = *(_OWORD *)(a1 + 272);
  sub_1BDFF8254(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104));
  sub_1BDFF8254(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((unint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t sub_1BE05346C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

CalendarUIKit::EKEventModelWrapper_optional __swiftcall EKEventModelWrapper.init(_:)(CalendarUIKit::EKEventModelWrapper_optional result)
{
  Class isa = result.value.ekEvent.super.super.super.isa;
  int v3 = v1;
  if (result.value.ekEvent.super.super.super.isa)
  {
    uint64_t v4 = result.value.ekEvent.super.super.super.isa;
    uint64_t v5 = (objc_class *)[(objc_class *)v4 uniqueID];

    if (v5) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = v4;
    }
    if (!v5) {
      Class isa = 0;
    }
  }
  *int v3 = isa;
  return result;
}

id EKEventModelWrapper.ekEvent.getter()
{
  return *v0;
}

void EKEventModelWrapper.ekEvent.setter(void *a1)
{
  *unint64_t v1 = a1;
}

uint64_t (*EKEventModelWrapper.ekEvent.modify())()
{
  return nullsub_1;
}

void EKEventModelWrapper.id.getter()
{
  id v1 = *v0;
  id v2 = objc_msgSend(*v0, sel_recurrenceIdentifier);
  if (v2)
  {
    int v3 = v2;
    id v4 = objc_msgSend(v2, sel_identifierString);
    if (v4)
    {
      id v5 = v4;
      sub_1BE070500();

LABEL_7:
      return;
    }
    __break(1u);
    goto LABEL_9;
  }
  id v6 = objc_msgSend(v1, sel_objectID);
  if (!v6)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v7 = v6;
  id v5 = objc_msgSend(v6, sel_stringRepresentation);

  if (v5)
  {
    sub_1BE070500();
    goto LABEL_7;
  }
LABEL_10:
  __break(1u);
}

id EKEventModelWrapper.uniqueID.getter()
{
  return sub_1BE053668((SEL *)&selRef_uniqueID);
}

id EKEventModelWrapper.title.getter()
{
  return sub_1BE053668((SEL *)&selRef_title);
}

id sub_1BE053668(SEL *a1)
{
  id result = [*v1 *a1];
  if (result)
  {
    int v3 = result;
    uint64_t v4 = sub_1BE070500();

    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t EKEventModelWrapper.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE0536E0((SEL *)&selRef_startDate, a1);
}

uint64_t EKEventModelWrapper.endDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE0536E0((SEL *)&selRef_endDate, a1);
}

uint64_t sub_1BE0536E0@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1BE06EEE0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v9 - 8);
  long long v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [*v2 *a1];
  if (v12)
  {
    uint64_t v13 = v12;
    sub_1BE06EEC0();

    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v11, v8, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
    if (result != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a2, v11, v5);
    }
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
  }
  __break(1u);
  return result;
}

id EKEventModelWrapper.duration.getter()
{
  return objc_msgSend(*v0, sel_duration);
}

id EKEventModelWrapper.isAllDay.getter()
{
  return objc_msgSend(*v0, sel_isAllDay);
}

id EKEventModelWrapper.isProposedTime.getter()
{
  return objc_msgSend(*v0, sel_isProposedTimeEvent);
}

uint64_t EKEventModelWrapper.startTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE054270((SEL *)&selRef_startTimeZone, MEMORY[0x1E4F27D60], MEMORY[0x1E4F27D68], a1);
}

uint64_t EKEventModelWrapper.endTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE054270((SEL *)&selRef_endTimeZone, MEMORY[0x1E4F27D60], MEMORY[0x1E4F27D68], a1);
}

id EKEventModelWrapper.isFloating.getter()
{
  return objc_msgSend(*v0, sel_isFloating);
}

uint64_t EKEventModelWrapper.floatingTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE054270((SEL *)&selRef_effectiveTimeZone, MEMORY[0x1E4F27D60], MEMORY[0x1E4F27D68], a1);
}

id EKEventModelWrapper.virtualConference.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_virtualConference);
  *a1 = result;
  return result;
}

uint64_t EKEventModelWrapper.location.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_location);
}

uint64_t EKEventModelWrapper.locationWithoutPrediction.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_locationWithoutPrediction);
}

uint64_t EKEventModelWrapper.locationsWithoutPrediction.getter()
{
  id v1 = objc_msgSend(*v0, sel_locationsWithoutPrediction);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1BE070710();

  return v3;
}

id EKEventModelWrapper.structuredLocation.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_structuredLocation);
  *a1 = result;
  return result;
}

id EKEventModelWrapper.structuredLocationWithoutPrediction.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_structuredLocationWithoutPrediction);
  *a1 = result;
  return result;
}

id EKEventModelWrapper.preferredLocation.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_preferredLocation);
  *a1 = result;
  return result;
}

id EKEventModelWrapper.travelTime.getter()
{
  return objc_msgSend(*v0, sel_travelTime);
}

id EKEventModelWrapper.travelRoutingMode.getter()
{
  return objc_msgSend(*v0, sel_travelRoutingMode);
}

id EKEventModelWrapper.calendar.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_calendar);
  if (result) {
    *a1 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

id EKEventModelWrapper.privacyLevel.getter()
{
  return objc_msgSend(*v0, sel_privacyLevel);
}

id EKEventModelWrapper.status.getter()
{
  return objc_msgSend(*v0, sel_status);
}

uint64_t EKEventModelWrapper.alarms.getter()
{
  return sub_1BE053C5C((SEL *)&selRef_alarms, &qword_1EA0E1580, 0x1E4F25488, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1BDFF4ACC);
}

uint64_t EKEventModelWrapper.notes.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_displayNotes);
}

id EKEventModelWrapper.availability.getter()
{
  return objc_msgSend(*v0, sel_availability);
}

uint64_t EKEventModelWrapper.recurrenceDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE054270((SEL *)&selRef_recurrenceDate, MEMORY[0x1E4F27918], MEMORY[0x1E4F27928], a1);
}

uint64_t EKEventModelWrapper.recurrenceRules.getter()
{
  return sub_1BE053C5C((SEL *)&selRef_recurrenceRules, (unint64_t *)&unk_1EA0E1570, 0x1E4F255F8, (uint64_t (*)(BOOL, uint64_t, uint64_t))sub_1BDFF4AFC);
}

uint64_t sub_1BE053C5C(SEL *a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(BOOL, uint64_t, uint64_t))
{
  id v7 = [*v4 *a1];
  if (!v7) {
    return (uint64_t)v7;
  }
  sub_1BDFB7B1C(0, a2);
  unint64_t v8 = sub_1BE070710();

  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1BE070CB0();
  swift_bridgeObjectRelease();
  if (!v9)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
LABEL_4:
  uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  uint64_t result = a4(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    uint64_t v11 = 0;
    id v7 = v16;
    do
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v12 = (id)MEMORY[0x1C18893C0](v11, v8);
      }
      else {
        id v12 = *(id *)(v8 + 8 * v11 + 32);
      }
      id v13 = v12;
      unint64_t v15 = v16[2];
      unint64_t v14 = v16[3];
      if (v15 >= v14 >> 1) {
        a4(v14 > 1, v15 + 1, 1);
      }
      ++v11;
      void v16[2] = v15 + 1;
      v16[v15 + 4] = v13;
    }
    while (v9 != v11);
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  __break(1u);
  return result;
}

id EKEventModelWrapper.singleRecurrenceRule.getter@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_singleRecurrenceRule);
  *a1 = result;
  return result;
}

void EKEventModelWrapper.organizer.getter(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_organizer);
  if (v3)
  {
    id v8 = v3;
    self;
    uint64_t v4 = swift_dynamicCastObjCClass();
    uint64_t v5 = (void *)v4;
    if (v4)
    {
      *(void *)a1 = v4;
      *(void *)(a1 + 32) = &type metadata for EKParticipantModelWrapper;
      *(void *)(a1 + 40) = sub_1BE00F92C();
      *(void *)(a1 + 8) = v5;
      id v6 = v8;
    }
    else
    {
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
    }
    id v7 = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
}

uint64_t EKEventModelWrapper.attendees.getter()
{
  id v1 = objc_msgSend(*v0, sel_attendees);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  sub_1BDFB7B1C(0, (unint64_t *)&qword_1EA0E15B0);
  unint64_t v3 = sub_1BE070710();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_4;
    }
LABEL_22:
    id v7 = (void *)MEMORY[0x1E4FBC860];
LABEL_23:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v7;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1BE070CB0();
  uint64_t v4 = result;
  if (!result) {
    goto LABEL_22;
  }
LABEL_4:
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    id v7 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x1C18893C0](v6, v3);
      }
      else {
        id v8 = *(id *)(v3 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      self;
      uint64_t v10 = (void *)swift_dynamicCastObjCClass();
      if (v10)
      {
        unint64_t v11 = sub_1BE00F92C();
        *(void *)&long long v20 = v10;
        *((void *)&v20 + 1) = v10;
        *(void *)&long long v22 = &type metadata for EKParticipantModelWrapper;
        *((void *)&v22 + 1) = v11;
        id v12 = v9;
      }
      else
      {
        long long v21 = 0u;
        long long v22 = 0u;
        long long v20 = 0u;
      }
      id v13 = v10;

      if ((void)v20)
      {
        long long v17 = v20;
        long long v18 = v21;
        long long v19 = v22;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v7 = sub_1BE054F0C(0, v7[2] + 1, 1, v7);
        }
        unint64_t v15 = v7[2];
        unint64_t v14 = v7[3];
        if (v15 >= v14 >> 1) {
          id v7 = sub_1BE054F0C((void *)(v14 > 1), v15 + 1, 1, v7);
        }
        v7[2] = v15 + 1;
        uint64_t v16 = &v7[6 * v15];
        v16[3] = v18;
        v16[4] = v19;
        void v16[2] = v17;
      }
      else
      {
        sub_1BE0553FC((uint64_t)&v20);
      }
      ++v6;
    }
    while (v4 != v6);
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

id EKEventModelWrapper.selfAttendee.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_selfAttendee);
  if (v3)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 32) = &type metadata for EKParticipantModelWrapper;
    id v5 = v3;
    *(void *)(a1 + 40) = sub_1BE00F92C();
    id v3 = v5;
    *(void *)(a1 + 8) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }

  return v3;
}

uint64_t EKEventModelWrapper.url.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE054270((SEL *)&selRef_URL, MEMORY[0x1E4F276E0], MEMORY[0x1E4F276F0], a1);
}

id EKEventModelWrapper.hasAttachment.getter()
{
  return objc_msgSend(*v0, sel_hasAttachment);
}

id EKEventModelWrapper.conferenceURLForDisplayCached.getter()
{
  return objc_msgSend(*v0, sel_conferenceURLForDisplayCached);
}

uint64_t EKEventModelWrapper.conferenceURLForDisplay.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE054270((SEL *)&selRef_conferenceURLForDisplay, MEMORY[0x1E4F276E0], MEMORY[0x1E4F276F0], a1);
}

uint64_t sub_1BE054270@<X0>(SEL *a1@<X0>, void (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  id v8 = [*v4 *a1];
  if (v8)
  {
    uint64_t v9 = v8;
    a2();

    uint64_t v10 = ((uint64_t (*)(void))a3)(0);
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v12 = v10;
    uint64_t v13 = a4;
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v15 = a3();
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v12 = v15;
    uint64_t v13 = a4;
    uint64_t v14 = 1;
  }

  return v11(v13, v14, 1, v12);
}

void EKEventModelWrapper.integration.getter(void *a1@<X8>)
{
  id v3 = *v1;
  if (!objc_msgSend(v3, sel_isIntegrationEvent))
  {

    id v3 = 0;
  }
  *a1 = v3;
}

uint64_t EKEventModelWrapper.isEditable.getter()
{
  id v1 = *v0;
  uint64_t result = (uint64_t)objc_msgSend(*v0, sel_isEditable);
  if (result)
  {
    uint64_t result = (uint64_t)objc_msgSend(v1, sel_calendar);
    if (result)
    {
      id v3 = (void *)result;
      unsigned __int8 v4 = objc_msgSend((id)result, sel_isSuggestedEventCalendar);

      if (v4)
      {
        return 0;
      }
      else if (objc_msgSend(v1, sel_isReminderIntegrationEvent))
      {
        return (uint64_t)objc_msgSend(v1, sel_CUIK_reminderShouldBeEditable);
      }
      else
      {
        return 1;
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id EKEventModelWrapper.isNew.getter()
{
  return objc_msgSend(*v0, sel_isNew);
}

BOOL EKEventModelWrapper.isSuggestedEvent.getter()
{
  id v1 = objc_msgSend(*v0, sel_suggestionInfo);
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

void EKEventModelWrapper.constraints.getter(void *a1@<X8>)
{
  id v3 = *v1;
  id v4 = objc_msgSend(v3, sel_calendar);
  if (v4)
  {
    id v5 = v4;

    id v6 = v5;
    id v7 = objc_msgSend(v6, sel_source);
    if (v7)
    {
      id v8 = v7;

      id v9 = objc_msgSend(v8, sel_constraints);
      *a1 = v9;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

CalendarUIKit::EKEventModelWrapper_optional __swiftcall EKEventModelWrapper.init(_:)(EKEvent a1)
{
  Class isa = a1.super.super.super.isa;
  id v3 = v1;
  id v4 = [(objc_class *)a1.super.super.super.isa uniqueID];
  if (v4)
  {
  }
  else
  {

    Class isa = 0;
  }
  *id v3 = isa;
  result.value.ekEvent.super.super.super.Class isa = v5;
  result.is_nil = v6;
  return result;
}

id sub_1BE0545B4(uint64_t a1, uint64_t a2)
{
  return sub_1BE0545CC(a1, a2, (SEL *)&selRef_title);
}

id sub_1BE0545C0(uint64_t a1, uint64_t a2)
{
  return sub_1BE0545CC(a1, a2, (SEL *)&selRef_uniqueID);
}

id sub_1BE0545CC(uint64_t a1, uint64_t a2, SEL *a3)
{
  id result = [*v3 *a3];
  if (result)
  {
    id v5 = result;
    uint64_t v6 = sub_1BE070500();

    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BE054630()
{
  return objc_msgSend(*v0, sel_duration);
}

id sub_1BE054640()
{
  return objc_msgSend(*v0, sel_isAllDay);
}

id sub_1BE054664()
{
  return objc_msgSend(*v0, sel_isProposedTimeEvent);
}

uint64_t sub_1BE054688@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE054B04((SEL *)&selRef_startTimeZone, MEMORY[0x1E4F27D60], MEMORY[0x1E4F27D68], a1);
}

uint64_t sub_1BE0546BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE054B04((SEL *)&selRef_endTimeZone, MEMORY[0x1E4F27D60], MEMORY[0x1E4F27D68], a1);
}

id sub_1BE0546F0()
{
  return objc_msgSend(*v0, sel_isFloating);
}

uint64_t sub_1BE054714@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE054B04((SEL *)&selRef_effectiveTimeZone, MEMORY[0x1E4F27D60], MEMORY[0x1E4F27D68], a1);
}

id sub_1BE054748@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_virtualConference);
  *a1 = result;
  return result;
}

uint64_t sub_1BE054784(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_location);
}

uint64_t sub_1BE054790(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_locationWithoutPrediction);
}

uint64_t sub_1BE05479C()
{
  id v1 = objc_msgSend(*v0, sel_locationsWithoutPrediction);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1BE070710();

  return v3;
}

id sub_1BE0547F8@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_structuredLocation);
  *a1 = result;
  return result;
}

id sub_1BE054834@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_structuredLocationWithoutPrediction);
  *a1 = result;
  return result;
}

id sub_1BE054870@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_preferredLocation);
  *a1 = result;
  return result;
}

id sub_1BE0548AC()
{
  return objc_msgSend(*v0, sel_travelTime);
}

id sub_1BE0548BC()
{
  return objc_msgSend(*v0, sel_travelRoutingMode);
}

id sub_1BE0548CC@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_calendar);
  if (result) {
    *a1 = result;
  }
  else {
    __break(1u);
  }
  return result;
}

id sub_1BE054910()
{
  return objc_msgSend(*v0, sel_privacyLevel);
}

id sub_1BE054920()
{
  return objc_msgSend(*v0, sel_status);
}

uint64_t sub_1BE054934(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_displayNotes);
}

id sub_1BE054940()
{
  return objc_msgSend(*v0, sel_availability);
}

uint64_t sub_1BE054950@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE054B04((SEL *)&selRef_recurrenceDate, MEMORY[0x1E4F27918], MEMORY[0x1E4F27928], a1);
}

id sub_1BE054988@<X0>(void *a1@<X8>)
{
  id result = objc_msgSend(*v1, sel_singleRecurrenceRule);
  *a1 = result;
  return result;
}

id sub_1BE0549CC@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(*v1, sel_selfAttendee);
  if (v3)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 32) = &type metadata for EKParticipantModelWrapper;
    id v5 = v3;
    *(void *)(a1 + 40) = sub_1BE00F92C();
    id v3 = v5;
    *(void *)(a1 + 8) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }

  return v3;
}

uint64_t sub_1BE054A54@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE054B04((SEL *)&selRef_URL, MEMORY[0x1E4F276E0], MEMORY[0x1E4F276F0], a1);
}

id sub_1BE054A88()
{
  return objc_msgSend(*v0, sel_hasAttachment);
}

id sub_1BE054AAC()
{
  return objc_msgSend(*v0, sel_conferenceURLForDisplayCached);
}

uint64_t sub_1BE054AD0@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE054B04((SEL *)&selRef_conferenceURLForDisplay, MEMORY[0x1E4F276E0], MEMORY[0x1E4F276F0], a1);
}

uint64_t sub_1BE054B04@<X0>(SEL *a1@<X2>, void (*a2)(void)@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  id v8 = [*v4 *a1];
  if (v8)
  {
    id v9 = v8;
    a2();

    uint64_t v10 = ((uint64_t (*)(void))a3)(0);
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v12 = v10;
    uint64_t v13 = a4;
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v15 = a3();
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v12 = v15;
    uint64_t v13 = a4;
    uint64_t v14 = 1;
  }

  return v11(v13, v14, 1, v12);
}

void sub_1BE054BE4(void *a1@<X8>)
{
  id v3 = *v1;
  if (!objc_msgSend(v3, sel_isIntegrationEvent))
  {

    id v3 = 0;
  }
  *a1 = v3;
}

id sub_1BE054C30()
{
  return objc_msgSend(*v0, sel_isNew);
}

BOOL sub_1BE054C54()
{
  id v1 = objc_msgSend(*v0, sel_suggestionInfo);
  id v2 = v1;
  if (v1) {

  }
  return v2 != 0;
}

void sub_1BE054C9C(void *a1@<X8>)
{
  EKEventModelWrapper.id.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BE054CC8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BE05517C(a1, a2, a3, a4, (uint64_t *)&unk_1EA0E4E80, type metadata accessor for WeekDayViewModel, type metadata accessor for WeekDayViewModel);
}

void *sub_1BE054CEC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1568);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BE05562C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1BE054DFC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1560);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BE055720(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1BE054F0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1948);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BE055814(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1BE055034(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4E78);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1BE05590C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BE055158(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BE05517C(a1, a2, a3, a4, &qword_1EA0E3DD0, type metadata accessor for EventAttendeeModelObject, type metadata accessor for EventAttendeeModelObject);
}

uint64_t sub_1BE05517C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    long long v18 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  long long v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1BE070C80();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  _OWORD v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BE055A04(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_1BE0553FC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4E70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_UNKNOWN **sub_1BE05545C()
{
  return &protocol witness table for EKAlarmModelWrapper;
}

unint64_t sub_1BE05546C()
{
  unint64_t result = qword_1EA0E1650;
  if (!qword_1EA0E1650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1650);
  }
  return result;
}

unint64_t sub_1BE0554C4()
{
  unint64_t result = qword_1EB677D68;
  if (!qword_1EB677D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB677D68);
  }
  return result;
}

_UNKNOWN **sub_1BE055518()
{
  return &protocol witness table for EKEventIntegrationModelWrapper;
}

_UNKNOWN **sub_1BE055524()
{
  return &protocol witness table for EKLocationModelWrapper;
}

unint64_t sub_1BE055534()
{
  unint64_t result = qword_1EA0E1678;
  if (!qword_1EA0E1678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E1678);
  }
  return result;
}

_UNKNOWN **sub_1BE055588()
{
  return &protocol witness table for EKRecurrenceRuleModelWrapper;
}

_UNKNOWN **sub_1BE055594()
{
  return &protocol witness table for EKVirtualConferenceModelWrapper;
}

unint64_t sub_1BE0555A0(uint64_t a1)
{
  unint64_t result = sub_1BE0555C8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BE0555C8()
{
  unint64_t result = qword_1EB677D48;
  if (!qword_1EB677D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EB677D48);
  }
  return result;
}

ValueMetadata *type metadata accessor for EKEventModelWrapper()
{
  return &type metadata for EKEventModelWrapper;
}

uint64_t sub_1BE05562C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

uint64_t sub_1BE055720(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

uint64_t sub_1BE055814(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

uint64_t sub_1BE05590C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

uint64_t sub_1BE055A04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

void *initializeBufferWithCopyOfBuffer for EKShareeView(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for EKShareeView(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for EKShareeView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for EKShareeView(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for EKShareeView(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EKShareeView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EKShareeView()
{
  return &type metadata for EKShareeView;
}

id sub_1BE055D00(void *a1, void *a2)
{
  id v4 = sub_1BE056098(a1, a2);
  if (v4)
  {
    id v5 = objc_msgSend(self, sel_viewControllerForContact_, v4);
    objc_msgSend(v5, sel_setContactStore_, a2);
    objc_msgSend(v5, sel_setShouldShowLinkedContacts_, 1);
    objc_msgSend(v5, sel_setAllowsEditing_, 0);
  }
  else
  {
    id v6 = sub_1BE056508(a1);
    id v5 = objc_msgSend(self, sel_viewControllerForUnknownContact_, v6);
    objc_msgSend(v5, sel_setContactStore_, a2);
    objc_msgSend(v5, sel_setShouldShowLinkedContacts_, 1);
    objc_msgSend(v5, sel_setAllowsEditing_, 0);
  }
  return v5;
}

id sub_1BE056098(void *a1, void *a2)
{
  v20[1] = *(id *)MEMORY[0x1E4F143B8];
  id v4 = objc_msgSend(a1, sel_emailAddress);
  if (v4)
  {
    id v5 = v4;
    id v6 = objc_msgSend(self, sel_predicateForContactsMatchingEmailAddress_, v4);
    goto LABEL_5;
  }
  id result = objc_msgSend(a1, sel_phoneNumber);
  if (result)
  {
    uint64_t v8 = result;
    sub_1BE070500();

    id v9 = objc_allocWithZone(MEMORY[0x1E4F1BA70]);
    uint64_t v10 = (void *)sub_1BE0704C0();
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(v9, sel_initWithStringValue_, v10);

    id v6 = objc_msgSend(self, sel_predicateForContactsMatchingPhoneNumber_, v5);
LABEL_5:
    id v11 = v6;

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39C0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BE07E590;
    *(void *)(v12 + 32) = objc_msgSend(self, sel_descriptorForRequiredKeys);
    sub_1BE070720();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39C8);
    unint64_t v13 = (void *)sub_1BE070700();
    swift_bridgeObjectRelease();
    v20[0] = 0;
    id v14 = objc_msgSend(a2, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v11, v13, v20);

    id v15 = v20[0];
    if (!v14)
    {
      id v19 = v20[0];
      sub_1BE06EDB0();

      swift_willThrow();
      return v14;
    }
    sub_1BE056930();
    unint64_t v16 = sub_1BE070710();
    id v17 = v15;

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      id v14 = (id)sub_1BE070CB0();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_8;
      }
    }
    else
    {
      id v14 = *(id *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v14)
      {
LABEL_8:
        if ((v16 & 0xC000000000000001) != 0)
        {
          id v18 = (id)MEMORY[0x1C18893C0](0, v16);
        }
        else
        {
          if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            __break(1u);
          }
          id v18 = *(id *)(v16 + 32);
        }
        id v14 = v18;
      }
    }
    swift_bridgeObjectRelease();

    return v14;
  }
  __break(1u);
  return result;
}

id sub_1BE056374()
{
  id v1 = sub_1BE055D00(*v0, v0[1]);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB19E8]), sel_initWithRootViewController_, v1);

  return v2;
}

uint64_t sub_1BE0563C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BE0564B4();

  return MEMORY[0x1F40FAB68](a1, a2, a3, v6);
}

uint64_t sub_1BE056428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1BE0564B4();

  return MEMORY[0x1F40FAB30](a1, a2, a3, v6);
}

void sub_1BE05648C()
{
}

unint64_t sub_1BE0564B4()
{
  unint64_t result = qword_1EA0E4E98;
  if (!qword_1EA0E4E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4E98);
  }
  return result;
}

id sub_1BE056508(void *a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BA40]), sel_init);
  id v3 = objc_msgSend(a1, sel_emailAddress);
  if (v3)
  {
    id v4 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39C0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1BE07E590;
    sub_1BE070500();
    id v6 = objc_allocWithZone(MEMORY[0x1E4F1BA20]);
    id v7 = v4;
    uint64_t v8 = (void *)sub_1BE0704C0();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v6, (SEL)0x1F6A346F3, v8, v7);

    *(void *)(v5 + 32) = v9;
    sub_1BE070720();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4EB0);
    uint64_t v10 = (void *)sub_1BE070700();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setEmailAddresses_, v10);
  }
  id v11 = objc_msgSend(a1, sel_phoneNumber);
  if (v11)
  {
    uint64_t v12 = v11;
    sub_1BE070500();

    id v13 = objc_allocWithZone(MEMORY[0x1E4F1BA70]);
    id v14 = (void *)sub_1BE0704C0();
    swift_bridgeObjectRelease();
    id v15 = objc_msgSend(v13, sel_initWithStringValue_, v14);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39C0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1BE07E590;
    sub_1BE070500();
    id v17 = objc_allocWithZone(MEMORY[0x1E4F1BA20]);
    id v18 = v15;
    id v19 = (void *)sub_1BE0704C0();
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(v17, (SEL)0x1F6A346F3, v19, v18);

    *(void *)(v16 + 32) = v20;
    sub_1BE070720();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4EB0);
    uint64_t v21 = (void *)sub_1BE070700();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setPhoneNumbers_, v21);
  }
  id v22 = objc_msgSend(a1, sel_firstName);
  if (v22)
  {
    unint64_t v23 = v22;
    sub_1BE070500();
    uint64_t v25 = v24;
  }
  else
  {
    uint64_t v25 = 0;
  }
  id v26 = objc_msgSend(a1, sel_lastName);
  if (!v26)
  {
    if (!v25) {
      goto LABEL_21;
    }
    uint64_t v29 = 0;
LABEL_14:
    id result = objc_msgSend(a1, sel_firstName);
    if (!result)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    int v32 = result;
    objc_msgSend(v2, sel_setGivenName_, result);

    if (!v29) {
      goto LABEL_20;
    }
    int v30 = 0;
LABEL_17:
    id result = objc_msgSend(a1, sel_lastName);
    if (result)
    {
      int v33 = result;
      objc_msgSend(v2, sel_setFamilyName_, result);

      if (v30)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
LABEL_20:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v2;
    }
    goto LABEL_25;
  }
  int v27 = v26;
  sub_1BE070500();
  uint64_t v29 = v28;

  if (v25) {
    goto LABEL_14;
  }
  if (v29)
  {
    int v30 = 1;
    goto LABEL_17;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  id result = objc_msgSend(a1, sel_name);
  if (result)
  {
    uint64_t v34 = result;
    objc_msgSend(v2, sel_setGivenName_, result);

    return v2;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_1BE056930()
{
  unint64_t result = qword_1EA0E39D0;
  if (!qword_1EA0E39D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA0E39D0);
  }
  return result;
}

BOOL sub_1BE056974(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      id v3 = (_OWORD *)(a1 + 32);
      id v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = v5;
        long long v7 = v3[9];
        v20[8] = v3[8];
        v20[9] = v7;
        v20[10] = v3[10];
        long long v8 = v3[5];
        v20[4] = v3[4];
        v20[5] = v8;
        long long v9 = v3[7];
        v20[6] = v3[6];
        v20[7] = v9;
        long long v10 = v3[1];
        v20[0] = *v3;
        v20[1] = v10;
        long long v11 = v3[3];
        id v20[2] = v3[2];
        v20[3] = v11;
        long long v12 = v4[9];
        v19[8] = v4[8];
        v19[9] = v12;
        v19[10] = v4[10];
        long long v13 = v4[5];
        v19[4] = v4[4];
        v19[5] = v13;
        long long v14 = v4[7];
        v19[6] = v4[6];
        v19[7] = v14;
        long long v15 = v4[1];
        v19[0] = *v4;
        v19[1] = v15;
        long long v16 = v4[3];
        v19[2] = v4[2];
        v19[3] = v16;
        BOOL v17 = _s13CalendarUIKit24EventLocationModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v19);
        if (!v17) {
          break;
        }
        uint64_t v5 = v6 - 1;
        v4 += 11;
        v3 += 11;
      }
      while (v6);
    }
  }
  else
  {
    return 0;
  }
  return v17;
}

uint64_t sub_1BE056A60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    for (uint64_t i = v2 - 1; ; --i)
    {
      sub_1BE016C74(v3, (uint64_t)v80);
      sub_1BE016C74(v4, (uint64_t)v81);
      sub_1BE016C74((uint64_t)v80, (uint64_t)v82);
      if (sub_1BE016CDC((uint64_t)v82) == 1)
      {
        nullsub_1(v82);
        sub_1BE016C74((uint64_t)v80, (uint64_t)v79);
        uint64_t v6 = nullsub_1(v79);
        sub_1BE016C74((uint64_t)v81, (uint64_t)v77);
        if (sub_1BE016CDC((uint64_t)v77) != 1)
        {
          nullsub_1(v77);
          sub_1BE016E40((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
          sub_1BE016E40((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
          sub_1BE016E40((uint64_t)v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
          sub_1BE016E40((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
          sub_1BE016E40((uint64_t)v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_46:
          sub_1BE016C74((uint64_t)v80, (uint64_t)v77);
          sub_1BE016C74((uint64_t)v81, (uint64_t)&v78);
          sub_1BE059EF0((uint64_t)v77);
          sub_1BE016E40((uint64_t)v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016EB4);
          sub_1BE016E40((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016EB4);
          return 0;
        }
        uint64_t v63 = i;
        uint64_t v64 = v4;
        uint64_t v65 = v3;
        nullsub_1(v77);
        sub_1BE016C74((uint64_t)v81, (uint64_t)v76);
        uint64_t v7 = nullsub_1(v76);
        uint64_t v8 = *(void *)(v7 + 8);
        uint64_t v9 = *(void *)(v7 + 16);
        uint64_t v10 = *(void *)(v7 + 24);
        uint64_t v11 = *(void *)(v7 + 32);
        uint64_t v13 = *(void *)(v7 + 40);
        uint64_t v12 = *(void *)(v7 + 48);
        uint64_t v14 = *(void *)(v7 + 56);
        int v68 = *(unsigned __int8 *)(v7 + 65);
        int v69 = *(unsigned __int8 *)(v7 + 64);
        uint64_t v67 = *(void *)(v7 + 72);
        uint64_t v15 = *(void *)(v6 + 16);
        uint64_t v16 = *(void *)(v6 + 32);
        uint64_t v72 = *(void *)(v6 + 8);
        uint64_t v73 = *(void *)(v6 + 24);
        uint64_t v17 = *(void *)(v6 + 48);
        uint64_t v70 = *(void *)(v6 + 40);
        uint64_t v71 = *(void *)(v6 + 56);
        int v18 = *(unsigned __int8 *)(v6 + 64);
        int v19 = *(unsigned __int8 *)(v6 + 65);
        uint64_t v66 = *(void *)(v6 + 72);
        if (v72)
        {
          if (!v8) {
            goto LABEL_47;
          }
          if (*(void *)v6 != *(void *)v7 || v72 != v8)
          {
            uint64_t v20 = *(void *)(v7 + 56);
            uint64_t v62 = v17;
            uint64_t v21 = *(void *)(v7 + 32);
            int v22 = v18;
            int v23 = v19;
            uint64_t v24 = *(void *)(v7 + 48);
            uint64_t v25 = *(void *)(v7 + 40);
            uint64_t v26 = v16;
            uint64_t v27 = *(void *)(v7 + 16);
            char v28 = sub_1BE070EF0();
            uint64_t v9 = v27;
            uint64_t v16 = v26;
            uint64_t v13 = v25;
            uint64_t v12 = v24;
            int v19 = v23;
            int v18 = v22;
            uint64_t v11 = v21;
            uint64_t v17 = v62;
            uint64_t v14 = v20;
            if ((v28 & 1) == 0)
            {
LABEL_47:
              sub_1BE016C74((uint64_t)v80, (uint64_t)v75);
              nullsub_1(v75);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return 0;
            }
          }
        }
        else if (v8)
        {
          goto LABEL_47;
        }
        if (v73)
        {
          if (!v10) {
            goto LABEL_47;
          }
          if (v15 != v9 || v73 != v10)
          {
            uint64_t v45 = v14;
            uint64_t v46 = v12;
            uint64_t v47 = v16;
            char v48 = sub_1BE070EF0();
            uint64_t v16 = v47;
            uint64_t v12 = v46;
            uint64_t v14 = v45;
            if ((v48 & 1) == 0) {
              goto LABEL_47;
            }
          }
        }
        else if (v10)
        {
          goto LABEL_47;
        }
        if (v70)
        {
          uint64_t v49 = v71;
          if (!v13) {
            goto LABEL_47;
          }
          if (v16 != v11 || v70 != v13)
          {
            uint64_t v50 = v14;
            uint64_t v51 = v12;
            char v52 = sub_1BE070EF0();
            uint64_t v12 = v51;
            uint64_t v14 = v50;
            if ((v52 & 1) == 0) {
              goto LABEL_47;
            }
          }
        }
        else
        {
          uint64_t v49 = v71;
          if (v13) {
            goto LABEL_47;
          }
        }
        if (v17 == v12 && v49 == v14)
        {
          if (v69 != v18 || ((v68 ^ v19) & 1) != 0) {
            goto LABEL_47;
          }
        }
        else if (sub_1BE070EF0() & 1) == 0 || ((v69 ^ v18) & 1) != 0 || ((v68 ^ v19))
        {
          goto LABEL_47;
        }
        if (v66 != v67) {
          goto LABEL_47;
        }
        sub_1BE016C74((uint64_t)v80, (uint64_t)v75);
        nullsub_1(v75);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = v64;
        uint64_t v3 = v65;
        uint64_t i = v63;
        if (!v63) {
          return 1;
        }
      }
      else
      {
        nullsub_1(v82);
        sub_1BE016C74((uint64_t)v80, (uint64_t)v79);
        uint64_t v29 = (_OWORD *)nullsub_1(v79);
        sub_1BE016C74((uint64_t)v81, (uint64_t)v77);
        if (sub_1BE016CDC((uint64_t)v77) == 1)
        {
          nullsub_1(v77);
          long long v55 = v29[1];
          long long v54 = v29[2];
          v76[0] = *v29;
          v76[1] = v55;
          void v76[2] = v54;
          long long v56 = v29[6];
          long long v58 = v29[3];
          long long v57 = v29[4];
          v76[5] = v29[5];
          v76[6] = v56;
          v76[3] = v58;
          v76[4] = v57;
          long long v59 = v29[10];
          long long v61 = v29[7];
          long long v60 = v29[8];
          v76[9] = v29[9];
          v76[10] = v59;
          v76[7] = v61;
          v76[8] = v60;
          sub_1BE016E40((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
          sub_1BE016E40((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
          sub_1BE016E40((uint64_t)v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
          sub_1BE016E40((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
          sub_1BE016E40((uint64_t)v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
          sub_1BDFE9034(v76);
          goto LABEL_46;
        }
        nullsub_1(v77);
        sub_1BE016C74((uint64_t)v81, (uint64_t)v76);
        int v30 = (_OWORD *)nullsub_1(v76);
        long long v31 = v30[9];
        v74[8] = v30[8];
        v74[9] = v31;
        v74[10] = v30[10];
        long long v32 = v30[5];
        v74[4] = v30[4];
        v74[5] = v32;
        long long v33 = v30[7];
        v74[6] = v30[6];
        v74[7] = v33;
        long long v34 = v30[1];
        v74[0] = *v30;
        v74[1] = v34;
        long long v35 = v30[3];
        v74[2] = v30[2];
        v74[3] = v35;
        sub_1BE016E40((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
        sub_1BE016E40((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
        sub_1BE016E40((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
        sub_1BE016E40((uint64_t)v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016CE4);
        BOOL v36 = _s13CalendarUIKit24EventLocationModelObjectV2eeoiySbAC_ACtFZ_0((uint64_t)v29, (uint64_t)v74);
        long long v38 = v29[1];
        long long v37 = v29[2];
        v75[0] = *v29;
        v75[1] = v38;
        v75[2] = v37;
        long long v39 = v29[6];
        long long v41 = v29[3];
        long long v40 = v29[4];
        v75[5] = v29[5];
        v75[6] = v39;
        v75[3] = v41;
        v75[4] = v40;
        long long v42 = v29[10];
        long long v44 = v29[7];
        long long v43 = v29[8];
        v75[9] = v29[9];
        v75[10] = v42;
        v75[7] = v44;
        v75[8] = v43;
        sub_1BDFE9034(v75);
        sub_1BE016E40((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016EB4);
        sub_1BE016E40((uint64_t)v81, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016EB4);
        sub_1BE016E40((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1BE016EB4);
        if (!v36) {
          return 0;
        }
        if (!i) {
          return 1;
        }
      }
      v4 += 184;
      v3 += 184;
    }
  }
  return 1;
}

uint64_t sub_1BE057124(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2)
  {
    uint64_t v3 = a2;
    if (a1 != a2)
    {
      uint64_t v4 = 0;
      uint64_t v39 = a1;
      do
      {
        uint64_t v5 = *(void *)(a1 + v4 + 40);
        uint64_t v6 = *(void *)(a1 + v4 + 48);
        uint64_t v8 = *(void *)(a1 + v4 + 56);
        uint64_t v7 = *(void *)(a1 + v4 + 64);
        uint64_t v9 = *(void *)(a1 + v4 + 72);
        uint64_t v10 = *(void *)(a1 + v4 + 80);
        uint64_t v11 = *(void *)(a1 + v4 + 88);
        uint64_t v12 = v3 + v4;
        uint64_t v13 = *(void *)(v12 + 40);
        uint64_t v14 = *(void *)(v12 + 48);
        uint64_t v16 = *(void *)(v12 + 56);
        uint64_t v15 = *(void *)(v12 + 64);
        uint64_t v18 = *(void *)(v12 + 72);
        uint64_t v17 = *(void *)(v12 + 80);
        uint64_t v19 = *(void *)(v12 + 88);
        int v45 = *(unsigned __int8 *)(v12 + 96);
        int v46 = *(unsigned __int8 *)(a1 + v4 + 96);
        uint64_t v41 = *(void *)(a1 + v4 + 104);
        uint64_t v42 = *(void *)(v12 + 104);
        int v43 = *(unsigned __int8 *)(a1 + v4 + 97);
        int v44 = *(unsigned __int8 *)(v12 + 97);
        if (v5)
        {
          if (!v13) {
            return 0;
          }
          if (*(void *)(a1 + v4 + 32) != *(void *)(v12 + 32) || v5 != v13)
          {
            uint64_t v37 = *(void *)(v12 + 64);
            uint64_t v38 = *(void *)(v12 + 88);
            uint64_t v35 = *(void *)(v12 + 80);
            uint64_t v36 = *(void *)(v12 + 72);
            uint64_t v20 = *(void *)(a1 + v4 + 88);
            uint64_t v21 = *(void *)(a1 + v4 + 72);
            uint64_t v22 = *(void *)(a1 + v4 + 64);
            uint64_t v23 = *(void *)(a1 + v4 + 48);
            uint64_t v24 = *(void *)(v12 + 48);
            char v25 = sub_1BE070EF0();
            uint64_t v14 = v24;
            uint64_t v6 = v23;
            uint64_t v18 = v36;
            uint64_t v15 = v37;
            uint64_t v7 = v22;
            uint64_t v9 = v21;
            uint64_t v11 = v20;
            uint64_t v17 = v35;
            uint64_t v19 = v38;
            if ((v25 & 1) == 0) {
              return 0;
            }
          }
        }
        else if (v13)
        {
          return 0;
        }
        if (v8)
        {
          if (!v16) {
            return 0;
          }
          if (v6 != v14 || v8 != v16)
          {
            uint64_t v26 = v15;
            uint64_t v27 = v11;
            uint64_t v28 = v9;
            uint64_t v29 = v7;
            char v30 = sub_1BE070EF0();
            uint64_t v15 = v26;
            uint64_t v7 = v29;
            uint64_t v9 = v28;
            uint64_t v11 = v27;
            if ((v30 & 1) == 0) {
              return 0;
            }
          }
        }
        else if (v16)
        {
          return 0;
        }
        if (v9)
        {
          if (!v18) {
            return 0;
          }
          if (v7 != v15 || v9 != v18)
          {
            uint64_t v31 = v11;
            char v32 = sub_1BE070EF0();
            uint64_t v11 = v31;
            if ((v32 & 1) == 0) {
              return 0;
            }
          }
        }
        else if (v18)
        {
          return 0;
        }
        if (v10 == v17 && v11 == v19)
        {
          uint64_t result = 0;
          if (v46 != v45) {
            return result;
          }
        }
        else
        {
          char v34 = sub_1BE070EF0();
          uint64_t result = 0;
          if (v34 & 1) == 0 || ((v46 ^ v45)) {
            return result;
          }
        }
        if (((v43 ^ v44) & 1) != 0 || v41 != v42) {
          return result;
        }
        v4 += 80;
        --v2;
        a1 = v39;
        uint64_t v3 = a2;
      }
      while (v2);
    }
  }
  return 1;
}

uint64_t sub_1BE057374(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E2E98);
  MEMORY[0x1F4188790](v47);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for EventVirtualConferenceJoinMethodModelObject(0);
  uint64_t v13 = MEMORY[0x1F4188790](v46);
  uint64_t v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (uint64_t *)((char *)&v39 - v17);
  uint64_t v48 = a1;
  uint64_t v49 = a2;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19 != *(void *)(a2 + 16)) {
    goto LABEL_26;
  }
  if (!v19 || v48 == v49)
  {
    char v37 = 1;
    return v37 & 1;
  }
  unint64_t v20 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v44 = *(void *)(v16 + 72);
  int v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  long long v40 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v41 = v7;
  uint64_t v42 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v21 = v19 - 1;
  uint64_t v22 = v46;
  while (1)
  {
    uint64_t v23 = v21;
    sub_1BE05A01C(v48 + v20, (uint64_t)v18, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
    sub_1BE05A01C(v49 + v20, (uint64_t)v15, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
    uint64_t v24 = v18[1];
    uint64_t v25 = v15[1];
    if (v24)
    {
      if (!v25) {
        goto LABEL_25;
      }
      BOOL v26 = *v18 == *v15 && v24 == v25;
      if (!v26 && (sub_1BE070EF0() & 1) == 0) {
        goto LABEL_25;
      }
    }
    else if (v25)
    {
      goto LABEL_25;
    }
    uint64_t v50 = v23;
    uint64_t v27 = *(int *)(v22 + 20);
    uint64_t v28 = (uint64_t)v15 + v27;
    uint64_t v29 = (uint64_t)&v12[*(int *)(v47 + 48)];
    sub_1BDF8BF34((uint64_t)v18 + v27, (uint64_t)v12);
    sub_1BDF8BF34(v28, v29);
    char v30 = *v45;
    if ((*v45)(v12, 1, v4) != 1) {
      break;
    }
    if (v30((char *)v29, 1, v4) != 1) {
      goto LABEL_24;
    }
    sub_1BDF8686C((uint64_t)v12, &qword_1EB678020);
    uint64_t v31 = v50;
LABEL_19:
    char v36 = *((unsigned char *)v18 + *(int *)(v22 + 24)) ^ *((unsigned char *)v15 + *(int *)(v22 + 24));
    sub_1BE05A084((uint64_t)v15, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
    sub_1BE05A084((uint64_t)v18, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
    if ((v36 & 1) == 0)
    {
      uint64_t v21 = v31 - 1;
      v20 += v44;
      if (v31) {
        continue;
      }
    }
    char v37 = v36 ^ 1;
    return v37 & 1;
  }
  sub_1BDF8BF34((uint64_t)v12, (uint64_t)v10);
  if (v30((char *)v29, 1, v4) != 1)
  {
    char v32 = v10;
    long long v33 = v41;
    (*v40)(v41, v29, v4);
    sub_1BE05A0E4();
    int v43 = sub_1BE070440();
    char v34 = *v42;
    uint64_t v35 = v33;
    uint64_t v10 = v32;
    uint64_t v22 = v46;
    (*v42)(v35, v4);
    v34(v10, v4);
    sub_1BDF8686C((uint64_t)v12, &qword_1EB678020);
    uint64_t v31 = v50;
    if ((v43 & 1) == 0) {
      goto LABEL_25;
    }
    goto LABEL_19;
  }
  (*v42)(v10, v4);
LABEL_24:
  sub_1BDF8686C((uint64_t)v12, &qword_1EA0E2E98);
LABEL_25:
  sub_1BE05A084((uint64_t)v15, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
  sub_1BE05A084((uint64_t)v18, type metadata accessor for EventVirtualConferenceJoinMethodModelObject);
LABEL_26:
  char v37 = 0;
  return v37 & 1;
}

uint64_t sub_1BE057850(int64x2_t *a1, int64x2_t *a2)
{
  uint64_t v2 = a1[1].i64[0];
  if (v2 != a2[1].i64[0]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = a1 + 2;
  uint64_t v4 = a2 + 2;
  uint64_t v5 = v2 - 1;
  do
  {
    int64x2_t v6 = *v3++;
    int64x2_t v7 = v6;
    int64x2_t v8 = *v4++;
    int32x2_t v9 = vmovn_s64(vceqq_s64(v7, v8));
    BOOL v11 = v5-- != 0;
  }
  while ((v9.i8[0] & v9.i8[4] & 1) != 0 && v11);
  return v9.i8[0] & v9.i8[4] & 1;
}

BOOL sub_1BE0578C0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  uint64_t v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1BE05792C(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1BE070EF0(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1BE070EF0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BE0579F4(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = sub_1BE06EEE0();
  uint64_t v48 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  BOOL v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for EventAlarmTrigger();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  BOOL v11 = (double *)((char *)v38 - v10);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3750);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for EventAlarmModelObject();
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v22 = (char *)v38 - v21;
  uint64_t v23 = *(void *)(a1 + 16);
  if (v23 != *(void *)(a2 + 16)) {
    goto LABEL_19;
  }
  uint64_t v41 = v11;
  uint64_t v42 = v12;
  if (!v23 || a1 == a2)
  {
    char v36 = 1;
    return v36 & 1;
  }
  unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v44 = *(void *)(v20 + 72);
  uint64_t v45 = v19;
  v38[0] = v48 + 32;
  v38[1] = v6;
  uint64_t v39 = v5;
  long long v40 = (void (**)(char *, uint64_t))(v48 + 8);
  uint64_t v25 = v23 - 1;
  uint64_t v26 = v42;
  uint64_t v46 = a2;
  uint64_t v47 = a1;
  while (1)
  {
    uint64_t v48 = v25;
    sub_1BE05A01C(a1 + v24, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
    sub_1BE05A01C(a2 + v24, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
    uint64_t v27 = (double *)&v14[*(int *)(v26 + 48)];
    sub_1BE05A01C((uint64_t)v22, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
    sub_1BE05A01C((uint64_t)v18, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    char v34 = v41;
    sub_1BE05A01C((uint64_t)v14, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
    if (swift_getEnumCaseMultiPayload() == 1) {
      goto LABEL_17;
    }
    if (*v34 != *v27)
    {
LABEL_15:
      sub_1BE05A084((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
      goto LABEL_18;
    }
LABEL_11:
    sub_1BE05A084((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
    char v35 = v22[*(int *)(v45 + 20)] ^ v18[*(int *)(v45 + 20)];
    sub_1BE05A084((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
    sub_1BE05A084((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
    a2 = v46;
    a1 = v47;
    if ((v35 & 1) == 0)
    {
      uint64_t v25 = v48 - 1;
      v24 += v44;
      if (v48) {
        continue;
      }
    }
    char v36 = v35 ^ 1;
    return v36 & 1;
  }
  sub_1BE05A01C((uint64_t)v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for EventAlarmTrigger);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = v9;
    uint64_t v29 = v39;
    uint64_t v30 = v43;
    (*(void (**)(char *, double *, uint64_t))v38[0])(v39, v27, v43);
    char v31 = sub_1BE06EEB0();
    char v32 = *v40;
    long long v33 = v29;
    uint64_t v9 = v28;
    uint64_t v26 = v42;
    (*v40)(v33, v30);
    v32(v9, v30);
    if ((v31 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  (*v40)(v9, v43);
LABEL_17:
  sub_1BDF8686C((uint64_t)v14, &qword_1EA0E3750);
LABEL_18:
  sub_1BE05A084((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
  sub_1BE05A084((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for EventAlarmModelObject);
LABEL_19:
  char v36 = 0;
  return v36 & 1;
}

uint64_t sub_1BE057F00(uint64_t a1, uint64_t a2)
{
  return sub_1BE057F80(a1, a2, type metadata accessor for EventRecurrenceRuleModelObject, type metadata accessor for EventRecurrenceRuleModelObject, (uint64_t (*)(char *, char *))static EventRecurrenceRuleModelObject.== infix(_:_:));
}

uint64_t sub_1BE057F40(uint64_t a1, uint64_t a2)
{
  return sub_1BE057F80(a1, a2, type metadata accessor for EventAttendeeModelObject, type metadata accessor for EventAttendeeModelObject, (uint64_t (*)(char *, char *))static EventAttendeeModelObject.== infix(_:_:));
}

uint64_t sub_1BE057F80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *))
{
  uint64_t v9 = a3(0) - 8;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v20 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v18 = *(void *)(v13 + 72);
      uint64_t v19 = v16 - 1;
      do
      {
        sub_1BE05A01C(a1 + v17, (uint64_t)v15, a4);
        sub_1BE05A01C(a2 + v17, (uint64_t)v12, a4);
        char v20 = a5(v15, v12);
        sub_1BE05A084((uint64_t)v12, a4);
        sub_1BE05A084((uint64_t)v15, a4);
        BOOL v22 = v19-- != 0;
        if ((v20 & 1) == 0) {
          break;
        }
        v17 += v18;
      }
      while (v22);
    }
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t EventLocationSearchResultsModelObject.contactsSearchResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventLocationSearchResultsModelObject.contactsSearchResults.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v1 = a1;
  return result;
}

uint64_t (*EventLocationSearchResultsModelObject.contactsSearchResults.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationSearchResultsModelObject.recentsSearchResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventLocationSearchResultsModelObject.recentsSearchResults.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*EventLocationSearchResultsModelObject.recentsSearchResults.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationSearchResultsModelObject.frequentsSearchResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventLocationSearchResultsModelObject.frequentsSearchResults.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*EventLocationSearchResultsModelObject.frequentsSearchResults.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationSearchResultsModelObject.eventsSearchResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventLocationSearchResultsModelObject.eventsSearchResults.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*EventLocationSearchResultsModelObject.eventsSearchResults.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationSearchResultsModelObject.textualSearchResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventLocationSearchResultsModelObject.textualSearchResults.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*EventLocationSearchResultsModelObject.textualSearchResults.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationSearchResultsModelObject.conferenceRoomSearchResults.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EventLocationSearchResultsModelObject.conferenceRoomSearchResults.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*EventLocationSearchResultsModelObject.conferenceRoomSearchResults.modify())()
{
  return nullsub_1;
}

uint64_t EventLocationSearchResultsModelObject.init(contactsSearchResults:recentsSearchResults:frequentsSearchResults:eventsSearchResults:textualSearchResults:conferenceRoomSearchResults:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t EventLocationSearchResultsModelObject.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v7 = v1[5];
  if (*v1)
  {
    sub_1BE070FD0();
    uint64_t v9 = *(void *)(v4 + 16);
    sub_1BE070FC0();
    if (v9)
    {
      swift_bridgeObjectRetain();
      EventLocationModelObject.hash(into:)();
      uint64_t v10 = v9 - 1;
      if (v10)
      {
        uint64_t v11 = v4 + 208;
        do
        {
          EventLocationModelObject.hash(into:)();
          v11 += 176;
          --v10;
        }
        while (v10);
      }
      swift_bridgeObjectRelease();
    }
    if (v3)
    {
LABEL_8:
      sub_1BE070FD0();
      swift_bridgeObjectRetain();
      sub_1BE0132F4(a1, v3);
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_9;
      }
LABEL_32:
      sub_1BE070FD0();
      if (v5) {
        goto LABEL_15;
      }
LABEL_33:
      sub_1BE070FD0();
      if (v8) {
        goto LABEL_21;
      }
      goto LABEL_34;
    }
  }
  else
  {
    sub_1BE070FD0();
    if (v3) {
      goto LABEL_8;
    }
  }
  sub_1BE070FD0();
  if (!v6) {
    goto LABEL_32;
  }
LABEL_9:
  sub_1BE070FD0();
  uint64_t v12 = *(void *)(v6 + 16);
  sub_1BE070FC0();
  if (v12)
  {
    swift_bridgeObjectRetain();
    EventLocationModelObject.hash(into:)();
    uint64_t v13 = v12 - 1;
    if (v13)
    {
      uint64_t v14 = v6 + 208;
      do
      {
        EventLocationModelObject.hash(into:)();
        v14 += 176;
        --v13;
      }
      while (v13);
    }
    swift_bridgeObjectRelease();
  }
  if (!v5) {
    goto LABEL_33;
  }
LABEL_15:
  sub_1BE070FD0();
  uint64_t v15 = *(void *)(v5 + 16);
  sub_1BE070FC0();
  if (v15)
  {
    swift_bridgeObjectRetain();
    EventLocationModelObject.hash(into:)();
    uint64_t v16 = v15 - 1;
    if (v16)
    {
      uint64_t v17 = v5 + 208;
      do
      {
        EventLocationModelObject.hash(into:)();
        v17 += 176;
        --v16;
      }
      while (v16);
    }
    swift_bridgeObjectRelease();
  }
  if (v8)
  {
LABEL_21:
    sub_1BE070FD0();
    uint64_t v18 = *(void *)(v8 + 16);
    sub_1BE070FC0();
    if (v18)
    {
      swift_bridgeObjectRetain();
      EventLocationModelObject.hash(into:)();
      uint64_t v19 = v18 - 1;
      if (v19)
      {
        uint64_t v20 = v8 + 208;
        do
        {
          EventLocationModelObject.hash(into:)();
          v20 += 176;
          --v19;
        }
        while (v19);
      }
      swift_bridgeObjectRelease();
    }
    if (v7) {
      goto LABEL_27;
    }
    return sub_1BE070FD0();
  }
LABEL_34:
  sub_1BE070FD0();
  if (!v7) {
    return sub_1BE070FD0();
  }
LABEL_27:
  sub_1BE070FD0();
  swift_bridgeObjectRetain();
  sub_1BE013114(a1, v7);

  return swift_bridgeObjectRelease();
}

uint64_t EventLocationSearchResultsModelObject.hashValue.getter()
{
  long long v1 = v0[1];
  long long v4 = *v0;
  long long v5 = v1;
  long long v6 = v0[2];
  sub_1BE070FB0();
  EventLocationSearchResultsModelObject.hash(into:)((uint64_t)v3);
  return sub_1BE070FF0();
}

unint64_t sub_1BE05879C(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BE058858()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE058860()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE058868()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE058870()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE058878()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BE058880()
{
  long long v1 = v0[1];
  long long v4 = *v0;
  long long v5 = v1;
  long long v6 = v0[2];
  sub_1BE070FB0();
  EventLocationSearchResultsModelObject.hash(into:)((uint64_t)v3);
  return sub_1BE070FF0();
}

uint64_t sub_1BE0588D8()
{
  long long v1 = v0[1];
  long long v4 = *v0;
  long long v5 = v1;
  long long v6 = v0[2];
  sub_1BE070FB0();
  EventLocationSearchResultsModelObject.hash(into:)((uint64_t)v3);
  return sub_1BE070FF0();
}

unint64_t sub_1BE05892C()
{
  return sub_1BE05879C(*v0);
}

uint64_t sub_1BE058934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1BE059CAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BE05895C(uint64_t a1)
{
  unint64_t v2 = sub_1BE0594F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1BE058998(uint64_t a1)
{
  unint64_t v2 = sub_1BE0594F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t EventLocationSearchResultsModelObject.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4EB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE0594F8();
  sub_1BE071010();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4EC8);
    char v24 = 0;
    uint64_t v9 = sub_1BE059674(&qword_1EA0E4ED0, &qword_1EA0E4EC8, (void (*)(void))sub_1BE0476E8);
    sub_1BE070DA0();
    BOOL v22 = a2;
    uint64_t v11 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4ED8);
    char v24 = 1;
    sub_1BE05954C(&qword_1EA0E4EE0, &qword_1EA0E4EE8);
    uint64_t v23 = v11;
    swift_bridgeObjectRetain();
    sub_1BE070DA0();
    uint64_t v12 = v9;
    uint64_t v13 = v25;
    char v24 = 2;
    swift_bridgeObjectRetain();
    uint64_t v21 = v12;
    sub_1BE070DA0();
    uint64_t v14 = v25;
    char v24 = 3;
    swift_bridgeObjectRetain();
    sub_1BE070DA0();
    uint64_t v20 = v6;
    uint64_t v15 = v25;
    char v24 = 4;
    swift_bridgeObjectRetain();
    sub_1BE070DA0();
    uint64_t v16 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4F00);
    char v24 = 5;
    sub_1BE059674(&qword_1EA0E4F08, &qword_1EA0E4F00, (void (*)(void))sub_1BE0595CC);
    swift_bridgeObjectRetain();
    sub_1BE070DA0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v5);
    uint64_t v17 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v18 = v22;
    *BOOL v22 = v23;
    v18[1] = v13;
    v18[2] = v14;
    _OWORD v18[3] = v15;
    v18[4] = v16;
    v18[5] = v17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t EventLocationSearchResultsModelObject.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4F10);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v16 = v1[2];
  uint64_t v17 = v8;
  uint64_t v10 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v15 = v10;
  uint64_t v13 = v1[5];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BE0594F8();
  sub_1BE071030();
  uint64_t v19 = v9;
  char v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4EC8);
  sub_1BE059674(&qword_1EA0E4F18, &qword_1EA0E4EC8, (void (*)(void))sub_1BE04797C);
  sub_1BE070E50();
  if (!v2)
  {
    uint64_t v11 = v16;
    uint64_t v19 = v17;
    char v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4ED8);
    sub_1BE05954C(&qword_1EA0E4F20, &qword_1EA0E4F28);
    sub_1BE070E50();
    uint64_t v19 = v11;
    char v18 = 2;
    sub_1BE070E50();
    uint64_t v19 = v15;
    char v18 = 3;
    sub_1BE070E50();
    uint64_t v19 = v14;
    char v18 = 4;
    sub_1BE070E50();
    uint64_t v19 = v13;
    char v18 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4F00);
    sub_1BE059674(&qword_1EA0E4F30, &qword_1EA0E4F00, (void (*)(void))sub_1BE059620);
    sub_1BE070E50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BE0592CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return EventLocationSearchResultsModelObject.init(from:)(a1, a2);
}

uint64_t sub_1BE0592E4(void *a1)
{
  return EventLocationSearchResultsModelObject.encode(to:)(a1);
}

uint64_t _s13CalendarUIKit37EventLocationSearchResultsModelObjectV2eeoiySbAC_ACtFZ_0(void *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[5];
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v9 = a2[5];
  if (*a1)
  {
    if (!v5) {
      return 0;
    }
    uint64_t v24 = a1[4];
    uint64_t v25 = a1[3];
    uint64_t v23 = a2[4];
    swift_bridgeObjectRetain();
    uint64_t v10 = swift_bridgeObjectRetain();
    BOOL v11 = sub_1BE056974(v10, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v11) {
      return 0;
    }
  }
  else
  {
    uint64_t v24 = a1[4];
    uint64_t v25 = a1[3];
    uint64_t v23 = a2[4];
    if (v5) {
      return 0;
    }
  }
  if (v2)
  {
    if (!v6) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = swift_bridgeObjectRetain();
    char v13 = sub_1BE056A60(v12, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  if (v3)
  {
    if (!v8) {
      return 0;
    }
    uint64_t v14 = v4;
    uint64_t v15 = v9;
    swift_bridgeObjectRetain();
    uint64_t v16 = swift_bridgeObjectRetain();
    BOOL v17 = sub_1BE056974(v16, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v17) {
      return 0;
    }
  }
  else
  {
    uint64_t v14 = v4;
    uint64_t v15 = v9;
    if (v8) {
      return 0;
    }
  }
  if (v25)
  {
    if (!v7) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = swift_bridgeObjectRetain();
    BOOL v19 = sub_1BE056974(v18, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v19) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v24)
  {
    if (!v23) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v20 = swift_bridgeObjectRetain();
    BOOL v21 = sub_1BE056974(v20, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v21) {
      return 0;
    }
  }
  else if (v23)
  {
    return 0;
  }
  if (v14)
  {
    if (v15 && (sub_1BE057124(v14, v15) & 1) != 0) {
      return 1;
    }
  }
  else if (!v15)
  {
    return 1;
  }
  return 0;
}

unint64_t sub_1BE0594F8()
{
  unint64_t result = qword_1EA0E4EC0;
  if (!qword_1EA0E4EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4EC0);
  }
  return result;
}

uint64_t sub_1BE05954C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4ED8);
    sub_1BE0596E0(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BE0595CC()
{
  unint64_t result = qword_1EA0E4EF0;
  if (!qword_1EA0E4EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4EF0);
  }
  return result;
}

unint64_t sub_1BE059620()
{
  unint64_t result = qword_1EA0E4EF8;
  if (!qword_1EA0E4EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4EF8);
  }
  return result;
}

uint64_t sub_1BE059674(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BE0596E0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4518);
    sub_1BE0476E8();
    sub_1BE04797C();
    sub_1BE0595CC();
    sub_1BE059620();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_1BE05976C()
{
  return &protocol witness table for EventConferenceRoomModelObject;
}

unint64_t sub_1BE05977C()
{
  unint64_t result = qword_1EA0E4F38;
  if (!qword_1EA0E4F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4F38);
  }
  return result;
}

uint64_t destroy for EventLocationSearchResultsModelObject()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for EventLocationSearchResultsModelObject(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for EventLocationSearchResultsModelObject(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for EventLocationSearchResultsModelObject(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventLocationSearchResultsModelObject(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 48)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EventLocationSearchResultsModelObject(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventLocationSearchResultsModelObject()
{
  return &type metadata for EventLocationSearchResultsModelObject;
}

unsigned char *storeEnumTagSinglePayload for EventLocationSearchResultsModelObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE059B6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventLocationSearchResultsModelObject.CodingKeys()
{
  return &type metadata for EventLocationSearchResultsModelObject.CodingKeys;
}

unint64_t sub_1BE059BA8()
{
  unint64_t result = qword_1EA0E4F40;
  if (!qword_1EA0E4F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4F40);
  }
  return result;
}

unint64_t sub_1BE059C00()
{
  unint64_t result = qword_1EA0E4F48;
  if (!qword_1EA0E4F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4F48);
  }
  return result;
}

unint64_t sub_1BE059C58()
{
  unint64_t result = qword_1EA0E4F50;
  if (!qword_1EA0E4F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4F50);
  }
  return result;
}

uint64_t sub_1BE059CAC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000001BE08DD60 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BE08DD80 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BE08DDA0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BE08DDC0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BE08DDE0 || (sub_1BE070EF0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001BE08DE00)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1BE059EF0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 200);
  uint64_t v18 = *(void *)(a1 + 192);
  uint64_t v19 = *(void *)(a1 + 184);
  uint64_t v3 = *(void *)(a1 + 208);
  uint64_t v4 = *(void *)(a1 + 216);
  uint64_t v5 = *(void *)(a1 + 224);
  uint64_t v6 = *(void *)(a1 + 232);
  uint64_t v7 = *(void *)(a1 + 240);
  long long v16 = *(_OWORD *)(a1 + 264);
  long long v17 = *(_OWORD *)(a1 + 248);
  long long v15 = *(_OWORD *)(a1 + 280);
  long long v13 = *(_OWORD *)(a1 + 312);
  long long v14 = *(_OWORD *)(a1 + 296);
  long long v12 = *(_OWORD *)(a1 + 328);
  uint64_t v9 = *(void *)(a1 + 344);
  uint64_t v8 = *(void *)(a1 + 352);
  char v10 = *(unsigned char *)(a1 + 360);
  sub_1BE016EB4(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(unsigned char *)(a1 + 176));
  sub_1BE016EB4(v19, v18, v2, v3, v4, v5, v6, v7, v17, *((unint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12,
    *((uint64_t *)&v12 + 1),
    v9,
    v8,
    v10);
  return a1;
}

uint64_t sub_1BE05A01C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BE05A084(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1BE05A0E4()
{
  unint64_t result = qword_1EA0E2EA0;
  if (!qword_1EA0E2EA0)
  {
    sub_1BE06EE10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E2EA0);
  }
  return result;
}

uint64_t dispatch thunk of EventVirtualConferenceModel.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.joinMethods.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.conferenceDetails.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.serializationBlockTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.isWritable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.source.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.firstPhoneNumber.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of EventVirtualConferenceModel.urlWithAllowedScheme.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of EventVirtualConferenceJoinMethodModel.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EventVirtualConferenceJoinMethodModel.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of EventVirtualConferenceJoinMethodModel.isBroadcast.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t EventParticipantModel.nameUsingAddressAsBackup.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  if (v8)
  {
    uint64_t v9 = v7;
    uint64_t v10 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
    }
    if (v10) {
      return v9;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  if (v12)
  {
    uint64_t v9 = v11;
    uint64_t v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0) {
      uint64_t v13 = v11 & 0xFFFFFFFFFFFFLL;
    }
    if (v13) {
      return v9;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  if (v15)
  {
    uint64_t v9 = v14;
    uint64_t v16 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFLL;
    }
    if (v16) {
      return v9;
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  uint64_t v17 = sub_1BE06EE10();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v6, 1, v17) == 1)
  {
    sub_1BE05A444((uint64_t)v6);
    return 0;
  }
  uint64_t v9 = sub_1BE06EDC0();
  unint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v17);
  uint64_t v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v21 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (!v21)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

uint64_t sub_1BE05A444(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BE05A4A4()
{
  sub_1BDF8A3E0();
  sub_1BE06F6E0();
  return v1;
}

ValueMetadata *type metadata accessor for EditableKey()
{
  return &type metadata for EditableKey;
}

uint64_t sub_1BE05A4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1BE05A554();

  return MEMORY[0x1F40F8668](a1, a2, a3, a4, v8);
}

unint64_t sub_1BE05A554()
{
  unint64_t result = qword_1EA0E4F58;
  if (!qword_1EA0E4F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E4F58);
  }
  return result;
}

id EKVirtualConferenceModelWrapper.ekVirtualConference.getter()
{
  return *v0;
}

void EKVirtualConferenceModelWrapper.ekVirtualConference.setter(void *a1)
{
  *unsigned __int8 v1 = a1;
}

uint64_t (*EKVirtualConferenceModelWrapper.ekVirtualConference.modify())()
{
  return nullsub_1;
}

uint64_t EKVirtualConferenceModelWrapper.title.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_title);
}

uint64_t EKVirtualConferenceModelWrapper.joinMethods.getter()
{
  id v1 = objc_msgSend(*v0, sel_joinMethods);
  sub_1BE05A784();
  unint64_t v2 = sub_1BE070710();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1BE070CB0();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v11 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1BDFF4830(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = 0;
    uint64_t v6 = v11;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v7 = (id)MEMORY[0x1C18893C0](v5, v2);
      }
      else {
        id v7 = *(id *)(v2 + 8 * v5 + 32);
      }
      id v8 = v7;
      unint64_t v10 = *(void *)(v11 + 16);
      unint64_t v9 = *(void *)(v11 + 24);
      if (v10 >= v9 >> 1) {
        sub_1BDFF4830(v9 > 1, v10 + 1, 1);
      }
      ++v5;
      *(void *)(v11 + 16) = v10 + 1;
      *(void *)(v11 + 8 * v10 + 32) = v8;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    return v6;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BE05A784()
{
  unint64_t result = qword_1EA0E4F60[0];
  if (!qword_1EA0E4F60[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1EA0E4F60);
  }
  return result;
}

uint64_t EKVirtualConferenceModelWrapper.conferenceDetails.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_conferenceDetails);
}

uint64_t EKVirtualConferenceModelWrapper.serializationBlockTitle.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_serializationBlockTitle);
}

id EKVirtualConferenceModelWrapper.isWritable.getter()
{
  return objc_msgSend(*v0, sel_isWritable);
}

id EKVirtualConferenceModelWrapper.source.getter()
{
  return objc_msgSend(*v0, sel_source);
}

uint64_t EKVirtualConferenceModelWrapper.firstPhoneNumber.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE05A828((SEL *)&selRef_firstPhoneNumber, a1);
}

uint64_t EKVirtualConferenceModelWrapper.urlWithAllowedScheme.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE05A828((SEL *)&selRef_urlWithAllowedScheme, a1);
}

uint64_t sub_1BE05A828@<X0>(SEL *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = [*v2 *a1];
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1BE06EDE0();

    uint64_t v6 = sub_1BE06EE10();
    id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a2;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = sub_1BE06EE10();
    id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a2;
    uint64_t v10 = 1;
  }

  return v7(v9, v10, 1, v8);
}

uint64_t sub_1BE05A8F4(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_conferenceDetails);
}

uint64_t sub_1BE05A900(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_serializationBlockTitle);
}

id sub_1BE05A90C()
{
  return objc_msgSend(*v0, sel_source);
}

uint64_t sub_1BE05A91C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE05A934((SEL *)&selRef_firstPhoneNumber, a1);
}

uint64_t sub_1BE05A928@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE05A934((SEL *)&selRef_urlWithAllowedScheme, a1);
}

uint64_t sub_1BE05A934@<X0>(SEL *a1@<X2>, uint64_t a2@<X8>)
{
  id v4 = [*v2 *a1];
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1BE06EDE0();

    uint64_t v6 = sub_1BE06EE10();
    id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a2;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = sub_1BE06EE10();
    id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a2;
    uint64_t v10 = 1;
  }

  return v7(v9, v10, 1, v8);
}

uint64_t (*EKVirtualConferenceJoinMethodModelWrapper.ekVirtualConferenceJoinMethod.modify())()
{
  return nullsub_1;
}

uint64_t EKVirtualConferenceJoinMethodModelWrapper.title.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_title);
}

uint64_t EKVirtualConferenceJoinMethodModelWrapper.url.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = [*v1 URL];
  sub_1BE06EDE0();

  uint64_t v4 = sub_1BE06EE10();
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, 0, 1, v4);
}

id EKVirtualConferenceJoinMethodModelWrapper.isBroadcast.getter()
{
  return objc_msgSend(*v0, sel_isBroadcast);
}

id sub_1BE05AADC()
{
  return objc_msgSend(*v0, sel_isBroadcast);
}

_UNKNOWN **sub_1BE05AB00()
{
  return &protocol witness table for EKVirtualConferenceJoinMethodModelWrapper;
}

ValueMetadata *type metadata accessor for EKVirtualConferenceModelWrapper()
{
  return &type metadata for EKVirtualConferenceModelWrapper;
}

ValueMetadata *type metadata accessor for EKVirtualConferenceJoinMethodModelWrapper()
{
  return &type metadata for EKVirtualConferenceJoinMethodModelWrapper;
}

uint64_t sub_1BE05AB34()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BE05ABD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    v10[1] = v11[1];
    unint64_t v12 = (void *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v12 = *v13;
    v12[1] = v13[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BE05AD0C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BE05AD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BE05AE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BE05AF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  int v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  *(_OWORD *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BE05AF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)(((unint64_t)v7 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)(((unint64_t)v8 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BE05B040(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1BE05B194);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1BE05B1A8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v8 >= a3)
  {
    int v14 = 0;
    int v15 = a2 - v8;
    if (a2 <= v8)
    {
LABEL_17:
      switch(v14)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v19 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                *unint64_t v19 = a2 ^ 0x80000000;
                v19[1] = 0;
              }
              else
              {
                v19[1] = a2 - 1;
              }
            }
            else
            {
              uint64_t v18 = *(void (**)(void))(v6 + 56);
              v18();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v11 = a3 - v8;
    if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v12 = v11 + 1;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    int v15 = a2 - v8;
    if (a2 <= v8) {
      goto LABEL_17;
    }
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15;
  }
  else {
    int v16 = 1;
  }
  if (((((v9 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v17 = ~v8 + a2;
    bzero(a1, ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v17;
  }
  switch(v14)
  {
    case 1:
      a1[v10] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v16;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1BE05B39CLL);
    case 4:
      *(_DWORD *)&a1[v10] = v16;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for OnboardingHeaderView()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1BE05B3DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1BE05B420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E13F8);
  sub_1BE06F4A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4FE8);
  sub_1BE06F4A0();
  sub_1BE06F4A0();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4FF0);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4FF8);
  swift_getTupleTypeMetadata3();
  sub_1BE070390();
  swift_getWitnessTable();
  uint64_t v4 = sub_1BE0701E0();
  uint64_t v19 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = sub_1BE06F4A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unsigned int v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  int v13 = (char *)&v18 - v12;
  uint64_t v14 = *(void *)(a1 + 24);
  uint64_t v22 = v3;
  uint64_t v23 = v14;
  uint64_t v24 = v20;
  sub_1BE06F7D0();
  sub_1BE0701D0();
  sub_1BE06FAC0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1BE06FF00();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v4);
  uint64_t v25 = WitnessTable;
  uint64_t v26 = MEMORY[0x1E4F3CAA0];
  swift_getWitnessTable();
  sub_1BDF9DEF0(v11);
  int v16 = *(void (**)(char *, uint64_t))(v8 + 8);
  v16(v11, v7);
  sub_1BDF9DEF0(v13);
  return ((uint64_t (*)(char *, uint64_t))v16)(v13, v7);
}

uint64_t sub_1BE05B77C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v99 = a1;
  uint64_t v88 = a4;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E13F8);
  uint64_t v96 = a2;
  uint64_t v6 = sub_1BE06F4A0();
  uint64_t v98 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v92 = (char *)v77 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4FE8);
  uint64_t v97 = sub_1BE06F4A0();
  uint64_t v100 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v93 = (uint64_t)v77 - v8;
  uint64_t v102 = sub_1BE06F4A0();
  uint64_t v94 = *(void *)(v102 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v102);
  unsigned int v11 = (char *)v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  long long v101 = (char *)v77 - v12;
  id v13 = CUIKAppTintColor();
  uint64_t v107 = MEMORY[0x1C1888840](v13);
  uint64_t v91 = a3;
  sub_1BE06FE20();
  swift_release();
  id v14 = objc_msgSend(self, sel_cuik_tertiaryGroupedBackgroundColor);
  uint64_t v15 = MEMORY[0x1C1888840](v14);
  sub_1BE070320();
  sub_1BE06F390();
  uint64_t v107 = v15;
  LOWORD(v108) = 256;
  int v109 = (char *)v135[12];
  LOBYTE(v110) = v136;
  uint64_t v111 = v137;
  LOBYTE(v112) = v138;
  long long v113 = v139;
  sub_1BE070320();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1250);
  uint64_t v16 = sub_1BDF86964(&qword_1EA0E13F0, &qword_1EA0E13F8);
  v135[10] = a3;
  v135[11] = v16;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1BDFB76F0();
  uint64_t v18 = v93;
  uint64_t v19 = v92;
  sub_1BE06FD70();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v19, v6);
  sub_1BE06FAD0();
  uint64_t v20 = sub_1BDF86964(&qword_1EA0E5000, &qword_1EA0E4FE8);
  v135[8] = WitnessTable;
  v135[9] = v20;
  uint64_t v21 = v97;
  uint64_t v22 = swift_getWitnessTable();
  sub_1BE06FF00();
  (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v18, v21);
  v135[6] = v22;
  v135[7] = MEMORY[0x1E4F3CAA0];
  uint64_t v23 = v102;
  uint64_t v85 = swift_getWitnessTable();
  sub_1BDF9DEF0(v11);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t))(v94 + 8);
  long long v95 = v11;
  long long v86 = v24;
  uint64_t v87 = v94 + 8;
  v24(v11, v23);
  uint64_t v98 = type metadata accessor for OnboardingHeaderView();
  uint64_t v25 = (uint64_t *)(v99 + *(int *)(v98 + 36));
  uint64_t v26 = v25[1];
  uint64_t v107 = *v25;
  uint64_t v108 = v26;
  unint64_t v27 = sub_1BDF859F0();
  swift_bridgeObjectRetain();
  uint64_t v97 = v27;
  uint64_t v28 = sub_1BE06FD30();
  uint64_t v30 = v29;
  LOBYTE(v15) = v31 & 1;
  uint64_t v107 = sub_1BE070010();
  uint64_t v32 = sub_1BE06FCE0();
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  sub_1BDF8587C(v28, v30, v15);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BE06FB20();
  uint64_t v37 = sub_1BE06FD10();
  uint64_t v39 = v38;
  LOBYTE(v15) = v40;
  swift_release();
  sub_1BDF8587C(v32, v34, v36);
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_1BE06FD00();
  uint64_t v93 = v42;
  int v81 = v43;
  uint64_t v100 = v44;
  sub_1BDF8587C(v37, v39, v15 & 1);
  swift_bridgeObjectRelease();
  int v80 = sub_1BE06FAD0();
  sub_1BE06F2D0();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t KeyPath = swift_getKeyPath();
  long long v54 = (uint64_t *)(v99 + *(int *)(v98 + 40));
  uint64_t v55 = v54[1];
  if (v55)
  {
    uint64_t v107 = *v54;
    uint64_t v108 = v55;
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_1BE06FD30();
    uint64_t v58 = v57;
    uint64_t v96 = v59;
    long long v92 = (char *)(v60 & 1);
    unsigned __int8 v61 = sub_1BE06FAD0();
    sub_1BE06F2D0();
    uint64_t v98 = v63;
    uint64_t v99 = v62;
    uint64_t v65 = v64;
    uint64_t v67 = v66;
    uint64_t v84 = sub_1BE070010();
    uint64_t v83 = sub_1BE06FB40();
    uint64_t v82 = swift_getKeyPath();
    uint64_t v97 = swift_getKeyPath();
    uint64_t v68 = v61;
    int v79 = 65537;
  }
  else
  {
    uint64_t v56 = 0;
    uint64_t v58 = 0;
    long long v92 = 0;
    uint64_t v96 = 0;
    uint64_t v97 = 0;
    uint64_t v68 = 0;
    uint64_t v98 = 0;
    uint64_t v99 = 0;
    uint64_t v65 = 0;
    uint64_t v67 = 0;
    uint64_t v83 = 0;
    uint64_t v84 = 0;
    uint64_t v82 = 0;
    int v79 = 0;
  }
  uint64_t v90 = v68;
  int v69 = v81 & 1;
  uint64_t v70 = v95;
  (*(void (**)(void))(v94 + 16))();
  uint64_t v122 = v41;
  uint64_t v123 = v93;
  char v124 = v69;
  char v71 = v69;
  int v81 = v69;
  uint64_t v78 = v41;
  uint64_t v125 = v100;
  char v126 = v80;
  uint64_t v127 = v46;
  uint64_t v128 = v48;
  uint64_t v129 = v50;
  uint64_t v130 = v52;
  char v131 = 0;
  uint64_t v89 = KeyPath;
  uint64_t v132 = KeyPath;
  __int16 v133 = 1;
  char v134 = 1;
  v135[0] = v70;
  v135[1] = &v122;
  uint64_t v107 = v56;
  uint64_t v108 = v58;
  uint64_t v72 = v96;
  int v109 = v92;
  uint64_t v110 = v96;
  uint64_t v111 = v68;
  uint64_t v112 = v99;
  v77[1] = v65;
  *(void *)&long long v113 = v65;
  *((void *)&v113 + 1) = v67;
  uint64_t v91 = v67;
  uint64_t v114 = v98;
  uint64_t v115 = 0;
  uint64_t v116 = v84;
  uint64_t v117 = v82;
  uint64_t v118 = v83;
  uint64_t v119 = v97;
  char v121 = BYTE2(v79);
  __int16 v120 = v79;
  v135[2] = &v107;
  sub_1BDF8555C(v41, v93, v71);
  swift_bridgeObjectRetain();
  swift_retain();
  char v73 = (char)v92;
  sub_1BE05C164(v56, v58, (char)v92, v72);
  v106[0] = v102;
  v106[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4FF0);
  v106[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4FF8);
  uint64_t v103 = v85;
  uint64_t v104 = sub_1BE05C1E0(&qword_1EA0E5008, &qword_1EA0E4FF0, (void (*)(void))sub_1BE05C260);
  unint64_t v105 = sub_1BE05C300();
  sub_1BE034C24((uint64_t)v135, 3uLL, (uint64_t)v106);
  sub_1BE05C578(v56, v58, v73, v96);
  sub_1BDF8587C(v78, v93, v81);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v74 = v102;
  uint64_t v75 = v86;
  v86(v101, v102);
  sub_1BE05C578(v107, v108, (char)v109, v110);
  sub_1BDF8587C(v122, v123, v124);
  swift_release();
  swift_bridgeObjectRelease();
  return v75(v95, v74);
}

uint64_t sub_1BE05C104@<X0>(uint64_t a1@<X8>)
{
  return sub_1BE05B77C(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1BE05C110@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1BE06F600();
  *a1 = result;
  return result;
}

uint64_t sub_1BE05C13C()
{
  return sub_1BE06F610();
}

uint64_t sub_1BE05C164(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1BDF8555C(result, a2, a3 & 1);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BE05C1E0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BE05C260()
{
  unint64_t result = qword_1EA0E5010;
  if (!qword_1EA0E5010)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E5018);
    sub_1BDFCE760();
    sub_1BDF86964(&qword_1EA0E5020, &qword_1EA0E5028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E5010);
  }
  return result;
}

unint64_t sub_1BE05C300()
{
  unint64_t result = qword_1EA0E5030;
  if (!qword_1EA0E5030)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E4FF8);
    sub_1BE05C1E0(&qword_1EA0E5038, &qword_1EA0E5040, (void (*)(void))sub_1BE05C398);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E5030);
  }
  return result;
}

unint64_t sub_1BE05C398()
{
  unint64_t result = qword_1EA0E5048;
  if (!qword_1EA0E5048)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E5050);
    sub_1BE05C438();
    sub_1BDF86964(&qword_1EA0E5020, &qword_1EA0E5028);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E5048);
  }
  return result;
}

unint64_t sub_1BE05C438()
{
  unint64_t result = qword_1EA0E5058;
  if (!qword_1EA0E5058)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E5060);
    sub_1BE05C4D8();
    sub_1BDF86964(&qword_1EA0E1410, &qword_1EA0E1418);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E5058);
  }
  return result;
}

unint64_t sub_1BE05C4D8()
{
  unint64_t result = qword_1EA0E5068;
  if (!qword_1EA0E5068)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EA0E5070);
    sub_1BDFCE760();
    sub_1BDF86964(&qword_1EA0E13F0, &qword_1EA0E13F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E5068);
  }
  return result;
}

uint64_t sub_1BE05C578(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1BDF8587C(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BE05C5FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1BE05C758@<X0>(void *a1@<X8>)
{
  return sub_1BE05CD20(a1);
}

uint64_t sub_1BE05C76C()
{
  return sub_1BE06F230();
}

uint64_t sub_1BE05C7E8@<X0>(void *a1@<X8>)
{
  return sub_1BE05D088(a1);
}

uint64_t sub_1BE05C7FC()
{
  return sub_1BE05D118();
}

uint64_t sub_1BE05C810@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BE05C890(void **a1)
{
  unint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1BE06F230();
}

uint64_t sub_1BE05C908@<X0>(unsigned char *a1@<X8>)
{
  return sub_1BE05CF4C(a1);
}

uint64_t sub_1BE05C91C()
{
  return sub_1BE05CFDC();
}

uint64_t sub_1BE05C930()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();

  return swift_release();
}

uint64_t sub_1BE05C9AC(uint64_t a1)
{
  uint64_t v2 = sub_1BE06EEE0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  v9(v6, (uint64_t)v8, v2);
  swift_retain();
  sub_1BE06F230();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

double sub_1BE05CB1C@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1BE05CB9C()
{
  return sub_1BE06F230();
}

uint64_t sub_1BE05CC18@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BE05CC98()
{
  return sub_1BE06F230();
}

uint64_t sub_1BE05CD0C@<X0>(void *a1@<X8>)
{
  return sub_1BE05CD20(a1);
}

uint64_t sub_1BE05CD20@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BE05CD9C(void **a1)
{
  unint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1BE06F230();
}

uint64_t sub_1BE05CE14@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BE05CE94()
{
  return sub_1BE06F230();
}

uint64_t sub_1BE05CF10@<X0>(unsigned char *a1@<X8>)
{
  return sub_1BE05CF4C(a1);
}

uint64_t sub_1BE05CF24()
{
  return sub_1BE05CFDC();
}

uint64_t sub_1BE05CF38@<X0>(unsigned char *a1@<X8>)
{
  return sub_1BE05CF4C(a1);
}

uint64_t sub_1BE05CF4C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BE05CFC8()
{
  return sub_1BE05CFDC();
}

uint64_t sub_1BE05CFDC()
{
  return sub_1BE06F230();
}

uint64_t sub_1BE05D04C@<X0>(void *a1@<X8>)
{
  return sub_1BE05CD20(a1);
}

uint64_t sub_1BE05D060()
{
  return sub_1BE060A0C();
}

uint64_t sub_1BE05D074@<X0>(void *a1@<X8>)
{
  return sub_1BE05D088(a1);
}

uint64_t sub_1BE05D088@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BE05D104()
{
  return sub_1BE05D118();
}

uint64_t sub_1BE05D118()
{
  return sub_1BE06F230();
}

uint64_t sub_1BE05D198()
{
  id v0 = CUIKBundle();
  uint64_t v1 = sub_1BE06ED00();

  return v1;
}

uint64_t sub_1BE05D4D0()
{
  return sub_1BE05E028();
}

uint64_t sub_1BE05D4E4()
{
  return sub_1BE05E144();
}

uint64_t sub_1BE05D4F8(void *a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v35 = a3;
  int v34 = a4 & 1;
  int v9 = a5 & 1;
  uint64_t v10 = sub_1BE070950();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v37 = v10;
  uint64_t v38 = v11;
  MEMORY[0x1F4188790](v10);
  char v36 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = &v33[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33B0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = &v33[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)(v6 + 40) = MEMORY[0x1E4FBC870];
  uint64_t v20 = v6 + OBJC_IVAR____TtC13CalendarUIKit24CUIKEventEditorViewModel__pushAction;
  LOBYTE(v40) = 0;
  sub_1BE06F200();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v17 + 32))(v20, v19, v16);
  uint64_t v21 = v35;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = v21;
  *(void *)(v6 + 16) = a1;
  *(unsigned char *)(v6 + 49) = v34;
  *(unsigned char *)(v6 + 48) = v9;
  swift_retain();
  id v22 = a1;
  sub_1BE061270(v22);
  *(void *)(v6 + 56) = v23;
  uint64_t v24 = sub_1BE06EEE0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v15, 1, 1, v24);
  id v25 = v22;
  uint64_t v26 = sub_1BE061C60(v25, (uint64_t)v15, v9);

  swift_beginAccess();
  uint64_t v39 = v26;
  type metadata accessor for EventChanges(0);
  sub_1BE06F200();
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  unint64_t v27 = (void *)(v40 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock);
  uint64_t v28 = *(void *)(v40 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock);
  *unint64_t v27 = sub_1BE0632BC;
  v27[1] = v6;
  swift_retain();
  sub_1BDFB76E0(v28);
  swift_release();
  id v29 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v30 = v36;
  sub_1BE070960();

  swift_allocObject();
  swift_weakInit();
  sub_1BE062FF0((unint64_t *)&qword_1EA0E5320, MEMORY[0x1E4F27FC8]);
  uint64_t v31 = v37;
  sub_1BE06F260();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v38 + 8))(v30, v31);
  swift_beginAccess();
  sub_1BE06F1D0();
  swift_endAccess();
  swift_release();

  swift_release();
  return v6;
}

uint64_t sub_1BE05D968()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BE05D9C0();
    return swift_release();
  }
  return result;
}

id sub_1BE05D9C0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void **)(v0 + 16);
  id result = objc_msgSend(v4, sel__refreshable);
  if (result)
  {
    id result = objc_msgSend(v4, sel_refresh);
    if (result)
    {
      sub_1BE061270(v4);
      *(void *)(v0 + 56) = v6;
      swift_bridgeObjectRelease();
      uint64_t v7 = sub_1BE06EEE0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v3, 1, 1, v7);
      int v8 = *(unsigned __int8 *)(v0 + 48);
      id v9 = v4;
      uint64_t v10 = sub_1BE061C60(v9, (uint64_t)v3, v8);

      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v14 = v10;
      swift_retain();
      sub_1BE06F230();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1BE06F220();
      swift_release();
      swift_release();
      uint64_t v11 = (void *)(v14 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock);
      uint64_t v12 = *(void *)(v14 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock);
      *uint64_t v11 = sub_1BE062F84;
      v11[1] = v0;
      swift_retain();
      sub_1BDFB76E0(v12);
      return (id)swift_release();
    }
  }
  return result;
}

void sub_1BE05DBA8()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1BE05ED50(v1, 1, 1);
  uint64_t v2 = swift_release();
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t))(v0 + 24))(v2);
  if (v3)
  {
    v7[0] = 0;
    if (objc_msgSend(v3, sel_saveEvent_span_error_, v1, 1, v7))
    {
      id v4 = v7[0];
      swift_unknownObjectRelease();
    }
    else
    {
      id v5 = v7[0];
      uint64_t v6 = (void *)sub_1BE06EDB0();

      swift_willThrow();
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1BE05DCE0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13CalendarUIKit24CUIKEventEditorViewModel__eventChanges;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E5310);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13CalendarUIKit24CUIKEventEditorViewModel__pushAction;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E33B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1BE05DDEC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CUIKEventEditorViewModel(0);
  uint64_t result = sub_1BE06F1E0();
  *a1 = result;
  return result;
}

uint64_t sub_1BE05DE2C()
{
  return sub_1BE05E1D8();
}

uint64_t sub_1BE05DE40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BE05DEB4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BE05DF28()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();

  return swift_release();
}

double sub_1BE05DFA0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BE05E014()
{
  return sub_1BE05E028();
}

uint64_t sub_1BE05E028()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BE05E094()
{
  return sub_1BE05E028();
}

uint64_t sub_1BE05E0A8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BE05E11C()
{
  return sub_1BE05E144();
}

uint64_t sub_1BE05E130()
{
  return sub_1BE05E144();
}

uint64_t sub_1BE05E144()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BE05E1B0()
{
  return sub_1BE05E028();
}

uint64_t sub_1BE05E1C4()
{
  return sub_1BE05E1D8();
}

uint64_t sub_1BE05E1D8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BE05E244(void *a1, uint64_t a2, void *a3, int a4, char *a5, void *a6, void *a7, void *a8, double a9, unsigned __int8 a10, unsigned __int8 a11, void *a12, void *a13, uint64_t a14, unsigned __int8 a15)
{
  uint64_t v16 = v15;
  id v70 = a6;
  char v71 = a8;
  uint64_t v77 = a7;
  uint64_t v82 = a5;
  char v17 = a4;
  int v67 = a4;
  uint64_t v68 = a3;
  uint64_t v66 = a2;
  uint64_t v78 = a14;
  int v80 = a13;
  int v81 = a12;
  int v79 = a10;
  int v76 = a15;
  int v74 = a11;
  LODWORD(v75) = a15 & 1;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E52C8);
  MEMORY[0x1F4188790](v20 - 8);
  uint64_t v59 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E52D0);
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  char v60 = (char *)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1BE06EEE0();
  uint64_t v63 = v23;
  uint64_t v83 = *(void *)(v23 - 8);
  uint64_t v24 = v83;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  char v73 = (char *)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v72 = (char *)&v58 - v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E5270);
  uint64_t v64 = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)&v58 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeSink) = 0;
  uint64_t v32 = (void *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock);
  *uint64_t v32 = 0;
  v32[1] = 0;
  uint64_t v33 = v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__location;
  uint64_t v86 = 0;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E51A8);
  sub_1BE06F200();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v33, v31, v28);
  *(void *)(v16 + 16) = a1;
  int v34 = a1;
  uint64_t v35 = v66;
  char v36 = v68;
  *(void *)(v16 + 24) = v66;
  *(void *)(v16 + 32) = v36;
  *(unsigned char *)(v16 + 40) = v17;
  int v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  v69(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialStartDate, (uint64_t)v82, v23);
  *(double *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialEventDuration) = a9;
  uint64_t v37 = v70;
  uint64_t v38 = v71;
  *(void *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialCalendar) = v70;
  *(void *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialRepeatType) = v77;
  *(void *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialAttendees) = v38;
  *(unsigned char *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialAlertTrigger) = v79;
  *(unsigned char *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialSecondAlertTrigger) = a11;
  *(void *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialAvailability) = v81;
  uint64_t v39 = (void *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialNotes);
  uint64_t v40 = v78;
  *uint64_t v39 = v80;
  v39[1] = v40;
  *(unsigned char *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeSavePolicy) = (_BYTE)v75;
  swift_beginAccess();
  id v84 = v34;
  uint64_t v85 = v35;
  uint64_t v41 = v36;
  id v42 = v36;
  id v70 = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BE06F200();
  swift_endAccess();
  uint64_t v43 = v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__location;
  swift_beginAccess();
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  id v45 = v42;
  uint64_t v46 = v63;
  id v75 = v45;
  v44(v43, v64);
  id v84 = v41;
  sub_1BE06F200();
  swift_endAccess();
  swift_beginAccess();
  LOBYTE(v84) = v67;
  sub_1BE06F200();
  swift_endAccess();
  uint64_t v47 = v72;
  uint64_t v48 = (void (*)(char *, char *, uint64_t))v69;
  v69((uint64_t)v72, (uint64_t)v82, v46);
  swift_beginAccess();
  v48(v73, v47, v46);
  sub_1BE06F200();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v83 + 8);
  v83 += 8;
  v49(v47, v46);
  swift_endAccess();
  swift_beginAccess();
  id v84 = *(id *)&a9;
  sub_1BE06F200();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v50 = v70;
  id v84 = v70;
  sub_1BDFB7B1C(0, &qword_1EA0E51D0);
  id v51 = v50;
  sub_1BE06F200();
  swift_endAccess();
  swift_beginAccess();
  id v84 = v77;
  type metadata accessor for CUIKRepeatType(0);
  sub_1BE06F200();
  swift_endAccess();
  swift_beginAccess();
  id v84 = v38;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E51E8);
  sub_1BE06F200();
  swift_endAccess();
  swift_beginAccess();
  LOBYTE(v84) = v79;
  sub_1BE06F200();
  swift_endAccess();
  swift_beginAccess();
  LOBYTE(v84) = v74;
  sub_1BE06F200();
  swift_endAccess();
  swift_beginAccess();
  id v84 = v81;
  type metadata accessor for EKEventAvailability(0);
  sub_1BE06F200();
  swift_endAccess();
  swift_beginAccess();
  id v84 = v80;
  uint64_t v85 = v78;
  sub_1BE06F200();
  swift_endAccess();
  if (v76)
  {

    v49(v82, v46);
  }
  else
  {
    type metadata accessor for EventChanges(0);
    sub_1BE062FF0(&qword_1EA0E52D8, (void (*)(uint64_t))type metadata accessor for EventChanges);
    uint64_t v86 = sub_1BE06F1E0();
    id v84 = objc_msgSend(self, sel_mainRunLoop);
    uint64_t v52 = sub_1BE0709C0();
    uint64_t v53 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v59, 1, 1, v52);
    sub_1BE06F1F0();
    sub_1BDFB7B1C(0, &qword_1EA0E52E0);
    sub_1BE063038(&qword_1EA0E52E8, &qword_1EA0E52E0);
    long long v54 = v60;
    sub_1BE06F250();
    sub_1BDF8686C(v53, &qword_1EA0E52C8);

    swift_release();
    swift_allocObject();
    swift_weakInit();
    sub_1BDF86964((unint64_t *)&unk_1EA0E52F0, &qword_1EA0E52D0);
    uint64_t v55 = v62;
    uint64_t v56 = sub_1BE06F260();

    swift_release();
    v49(v82, v46);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v54, v55);
    *(void *)(v16 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeSink) = v56;
    swift_release();
  }
  return v16;
}

uint64_t sub_1BE05ECC0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void (**)(uint64_t))(result + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock);
    sub_1BDFB6630((uint64_t)v1);
    uint64_t result = swift_release();
    if (v1)
    {
      v1(result);
      return sub_1BDFB76E0((uint64_t)v1);
    }
  }
  return result;
}

void sub_1BE05ED50(void *a1, char a2, char a3)
{
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v53 - v11;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  uint64_t v13 = (void *)sub_1BE0704C0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setTitle_, v13);

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  uint64_t v14 = (void *)v57;
  objc_msgSend(a1, sel_setStructuredLocation_, v57);

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  objc_msgSend(a1, sel_setAllDay_, v57);
  if (a2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1BE06F220();
    swift_release();
    swift_release();
    unint64_t v15 = 0;
    uint64_t v16 = v57;
    if (v57 && v57 != 6)
    {
      uint64_t v17 = CUIKRecurrenceFrequencyForRepeatType(v57);
      uint64_t v18 = CUIKIntervalForRepeatType(v16);
      id v19 = objc_msgSend(self, sel_recurrenceRuleWithType_interval_end_, v17, v18, 0);
      if (!v19)
      {
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      id v20 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E39C0);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1BE07E590;
      *(void *)(v21 + 32) = v20;
      uint64_t v57 = v21;
      sub_1BE070720();
      unint64_t v15 = v57;
    }
    id v22 = objc_msgSend(a1, sel_recurrenceRules);
    if (v22)
    {
      uint64_t v23 = v22;
      sub_1BDFB7B1C(0, (unint64_t *)&unk_1EA0E1570);
      unint64_t v24 = sub_1BE070710();
    }
    else
    {
      unint64_t v24 = 0;
    }
    char v25 = sub_1BE0624E4(v15, v24);
    swift_bridgeObjectRelease();
    if (v25)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      if (v15)
      {
        sub_1BDFB7B1C(0, (unint64_t *)&unk_1EA0E1570);
        uint64_t v26 = (void *)sub_1BE070700();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v26 = 0;
      }
      objc_msgSend(a1, sel_setRecurrenceRules_, v26);
    }
  }
  uint64_t v55 = v10;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  uint64_t v27 = (void *)v57;
  objc_msgSend(a1, sel_setCalendar_, v57);

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  sub_1BE062888(v57, a1);
  swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
  {
LABEL_46:
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1BE06F220();
    swift_release();
    swift_release();
    objc_msgSend(a1, sel_setAvailability_, v57);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1BE06F220();
    swift_release();
    swift_release();
    uint64_t v49 = (void *)sub_1BE06EEA0();
    uint64_t v50 = *(void (**)(char *, uint64_t))(v7 + 8);
    v50(v12, v6);
    objc_msgSend(a1, sel_setStartDate_, v49);

    swift_getKeyPath();
    swift_getKeyPath();
    sub_1BE06F220();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1BE06F220();
    swift_release();
    swift_release();
    sub_1BE06EE80();
    id v51 = (void *)sub_1BE06EEA0();
    v50(v12, v6);
    objc_msgSend(a1, sel_setEndDate_, v51);

    swift_getKeyPath();
    swift_getKeyPath();
    sub_1BE06F220();
    swift_release();
    swift_release();
    uint64_t v52 = (void *)sub_1BE0704C0();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setNotes_, v52);

    return;
  }
  uint64_t v57 = MEMORY[0x1E4FBC860];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  double v28 = COERCE_DOUBLE(sub_1BE05F7D8(v56));
  if ((v29 & 1) == 0)
  {
    if (!objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F25488]), sel_initWithRelativeOffset_, v28))
    {
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    MEMORY[0x1C1888EF0]();
    if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1BE070740();
    }
    sub_1BE070770();
    sub_1BE070720();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BE06F220();
  swift_release();
  swift_release();
  double v30 = COERCE_DOUBLE(sub_1BE05F7D8(v56));
  if (v31) {
    goto LABEL_26;
  }
  if (!objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F25488]), sel_initWithRelativeOffset_, v30)) {
    goto LABEL_48;
  }
  MEMORY[0x1C1888EF0]();
  if (*(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1BE070740();
  }
  sub_1BE070770();
  sub_1BE070720();
LABEL_26:
  id v32 = objc_msgSend(a1, sel_alarms);
  if (!v32)
  {
LABEL_44:
    sub_1BDFB7B1C(0, &qword_1EA0E1580);
    id v45 = (void *)sub_1BE070700();
LABEL_45:
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setAlarms_, v45);

    goto LABEL_46;
  }
  uint64_t v33 = v32;
  uint64_t v54 = v6;
  sub_1BDFB7B1C(0, &qword_1EA0E1580);
  unint64_t v34 = sub_1BE070710();

  if (!(v34 >> 62))
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v35 > 2)
    {
      uint64_t v53 = v57;
      goto LABEL_30;
    }
    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_1BE070CB0();
  swift_bridgeObjectRelease();
  if (v46 < 3)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    uint64_t v6 = v54;
    goto LABEL_44;
  }
  uint64_t v53 = v57;
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1BE070CB0();
  swift_bridgeObjectRelease();
  if (v35 < 2) {
    goto LABEL_50;
  }
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_1BE070CB0();
  swift_bridgeObjectRelease();
  if (v47 >= 2)
  {
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
    if (v48 >= v35)
    {
LABEL_30:
      if ((v34 & 0xC000000000000001) != 0 && v35 != 2)
      {
        uint64_t v36 = 2;
        do
        {
          uint64_t v37 = v36 + 1;
          sub_1BE070BA0();
          uint64_t v36 = v37;
        }
        while (v35 != v37);
      }
      if (v34 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_1BE070CC0();
        uint64_t v39 = v42;
        uint64_t v41 = v43;
        unint64_t v40 = v44;
        swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v38 = v34 & 0xFFFFFFFFFFFFFF8;
        uint64_t v39 = (v34 & 0xFFFFFFFFFFFFFF8) + 32;
        unint64_t v40 = (2 * v35) | 1;
        uint64_t v41 = 2;
      }
      uint64_t v56 = v53;
      sub_1BE060D9C(v38, v39, v41, v40);
      id v45 = (void *)sub_1BE070700();
      uint64_t v6 = v54;
      goto LABEL_45;
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_51:
  __break(1u);
}

unint64_t sub_1BE05F7D8(unint64_t result)
{
  uint64_t result = result;
  switch((char)result)
  {
    case 1:
      uint64_t result = 0;
      break;
    case 2:
      uint64_t result = 0xC072C00000000000;
      break;
    case 3:
      uint64_t result = 0xC082C00000000000;
      break;
    case 4:
      uint64_t result = 0xC08C200000000000;
      break;
    case 5:
      uint64_t result = 0xC09C200000000000;
      break;
    case 6:
      uint64_t result = 0xC0AC200000000000;
      break;
    case 7:
      uint64_t result = 0xC0BC200000000000;
      break;
    case 8:
      uint64_t result = 0xC0F5180000000000;
      break;
    case 9:
      uint64_t result = 0xC105180000000000;
      break;
    case 10:
      uint64_t result = 0xC12177E000000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BE05F8CC()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_initialStartDate;
  uint64_t v2 = sub_1BE06EEE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BDFB76E0(*(void *)(v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges_changeBlock));
  uint64_t v3 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__title;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4440);
  id v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(v3, v4);
  uint64_t v6 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__location;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E5270);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__allDay;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4450);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__startDate;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E5280);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__eventDuration;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E4448);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__calendar;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E5290);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__repeatType;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E5298);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__attendees;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E52A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__alertTrigger;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E52A8);
  id v22 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
  v22(v20, v21);
  v22(v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__secondAlertTrigger, v21);
  uint64_t v23 = v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__availability;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA0E52B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  v5(v0 + OBJC_IVAR____TtC13CalendarUIKit12EventChanges__notes, v4);
  return v0;
}

uint64_t sub_1BE05FCC0()
{
  sub_1BE05F8CC();

  return swift_deallocClassInstance();
}

uint64_t sub_1BE05FD18@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for EventChanges(0);
  uint64_t result = sub_1BE06F1E0();
  *a1 = result;
  return result;
}

void sub_1BE05FD58(void *a1@<X8>)
{
  *a1 = &unk_1F1877B00;
}

double sub_1BE05FD68@<D0>(double *a1@<X8>)
{
  double result = dbl_1BE0844F8[*v1];
  *a1 = result;
  return result;
}

uint64_t sub_1BE05FD80()
{
  return sub_1BE070FF0();
}

uint64_t sub_1BE05FDC8()
{
  return sub_1BE070FC0();
}

uint64_t sub_1BE05FDF8()
{
  return sub_1BE070FF0();
}

void *sub_1BE05FE3C@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  if ((unint64_t)(*result + 1) < 3) {
    uint64_t v2 = *result + 1;
  }
  else {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_1BE05FE58(void *a1@<X8>)
{
  *a1 = *v1 - 1;
}

uint64_t sub_1BE05FE6C()
{
  return type metadata accessor for CUIKEventEditorViewModel(0);
}

uint64_t type metadata accessor for CUIKEventEditorViewModel(uint64_t a1)
{
  return sub_1BDF920F0(a1, (uint64_t *)&unk_1EA0E5098);
}

void sub_1BE05FE94()
{
  sub_1BE0603F8(319, &qword_1EA0E50A8, (void (*)(uint64_t))type metadata accessor for EventChanges);
  if (v0 <= 0x3F)
  {
    sub_1BE00EEE0(319, (unint64_t *)&unk_1EA0E50B0);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for EventChanges(uint64_t a1)
{
  return sub_1BDF920F0(a1, qword_1EA0E5188);
}

uint64_t sub_1BE05FFE0()
{
  return type metadata accessor for EventChanges(0);
}

void sub_1BE05FFE8()
{
  sub_1BE06EEE0();
  if (v0 <= 0x3F)
  {
    sub_1BE00EEE0(319, &qword_1EA0E4430);
    if (v1 <= 0x3F)
    {
      sub_1BE0604B4(319, &qword_1EA0E51A0, &qword_1EA0E51A8);
      if (v2 <= 0x3F)
      {
        sub_1BE00EEE0(319, (unint64_t *)&unk_1EA0E51B0);
        if (v3 <= 0x3F)
        {
          sub_1BE0603F8(319, (unint64_t *)&qword_1EA0E4438, MEMORY[0x1E4F27928]);
          if (v4 <= 0x3F)
          {
            sub_1BE00EEE0(319, &qword_1EA0E51C0);
            if (v5 <= 0x3F)
            {
              sub_1BE06044C();
              if (v6 <= 0x3F)
              {
                sub_1BE0603F8(319, &qword_1EA0E51D8, type metadata accessor for CUIKRepeatType);
                if (v7 <= 0x3F)
                {
                  sub_1BE0604B4(319, &qword_1EA0E51E0, &qword_1EA0E51E8);
                  if (v8 <= 0x3F)
                  {
                    sub_1BE00EEE0(319, &qword_1EA0E51F0);
                    if (v9 <= 0x3F)
                    {
                      sub_1BE0603F8(319, &qword_1EA0E51F8, type metadata accessor for EKEventAvailability);
                      if (v10 <= 0x3F) {
                        swift_updateClassMetadata2();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1BE0603F8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1BE06F240();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1BE06044C()
{
  if (!qword_1EA0E51C8)
  {
    sub_1BDFB7B1C(255, &qword_1EA0E51D0);
    unint64_t v0 = sub_1BE06F240();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA0E51C8);
    }
  }
}

void sub_1BE0604B4(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_1BE06F240();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for AlarmRelativeOffset(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *double result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE0605D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlarmRelativeOffset()
{
  return &type metadata for AlarmRelativeOffset;
}

ValueMetadata *type metadata accessor for EventEditorChangeSavePolicy()
{
  return &type metadata for EventEditorChangeSavePolicy;
}

unsigned char *_s13CalendarUIKit21EventEditorMutabilityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE0606E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventEditorMutability()
{
  return &type metadata for EventEditorMutability;
}

unsigned char *storeEnumTagSinglePayload for EventEditorPushAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE0607ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventEditorPushAction()
{
  return &type metadata for EventEditorPushAction;
}

unint64_t sub_1BE060828()
{
  unint64_t result = qword_1EA0E5200;
  if (!qword_1EA0E5200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E5200);
  }
  return result;
}

unint64_t sub_1BE060884()
{
  unint64_t result = qword_1EA0E5210;
  if (!qword_1EA0E5210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E5210);
  }
  return result;
}

uint64_t sub_1BE0608D8()
{
  return MEMORY[0x1E4FBB3F0];
}

uint64_t sub_1BE0608E4()
{
  return sub_1BDF86964(&qword_1EA0E5218, &qword_1EA0E5220);
}

unint64_t sub_1BE060924()
{
  unint64_t result = qword_1EA0E5228;
  if (!qword_1EA0E5228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E5228);
  }
  return result;
}

uint64_t sub_1BE060978@<X0>(void *a1@<X8>)
{
  return sub_1BE05D088(a1);
}

uint64_t sub_1BE0609A0()
{
  return sub_1BE05D118();
}

uint64_t sub_1BE0609D8@<X0>(void *a1@<X8>)
{
  return sub_1BE05CD20(a1);
}

uint64_t sub_1BE060A0C()
{
  return sub_1BE06F230();
}

uint64_t sub_1BE060A7C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int v3 = sub_1BE054CEC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

uint64_t sub_1BE060BD0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x1C18893D0](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_1BE06103C(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();

  return sub_1BE070720();
}

uint64_t sub_1BE060D9C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v8 = a4 >> 1;
  uint64_t v9 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_11;
  }
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  unint64_t v7 = *v4;
  if (*v4 >> 62) {
    goto LABEL_12;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 + v9;
  if (!__OFADD__(v10, v9)) {
    goto LABEL_4;
  }
LABEL_14:
  __break(1u);
LABEL_15:
  uint64_t v13 = 1;
LABEL_16:
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v16 <= v11) {
    uint64_t v16 = v11;
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = MEMORY[0x1C18893D0](v13, v16, 1, v7);
  swift_bridgeObjectRelease();
  *unint64_t v4 = v7;
  uint64_t v14 = v7 & 0xFFFFFFFFFFFFFF8;
  if (v8 == v5)
  {
    while (v9 > 0)
    {
      __break(1u);
LABEL_11:
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_1BE070CB0();
      swift_bridgeObjectRelease();
      uint64_t v11 = v15 + v9;
      if (__OFADD__(v15, v9)) {
        goto LABEL_14;
      }
LABEL_4:
      unint64_t v7 = *v4;
      int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *unint64_t v4 = v7;
      uint64_t v13 = 0;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v7 & 0x8000000000000000) != 0
        || (v7 & 0x4000000000000000) != 0)
      {
        goto LABEL_16;
      }
      uint64_t v14 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 > *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_15;
      }
      if (v8 != v5) {
        goto LABEL_21;
      }
    }
    goto LABEL_28;
  }
LABEL_21:
  uint64_t v17 = *(void *)(v14 + 16);
  if ((*(void *)(v14 + 24) >> 1) - v17 < v9)
  {
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    uint64_t result = sub_1BE070D00();
    __break(1u);
    return result;
  }
  if (v9 < 0) {
    goto LABEL_34;
  }
  unint64_t v18 = v14 + 8 * v17 + 32;
  unint64_t v19 = v6 + 8 * v5;
  if (v19 < v18 + 8 * v9 && v18 < v19 + 8 * v9) {
    goto LABEL_34;
  }
  sub_1BDFB7B1C(0, &qword_1EA0E1580);
  swift_arrayInitWithCopy();
  if (v9)
  {
    uint64_t v20 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v9);
    uint64_t v22 = v20 + v9;
    if (!v21)
    {
      *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
      goto LABEL_28;
    }
    goto LABEL_33;
  }
LABEL_28:
  swift_unknownObjectRelease();

  return sub_1BE070720();
}

uint64_t sub_1BE06103C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1BDF86964(&qword_1EA0E5338, &qword_1EA0E5330);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E5330);
          uint64_t v12 = sub_1BDFDE298(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1BDFB7B1C(0, (unint64_t *)&qword_1EA0E3A78);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1BE070D00();
  __break(1u);
  return result;
}

void sub_1BE061270(void *a1)
{
  id v2 = objc_msgSend(self, sel_cuik_systemBackgroundColor);
  if (objc_msgSend(a1, sel_hasAttendees))
  {
    uint64_t v3 = self;
    goto LABEL_6;
  }
  id v4 = objc_msgSend(a1, sel_calendar);
  if (!v4)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v5 = v4;
  id v6 = objc_msgSend(v4, sel_source);

  if (v6)
  {
    unsigned int v7 = objc_msgSend(v6, sel_isDelegate);

    uint64_t v3 = self;
    if (!v7)
    {
      id v10 = 0;
      goto LABEL_9;
    }
LABEL_6:
    id v8 = objc_msgSend(a1, sel_calendar);
    if (!v8)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_source);

LABEL_9:
    id v11 = objc_msgSend(a1, sel_eventStore);
    if (v11)
    {
      uint64_t v12 = v11;
      id v13 = objc_msgSend(v3, sel_calendarsLimitedToSource_writability_onlyUnmanagedAccounts_forEvent_entityType_inEventStore_, v10, 2, 0, a1, 0, v11);

      sub_1BDFB7B1C(0, &qword_1EA0E51D0);
      sub_1BE063038(&qword_1EA0E5300, &qword_1EA0E51D0);
      sub_1BE070830();

      id v14 = (void *)sub_1BE070820();
      swift_bridgeObjectRelease();
      id v15 = objc_msgSend(a1, sel_eventStore);
      if (v15)
      {
        uint64_t v16 = v15;
        LOBYTE(v18) = 0;
        id v17 = objc_msgSend(self, sel_generateGroupsForCalendars_eventStore_entityType_forMode_usingBackgroundColor_includingAccountsWithoutCalendars_filterByFocus_usingUnselectedCalendars_foundRefreshableCalendar_anyGroupsHiddenByFocus_numberOfCalendarsHiddenByFocus_, v14, v15, 0, 0, v2, 0, v18, 0, 0, 0, 0);

        sub_1BDFB7B1C(0, &qword_1EA0E5308);
        sub_1BE070710();

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_14;
  }
LABEL_16:
  __break(1u);
}

uint64_t sub_1BE061534(void *a1)
{
  v44[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E1118);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v43 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  unsigned int v7 = (char *)&v42 - v6;
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  id v10 = (char *)&v42 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v42 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v42 - v17;
  v44[0] = 0;
  if (a1)
  {
    id v19 = objc_msgSend(a1, sel_recurrenceRules);
    if (v19)
    {
      uint64_t v20 = v19;
      sub_1BDFB7B1C(0, (unint64_t *)&unk_1EA0E1570);
      sub_1BE070710();

      uint64_t v42 = sub_1BE070700();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v42 = 0;
    }
    id v28 = objc_msgSend(a1, sel_recurrenceDate, v42);
    if (v28)
    {
      char v29 = v28;
      sub_1BE06EEC0();

      uint64_t v30 = sub_1BE06EEE0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v16, 0, 1, v30);
    }
    else
    {
      uint64_t v30 = sub_1BE06EEE0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v16, 1, 1, v30);
    }
    sub_1BDFB8210((uint64_t)v16, (uint64_t)v18, &qword_1EB677CC0);
    sub_1BE06EEE0();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v26 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v18, 1, v30) != 1)
    {
      uint64_t v26 = (void *)sub_1BE06EEA0();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v30);
    }
    id v32 = objc_msgSend(a1, sel_timeZone);
    if (v32)
    {
      uint64_t v33 = v32;
      sub_1BE06F130();

      uint64_t v34 = sub_1BE06F140();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v10, 0, 1, v34);
    }
    else
    {
      uint64_t v34 = sub_1BE06F140();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v10, 1, 1, v34);
    }
    sub_1BDFB8210((uint64_t)v10, (uint64_t)v12, &qword_1EA0E1118);
    sub_1BE06F140();
    uint64_t v35 = *(void *)(v34 - 8);
    uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
    uint64_t v24 = 0;
    if (v36(v12, 1, v34) != 1)
    {
      uint64_t v24 = (void *)sub_1BE06F120();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v34);
    }
    id v37 = objc_msgSend(a1, sel_timeZone);
    if (v37)
    {
      uint64_t v38 = v37;
      uint64_t v39 = (uint64_t)v43;
      sub_1BE06F130();

      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v40 = 1;
      uint64_t v39 = (uint64_t)v43;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v39, v40, 1, v34);
    sub_1BDFB8210(v39, (uint64_t)v7, &qword_1EA0E1118);
    if (v36(v7, 1, v34) == 1)
    {
      uint64_t v27 = 0;
    }
    else
    {
      uint64_t v27 = (void *)sub_1BE06F120();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v34);
    }
    char v25 = (void *)v42;
  }
  else
  {
    uint64_t v21 = sub_1BE06EEE0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v18, 1, 1, v21);
    uint64_t v22 = sub_1BE06F140();
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    v23(v12, 1, 1, v22);
    v23(v7, 1, 1, v22);
    uint64_t v24 = 0;
    char v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
  }
  CUIKGetTypeAndEndDateForRecurrenceRules(v25, v26, v24, (uint64_t)v27, v44, 0);

  return v44[0];
}

uint64_t sub_1BE061B48(uint64_t a1, char a2)
{
  if (a2) {
    return 0;
  }
  if (*(double *)&a1 == 0.0) {
    return 1;
  }
  if (*(double *)&a1 == -300.0) {
    return 2;
  }
  if (*(double *)&a1 == -600.0) {
    return 3;
  }
  if (*(double *)&a1 == -900.0) {
    return 4;
  }
  if (*(double *)&a1 == -1800.0) {
    return 5;
  }
  if (*(double *)&a1 == -3600.0) {
    return 6;
  }
  if (*(double *)&a1 == -7200.0) {
    return 7;
  }
  if (*(double *)&a1 == -572400.0) {
    int v3 = 10;
  }
  else {
    int v3 = 11;
  }
  if (*(double *)&a1 == -172800.0) {
    unsigned int v4 = 9;
  }
  else {
    unsigned int v4 = v3;
  }
  if (*(double *)&a1 == -86400.0) {
    return 8;
  }
  else {
    return v4;
  }
}

uint64_t sub_1BE061C60(void *a1, uint64_t a2, int a3)
{
  int v84 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v83 = &v79[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v10 = (char **)&v79[-v9];
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v79[-v11];
  uint64_t v13 = sub_1BE06EEE0();
  uint64_t v14 = *(void **)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v87 = &v79[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  id v19 = &v79[-v18];
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char **)&v79[-v20];
  objc_msgSend(a1, sel_duration);
  double v23 = v22;
  sub_1BE062F88(a2, (uint64_t)v12);
  uint64_t v24 = (uint64_t (*)(char **, uint64_t, uint64_t))v14[6];
  int v25 = v24((char **)v12, 1, v13);
  uint64_t v88 = v13;
  uint64_t v89 = v14;
  uint64_t v85 = a2;
  uint64_t v86 = v21;
  if (v25 != 1)
  {
    ((void (*)(char **, char **, uint64_t))v14[4])(v21, (char **)v12, v13);
    id v32 = v14;
    uint64_t v31 = v21;
    goto LABEL_11;
  }
  id v26 = objc_msgSend(a1, sel_startDate);
  if (!v26)
  {
    uint64_t v14 = (void *)v89[7];
    ((void (*)(char **, uint64_t, uint64_t, uint64_t))v14)(v10, 1, 1, v13);
    goto LABEL_7;
  }
  uint64_t v27 = v26;
  sub_1BE06EEC0();

  id v28 = v89;
  uint64_t v29 = v13;
  uint64_t v30 = (void (*)(char **, char **, uint64_t))v89[4];
  v30(v10, (char **)v19, v29);
  uint64_t v14 = (void *)v28[7];
  ((void (*)(char **, void, uint64_t, uint64_t))v14)(v10, 0, 1, v29);
  if (v24(v10, 1, v29) == 1)
  {
LABEL_7:
    uint64_t v33 = v14;
    id v34 = CUIKTodayDate();
    if (!v34)
    {
LABEL_57:
      uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t, uint64_t))v33)(v83, 1, 1, v88);
      goto LABEL_58;
    }
    uint64_t v35 = v34;
    sub_1BE06EEC0();

    uint64_t v14 = (void *)v89[4];
    uint64_t v36 = v83;
    id v37 = v19;
    uint64_t v38 = v88;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v14)(v83, v37, v88);
    ((void (*)(char **, void, uint64_t, uint64_t))v33)((char **)v36, 0, 1, v38);
    uint64_t result = v24((char **)v36, 1, v38);
    if (result == 1)
    {
LABEL_58:
      __break(1u);
      return result;
    }
    uint64_t v31 = v86;
    ((void (*)(char **, char **, uint64_t))v14)(v86, (char **)v36, v38);
    sub_1BDF8686C((uint64_t)v10, &qword_1EB677CC0);
    goto LABEL_10;
  }
  uint64_t v31 = v86;
  v30(v86, v10, v88);
LABEL_10:
  sub_1BDF8686C((uint64_t)v12, &qword_1EB677CC0);
  uint64_t v13 = v88;
  id v32 = v89;
LABEL_11:
  id v40 = a1;
  uint64_t v33 = (unsigned char *)sub_1BE061534(a1);
  id v41 = objc_msgSend(v40, sel_alarms);
  if (!v41)
  {
    int v81 = 0;
    LODWORD(v14) = 0;
    goto LABEL_38;
  }
  uint64_t v42 = v41;
  sub_1BDFB7B1C(0, &qword_1EA0E1580);
  unint64_t v43 = sub_1BE070710();

  if (!(v43 >> 62))
  {
    uint64_t v44 = *(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v44 >= 1) {
      goto LABEL_14;
    }
LABEL_36:
    LODWORD(v14) = 0;
    goto LABEL_37;
  }
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_1BE070CB0();
  swift_bridgeObjectRelease();
  if (v44 < 1) {
    goto LABEL_36;
  }
LABEL_14:
  if ((v43 & 0xC000000000000001) != 0)
  {
    id v45 = (void *)MEMORY[0x1C18893C0](0, v43);
  }
  else
  {
    if (!*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_54;
    }
    id v45 = *(id *)(v43 + 32);
  }
  uint64_t v14 = v45;
  uint64_t v31 = &selRef_footer;
  objc_msgSend(v45, sel_relativeOffset);
  if (sub_1BE061B48(v46, 0) == 11)
  {
    objc_msgSend(v14, sel_relativeOffset);
    uint64_t v48 = v47;

    int v49 = sub_1BE061B48(v48, 0);
    if (v49 == 11) {
      LODWORD(v14) = 0;
    }
    else {
      LODWORD(v14) = v49;
    }
    if ((unint64_t)v44 < 2) {
      goto LABEL_22;
    }
  }
  else
  {

    LODWORD(v14) = 0;
    if ((unint64_t)v44 < 2)
    {
LABEL_22:
      uint64_t v31 = v86;
LABEL_37:
      swift_bridgeObjectRelease();
      int v81 = 0;
      goto LABEL_38;
    }
  }
  if ((v43 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v43 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    id v50 = *(id *)(v43 + 40);
    goto LABEL_28;
  }
LABEL_54:
  id v50 = (id)MEMORY[0x1C18893C0](1, v43);
LABEL_28:
  id v51 = v50;
  swift_bridgeObjectRelease();
  [v51 v31[162]];
  if (sub_1BE061B48(v52, 0) == 11)
  {
    [v51 v31[162]];
    uint64_t v54 = v53;

    int v55 = sub_1BE061B48(v54, 0);
    if (v55 == 11) {
      int v56 = 0;
    }
    else {
      int v56 = v55;
    }
    int v81 = v56;
  }
  else
  {

    int v81 = 0;
  }
  uint64_t v31 = v86;
LABEL_38:
  id v57 = objc_msgSend(v40, sel_attendeesNotIncludingOrganizer);
  if (v57)
  {
    uint64_t v58 = v57;
    sub_1BDFB7B1C(0, &qword_1EA0E52C0);
    unint64_t v59 = sub_1BE070710();
  }
  else
  {
    unint64_t v59 = MEMORY[0x1E4FBC860];
  }
  id v60 = objc_msgSend(v40, sel_title);
  uint64_t v83 = v33;
  int v82 = (int)v14;
  if (v60)
  {
    uint64_t v61 = v60;
    uint64_t v62 = sub_1BE070500();
    uint64_t v64 = v63;
  }
  else
  {
    uint64_t v62 = 0;
    uint64_t v64 = 0xE000000000000000;
  }
  id v65 = objc_msgSend(v40, sel_preferredLocation);
  unsigned int v66 = objc_msgSend(v40, sel_isAllDay);
  ((void (*)(char *, char **, uint64_t))v32[2])(v87, v31, v13);
  id v67 = objc_msgSend(v40, sel_calendar);
  if (!v67) {
    goto LABEL_56;
  }
  uint64_t v68 = v67;
  unsigned int v80 = v66;
  if (v59 >> 62)
  {
    sub_1BDFB7B1C(0, (unint64_t *)&qword_1EA0E15B0);
    swift_bridgeObjectRetain();
    int v69 = (void *)sub_1BE070CA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BE070F20();
    sub_1BDFB7B1C(0, (unint64_t *)&qword_1EA0E15B0);
    int v69 = (void *)v59;
  }
  swift_bridgeObjectRelease();
  id v70 = objc_msgSend(v40, sel_availability);
  id v71 = objc_msgSend(v40, sel_notes);
  if (v71)
  {
    uint64_t v72 = v71;
    char v73 = (void *)v62;
    int v74 = (void *)sub_1BE070500();
    uint64_t v76 = v75;
  }
  else
  {
    char v73 = (void *)v62;
    int v74 = 0;
    uint64_t v76 = 0xE000000000000000;
  }
  unsigned __int8 v77 = v84 & 1;
  type metadata accessor for EventChanges(0);
  uint64_t v78 = swift_allocObject();
  sub_1BE05E244(v73, v64, v65, v80, v87, v68, v83, v69, v23, v82, v81, v70, v74, v76, v77);
  sub_1BDF8686C(v85, &qword_1EB677CC0);
  ((void (*)(char **, uint64_t))v89[1])(v86, v88);
  return v78;
}

uint64_t sub_1BE0624E4(unint64_t a1, unint64_t a2)
{
  if (!a1)
  {
    if (a2)
    {
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1BE070CB0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      return v17 == 0;
    }
    else
    {
      return 1;
    }
  }
  unint64_t v4 = a1 >> 62;
  if (!a2)
  {
    if (v4)
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_1BE070CB0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    return v18 == 0;
  }
  if (v4) {
    goto LABEL_50;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_5:
  if (!(a2 >> 62))
  {
    if (v5 == *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_7;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1BE070CB0();
  swift_bridgeObjectRelease();
  if (v5 != v19) {
    return 0;
  }
LABEL_7:
  if (!v4)
  {
    unint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1BE070CB0();
  unint64_t v4 = result;
  if (!result)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_9:
  unint64_t v21 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v7 = (id)MEMORY[0x1C18893C0](0, a1);
    goto LABEL_12;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(a1 + 32);
LABEL_12:
    id v8 = v7;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1BE070CB0();
      swift_bridgeObjectRelease();
      if (v9) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9)
      {
LABEL_14:
        unint64_t v10 = 0;
        uint64_t v20 = a1 + 40;
        unint64_t v11 = v4 - 1;
        BOOL v12 = 1;
        while (1)
        {
          if ((a2 & 0xC000000000000001) != 0)
          {
            id v13 = (id)MEMORY[0x1C18893C0](v10, a2);
          }
          else
          {
            if (v10 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_48;
            }
            id v13 = *(id *)(a2 + 32 + 8 * v10);
          }
          uint64_t v14 = v13;
          unint64_t v4 = v10 + 1;
          unsigned __int8 v15 = objc_msgSend(v8, sel_isEqualToRecurrenceRule_, v13, v20);

          if (v15)
          {
            if (v11 == v10)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v12;
            }
            if (v21) {
              goto LABEL_22;
            }
          }
          else
          {
            if (v11 == v10)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return 0;
            }
            BOOL v12 = 0;
            if (v21)
            {
LABEL_22:
              id v8 = (id)MEMORY[0x1C18893C0](v10 + 1, a1);
              uint64_t v16 = v9;
              if (__OFADD__(v4, 1)) {
                goto LABEL_47;
              }
              goto LABEL_29;
            }
          }
          if (v4 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_49;
          }
          uint64_t v16 = v9;
          id v8 = *(id *)(v20 + 8 * v10);
          if (__OFADD__(v4, 1))
          {
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            swift_bridgeObjectRetain();
            uint64_t v5 = sub_1BE070CB0();
            swift_bridgeObjectRelease();
            goto LABEL_5;
          }
LABEL_29:
          if (v16 == ++v10)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            return v12;
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return 1;
  }
  __break(1u);
  return result;
}

void sub_1BE062888(uint64_t a1, void *a2)
{
  uint64_t v35 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E5238);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E5240);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v38 = (char *)&v32 - v11;
  id v12 = objc_msgSend(a2, sel_attendees);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  id v36 = a2;
  if (!v12) {
    goto LABEL_16;
  }
  uint64_t v14 = v12;
  id v34 = v6;
  sub_1BDFB7B1C(0, (unint64_t *)&qword_1EA0E15B0);
  unint64_t v15 = sub_1BE070710();

  v39[0] = v13;
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1BE070CB0();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t v6 = v34;
    goto LABEL_16;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v16) {
    goto LABEL_15;
  }
LABEL_4:
  if (v16 < 1)
  {
    __break(1u);
    return;
  }
  uint64_t v33 = v10;
  uint64_t v37 = v4;
  for (uint64_t i = 0; i != v16; ++i)
  {
    if ((v15 & 0xC000000000000001) != 0) {
      id v18 = (id)MEMORY[0x1C18893C0](i, v15);
    }
    else {
      id v18 = *(id *)(v15 + 8 * i + 32);
    }
    uint64_t v19 = v18;
    if (objc_msgSend(v18, sel_isCurrentUser))
    {
    }
    else
    {
      sub_1BE070C30();
      sub_1BE070C50();
      sub_1BE070C60();
      sub_1BE070C40();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = v39[0];
  uint64_t v4 = v37;
  unint64_t v10 = v33;
  uint64_t v6 = v34;
LABEL_16:
  v39[0] = v35;
  v39[4] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E51E8);
  sub_1BDF86964(&qword_1EA0E5248, &qword_1EA0E51E8);
  sub_1BE063038((unint64_t *)&unk_1EA0E5250, (unint64_t *)&qword_1EA0E15B0);
  sub_1BE070420();
  swift_bridgeObjectRelease();
  id v34 = *(char **)(v4 + 16);
  uint64_t v35 = v4 + 16;
  ((void (*)(char *, char *, uint64_t))v34)(v10, v6, v3);
  sub_1BDF86964((unint64_t *)&unk_1EA0E5260, &qword_1EA0E5238);
  sub_1BE070870();
  uint64_t v20 = *(char **)(v4 + 8);
  uint64_t v37 = v4 + 8;
  uint64_t v33 = v20;
  ((void (*)(char *, uint64_t))v20)(v6, v3);
  uint64_t v21 = (uint64_t)v38;
  *(void *)&v10[*(int *)(v7 + 36)] = v39[0];
  sub_1BDFB8210((uint64_t)v10, v21, &qword_1EA0E5240);
  double v22 = (uint64_t *)(v21 + *(int *)(v7 + 36));
  uint64_t v23 = *v22;
  sub_1BE070880();
  if (v23 != v39[0])
  {
    uint64_t v24 = v6;
    do
    {
      int v25 = (void (*)(void *, void))sub_1BE0708C0();
      uint64_t v27 = *(void **)(v26 + 8);
      int v28 = *(unsigned __int8 *)(v26 + 25);
      id v29 = v27;
      v25(v39, 0);
      ((void (*)(char *, char *, uint64_t))v34)(v24, v38, v3);
      sub_1BE070890();
      ((void (*)(char *, uint64_t))v33)(v24, v3);
      uint64_t v30 = &selRef_removeAttendee_;
      if (!v28) {
        uint64_t v30 = &selRef_addAttendee_;
      }
      objc_msgSend(v36, *v30, v27);
      uint64_t v21 = (uint64_t)v38;

      uint64_t v31 = *v22;
      sub_1BE070880();
    }
    while (v31 != v39[0]);
  }
  sub_1BDF8686C(v21, &qword_1EA0E5240);
}

uint64_t sub_1BE062DB0@<X0>(void *a1@<X8>)
{
  return sub_1BE05CD20(a1);
}

uint64_t sub_1BE062DD8()
{
  return sub_1BE060A0C();
}

uint64_t sub_1BE062E10@<X0>(void *a1@<X8>)
{
  return sub_1BE05D088(a1);
}

uint64_t sub_1BE062E38()
{
  return sub_1BE05D118();
}

uint64_t sub_1BE062E60@<X0>(unsigned char *a1@<X8>)
{
  return sub_1BE05CF4C(a1);
}

uint64_t sub_1BE062E88()
{
  return sub_1BE05CFDC();
}

uint64_t sub_1BE062EB0@<X0>(unsigned char *a1@<X8>)
{
  return sub_1BE05CF4C(a1);
}

uint64_t sub_1BE062ED8()
{
  return sub_1BE05CFDC();
}

uint64_t sub_1BE062F00@<X0>(void *a1@<X8>)
{
  return sub_1BE05CD20(a1);
}

uint64_t sub_1BE062F28()
{
  return sub_1BE060A0C();
}

uint64_t sub_1BE062F58@<X0>(void *a1@<X8>)
{
  return sub_1BE05CD20(a1);
}

uint64_t sub_1BE062F88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BE062FF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BE063038(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1BDFB7B1C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BE06307C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1BE0630B4()
{
  return sub_1BE05ECC0();
}

uint64_t sub_1BE0630BC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1BE05CF4C(a1);
}

uint64_t sub_1BE0630E4()
{
  return sub_1BE05CFDC();
}

uint64_t sub_1BE06310C()
{
  return sub_1BE05D968();
}

unsigned char *storeEnumTagSinglePayload for CUIKEventAvailability(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1BE0631E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CUIKEventAvailability()
{
  return &type metadata for CUIKEventAvailability;
}

unint64_t sub_1BE06321C()
{
  unint64_t result = qword_1EA0E5340;
  if (!qword_1EA0E5340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E5340);
  }
  return result;
}

uint64_t sub_1BE063270()
{
  return sub_1BE062FF0((unint64_t *)&qword_1EA0E2B30, type metadata accessor for EKEventAvailability);
}

uint64_t EventRecurrenceRuleModel.humanReadableDescription(startDate:isConcise:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_1BE063398(0, 0, a3, a4);
  uint64_t v5 = self;
  unsigned int v6 = (void *)sub_1BE06EEA0();
  uint64_t v7 = (void *)sub_1BE0704C0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v5, sel_humanReadableDescriptionWithStartDate_ofRecurrenceRuleICSString_isConcise_, v6, v7, a2 & 1);

  if (!v8) {
    return 0;
  }
  uint64_t v9 = sub_1BE070500();

  return v9;
}

uint64_t sub_1BE063398(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = a3;
  int v129 = a2;
  int v130 = a1;
  uint64_t v123 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  __int16 v133 = (char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v136 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v116 = *(void *)(v136 + 64);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v137 = (char *)&v115 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v120 = (uint64_t)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v119 = (char *)&v115 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v128 = (uint64_t)&v115 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v125 = (char *)&v115 - v18;
  uint64_t v134 = sub_1BE06EEE0();
  uint64_t v131 = *(void *)(v134 - 8);
  MEMORY[0x1F4188790](v134);
  uint64_t v127 = (char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = sub_1BE0709E0();
  uint64_t v124 = *(void *)(v21 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  uint64_t v132 = (char *)&v115 - v23;
  uint64_t v135 = v20;
  uint64_t v24 = *(void (***)(char *, char *, uint64_t))(v20 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v115 - v25;
  uint64_t v141 = 0;
  unint64_t v142 = 0xE000000000000000;
  uint64_t v27 = self;
  char v121 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 48);
  uint64_t v122 = a4 + 48;
  uint64_t v28 = v121(v7, a4);
  id v126 = v27;
  id v29 = objc_msgSend(v27, sel_iCalendarValueFromRecurrenceType_, v28);
  if (v29)
  {
    uint64_t v30 = v29;
    sub_1BE070500();

    uint64_t v139 = 0x3D51455246;
    unint64_t v140 = 0xE500000000000000;
    sub_1BE0705D0();
    swift_bridgeObjectRelease();
    sub_1BE0705D0();
    swift_bridgeObjectRelease();
  }
  uint64_t v139 = 0x41565245544E493BLL;
  unint64_t v140 = 0xEA00000000003D4CLL;
  uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 56);
  uint64_t v118 = a4 + 56;
  uint64_t v117 = v31;
  uint64_t v138 = v31(v7, a4);
  sub_1BE070ED0();
  sub_1BE0705D0();
  swift_bridgeObjectRelease();
  sub_1BE0705D0();
  swift_bridgeObjectRelease();
  uint64_t v32 = v132;
  (*(void (**)(uint64_t, uint64_t))(a4 + 40))(v7, a4);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v24[6])(v32, 1, v135) == 1)
  {
    (*(void (**)(char *, uint64_t))(v124 + 8))(v32, v21);
  }
  else
  {
    uint64_t v33 = v135;
    v24[4](v26, v32, v135);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v35 = (uint64_t)v125;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 8))(v33, AssociatedConformanceWitness);
    uint64_t v132 = (char *)v24;
    uint64_t v36 = v131;
    uint64_t v37 = v134;
    uint64_t v124 = *(void *)(v131 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v124)(v35, 1, v134) == 1)
    {
      sub_1BDF8BBAC(v35);
      uint64_t v139 = 0x3D544E554F433BLL;
      unint64_t v140 = 0xE700000000000000;
      uint64_t v38 = v135;
      uint64_t v138 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v135, AssociatedConformanceWitness);
      sub_1BE070ED0();
      sub_1BE0705D0();
      swift_bridgeObjectRelease();
      sub_1BE0705D0();
      swift_bridgeObjectRelease();
      (*((void (**)(char *, uint64_t))v132 + 1))(v26, v38);
    }
    else
    {
      uint64_t v115 = v26;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v127, v35, v37);
      uint64_t v39 = (void *)sub_1BE06EEA0();
      id v40 = objc_msgSend(v126, sel_adjustDateIntoUTC_dateOnly_floating_, v39, v130 & 1, v129 & 1);

      if (v40)
      {
        id v41 = v119;
        sub_1BE06EEC0();

        uint64_t v42 = v41;
        uint64_t v43 = 0;
        uint64_t v44 = v115;
      }
      else
      {
        uint64_t v43 = 1;
        uint64_t v44 = v115;
        uint64_t v42 = v119;
      }
      id v45 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v124;
      uint64_t v46 = v134;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v42, v43, 1, v134);
      uint64_t v47 = (uint64_t)v42;
      uint64_t v48 = v128;
      sub_1BE064664(v47, v128);
      uint64_t v49 = v48;
      uint64_t v50 = v120;
      sub_1BE062F88(v49, v120);
      if (v45(v50, 1, v46) == 1)
      {
        id v51 = 0;
      }
      else
      {
        uint64_t v52 = v50;
        id v51 = (void *)sub_1BE06EEA0();
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v52, v46);
      }
      uint64_t v53 = (void (**)(char *, uint64_t))v132;
      id v54 = objc_msgSend(v126, sel_iCalendarValueFromDate_isDateOnly_isFloating_, v51, v130 & 1, v129 & 1);

      if (v54)
      {
        sub_1BE070500();

        uint64_t v139 = 0x3D4C49544E553BLL;
        unint64_t v140 = 0xE700000000000000;
        uint64_t v36 = v131;
        sub_1BE0705D0();
        uint64_t v44 = v115;
        swift_bridgeObjectRelease();
        sub_1BE0705D0();
        swift_bridgeObjectRelease();
      }
      sub_1BDF8BBAC(v128);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v127, v134);
      v53[1](v44, v135);
    }
  }
  uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 104))(v7, a4);
  uint64_t v134 = v5;
  if (v55)
  {
    uint64_t v56 = v55;
    uint64_t v57 = *(void *)(v55 + 16);
    if (v57)
    {
      sub_1BE0705D0();
      uint64_t v58 = 0;
      do
      {
        uint64_t v59 = *(void *)(v56 + 8 * v58++ + 32);
        uint64_t v138 = v59;
        uint64_t v139 = sub_1BE070ED0();
        unint64_t v140 = v60;
        sub_1BE0705D0();
        sub_1BE0705D0();
        swift_bridgeObjectRelease();
      }
      while (v57 != v58);
      uint64_t v61 = swift_bridgeObjectRelease();
      sub_1BE0644D4(v61);
      swift_bridgeObjectRelease();
      uint64_t v5 = v134;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v62 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 80))(v7, a4);
  if (v62)
  {
    uint64_t v63 = v62;
    uint64_t v64 = *(void *)(v62 + 16);
    if (v64)
    {
      sub_1BE0705D0();
      uint64_t v65 = 0;
      do
      {
        uint64_t v66 = *(void *)(v63 + 8 * v65++ + 32);
        uint64_t v138 = v66;
        uint64_t v139 = sub_1BE070ED0();
        unint64_t v140 = v67;
        sub_1BE0705D0();
        sub_1BE0705D0();
        swift_bridgeObjectRelease();
      }
      while (v64 != v65);
      uint64_t v68 = swift_bridgeObjectRelease();
      sub_1BE0644D4(v68);
      swift_bridgeObjectRelease();
      uint64_t v5 = v134;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v69 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 88))(v7, a4);
  if (v69)
  {
    uint64_t v70 = v69;
    uint64_t v71 = *(void *)(v69 + 16);
    if (v71)
    {
      sub_1BE0705D0();
      uint64_t v72 = 0;
      do
      {
        uint64_t v73 = *(void *)(v70 + 8 * v72++ + 32);
        uint64_t v138 = v73;
        uint64_t v139 = sub_1BE070ED0();
        unint64_t v140 = v74;
        sub_1BE0705D0();
        sub_1BE0705D0();
        swift_bridgeObjectRelease();
      }
      while (v71 != v72);
      uint64_t v75 = swift_bridgeObjectRelease();
      sub_1BE0644D4(v75);
      swift_bridgeObjectRelease();
      uint64_t v5 = v134;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 96))(v7, a4);
  if (v76)
  {
    uint64_t v77 = v76;
    uint64_t v78 = *(void *)(v76 + 16);
    if (v78)
    {
      sub_1BE0705D0();
      uint64_t v79 = 0;
      do
      {
        uint64_t v80 = *(void *)(v77 + 8 * v79++ + 32);
        uint64_t v138 = v80;
        uint64_t v139 = sub_1BE070ED0();
        unint64_t v140 = v81;
        sub_1BE0705D0();
        sub_1BE0705D0();
        swift_bridgeObjectRelease();
      }
      while (v78 != v79);
      uint64_t v82 = swift_bridgeObjectRelease();
      sub_1BE0644D4(v82);
      swift_bridgeObjectRelease();
      uint64_t v5 = v134;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v131 = *(void *)(a4 + 72);
  uint64_t v132 = (char *)(a4 + 72);
  uint64_t v83 = ((uint64_t (*)(uint64_t, uint64_t))v131)(v7, a4);
  if (!v83) {
    goto LABEL_55;
  }
  uint64_t v84 = v83;
  uint64_t v139 = v83;
  sub_1BE0707A0();
  swift_getWitnessTable();
  if (sub_1BE0708B0())
  {
    swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  uint64_t v135 = v7;
  sub_1BE0705D0();
  if (!MEMORY[0x1C1888F90](v84, AssociatedTypeWitness)) {
    goto LABEL_54;
  }
  uint64_t v85 = 0;
  uint64_t v86 = (void (**)(char *, uint64_t *, uint64_t))(v136 + 16);
  uint64_t v87 = (void (**)(char *, uint64_t))(v136 + 8);
  while (1)
  {
    char v88 = sub_1BE070760();
    sub_1BE070730();
    if ((v88 & 1) == 0) {
      break;
    }
    (*(void (**)(char *, unint64_t, uint64_t))(v136 + 16))(v137, v84+ ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80))+ *(void *)(v136 + 72) * v85, AssociatedTypeWitness);
    uint64_t v89 = v85 + 1;
    if (__OFADD__(v85, 1)) {
      goto LABEL_53;
    }
LABEL_48:
    uint64_t v90 = swift_getAssociatedConformanceWitness();
    uint64_t v91 = AssociatedTypeWitness;
    uint64_t v92 = AssociatedTypeWitness;
    uint64_t v93 = a4;
    uint64_t v94 = v137;
    uint64_t v139 = sub_1BE06453C(v91, v90);
    unint64_t v140 = v95;
    sub_1BE0705D0();
    sub_1BE0705D0();
    swift_bridgeObjectRelease();
    uint64_t v96 = v94;
    a4 = v93;
    uint64_t AssociatedTypeWitness = v92;
    (*v87)(v96, v92);
    ++v85;
    if (v89 == MEMORY[0x1C1888F90](v84, v92)) {
      goto LABEL_54;
    }
  }
  uint64_t result = sub_1BE070BB0();
  if (v116 != 8) {
    goto LABEL_73;
  }
  uint64_t v139 = result;
  (*v86)(v137, &v139, AssociatedTypeWitness);
  swift_unknownObjectRelease();
  uint64_t v89 = v85 + 1;
  if (!__OFADD__(v85, 1)) {
    goto LABEL_48;
  }
LABEL_53:
  __break(1u);
LABEL_54:
  uint64_t v98 = swift_bridgeObjectRelease();
  sub_1BE0644D4(v98);
  swift_bridgeObjectRelease();
  uint64_t v5 = v134;
  uint64_t v7 = v135;
LABEL_55:
  uint64_t v99 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 112))(v7, a4);
  uint64_t v100 = v133;
  if (v99)
  {
    uint64_t v101 = v99;
    uint64_t v102 = *(void *)(v99 + 16);
    if (v102)
    {
      uint64_t v103 = v7;
      sub_1BE0705D0();
      uint64_t v104 = 0;
      do
      {
        uint64_t v105 = *(void *)(v101 + 8 * v104++ + 32);
        uint64_t v138 = v105;
        uint64_t v139 = sub_1BE070ED0();
        unint64_t v140 = v106;
        sub_1BE0705D0();
        sub_1BE0705D0();
        swift_bridgeObjectRelease();
      }
      while (v102 != v104);
      uint64_t v107 = swift_bridgeObjectRelease();
      sub_1BE0644D4(v107);
      swift_bridgeObjectRelease();
      uint64_t v7 = v103;
      uint64_t v100 = v133;
      uint64_t v5 = v134;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v108 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 64))(v7, a4);
  if (v109) {
    return v141;
  }
  uint64_t v110 = v108;
  uint64_t v111 = v121(v7, a4);
  uint64_t v112 = v123;
  (*(void (**)(char *, uint64_t, uint64_t))(v123 + 16))(v100, v5, v7);
  if (v111 != 1)
  {
    (*(void (**)(char *, uint64_t))(v112 + 8))(v100, v7);
    return v141;
  }
  uint64_t v113 = v117(v7, a4);
  (*(void (**)(char *, uint64_t))(v112 + 8))(v100, v7);
  if (v113 <= 1) {
    return v141;
  }
  if (!((uint64_t (*)(uint64_t, uint64_t))v131)(v7, a4)) {
    return v141;
  }
  uint64_t v114 = MEMORY[0x1C1888F80]();
  uint64_t result = swift_bridgeObjectRelease();
  if (v114 < 1) {
    return v141;
  }
  if (__OFSUB__(v110, 1))
  {
    __break(1u);
  }
  else if ((unint64_t)(v110 - 1) <= 6)
  {
    swift_bridgeObjectRetain();
    swift_arrayDestroy();
    uint64_t v139 = 0x3D54534B573BLL;
    unint64_t v140 = 0xE600000000000000;
    sub_1BE0705D0();
    swift_bridgeObjectRelease();
    sub_1BE0705D0();
    swift_bridgeObjectRelease();
    return v141;
  }
  __break(1u);
LABEL_73:
  __break(1u);
  return result;
}

uint64_t sub_1BE0644D4(uint64_t a1)
{
  uint64_t v2 = v1[1];
  if ((v2 & 0x2000000000000000) == 0)
  {
    if ((*v1 & 0xFFFFFFFFFFFFLL) != 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  if ((v2 & 0xF00000000000000) == 0)
  {
    __break(1u);
    return MEMORY[0x1F4183A58](a1);
  }
LABEL_5:
  a1 = sub_1BE0705B0();

  return MEMORY[0x1F4183A58](a1);
}

uint64_t sub_1BE06453C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = self;
  id v5 = objc_msgSend(v4, sel_iCalendarValueFromDayOfTheWeek_, (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2));
  if (v5)
  {
    unsigned int v6 = v5;
    uint64_t v7 = sub_1BE070500();
  }
  else
  {
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(a2 + 16);
  if (((uint64_t (*)(uint64_t, uint64_t))v8)(a1, a2))
  {
    v8(a1, a2);
    uint64_t v10 = sub_1BE070ED0();
    sub_1BE0705D0();
    swift_bridgeObjectRelease();
    return v10;
  }
  return v7;
}

uint64_t sub_1BE064664(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for FamilyRowInsetAppearance()
{
  return &type metadata for FamilyRowInsetAppearance;
}

uint64_t sub_1BE0646DC()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1BE0646F8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E5348);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  uint64_t v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E5350) + 36);
  double result = 8.0;
  *(_OWORD *)uint64_t v5 = xmmword_1BE084550;
  *(_OWORD *)(v5 + 16) = xmmword_1BE084560;
  *(unsigned char *)(v5 + 32) = 0;
  return result;
}

unint64_t sub_1BE06478C()
{
  unint64_t result = qword_1EA0E5358;
  if (!qword_1EA0E5358)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA0E5350);
    sub_1BDF86964(&qword_1EA0E5360, &qword_1EA0E5348);
    sub_1BDF86964(&qword_1EA0E3938, &qword_1EA0E3940);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA0E5358);
  }
  return result;
}

uint64_t sub_1BE064850@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

id EventModel.dateRange.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB677CC0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v13 - v8;
  sub_1BE064C6C();
  (*(void (**)(uint64_t, uint64_t))(a2 + 176))(a1, a2);
  uint64_t v10 = sub_1BE06EEE0();
  uint64_t v11 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 0, 1, v10);
  (*(void (**)(uint64_t, uint64_t))(a2 + 184))(a1, a2);
  v11(v7, 0, 1, v10);
  id result = sub_1BE064CAC((uint64_t)v9, (uint64_t)v7);
  if (!result) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1BE064C6C()
{
  unint64_t result = qword_1EA0E5368;
  if (!qword_1EA0E5368)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA0E5368);
  }
  return result;
}

id sub_1BE064CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1BE06EEE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v7 = 0;
  if (v6(a1, 1, v4) != 1)
  {
    uint64_t v7 = (void *)sub_1BE06EEA0();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  if (v6(a2, 1, v4) == 1)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = (void *)sub_1BE06EEA0();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a2, v4);
  }
  id v9 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithStartDate_endDate_, v7, v8);

  return v9;
}

uint64_t EventModel.isHoliday.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 320))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    char v10 = 0;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 120))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

BOOL EventModel.isBirthday.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1BE0709E0();
  uint64_t v19 = *(void *)(v11 - 8);
  uint64_t v20 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v19 - v12;
  (*(void (**)(uint64_t, uint64_t))(a2 + 320))(a1, a2);
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, AssociatedTypeWitness);
    uint64_t v16 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v10) == 1)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v20);
      return 0;
    }
    else
    {
      uint64_t v17 = swift_getAssociatedConformanceWitness();
      uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v10, v17);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v10);
      return v18 == 5;
    }
  }
}

uint64_t EventModel.isIntegrationBirthdayEvent.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v52 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v50 = sub_1BE0709E0();
  uint64_t v7 = *(void *)(v50 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v50);
  uint64_t v48 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v43 - v10;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_1BE0709E0();
  uint64_t v49 = *(void (***)(char *, uint64_t))(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v43 - v15;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(a2 + 320);
  uint64_t v51 = v2;
  uint64_t v54 = a1;
  uint64_t v46 = a2 + 320;
  uint64_t v47 = a2;
  id v45 = v17;
  v17(a1, a2);
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v11, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v50);
LABEL_5:
    uint64_t v22 = v51;
    uint64_t v23 = v52;
    sub_1BE070500();
    uint64_t v25 = v53;
    uint64_t v24 = v54;
LABEL_6:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, v22, v24);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
LABEL_8:
    char v26 = 0;
    return v26 & 1;
  }
  uint64_t v43 = v19;
  uint64_t v44 = v7;
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v20 = *(void (***)(char *, uint64_t))(v18 + 8);
  ((void (*)(char *, uint64_t))v20)(v11, AssociatedTypeWitness);
  uint64_t v21 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v16, 1, v13) == 1)
  {
    v49[1](v16, v14);
    goto LABEL_5;
  }
  uint64_t v49 = v20;
  uint64_t v28 = swift_getAssociatedConformanceWitness();
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 32))(v13, v28);
  uint64_t v31 = v30;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v13);
  uint64_t v32 = sub_1BE070500();
  if (!v31)
  {
    uint64_t v25 = v53;
    uint64_t v24 = v54;
    uint64_t v22 = v51;
    uint64_t v23 = v52;
    goto LABEL_6;
  }
  if (v29 == v32 && v31 == v33)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v52;
    uint64_t v25 = v53;
    uint64_t v24 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v51, v54);
    uint64_t v36 = v44;
  }
  else
  {
    char v35 = sub_1BE070EF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v23 = v52;
    uint64_t v25 = v53;
    uint64_t v24 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v51, v54);
    uint64_t v36 = v44;
    if ((v35 & 1) == 0) {
      goto LABEL_7;
    }
  }
  uint64_t v37 = v48;
  v45(v24, v47);
  if (v43(v37, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v50);
    sub_1BE070500();
LABEL_25:
    (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v40 = v39;
  ((void (*)(char *, uint64_t))v49)(v37, AssociatedTypeWitness);
  uint64_t v41 = sub_1BE070500();
  if (!v40) {
    goto LABEL_25;
  }
  if (v38 == v41 && v40 == v42) {
    char v26 = 1;
  }
  else {
    char v26 = sub_1BE070EF0();
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
  swift_bridgeObjectRelease();
  return v26 & 1;
}

BOOL EventModel.isRecurring.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 384))(a1, a2);
  BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v8, 1, AssociatedTypeWitness) != 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t EventModel.hasAttendees.getter(uint64_t a1, uint64_t a2)
{
  v6[6] = (*(uint64_t (**)(void))(a2 + 400))();
  _OWORD v6[2] = a1;
  v6[3] = a2;
  swift_getAssociatedTypeWitness();
  sub_1BE0707A0();
  sub_1BE0709E0();
  sub_1BE064850((void (*)(char *, char *))sub_1BE069C5C, (uint64_t)v6, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBB390], v4, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1BE065B90@<X0>(BOOL *a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  sub_1BE0707A0();
  swift_getWitnessTable();
  uint64_t result = sub_1BE0708B0();
  *a1 = (result & 1) == 0;
  return result;
}

uint64_t EventModel.isSelfOrganizedInvitation.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 392))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    char v10 = 0;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    char v10 = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 56))(AssociatedTypeWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10 & 1;
}

uint64_t EventModel.selfAttendeeStatus.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 408))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v6 = v9;
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t EventModel.isExternallyOrganizedInvitation.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = EventModel.hasAttendees.getter(v6, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  if (v10) {
    char v11 = EventModel.isSelfOrganizedInvitation.getter(a1, a2) ^ 1;
  }
  else {
    char v11 = 0;
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
  return v11 & 1;
}

BOOL EventModel.isCurrentUserInvitedAttendee.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1BE0709E0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v17 - v9;
  uint64_t v11 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = EventModel.isExternallyOrganizedInvitation.getter(a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v2, a1);
  if (v14)
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 408))(a1, a2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a1);
    BOOL v15 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v10, 1, AssociatedTypeWitness) != 1;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a1);
    return 0;
  }
  return v15;
}

uint64_t EventModel.currentUserMayActAsOrganizer.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v58 = *(void *)(a1 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v56 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v57 = (char *)&v50 - v8;
  MEMORY[0x1F4188790](v7);
  unint64_t v60 = (char *)&v50 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1BE0709E0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  BOOL v15 = (char *)&v50 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v13);
  uint64_t v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v61 = (char *)&v50 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v50 - v22;
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(a2 + 320);
  uint64_t v59 = v2;
  v24(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    char v25 = EventModel.isSelfOrganizedInvitation.getter(a1, a2);
  }
  else
  {
    uint64_t v55 = v19;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v23, v15, AssociatedTypeWitness);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v27 = v16;
    char v28 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 88))(AssociatedTypeWitness, AssociatedConformanceWitness);
    uint64_t v30 = v58;
    uint64_t v29 = v59;
    uint64_t v59 = *(void (**)(void, void, void))(v58 + 16);
    v59(v60, v29, a1);
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v54(v61, v23, AssociatedTypeWitness);
    if (v28)
    {
      uint64_t v51 = AssociatedConformanceWitness;
      uint64_t v52 = v23;
      uint64_t v53 = v27;
      uint64_t v31 = v60;
      char v32 = EventModel.isSelfOrganizedInvitation.getter(a1, a2);
      uint64_t v33 = v55;
      id v34 = v61;
      v54(v55, v61, AssociatedTypeWitness);
      char v35 = v57;
      uint64_t v36 = (void (*)(char *, char *, uint64_t))v59;
      v59(v57, v31, a1);
      uint64_t v37 = v31;
      uint64_t v38 = a1;
      if (v32)
      {
        uint64_t v39 = *(void (**)(char *, uint64_t))(v58 + 8);
        uint64_t v40 = v37;
        v39(v35, a1);
        uint64_t v41 = v34;
        uint64_t v42 = *(void (**)(char *, uint64_t))(v53 + 8);
        v42(v33, AssociatedTypeWitness);
        v42(v41, AssociatedTypeWitness);
        v39(v40, a1);
        v42(v52, AssociatedTypeWitness);
        char v25 = 1;
      }
      else
      {
        BOOL v44 = EventCalendarModel.isSharedToMe.getter(AssociatedTypeWitness, v51);
        id v45 = v56;
        v36(v56, v35, a1);
        uint64_t v46 = v58;
        if (v44) {
          char v25 = EventModel.isOrganizedBySharedCalendarOwner.getter(a1, a2);
        }
        else {
          char v25 = 0;
        }
        uint64_t v47 = *(void (**)(char *, uint64_t))(v46 + 8);
        v47(v45, a1);
        v47(v35, a1);
        uint64_t v48 = *(void (**)(char *, uint64_t))(v53 + 8);
        v48(v33, AssociatedTypeWitness);
        v48(v61, AssociatedTypeWitness);
        v47(v60, v38);
        v48(v52, AssociatedTypeWitness);
      }
    }
    else
    {
      uint64_t v43 = *(void (**)(char *, uint64_t))(v27 + 8);
      v43(v61, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v60, a1);
      v43(v23, AssociatedTypeWitness);
      char v25 = 0;
    }
  }
  return v25 & 1;
}

uint64_t EventModel.isOrganizedBySharedCalendarOwner.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_1BE0709E0();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v53 = (char *)v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v52 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v54 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1BE0709E0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v52 - v13;
  uint64_t v15 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v52 - v16;
  (*(void (**)(uint64_t, uint64_t))(a2 + 320))(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, v9);
  (*(void (**)(uint64_t, uint64_t))(a2 + 392))(a1, a2);
  uint64_t v18 = AssociatedTypeWitness;
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, char *))(v52 + 8))(v6, v53);
LABEL_7:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v9);
    return 0;
  }
  uint64_t v52 = v15;
  uint64_t v53 = v17;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v21 = (uint64_t)v54;
  (*(void (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 48))(v18);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v18);
  uint64_t v22 = sub_1BE06EE10();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_1BDF8686C(v21, &qword_1EB678020);
    uint64_t v15 = v52;
    uint64_t v17 = v53;
    goto LABEL_7;
  }
  uint64_t v26 = sub_1BE06EDC0();
  uint64_t v28 = v27;
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  long long v56 = xmmword_1BE07C310;
  uint64_t v57 = v26;
  uint64_t v58 = v28;
  swift_bridgeObjectRetain();
  uint64_t v29 = (void *)sub_1BE0704C0();
  id v30 = objc_msgSend(v29, sel_stringRemovingMailto);

  if (v30)
  {
    uint64_t v31 = sub_1BE070500();
    uint64_t v33 = v32;
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v33 = 0;
  }
  uint64_t v59 = v31;
  uint64_t v60 = v33;
  id v34 = (void *)sub_1BE0704C0();
  swift_bridgeObjectRelease();
  id v35 = objc_msgSend(v34, sel_stringRemovingTel);

  if (v35)
  {
    uint64_t v36 = sub_1BE070500();
    uint64_t v38 = v37;
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v38 = 0;
  }
  uint64_t v39 = v52;
  uint64_t v61 = v36;
  uint64_t v62 = v38;
  uint64_t v40 = v9;
  uint64_t v41 = swift_getAssociatedConformanceWitness();
  uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 168))(v9, v41);
  uint64_t v43 = *(void *)(v42 + 16);
  if (v43)
  {
    uint64_t v44 = v57;
    uint64_t v45 = v58;
    swift_bridgeObjectRetain();
    uint64_t v46 = (uint64_t *)(v42 + 40);
    do
    {
      uint64_t v47 = *(v46 - 1);
      uint64_t v48 = *v46;
      if (v45 && (v44 == v47 ? (BOOL v49 = v45 == v48) : (BOOL v49 = 0), v49 || (sub_1BE070EF0() & 1) != 0)
        || v60 && (v59 == v47 ? (BOOL v50 = v60 == v48) : (BOOL v50 = 0), v50 || (sub_1BE070EF0() & 1) != 0)
        || v62 && (v61 == v47 ? (BOOL v51 = v62 == v48) : (BOOL v51 = 0), v51 || (sub_1BE070EF0() & 1) != 0))
      {
        uint64_t v24 = 1;
        goto LABEL_40;
      }
      v46 += 2;
      --v43;
    }
    while (v43);
    uint64_t v24 = 0;
LABEL_40:
    uint64_t v40 = v9;
    uint64_t v39 = v52;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = 0;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v53, v40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA0E3060);
  swift_arrayDestroy();
  return v24;
}

uint64_t EventModel.attendeesNotIncludingOrganizerOrLocationsOrResources.getter(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(a2 + 400))();
  if (result)
  {
    MEMORY[0x1F4188790](result);
    swift_getAssociatedTypeWitness();
    sub_1BE0707A0();
    swift_getWitnessTable();
    return sub_1BE070C20();
  }
  return result;
}

uint64_t sub_1BE067020(uint64_t (*a1)(char *, uint64_t, uint64_t), void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v94 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1BE0709E0();
  uint64_t v88 = *(void *)(v7 - 8);
  uint64_t v89 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v86 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v84 = (char *)&v75 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v83 = (char *)&v75 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v82 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v85 = (char *)&v75 - v17;
  uint64_t v92 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v96 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v97 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v75 - v23;
  uint64_t v87 = a4;
  uint64_t v95 = a3;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  uint64_t v27 = v26(v19, AssociatedConformanceWitness);
  uint64_t v28 = *(void (**)(char *, uint64_t (*)(void, void, void), uint64_t))(v20 + 16);
  uint64_t v93 = a1;
  uint64_t v91 = v28;
  v28(v24, (uint64_t (*)(void, void, void))a1, v19);
  if (v27 != 2)
  {
    uint64_t v36 = v26(v19, AssociatedConformanceWitness);
    uint64_t v37 = *(void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v80 = (v20 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    unint64_t v81 = v37;
    v37(v24, v19);
    id v30 = v97;
    v91(v97, (uint64_t (*)(void, void, void))v93, v19);
    uint64_t v31 = v92;
    uint64_t v33 = v95;
    uint64_t v38 = v96;
    (*(void (**)(char *, void (*)(uint64_t, uint64_t), uint64_t))(v92 + 16))(v96, v94, v95);
    if (v36 == 3)
    {
      id v35 = v38;
      uint64_t v34 = 0;
      uint64_t v29 = v81;
      goto LABEL_32;
    }
    uint64_t v39 = *(void (***)(void, void))(AssociatedConformanceWitness + 8);
    uint64_t v40 = v85;
    v39[6](v19, v39);
    uint64_t v41 = (uint64_t)v40;
    uint64_t v42 = sub_1BE06EE10();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v76 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
    int v44 = v76(v41, 1, v42);
    uint64_t v75 = v43;
    if (v44 == 1)
    {
      sub_1BDF8686C(v41, &qword_1EB678020);
      uint64_t v85 = 0;
    }
    else
    {
      sub_1BE06EDC0();
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
      uint64_t v85 = (char *)sub_1BE0704C0();
      swift_bridgeObjectRelease();
    }
    v39[4](v19, v39);
    if (v45)
    {
      uint64_t v79 = sub_1BE0704C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v79 = 0;
    }
    v39[5](v19, v39);
    uint64_t v77 = v42;
    if (v46)
    {
      uint64_t v78 = sub_1BE0704C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v78 = 0;
    }
    uint64_t v47 = v87;
    uint64_t v48 = v83;
    BOOL v49 = *(void (**)(uint64_t, uint64_t))(v87 + 392);
    uint64_t v83 = (char *)(v87 + 392);
    uint64_t v94 = v49;
    v49(v33, v87);
    uint64_t v50 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v93 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48);
    int v51 = v93(v48, 1, AssociatedTypeWitness);
    uint64_t v91 = (void (*)(char *, uint64_t (*)(void, void, void), uint64_t))v19;
    if (v51 == 1)
    {
      (*(void (**)(char *, uint64_t))(v88 + 8))(v48, v89);
    }
    else
    {
      uint64_t v52 = swift_getAssociatedConformanceWitness();
      uint64_t v53 = (uint64_t)v82;
      (*(void (**)(uint64_t))(*(void *)(v52 + 8) + 48))(AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v48, AssociatedTypeWitness);
      uint64_t v54 = v77;
      if (v76(v53, 1, v77) != 1)
      {
        sub_1BE06EDC0();
        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v53, v54);
        uint64_t v82 = (char *)sub_1BE0704C0();
        swift_bridgeObjectRelease();
LABEL_20:
        uint64_t v55 = v84;
        v94(v33, v47);
        uint64_t v56 = AssociatedTypeWitness;
        if (v93(v55, 1, AssociatedTypeWitness) == 1)
        {
          (*(void (**)(char *, uint64_t))(v88 + 8))(v55, v89);
          uint64_t v84 = 0;
        }
        else
        {
          uint64_t v57 = swift_getAssociatedConformanceWitness();
          uint64_t v58 = v56;
          (*(void (**)(uint64_t))(*(void *)(v57 + 8) + 32))(v56);
          uint64_t v60 = v59;
          (*(void (**)(char *, uint64_t))(v50 + 8))(v55, v58);
          if (v60)
          {
            uint64_t v84 = (char *)sub_1BE0704C0();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v84 = 0;
          }
          uint64_t v47 = v87;
        }
        uint64_t v61 = v86;
        v94(v33, v47);
        uint64_t v62 = AssociatedTypeWitness;
        if (v93(v61, 1, AssociatedTypeWitness) == 1)
        {
          (*(void (**)(char *, uint64_t))(v88 + 8))(v61, v89);
        }
        else
        {
          uint64_t v63 = swift_getAssociatedConformanceWitness();
          (*(void (**)(uint64_t))(*(void *)(v63 + 8) + 40))(v62);
          uint64_t v64 = v61;
          uint64_t v66 = v65;
          (*(void (**)(char *, uint64_t))(v50 + 8))(v64, v62);
          if (v66)
          {
            unint64_t v67 = (void *)sub_1BE0704C0();
            swift_bridgeObjectRelease();
LABEL_31:
            uint64_t v68 = (void *)v79;
            uint64_t v70 = v84;
            uint64_t v69 = v85;
            uint64_t v71 = (void *)v78;
            uint64_t v72 = v82;
            int v73 = doURLsEmailsPhoneNumbersMatch();

            uint64_t v34 = v73 ^ 1u;
            uint64_t v33 = v95;
            id v35 = v96;
            uint64_t v19 = (uint64_t)v91;
            id v30 = v97;
            uint64_t v29 = v81;
            goto LABEL_32;
          }
        }
        unint64_t v67 = 0;
        goto LABEL_31;
      }
      sub_1BDF8686C(v53, &qword_1EB678020);
    }
    uint64_t v82 = 0;
    goto LABEL_20;
  }
  uint64_t v29 = *(void (**)(char *, uint64_t))(v20 + 8);
  v29(v24, v19);
  id v30 = v97;
  v91(v97, (uint64_t (*)(void, void, void))v93, v19);
  uint64_t v31 = v92;
  uint64_t v33 = v95;
  uint64_t v32 = v96;
  (*(void (**)(char *, void (*)(uint64_t, uint64_t), uint64_t))(v92 + 16))(v96, v94, v95);
  uint64_t v34 = 0;
  id v35 = v32;
LABEL_32:
  (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v33);
  v29(v30, v19);
  return v34;
}

BOOL EventModel.isPrivate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))() != 0;
}

uint64_t EventModel.isDelegate.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1BE0709E0();
  uint64_t v19 = *(void *)(v11 - 8);
  uint64_t v20 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v19 - v12;
  (*(void (**)(uint64_t, uint64_t))(a2 + 320))(a1, a2);
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v15 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, AssociatedTypeWitness);
    uint64_t v16 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v10) == 1)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v20);
      char v15 = 0;
    }
    else
    {
      uint64_t v17 = swift_getAssociatedConformanceWitness();
      char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 56))(v10, v17);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v10);
    }
  }
  return v15 & 1;
}

BOOL EventModel.isSharedToMe.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 320))(a1, a2);
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  else
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 96))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, AssociatedTypeWitness);
    return v12 == 2;
  }
}

BOOL EventModel.isIntegrationEvent.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t))(a2 + 448))(a1, a2);
  BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v8, 1, AssociatedTypeWitness) != 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t EventModel.displayColor.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v20 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v19 - v6;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1BE0709E0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v19 - v11;
  if (EventModel.isIntegrationEvent.getter(a1, a2))
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 448))(a1, a2);
    uint64_t v13 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v8) != 1)
    {
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v15 = (uint64_t)EventIntegrationModel.displayColor.getter(v8, AssociatedConformanceWitness);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v8);
      return v15;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(a2 + 320))(a1, a2);
    uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, AssociatedTypeWitness) != 1)
    {
      uint64_t v17 = swift_getAssociatedConformanceWitness();
      uint64_t v15 = EventCalendarModel.displayColor.getter(AssociatedTypeWitness, v17);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v7, AssociatedTypeWitness);
      return v15;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
  }
  return 0;
}

uint64_t EventModel.hasAbsoluteAlarms.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 344))();
  if (v2)
  {
    MEMORY[0x1F4188790](v2);
    swift_getAssociatedTypeWitness();
    sub_1BE0707A0();
    swift_getWitnessTable();
    char v3 = sub_1BE070680();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

BOOL sub_1BE068508()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return EventAlarmModel.isAbsolute.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
}

BOOL EventModel.hasURL.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678020);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 416))(a1, a2);
  uint64_t v7 = sub_1BE06EE10();
  BOOL v8 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) != 1;
  sub_1BDF8686C((uint64_t)v6, &qword_1EB678020);
  return v8;
}

uint64_t EventModel.isDeletable.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v56 = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1BE0709E0();
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v54 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v53 = (char *)&v50 - v10;
  uint64_t v62 = AssociatedTypeWitness;
  uint64_t v11 = sub_1BE0709E0();
  uint64_t v58 = *(void *)(v11 - 8);
  uint64_t v59 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v55 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v57 = (char *)&v50 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v50 - v17;
  uint64_t v19 = *(void *)(a1 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v16);
  uint64_t v22 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v50 - v23;
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 328))(a1, a2);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v63 = v3;
  v26(v24, v3, a1);
  if (v25)
  {
    char v27 = EventModel.isDelegate.getter(a1, a2);
    v26(v22, (uint64_t)v24, a1);
    BOOL v28 = (v27 & 1) != 0 || EventModel.isSharedToMe.getter(a1, a2);
    uint64_t v29 = AssociatedConformanceWitness;
    uint64_t v30 = v62;
    uint64_t v31 = *(void (**)(char *, uint64_t))(v19 + 8);
    v31(v22, a1);
    v31(v24, a1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v24, a1);
    BOOL v28 = 0;
    uint64_t v29 = AssociatedConformanceWitness;
    uint64_t v30 = v62;
  }
  uint64_t v61 = *(void (**)(uint64_t, uint64_t))(a2 + 320);
  uint64_t v62 = a2 + 320;
  v61(a1, a2);
  uint64_t v32 = *(void *)(v30 - 8);
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v33(v18, 1, v30) == 1)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v18, v59);
  }
  else
  {
    char v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 88))(v30, v29);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v30);
    if (!v28 && (v34 & 1) != 0)
    {
LABEL_26:
      char v47 = 1;
      return v47 & 1;
    }
  }
  uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 336))(a1, a2);
  uint64_t v36 = v57;
  v61(a1, a2);
  if (v33(v36, 1, v30) == 1)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v36, v59);
    char v37 = 0;
    uint64_t v38 = v55;
  }
  else
  {
    uint64_t v50 = v35;
    uint64_t v39 = v53;
    (*(void (**)(uint64_t, uint64_t))(v29 + 104))(v30, v29);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v30);
    uint64_t v40 = v56;
    uint64_t v41 = *(void *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v56) == 1)
    {
      (*(void (**)(char *, uint64_t))(v51 + 8))(v39, v52);
      char v37 = 0;
    }
    else
    {
      uint64_t v42 = swift_getAssociatedConformanceWitness();
      char v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 56))(v40, v42);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v39, v40);
      char v37 = v43;
    }
    uint64_t v38 = v55;
    uint64_t v35 = v50;
  }
  v61(a1, a2);
  if (v33(v38, 1, v30) == 1)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v59);
    if ((v37 & 1) == 0) {
      goto LABEL_25;
    }
  }
  else
  {
    int v44 = v54;
    (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(v30, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v38, v30);
    uint64_t v45 = v56;
    uint64_t v46 = *(void *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v56) != 1)
    {
      uint64_t v48 = swift_getAssociatedConformanceWitness();
      char v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 72))(v45, v48);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v44, v45);
      if (v37)
      {
        if (v35 == 3) {
          return v47 & 1;
        }
        goto LABEL_27;
      }
LABEL_25:
      if (v35 == 3) {
        goto LABEL_26;
      }
LABEL_27:
      char v47 = 0;
      return v47 & 1;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v52);
    if ((v37 & 1) == 0) {
      goto LABEL_25;
    }
  }
  char v47 = 0;
  return v47 & 1;
}

uint64_t EventModel.externalURL.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v6 = sub_1BE06EEE0();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v41 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1BE06EB50();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v51 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1BE0709E0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_1BE0709E0();
  uint64_t v49 = *(void *)(v17 - 8);
  uint64_t v50 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(a2 + 320);
  uint64_t v44 = a1;
  uint64_t v45 = v3;
  uint64_t v46 = a2;
  v20(a1, a2);
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v14, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
LABEL_12:
    uint64_t v39 = sub_1BE06EE10();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v52, 1, 1, v39);
  }
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v14, AssociatedTypeWitness);
  uint64_t v22 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v19, 1, v16) == 1)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v50);
    goto LABEL_12;
  }
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(v16, v23);
  unint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v16);
  char v27 = v51;
  sub_1BE06EB00();
  sub_1BE06EB20();
  uint64_t v54 = v24;
  unint64_t v55 = v26;
  sub_1BDF859F0();
  sub_1BE070A50();
  uint64_t v29 = v28;
  swift_bridgeObjectRelease();
  if (!v29)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v48);
    goto LABEL_12;
  }
  uint64_t v30 = v46;
  uint64_t v31 = v44;
  uint64_t v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 168))(v44, v46);
  unint64_t v55 = v32;
  sub_1BE070A50();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  if (!v34)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v48);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v54 = 0;
  unint64_t v55 = 0xE000000000000000;
  sub_1BE070B70();
  swift_bridgeObjectRelease();
  uint64_t v54 = 0xD000000000000013;
  unint64_t v55 = 0x80000001BE08E330;
  sub_1BE0705D0();
  swift_bridgeObjectRelease();
  sub_1BE0705D0();
  sub_1BE0705D0();
  swift_bridgeObjectRelease();
  sub_1BE0705D0();
  uint64_t v35 = v41;
  (*(void (**)(uint64_t, uint64_t))(v30 + 176))(v31, v30);
  sub_1BE06EE70();
  double v37 = v36;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v35, v43);
  if ((~*(void *)&v37 & 0x7FF0000000000000) != 0)
  {
    if (v37 > -9.22337204e18)
    {
      if (v37 < 9.22337204e18)
      {
        uint64_t v53 = (uint64_t)v37;
        sub_1BE070ED0();
        sub_1BE0705D0();
        swift_bridgeObjectRelease();
        sub_1BE06EE00();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v27, v48);
      }
      goto LABEL_16;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t EventModel.uniqueIDWithoutRID.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EB678018);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 168);
  v21[2] = v7(a1, a2);
  v21[3] = v8;
  v21[0] = 0x3D4449522FLL;
  v21[1] = 0xE500000000000000;
  uint64_t v9 = sub_1BE06EFC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  sub_1BDF859F0();
  sub_1BE070A70();
  char v11 = v10;
  sub_1BDF8686C((uint64_t)v6, &qword_1EB678018);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11) {
    return v7(a1, a2);
  }
  v7(a1, a2);
  uint64_t v12 = sub_1BE070670();
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = MEMORY[0x1C1888D70](v12, v14, v16, v18);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t EventModel.defaultAlarmOffset.getter(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1BE0709E0();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  char v10 = (char *)&v33 - v9;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v38 = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1BE0709E0();
  uint64_t v34 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v33 - v16;
  char v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 200))(a1, a2);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(a2 + 320);
  if ((v18 & 1) == 0)
  {
    v19(a1, a2);
    uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v8, 1, AssociatedTypeWitness) != 1)
    {
      (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v8, AssociatedTypeWitness);
      uint64_t v27 = v38;
      uint64_t v28 = *(void *)(v38 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v15, 1, v38) != 1)
      {
        uint64_t v31 = swift_getAssociatedConformanceWitness();
        uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 104))(v27, v31);
        (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v27);
        return v29;
      }
      uint64_t v24 = v35;
      uint64_t v21 = *(void (**)(char *, uint64_t))(v34 + 8);
      uint64_t v22 = v15;
      goto LABEL_11;
    }
    uint64_t v21 = *(void (**)(char *, uint64_t))(v36 + 8);
    uint64_t v22 = v8;
LABEL_6:
    uint64_t v24 = v37;
LABEL_11:
    v21(v22, v24);
    return 0;
  }
  v19(a1, a2);
  uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v21 = *(void (**)(char *, uint64_t))(v36 + 8);
    uint64_t v22 = v10;
    goto LABEL_6;
  }
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 104))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, AssociatedTypeWitness);
  uint64_t v25 = v38;
  uint64_t v26 = *(void *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v17, 1, v38) != 1)
  {
    uint64_t v30 = swift_getAssociatedConformanceWitness();
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 112))(v25, v30);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v25);
    return v29;
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v35);
  return 0;
}

uint64_t sub_1BE069C5C@<X0>(BOOL *a1@<X8>)
{
  return sub_1BE065B90(a1);
}

uint64_t sub_1BE069C7C(uint64_t (*a1)(char *, uint64_t, uint64_t))
{
  return sub_1BE067020(a1, *(void (**)(uint64_t, uint64_t))(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

BOOL sub_1BE069CA0()
{
  return sub_1BE068508();
}

uint64_t dispatch thunk of EventModel.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of EventModel.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of EventModel.uniqueID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of EventModel.startDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of EventModel.endDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of EventModel.duration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of EventModel.isAllDay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of EventModel.isProposedTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of EventModel.startTimeZone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of EventModel.endTimeZone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of EventModel.isFloating.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of EventModel.floatingTimeZone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of EventModel.virtualConference.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of EventModel.location.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of EventModel.locationWithoutPrediction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of EventModel.locationsWithoutPrediction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of EventModel.structuredLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of EventModel.structuredLocationWithoutPrediction.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t dispatch thunk of EventModel.preferredLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of EventModel.travelTime.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of EventModel.travelRoutingMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of EventModel.calendar.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 320))();
}

uint64_t dispatch thunk of EventModel.privacyLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of EventModel.status.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 336))();
}

uint64_t dispatch thunk of EventModel.alarms.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 344))();
}

uint64_t dispatch thunk of EventModel.notes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 352))();
}

uint64_t dispatch thunk of EventModel.availability.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 360))();
}

uint64_t dispatch thunk of EventModel.recurrenceDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 368))();
}

uint64_t dispatch thunk of EventModel.recurrenceRules.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 376))();
}

uint64_t dispatch thunk of EventModel.singleRecurrenceRule.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 384))();
}

uint64_t dispatch thunk of EventModel.organizer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 392))();
}

uint64_t dispatch thunk of EventModel.attendees.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 400))();
}

uint64_t dispatch thunk of EventModel.selfAttendee.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 408))();
}

uint64_t dispatch thunk of EventModel.url.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 416))();
}

uint64_t dispatch thunk of EventModel.hasAttachment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 424))();
}

uint64_t dispatch thunk of EventModel.conferenceURLForDisplayCached.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 432))();
}

uint64_t dispatch thunk of EventModel.conferenceURLForDisplay.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 440))();
}

uint64_t dispatch thunk of EventModel.integration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 448))();
}

uint64_t dispatch thunk of EventModel.isEditable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 456))();
}

uint64_t dispatch thunk of EventModel.isNew.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 464))();
}

uint64_t dispatch thunk of EventModel.isSuggestedEvent.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 472))();
}

uint64_t EKLocationPredictedLOIModelWrapper.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

{
  *a2 = result;
  return result;
}

id EKLocationPredictedLOIModelWrapper.ekPredictedLOI.getter()
{
  return *v0;
}

void EKLocationPredictedLOIModelWrapper.ekPredictedLOI.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*EKLocationPredictedLOIModelWrapper.ekPredictedLOI.modify())()
{
  return nullsub_1;
}

id EKLocationPredictedLOIModelWrapper.type.getter()
{
  return objc_msgSend(*v0, sel_type);
}

uint64_t EKLocationPredictedLOIModelWrapper.customLabel.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_customLabel);
}

uint64_t EKLocationPredictedLOIModelWrapper.mapItemName.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_mapItemName);
}

uint64_t EKLocationPredictedLOIModelWrapper.addressCountryCode.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_addressCountryCode);
}

uint64_t EKLocationPredictedLOIModelWrapper.addressThoroughfare.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_addressThoroughfare);
}

uint64_t EKLocationPredictedLOIModelWrapper.addressLocality.getter()
{
  return sub_1BDF97CBC((SEL *)&selRef_addressLocality);
}

uint64_t sub_1BE06A0A4(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_customLabel);
}

uint64_t sub_1BE06A0B0(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_mapItemName);
}

uint64_t sub_1BE06A0BC(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_addressCountryCode);
}

uint64_t sub_1BE06A0C8(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_addressThoroughfare);
}

uint64_t sub_1BE06A0D4(uint64_t a1, uint64_t a2)
{
  return sub_1BDF97E68(a1, a2, (SEL *)&selRef_addressLocality);
}

ValueMetadata *type metadata accessor for EKLocationPredictedLOIModelWrapper()
{
  return &type metadata for EKLocationPredictedLOIModelWrapper;
}

uint64_t sub_1BE06A0F0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void CUIKLaunchURLForEvent_cold_1()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_0(&dword_1BDF08000, v0, v1, "Could not get launch url for event because event was nil (maybe deleted?)", v2, v3, v4, v5, v6);
}

void CUIKLaunchURLForEvent_cold_2()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_0(&dword_1BDF08000, v0, v1, "Could not get launch url for event because unable to get event url", v2, v3, v4, v5, v6);
}

void CUIKLaunchURLForEventInvitation_cold_1()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_0(&dword_1BDF08000, v0, v1, "Could not get launch url for event invitation because event was nil (maybe deleted?)", v2, v3, v4, v5, v6);
}

void CUIKLaunchURLForEventInvitation_cold_2()
{
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_0_0(&dword_1BDF08000, v0, v1, "Could not get launch url for event invitation because unable to get event url", v2, v3, v4, v5, v6);
}

uint64_t sub_1BE06EAC0()
{
  return MEMORY[0x1F40E3038]();
}

uint64_t sub_1BE06EAD0()
{
  return MEMORY[0x1F40E3060]();
}

uint64_t sub_1BE06EAE0()
{
  return MEMORY[0x1F40E3070]();
}

uint64_t sub_1BE06EAF0()
{
  return MEMORY[0x1F40E32D8]();
}

uint64_t sub_1BE06EB00()
{
  return MEMORY[0x1F40E3338]();
}

uint64_t sub_1BE06EB10()
{
  return MEMORY[0x1F40E3368]();
}

uint64_t sub_1BE06EB20()
{
  return MEMORY[0x1F40E33B8]();
}

uint64_t sub_1BE06EB30()
{
  return MEMORY[0x1F40E33E8]();
}

uint64_t sub_1BE06EB40()
{
  return MEMORY[0x1F40E3400]();
}

uint64_t sub_1BE06EB50()
{
  return MEMORY[0x1F40E3420]();
}

uint64_t sub_1BE06EB60()
{
  return MEMORY[0x1F40E37E0]();
}

uint64_t sub_1BE06EB70()
{
  return MEMORY[0x1F40E3800]();
}

uint64_t sub_1BE06EB80()
{
  return MEMORY[0x1F40E3818]();
}

uint64_t sub_1BE06EB90()
{
  return MEMORY[0x1F40E3880]();
}

uint64_t sub_1BE06EBA0()
{
  return MEMORY[0x1F40E3890]();
}

uint64_t sub_1BE06EBB0()
{
  return MEMORY[0x1F40E38F8]();
}

uint64_t sub_1BE06EBC0()
{
  return MEMORY[0x1F40E3908]();
}

uint64_t sub_1BE06EBD0()
{
  return MEMORY[0x1F40E3920]();
}

uint64_t sub_1BE06EBE0()
{
  return MEMORY[0x1F40E3958]();
}

uint64_t sub_1BE06EBF0()
{
  return MEMORY[0x1F40E3970]();
}

uint64_t sub_1BE06EC00()
{
  return MEMORY[0x1F40E3978]();
}

uint64_t sub_1BE06EC10()
{
  return MEMORY[0x1F40E3988]();
}

uint64_t sub_1BE06EC20()
{
  return MEMORY[0x1F40E3990]();
}

uint64_t sub_1BE06EC30()
{
  return MEMORY[0x1F40E39B8]();
}

uint64_t sub_1BE06EC40()
{
  return MEMORY[0x1F40E3A10]();
}

uint64_t sub_1BE06EC50()
{
  return MEMORY[0x1F40E3A58]();
}

uint64_t sub_1BE06EC60()
{
  return MEMORY[0x1F40E3C38]();
}

uint64_t sub_1BE06EC70()
{
  return MEMORY[0x1F40E3C48]();
}

uint64_t sub_1BE06EC80()
{
  return MEMORY[0x1F40E3C78]();
}

uint64_t sub_1BE06EC90()
{
  return MEMORY[0x1F40E3CA0]();
}

uint64_t sub_1BE06ECA0()
{
  return MEMORY[0x1F40E3E08]();
}

uint64_t sub_1BE06ECB0()
{
  return MEMORY[0x1F40E3EA0]();
}

uint64_t sub_1BE06ECC0()
{
  return MEMORY[0x1F40E3EB0]();
}

uint64_t sub_1BE06ECD0()
{
  return MEMORY[0x1F40E3F00]();
}

uint64_t sub_1BE06ECE0()
{
  return MEMORY[0x1F40E3F10]();
}

uint64_t sub_1BE06ECF0()
{
  return MEMORY[0x1F40E3F18]();
}

uint64_t sub_1BE06ED00()
{
  return MEMORY[0x1F40E3F58]();
}

uint64_t sub_1BE06ED10()
{
  return MEMORY[0x1F40E4090]();
}

uint64_t sub_1BE06ED20()
{
  return MEMORY[0x1F40E40A0]();
}

uint64_t sub_1BE06ED30()
{
  return MEMORY[0x1F40E41B8]();
}

uint64_t sub_1BE06ED40()
{
  return MEMORY[0x1F40E41E0]();
}

uint64_t sub_1BE06ED50()
{
  return MEMORY[0x1F40E4210]();
}

uint64_t sub_1BE06ED60()
{
  return MEMORY[0x1F40E4220]();
}

uint64_t sub_1BE06ED70()
{
  return MEMORY[0x1F40E4240]();
}

uint64_t sub_1BE06ED80()
{
  return MEMORY[0x1F40E4260]();
}

uint64_t sub_1BE06ED90()
{
  return MEMORY[0x1F40E4270]();
}

uint64_t sub_1BE06EDA0()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1BE06EDB0()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1BE06EDC0()
{
  return MEMORY[0x1F40E48F8]();
}

uint64_t sub_1BE06EDD0()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_1BE06EDE0()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_1BE06EDF0()
{
  return MEMORY[0x1F40E4B00]();
}

uint64_t sub_1BE06EE00()
{
  return MEMORY[0x1F40E4B20]();
}

uint64_t sub_1BE06EE10()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1BE06EE20()
{
  return MEMORY[0x1F40E4BE0]();
}

uint64_t sub_1BE06EE30()
{
  return MEMORY[0x1F40E4C30]();
}

uint64_t sub_1BE06EE40()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_1BE06EE50()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_1BE06EE60()
{
  return MEMORY[0x1F40E4DB8]();
}

uint64_t sub_1BE06EE70()
{
  return MEMORY[0x1F40E4EE0]();
}

uint64_t sub_1BE06EE80()
{
  return MEMORY[0x1F40E5098]();
}

uint64_t sub_1BE06EE90()
{
  return MEMORY[0x1F40E50E0]();
}

uint64_t sub_1BE06EEA0()
{
  return MEMORY[0x1F40E5188]();
}

uint64_t sub_1BE06EEB0()
{
  return MEMORY[0x1F40E52C0]();
}

uint64_t sub_1BE06EEC0()
{
  return MEMORY[0x1F40E52E0]();
}

uint64_t sub_1BE06EED0()
{
  return MEMORY[0x1F40E5328]();
}

uint64_t sub_1BE06EEE0()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1BE06EEF0()
{
  return MEMORY[0x1F40E53B0]();
}

uint64_t sub_1BE06EF00()
{
  return MEMORY[0x1F40E5438]();
}

uint64_t sub_1BE06EF10()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1BE06EF20()
{
  return MEMORY[0x1F40E5568]();
}

uint64_t sub_1BE06EF30()
{
  return MEMORY[0x1F40E5578]();
}

uint64_t sub_1BE06EF40()
{
  return MEMORY[0x1F40E5648]();
}

uint64_t sub_1BE06EF50()
{
  return MEMORY[0x1F40E56B0]();
}

uint64_t sub_1BE06EF60()
{
  return MEMORY[0x1F40E56C8]();
}

uint64_t sub_1BE06EF70()
{
  return MEMORY[0x1F40E5728]();
}

uint64_t sub_1BE06EF80()
{
  return MEMORY[0x1F40E57F8]();
}

uint64_t sub_1BE06EF90()
{
  return MEMORY[0x1F40E5820]();
}

uint64_t sub_1BE06EFA0()
{
  return MEMORY[0x1F40E5840]();
}

uint64_t sub_1BE06EFB0()
{
  return MEMORY[0x1F40E5868]();
}

uint64_t sub_1BE06EFC0()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_1BE06EFD0()
{
  return MEMORY[0x1F40E58D0]();
}

uint64_t sub_1BE06EFE0()
{
  return MEMORY[0x1F40E5910]();
}

uint64_t sub_1BE06EFF0()
{
  return MEMORY[0x1F40E5918]();
}

uint64_t sub_1BE06F000()
{
  return MEMORY[0x1F40E5978]();
}

uint64_t sub_1BE06F010()
{
  return MEMORY[0x1F40E59B0]();
}

uint64_t sub_1BE06F020()
{
  return MEMORY[0x1F40E59E0]();
}

uint64_t sub_1BE06F030()
{
  return MEMORY[0x1F40E5A10]();
}

uint64_t sub_1BE06F040()
{
  return MEMORY[0x1F40E5A18]();
}

uint64_t sub_1BE06F050()
{
  return MEMORY[0x1F40E5A40]();
}

uint64_t sub_1BE06F060()
{
  return MEMORY[0x1F40E5A58]();
}

uint64_t sub_1BE06F070()
{
  return MEMORY[0x1F40E5A78]();
}

uint64_t sub_1BE06F080()
{
  return MEMORY[0x1F40E5A80]();
}

uint64_t sub_1BE06F090()
{
  return MEMORY[0x1F40E5A98]();
}

uint64_t sub_1BE06F0A0()
{
  return MEMORY[0x1F40E5AA0]();
}

uint64_t sub_1BE06F0B0()
{
  return MEMORY[0x1F40E5AB8]();
}

uint64_t sub_1BE06F0C0()
{
  return MEMORY[0x1F40E5AC8]();
}

uint64_t sub_1BE06F0D0()
{
  return MEMORY[0x1F40E5AE0]();
}

uint64_t sub_1BE06F0E0()
{
  return MEMORY[0x1F40E5AF0]();
}

uint64_t sub_1BE06F0F0()
{
  return MEMORY[0x1F40E5B00]();
}

uint64_t sub_1BE06F100()
{
  return MEMORY[0x1F40E5B18]();
}

uint64_t sub_1BE06F110()
{
  return MEMORY[0x1F40E5CC0]();
}

uint64_t sub_1BE06F120()
{
  return MEMORY[0x1F40E5D28]();
}

uint64_t sub_1BE06F130()
{
  return MEMORY[0x1F40E5D50]();
}

uint64_t sub_1BE06F140()
{
  return MEMORY[0x1F40E5D70]();
}

uint64_t sub_1BE06F150()
{
  return MEMORY[0x1F4187538]();
}

uint64_t sub_1BE06F160()
{
  return MEMORY[0x1F4187540]();
}

uint64_t sub_1BE06F170()
{
  return MEMORY[0x1F4187578]();
}

uint64_t sub_1BE06F180()
{
  return MEMORY[0x1F4187588]();
}

uint64_t sub_1BE06F190()
{
  return MEMORY[0x1F4188500]();
}

uint64_t sub_1BE06F1A0()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1BE06F1B0()
{
  return MEMORY[0x1F4188680]();
}

uint64_t sub_1BE06F1C0()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1BE06F1D0()
{
  return MEMORY[0x1F40D6940]();
}

uint64_t sub_1BE06F1E0()
{
  return MEMORY[0x1F40D69E0]();
}

uint64_t sub_1BE06F1F0()
{
  return MEMORY[0x1F40D6AC0]();
}

uint64_t sub_1BE06F200()
{
  return MEMORY[0x1F40D6B80]();
}

uint64_t sub_1BE06F210()
{
  return MEMORY[0x1F40D6B88]();
}

uint64_t sub_1BE06F220()
{
  return MEMORY[0x1F40D6BA0]();
}

uint64_t sub_1BE06F230()
{
  return MEMORY[0x1F40D6BA8]();
}

uint64_t sub_1BE06F240()
{
  return MEMORY[0x1F40D6BB8]();
}

uint64_t sub_1BE06F250()
{
  return MEMORY[0x1F40D6D80]();
}

uint64_t sub_1BE06F260()
{
  return MEMORY[0x1F40D6E18]();
}

uint64_t sub_1BE06F270()
{
  return MEMORY[0x1F40F7D90]();
}

uint64_t sub_1BE06F280()
{
  return MEMORY[0x1F40F7D98]();
}

uint64_t sub_1BE06F290()
{
  return MEMORY[0x1F40F7E18]();
}

uint64_t sub_1BE06F2A0()
{
  return MEMORY[0x1F40F7E38]();
}

uint64_t sub_1BE06F2B0()
{
  return MEMORY[0x1F40F7E48]();
}

uint64_t sub_1BE06F2C0()
{
  return MEMORY[0x1F40F7E68]();
}

uint64_t sub_1BE06F2D0()
{
  return MEMORY[0x1F40F7E78]();
}

uint64_t sub_1BE06F2E0()
{
  return MEMORY[0x1F40F7F00]();
}

uint64_t sub_1BE06F2F0()
{
  return MEMORY[0x1F40F8048]();
}

uint64_t sub_1BE06F300()
{
  return MEMORY[0x1F40F8060]();
}

uint64_t sub_1BE06F310()
{
  return MEMORY[0x1F40F80A8]();
}

uint64_t sub_1BE06F320()
{
  return MEMORY[0x1F40F80C8]();
}

uint64_t sub_1BE06F330()
{
  return MEMORY[0x1F40F8120]();
}

uint64_t sub_1BE06F340()
{
  return MEMORY[0x1F40F8140]();
}

uint64_t sub_1BE06F350()
{
  return MEMORY[0x1F40F8320]();
}

uint64_t sub_1BE06F360()
{
  return MEMORY[0x1F40F8358]();
}

uint64_t sub_1BE06F370()
{
  return MEMORY[0x1F40F8368]();
}

uint64_t sub_1BE06F380()
{
  return MEMORY[0x1F40F8370]();
}

uint64_t sub_1BE06F390()
{
  return MEMORY[0x1F40F83E8]();
}

uint64_t sub_1BE06F3A0()
{
  return MEMORY[0x1F40F83F8]();
}

uint64_t sub_1BE06F3B0()
{
  return MEMORY[0x1F40F8458]();
}

uint64_t sub_1BE06F3C0()
{
  return MEMORY[0x1F40F8478]();
}

uint64_t sub_1BE06F3D0()
{
  return MEMORY[0x1F40F8480]();
}

uint64_t sub_1BE06F3E0()
{
  return MEMORY[0x1F40F84B0]();
}

uint64_t sub_1BE06F3F0()
{
  return MEMORY[0x1F40F84E0]();
}

uint64_t sub_1BE06F400()
{
  return MEMORY[0x1F40F8620]();
}

uint64_t sub_1BE06F420()
{
  return MEMORY[0x1F40F8768]();
}

uint64_t sub_1BE06F430()
{
  return MEMORY[0x1F40F87B0]();
}

uint64_t sub_1BE06F440()
{
  return MEMORY[0x1F40F87F8]();
}

uint64_t sub_1BE06F450()
{
  return MEMORY[0x1F40F8800]();
}

uint64_t sub_1BE06F460()
{
  return MEMORY[0x1F40F8810]();
}

uint64_t sub_1BE06F470()
{
  return MEMORY[0x1F40F8848]();
}

uint64_t sub_1BE06F480()
{
  return MEMORY[0x1F40F8850]();
}

uint64_t sub_1BE06F490()
{
  return MEMORY[0x1F40F8BB0]();
}

uint64_t sub_1BE06F4A0()
{
  return MEMORY[0x1F40F8BF8]();
}

uint64_t sub_1BE06F4B0()
{
  return MEMORY[0x1F40F8C10]();
}

uint64_t sub_1BE06F4C0()
{
  return MEMORY[0x1F40F8C20]();
}

uint64_t sub_1BE06F4D0()
{
  return MEMORY[0x1F40F8C68]();
}

uint64_t sub_1BE06F4E0()
{
  return MEMORY[0x1F40F8D60]();
}

uint64_t sub_1BE06F4F0()
{
  return MEMORY[0x1F40F8E40]();
}

uint64_t sub_1BE06F500()
{
  return MEMORY[0x1F40F8E68]();
}

uint64_t sub_1BE06F510()
{
  return MEMORY[0x1F40F8E98]();
}

uint64_t sub_1BE06F520()
{
  return MEMORY[0x1F40F8F48]();
}

uint64_t sub_1BE06F530()
{
  return MEMORY[0x1F40F8F58]();
}

uint64_t sub_1BE06F540()
{
  return MEMORY[0x1F40F8F60]();
}

uint64_t sub_1BE06F550()
{
  return MEMORY[0x1F40F9000]();
}

uint64_t sub_1BE06F560()
{
  return MEMORY[0x1F40F9090]();
}

uint64_t sub_1BE06F570()
{
  return MEMORY[0x1F40F9140]();
}

uint64_t sub_1BE06F580()
{
  return MEMORY[0x1F40F9158]();
}

uint64_t sub_1BE06F590()
{
  return MEMORY[0x1F40F9170]();
}

uint64_t sub_1BE06F5A0()
{
  return MEMORY[0x1F40F9288]();
}

uint64_t sub_1BE06F5B0()
{
  return MEMORY[0x1F40F9290]();
}

uint64_t sub_1BE06F5C0()
{
  return MEMORY[0x1F40F9318]();
}

uint64_t sub_1BE06F5D0()
{
  return MEMORY[0x1F40F9348]();
}

uint64_t sub_1BE06F5E0()
{
  return MEMORY[0x1F40F9358]();
}

uint64_t sub_1BE06F5F0()
{
  return MEMORY[0x1F40F9458]();
}

uint64_t sub_1BE06F600()
{
  return MEMORY[0x1F40F9478]();
}

uint64_t sub_1BE06F610()
{
  return MEMORY[0x1F40F9488]();
}

uint64_t sub_1BE06F620()
{
  return MEMORY[0x1F40F9558]();
}

uint64_t sub_1BE06F630()
{
  return MEMORY[0x1F40F9560]();
}

uint64_t sub_1BE06F640()
{
  return MEMORY[0x1F40F9578]();
}

uint64_t sub_1BE06F650()
{
  return MEMORY[0x1F40F9580]();
}

uint64_t sub_1BE06F660()
{
  return MEMORY[0x1F40F95B0]();
}

uint64_t sub_1BE06F670()
{
  return MEMORY[0x1F40F95E0]();
}

uint64_t sub_1BE06F680()
{
  return MEMORY[0x1F40F9610]();
}

uint64_t sub_1BE06F690()
{
  return MEMORY[0x1F40F9620]();
}

uint64_t sub_1BE06F6A0()
{
  return MEMORY[0x1F40F9668]();
}

uint64_t sub_1BE06F6B0()
{
  return MEMORY[0x1F40F9678]();
}

uint64_t sub_1BE06F6C0()
{
  return MEMORY[0x1F40F96C0]();
}

uint64_t sub_1BE06F6D0()
{
  return MEMORY[0x1F40F96D0]();
}

uint64_t sub_1BE06F6E0()
{
  return MEMORY[0x1F40F96F0]();
}

uint64_t sub_1BE06F6F0()
{
  return MEMORY[0x1F40F9700]();
}

uint64_t sub_1BE06F700()
{
  return MEMORY[0x1F40F9850]();
}

uint64_t sub_1BE06F710()
{
  return MEMORY[0x1F40F9858]();
}

uint64_t sub_1BE06F720()
{
  return MEMORY[0x1F40F9868]();
}

uint64_t sub_1BE06F730()
{
  return MEMORY[0x1F40F9880]();
}

uint64_t sub_1BE06F740()
{
  return MEMORY[0x1F40F98C8]();
}

uint64_t sub_1BE06F750()
{
  return MEMORY[0x1F40F9A68]();
}

uint64_t sub_1BE06F760()
{
  return MEMORY[0x1F40F9A88]();
}

uint64_t sub_1BE06F770()
{
  return MEMORY[0x1F40F9AA0]();
}

uint64_t sub_1BE06F780()
{
  return MEMORY[0x1F40F9AA8]();
}

uint64_t sub_1BE06F790()
{
  return MEMORY[0x1F40F9AC0]();
}

uint64_t sub_1BE06F7A0()
{
  return MEMORY[0x1F40F9AC8]();
}

uint64_t sub_1BE06F7B0()
{
  return MEMORY[0x1F40F9AE0]();
}

uint64_t sub_1BE06F7C0()
{
  return MEMORY[0x1F40F9B60]();
}

uint64_t sub_1BE06F7D0()
{
  return MEMORY[0x1F40F9CD0]();
}

uint64_t sub_1BE06F7E0()
{
  return MEMORY[0x1F40F9CE0]();
}

uint64_t sub_1BE06F7F0()
{
  return MEMORY[0x1F40F9D20]();
}

uint64_t sub_1BE06F800()
{
  return MEMORY[0x1F40F9D38]();
}

uint64_t sub_1BE06F810()
{
  return MEMORY[0x1F40F9E18]();
}

uint64_t sub_1BE06F820()
{
  return MEMORY[0x1F40F9E48]();
}

uint64_t sub_1BE06F830()
{
  return MEMORY[0x1F40F9E58]();
}

uint64_t sub_1BE06F840()
{
  return MEMORY[0x1F40F9E68]();
}

uint64_t sub_1BE06F860()
{
  return MEMORY[0x1F40F9E88]();
}

uint64_t sub_1BE06F870()
{
  return MEMORY[0x1F40F9EA0]();
}

uint64_t sub_1BE06F880()
{
  return MEMORY[0x1F40F9EA8]();
}

uint64_t sub_1BE06F890()
{
  return MEMORY[0x1F40F9EB8]();
}

uint64_t sub_1BE06F8A0()
{
  return MEMORY[0x1F40F9EC8]();
}

uint64_t sub_1BE06F8B0()
{
  return MEMORY[0x1F40F9ED8]();
}

uint64_t sub_1BE06F8D0()
{
  return MEMORY[0x1F40F9EF8]();
}

uint64_t sub_1BE06F8E0()
{
  return MEMORY[0x1F40F9FA0]();
}

uint64_t sub_1BE06F8F0()
{
  return MEMORY[0x1F40FA020]();
}

uint64_t sub_1BE06F900()
{
  return MEMORY[0x1F40FA030]();
}

uint64_t sub_1BE06F910()
{
  return MEMORY[0x1F40FA048]();
}

uint64_t sub_1BE06F920()
{
  return MEMORY[0x1F40FA138]();
}

uint64_t sub_1BE06F930()
{
  return MEMORY[0x1F40FA148]();
}

uint64_t sub_1BE06F940()
{
  return MEMORY[0x1F40FA1A0]();
}

uint64_t sub_1BE06F950()
{
  return MEMORY[0x1F40FA1E0]();
}

uint64_t sub_1BE06F960()
{
  return MEMORY[0x1F40FA228]();
}

uint64_t sub_1BE06F970()
{
  return MEMORY[0x1F40FA238]();
}

uint64_t sub_1BE06F980()
{
  return MEMORY[0x1F40FA2E8]();
}

uint64_t sub_1BE06F990()
{
  return MEMORY[0x1F40FA3B0]();
}

uint64_t sub_1BE06F9A0()
{
  return MEMORY[0x1F40FA858]();
}

uint64_t sub_1BE06F9B0()
{
  return MEMORY[0x1F40FA888]();
}

uint64_t sub_1BE06F9C0()
{
  return MEMORY[0x1F40FAAB0]();
}

uint64_t sub_1BE06F9D0()
{
  return MEMORY[0x1F40FAAB8]();
}

uint64_t sub_1BE06F9E0()
{
  return MEMORY[0x1F40FAAF8]();
}

uint64_t sub_1BE06F9F0()
{
  return MEMORY[0x1F40FAB10]();
}

uint64_t sub_1BE06FA00()
{
  return MEMORY[0x1F40FAB20]();
}

uint64_t sub_1BE06FA20()
{
  return MEMORY[0x1F40FAB40]();
}

uint64_t sub_1BE06FA30()
{
  return MEMORY[0x1F40FAB50]();
}

uint64_t sub_1BE06FA40()
{
  return MEMORY[0x1F40FAB60]();
}

uint64_t sub_1BE06FA60()
{
  return MEMORY[0x1F40FAB78]();
}

uint64_t sub_1BE06FA70()
{
  return MEMORY[0x1F40FACF8]();
}

uint64_t sub_1BE06FA80()
{
  return MEMORY[0x1F40FAD70]();
}

uint64_t sub_1BE06FA90()
{
  return MEMORY[0x1F40FAD80]();
}

uint64_t sub_1BE06FAA0()
{
  return MEMORY[0x1F40FAD90]();
}

uint64_t sub_1BE06FAB0()
{
  return MEMORY[0x1F40FADA0]();
}

uint64_t sub_1BE06FAC0()
{
  return MEMORY[0x1F40FADB0]();
}

uint64_t sub_1BE06FAD0()
{
  return MEMORY[0x1F40FADD0]();
}

uint64_t sub_1BE06FAE0()
{
  return MEMORY[0x1F40FADE8]();
}

uint64_t sub_1BE06FAF0()
{
  return MEMORY[0x1F40FADF0]();
}

uint64_t sub_1BE06FB00()
{
  return MEMORY[0x1F40FAE20]();
}

uint64_t sub_1BE06FB10()
{
  return MEMORY[0x1F40FAE48]();
}

uint64_t sub_1BE06FB20()
{
  return MEMORY[0x1F40FAE50]();
}

uint64_t sub_1BE06FB30()
{
  return MEMORY[0x1F40FAE70]();
}

uint64_t sub_1BE06FB40()
{
  return MEMORY[0x1F40FAEF8]();
}

uint64_t sub_1BE06FB50()
{
  return MEMORY[0x1F40FAF68]();
}

uint64_t sub_1BE06FB60()
{
  return MEMORY[0x1F40FAF88]();
}

uint64_t sub_1BE06FB70()
{
  return MEMORY[0x1F40FAFF8]();
}

uint64_t sub_1BE06FB80()
{
  return MEMORY[0x1F40FB030]();
}

uint64_t sub_1BE06FB90()
{
  return MEMORY[0x1F40FB058]();
}

uint64_t sub_1BE06FBA0()
{
  return MEMORY[0x1F40FB070]();
}

uint64_t sub_1BE06FBB0()
{
  return MEMORY[0x1F40FB080]();
}

uint64_t sub_1BE06FBC0()
{
  return MEMORY[0x1F40FB0B0]();
}

uint64_t sub_1BE06FBD0()
{
  return MEMORY[0x1F40FB0C0]();
}

uint64_t sub_1BE06FBE0()
{
  return MEMORY[0x1F40FB0E0]();
}

uint64_t sub_1BE06FBF0()
{
  return MEMORY[0x1F40FB100]();
}

uint64_t sub_1BE06FC00()
{
  return MEMORY[0x1F40FB128]();
}

uint64_t sub_1BE06FC10()
{
  return MEMORY[0x1F40FB150]();
}

uint64_t sub_1BE06FC20()
{
  return MEMORY[0x1F40FB178]();
}

uint64_t sub_1BE06FC30()
{
  return MEMORY[0x1F40FB190]();
}

uint64_t sub_1BE06FC40()
{
  return MEMORY[0x1F40FB1B8]();
}

uint64_t sub_1BE06FC50()
{
  return MEMORY[0x1F40FB1E8]();
}

uint64_t sub_1BE06FC60()
{
  return MEMORY[0x1F40FB278]();
}

uint64_t sub_1BE06FC70()
{
  return MEMORY[0x1F40FB298]();
}

uint64_t sub_1BE06FC80()
{
  return MEMORY[0x1F40FB2C8]();
}

uint64_t sub_1BE06FC90()
{
  return MEMORY[0x1F40FB318]();
}

uint64_t sub_1BE06FCA0()
{
  return MEMORY[0x1F40FB328]();
}

uint64_t sub_1BE06FCB0()
{
  return MEMORY[0x1F40FB338]();
}

uint64_t sub_1BE06FCC0()
{
  return MEMORY[0x1F40FB358]();
}

uint64_t sub_1BE06FCD0()
{
  return MEMORY[0x1F40FB3A8]();
}

uint64_t sub_1BE06FCE0()
{
  return MEMORY[0x1F40FB3B8]();
}

uint64_t sub_1BE06FCF0()
{
  return MEMORY[0x1F40FB430]();
}

uint64_t sub_1BE06FD00()
{
  return MEMORY[0x1F40FB448]();
}

uint64_t sub_1BE06FD10()
{
  return MEMORY[0x1F40FB458]();
}

uint64_t sub_1BE06FD20()
{
  return MEMORY[0x1F40FB550]();
}

uint64_t sub_1BE06FD30()
{
  return MEMORY[0x1F40FB588]();
}

uint64_t sub_1BE06FD40()
{
  return MEMORY[0x1F41040E0]();
}

uint64_t sub_1BE06FD50()
{
  return MEMORY[0x1F40FB5C8]();
}

uint64_t sub_1BE06FD60()
{
  return MEMORY[0x1F40FB5E0]();
}

uint64_t sub_1BE06FD70()
{
  return MEMORY[0x1F40FB620]();
}

uint64_t sub_1BE06FD80()
{
  return MEMORY[0x1F40FB6A8]();
}

uint64_t sub_1BE06FD90()
{
  return MEMORY[0x1F40FB6D0]();
}

uint64_t sub_1BE06FDA0()
{
  return MEMORY[0x1F40FB708]();
}

uint64_t sub_1BE06FDB0()
{
  return MEMORY[0x1F40FB7F0]();
}

uint64_t sub_1BE06FDC0()
{
  return MEMORY[0x1F40FB838]();
}

uint64_t sub_1BE06FDD0()
{
  return MEMORY[0x1F40FB848]();
}

uint64_t sub_1BE06FDE0()
{
  return MEMORY[0x1F40FB8E0]();
}

uint64_t sub_1BE06FDF0()
{
  return MEMORY[0x1F40FB928]();
}

uint64_t sub_1BE06FE00()
{
  return MEMORY[0x1F40FB988]();
}

uint64_t sub_1BE06FE10()
{
  return MEMORY[0x1F40FB9A8]();
}

uint64_t sub_1BE06FE20()
{
  return MEMORY[0x1F40FBA00]();
}

uint64_t sub_1BE06FE30()
{
  return MEMORY[0x1F40FBAB0]();
}

uint64_t sub_1BE06FE40()
{
  return MEMORY[0x1F40FBB88]();
}

uint64_t sub_1BE06FE50()
{
  return MEMORY[0x1F40FBCC0]();
}

uint64_t sub_1BE06FE60()
{
  return MEMORY[0x1F40FBD18]();
}

uint64_t sub_1BE06FE70()
{
  return MEMORY[0x1F40FBD58]();
}

uint64_t sub_1BE06FE80()
{
  return MEMORY[0x1F40FBDC8]();
}

uint64_t sub_1BE06FE90()
{
  return MEMORY[0x1F40FBE60]();
}

uint64_t sub_1BE06FEA0()
{
  return MEMORY[0x1F40FBE78]();
}

uint64_t sub_1BE06FEB0()
{
  return MEMORY[0x1F40FBF68]();
}

uint64_t sub_1BE06FEC0()
{
  return MEMORY[0x1F40FBF90]();
}

uint64_t sub_1BE06FED0()
{
  return MEMORY[0x1F40FC020]();
}

uint64_t sub_1BE06FEE0()
{
  return MEMORY[0x1F40FC030]();
}

uint64_t sub_1BE06FEF0()
{
  return MEMORY[0x1F40FC0B8]();
}

uint64_t sub_1BE06FF00()
{
  return MEMORY[0x1F40FC0F8]();
}

uint64_t sub_1BE06FF10()
{
  return MEMORY[0x1F40FC110]();
}

uint64_t sub_1BE06FF20()
{
  return MEMORY[0x1F40FC160]();
}

uint64_t sub_1BE06FF30()
{
  return MEMORY[0x1F40FC1A8]();
}

uint64_t sub_1BE06FF40()
{
  return MEMORY[0x1F40FC1C8]();
}

uint64_t sub_1BE06FF50()
{
  return MEMORY[0x1F40FC210]();
}

uint64_t sub_1BE06FF60()
{
  return MEMORY[0x1F40FC2D0]();
}

uint64_t sub_1BE06FF70()
{
  return MEMORY[0x1F40FC308]();
}

uint64_t sub_1BE06FF80()
{
  return MEMORY[0x1F40FC330]();
}

uint64_t sub_1BE06FF90()
{
  return MEMORY[0x1F40FC358]();
}

uint64_t sub_1BE06FFA0()
{
  return MEMORY[0x1F40FC378]();
}

uint64_t sub_1BE06FFB0()
{
  return MEMORY[0x1F40FC390]();
}

uint64_t sub_1BE06FFC0()
{
  return MEMORY[0x1F40FC3B0]();
}

uint64_t sub_1BE06FFD0()
{
  return MEMORY[0x1F40FC3C8]();
}

uint64_t sub_1BE06FFE0()
{
  return MEMORY[0x1F40FC3D8]();
}

uint64_t sub_1BE06FFF0()
{
  return MEMORY[0x1F40FC3F0]();
}

uint64_t sub_1BE070010()
{
  return MEMORY[0x1F40FC448]();
}

uint64_t sub_1BE070020()
{
  return MEMORY[0x1F40FC4A0]();
}

uint64_t sub_1BE070030()
{
  return MEMORY[0x1F40FC4B0]();
}

uint64_t sub_1BE070040()
{
  return MEMORY[0x1F40FC4E0]();
}

uint64_t sub_1BE070050()
{
  return MEMORY[0x1F40FC528]();
}

uint64_t sub_1BE070060()
{
  return MEMORY[0x1F40FC558]();
}

uint64_t sub_1BE070070()
{
  return MEMORY[0x1F40FC560]();
}

uint64_t sub_1BE070080()
{
  return MEMORY[0x1F40FC5E0]();
}

uint64_t sub_1BE070090()
{
  return MEMORY[0x1F40FC618]();
}

uint64_t sub_1BE0700C0()
{
  return MEMORY[0x1F40FC6A8]();
}

uint64_t sub_1BE0700E0()
{
  return MEMORY[0x1F40FC6C0]();
}

uint64_t sub_1BE070100()
{
  return MEMORY[0x1F40FC6E8]();
}

uint64_t sub_1BE070110()
{
  return MEMORY[0x1F40FC6F8]();
}

uint64_t sub_1BE070120()
{
  return MEMORY[0x1F40FC710]();
}

uint64_t sub_1BE070130()
{
  return MEMORY[0x1F40FC720]();
}

uint64_t sub_1BE070140()
{
  return MEMORY[0x1F40FC748]();
}

uint64_t sub_1BE070150()
{
  return MEMORY[0x1F40FC758]();
}

uint64_t sub_1BE070160()
{
  return MEMORY[0x1F40FC788]();
}

uint64_t sub_1BE070170()
{
  return MEMORY[0x1F40FC798]();
}

uint64_t sub_1BE070180()
{
  return MEMORY[0x1F40FC7C0]();
}

uint64_t sub_1BE070190()
{
  return MEMORY[0x1F40FC7D8]();
}

uint64_t sub_1BE0701A0()
{
  return MEMORY[0x1F40FC848]();
}

uint64_t sub_1BE0701B0()
{
  return MEMORY[0x1F40FC890]();
}

uint64_t sub_1BE0701C0()
{
  return MEMORY[0x1F40FC898]();
}

uint64_t sub_1BE0701D0()
{
  return MEMORY[0x1F40FC8C0]();
}

uint64_t sub_1BE0701E0()
{
  return MEMORY[0x1F40FC8D0]();
}

uint64_t sub_1BE0701F0()
{
  return MEMORY[0x1F40FC8F0]();
}

uint64_t sub_1BE070200()
{
  return MEMORY[0x1F40FC908]();
}

uint64_t sub_1BE070210()
{
  return MEMORY[0x1F40FC918]();
}

uint64_t sub_1BE070220()
{
  return MEMORY[0x1F40FC928]();
}

uint64_t sub_1BE070230()
{
  return MEMORY[0x1F40FC938]();
}

uint64_t sub_1BE070240()
{
  return MEMORY[0x1F40FC990]();
}

uint64_t sub_1BE070250()
{
  return MEMORY[0x1F40FC9A8]();
}

uint64_t sub_1BE070260()
{
  return MEMORY[0x1F40FC9C0]();
}

uint64_t sub_1BE070270()
{
  return MEMORY[0x1F40FC9C8]();
}

uint64_t sub_1BE070280()
{
  return MEMORY[0x1F40FCA10]();
}

uint64_t sub_1BE070290()
{
  return MEMORY[0x1F40FCA28]();
}

uint64_t sub_1BE0702A0()
{
  return MEMORY[0x1F40FCA40]();
}

uint64_t sub_1BE0702B0()
{
  return MEMORY[0x1F40FCA50]();
}

uint64_t sub_1BE0702C0()
{
  return MEMORY[0x1F40FCA90]();
}

uint64_t sub_1BE0702D0()
{
  return MEMORY[0x1F40FCAA8]();
}

uint64_t sub_1BE0702E0()
{
  return MEMORY[0x1F40FCAC0]();
}

uint64_t sub_1BE0702F0()
{
  return MEMORY[0x1F40FCAC8]();
}

uint64_t sub_1BE070300()
{
  return MEMORY[0x1F40FCC00]();
}

uint64_t sub_1BE070310()
{
  return MEMORY[0x1F40FCC28]();
}

uint64_t sub_1BE070320()
{
  return MEMORY[0x1F40FCC38]();
}

uint64_t sub_1BE070330()
{
  return MEMORY[0x1F40FCC48]();
}

uint64_t sub_1BE070340()
{
  return MEMORY[0x1F40FCC58]();
}

uint64_t sub_1BE070350()
{
  return MEMORY[0x1F40FCD38]();
}

uint64_t sub_1BE070360()
{
  return MEMORY[0x1F40FCD50]();
}

uint64_t sub_1BE070370()
{
  return MEMORY[0x1F40FCE10]();
}

uint64_t sub_1BE070380()
{
  return MEMORY[0x1F40FCE20]();
}

uint64_t sub_1BE070390()
{
  return MEMORY[0x1F40FCE50]();
}

uint64_t sub_1BE0703A0()
{
  return MEMORY[0x1F40FCE68]();
}

uint64_t sub_1BE0703B0()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_1BE0703C0()
{
  return MEMORY[0x1F4186CE0]();
}

uint64_t sub_1BE0703D0()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1BE0703E0()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1BE0703F0()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1BE070400()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1BE070410()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1BE070420()
{
  return MEMORY[0x1F4183720]();
}

uint64_t sub_1BE070430()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1BE070440()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1BE070450()
{
  return MEMORY[0x1F40E60A8]();
}

uint64_t sub_1BE070460()
{
  return MEMORY[0x1F40E60F0]();
}

uint64_t sub_1BE070470()
{
  return MEMORY[0x1F40E6110]();
}

uint64_t sub_1BE070480()
{
  return MEMORY[0x1F40E6128]();
}

uint64_t sub_1BE070490()
{
  return MEMORY[0x1F40E6130]();
}

uint64_t sub_1BE0704A0()
{
  return MEMORY[0x1F40E6148]();
}

uint64_t sub_1BE0704B0()
{
  return MEMORY[0x1F40E6158]();
}

uint64_t sub_1BE0704C0()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1BE0704D0()
{
  return MEMORY[0x1F40E61A0]();
}

uint64_t sub_1BE0704E0()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_1BE0704F0()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_1BE070500()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1BE070510()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_1BE070520()
{
  return MEMORY[0x1F40E62B0]();
}

uint64_t sub_1BE070530()
{
  return MEMORY[0x1F40E62C8]();
}

uint64_t sub_1BE070540()
{
  return MEMORY[0x1F40E62E8]();
}

uint64_t sub_1BE070550()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1BE070560()
{
  return MEMORY[0x1F4183898]();
}

uint64_t sub_1BE070570()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_1BE070580()
{
  return MEMORY[0x1F4183958]();
}

uint64_t sub_1BE070590()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1BE0705A0()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1BE0705B0()
{
  return MEMORY[0x1F4183A00]();
}

uint64_t sub_1BE0705C0()
{
  return MEMORY[0x1F4183A10]();
}

uint64_t sub_1BE0705D0()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1BE0705F0()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1BE070600()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t sub_1BE070610()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_1BE070630()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t sub_1BE070640()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_1BE070650()
{
  return MEMORY[0x1F4183B30]();
}

uint64_t sub_1BE070660()
{
  return MEMORY[0x1F4183B90]();
}

uint64_t sub_1BE070670()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_1BE070680()
{
  return MEMORY[0x1F4183C88]();
}

uint64_t sub_1BE070690()
{
  return MEMORY[0x1F4183D80]();
}

uint64_t sub_1BE0706A0()
{
  return MEMORY[0x1F4183D98]();
}

uint64_t sub_1BE0706B0()
{
  return MEMORY[0x1F4183DA0]();
}

uint64_t sub_1BE0706C0()
{
  return MEMORY[0x1F4183DF8]();
}

uint64_t sub_1BE0706D0()
{
  return MEMORY[0x1F4183E10]();
}

uint64_t sub_1BE0706E0()
{
  return MEMORY[0x1F4183E18]();
}

uint64_t sub_1BE0706F0()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_1BE070700()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1BE070710()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1BE070720()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1BE070730()
{
  return MEMORY[0x1F4183EA8]();
}

uint64_t sub_1BE070740()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_1BE070750()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1BE070760()
{
  return MEMORY[0x1F4183F18]();
}

uint64_t sub_1BE070770()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_1BE070780()
{
  return MEMORY[0x1F4183F40]();
}

uint64_t sub_1BE070790()
{
  return MEMORY[0x1F4183F78]();
}

uint64_t sub_1BE0707A0()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1BE0707B0()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1BE0707C0()
{
  return MEMORY[0x1F4187C98]();
}

uint64_t sub_1BE0707D0()
{
  return MEMORY[0x1F4187CA0]();
}

uint64_t sub_1BE0707E0()
{
  return MEMORY[0x1F4187CB0]();
}

uint64_t sub_1BE0707F0()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_1BE070800()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_1BE070810()
{
  return MEMORY[0x1F4184048]();
}

uint64_t sub_1BE070820()
{
  return MEMORY[0x1F40E6430]();
}

uint64_t sub_1BE070830()
{
  return MEMORY[0x1F40E6458]();
}

uint64_t sub_1BE070840()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1BE070850()
{
  return MEMORY[0x1F41841D0]();
}

uint64_t sub_1BE070860()
{
  return MEMORY[0x1F40E64A0]();
}

uint64_t sub_1BE070870()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_1BE070880()
{
  return MEMORY[0x1F4184330]();
}

uint64_t sub_1BE070890()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_1BE0708A0()
{
  return MEMORY[0x1F4184340]();
}

uint64_t sub_1BE0708B0()
{
  return MEMORY[0x1F41843D0]();
}

uint64_t sub_1BE0708C0()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_1BE0708D0()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_1BE0708E0()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1BE0708F0()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1BE070900()
{
  return MEMORY[0x1F4119140]();
}

uint64_t sub_1BE070910()
{
  return MEMORY[0x1F41870B8]();
}

uint64_t sub_1BE070920()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_1BE070930()
{
  return MEMORY[0x1F4187110]();
}

uint64_t sub_1BE070940()
{
  return MEMORY[0x1F40E6740]();
}

uint64_t sub_1BE070950()
{
  return MEMORY[0x1F40E6798]();
}

uint64_t sub_1BE070960()
{
  return MEMORY[0x1F40E67A0]();
}

uint64_t sub_1BE070970()
{
  return MEMORY[0x1F40FCF30]();
}

uint64_t sub_1BE070980()
{
  return MEMORY[0x1F41874A8]();
}

uint64_t sub_1BE070990()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_1BE0709A0()
{
  return MEMORY[0x1F41874D0]();
}

uint64_t sub_1BE0709B0()
{
  return MEMORY[0x1F40E6978]();
}

uint64_t sub_1BE0709C0()
{
  return MEMORY[0x1F40E6A98]();
}

uint64_t sub_1BE0709D0()
{
  return MEMORY[0x1F4188728]();
}

uint64_t sub_1BE0709E0()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1BE0709F0()
{
  return MEMORY[0x1F4184650]();
}

uint64_t sub_1BE070A00()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1BE070A10()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1BE070A20()
{
  return MEMORY[0x1F40E6C30]();
}

uint64_t sub_1BE070A30()
{
  return MEMORY[0x1F40E6C50]();
}

uint64_t sub_1BE070A40()
{
  return MEMORY[0x1F40E6C68]();
}

uint64_t sub_1BE070A50()
{
  return MEMORY[0x1F40E6C98]();
}

uint64_t sub_1BE070A60()
{
  return MEMORY[0x1F40E6CA0]();
}

uint64_t sub_1BE070A70()
{
  return MEMORY[0x1F40E6D38]();
}

uint64_t sub_1BE070A80()
{
  return MEMORY[0x1F40E6D88]();
}

uint64_t sub_1BE070A90()
{
  return MEMORY[0x1F4184A40]();
}

uint64_t sub_1BE070AA0()
{
  return MEMORY[0x1F4184A60]();
}

uint64_t sub_1BE070AB0()
{
  return MEMORY[0x1F4184A78]();
}

uint64_t sub_1BE070AC0()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1BE070AD0()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_1BE070AE0()
{
  return MEMORY[0x1F4184B60]();
}

uint64_t sub_1BE070AF0()
{
  return MEMORY[0x1F4184B90]();
}

uint64_t sub_1BE070B00()
{
  return MEMORY[0x1F4184BA8]();
}

uint64_t sub_1BE070B10()
{
  return MEMORY[0x1F4184BC0]();
}

uint64_t sub_1BE070B20()
{
  return MEMORY[0x1F4184C18]();
}

uint64_t sub_1BE070B30()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1BE070B40()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1BE070B50()
{
  return MEMORY[0x1F4184CA0]();
}

uint64_t sub_1BE070B60()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_1BE070B70()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1BE070B80()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1BE070B90()
{
  return MEMORY[0x1F4184D10]();
}

uint64_t sub_1BE070BA0()
{
  return MEMORY[0x1F4184D70]();
}

uint64_t sub_1BE070BB0()
{
  return MEMORY[0x1F4184D78]();
}

uint64_t sub_1BE070BC0()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1BE070BD0()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_1BE070BE0()
{
  return MEMORY[0x1F4184DB0]();
}

uint64_t sub_1BE070BF0()
{
  return MEMORY[0x1F4184DD0]();
}

uint64_t sub_1BE070C00()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t sub_1BE070C10()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1BE070C20()
{
  return MEMORY[0x1F4184EA8]();
}

uint64_t sub_1BE070C30()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_1BE070C40()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_1BE070C50()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_1BE070C60()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_1BE070C70()
{
  return MEMORY[0x1F4185048]();
}

uint64_t sub_1BE070C80()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1BE070C90()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1BE070CA0()
{
  return MEMORY[0x1F41852B0]();
}

uint64_t sub_1BE070CB0()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1BE070CC0()
{
  return MEMORY[0x1F4185358]();
}

uint64_t sub_1BE070CD0()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1BE070CE0()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1BE070CF0()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1BE070D00()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1BE070D20()
{
  return MEMORY[0x1F41854C8]();
}

uint64_t sub_1BE070D30()
{
  return MEMORY[0x1F41854D8]();
}

uint64_t sub_1BE070D40()
{
  return MEMORY[0x1F41854E0]();
}

uint64_t sub_1BE070D50()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_1BE070D60()
{
  return MEMORY[0x1F4185500]();
}

uint64_t sub_1BE070D70()
{
  return MEMORY[0x1F4185508]();
}

uint64_t sub_1BE070D80()
{
  return MEMORY[0x1F4185518]();
}

uint64_t sub_1BE070D90()
{
  return MEMORY[0x1F4185520]();
}

uint64_t sub_1BE070DA0()
{
  return MEMORY[0x1F4185528]();
}

uint64_t sub_1BE070DB0()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_1BE070DC0()
{
  return MEMORY[0x1F4185570]();
}

uint64_t sub_1BE070DD0()
{
  return MEMORY[0x1F4185578]();
}

uint64_t sub_1BE070DE0()
{
  return MEMORY[0x1F4185588]();
}

uint64_t sub_1BE070DF0()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_1BE070E00()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t sub_1BE070E10()
{
  return MEMORY[0x1F41855F0]();
}

uint64_t sub_1BE070E20()
{
  return MEMORY[0x1F4185608]();
}

uint64_t sub_1BE070E30()
{
  return MEMORY[0x1F4185628]();
}

uint64_t sub_1BE070E40()
{
  return MEMORY[0x1F4185638]();
}

uint64_t sub_1BE070E50()
{
  return MEMORY[0x1F4185658]();
}

uint64_t sub_1BE070E60()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_1BE070E70()
{
  return MEMORY[0x1F4185698]();
}

uint64_t sub_1BE070E80()
{
  return MEMORY[0x1F41856A0]();
}

uint64_t sub_1BE070E90()
{
  return MEMORY[0x1F41856B0]();
}

uint64_t sub_1BE070EA0()
{
  return MEMORY[0x1F41856B8]();
}

uint64_t sub_1BE070EB0()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_1BE070EC0()
{
  return MEMORY[0x1F4185710]();
}

uint64_t sub_1BE070ED0()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1BE070EE0()
{
  return MEMORY[0x1F41859E8]();
}

uint64_t sub_1BE070EF0()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1BE070F00()
{
  return MEMORY[0x1F4185A88]();
}

uint64_t sub_1BE070F10()
{
  return MEMORY[0x1F4185B20]();
}

uint64_t sub_1BE070F20()
{
  return MEMORY[0x1F4185B90]();
}

uint64_t sub_1BE070F30()
{
  return MEMORY[0x1F4185B98]();
}

uint64_t sub_1BE070F40()
{
  return MEMORY[0x1F4185D40]();
}

uint64_t sub_1BE070F50()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1BE070F60()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1BE070F70()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1BE070F80()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1BE070F90()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1BE070FA0()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1BE070FB0()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1BE070FC0()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1BE070FD0()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_1BE070FE0()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_1BE070FF0()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1BE071000()
{
  return MEMORY[0x1F4185FB8]();
}

uint64_t sub_1BE071010()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_1BE071020()
{
  return MEMORY[0x1F4185FE0]();
}

uint64_t sub_1BE071030()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_1BE071040()
{
  return MEMORY[0x1F4186100]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  MEMORY[0x1F40D70A8]();
  return result;
}

CFIndex CFArrayBSearchValues(CFArrayRef theArray, CFRange range, const void *value, CFComparatorFunction comparator, void *context)
{
  return MEMORY[0x1F40D7158](theArray, range.location, range.length, value, comparator, context);
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x1F40D72D8](arg);
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1F40D7430](BOOLean);
}

CFCharacterSetRef CFCharacterSetCreateInvertedSet(CFAllocatorRef alloc, CFCharacterSetRef theSet)
{
  return (CFCharacterSetRef)MEMORY[0x1F40D7710](alloc, theSet);
}

CFCharacterSetRef CFCharacterSetGetPredefined(CFCharacterSetPredefinedSet theSetIdentifier)
{
  return (CFCharacterSetRef)MEMORY[0x1F40D7740](theSetIdentifier);
}

CFComparisonResult CFDateCompare(CFDateRef theDate, CFDateRef otherDate, void *context)
{
  return MEMORY[0x1F40D7888](theDate, otherDate, context);
}

CFTypeRef CFDateFormatterCopyProperty(CFDateFormatterRef formatter, CFDateFormatterKey key)
{
  return (CFTypeRef)MEMORY[0x1F40D78A8](formatter, key);
}

CFDateFormatterRef CFDateFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFDateFormatterStyle dateStyle, CFDateFormatterStyle timeStyle)
{
  return (CFDateFormatterRef)MEMORY[0x1F40D78B0](allocator, locale, dateStyle, timeStyle);
}

CFStringRef CFDateFormatterCreateDateFormatFromTemplate(CFAllocatorRef allocator, CFStringRef tmplate, CFOptionFlags options, CFLocaleRef locale)
{
  return (CFStringRef)MEMORY[0x1F40D78B8](allocator, tmplate, options, locale);
}

CFStringRef CFDateFormatterCreateStringWithAbsoluteTime(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFAbsoluteTime at)
{
  return (CFStringRef)MEMORY[0x1F40D78D8](allocator, formatter, at);
}

CFStringRef CFDateFormatterCreateStringWithDate(CFAllocatorRef allocator, CFDateFormatterRef formatter, CFDateRef date)
{
  return (CFStringRef)MEMORY[0x1F40D78E0](allocator, formatter, date);
}

CFStringRef CFDateFormatterGetFormat(CFDateFormatterRef formatter)
{
  return (CFStringRef)MEMORY[0x1F40D78F8](formatter);
}

CFLocaleRef CFDateFormatterGetLocale(CFDateFormatterRef formatter)
{
  return (CFLocaleRef)MEMORY[0x1F40D7900](formatter);
}

void CFDateFormatterSetFormat(CFDateFormatterRef formatter, CFStringRef formatString)
{
}

void CFDateFormatterSetProperty(CFDateFormatterRef formatter, CFStringRef key, CFTypeRef value)
{
}

CFAbsoluteTime CFDateGetAbsoluteTime(CFDateRef theDate)
{
  MEMORY[0x1F40D7928](theDate);
  return result;
}

CFLocaleRef CFLocaleCopyCurrent(void)
{
  return (CFLocaleRef)MEMORY[0x1F40D7BB8]();
}

CFLocaleIdentifier CFLocaleGetIdentifier(CFLocaleRef locale)
{
  return (CFLocaleIdentifier)MEMORY[0x1F40D7C20](locale);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1F40D7D08]();
}

CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1F40D7D20]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return (CFNumberRef)MEMORY[0x1F40D7D80](allocator, theType, valuePtr);
}

CFNumberFormatterRef CFNumberFormatterCreate(CFAllocatorRef allocator, CFLocaleRef locale, CFNumberFormatterStyle style)
{
  return (CFNumberFormatterRef)MEMORY[0x1F40D7D98](allocator, locale, style);
}

CFStringRef CFNumberFormatterCreateStringWithNumber(CFAllocatorRef allocator, CFNumberFormatterRef formatter, CFNumberRef number)
{
  return (CFStringRef)MEMORY[0x1F40D7DA8](allocator, formatter, number);
}

uint64_t CFPhoneNumberCreate()
{
  return MEMORY[0x1F4114220]();
}

uint64_t CFPhoneNumberCreateString()
{
  return MEMORY[0x1F4114228]();
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x1F40D7ED0](key, applicationID, userName, hostName);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1F40D8048](cf);
}

CFRange CFStringFind(CFStringRef theString, CFStringRef stringToFind, CFStringCompareFlags compareOptions)
{
  CFIndex v3 = MEMORY[0x1F40D84C8](theString, stringToFind, compareOptions);
  result.length = v4;
  result.location = v3;
  return result;
}

Boolean CFStringFindCharacterFromSet(CFStringRef theString, CFCharacterSetRef theSet, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result)
{
  return MEMORY[0x1F40D84D8](theString, theSet, rangeToSearch.location, rangeToSearch.length, searchOptions, result);
}

Boolean CFStringFindWithOptions(CFStringRef theString, CFStringRef stringToFind, CFRange rangeToSearch, CFStringCompareFlags searchOptions, CFRange *result)
{
  return MEMORY[0x1F40D84E0](theString, stringToFind, rangeToSearch.location, rangeToSearch.length, searchOptions, result);
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return MEMORY[0x1F40D8578](theString);
}

Boolean CFStringHasPrefix(CFStringRef theString, CFStringRef prefix)
{
  return MEMORY[0x1F40D8600](theString, prefix);
}

Boolean CFStringHasSuffix(CFStringRef theString, CFStringRef suffix)
{
  return MEMORY[0x1F40D8608](theString, suffix);
}

CFTimeZoneRef CFTimeZoneCopySystem(void)
{
  return (CFTimeZoneRef)MEMORY[0x1F40D86F8]();
}

CFTimeZoneRef CFTimeZoneCreateWithName(CFAllocatorRef allocator, CFStringRef name, Boolean tryAbbrev)
{
  return (CFTimeZoneRef)MEMORY[0x1F40D8700](allocator, name, tryAbbrev);
}

CFStringRef CFTimeZoneGetName(CFTimeZoneRef tz)
{
  return (CFStringRef)MEMORY[0x1F40D8710](tz);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1F40D9808](data, width, height, bitsPerComponent, bytesPerRow, space, *(void *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x1F40D9818](context);
}

CGFloat CGColorGetAlpha(CGColorRef color)
{
  MEMORY[0x1F40D99F0](color);
  return result;
}

CGColorRef CGColorRetain(CGColorRef color)
{
  return (CGColorRef)MEMORY[0x1F40D9A60](color);
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9B60](name);
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextAddRect(CGContextRef c, CGRect rect)
{
}

void CGContextBeginPath(CGContextRef c)
{
}

void CGContextClip(CGContextRef c)
{
}

void CGContextClosePath(CGContextRef c)
{
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
}

void CGContextEOClip(CGContextRef c)
{
}

void CGContextFillEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextFillPath(CGContextRef c)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextFlush(CGContextRef c)
{
}

void CGContextRelease(CGContextRef c)
{
}

void CGContextResetClip(CGContextRef c)
{
}

void CGContextScaleCTM(CGContextRef c, CGFloat sx, CGFloat sy)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetShadow(CGContextRef c, CGSize offset, CGFloat blur)
{
}

void CGContextSetShadowWithColor(CGContextRef c, CGSize offset, CGFloat blur, CGColorRef color)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextStrokeEllipseInRect(CGContextRef c, CGRect rect)
{
}

void CGContextStrokeLineSegments(CGContextRef c, const CGPoint *points, size_t count)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
}

CGGradientRef CGGradientCreateWithColors(CGColorSpaceRef space, CFArrayRef colors, const CGFloat *locations)
{
  return (CGGradientRef)MEMORY[0x1F40DA778](space, colors, locations);
}

void CGGradientRelease(CGGradientRef gradient)
{
}

CGPathRef CGPathCreateWithRoundedRect(CGRect rect, CGFloat cornerWidth, CGFloat cornerHeight, const CGAffineTransform *transform)
{
  return (CGPathRef)MEMORY[0x1F40DB0B0](transform, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, cornerWidth, cornerHeight);
}

void CGPathRelease(CGPathRef path)
{
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB248]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x1F40DB250]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  MEMORY[0x1F40DB268]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x1F40DB270]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  MEMORY[0x1F40DB280]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  MEMORY[0x1F40DB288]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x1F40DB298]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x1F40DB2A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x1F40DB2A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x1F40DB2B8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

BOOL CGRectIsNull(CGRect rect)
{
  return MEMORY[0x1F40DB2E8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

uint64_t CPDateFormatStringForFormatType()
{
  return MEMORY[0x1F41092E0]();
}

CTFontDescriptorRef CTFontCopyFontDescriptor(CTFontRef font)
{
  return (CTFontDescriptorRef)MEMORY[0x1F40DF2B8](font);
}

uint64_t CTFontCopySystemUIFontExcessiveLineHeightCharacterSet()
{
  return MEMORY[0x1F40DF300]();
}

uint64_t CTFontCreateCopyOfSystemUIFontWithGrade()
{
  return MEMORY[0x1F40DF330]();
}

CTFontRef CTFontCreateWithNameAndOptions(CFStringRef name, CGFloat size, const CGAffineTransform *matrix, CTFontOptions options)
{
  return (CTFontRef)MEMORY[0x1F40DF398](name, matrix, options, size);
}

uint64_t CTFontGetLanguageAwareOutsets()
{
  return MEMORY[0x1F40DF518]();
}

CGFloat CTFontGetSize(CTFontRef font)
{
  MEMORY[0x1F40DF558](font);
  return result;
}

CTFramesetterRef CTFramesetterCreateWithAttributedString(CFAttributedStringRef attrString)
{
  return (CTFramesetterRef)MEMORY[0x1F40DF6E8](attrString);
}

CGSize CTFramesetterSuggestFrameSizeWithConstraints(CTFramesetterRef framesetter, CFRange stringRange, CFDictionaryRef frameAttributes, CGSize constraints, CFRange *fitRange)
{
  MEMORY[0x1F40DF700](framesetter, stringRange.location, stringRange.length, frameAttributes, fitRange, (__n128)constraints, *(__n128 *)&constraints.height);
  result.height = v6;
  result.width = v5;
  return result;
}

uint64_t CalAbsoluteTimeAddGregorianUnits()
{
  return MEMORY[0x1F410F1F8]();
}

uint64_t CalAbsoluteTimeGetGregorianDate()
{
  return MEMORY[0x1F410F220]();
}

uint64_t CalAlarmCopyDefaultAllDayAlarmOffset()
{
  return MEMORY[0x1F410DF38]();
}

uint64_t CalAlarmCopyDefaultTimedAlarmOffset()
{
  return MEMORY[0x1F410DF48]();
}

uint64_t CalAlarmSetDefaultAllDayAlarmOffset()
{
  return MEMORY[0x1F410DFA0]();
}

uint64_t CalAlarmSetDefaultTimedAlarmOffset()
{
  return MEMORY[0x1F410DFA8]();
}

uint64_t CalCopyCalendar()
{
  return MEMORY[0x1F410F2A0]();
}

uint64_t CalCopySystemTimeZone()
{
  return MEMORY[0x1F410F2B0]();
}

uint64_t CalCopyTimeZone()
{
  return MEMORY[0x1F410F2B8]();
}

uint64_t CalDateTimeGetGregorianDate()
{
  return MEMORY[0x1F410F2C8]();
}

uint64_t CalEqualObjects()
{
  return MEMORY[0x1F410F2E0]();
}

uint64_t CalEqualStrings()
{
  return MEMORY[0x1F410F2E8]();
}

uint64_t CalEventOccurrenceCacheCopyBoundsForTimeZone()
{
  return MEMORY[0x1F410E928]();
}

uint64_t CalGetRGBAFromString()
{
  return MEMORY[0x1F410F300]();
}

uint64_t CalGregorianDateGetAbsoluteTime()
{
  return MEMORY[0x1F410F318]();
}

uint64_t CalGregorianDateGetAbsoluteTimeWithFallbackToDefaultTimeZone()
{
  return MEMORY[0x1F410F320]();
}

uint64_t CalSetSystemTimeZone()
{
  return MEMORY[0x1F410F378]();
}

uint64_t CalTimeZoneCopyCFTimeZone()
{
  return MEMORY[0x1F410F388]();
}

uint64_t CurrentLocaleExpectsMultipleFamilyNames()
{
  return MEMORY[0x1F410F398]();
}

uint64_t CurrentLocaleExpectsSurnameFirst()
{
  return MEMORY[0x1F410F3A0]();
}

uint64_t EKDateComponentsGetDate()
{
  return MEMORY[0x1F410F3B8]();
}

uint64_t EKWeakLinkClass()
{
  return MEMORY[0x1F410F400]();
}

uint64_t EKWeakLinkStringConstant()
{
  return MEMORY[0x1F410F408]();
}

uint64_t EKWeakLinkSymbol()
{
  return MEMORY[0x1F410F410]();
}

uint64_t ICSRedactString()
{
  return MEMORY[0x1F4177BE0]();
}

MKCoordinateRegion MKCoordinateRegionMakeWithDistance(CLLocationCoordinate2D centerCoordinate, CLLocationDistance latitudinalMeters, CLLocationDistance longitudinalMeters)
{
  MEMORY[0x1F40ECE20]((__n128)centerCoordinate, *(__n128 *)&centerCoordinate.longitude, latitudinalMeters, longitudinalMeters);
  result.span.longitudeDelta = v6;
  result.span.latitudeDelta = v5;
  result.center.longitude = v4;
  result.center.latitude = v3;
  return result;
}

void NSLog(NSString *format, ...)
{
}

uint64_t NSRequestConcreteImplementation()
{
  return MEMORY[0x1F40E7228]();
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1F40E7258](aSelectorName);
}

NSString *__cdecl NSStringFromCGRect(CGRect rect)
{
  return (NSString *)MEMORY[0x1F4166AA8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1F40E7280](aClass);
}

uint64_t PNCopyBestGuessCountryCodeForNumber()
{
  return MEMORY[0x1F4114238]();
}

uint64_t PNCopyBestGuessNormalizedNumberForCountry()
{
  return MEMORY[0x1F4114240]();
}

BOOL UIContentSizeCategoryIsAccessibilityCategory(UIContentSizeCategory category)
{
  return MEMORY[0x1F4166BA0](category);
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x1F4166C48]();
}

uint64_t UIRoundToViewScale()
{
  return MEMORY[0x1F4166EC8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

uint64_t _bitmaskContainsOption()
{
  return MEMORY[0x1F40E0810]();
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1F40C9FB0]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1F415B160]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x1F40CA3C0](*(void *)&__upper_bound);
}

void bzero(void *a1, size_t a2)
{
}

BOOL class_addProtocol(Class cls, Protocol *protocol)
{
  return MEMORY[0x1F41814D8](cls, protocol);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1F40CBA60](identifier, flags);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1F40CBA88]();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBAC0](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBA8](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBB8](attr, *(void *)&qos_class, *(void *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1F40CBC40](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1F40CBC50](dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1F40CBD30](when, delta);
}

uint64_t doURLsEmailsPhoneNumbersMatch()
{
  return MEMORY[0x1F410F430]();
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1F40CCB98](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1F40CCCE8](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1F40CD028](*(void *)&token);
}

uint32_t notify_check(int token, int *check)
{
  return MEMORY[0x1F40CD038](*(void *)&token, check);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x1F40CD058](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1F40CD060](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1F4181680](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1F4181718](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1F4181728](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1F4181748](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1F4181758](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1F4181780](location);
}

void objc_moveWeak(id *to, id *from)
{
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1F41817C0]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1F41817C8]();
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1F41818D0](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1F4181A18](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1F4181A28](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1F4181A30](obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181A40](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1F40CD550](log);
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

int pthread_mutex_destroy(pthread_mutex_t *a1)
{
  return MEMORY[0x1F40CDA78](a1);
}

int pthread_mutex_init(pthread_mutex_t *a1, const pthread_mutexattr_t *a2)
{
  return MEMORY[0x1F40CDA80](a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x1F40CDA88](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x1F40CDA98](a1);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1F40CE1C8](__s);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1F41863D0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1F4186460]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1F41864C0]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_dynamicCastTypeToObjCProtocolConditional()
{
  return MEMORY[0x1F4186500]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1F4186538]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1F41865A8]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1F4186618]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x1F4186630]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1F4186648]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1F4186658]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1F4186668]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1F4186670]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1F41866A0]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1F4186710]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1F4186730]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1F41867F8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1F4186840]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}

const char *__cdecl u_errorName(UErrorCode code)
{
  return (const char *)MEMORY[0x1F417F728](*(void *)&code);
}

uint64_t ubidi_close()
{
  return MEMORY[0x1F417F970]();
}

uint64_t ubidi_getParaLevel()
{
  return MEMORY[0x1F417F9A8]();
}

uint64_t ubidi_openSized()
{
  return MEMORY[0x1F417F9D8]();
}

uint64_t ubidi_setPara()
{
  return MEMORY[0x1F417F9F8]();
}

uint64_t udat_getSymbols()
{
  return MEMORY[0x1F417FEC8]();
}

uint64_t udat_open()
{
  return MEMORY[0x1F417FED8]();
}