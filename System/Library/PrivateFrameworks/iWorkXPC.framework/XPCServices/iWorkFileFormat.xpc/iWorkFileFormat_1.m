void sub_1000C71D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  uint64_t v42;

  if (*(char *)(v42 - 73) < 0) {
    operator delete(*(void **)(v42 - 96));
  }
  if (a42 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddWarning(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, const std::string::value_type *a5)
{
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    v9 = *(void (**)(void))(*(void *)v8 + 24);
    v9();
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 3674);
    v10 = google::protobuf::internal::LogMessage::operator<<(v16, (const std::string::value_type *)(a1 + 56));
    v11 = google::protobuf::internal::LogMessage::operator<<(v10, " ");
    v12 = google::protobuf::internal::LogMessage::operator<<(v11, a2);
    v13 = google::protobuf::internal::LogMessage::operator<<(v12, ": ");
    v14 = google::protobuf::internal::LogMessage::operator<<(v13, a5);
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v14->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
}

void sub_1000C73A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::DescriptorBuilder::IsInPackage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000BB974(__s1, *(uint64_t **)(a2 + 8), (const char *)a3);
  sub_1000BB974(&__s2, (uint64_t *)a3, v5);
  if ((uint64_t)__s1[1] < (uint64_t)__n || memcmp(__s1[0], __s2, __n)) {
    return 0;
  }
  v7 = *(uint64_t **)(a2 + 8);
  if (*((char *)v7 + 23) < 0) {
    uint64_t v8 = v7[1];
  }
  else {
    uint64_t v8 = *((unsigned __int8 *)v7 + 23);
  }
  if (*(char *)(a3 + 23) < 0) {
    uint64_t v9 = *(void *)(a3 + 8);
  }
  else {
    uint64_t v9 = *(unsigned __int8 *)(a3 + 23);
  }
  if (v8 == v9) {
    return 1;
  }
  if ((*((unsigned char *)v7 + 23) & 0x80) != 0) {
    v7 = (uint64_t *)*v7;
  }
  return *((unsigned char *)v7 + v9) == 46;
}

uint64_t **google::protobuf::DescriptorBuilder::RecordPublicDependencies(uint64_t **this, const google::protobuf::FileDescriptor *a2)
{
  v6 = a2;
  if (a2)
  {
    v2 = (google::protobuf::DescriptorBuilder *)this;
    this = (uint64_t **)sub_1000DD540(this + 12, (unint64_t *)&v6, (uint64_t *)&v6);
    if (v3)
    {
      this = (uint64_t **)v6;
      if (v6)
      {
        uint64_t v4 = 0;
        do
        {
          if (v4 >= *((int *)this + 9)) {
            break;
          }
          v5 = (const google::protobuf::FileDescriptor *)google::protobuf::FileDescriptor::dependency((google::protobuf::FileDescriptor *)this, *((_DWORD *)this[11] + v4));
          google::protobuf::DescriptorBuilder::RecordPublicDependencies(v2, v5);
          ++v4;
          this = (uint64_t **)v6;
        }
        while (v6);
      }
    }
  }
  return this;
}

unint64_t google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(void *a1, uint64_t a2, uint64_t *a3, int a4)
{
  if (*a1 == a2)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = *(std::mutex **)a2;
    if (*(void *)a2)
    {
      std::mutex::lock(*(std::mutex **)a2);
      char v9 = 0;
      goto LABEL_6;
    }
  }
  char v9 = 1;
LABEL_6:
  uint64_t v10 = *(void *)(a2 + 32);
  sub_1000BB974(&v23, a3, (const char *)a3);
  long long v24 = v23;
  v11 = sub_1000D7974((void *)(v10 + 304), (char **)&v24);
  if (v11)
  {
    LODWORD(v14) = *((_DWORD *)v11 + 8);
    unint64_t v13 = *((unsigned int *)v11 + 9);
    if (v14) {
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v13 = 0;
  }
  uint64_t v15 = *(void *)(a2 + 24);
  if (v15)
  {
    unint64_t SymbolNotEnforcingDepsHelper = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(a1, v15, a3, 1);
    unint64_t v13 = HIDWORD(SymbolNotEnforcingDepsHelper);
    LODWORD(v14) = SymbolNotEnforcingDepsHelper;
    if (SymbolNotEnforcingDepsHelper) {
      goto LABEL_19;
    }
  }
  else
  {
    LODWORD(v14) = 0;
  }
  if (a4)
  {
    sub_1000BB974(v22, a3, v12);
    if (google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((google::protobuf::DescriptorPool *)a2, v22[0], v22[1]))
    {
      uint64_t v18 = *(void *)(a2 + 32);
      sub_1000BB974(&v21, a3, v17);
      long long v24 = v21;
      v19 = sub_1000D7974((void *)(v18 + 304), (char **)&v24);
      if (v19) {
        unint64_t v14 = v19[4];
      }
      else {
        unint64_t v14 = 0;
      }
      unint64_t v13 = HIDWORD(v14);
      if ((v9 & 1) == 0) {
        goto LABEL_20;
      }
      return v14 | (v13 << 32);
    }
    LODWORD(v14) = 0;
  }
LABEL_19:
  if ((v9 & 1) == 0) {
LABEL_20:
  }
    std::mutex::unlock(v8);
  return v14 | (v13 << 32);
}

void sub_1000C7670(_Unwind_Exception *exception_object)
{
  if ((v2 & 1) == 0) {
    std::mutex::unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(uint64_t *a1, uint64_t *a2, int a3)
{
  v10[0] = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDepsHelper(a1, *a1, a2, a3);
  v10[1] = v4;
  unint64_t v5 = sub_1000BEC8C((uint64_t)v10);
  unint64_t v9 = v5;
  if (v5 == a1[10])
  {
LABEL_8:
    sub_1000DDE1C((uint64_t)(a1 + 15), &v9);
  }
  else
  {
    for (i = (void *)a1[13]; i; i = (void *)*i)
    {
      unint64_t v7 = i[4];
      if (v5 >= v7)
      {
        if (v7 >= v5) {
          goto LABEL_8;
        }
        ++i;
      }
    }
  }
  return v10[0];
}

uint64_t google::protobuf::DescriptorBuilder::FindSymbol(uint64_t a1, std::string *a2, int a3)
{
  uint64_t result = google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps((uint64_t *)a1, (uint64_t *)a2, a3);
  v19[0] = result;
  v19[1] = v6;
  if (result && *(unsigned char *)(*(void *)a1 + 40))
  {
    unint64_t v7 = sub_1000BEC8C((uint64_t)v19);
    uint64_t v8 = *(void *)(a1 + 80);
    if (v7 == v8) {
      return v19[0];
    }
    unint64_t v9 = v7;
    v11 = (void *)(a1 + 104);
    for (i = *(void **)(a1 + 104); i; i = (void *)*i)
    {
      unint64_t v12 = i[4];
      if (v7 >= v12)
      {
        if (v12 >= v7) {
          return v19[0];
        }
        ++i;
      }
    }
    if (LODWORD(v19[0]) == 8)
    {
      BOOL v13 = google::protobuf::DescriptorBuilder::IsInPackage(v7, v8, (uint64_t)a2);
      if (v13) {
        return v19[0];
      }
      unint64_t v14 = *(void **)(a1 + 96);
      if (v14 != v11)
      {
        do
        {
          uint64_t v15 = v14[4];
          if (v15)
          {
            LODWORD(v13) = google::protobuf::DescriptorBuilder::IsInPackage(v13, v15, (uint64_t)a2);
            if (v13) {
              return v19[0];
            }
          }
          v16 = (void *)v14[1];
          if (v16)
          {
            do
            {
              v17 = v16;
              v16 = (void *)*v16;
            }
            while (v16);
          }
          else
          {
            do
            {
              v17 = (void *)v14[2];
              BOOL v18 = *v17 == (void)v14;
              unint64_t v14 = v17;
            }
            while (!v18);
          }
          unint64_t v14 = v17;
        }
        while (v17 != v11);
      }
    }
    *(void *)(a1 + 144) = v9;
    std::string::operator=((std::string *)(a1 + 152), a2);
    return 0;
  }
  return result;
}

unint64_t google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(uint64_t a1, std::string *__str, uint64_t a3, int a4, int a5)
{
  *(void *)(a1 + 144) = 0;
  if (*(char *)(a1 + 199) < 0)
  {
    **(unsigned char **)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
  }
  else
  {
    *(unsigned char *)(a1 + 176) = 0;
    *(unsigned char *)(a1 + 199) = 0;
  }
  if ((SHIBYTE(__str->__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
  {
    uint64_t v10 = __str;
    if (!*((unsigned char *)&__str->__r_.__value_.__s + 23)) {
      goto LABEL_13;
    }
LABEL_9:
    if (v10->__r_.__value_.__s.__data_[0] == 46)
    {
      std::string::basic_string(&v24, __str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&__stra);
      uint64_t Symbol = google::protobuf::DescriptorBuilder::FindSymbol(a1, &v24, a5);
      if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v24.__r_.__value_.__l.__data_);
      }
      unsigned int v12 = Symbol;
      return Symbol & 0xFFFFFFFF00000000 | v12;
    }
    goto LABEL_13;
  }
  if (__str->__r_.__value_.__l.__size_)
  {
    uint64_t v10 = (std::string *)__str->__r_.__value_.__r.__words[0];
    goto LABEL_9;
  }
LABEL_13:
  std::string::size_type v13 = std::string::find(__str, 46, 0);
  memset(&v24, 0, sizeof(v24));
  if (v13 == -1)
  {
    std::string::operator=(&v24, __str);
  }
  else
  {
    std::string::basic_string(&__stra, __str, 0, v13, (std::allocator<char> *)&v25);
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
    std::string v24 = __stra;
  }
  if (*(char *)(a3 + 23) < 0) {
    sub_1000BB834(&__stra, *(void **)a3, *(void *)(a3 + 8));
  }
  else {
    std::string __stra = *(std::string *)a3;
  }
  while (1)
  {
    std::string::size_type v14 = std::string::rfind(&__stra, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v14 == -1)
    {
      uint64_t Symbol = google::protobuf::DescriptorBuilder::FindSymbol(a1, __str, a5);
      goto LABEL_48;
    }
    std::string::erase(&__stra, v14, 0xFFFFFFFFFFFFFFFFLL);
    std::string::size_type v15 = (__stra.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(__stra.__r_.__value_.__r.__words[2])
        : __stra.__r_.__value_.__l.__size_;
    std::string::append(&__stra, 1uLL, 46);
    v16 = (v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? &v24
        : (std::string *)v24.__r_.__value_.__r.__words[0];
    std::string::size_type v17 = (v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0
        ? HIBYTE(v24.__r_.__value_.__r.__words[2])
        : v24.__r_.__value_.__l.__size_;
    std::string::append(&__stra, (const std::string::value_type *)v16, v17);
    uint64_t v18 = google::protobuf::DescriptorBuilder::FindSymbol(a1, &__stra, a5);
    uint64_t Symbol = v18;
    if (v18) {
      break;
    }
LABEL_44:
    std::string::erase(&__stra, v15, 0xFFFFFFFFFFFFFFFFLL);
  }
  if ((v24.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v24.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v24.__r_.__value_.__l.__size_;
  }
  std::string::size_type v20 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((v20 & 0x80u) != 0) {
    std::string::size_type v20 = __str->__r_.__value_.__l.__size_;
  }
  if (v20 <= size)
  {
    if (a4 != 1 || v18 == 1) {
      goto LABEL_48;
    }
    unsigned int v12 = v18;
    if (v18 == 4) {
      goto LABEL_49;
    }
    goto LABEL_44;
  }
  if (v18 > 8 || ((1 << v18) & 0x152) == 0) {
    goto LABEL_44;
  }
  std::string::append(&__stra, __str, size, v20 - size);
  uint64_t v21 = google::protobuf::DescriptorBuilder::FindSymbol(a1, &__stra, a5);
  uint64_t Symbol = v21;
  if (!v21)
  {
    std::string::operator=((std::string *)(a1 + 176), &__stra);
    unsigned int v12 = 0;
    goto LABEL_49;
  }
LABEL_48:
  unsigned int v12 = Symbol;
LABEL_49:
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
  return Symbol & 0xFFFFFFFF00000000 | v12;
}

void sub_1000C7B60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

unint64_t google::protobuf::DescriptorBuilder::LookupSymbol(uint64_t *a1, std::string *a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  unint64_t v8 = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)a1, a2, a3, a5, a6);
  if (!v8)
  {
    uint64_t v10 = *a1;
    if (!*(unsigned char *)(v10 + 42))
    {
      unsigned int v11 = 0;
      return v8 & 0xFFFFFFFF00000000 | v11;
    }
    sub_1000BB974(v13, (uint64_t *)a2, v9);
    unint64_t v8 = google::protobuf::DescriptorPool::NewPlaceholderWithMutexHeld(v10, v13[0], (uint64_t)v13[1]);
  }
  unsigned int v11 = v8;
  return v8 & 0xFFFFFFFF00000000 | v11;
}

uint64_t google::protobuf::DescriptorPool::NewPlaceholderWithMutexHeld(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  v14[0] = a2;
  v14[1] = a3;
  if (a3)
  {
    char v3 = 0;
    uint64_t v4 = &a2[a3];
    unint64_t v5 = a2;
    do
    {
      while (1)
      {
        int v6 = *v5;
        if ((v6 & 0xFFFFFFDF) - 65 >= 0x1A && v6 != 95 && (v6 - 48) >= 0xA) {
          break;
        }
        char v3 = 0;
        if (++v5 == v4)
        {
          uint64_t v8 = *(void *)(a1 + 32);
          if (*a2 == 46)
          {
            unint64_t v9 = google::protobuf::StringPiece::substr((google::protobuf::StringPiece *)v14, 1uLL);
            uint64_t v11 = v10;
            uint64_t v12 = v8;
            a2 = (unsigned __int8 *)v9;
            a3 = v11;
          }
          else
          {
            uint64_t v12 = *(void *)(a1 + 32);
          }
          google::protobuf::DescriptorPool::Tables::AllocateString(v12, (uint64_t)a2, a3);
        }
      }
      if (v3 & 1 | (v6 != 46)) {
        break;
      }
      ++v5;
      char v3 = 1;
    }
    while (v5 != v4);
  }
  return 0;
}

void sub_1000C80D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorPool::NewPlaceholderFileWithMutexHeld(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Bytes = (_OWORD *)google::protobuf::DescriptorPool::Tables::AllocateBytes(*(google::protobuf::DescriptorPool::Tables **)(a1 + 32), 160);
  _OWORD *Bytes = 0u;
  Bytes[1] = 0u;
  Bytes[2] = 0u;
  Bytes[3] = 0u;
  Bytes[4] = 0u;
  Bytes[5] = 0u;
  Bytes[6] = 0u;
  Bytes[7] = 0u;
  Bytes[8] = 0u;
  Bytes[9] = 0u;
  google::protobuf::DescriptorPool::Tables::AllocateString(*(void *)(a1 + 32), a2, a3);
}

void sub_1000C8228()
{
}

uint64_t google::protobuf::DescriptorBuilder::AddSymbol(uint64_t a1, std::string *a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = a3;
  if (!a3) {
    uint64_t v11 = *(void *)(a1 + 80);
  }
  if (google::protobuf::DescriptorPool::Tables::AddSymbol(*(void **)(a1 + 8), (char *)a2, a6, a7))
  {
    if (google::protobuf::FileDescriptorTables::AddAliasUnderParent(*(void *)(a1 + 88), v11, a4, a6, a7)) {
      return 1;
    }
    if (!*(unsigned char *)(a1 + 48))
    {
      v19 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v56, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 4027);
      std::string::size_type v20 = google::protobuf::internal::LogMessage::operator<<(v19, "\"");
      uint64_t v21 = google::protobuf::internal::LogMessage::operator<<(v20, (const std::string::value_type *)a2);
      v22 = google::protobuf::internal::LogMessage::operator<<(v21, "\" not previously defined in symbols_by_name_, but was defined in symbols_by_parent_; this shouldn't be possible.");
      google::protobuf::internal::LogFinisher::operator=((int)&v54, (const char **)&v22->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v56);
    }
  }
  else
  {
    uint64_t v16 = *(void *)(a1 + 8);
    sub_1000BB974(&v55, (uint64_t *)a2, v14);
    long long v56 = v55;
    std::string::size_type v17 = sub_1000D7974((void *)(v16 + 304), (char **)&v56);
    if (v17) {
      long long v18 = *((_OWORD *)v17 + 2);
    }
    else {
      long long v18 = 0uLL;
    }
    long long v56 = v18;
    uint64_t v23 = sub_1000BEC8C((uint64_t)&v56);
    if (v23 == *(void *)(a1 + 80))
    {
      std::string::size_type v29 = std::string::rfind(a2, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v29 == -1)
      {
        std::operator+<char>();
        v48 = std::string::append(&v54, "\" is already defined.");
        long long v49 = *(_OWORD *)&v48->__r_.__value_.__l.__data_;
        std::string::size_type v57 = v48->__r_.__value_.__r.__words[2];
        long long v56 = v49;
        v48->__r_.__value_.__l.__size_ = 0;
        v48->__r_.__value_.__r.__words[2] = 0;
        v48->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a5, 0, (const std::string::value_type *)&v56);
        if (SHIBYTE(v57) < 0) {
          operator delete((void *)v56);
        }
        if ((SHIBYTE(v54.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return 0;
        }
        v41 = (void *)v54.__r_.__value_.__r.__words[0];
      }
      else
      {
        std::string::size_type v30 = v29;
        std::string::basic_string(&__dst, a2, v29 + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v50);
        v31 = std::string::insert(&__dst, 0, "\"");
        long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
        v52.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v52.__r_.__value_.__l.__data_ = v32;
        v31->__r_.__value_.__l.__size_ = 0;
        v31->__r_.__value_.__r.__words[2] = 0;
        v31->__r_.__value_.__r.__words[0] = 0;
        v33 = std::string::append(&v52, "\" is already defined in \"");
        long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        v53.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        std::string::basic_string(&v50, a2, 0, v30, (std::allocator<char> *)&v58);
        if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          v35 = &v50;
        }
        else {
          v35 = (std::string *)v50.__r_.__value_.__r.__words[0];
        }
        if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(v50.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = v50.__r_.__value_.__l.__size_;
        }
        v37 = std::string::append(&v53, (const std::string::value_type *)v35, size);
        long long v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
        v54.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v38;
        v37->__r_.__value_.__l.__size_ = 0;
        v37->__r_.__value_.__r.__words[2] = 0;
        v37->__r_.__value_.__r.__words[0] = 0;
        v39 = std::string::append(&v54, "\".");
        long long v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
        std::string::size_type v57 = v39->__r_.__value_.__r.__words[2];
        long long v56 = v40;
        v39->__r_.__value_.__l.__size_ = 0;
        v39->__r_.__value_.__r.__words[2] = 0;
        v39->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a5, 0, (const std::string::value_type *)&v56);
        if (SHIBYTE(v57) < 0) {
          operator delete((void *)v56);
        }
        if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v54.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v50.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v53.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v52.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v52.__r_.__value_.__l.__data_);
        }
        if ((SHIBYTE(__dst.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
          return 0;
        }
        v41 = (void *)__dst.__r_.__value_.__r.__words[0];
      }
    }
    else
    {
      uint64_t v24 = v23;
      std::operator+<char>();
      char v25 = std::string::append(&v52, "\" is already defined in file \"");
      long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
      v53.__r_.__value_.__r.__words[2] = v25->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v53.__r_.__value_.__l.__data_ = v26;
      v25->__r_.__value_.__l.__size_ = 0;
      v25->__r_.__value_.__r.__words[2] = 0;
      v25->__r_.__value_.__r.__words[0] = 0;
      if (v24)
      {
        v27 = *(long long **)v24;
        if (*(char *)(*(void *)v24 + 23) < 0)
        {
          sub_1000BB834(&__dst, *(void **)v27, *((void *)v27 + 1));
        }
        else
        {
          long long v28 = *v27;
          __dst.__r_.__value_.__r.__words[2] = *((void *)v27 + 2);
          *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v28;
        }
      }
      else
      {
        sub_1000BBA84(&__dst, "null");
      }
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_dst = &__dst;
      }
      else {
        p_dst = (std::string *)__dst.__r_.__value_.__r.__words[0];
      }
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v43 = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v43 = __dst.__r_.__value_.__l.__size_;
      }
      v44 = std::string::append(&v53, (const std::string::value_type *)p_dst, v43);
      long long v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
      v54.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v54.__r_.__value_.__l.__data_ = v45;
      v44->__r_.__value_.__l.__size_ = 0;
      v44->__r_.__value_.__r.__words[2] = 0;
      v44->__r_.__value_.__r.__words[0] = 0;
      v46 = std::string::append(&v54, "\".");
      long long v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
      std::string::size_type v57 = v46->__r_.__value_.__r.__words[2];
      long long v56 = v47;
      v46->__r_.__value_.__l.__size_ = 0;
      v46->__r_.__value_.__r.__words[2] = 0;
      v46->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a5, 0, (const std::string::value_type *)&v56);
      if (SHIBYTE(v57) < 0) {
        operator delete((void *)v56);
      }
      if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v54.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v53.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v53.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v52.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        return 0;
      }
      v41 = (void *)v52.__r_.__value_.__r.__words[0];
    }
    operator delete(v41);
  }
  return 0;
}

void sub_1000C86E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (*(char *)(v42 - 105) < 0) {
    operator delete(*(void **)(v42 - 128));
  }
  if (a42 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddPackage(uint64_t a1, std::string *a2, uint64_t a3, uint64_t a4)
{
  if (google::protobuf::DescriptorPool::Tables::AddSymbol(*(void **)(a1 + 8), (char *)a2, 8, a4))
  {
    std::string::size_type v8 = std::string::rfind(a2, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v8 != -1)
    {
      uint64_t v9 = *(void *)(a1 + 8);
      std::string::basic_string(&v28, a2, 0, v8, (std::allocator<char> *)&v25);
      sub_1000BB974(v29, (uint64_t *)&v28, v10);
      google::protobuf::DescriptorPool::Tables::AllocateString(v9, v29[0], v29[1]);
    }
    google::protobuf::DescriptorBuilder::ValidateSymbolName(a1, (unsigned __int8 *)a2, (const std::string::value_type *)a2, a3);
  }
  else
  {
    uint64_t v11 = *(void *)(a1 + 8);
    sub_1000BB974(&v26, (uint64_t *)a2, v7);
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v26;
    uint64_t v12 = sub_1000D7974((void *)(v11 + 304), &v28.__r_.__value_.__l.__data_);
    if (v12)
    {
      long long v27 = *((_OWORD *)v12 + 2);
      if (v27 == 8) {
        return;
      }
    }
    else
    {
      long long v27 = 0uLL;
    }
    std::operator+<char>();
    std::string::size_type v13 = std::string::append(&v23, "\" is already defined (as something other than a package) in file \"");
    long long v14 = *(_OWORD *)&v13->__r_.__value_.__l.__data_;
    v24.__r_.__value_.__r.__words[2] = v13->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v24.__r_.__value_.__l.__data_ = v14;
    v13->__r_.__value_.__l.__size_ = 0;
    v13->__r_.__value_.__r.__words[2] = 0;
    v13->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v15 = (const std::string::value_type ***)sub_1000BEC8C((uint64_t)&v27);
    int v16 = *((char *)*v15 + 23);
    if (v16 >= 0) {
      std::string::size_type v17 = (const std::string::value_type *)*v15;
    }
    else {
      std::string::size_type v17 = **v15;
    }
    if (v16 >= 0) {
      std::string::size_type v18 = *((unsigned __int8 *)*v15 + 23);
    }
    else {
      std::string::size_type v18 = (std::string::size_type)(*v15)[1];
    }
    v19 = std::string::append(&v24, v17, v18);
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    v25.__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v25.__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    uint64_t v21 = std::string::append(&v25, "\".");
    long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
    v28.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v28.__r_.__value_.__l.__data_ = v22;
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, (const std::string::value_type *)a2, a3, 0, (const std::string::value_type *)&v28);
    if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v28.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v25.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v23.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1000C8AB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (*(char *)(v28 - 73) < 0) {
    operator delete(*(void **)(v28 - 96));
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateSymbolName(uint64_t a1, unsigned __int8 *a2, const std::string::value_type *a3, uint64_t a4)
{
  if ((char)a2[23] < 0)
  {
    uint64_t v7 = *((void *)a2 + 1);
    if (v7)
    {
      std::string::size_type v8 = *(unsigned __int8 **)a2;
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v7 = a2[23];
    if (a2[23])
    {
      std::string::size_type v8 = a2;
      do
      {
LABEL_6:
        int v9 = *v8;
        if ((v9 & 0xFFFFFFDF) - 91 <= 0xFFFFFFE5 && v9 != 95 && (v9 - 58) <= 0xFFFFFFF5)
        {
          std::operator+<char>();
          uint64_t v11 = std::string::append(&v13, "\" is not a valid identifier.");
          long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
          std::string::size_type v15 = v11->__r_.__value_.__r.__words[2];
          *(_OWORD *)__p = v12;
          v11->__r_.__value_.__l.__size_ = 0;
          v11->__r_.__value_.__r.__words[2] = 0;
          v11->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, (const std::string::value_type *)__p);
          if (SHIBYTE(v15) < 0) {
            operator delete(__p[0]);
          }
          if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v13.__r_.__value_.__l.__data_);
          }
        }
        ++v8;
        --v7;
      }
      while (v7);
      return;
    }
  }
  google::protobuf::DescriptorBuilder::AddError(a1, a3, a4, 0, "Missing name.");
}

void sub_1000C8C90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateOptions(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileOptions *a2, google::protobuf::FileDescriptor *a3)
{
  std::string::size_type v15 = 0;
  uint64_t v4 = sub_1000DD508((uint64_t)&v15, 1uLL);
  *uint64_t v4 = 8;
  std::string v13 = v4;
  std::string::size_type v15 = &v4[v5];
  long long v14 = v4 + 1;
  int v6 = (const void **)*((void *)a3 + 1);
  if (*((char *)v6 + 23) >= 0) {
    size_t v7 = *((unsigned __int8 *)v6 + 23);
  }
  else {
    size_t v7 = (size_t)v6[1];
  }
  std::string::size_type v8 = v11;
  sub_1000BB8EC((uint64_t)v11, v7 + 6);
  if (v12 < 0) {
    std::string::size_type v8 = (void **)v11[0];
  }
  if (v7)
  {
    if (*((char *)v6 + 23) >= 0) {
      int v9 = v6;
    }
    else {
      int v9 = *v6;
    }
    memmove(v8, v9, v7);
  }
  strcpy((char *)v8 + v7, ".dummy");
  sub_1000BBA84(&__p, "google.protobuf.FileOptions");
  sub_1000C8E88();
}

void sub_1000C8E38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a22) {
    operator delete(a22);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000C8E88()
{
}

void sub_1000C912C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void google::protobuf::DescriptorBuilder::AddRecursiveImportError(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2, int a3)
{
  sub_1000BBA84(&v21, "File recursively imports itself: ");
  uint64_t v6 = **((void **)this + 1);
  if (0xAAAAAAAAAAAAAAABLL * ((*(void *)(*((void *)this + 1) + 8) - v6) >> 3) > a3)
  {
    uint64_t v7 = 24 * a3;
    unint64_t v8 = a3;
    do
    {
      uint64_t v9 = v6 + v7;
      int v10 = *(char *)(v9 + 23);
      if (v10 >= 0) {
        uint64_t v11 = (const std::string::value_type *)v9;
      }
      else {
        uint64_t v11 = *(const std::string::value_type **)v9;
      }
      if (v10 >= 0) {
        std::string::size_type v12 = *(unsigned __int8 *)(v9 + 23);
      }
      else {
        std::string::size_type v12 = *(void *)(v9 + 8);
      }
      std::string::append(&v21, v11, v12);
      std::string::append(&v21, " -> ");
      ++v8;
      uint64_t v6 = **((void **)this + 1);
      v7 += 24;
    }
    while (0xAAAAAAAAAAAAAAABLL * ((*(void *)(*((void *)this + 1) + 8) - v6) >> 3) > v8);
  }
  unint64_t v13 = *((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL;
  int v14 = *(char *)(v13 + 23);
  if (v14 >= 0) {
    std::string::size_type v15 = (const std::string::value_type *)(*((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL);
  }
  else {
    std::string::size_type v15 = *(const std::string::value_type **)v13;
  }
  if (v14 >= 0) {
    std::string::size_type v16 = *(unsigned __int8 *)(v13 + 23);
  }
  else {
    std::string::size_type v16 = *(void *)(v13 + 8);
  }
  std::string::append(&v21, v15, v16);
  uint64_t v17 = **((void **)this + 1);
  unint64_t v18 = 0xAAAAAAAAAAAAAAABLL * ((*(void *)(*((void *)this + 1) + 8) - v17) >> 3) - 1;
  v19 = (const std::string::value_type *)(v17 + 24 * (a3 + 1));
  if (v18 <= a3) {
    long long v20 = (const std::string::value_type *)(*((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL);
  }
  else {
    long long v20 = v19;
  }
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v20, (uint64_t)a2, 9, (const std::string::value_type *)&v21);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
}

void sub_1000C92F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddTwiceListedError(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2, int a3)
{
  uint64_t v5 = *(const std::string::value_type **)(*((void *)a2 + 5) + 8 * a3 + 8);
  std::operator+<char>();
  uint64_t v6 = std::string::append(&v8, "\" was listed twice.");
  long long v7 = *(_OWORD *)&v6->__r_.__value_.__l.__data_;
  std::string::size_type v10 = v6->__r_.__value_.__r.__words[2];
  *(_OWORD *)__p = v7;
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v5, (uint64_t)a2, 9, (const std::string::value_type *)__p);
  if (SHIBYTE(v10) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v8.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v8.__r_.__value_.__l.__data_);
  }
}

void sub_1000C93C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddImportError(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2, int a3)
{
  long long v11 = 0uLL;
  __p = 0;
  uint64_t v5 = a3;
  if (*(void *)(*(void *)this + 8))
  {
    std::operator+<char>();
    uint64_t v6 = std::string::append(&v9, "\" was not found or had errors.");
  }
  else
  {
    std::operator+<char>();
    uint64_t v6 = std::string::append(&v9, "\" has not been loaded.");
  }
  long long v7 = (void *)v6->__r_.__value_.__r.__words[0];
  v12[0] = v6->__r_.__value_.__l.__size_;
  *(void *)((char *)v12 + 7) = *(std::string::size_type *)((char *)&v6->__r_.__value_.__r.__words[1] + 7);
  char v8 = HIBYTE(v6->__r_.__value_.__r.__words[2]);
  v6->__r_.__value_.__l.__size_ = 0;
  v6->__r_.__value_.__r.__words[2] = 0;
  v6->__r_.__value_.__r.__words[0] = 0;
  *(void *)((char *)&v11 + 7) = *(void *)((char *)v12 + 7);
  __p = v7;
  *(void *)&long long v11 = v12[0];
  HIBYTE(v11) = v8;
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *(const std::string::value_type **)(*((void *)a2 + 5) + 8 * v5 + 8), (uint64_t)a2, 9, (const std::string::value_type *)&__p);
  if (SHIBYTE(v11) < 0) {
    operator delete(__p);
  }
}

void sub_1000C9540(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::BuildFileImpl(google::protobuf::DescriptorPool::Tables **this, const google::protobuf::FileDescriptorProto *a2)
{
  uint64_t Bytes = google::protobuf::DescriptorPool::Tables::AllocateBytes(this[1], 160);
  this[10] = (google::protobuf::DescriptorPool::Tables *)Bytes;
  *(_WORD *)(Bytes + 64) = 0;
  if ((*((unsigned char *)a2 + 16) & 0x10) == 0)
  {
    *(void *)(Bytes + 152) = google::protobuf::SourceCodeInfo::default_instance((google::protobuf::SourceCodeInfo *)Bytes);
    google::protobuf::DescriptorPool::Tables::AllocateFileTables(this[1]);
  }
  sub_1000CA848();
}

void sub_1000CA650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,uint64_t a41,uint64_t a42,void *a43,uint64_t a44,uint64_t a45,void *a46,uint64_t a47,uint64_t a48,void *a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,void *__p)
{
}

void sub_1000CA848()
{
}

void sub_1000CA94C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBA8C((void **)va);
  _Unwind_Resume(a1);
}

BOOL sub_1000CA980(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (*((char *)a1 + 23) < 0)
  {
    if (v4 == a1[1])
    {
      if (v4 == -1) {
        goto LABEL_10;
      }
      a1 = (void *)*a1;
      return memcmp(a1, __s, v4) == 0;
    }
  }
  else if (v4 == *((unsigned __int8 *)a1 + 23))
  {
    if (v4 == -1) {
LABEL_10:
    }
      sub_1000D97B8();
    return memcmp(a1, __s, v4) == 0;
  }
  return 0;
}

void google::protobuf::DescriptorBuilder::BuildMessage(google::protobuf::DescriptorBuilder *this, const google::protobuf::DescriptorProto *a2, const google::protobuf::Descriptor *a3, google::protobuf::Descriptor *a4)
{
  if (a3) {
    size_t v4 = (uint64_t *)((char *)a3 + 8);
  }
  else {
    size_t v4 = (uint64_t *)(*((void *)this + 10) + 8);
  }
  google::protobuf::DescriptorBuilder::AllocateNameString((uint64_t)this, *v4, (uint64_t *)(*((void *)a2 + 27) & 0xFFFFFFFFFFFFFFFELL));
}

void sub_1000CBA24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (*(char *)(v33 - 121) < 0) {
    operator delete(*(void **)(v33 - 144));
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::BuildEnum(google::protobuf::DescriptorBuilder *this, const google::protobuf::EnumDescriptorProto *a2, const google::protobuf::Descriptor *a3, google::protobuf::EnumDescriptor *a4)
{
  if (a3) {
    size_t v4 = (uint64_t *)((char *)a3 + 8);
  }
  else {
    size_t v4 = (uint64_t *)(*((void *)this + 10) + 8);
  }
  google::protobuf::DescriptorBuilder::AllocateNameString((uint64_t)this, *v4, (uint64_t *)(*((void *)a2 + 12) & 0xFFFFFFFFFFFFFFFELL));
}

void sub_1000CC38C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (*(char *)(v29 - 121) < 0) {
    operator delete(*(void **)(v29 - 144));
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::BuildService(uint64_t a1, uint64_t a2)
{
}

void sub_1000CC568(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CrossLinkFile(google::protobuf::DescriptorPool::Tables **this, google::protobuf::FileDescriptor *a2, const google::protobuf::FileDescriptorProto *a3)
{
  uint64_t v5 = this;
  if (!*((void *)a2 + 17))
  {
    this = (google::protobuf::DescriptorPool::Tables **)google::protobuf::FileOptions::default_instance((google::protobuf::FileOptions *)this);
    *((void *)a2 + 17) = this;
  }
  if (*((int *)a2 + 11) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkMessage(v5, (google::protobuf::Descriptor *)(*((void *)a2 + 13) + v6), *(const google::protobuf::DescriptorProto **)(*((void *)a3 + 8) + 8 * v7++ + 8));
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 11));
  }
  if (*((int *)a2 + 14) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkField(v5, (google::protobuf::FieldDescriptor *)(*((void *)a2 + 16) + v8), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 17) + 8 * v9++ + 8));
      v8 += 152;
    }
    while (v9 < *((int *)a2 + 14));
  }
  if (*((int *)a2 + 12) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      this = (google::protobuf::DescriptorPool::Tables **)google::protobuf::DescriptorBuilder::CrossLinkEnum((google::protobuf::EnumOptions *)this, (google::protobuf::EnumDescriptor *)(*((void *)a2 + 14)+ v10), a3);
      ++v11;
      v10 += 80;
    }
    while (v11 < *((int *)a2 + 12));
  }
  if (*((int *)a2 + 13) >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkService((google::protobuf::DescriptorBuilder *)v5, (google::protobuf::ServiceDescriptor *)(*((void *)a2 + 15) + v12), *(const google::protobuf::ServiceDescriptorProto **)(*((void *)a3 + 14) + 8 * v13++ + 8));
      v12 += 48;
    }
    while (v13 < *((int *)a2 + 13));
  }
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::UpdateSourceCodeInfo(google::protobuf::DescriptorBuilder::OptionInterpreter *this, google::protobuf::SourceCodeInfo *a2)
{
  if (!*((void *)this + 5)) {
    return;
  }
  char v2 = a2;
  uint64_t v67 = 0;
  *(void *)v68 = 0;
  v69 = 0;
  __p = 0;
  v65 = 0;
  v66 = 0;
  if (!*((_DWORD *)a2 + 6)) {
    goto LABEL_86;
  }
  char v3 = 0;
  char v4 = 0;
  v60 = (google::protobuf::SourceCodeInfo *)((char *)a2 + 16);
  uint64_t v5 = *((void *)a2 + 4);
  if (v5) {
    uint64_t v6 = (std::string **)(v5 + 8);
  }
  else {
    uint64_t v6 = 0;
  }
  v62 = (char *)this + 32;
  v63 = (char *)this + 24;
  do
  {
    uint64_t v7 = (char *)__p;
    if (v4)
    {
      unint64_t v8 = (v65 - (unsigned char *)__p) >> 2;
      if (v8 <= SLODWORD((*v6)[1].__r_.__value_.__l.__data_))
      {
        if (v65 == __p)
        {
LABEL_55:
          char v4 = 1;
          goto LABEL_74;
        }
        std::string::size_type size = (int *)(*v6)[1].__r_.__value_.__l.__size_;
        if (v8 <= 1) {
          unint64_t v8 = 1;
        }
        long long v40 = (int *)__p;
        while (1)
        {
          int v42 = *size++;
          int v41 = v42;
          int v43 = *v40++;
          if (v41 != v43) {
            break;
          }
          if (!--v8) {
            goto LABEL_55;
          }
        }
      }
    }
    v65 = (char *)__p;
    uint64_t v9 = *v6;
    if (SLODWORD((*v6)[1].__r_.__value_.__l.__data_) >= 1)
    {
      uint64_t v10 = 0;
      do
      {
        int v11 = *(_DWORD *)(v9[1].__r_.__value_.__l.__size_ + 4 * v10);
        if (v7 >= v66)
        {
          uint64_t v13 = (char *)__p;
          uint64_t v14 = (v7 - (unsigned char *)__p) >> 2;
          unint64_t v15 = v14 + 1;
          if ((unint64_t)(v14 + 1) >> 62) {
            sub_100078F84();
          }
          uint64_t v16 = v66 - (unsigned char *)__p;
          if ((v66 - (unsigned char *)__p) >> 1 > v15) {
            unint64_t v15 = v16 >> 1;
          }
          if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFFCLL) {
            unint64_t v17 = 0x3FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v17 = v15;
          }
          if (v17)
          {
            unint64_t v18 = (char *)sub_1000DD508((uint64_t)&v66, v17);
            uint64_t v13 = (char *)__p;
            uint64_t v7 = v65;
          }
          else
          {
            unint64_t v18 = 0;
          }
          v19 = &v18[4 * v14];
          *(_DWORD *)v19 = v11;
          uint64_t v12 = v19 + 4;
          while (v7 != v13)
          {
            int v20 = *((_DWORD *)v7 - 1);
            v7 -= 4;
            *((_DWORD *)v19 - 1) = v20;
            v19 -= 4;
          }
          __p = v19;
          v65 = v12;
          v66 = &v18[4 * v17];
          if (v13) {
            operator delete(v13);
          }
        }
        else
        {
          *(_DWORD *)uint64_t v7 = v11;
          uint64_t v12 = v7 + 4;
        }
        v65 = v12;
        ++v10;
        uint64_t v9 = *v6;
        uint64_t v7 = v12;
      }
      while (v10 < SLODWORD((*v6)[1].__r_.__value_.__l.__data_));
    }
    std::string v21 = (char *)sub_1000E0F00((uint64_t)v63, (int **)&__p);
    if (v62 == v21)
    {
      if ((v3 & 1) == 0)
      {
        char v4 = 0;
        char v3 = 0;
        goto LABEL_74;
      }
      long long v26 = *v6;
      long long v27 = v69;
      if (v69)
      {
        uint64_t v28 = v68[0];
        int v29 = *v69;
        if (v68[0] < *v69)
        {
          ++v68[0];
          std::string::size_type v30 = *(std::string **)&v69[2 * v28 + 2];
LABEL_73:
          google::protobuf::SourceCodeInfo_Location::CopyFrom(v30, v26);
          char v4 = 0;
          char v3 = 1;
          goto LABEL_74;
        }
        if (v29 != v68[1])
        {
LABEL_72:
          _DWORD *v27 = v29 + 1;
          std::string::size_type v30 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v67);
          uint64_t v49 = v68[0]++;
          *(void *)&v69[2 * v49 + 2] = v30;
          goto LABEL_73;
        }
      }
      else
      {
        int v29 = v68[1];
      }
      google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)&v67, v29 + 1);
      long long v27 = v69;
      int v29 = *v69;
      goto LABEL_72;
    }
    if ((v3 & 1) == 0)
    {
      google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)&v67, *((_DWORD *)v2 + 6));
      uint64_t v31 = *((void *)v2 + 4);
      if (v31) {
        long long v32 = (std::string **)(v31 + 8);
      }
      else {
        long long v32 = 0;
      }
      while (1)
      {
        if (v32 == v6) {
          goto LABEL_30;
        }
        uint64_t v33 = *v32;
        long long v34 = v69;
        if (!v69) {
          break;
        }
        uint64_t v35 = v68[0];
        int v36 = *v69;
        if (v68[0] < *v69)
        {
          ++v68[0];
          v37 = *(std::string **)&v69[2 * v35 + 2];
          goto LABEL_48;
        }
        if (v36 == v68[1]) {
          goto LABEL_46;
        }
LABEL_47:
        *long long v34 = v36 + 1;
        v37 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v67);
        uint64_t v38 = v68[0]++;
        *(void *)&v69[2 * v38 + 2] = v37;
LABEL_48:
        google::protobuf::SourceCodeInfo_Location::CopyFrom(v37, v33);
        ++v32;
      }
      int v36 = v68[1];
LABEL_46:
      google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)&v67, v36 + 1);
      long long v34 = v69;
      int v36 = *v69;
      goto LABEL_47;
    }
LABEL_30:
    long long v22 = v69;
    if (!v69)
    {
      int v24 = v68[1];
LABEL_58:
      google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)&v67, v24 + 1);
      long long v22 = v69;
      int v24 = *v69;
      goto LABEL_59;
    }
    uint64_t v23 = v68[0];
    int v24 = *v69;
    if (v68[0] < *v69)
    {
      ++v68[0];
      uint64_t v25 = *(void *)&v69[2 * v23 + 2];
      goto LABEL_60;
    }
    if (v24 == v68[1]) {
      goto LABEL_58;
    }
LABEL_59:
    _DWORD *v22 = v24 + 1;
    uint64_t v25 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v67);
    uint64_t v44 = v68[0]++;
    *(void *)&v69[2 * v44 + 2] = v25;
LABEL_60:
    google::protobuf::SourceCodeInfo_Location::CopyFrom((std::string *)v25, *v6);
    *(_DWORD *)(v25 + 24) = 0;
    v46 = (int *)*((void *)v21 + 7);
    long long v45 = (int *)*((void *)v21 + 8);
    if (v46 == v45)
    {
      char v4 = 1;
      char v3 = 1;
    }
    else
    {
      unsigned int v47 = 0;
      do
      {
        int v48 = *v46;
        if (v47 == *(_DWORD *)(v25 + 28))
        {
          google::protobuf::RepeatedField<int>::Reserve((unsigned int *)(v25 + 24), v47 + 1);
          *(_DWORD *)(*(void *)(v25 + 32) + 4 * v47) = v48;
          long long v45 = (int *)*((void *)v21 + 8);
        }
        else
        {
          *(_DWORD *)(*(void *)(v25 + 32) + 4 * v47) = v48;
        }
        *(_DWORD *)(v25 + 24) = ++v47;
        ++v46;
      }
      while (v46 != v45);
      char v4 = 1;
      char v3 = 1;
      char v2 = a2;
    }
LABEL_74:
    ++v6;
    uint64_t v50 = *((void *)v2 + 4);
    if (v50) {
      uint64_t v51 = v50 + 8;
    }
    else {
      uint64_t v51 = 0;
    }
    uint64_t v52 = *((int *)v2 + 6);
  }
  while (v6 != (std::string **)(v51 + 8 * v52));
  if (((v60 != (google::protobuf::internal::RepeatedPtrFieldBase *)&v67) & v3) != 0)
  {
    uint64_t v53 = *((unsigned int *)v2 + 6);
    if ((int)v52 >= 1)
    {
      std::string v54 = (google::protobuf::SourceCodeInfo_Location **)(v50 + 8);
      do
      {
        google::protobuf::SourceCodeInfo_Location::Clear(*v54++);
        --v53;
      }
      while (v53);
      char v2 = a2;
      *((_DWORD *)a2 + 6) = 0;
    }
    unsigned int v55 = v68[0];
    if (v68[0])
    {
      long long v56 = (const google::protobuf::SourceCodeInfo_Location **)v69;
      std::string::size_type v57 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(v60, v68[0]);
      sub_1000E0FE4((std::string *)v60, (std::string **)v57, v56 + 1, v55, **((_DWORD **)v2 + 4) - *((_DWORD *)v2 + 6));
      signed int v58 = *((_DWORD *)v2 + 6) + v55;
      *((_DWORD *)v2 + 6) = v58;
      v59 = (signed int *)*((void *)v2 + 4);
      if (*v59 < v58) {
        signed int *v59 = v58;
      }
    }
  }
LABEL_86:
  if (__p)
  {
    v65 = (char *)__p;
    operator delete(__p);
  }
  sub_1000E0E80(&v67);
}

void sub_1000CCC10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  sub_1000E0E80(&a16);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateFileOptions(std::once_flag::_State_type *this, google::protobuf::FileDescriptor *a2, const google::protobuf::FileDescriptorProto *a3)
{
  if (*((int *)a2 + 11) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateMessageOptions(this, (google::protobuf::Descriptor *)(*((void *)a2 + 13) + v6), *(const google::protobuf::DescriptorProto **)(*((void *)a3 + 8) + 8 * v7++ + 8));
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 11));
  }
  if (*((int *)a2 + 12) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateEnumOptions((google::protobuf::DescriptorBuilder *)this, (google::protobuf::EnumDescriptor *)(*((void *)a2 + 14) + v8), *(const google::protobuf::EnumDescriptorProto **)(*((void *)a3 + 11) + 8 * v9++ + 8));
      v8 += 80;
    }
    while (v9 < *((int *)a2 + 12));
  }
  if (*((int *)a2 + 13) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateServiceOptions((google::protobuf::FileOptions *)this, *((void *)a2 + 15) + v10, *(void *)(*((void *)a3 + 14) + 8 * v11++ + 8));
      v10 += 48;
    }
    while (v11 < *((int *)a2 + 13));
  }
  if (*((int *)a2 + 14) >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (const std::string::value_type **)(*((void *)a2 + 16) + v12), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 17) + 8 * v13++ + 8));
      v12 += 152;
    }
    while (v13 < *((int *)a2 + 14));
  }
  uint64_t v14 = (void *)*((void *)a2 + 17);
  if ((v14 == google::protobuf::FileOptions::default_instance((google::protobuf::FileOptions *)this)
     || *(_DWORD *)(*((void *)a2 + 17) + 160) != 3)
    && *((int *)a2 + 8) >= 1)
  {
    int v15 = 0;
    while (1)
    {
      uint64_t v16 = (google::protobuf::FileOptions *)google::protobuf::FileDescriptor::dependency(a2, v15);
      if (v16)
      {
        unint64_t v17 = v16;
        unint64_t v18 = (void *)*((void *)v16 + 17);
        if (v18 != google::protobuf::FileOptions::default_instance(v16)
          && *(_DWORD *)(*((void *)v17 + 17) + 160) == 3)
        {
          break;
        }
      }
      if (++v15 >= *((_DWORD *)a2 + 8)) {
        goto LABEL_21;
      }
    }
    v19 = *(const std::string::value_type **)google::protobuf::FileDescriptor::dependency(a2, v15);
    google::protobuf::FileDescriptor::dependency(a2, v15);
    std::operator+<char>();
    int v20 = std::string::append(&v22, "\" which is.");
    long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
    std::string::size_type v24 = v20->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v21;
    v20->__r_.__value_.__l.__size_ = 0;
    v20->__r_.__value_.__r.__words[2] = 0;
    v20->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v19, (uint64_t)a3, 9, (const std::string::value_type *)__p);
    if (SHIBYTE(v24) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
  }
LABEL_21:
  if (*((_DWORD *)a2 + 15) == 3) {
    google::protobuf::DescriptorBuilder::ValidateProto3((google::protobuf::DescriptorBuilder *)this, a2, a3);
  }
}

void sub_1000CCECC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::DetectMapConflicts(google::protobuf::DescriptorBuilder *this, const google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  v40[0] = 0;
  v40[1] = 0;
  v39 = v40;
  if (*((int *)a2 + 29) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = *((void *)a2 + 7);
      uint64_t v9 = *(long long **)(v8 + v6);
      if (*((char *)v9 + 23) < 0)
      {
        sub_1000BB834(__p, *(void **)v9, *((void *)v9 + 1));
      }
      else
      {
        long long v10 = *v9;
        std::string::size_type v37 = *((void *)v9 + 2);
        *(_OWORD *)__p = v10;
      }
      uint64_t v38 = v8 + v6;
      uint64_t v11 = sub_1000DF434((uint64_t **)&v39, (const void **)__p, (uint64_t)__p);
      char v13 = v12;
      if (SHIBYTE(v37) < 0) {
        operator delete(__p[0]);
      }
      if (!v13
        && (*(unsigned char *)(*(void *)(*((void *)v11 + 7) + 32) + 75) || *(unsigned char *)(*(void *)(v8 + v6 + 32) + 75)))
      {
        uint64_t v14 = (const std::string::value_type *)*((void *)a2 + 1);
        std::operator+<char>();
        int v15 = std::string::append(&v35, " conflicts with an existing nested message type.");
        long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
        std::string::size_type v37 = v15->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v16;
        v15->__r_.__value_.__l.__size_ = 0;
        v15->__r_.__value_.__r.__words[2] = 0;
        v15->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v14, (uint64_t)a3, 0, (const std::string::value_type *)__p);
        if (SHIBYTE(v37) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v35.__r_.__value_.__l.__data_);
        }
      }
      google::protobuf::DescriptorBuilder::DetectMapConflicts(this, (const google::protobuf::Descriptor *)(*((void *)a2 + 7) + v6), *(const google::protobuf::DescriptorProto **)(*((void *)a3 + 8) + 8 * v7++ + 8));
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    do
    {
      uint64_t v19 = sub_1000D9338((uint64_t)&v39, *(const void ***)(*((void *)a2 + 5) + v17));
      if (v40 != (char **)v19 && *(unsigned char *)(*(void *)(*(void *)(v19 + 56) + 32) + 75))
      {
        int v20 = (const std::string::value_type *)*((void *)a2 + 1);
        std::operator+<char>();
        long long v21 = std::string::append(&v35, " conflicts with an existing field.");
        long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
        std::string::size_type v37 = v21->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v22;
        v21->__r_.__value_.__l.__size_ = 0;
        v21->__r_.__value_.__r.__words[2] = 0;
        v21->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v20, (uint64_t)a3, 0, (const std::string::value_type *)__p);
        if (SHIBYTE(v37) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v35.__r_.__value_.__l.__data_);
        }
      }
      ++v18;
      v17 += 152;
    }
    while (v18 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    do
    {
      uint64_t v25 = sub_1000D9338((uint64_t)&v39, *(const void ***)(*((void *)a2 + 8) + v23));
      if (v40 != (char **)v25 && *(unsigned char *)(*(void *)(*(void *)(v25 + 56) + 32) + 75))
      {
        long long v26 = (const std::string::value_type *)*((void *)a2 + 1);
        std::operator+<char>();
        long long v27 = std::string::append(&v35, " conflicts with an existing enum type.");
        long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        std::string::size_type v37 = v27->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v26, (uint64_t)a3, 0, (const std::string::value_type *)__p);
        if (SHIBYTE(v37) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v35.__r_.__value_.__l.__data_);
        }
      }
      ++v24;
      v23 += 80;
    }
    while (v24 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 27) >= 1)
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    do
    {
      uint64_t v31 = sub_1000D9338((uint64_t)&v39, *(const void ***)(*((void *)a2 + 6) + v29));
      if (v40 != (char **)v31 && *(unsigned char *)(*(void *)(*(void *)(v31 + 56) + 32) + 75))
      {
        long long v32 = (const std::string::value_type *)*((void *)a2 + 1);
        std::operator+<char>();
        uint64_t v33 = std::string::append(&v35, " conflicts with an existing oneof type.");
        long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        std::string::size_type v37 = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v32, (uint64_t)a3, 0, (const std::string::value_type *)__p);
        if (SHIBYTE(v37) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v35.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v35.__r_.__value_.__l.__data_);
        }
      }
      ++v30;
      v29 += 48;
    }
    while (v30 < *((int *)a2 + 27));
  }
  sub_1000DD030((uint64_t)&v39, v40[0]);
}

void sub_1000CD320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,char a24,char *a25)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  sub_1000DD030((uint64_t)&a24, a25);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::LogUnusedDependency(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2, const google::protobuf::FileDescriptor *a3)
{
  if (*((void *)this + 17))
  {
    uint64_t v5 = sub_1000D9338(*(void *)this + 48, (const void **)(*((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL));
    BOOL v6 = *(void *)this + 56 != v5 && *(unsigned char *)(v5 + 56) != 0;
    uint64_t v7 = (google::protobuf::DescriptorBuilder *)*((void *)this + 15);
    if (v7 != (google::protobuf::DescriptorBuilder *)((char *)this + 128))
    {
      do
      {
        std::operator+<char>();
        uint64_t v8 = std::string::append(&v14, " is unused.");
        long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
        std::string::size_type v16 = v8->__r_.__value_.__r.__words[2];
        *(_OWORD *)__p = v9;
        v8->__r_.__value_.__l.__size_ = 0;
        v8->__r_.__value_.__r.__words[2] = 0;
        v8->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v14.__r_.__value_.__l.__data_);
        }
        long long v10 = (const std::string::value_type *)**((void **)v7 + 4);
        if (v6) {
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v10, (uint64_t)a2, 9, (const std::string::value_type *)__p);
        }
        else {
          google::protobuf::DescriptorBuilder::AddWarning((uint64_t)this, v10, (uint64_t)a2, 9, (const std::string::value_type *)__p);
        }
        if (SHIBYTE(v16) < 0) {
          operator delete(__p[0]);
        }
        uint64_t v11 = (google::protobuf::DescriptorBuilder *)*((void *)v7 + 1);
        if (v11)
        {
          do
          {
            char v12 = v11;
            uint64_t v11 = *(google::protobuf::DescriptorBuilder **)v11;
          }
          while (v11);
        }
        else
        {
          do
          {
            char v12 = (google::protobuf::DescriptorBuilder *)*((void *)v7 + 2);
            BOOL v13 = *(void *)v12 == (void)v7;
            uint64_t v7 = v12;
          }
          while (!v13);
        }
        uint64_t v7 = v12;
      }
      while (v12 != (google::protobuf::DescriptorBuilder *)((char *)this + 128));
    }
  }
}

void sub_1000CD520(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AllocateNameString(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  if ((v3 & 0x80u) != 0) {
    uint64_t v3 = *(void *)(a2 + 8);
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v3) {
    google::protobuf::DescriptorPool::Tables::AllocateEmptyString(*(google::protobuf::DescriptorPool::Tables **)(a1 + 8));
  }
  sub_1000BB974(v5, a3, (const char *)a3);
  google::protobuf::DescriptorPool::Tables::AllocateString(v4, v5[0], v5[1]);
}

void google::protobuf::DescriptorBuilder::BuildOneof(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1000CD788(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::BuildExtensionRange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v8 = *(_DWORD *)(a2 + 32);
  *(_DWORD *)a4 = v8;
  int v9 = *(_DWORD *)(a2 + 36);
  *(_DWORD *)(a4 + 4) = v9;
  if (v8 <= 0)
  {
    google::protobuf::DescriptorBuilder::AddError(a1, *(const std::string::value_type **)(a3 + 8), a2, 1, "Extension numbers must be positive integers.");
    int v8 = *(_DWORD *)a4;
    int v9 = *(_DWORD *)(a4 + 4);
  }
  if (v8 >= v9) {
    google::protobuf::DescriptorBuilder::AddError(a1, *(const std::string::value_type **)(a3 + 8), a2, 1, "Extension range end number must be greater than start number.");
  }
  *(void *)(a4 + 8) = 0;
  if (*(unsigned char *)(a2 + 16))
  {
    __p = 0;
    int v43 = 0;
    unint64_t v44 = 0;
    google::protobuf::Descriptor::GetLocationPath(a3, (uint64_t)&__p);
    uint64_t v11 = v43;
    long long v10 = (char *)v44;
    if ((unint64_t)v43 >= v44)
    {
      BOOL v13 = (char *)__p;
      uint64_t v14 = (v43 - (unsigned char *)__p) >> 2;
      unint64_t v15 = v14 + 1;
      if ((unint64_t)(v14 + 1) >> 62) {
        sub_100078F84();
      }
      uint64_t v16 = v44 - (void)__p;
      if ((uint64_t)(v44 - (void)__p) >> 1 > v15) {
        unint64_t v15 = v16 >> 1;
      }
      if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v17 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v17 = v15;
      }
      if (v17)
      {
        uint64_t v18 = (char *)sub_1000DD508((uint64_t)&v44, v17);
        BOOL v13 = (char *)__p;
        uint64_t v11 = v43;
      }
      else
      {
        uint64_t v18 = 0;
      }
      uint64_t v19 = &v18[4 * v14];
      long long v10 = &v18[4 * v17];
      *(_DWORD *)uint64_t v19 = 5;
      char v12 = v19 + 4;
      while (v11 != v13)
      {
        int v20 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v19 - 1) = v20;
        v19 -= 4;
      }
      __p = v19;
      int v43 = v12;
      unint64_t v44 = (unint64_t)v10;
      if (v13)
      {
        operator delete(v13);
        long long v10 = (char *)v44;
      }
    }
    else
    {
      *(_DWORD *)int v43 = 5;
      char v12 = v11 + 4;
    }
    int v43 = v12;
    unint64_t v21 = (unint64_t)(a4 - *(void *)(a3 + 72)) >> 4;
    if (v12 >= v10)
    {
      uint64_t v23 = (char *)__p;
      uint64_t v24 = (v12 - (unsigned char *)__p) >> 2;
      unint64_t v25 = v24 + 1;
      if ((unint64_t)(v24 + 1) >> 62) {
        sub_100078F84();
      }
      uint64_t v26 = v10 - (unsigned char *)__p;
      if (v26 >> 1 > v25) {
        unint64_t v25 = v26 >> 1;
      }
      if ((unint64_t)v26 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v27 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v27 = v25;
      }
      if (v27)
      {
        long long v28 = (char *)sub_1000DD508((uint64_t)&v44, v27);
        uint64_t v23 = (char *)__p;
        char v12 = v43;
      }
      else
      {
        long long v28 = 0;
      }
      uint64_t v29 = &v28[4 * v24];
      long long v10 = &v28[4 * v27];
      *(_DWORD *)uint64_t v29 = v21;
      long long v22 = v29 + 4;
      while (v12 != v23)
      {
        int v30 = *((_DWORD *)v12 - 1);
        v12 -= 4;
        *((_DWORD *)v29 - 1) = v30;
        v29 -= 4;
      }
      __p = v29;
      int v43 = v22;
      unint64_t v44 = (unint64_t)v10;
      if (v23)
      {
        operator delete(v23);
        long long v10 = (char *)v44;
      }
    }
    else
    {
      *(_DWORD *)char v12 = v21;
      long long v22 = v12 + 4;
    }
    int v43 = v22;
    if (v22 >= v10)
    {
      long long v32 = (char *)__p;
      uint64_t v33 = (v22 - (unsigned char *)__p) >> 2;
      unint64_t v34 = v33 + 1;
      if ((unint64_t)(v33 + 1) >> 62) {
        sub_100078F84();
      }
      uint64_t v35 = v10 - (unsigned char *)__p;
      if (v35 >> 1 > v34) {
        unint64_t v34 = v35 >> 1;
      }
      if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v36 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v36 = v34;
      }
      if (v36)
      {
        std::string::size_type v37 = (char *)sub_1000DD508((uint64_t)&v44, v36);
        long long v32 = (char *)__p;
        long long v22 = v43;
      }
      else
      {
        std::string::size_type v37 = 0;
      }
      uint64_t v38 = &v37[4 * v33];
      v39 = &v37[4 * v36];
      *(_DWORD *)uint64_t v38 = 3;
      uint64_t v31 = v38 + 4;
      while (v22 != v32)
      {
        int v40 = *((_DWORD *)v22 - 1);
        v22 -= 4;
        *((_DWORD *)v38 - 1) = v40;
        v38 -= 4;
      }
      __p = v38;
      int v43 = v31;
      unint64_t v44 = (unint64_t)v39;
      if (v32) {
        operator delete(v32);
      }
    }
    else
    {
      *(_DWORD *)long long v22 = 3;
      uint64_t v31 = v22 + 4;
    }
    int v43 = v31;
    sub_1000BBA84(&v41, "google.protobuf.ExtensionRangeOptions");
    sub_1000CEF24();
  }
}

void sub_1000CDB04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000CDB48(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  __p = 0;
  unint64_t v17 = 0;
  unint64_t v18 = 0;
  google::protobuf::Descriptor::GetLocationPath(a3, (uint64_t)&__p);
  uint64_t v5 = v17;
  if ((unint64_t)v17 >= v18)
  {
    uint64_t v7 = (char *)__p;
    uint64_t v8 = (v17 - (unsigned char *)__p) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      sub_100078F84();
    }
    uint64_t v10 = v18 - (void)__p;
    if ((uint64_t)(v18 - (void)__p) >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      char v12 = (char *)sub_1000DD508((uint64_t)&v18, v11);
      uint64_t v7 = (char *)__p;
      uint64_t v5 = v17;
    }
    else
    {
      char v12 = 0;
    }
    BOOL v13 = &v12[4 * v8];
    uint64_t v14 = &v12[4 * v11];
    *(_DWORD *)BOOL v13 = a4;
    BOOL v6 = v13 + 4;
    while (v5 != v7)
    {
      int v15 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v15;
      v13 -= 4;
    }
    __p = v13;
    unint64_t v17 = v6;
    unint64_t v18 = (unint64_t)v14;
    if (v7) {
      operator delete(v7);
    }
  }
  else
  {
    *(_DWORD *)unint64_t v17 = a4;
    BOOL v6 = v5 + 4;
  }
  unint64_t v17 = v6;
  sub_1000DE660();
}

void sub_1000CDC90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::BuildFieldOrExtension(google::protobuf::DescriptorBuilder *this, const google::protobuf::FieldDescriptorProto *a2, google::protobuf::Descriptor *a3, google::protobuf::FieldDescriptor *a4)
{
  if (a3) {
    uint64_t v4 = (uint64_t *)((char *)a3 + 8);
  }
  else {
    uint64_t v4 = (uint64_t *)(*((void *)this + 10) + 8);
  }
  google::protobuf::DescriptorBuilder::AllocateNameString((uint64_t)this, *v4, (uint64_t *)(*((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL));
}

void sub_1000CEAA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000CEBD4(unsigned __int8 *a1@<X0>, char a2@<W1>, std::string *a3@<X8>)
{
  uint64_t v4 = a1;
  uint64_t v5 = a3;
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  if ((a1[23] & 0x80u) == 0) {
    std::string::size_type v6 = a1[23];
  }
  else {
    std::string::size_type v6 = *((void *)a1 + 1);
  }
  std::string::reserve(a3, v6);
  uint64_t v7 = *((void *)v4 + 1);
  if ((v4[23] & 0x80u) == 0)
  {
    uint64_t v8 = v4[23];
  }
  else
  {
    uint64_t v4 = *(unsigned __int8 **)v4;
    uint64_t v8 = v7;
  }
  if (v8)
  {
    unsigned __int8 v9 = a2 ^ 1;
    do
    {
      int v10 = *v4;
      BOOL v11 = v10 == 95;
      if (v10 != 95)
      {
        if ((v9 & ((v10 - 97) < 0x1A)) != 0) {
          std::string::value_type v12 = v10 - 32;
        }
        else {
          std::string::value_type v12 = *v4;
        }
        std::string::push_back(v5, v12);
      }
      ++v4;
      unsigned __int8 v9 = v11;
      --v8;
    }
    while (v8);
  }
  if (a2)
  {
    if (SHIBYTE(v5->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v5->__r_.__value_.__l.__size_) {
        return;
      }
      uint64_t v5 = (std::string *)v5->__r_.__value_.__r.__words[0];
    }
    else if (!*((unsigned char *)&v5->__r_.__value_.__s + 23))
    {
      return;
    }
    int v13 = v5->__r_.__value_.__s.__data_[0];
    if ((v13 - 65) < 0x1A) {
      LOBYTE(v13) = v13 + 32;
    }
    v5->__r_.__value_.__s.__data_[0] = v13;
  }
}

void sub_1000CECCC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000CECEC(unsigned __int8 *a1@<X0>, std::string *a2@<X8>)
{
  char v2 = a1;
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  if ((a1[23] & 0x80u) == 0) {
    std::string::size_type v4 = a1[23];
  }
  else {
    std::string::size_type v4 = *((void *)a1 + 1);
  }
  std::string::reserve(a2, v4);
  uint64_t v5 = *((void *)v2 + 1);
  if ((v2[23] & 0x80u) == 0)
  {
    uint64_t v6 = v2[23];
  }
  else
  {
    char v2 = *(unsigned __int8 **)v2;
    uint64_t v6 = v5;
  }
  if (v6)
  {
    BOOL v7 = 0;
    do
    {
      int v8 = *v2;
      BOOL v9 = v8 == 95;
      if (v8 != 95)
      {
        if (v7 && (v8 - 97) < 0x1A) {
          std::string::value_type v10 = v8 - 32;
        }
        else {
          std::string::value_type v10 = *v2;
        }
        std::string::push_back(a2, v10);
      }
      ++v2;
      BOOL v7 = v9;
      --v6;
    }
    while (v6);
  }
}

void sub_1000CEDA0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000CEDC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  __p = 0;
  unint64_t v17 = 0;
  unint64_t v18 = 0;
  google::protobuf::FieldDescriptor::GetLocationPath(a3, (char **)&__p);
  uint64_t v5 = v17;
  if ((unint64_t)v17 >= v18)
  {
    BOOL v7 = (char *)__p;
    uint64_t v8 = (v17 - (unsigned char *)__p) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      sub_100078F84();
    }
    uint64_t v10 = v18 - (void)__p;
    if ((uint64_t)(v18 - (void)__p) >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      std::string::value_type v12 = (char *)sub_1000DD508((uint64_t)&v18, v11);
      BOOL v7 = (char *)__p;
      uint64_t v5 = v17;
    }
    else
    {
      std::string::value_type v12 = 0;
    }
    int v13 = &v12[4 * v8];
    uint64_t v14 = &v12[4 * v11];
    *(_DWORD *)int v13 = a4;
    uint64_t v6 = v13 + 4;
    while (v5 != v7)
    {
      int v15 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v15;
      v13 -= 4;
    }
    __p = v13;
    unint64_t v17 = v6;
    unint64_t v18 = (unint64_t)v14;
    if (v7) {
      operator delete(v7);
    }
  }
  else
  {
    *(_DWORD *)unint64_t v17 = a4;
    uint64_t v6 = v5 + 4;
  }
  unint64_t v17 = v6;
  sub_1000DEA94();
}

void sub_1000CEF08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000CEF24()
{
}

void sub_1000CF1C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_1000CF220(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  __p = 0;
  unint64_t v17 = 0;
  unint64_t v18 = 0;
  google::protobuf::OneofDescriptor::GetLocationPath(a3, (char **)&__p);
  uint64_t v5 = v17;
  if ((unint64_t)v17 >= v18)
  {
    BOOL v7 = (char *)__p;
    uint64_t v8 = (v17 - (unsigned char *)__p) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      sub_100078F84();
    }
    uint64_t v10 = v18 - (void)__p;
    if ((uint64_t)(v18 - (void)__p) >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      std::string::value_type v12 = (char *)sub_1000DD508((uint64_t)&v18, v11);
      BOOL v7 = (char *)__p;
      uint64_t v5 = v17;
    }
    else
    {
      std::string::value_type v12 = 0;
    }
    int v13 = &v12[4 * v8];
    uint64_t v14 = &v12[4 * v11];
    *(_DWORD *)int v13 = a4;
    uint64_t v6 = v13 + 4;
    while (v5 != v7)
    {
      int v15 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v15;
      v13 -= 4;
    }
    __p = v13;
    unint64_t v17 = v6;
    unint64_t v18 = (unint64_t)v14;
    if (v7) {
      operator delete(v7);
    }
  }
  else
  {
    *(_DWORD *)unint64_t v17 = a4;
    uint64_t v6 = v5 + 4;
  }
  unint64_t v17 = v6;
  sub_1000DF000();
}

void sub_1000CF368(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CheckEnumValueUniqueness(google::protobuf::DescriptorBuilder *this, const google::protobuf::EnumDescriptorProto *a2, uint64_t **a3)
{
  sub_1000BB974(&v63, *a3, (const char *)a3);
  uint64_t v5 = v63;
  uint64_t v6 = v64;
  memset(&v65, 0, sizeof(v65));
  if (v64)
  {
    do
    {
      int v7 = *v5;
      if (v7 != 95)
      {
        if ((v7 - 65) < 0x1A) {
          LOBYTE(v7) = v7 + 32;
        }
        std::string::push_back(&v65, v7);
      }
      ++v5;
      --v6;
    }
    while (v6);
  }
  v62[0] = 0;
  v62[1] = 0;
  v61 = v62;
  if (*((int *)a3 + 11) >= 1)
  {
    uint64_t v8 = 0;
    while (1)
    {
      unint64_t v9 = a3[6];
      uint64_t v10 = (uint64_t **)&v9[5 * v8];
      sub_1000BB974(&v59, *v10, v4);
      *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v59;
      std::string::size_type size = HIBYTE(v65.__r_.__value_.__r.__words[2]);
      if (!*((void *)&v59 + 1)) {
        break;
      }
      std::string::size_type v12 = 0;
      std::string::size_type v13 = 0;
      if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = v65.__r_.__value_.__l.__size_;
      }
      uint64_t v14 = (std::string *)v65.__r_.__value_.__r.__words[0];
      if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v14 = &v65;
      }
      while (v12 < size)
      {
        int v15 = *(unsigned __int8 *)(v59 + v13);
        if (v15 != 95)
        {
          if ((v15 - 65) < 0x1A) {
            LOBYTE(v15) = v15 + 32;
          }
          if (v14->__r_.__value_.__s.__data_[v12] != v15) {
            goto LABEL_33;
          }
          ++v12;
        }
        if (*((void *)&v59 + 1) == ++v13)
        {
          std::string::size_type v13 = *((void *)&v59 + 1);
          break;
        }
      }
      if (v12 >= size)
      {
        if (v13 < *((void *)&v59 + 1))
        {
          while (*(unsigned char *)(v59 + v13) == 95)
          {
            if (*((void *)&v59 + 1) == ++v13) {
              goto LABEL_33;
            }
          }
        }
LABEL_31:
        if (*((void *)&v59 + 1) != v13)
        {
          v56.__r_.__value_.__r.__words[0] = v59 + v13;
          v56.__r_.__value_.__l.__size_ = *((void *)&v59 + 1) - v13;
        }
      }
LABEL_33:
      sub_1000D7AF4((uint64_t)&v56, &__p);
      memset(&v60, 0, sizeof(v60));
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v16 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v16 = __p.__r_.__value_.__l.__size_;
      }
      std::string::reserve(&v60, v16);
      char v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v19 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v19 = __p.__r_.__value_.__l.__size_;
      }
      if (v19)
      {
        char v20 = 1;
        do
        {
          int v21 = p_p->__r_.__value_.__s.__data_[0];
          BOOL v22 = v21 == 95;
          if (v21 != 95)
          {
            BOOL v23 = (v20 & 1) == 0;
            if (v20) {
              char v24 = -97;
            }
            else {
              char v24 = -65;
            }
            if (v23) {
              char v25 = 32;
            }
            else {
              char v25 = -32;
            }
            if ((v21 + v24) >= 0x1Au) {
              char v26 = 0;
            }
            else {
              char v26 = v25;
            }
            std::string::push_back(&v60, v26 + v21);
          }
          p_p = (std::string *)((char *)p_p + 1);
          char v20 = v22;
          --v19;
        }
        while (v19);
        char v17 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      if (v17 < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000BB834(&__p, v60.__r_.__value_.__l.__data_, v60.__r_.__value_.__l.__size_);
      }
      else {
        std::string __p = v60;
      }
      signed int v58 = &v9[5 * v8];
      unint64_t v27 = sub_1000DF434(&v61, (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&__p);
      char v29 = v28;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (v29) {
        goto LABEL_65;
      }
      int v30 = (_DWORD *)*((void *)v27 + 7);
      uint64_t v31 = *(const void ***)v30;
      long long v32 = *v10;
      uint64_t v33 = *(unsigned __int8 *)(*(void *)v30 + 23);
      std::string::size_type v4 = *(const char **)(*(void *)v30 + 8);
      if ((v33 & 0x80u) == 0) {
        uint64_t v34 = *(unsigned __int8 *)(*(void *)v30 + 23);
      }
      else {
        uint64_t v34 = *(void *)(*(void *)v30 + 8);
      }
      uint64_t v35 = *((unsigned __int8 *)v32 + 23);
      int v36 = (char)v35;
      if ((v35 & 0x80u) != 0) {
        uint64_t v35 = v32[1];
      }
      if (v34 != v35) {
        goto LABEL_84;
      }
      if (v36 >= 0) {
        std::string::size_type v37 = *v10;
      }
      else {
        std::string::size_type v37 = (uint64_t *)*v32;
      }
      if ((v33 & 0x80) != 0)
      {
        if (memcmp(*v31, v37, (size_t)v4)) {
          goto LABEL_84;
        }
      }
      else if (*(unsigned char *)(*(void *)v30 + 23))
      {
        while (*(unsigned __int8 *)v31 == *(unsigned __int8 *)v37)
        {
          uint64_t v31 = (const void **)((char *)v31 + 1);
          std::string::size_type v37 = (uint64_t *)((char *)v37 + 1);
          if (!--v33) {
            goto LABEL_65;
          }
        }
LABEL_84:
        if (v30[4] != LODWORD(v9[5 * v8 + 2]))
        {
          std::operator+<char>();
          uint64_t v38 = std::string::append(&v54, " has the same name as ");
          long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
          v55.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v55.__r_.__value_.__l.__data_ = v39;
          v38->__r_.__value_.__l.__size_ = 0;
          v38->__r_.__value_.__r.__words[2] = 0;
          v38->__r_.__value_.__r.__words[0] = 0;
          v66 = &v60;
          int v40 = sub_1000DF4C8(&v61, (const void **)&v60.__r_.__value_.__l.__data_, (uint64_t)&unk_10017F9D8, (long long **)&v66);
          uint64_t v41 = *(void *)v40[7];
          int v42 = *(char *)(v41 + 23);
          if (v42 >= 0) {
            int v43 = *(const std::string::value_type **)v40[7];
          }
          else {
            int v43 = *(const std::string::value_type **)v41;
          }
          if (v42 >= 0) {
            std::string::size_type v44 = *(unsigned __int8 *)(v41 + 23);
          }
          else {
            std::string::size_type v44 = *(void *)(v41 + 8);
          }
          long long v45 = std::string::append(&v55, v43, v44);
          long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
          v56.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v46;
          v45->__r_.__value_.__l.__size_ = 0;
          v45->__r_.__value_.__r.__words[2] = 0;
          v45->__r_.__value_.__r.__words[0] = 0;
          unsigned int v47 = std::string::append(&v56, " if you ignore case and strip out the enum name prefix (if any). This is error-prone and can lead to undefined behavior. Please avoid doing this. If you are using allow_alias, please assign the same numeric value to both enums.");
          long long v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
          __p.__r_.__value_.__r.__words[2] = v47->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v48;
          v47->__r_.__value_.__l.__size_ = 0;
          v47->__r_.__value_.__r.__words[2] = 0;
          v47->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v56.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v55.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v54.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v54.__r_.__value_.__l.__data_);
          }
          uint64_t v49 = (const std::string::value_type *)v9[5 * v8 + 1];
          uint64_t v50 = *(void *)(*((void *)a2 + 5) + 8 * v8 + 8);
          if (*((_DWORD *)a3[2] + 15) == 2) {
            google::protobuf::DescriptorBuilder::AddWarning((uint64_t)this, v49, v50, 0, (const std::string::value_type *)&__p);
          }
          else {
            google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v49, v50, 0, (const std::string::value_type *)&__p);
          }
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
      }
LABEL_65:
      if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v60.__r_.__value_.__l.__data_);
      }
      if (++v8 >= *((int *)a3 + 11))
      {
        uint64_t v51 = (char *)v62[0];
        goto LABEL_103;
      }
    }
    if ((v65.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v13 = HIBYTE(v65.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v13 = v65.__r_.__value_.__l.__size_;
    }
    if (v13) {
      goto LABEL_33;
    }
    goto LABEL_31;
  }
  uint64_t v51 = 0;
LABEL_103:
  sub_1000DD030((uint64_t)&v61, v51);
  if (SHIBYTE(v65.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v65.__r_.__value_.__l.__data_);
  }
}

void sub_1000CF86C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46)
{
  if (a37 < 0) {
    operator delete(__p);
  }
  if (a46 < 0) {
    operator delete(a41);
  }
  sub_1000DD030(v46 - 168, *(char **)(v46 - 160));
  if (*(char *)(v46 - 105) < 0) {
    operator delete(*(void **)(v46 - 128));
  }
  _Unwind_Resume(a1);
}

BOOL sub_1000CF940(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 1;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) != 0;
  }
  if (a1[23])
  {
    uint64_t v6 = v2 - 1;
    do
    {
      int v8 = *a1++;
      int v7 = v8;
      int v9 = *a2++;
      BOOL v10 = v7 == v9;
      uint64_t v2 = v7 != v9;
      BOOL v10 = !v10 || v6-- == 0;
    }
    while (!v10);
  }
  return v2;
}

void google::protobuf::DescriptorBuilder::BuildEnumValue(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v3 = *(void *)(a1 + 8);
  sub_1000BB974(v4, (uint64_t *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), a3);
  google::protobuf::DescriptorPool::Tables::AllocateString(v3, v4[0], v4[1]);
}

void sub_1000CFE5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42,void *a43,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  if (a42 < 0) {
    operator delete(__p);
  }
  if (a48 < 0) {
    operator delete(a43);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000CFF30(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  std::string __p = 0;
  char v17 = 0;
  unint64_t v18 = 0;
  google::protobuf::EnumDescriptor::GetLocationPath(a3, (char **)&__p);
  int v5 = v17;
  if ((unint64_t)v17 >= v18)
  {
    int v7 = (char *)__p;
    uint64_t v8 = (v17 - (unsigned char *)__p) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      sub_100078F84();
    }
    uint64_t v10 = v18 - (void)__p;
    if ((uint64_t)(v18 - (void)__p) >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      std::string::size_type v12 = (char *)sub_1000DD508((uint64_t)&v18, v11);
      int v7 = (char *)__p;
      int v5 = v17;
    }
    else
    {
      std::string::size_type v12 = 0;
    }
    std::string::size_type v13 = &v12[4 * v8];
    uint64_t v14 = &v12[4 * v11];
    *(_DWORD *)std::string::size_type v13 = a4;
    uint64_t v6 = v13 + 4;
    while (v5 != v7)
    {
      int v15 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v15;
      v13 -= 4;
    }
    std::string __p = v13;
    char v17 = v6;
    unint64_t v18 = (unint64_t)v14;
    if (v7) {
      operator delete(v7);
    }
  }
  else
  {
    *(_DWORD *)char v17 = a4;
    uint64_t v6 = v5 + 4;
  }
  char v17 = v6;
  sub_1000DF608();
}

void sub_1000D0078(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000D0094(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  std::string __p = 0;
  char v17 = 0;
  unint64_t v18 = 0;
  google::protobuf::EnumValueDescriptor::GetLocationPath(a3, (char **)&__p);
  int v5 = v17;
  if ((unint64_t)v17 >= v18)
  {
    int v7 = (char *)__p;
    uint64_t v8 = (v17 - (unsigned char *)__p) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      sub_100078F84();
    }
    uint64_t v10 = v18 - (void)__p;
    if ((uint64_t)(v18 - (void)__p) >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      std::string::size_type v12 = (char *)sub_1000DD508((uint64_t)&v18, v11);
      int v7 = (char *)__p;
      int v5 = v17;
    }
    else
    {
      std::string::size_type v12 = 0;
    }
    std::string::size_type v13 = &v12[4 * v8];
    uint64_t v14 = &v12[4 * v11];
    *(_DWORD *)std::string::size_type v13 = a4;
    uint64_t v6 = v13 + 4;
    while (v5 != v7)
    {
      int v15 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v15;
      v13 -= 4;
    }
    std::string __p = v13;
    char v17 = v6;
    unint64_t v18 = (unint64_t)v14;
    if (v7) {
      operator delete(v7);
    }
  }
  else
  {
    *(_DWORD *)char v17 = a4;
    uint64_t v6 = v5 + 4;
  }
  char v17 = v6;
  sub_1000DFA3C();
}

void sub_1000D01DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::BuildMethod(uint64_t a1, uint64_t a2, const char *a3)
{
  uint64_t v3 = *(void *)(a1 + 8);
  sub_1000BB974(v4, (uint64_t *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), a3);
  google::protobuf::DescriptorPool::Tables::AllocateString(v3, v4[0], v4[1]);
}

void sub_1000D0310(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000D032C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  std::string __p = 0;
  char v17 = 0;
  unint64_t v18 = 0;
  google::protobuf::ServiceDescriptor::GetLocationPath(a3, (char **)&__p);
  int v5 = v17;
  if ((unint64_t)v17 >= v18)
  {
    int v7 = (char *)__p;
    uint64_t v8 = (v17 - (unsigned char *)__p) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      sub_100078F84();
    }
    uint64_t v10 = v18 - (void)__p;
    if ((uint64_t)(v18 - (void)__p) >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      std::string::size_type v12 = (char *)sub_1000DD508((uint64_t)&v18, v11);
      int v7 = (char *)__p;
      int v5 = v17;
    }
    else
    {
      std::string::size_type v12 = 0;
    }
    std::string::size_type v13 = &v12[4 * v8];
    uint64_t v14 = &v12[4 * v11];
    *(_DWORD *)std::string::size_type v13 = a4;
    uint64_t v6 = v13 + 4;
    while (v5 != v7)
    {
      int v15 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v15;
      v13 -= 4;
    }
    std::string __p = v13;
    char v17 = v6;
    unint64_t v18 = (unint64_t)v14;
    if (v7) {
      operator delete(v7);
    }
  }
  else
  {
    *(_DWORD *)char v17 = a4;
    uint64_t v6 = v5 + 4;
  }
  char v17 = v6;
  sub_1000DFE70();
}

void sub_1000D0474(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000D0490(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  std::string __p = 0;
  char v17 = 0;
  unint64_t v18 = 0;
  google::protobuf::MethodDescriptor::GetLocationPath(a3, (char **)&__p);
  int v5 = v17;
  if ((unint64_t)v17 >= v18)
  {
    int v7 = (char *)__p;
    uint64_t v8 = (v17 - (unsigned char *)__p) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      sub_100078F84();
    }
    uint64_t v10 = v18 - (void)__p;
    if ((uint64_t)(v18 - (void)__p) >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      std::string::size_type v12 = (char *)sub_1000DD508((uint64_t)&v18, v11);
      int v7 = (char *)__p;
      int v5 = v17;
    }
    else
    {
      std::string::size_type v12 = 0;
    }
    std::string::size_type v13 = &v12[4 * v8];
    uint64_t v14 = &v12[4 * v11];
    *(_DWORD *)std::string::size_type v13 = a4;
    uint64_t v6 = v13 + 4;
    while (v5 != v7)
    {
      int v15 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - 1) = v15;
      v13 -= 4;
    }
    std::string __p = v13;
    char v17 = v6;
    unint64_t v18 = (unint64_t)v14;
    if (v7) {
      operator delete(v7);
    }
  }
  else
  {
    *(_DWORD *)char v17 = a4;
    uint64_t v6 = v5 + 4;
  }
  char v17 = v6;
  sub_1000E02A4();
}

void sub_1000D05D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CrossLinkMessage(google::protobuf::DescriptorPool::Tables **this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  int v5 = this;
  if (!*((void *)a2 + 4))
  {
    this = (google::protobuf::DescriptorPool::Tables **)google::protobuf::MessageOptions::default_instance((google::protobuf::MessageOptions *)this);
    *((void *)a2 + 4) = this;
  }
  if (*((int *)a2 + 29) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      this = (google::protobuf::DescriptorPool::Tables **)google::protobuf::DescriptorBuilder::CrossLinkMessage((google::protobuf::DescriptorBuilder *)v5, (google::protobuf::Descriptor *)(*((void *)a2 + 7) + v6), *(const google::protobuf::DescriptorProto **)(*((void *)a3 + 8) + 8 * v7++ + 8));
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      this = (google::protobuf::DescriptorPool::Tables **)google::protobuf::DescriptorBuilder::CrossLinkEnum((google::protobuf::EnumOptions *)this, (google::protobuf::EnumDescriptor *)(*((void *)a2 + 8) + v8), a3);
      ++v9;
      v8 += 80;
    }
    while (v9 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkField(v5, (google::protobuf::FieldDescriptor *)(*((void *)a2 + 5) + v10), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 5) + 8 * v11++ + 8));
      v10 += 152;
    }
    while (v11 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 32) >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkField(v5, (google::protobuf::FieldDescriptor *)(*((void *)a2 + 10) + v12), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 17) + 8 * v13++ + 8));
      v12 += 152;
    }
    while (v13 < *((int *)a2 + 32));
  }
  int v14 = *((_DWORD *)a2 + 31);
  if (v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 8;
    do
    {
      uint64_t v17 = *((void *)a2 + 9);
      if (!*(void *)(v17 + v16))
      {
        this = (google::protobuf::DescriptorPool::Tables **)google::protobuf::ExtensionRangeOptions::default_instance((google::protobuf::ExtensionRangeOptions *)this);
        *(void *)(v17 + v16) = this;
        int v14 = *((_DWORD *)a2 + 31);
      }
      ++v15;
      v16 += 16;
    }
    while (v15 < v14);
  }
  int v18 = *((_DWORD *)a2 + 26);
  if (v18 >= 1)
  {
    uint64_t v19 = 0;
    for (uint64_t i = 0; i < v18; ++i)
    {
      uint64_t v21 = *((void *)a2 + 5);
      uint64_t v22 = *(void *)(v21 + v19 + 88);
      if (v22)
      {
        if (*(int *)(v22 + 24) >= 1 && *(void *)(v21 + v19 - 64) != v22)
        {
          BOOL v23 = (const void **)*((void *)a2 + 1);
          if (*((char *)v23 + 23) >= 0) {
            size_t v24 = *((unsigned __int8 *)v23 + 23);
          }
          else {
            size_t v24 = (size_t)v23[1];
          }
          sub_1000BB8EC((uint64_t)&v75, v24 + 1);
          if ((v75.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            char v25 = &v75;
          }
          else {
            char v25 = (std::string *)v75.__r_.__value_.__r.__words[0];
          }
          if (v24)
          {
            if (*((char *)v23 + 23) >= 0) {
              char v26 = v23;
            }
            else {
              char v26 = *v23;
            }
            memmove(v25, v26, v24);
          }
          *(_WORD *)((char *)&v25->__r_.__value_.__l.__data_ + v24) = 46;
          uint64_t v27 = *(void *)(*((void *)a2 + 5) + v19 - 152);
          int v28 = *(char *)(v27 + 23);
          if (v28 >= 0) {
            char v29 = *(const std::string::value_type **)(*((void *)a2 + 5) + v19 - 152);
          }
          else {
            char v29 = *(const std::string::value_type **)v27;
          }
          if (v28 >= 0) {
            std::string::size_type v30 = *(unsigned __int8 *)(v27 + 23);
          }
          else {
            std::string::size_type v30 = *(void *)(v27 + 8);
          }
          uint64_t v31 = std::string::append(&v75, v29, v30);
          long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
          std::string::size_type v77 = v31->__r_.__value_.__r.__words[2];
          *(_OWORD *)v76 = v32;
          v31->__r_.__value_.__l.__size_ = 0;
          v31->__r_.__value_.__r.__words[2] = 0;
          v31->__r_.__value_.__r.__words[0] = 0;
          uint64_t v33 = *(void *)(*((void *)a3 + 5) + 8 * i);
          uint64_t v34 = *(uint64_t ***)(*((void *)a2 + 5) + v19 - 152);
          int v35 = *((char *)v34 + 23);
          int v36 = v34[1];
          if (v35 < 0) {
            uint64_t v34 = (uint64_t **)*v34;
          }
          *(void *)&long long v95 = v34;
          int v37 = v35;
          if (v35 < 0) {
            int v37 = (int)v36;
          }
          DWORD2(v95) = v37;
          std::string::size_type v38 = *(void *)v22;
          int v39 = *(char *)(*(void *)v22 + 23);
          uint64_t v40 = *(void *)(*(void *)v22 + 8);
          if (v39 < 0) {
            std::string::size_type v38 = **(void **)v22;
          }
          v94.__r_.__value_.__r.__words[0] = v38;
          int v41 = v39;
          if (v39 < 0) {
            int v41 = v40;
          }
          LODWORD(v94.__r_.__value_.__r.__words[1]) = v41;
          uint64_t v92 = 0;
          int v93 = -1;
          uint64_t v90 = 0;
          int v91 = -1;
          uint64_t v88 = 0;
          int v89 = -1;
          uint64_t v86 = 0;
          int v87 = -1;
          uint64_t v84 = 0;
          int v85 = -1;
          uint64_t v82 = 0;
          int v83 = -1;
          uint64_t v80 = 0;
          int v81 = -1;
          uint64_t v78 = 0;
          int v79 = -1;
          *((void *)&v73 + 1) = &v80;
          *(void *)&long long v73 = &v82;
          google::protobuf::strings::Substitute("Fields in the same oneof must be defined consecutively. \"$0\" cannot be defined before the completion of the \"$1\" oneof definition.", (uint64_t)&v95, (uint64_t)&v94, (uint64_t)&v92, (uint64_t)&v90, (uint64_t)&v88, (uint64_t)&v86, (uint64_t)&v84, &__p, v73, (uint64_t)&v78);
          google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, (const std::string::value_type *)v76, v33, 2, (const std::string::value_type *)&__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v77) < 0) {
            operator delete(v76[0]);
          }
          if (SHIBYTE(v75.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v75.__r_.__value_.__l.__data_);
          }
          int v18 = *((_DWORD *)a2 + 26);
        }
        uint64_t v42 = *((void *)a2 + 6)
            + 48 * (int)(-1431655765 * ((unint64_t)(v22 - *(void *)(*(void *)(v22 + 16) + 48)) >> 4));
        ++*(_DWORD *)(v42 + 24);
      }
      v19 += 152;
    }
  }
  LODWORD(v43) = *((_DWORD *)a2 + 27);
  if ((int)v43 >= 1)
  {
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    do
    {
      uint64_t v46 = *((void *)a2 + 6);
      uint64_t v47 = v46 + v44;
      int v48 = *(_DWORD *)(v46 + v44 + 24);
      if (!v48)
      {
        uint64_t v49 = (const void **)*((void *)a2 + 1);
        if (*((char *)v49 + 23) >= 0) {
          size_t v50 = *((unsigned __int8 *)v49 + 23);
        }
        else {
          size_t v50 = (size_t)v49[1];
        }
        sub_1000BB8EC((uint64_t)&v94, v50 + 1);
        if ((v94.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          uint64_t v51 = &v94;
        }
        else {
          uint64_t v51 = (std::string *)v94.__r_.__value_.__r.__words[0];
        }
        if (v50)
        {
          if (*((char *)v49 + 23) >= 0) {
            uint64_t v52 = v49;
          }
          else {
            uint64_t v52 = *v49;
          }
          memmove(v51, v52, v50);
        }
        *(_WORD *)((char *)&v51->__r_.__value_.__l.__data_ + v50) = 46;
        int v53 = *(char *)(*(void *)v47 + 23);
        if (v53 >= 0) {
          std::string v54 = *(const std::string::value_type **)v47;
        }
        else {
          std::string v54 = **(const std::string::value_type ***)v47;
        }
        if (v53 >= 0) {
          std::string::size_type v55 = *(unsigned __int8 *)(*(void *)v47 + 23);
        }
        else {
          std::string::size_type v55 = *(void *)(*(void *)v47 + 8);
        }
        std::string v56 = std::string::append(&v94, v54, v55);
        long long v57 = *(_OWORD *)&v56->__r_.__value_.__l.__data_;
        std::string::size_type v96 = v56->__r_.__value_.__r.__words[2];
        long long v95 = v57;
        v56->__r_.__value_.__l.__size_ = 0;
        v56->__r_.__value_.__r.__words[2] = 0;
        v56->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, (const std::string::value_type *)&v95, *(void *)(*((void *)a3 + 20) + 8 * v45 + 8), 0, "Oneof must have at least one field.");
        if (SHIBYTE(v96) < 0) {
          operator delete((void *)v95);
        }
        if (SHIBYTE(v94.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v94.__r_.__value_.__l.__data_);
        }
        int v48 = *(_DWORD *)(v47 + 24);
      }
      uint64_t Bytes = (google::protobuf::OneofOptions *)google::protobuf::DescriptorPool::Tables::AllocateBytes(v5[1], 8 * v48);
      *(void *)(v46 + v44 + 32) = Bytes;
      *(_DWORD *)(v47 + 24) = 0;
      if (!*(void *)(v46 + v44 + 40)) {
        *(void *)(v46 + v44 + 40) = google::protobuf::OneofOptions::default_instance(Bytes);
      }
      ++v45;
      uint64_t v43 = *((int *)a2 + 27);
      v44 += 48;
    }
    while (v45 < v43);
    int v18 = *((_DWORD *)a2 + 26);
  }
  if (v18 >= 1)
  {
    uint64_t v59 = 0;
    do
    {
      uint64_t v60 = *((void *)a2 + 5) + v59;
      uint64_t v61 = *(void *)(v60 + 88);
      if (v61)
      {
        uint64_t v62 = *((void *)a2 + 6)
            + 48 * (int)(-1431655765 * ((unint64_t)(v61 - *(void *)(*(void *)(v61 + 16) + 48)) >> 4));
        uint64_t v63 = *(int *)(v62 + 24);
        *(_DWORD *)(v60 + 72) = v63;
        uint64_t v64 = *(void *)(v62 + 32);
        *(_DWORD *)(v62 + 24) = v63 + 1;
        *(void *)(v64 + 8 * v63) = v60;
      }
      v59 += 152;
    }
    while (152 * v18 != v59);
    uint64_t v65 = 0;
    for (uint64_t j = 0; j < v18; ++j)
    {
      uint64_t v67 = *((void *)a2 + 5) + v65;
      if (*(unsigned char *)(v67 + 65))
      {
        uint64_t v68 = *(void *)(v67 + 88);
        if (!v68 || *(_DWORD *)(v68 + 24) != 1 || !*(unsigned char *)(**(void **)(v68 + 32) + 65))
        {
          google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, *((const std::string::value_type **)a2 + 1), *(void *)(*((void *)a3 + 5) + 8 * j + 8), 10, "Fields with proto3_optional set must be a member of a one-field oneof");
          int v18 = *((_DWORD *)a2 + 26);
        }
      }
      v65 += 152;
    }
    LODWORD(v43) = *((_DWORD *)a2 + 27);
  }
  if ((int)v43 >= 1)
  {
    uint64_t v69 = 0;
    uint64_t v70 = 0;
    int v71 = -1;
    do
    {
      uint64_t v72 = *((void *)a2 + 6) + v69;
      if (*(_DWORD *)(v72 + 24) == 1 && *(unsigned char *)(**(void **)(v72 + 32) + 65))
      {
        if (v71 == -1) {
          int v71 = v70;
        }
      }
      else if (v71 != -1)
      {
        google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, *((const std::string::value_type **)a2 + 1), *(void *)(*((void *)a3 + 20) + 8 * v70 + 8), 10, "Synthetic oneofs must be after all other oneofs");
        LODWORD(v43) = *((_DWORD *)a2 + 27);
      }
      ++v70;
      v69 += 48;
    }
    while (v70 < (int)v43);
    if (v71 != -1) {
      LODWORD(v43) = v71;
    }
  }
  *((_DWORD *)a2 + 28) = v43;
}

void sub_1000D0CEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::CrossLinkField(google::protobuf::FileDescriptorTables **this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  if (!*((void *)a2 + 15)) {
    *((void *)a2 + 15) = google::protobuf::FieldOptions::default_instance((google::protobuf::FieldOptions *)this);
  }
  google::protobuf::FileDescriptorTables::AddFieldByStylizedNames(this[11], a2);
  if ((*((unsigned char *)a3 + 16) & 2) == 0) {
    goto LABEL_4;
  }
  int v16 = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)this, (std::string *)(*((void *)a3 + 4) & 0xFFFFFFFFFFFFFFFELL), *((void *)a2 + 1), 2, 0, 1);
  if (v16 != 1)
  {
    if (!v16)
    {
      uint64_t v19 = (const std::string::value_type *)*((void *)a2 + 1);
      unint64_t v20 = *((void *)a3 + 4) & 0xFFFFFFFFFFFFFFFELL;
      google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, v19, (uint64_t)a3, 3, v20);
      return;
    }
    int v37 = (const std::string::value_type *)*((void *)a2 + 1);
    std::operator+<char>();
    std::string::size_type v38 = std::string::append(&v136, "\" is not a message type.");
    long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
    __dst[0].__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_ = v39;
    v38->__r_.__value_.__l.__size_ = 0;
    v38->__r_.__value_.__r.__words[2] = 0;
    v38->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v37, (uint64_t)a3, 3, (const std::string::value_type *)__dst);
    goto LABEL_123;
  }
  uint64_t v31 = v17;
  *((void *)a2 + 10) = v17;
  long long v32 = (google::protobuf *)*((unsigned int *)a2 + 17);
  uint64_t v33 = *(unsigned int *)(v17 + 124);
  if ((int)v33 < 1)
  {
LABEL_41:
    if (*((unsigned char *)*this + 42))
    {
      int v35 = (void *)(*((void *)a3 + 4) & 0xFFFFFFFFFFFFFFFELL);
      int v36 = *((char *)v35 + 23);
      if ((v36 & 0x80000000) == 0)
      {
        if (v36 != 33) {
          goto LABEL_111;
        }
LABEL_110:
        if (!memcmp(v35, "google.protobuf.bridge.MessageSet", 0x21uLL)) {
          goto LABEL_4;
        }
        goto LABEL_111;
      }
      if (v35[1] == 33)
      {
        int v35 = (void *)*v35;
        goto LABEL_110;
      }
    }
LABEL_111:
    uint64_t v65 = (const std::string::value_type *)*((void *)a2 + 1);
    std::string::size_type v66 = *(void *)(v31 + 8);
    int v67 = *(char *)(v66 + 23);
    uint64_t v68 = *(void *)(v66 + 8);
    if (v67 < 0) {
      std::string::size_type v66 = *(void *)v66;
    }
    __dst[0].__r_.__value_.__r.__words[0] = v66;
    int v69 = v67;
    if (v67 < 0) {
      int v69 = v68;
    }
    LODWORD(__dst[0].__r_.__value_.__r.__words[1]) = v69;
    v136.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer(v32, &v136.__r_.__value_.__s.__data_[12], v18);
    LODWORD(v136.__r_.__value_.__r.__words[1]) = strlen(v136.__r_.__value_.__l.__data_);
    v135.__r_.__value_.__r.__words[0] = 0;
    LODWORD(v135.__r_.__value_.__r.__words[1]) = -1;
    v134.__r_.__value_.__r.__words[0] = 0;
    LODWORD(v134.__r_.__value_.__r.__words[1]) = -1;
    uint64_t v132 = 0;
    int v133 = -1;
    uint64_t v130 = 0;
    int v131 = -1;
    uint64_t v128 = 0;
    int v129 = -1;
    uint64_t v126 = 0;
    int v127 = -1;
    uint64_t v124 = 0;
    int v125 = -1;
    uint64_t v122 = 0;
    int v123 = -1;
    *(void *)&long long v116 = &v126;
    *((void *)&v116 + 1) = &v124;
    google::protobuf::strings::Substitute("\"$0\" does not declare $1 as an extension number.", (uint64_t)__dst, (uint64_t)&v136, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v132, (uint64_t)&v130, (uint64_t)&v128, &__p, v116, (uint64_t)&v122);
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v65, (uint64_t)a3, 1, (const std::string::value_type *)&__p);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    goto LABEL_4;
  }
  uint64_t v34 = (_DWORD *)(*(void *)(v17 + 72) + 4);
  while (*(v34 - 1) > (int)v32 || *v34 <= (int)v32)
  {
    v34 += 4;
    if (!--v33) {
      goto LABEL_41;
    }
  }
LABEL_4:
  if (*((void *)a2 + 11) && *((_DWORD *)a2 + 15) != 1) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 0, "Fields of oneofs must themselves have label LABEL_OPTIONAL.");
  }
  unsigned int v6 = *((_DWORD *)a3 + 4);
  if ((v6 & 4) == 0)
  {
    uint64_t v7 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v7)
    {
      v135.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
      {
        __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v135;
        __dst[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v134;
        v136.__r_.__value_.__r.__words[0] = (std::string::size_type)__dst;
        std::__call_once(v7, &v136, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    int v8 = *((_DWORD *)a2 + 14);
    if ((v8 & 0xFFFFFFFE) == 0xA) {
      goto LABEL_17;
    }
    uint64_t v9 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v9)
    {
      v135.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
      {
        __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v135;
        __dst[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v134;
        v136.__r_.__value_.__r.__words[0] = (std::string::size_type)__dst;
        std::__call_once(v9, &v136, (void (__cdecl *)(void *))sub_1000BB820);
      }
      int v8 = *((_DWORD *)a2 + 14);
    }
    if (v8 == 14) {
LABEL_17:
    }
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Field with message or enum type missing type_name.");
    goto LABEL_18;
  }
  unsigned int v21 = (v6 >> 3) & 1;
  if (*((_DWORD *)a3 + 22) == 14) {
    uint64_t v22 = 1;
  }
  else {
    uint64_t v22 = v21;
  }
  if (*((unsigned char *)*this + 43))
  {
    BOOL v23 = 0;
  }
  else
  {
    uint64_t v40 = (unsigned __int8 *)&google::protobuf::_FieldOptions_default_instance_;
    if (*((void *)a3 + 8)) {
      uint64_t v40 = (unsigned __int8 *)*((void *)a3 + 8);
    }
    BOOL v23 = v40[79] != 0;
  }
  if (*((unsigned char *)*this + 41)) {
    int v41 = v23;
  }
  else {
    int v41 = 1;
  }
  int Symbol = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)this, (std::string *)(*((void *)a3 + 5) & 0xFFFFFFFFFFFFFFFELL), *((void *)a2 + 1), v22, 1, v41);
  uint64_t v44 = v43;
  if (!Symbol)
  {
    if ((v41 & 1) == 0)
    {
      unint64_t v54 = *((void *)a3 + 5) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v54 + 23) < 0)
      {
        sub_1000BB834(__dst, *(void **)v54, *(void *)(v54 + 8));
      }
      else
      {
        long long v55 = *(_OWORD *)v54;
        __dst[0].__r_.__value_.__r.__words[2] = *(void *)(v54 + 16);
        *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_ = v55;
      }
      google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic(this[1]);
    }
    if (v23)
    {
      sub_1000BBA84(__dst, "google.protobuf.Empty");
      int Symbol = google::protobuf::DescriptorBuilder::FindSymbol((uint64_t)this, __dst, 1);
      uint64_t v44 = v46;
      if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst[0].__r_.__value_.__l.__data_);
      }
    }
    if (!Symbol)
    {
      google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, *((void *)a3 + 5) & 0xFFFFFFFFFFFFFFFELL);
      return;
    }
  }
  if ((*((unsigned char *)a3 + 17) & 4) == 0)
  {
    if (Symbol == 1)
    {
      int v45 = 11;
    }
    else
    {
      if (Symbol != 4)
      {
        uint64_t v62 = (const std::string::value_type *)*((void *)a2 + 1);
        std::operator+<char>();
        uint64_t v63 = std::string::append(&v136, "\" is not a type.");
        long long v64 = *(_OWORD *)&v63->__r_.__value_.__l.__data_;
        __dst[0].__r_.__value_.__r.__words[2] = v63->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_ = v64;
        v63->__r_.__value_.__l.__size_ = 0;
        v63->__r_.__value_.__r.__words[2] = 0;
        v63->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v62, (uint64_t)a3, 2, (const std::string::value_type *)__dst);
        goto LABEL_123;
      }
      int v45 = 14;
    }
    *((_DWORD *)a2 + 14) = v45;
  }
  std::string v56 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v56)
  {
    v135.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v134.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v56, memory_order_acquire) != -1)
    {
      __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v135;
      __dst[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v134;
      v136.__r_.__value_.__r.__words[0] = (std::string::size_type)__dst;
      std::__call_once(v56, &v136, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  int v57 = *((_DWORD *)a2 + 14);
  if ((v57 & 0xFFFFFFFE) != 0xA)
  {
    signed int v58 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v58)
    {
      v135.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
      v134.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
      if (atomic_load_explicit((atomic_ullong *volatile)v58, memory_order_acquire) != -1)
      {
        __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v135;
        __dst[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v134;
        v136.__r_.__value_.__r.__words[0] = (std::string::size_type)__dst;
        std::__call_once(v58, &v136, (void (__cdecl *)(void *))sub_1000BB820);
      }
      int v57 = *((_DWORD *)a2 + 14);
    }
    if (v57 != 14)
    {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Field with primitive type has type_name.");
      goto LABEL_18;
    }
    if (Symbol != 4)
    {
      long long v73 = (const std::string::value_type *)*((void *)a2 + 1);
      std::operator+<char>();
      v74 = std::string::append(&v136, "\" is not an enum type.");
      long long v75 = *(_OWORD *)&v74->__r_.__value_.__l.__data_;
      __dst[0].__r_.__value_.__r.__words[2] = v74->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_ = v75;
      v74->__r_.__value_.__l.__size_ = 0;
      v74->__r_.__value_.__r.__words[2] = 0;
      v74->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v73, (uint64_t)a3, 2, (const std::string::value_type *)__dst);
      goto LABEL_123;
    }
    *((void *)a2 + 14) = v44;
    if (*(unsigned char *)(google::protobuf::FieldDescriptor::enum_type(a2) + 40))
    {
      *((unsigned char *)a2 + 64) = 0;
    }
    else if (*((unsigned char *)a2 + 64))
    {
      if (google::protobuf::io::Tokenizer::IsIdentifier(*((void *)a3 + 6) & 0xFFFFFFFFFFFFFFFELL))
      {
        uint64_t v100 = *((void *)a3 + 6);
        uint64_t v101 = google::protobuf::FieldDescriptor::enum_type(a2);
        if (google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder((uint64_t)this, (std::string *)(v100 & 0xFFFFFFFFFFFFFFFELL), *(void *)(v101 + 8), 0, 1) == 5&& (uint64_t v103 = v102, v104 = *(void *)(v102 + 24), v104 == google::protobuf::FieldDescriptor::enum_type(a2)))
        {
          *((void *)a2 + 18) = v103;
        }
        else
        {
          v105 = (const std::string::value_type *)*((void *)a2 + 1);
          google::protobuf::FieldDescriptor::enum_type(a2);
          std::operator+<char>();
          v106 = std::string::append(&v134, "\" has no value named \"");
          long long v107 = *(_OWORD *)&v106->__r_.__value_.__l.__data_;
          v135.__r_.__value_.__r.__words[2] = v106->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v135.__r_.__value_.__l.__data_ = v107;
          v106->__r_.__value_.__l.__size_ = 0;
          v106->__r_.__value_.__r.__words[2] = 0;
          v106->__r_.__value_.__r.__words[0] = 0;
          unint64_t v108 = *((void *)a3 + 6) & 0xFFFFFFFFFFFFFFFELL;
          int v109 = *(char *)(v108 + 23);
          if (v109 >= 0) {
            v110 = (const std::string::value_type *)(*((void *)a3 + 6) & 0xFFFFFFFFFFFFFFFELL);
          }
          else {
            v110 = *(const std::string::value_type **)v108;
          }
          if (v109 >= 0) {
            std::string::size_type v111 = *(unsigned __int8 *)(v108 + 23);
          }
          else {
            std::string::size_type v111 = *(void *)(v108 + 8);
          }
          v112 = std::string::append(&v135, v110, v111);
          long long v113 = *(_OWORD *)&v112->__r_.__value_.__l.__data_;
          v136.__r_.__value_.__r.__words[2] = v112->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v136.__r_.__value_.__l.__data_ = v113;
          v112->__r_.__value_.__l.__size_ = 0;
          v112->__r_.__value_.__r.__words[2] = 0;
          v112->__r_.__value_.__r.__words[0] = 0;
          v114 = std::string::append(&v136, "\".");
          long long v115 = *(_OWORD *)&v114->__r_.__value_.__l.__data_;
          __dst[0].__r_.__value_.__r.__words[2] = v114->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_ = v115;
          v114->__r_.__value_.__l.__size_ = 0;
          v114->__r_.__value_.__r.__words[2] = 0;
          v114->__r_.__value_.__r.__words[0] = 0;
          google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v105, (uint64_t)a3, 4, (const std::string::value_type *)__dst);
          if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst[0].__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v136.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v135.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v135.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v134.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v134.__r_.__value_.__l.__data_);
          }
        }
      }
      else
      {
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 4, "Default value for an enum field must be an identifier.");
      }
LABEL_18:
      if (google::protobuf::FileDescriptorTables::AddFieldByNumber(this[11], a2))
      {
        if (*((unsigned char *)a2 + 67)
          && (google::protobuf::DescriptorPool::Tables::AddExtension((uint64_t **)this[1], a2) & 1) == 0)
        {
          uint64_t v11 = this[1];
          std::string::size_type v12 = *((unsigned int *)a2 + 17);
          __dst[0].__r_.__value_.__r.__words[0] = *((void *)a2 + 10);
          __dst[0].__r_.__value_.__l.__size_ = v12;
          uint64_t v13 = sub_1000D7B44((uint64_t)v11 + 384, (unint64_t *)__dst);
          if ((uint64_t *)((char *)v11 + 392) == v13) {
            uint64_t v15 = 0;
          }
          else {
            uint64_t v15 = v13[6];
          }
          uint64_t v70 = *((void *)a2 + 10);
          if (v70)
          {
            int v71 = *(long long **)(v70 + 8);
            if (*((char *)v71 + 23) < 0)
            {
              sub_1000BB834(&__p, *(void **)v71, *((void *)v71 + 1));
            }
            else
            {
              long long v72 = *v71;
              __p.__r_.__value_.__r.__words[2] = *((void *)v71 + 2);
              *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v72;
            }
          }
          else
          {
            sub_1000BBA84(&__p, "unknown");
          }
          __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer((google::protobuf *)*((unsigned int *)a2 + 17), &__dst[0].__r_.__value_.__s.__data_[12], v14);
          LODWORD(__dst[0].__r_.__value_.__r.__words[1]) = strlen(__dst[0].__r_.__value_.__l.__data_);
          int v77 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          p_p = &__p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          }
          v136.__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            int v77 = __p.__r_.__value_.__r.__words[1];
          }
          LODWORD(v136.__r_.__value_.__r.__words[1]) = v77;
          std::string::size_type v79 = *(void *)(v15 + 8);
          int v80 = *(char *)(v79 + 23);
          uint64_t v81 = *(void *)(v79 + 8);
          if (v80 < 0) {
            std::string::size_type v79 = *(void *)v79;
          }
          v135.__r_.__value_.__r.__words[0] = v79;
          int v82 = v80;
          if (v80 < 0) {
            int v82 = v81;
          }
          LODWORD(v135.__r_.__value_.__r.__words[1]) = v82;
          std::string::size_type v83 = **(void **)(v15 + 40);
          int v84 = *(char *)(v83 + 23);
          uint64_t v85 = *(void *)(v83 + 8);
          if (v84 < 0) {
            std::string::size_type v83 = *(void *)v83;
          }
          v134.__r_.__value_.__r.__words[0] = v83;
          int v86 = v84;
          if (v84 < 0) {
            int v86 = v85;
          }
          LODWORD(v134.__r_.__value_.__r.__words[1]) = v86;
          uint64_t v132 = 0;
          int v133 = -1;
          uint64_t v130 = 0;
          int v131 = -1;
          uint64_t v128 = 0;
          int v129 = -1;
          uint64_t v126 = 0;
          int v127 = -1;
          uint64_t v124 = 0;
          int v125 = -1;
          uint64_t v122 = 0;
          int v123 = -1;
          *(void *)&long long v117 = &v126;
          *((void *)&v117 + 1) = &v124;
          google::protobuf::strings::Substitute("Extension number $0 has already been used in \"$1\" by extension \"$2\" defined in $3.", (uint64_t)__dst, (uint64_t)&v136, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v132, (uint64_t)&v130, (uint64_t)&v128, &v120, v117, (uint64_t)&v122);
          google::protobuf::DescriptorBuilder::AddWarning((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 1, (const std::string::value_type *)&v120);
          goto LABEL_164;
        }
        return;
      }
      size_t v24 = (int8x8_t *)this[11];
      uint64_t v25 = *((void *)a2 + 10);
      int8x8_t v26 = v24[20];
      if (v26)
      {
        int v27 = *((_DWORD *)a2 + 17);
        unint64_t v28 = (16777619 * v27) ^ (16777499 * v25);
        uint8x8_t v29 = (uint8x8_t)vcnt_s8(v26);
        v29.i16[0] = vaddlv_u8(v29);
        if (v29.u32[0] > 1uLL)
        {
          uint64_t v30 = (16777619 * v27) ^ (16777499 * v25);
          if (v28 >= *(void *)&v26) {
            uint64_t v30 = v28 % *(void *)&v26;
          }
        }
        else
        {
          uint64_t v30 = v28 & (*(void *)&v26 - 1);
        }
        uint64_t v47 = *(uint64_t ***)(*(void *)&v24[19] + 8 * v30);
        if (v47)
        {
          for (uint64_t i = *v47; i; uint64_t i = (uint64_t *)*i)
          {
            unint64_t v49 = i[1];
            if (v28 == v49)
            {
              if (i[2] == v25 && *((_DWORD *)i + 6) == v27)
              {
                uint64_t v51 = (std::string::size_type *)i[4];
                if (!v25)
                {
LABEL_144:
                  sub_1000BBA84(&__p, "unknown");
LABEL_145:
                  int v87 = (const std::string::value_type *)*((void *)a2 + 1);
                  if (*((unsigned char *)a2 + 67))
                  {
                    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer((google::protobuf *)*((unsigned int *)a2 + 17), &__dst[0].__r_.__value_.__s.__data_[12], v10);
                    LODWORD(__dst[0].__r_.__value_.__r.__words[1]) = strlen(__dst[0].__r_.__value_.__l.__data_);
                    int v88 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                    int v89 = &__p;
                    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                      int v89 = (std::string *)__p.__r_.__value_.__r.__words[0];
                    }
                    v136.__r_.__value_.__r.__words[0] = (std::string::size_type)v89;
                    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                      int v88 = __p.__r_.__value_.__r.__words[1];
                    }
                    LODWORD(v136.__r_.__value_.__r.__words[1]) = v88;
                    std::string::size_type v90 = v51[1];
                    int v91 = *(char *)(v90 + 23);
                    uint64_t v92 = *(void *)(v90 + 8);
                    if (v91 < 0) {
                      std::string::size_type v90 = *(void *)v90;
                    }
                    v135.__r_.__value_.__r.__words[0] = v90;
                    int v93 = v91;
                    if (v91 < 0) {
                      int v93 = v92;
                    }
                    LODWORD(v135.__r_.__value_.__r.__words[1]) = v93;
                    v134.__r_.__value_.__r.__words[0] = 0;
                    LODWORD(v134.__r_.__value_.__r.__words[1]) = -1;
                    uint64_t v132 = 0;
                    int v133 = -1;
                    uint64_t v130 = 0;
                    int v131 = -1;
                    uint64_t v128 = 0;
                    int v129 = -1;
                    uint64_t v126 = 0;
                    int v127 = -1;
                    uint64_t v124 = 0;
                    int v125 = -1;
                    uint64_t v122 = 0;
                    int v123 = -1;
                    *(void *)&long long v118 = &v126;
                    *((void *)&v118 + 1) = &v124;
                    google::protobuf::strings::Substitute("Extension number $0 has already been used in \"$1\" by extension \"$2\".", (uint64_t)__dst, (uint64_t)&v136, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v132, (uint64_t)&v130, (uint64_t)&v128, &v120, v118, (uint64_t)&v122);
                    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v87, (uint64_t)a3, 1, (const std::string::value_type *)&v120);
                  }
                  else
                  {
                    __dst[0].__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FastInt32ToBuffer((google::protobuf *)*((unsigned int *)a2 + 17), &__dst[0].__r_.__value_.__s.__data_[12], v10);
                    LODWORD(__dst[0].__r_.__value_.__r.__words[1]) = strlen(__dst[0].__r_.__value_.__l.__data_);
                    int v94 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
                    long long v95 = &__p;
                    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                      long long v95 = (std::string *)__p.__r_.__value_.__r.__words[0];
                    }
                    v136.__r_.__value_.__r.__words[0] = (std::string::size_type)v95;
                    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
                      int v94 = __p.__r_.__value_.__r.__words[1];
                    }
                    LODWORD(v136.__r_.__value_.__r.__words[1]) = v94;
                    std::string::size_type v96 = *v51;
                    int v97 = *(char *)(*v51 + 23);
                    uint64_t v98 = *(void *)(*v51 + 8);
                    if (v97 < 0) {
                      std::string::size_type v96 = *(void *)*v51;
                    }
                    v135.__r_.__value_.__r.__words[0] = v96;
                    int v99 = v97;
                    if (v97 < 0) {
                      int v99 = v98;
                    }
                    LODWORD(v135.__r_.__value_.__r.__words[1]) = v99;
                    v134.__r_.__value_.__r.__words[0] = 0;
                    LODWORD(v134.__r_.__value_.__r.__words[1]) = -1;
                    uint64_t v132 = 0;
                    int v133 = -1;
                    uint64_t v130 = 0;
                    int v131 = -1;
                    uint64_t v128 = 0;
                    int v129 = -1;
                    uint64_t v126 = 0;
                    int v127 = -1;
                    uint64_t v124 = 0;
                    int v125 = -1;
                    uint64_t v122 = 0;
                    int v123 = -1;
                    *(void *)&long long v119 = &v126;
                    *((void *)&v119 + 1) = &v124;
                    google::protobuf::strings::Substitute("Field number $0 has already been used in \"$1\" by field \"$2\".", (uint64_t)__dst, (uint64_t)&v136, (uint64_t)&v135, (uint64_t)&v134, (uint64_t)&v132, (uint64_t)&v130, (uint64_t)&v128, &v120, v119, (uint64_t)&v122);
                    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v87, (uint64_t)a3, 1, (const std::string::value_type *)&v120);
                  }
LABEL_164:
                  if (SHIBYTE(v120.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(v120.__r_.__value_.__l.__data_);
                  }
                  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
                  {
                    v76 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_168:
                    operator delete(v76);
                  }
                  return;
                }
LABEL_81:
                uint64_t v52 = *(long long **)(v25 + 8);
                if (*((char *)v52 + 23) < 0)
                {
                  sub_1000BB834(&__p, *(void **)v52, *((void *)v52 + 1));
                }
                else
                {
                  long long v53 = *v52;
                  __p.__r_.__value_.__r.__words[2] = *((void *)v52 + 2);
                  *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v53;
                }
                goto LABEL_145;
              }
            }
            else
            {
              if (v29.u32[0] > 1uLL)
              {
                if (v49 >= *(void *)&v26) {
                  v49 %= *(void *)&v26;
                }
              }
              else
              {
                v49 &= *(void *)&v26 - 1;
              }
              if (v49 != v30) {
                break;
              }
            }
          }
        }
      }
      uint64_t v51 = 0;
      if (!v25) {
        goto LABEL_144;
      }
      goto LABEL_81;
    }
    if (*(int *)(google::protobuf::FieldDescriptor::enum_type(a2) + 44) >= 1) {
      *((void *)a2 + 18) = *(void *)(google::protobuf::FieldDescriptor::enum_type(a2) + 48);
    }
    goto LABEL_18;
  }
  if (Symbol == 1)
  {
    *((void *)a2 + 13) = v44;
    if (*((unsigned char *)a2 + 64)) {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 4, "Messages can't have default values.");
    }
    goto LABEL_18;
  }
  uint64_t v59 = (const std::string::value_type *)*((void *)a2 + 1);
  std::operator+<char>();
  uint64_t v60 = std::string::append(&v136, "\" is not a message type.");
  long long v61 = *(_OWORD *)&v60->__r_.__value_.__l.__data_;
  __dst[0].__r_.__value_.__r.__words[2] = v60->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__dst[0].__r_.__value_.__l.__data_ = v61;
  v60->__r_.__value_.__l.__size_ = 0;
  v60->__r_.__value_.__r.__words[2] = 0;
  v60->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v59, (uint64_t)a3, 2, (const std::string::value_type *)__dst);
LABEL_123:
  if (SHIBYTE(__dst[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__dst[0].__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v136.__r_.__value_.__r.__words[2]) < 0)
  {
    v76 = (void *)v136.__r_.__value_.__r.__words[0];
    goto LABEL_168;
  }
}

void sub_1000D1C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,void *__p,uint64_t a60,int a61,__int16 a62,char a63)
{
  if (*(char *)(v64 - 121) < 0) {
    operator delete(*(void **)(v64 - 144));
  }
  if (*(char *)(v64 - 169) < 0) {
    operator delete(*(void **)(v64 - 192));
  }
  if (*(char *)(v64 - 217) < 0) {
    operator delete(*(void **)(v64 - 240));
  }
  if (a64 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

google::protobuf::EnumOptions *google::protobuf::DescriptorBuilder::CrossLinkEnum(google::protobuf::EnumOptions *this, google::protobuf::EnumDescriptor *a2, const google::protobuf::EnumDescriptorProto *a3)
{
  if (!*((void *)a2 + 4))
  {
    this = (google::protobuf::EnumOptions *)google::protobuf::EnumOptions::default_instance(this);
    *((void *)a2 + 4) = this;
  }
  int v4 = *((_DWORD *)a2 + 11);
  if (v4 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 32;
    do
    {
      uint64_t v7 = *((void *)a2 + 6);
      if (!*(void *)(v7 + v6))
      {
        this = (google::protobuf::EnumOptions *)google::protobuf::EnumValueOptions::default_instance(this);
        *(void *)(v7 + v6) = this;
        int v4 = *((_DWORD *)a2 + 11);
      }
      ++v5;
      v6 += 40;
    }
    while (v5 < v4);
  }
  return this;
}

void google::protobuf::DescriptorBuilder::CrossLinkService(google::protobuf::DescriptorBuilder *this, google::protobuf::ServiceDescriptor *a2, const google::protobuf::ServiceDescriptorProto *a3)
{
  if (!*((void *)a2 + 3)) {
    *((void *)a2 + 3) = google::protobuf::ServiceOptions::default_instance(this);
  }
  if (*((int *)a2 + 10) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::CrossLinkMethod(this, (google::protobuf::MethodDescriptor *)(*((void *)a2 + 4) + v6), *(const google::protobuf::MethodDescriptorProto **)(*((void *)a3 + 5) + 8 * v7++ + 8));
      v6 += 104;
    }
    while (v7 < *((int *)a2 + 10));
  }
}

void google::protobuf::DescriptorBuilder::CrossLinkMethod(google::protobuf::DescriptorBuilder *this, google::protobuf::MethodDescriptor *a2, const google::protobuf::MethodDescriptorProto *a3)
{
  if (!*((void *)a2 + 11)) {
    *((void *)a2 + 11) = google::protobuf::MethodOptions::default_instance(this);
  }
  int v6 = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)this, (std::string *)(*((void *)a3 + 4) & 0xFFFFFFFFFFFFFFFELL), *((void *)a2 + 1), 0, 0, *(unsigned char *)(*(void *)this + 41) == 0);
  if (v6 == 1)
  {
    google::protobuf::internal::LazyDescriptor::Set((google::protobuf::MethodDescriptor *)((char *)a2 + 24), v7);
  }
  else if (v6)
  {
    uint64_t v10 = (const std::string::value_type *)*((void *)a2 + 1);
    std::operator+<char>();
    uint64_t v11 = std::string::append(&v21, "\" is not a message type.");
    long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
    std::string::size_type v23 = v11->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v12;
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v10, (uint64_t)a3, 5, (const std::string::value_type *)__p);
    if (SHIBYTE(v23) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v9 = *((void *)a3 + 4);
    if (*(unsigned char *)(*(void *)this + 41))
    {
      sub_1000BB974(v24, (uint64_t *)(v9 & 0xFFFFFFFFFFFFFFFELL), v8);
      google::protobuf::internal::LazyDescriptor::SetLazy((void *)a2 + 3, v24[0], v24[1], *((void *)this + 10));
    }
    google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 5, v9 & 0xFFFFFFFFFFFFFFFELL);
  }
  int v13 = google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)this, (std::string *)(*((void *)a3 + 5) & 0xFFFFFFFFFFFFFFFELL), *((void *)a2 + 1), 0, 0, *(unsigned char *)(*(void *)this + 41) == 0);
  if (v13 == 1)
  {
    google::protobuf::internal::LazyDescriptor::Set((google::protobuf::MethodDescriptor *)((char *)a2 + 56), v14);
  }
  else if (v13)
  {
    uint64_t v17 = (const std::string::value_type *)*((void *)a2 + 1);
    std::operator+<char>();
    int v18 = std::string::append(&v21, "\" is not a message type.");
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    std::string::size_type v23 = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v17, (uint64_t)a3, 6, (const std::string::value_type *)__p);
    if (SHIBYTE(v23) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    uint64_t v16 = *((void *)a3 + 5);
    if (*(unsigned char *)(*(void *)this + 41))
    {
      sub_1000BB974(v20, (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFELL), v15);
      google::protobuf::internal::LazyDescriptor::SetLazy((void *)a2 + 7, v20[0], v20[1], *((void *)this + 10));
    }
    google::protobuf::DescriptorBuilder::AddNotDefinedError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 6, v16 & 0xFFFFFFFFFFFFFFFELL);
  }
}

void sub_1000D20FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a17 < 0) {
    operator delete(a12);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::LazyDescriptor::SetLazy(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (*a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7414);
    int v8 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: !descriptor_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  if (a1[3])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7415);
    uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: !file_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  if (a1[1])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7416);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: !name_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  if (a1[2])
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7417);
    uint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: !once_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v11->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  if (!a4 || (uint64_t v12 = *(void *)(a4 + 16)) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7418);
    int v13 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: file && file->pool_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v13->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
    uint64_t v12 = *(void *)(a4 + 16);
  }
  if (!*(unsigned char *)(v12 + 41))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7419);
    int v14 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: file->pool_->lazily_build_dependencies_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v14->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  if (*(unsigned char *)(a4 + 65))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7420);
    uint64_t v15 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: !file->finished_building_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v15->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  a1[3] = a4;
  google::protobuf::DescriptorPool::Tables::AllocateString(*(void *)(*(void *)(a4 + 16) + 32), a2, a3);
}

void sub_1000D2384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::LazyDescriptor::Set(google::protobuf::internal::LazyDescriptor *this, const google::protobuf::Descriptor *a2)
{
  if (*((void *)this + 1))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7405);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !name_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*((void *)this + 2))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7406);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !once_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (*((void *)this + 3))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7407);
    int v6 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: !file_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  *(void *)this = a2;
}

void sub_1000D24C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateMessageOptions(std::once_flag::_State_type *this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (const std::string::value_type **)(*((void *)a2 + 5) + v6), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 5) + 8 * v7++ + 8));
      v6 += 152;
    }
    while (v7 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 29) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateMessageOptions((google::protobuf::DescriptorBuilder *)this, (google::protobuf::Descriptor *)(*((void *)a2 + 7) + v8), *(const google::protobuf::DescriptorProto **)(*((void *)a3 + 8) + 8 * v9++ + 8));
      v8 += 144;
    }
    while (v9 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateEnumOptions((google::protobuf::DescriptorBuilder *)this, (google::protobuf::EnumDescriptor *)(*((void *)a2 + 8) + v10), *(const google::protobuf::EnumDescriptorProto **)(*((void *)a3 + 11) + 8 * v11++ + 8));
      v10 += 80;
    }
    while (v11 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 32) >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateFieldOptions(this, (const std::string::value_type **)(*((void *)a2 + 10) + v12), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 17) + 8 * v13++ + 8));
      v12 += 152;
    }
    while (v13 < *((int *)a2 + 32));
  }
  if (*(unsigned char *)(*((void *)a2 + 4) + 72)) {
    unint64_t v14 = 0x7FFFFFFFLL;
  }
  else {
    unint64_t v14 = 0x1FFFFFFFLL;
  }
  int v15 = *((_DWORD *)a2 + 31);
  if (v15 >= 1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 4;
    do
    {
      if ((uint64_t)(v14 + 1) < *(int *)(*((void *)a2 + 9) + v17))
      {
        int v18 = (const std::string::value_type *)*((void *)a2 + 1);
        uint64_t v19 = *(void *)(*((void *)a3 + 14) + 8 * v16 + 8);
        uint64_t v40 = google::protobuf::FastInt64ToBuffer(v14, v42, (char *)a3);
        int v41 = strlen(v40);
        uint64_t v38 = 0;
        int v39 = -1;
        uint64_t v36 = 0;
        int v37 = -1;
        uint64_t v34 = 0;
        int v35 = -1;
        uint64_t v32 = 0;
        int v33 = -1;
        uint64_t v30 = 0;
        int v31 = -1;
        uint64_t v28 = 0;
        int v29 = -1;
        uint64_t v26 = 0;
        int v27 = -1;
        uint64_t v24 = 0;
        int v25 = -1;
        uint64_t v22 = 0;
        int v23 = -1;
        *((void *)&v20 + 1) = &v24;
        *(void *)&long long v20 = &v26;
        google::protobuf::strings::Substitute("Extension numbers cannot be greater than $0.", (uint64_t)&v40, (uint64_t)&v38, (uint64_t)&v36, (uint64_t)&v34, (uint64_t)&v32, (uint64_t)&v30, (uint64_t)&v28, &__p, v20, (uint64_t)&v22);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v18, v19, 1, (const std::string::value_type *)&__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        int v15 = *((_DWORD *)a2 + 31);
      }
      ++v16;
      v17 += 16;
    }
    while (v16 < v15);
  }
}

void sub_1000D27BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateEnumOptions(google::protobuf::DescriptorBuilder *this, google::protobuf::EnumDescriptor *a2, const google::protobuf::EnumDescriptorProto *a3)
{
  uint64_t v6 = *((void *)a2 + 4);
  if ((*(unsigned char *)(v6 + 40) & 1) == 0 || !*(unsigned char *)(v6 + 72))
  {
    v42[1] = 0;
    int v41 = v42;
    v42[0] = 0;
    if (*((int *)a2 + 11) < 1)
    {
      uint64_t v34 = 0;
    }
    else
    {
      uint64_t v7 = 0;
      do
      {
        uint64_t v8 = *((void *)a2 + 6);
        uint64_t v9 = v8 + 40 * v7;
        int v12 = *(_DWORD *)(v9 + 16);
        uint64_t v11 = (int *)(v9 + 16);
        int v10 = v12;
        uint64_t v13 = v42[0];
        if (!v42[0]) {
          goto LABEL_14;
        }
        unint64_t v14 = v42;
        do
        {
          int v15 = (uint64_t *)v13;
          uint64_t v16 = v14;
          int v17 = *(_DWORD *)(v13 + 32);
          int v18 = (uint64_t *)(v13 + 8);
          if (v17 >= v10)
          {
            int v18 = v15;
            unint64_t v14 = v15;
          }
          uint64_t v13 = *v18;
        }
        while (v13);
        if (v14 == v42) {
          goto LABEL_14;
        }
        if (v17 < v10) {
          int v15 = v16;
        }
        if (v10 >= *((_DWORD *)v15 + 8))
        {
          std::operator+<char>();
          std::string v21 = std::string::append(&v36, "\" uses the same enum value as \"");
          long long v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
          v37.__r_.__value_.__r.__words[2] = v21->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v37.__r_.__value_.__l.__data_ = v22;
          v21->__r_.__value_.__l.__size_ = 0;
          v21->__r_.__value_.__r.__words[2] = 0;
          v21->__r_.__value_.__r.__words[0] = 0;
          int v35 = *v11;
          uint64_t v43 = &v35;
          int v23 = sub_1000E073C(&v41, &v35, (uint64_t)&unk_10017F9D8, &v43);
          uint64_t v26 = v23[5];
          uint64_t v24 = v23 + 5;
          int v25 = (const std::string::value_type *)v26;
          int v27 = *((char *)v24 + 23);
          if (v27 >= 0) {
            uint64_t v28 = (const std::string::value_type *)v24;
          }
          else {
            uint64_t v28 = v25;
          }
          if (v27 >= 0) {
            std::string::size_type v29 = *((unsigned __int8 *)v24 + 23);
          }
          else {
            std::string::size_type v29 = (std::string::size_type)v24[1];
          }
          uint64_t v30 = std::string::append(&v37, v28, v29);
          long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
          v38.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v31;
          v30->__r_.__value_.__l.__size_ = 0;
          v30->__r_.__value_.__r.__words[2] = 0;
          v30->__r_.__value_.__r.__words[0] = 0;
          uint64_t v32 = std::string::append(&v38, "\". If this is intended, set 'option allow_alias = true;' to the enum definition.");
          long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
          std::string::size_type v40 = v32->__r_.__value_.__r.__words[2];
          *(_OWORD *)std::string __p = v33;
          v32->__r_.__value_.__l.__size_ = 0;
          v32->__r_.__value_.__r.__words[2] = 0;
          v32->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v38.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v37.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v36.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v36.__r_.__value_.__l.__data_);
          }
          if (!*(unsigned char *)(*((void *)a2 + 4) + 72)) {
            google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), *(void *)(*((void *)a3 + 5) + 8 * v7 + 8), 1, (const std::string::value_type *)__p);
          }
          if (SHIBYTE(v40) < 0) {
            operator delete(__p[0]);
          }
        }
        else
        {
LABEL_14:
          uint64_t v19 = *(const std::string **)(v8 + 40 * v7 + 8);
          LODWORD(v38.__r_.__value_.__l.__data_) = v10;
          __p[0] = &v38;
          long long v20 = sub_1000E073C(&v41, (int *)&v38, (uint64_t)&unk_10017F9D8, (_DWORD **)__p);
          std::string::operator=((std::string *)(v20 + 5), v19);
        }
        ++v7;
      }
      while (v7 < *((int *)a2 + 11));
      uint64_t v34 = (char *)v42[0];
    }
    sub_1000E06D8((uint64_t)&v41, v34);
  }
}

void sub_1000D2A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36,char *a37)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  sub_1000E06D8((uint64_t)&a36, a37);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateServiceOptions(google::protobuf::FileOptions *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3)
  {
    uint64_t v7 = *(void **)(v3 + 136);
    if (v7 != google::protobuf::FileOptions::default_instance(a1) && *(_DWORD *)(*(void *)(v3 + 136) + 160) == 3)
    {
      uint64_t v8 = *(void *)(*(void *)(a2 + 16) + 136);
      if (*(unsigned char *)(v8 + 155) || *(unsigned char *)(v8 + 156))
      {
        uint64_t v9 = *(const std::string::value_type **)(a2 + 8);
        google::protobuf::DescriptorBuilder::AddError((uint64_t)a1, v9, a3, 0, "Files with optimize_for = LITE_RUNTIME cannot define services unless you set both options cc_generic_services and java_generic_services to false.");
      }
    }
  }
}

void google::protobuf::DescriptorBuilder::ValidateFieldOptions(std::once_flag::_State_type *this, const std::string::value_type **a2, const google::protobuf::FieldDescriptorProto *a3)
{
  uint64_t v5 = (google::protobuf::DescriptorBuilder *)this;
  if (*(unsigned char *)(*this + 41))
  {
    if (!a2) {
      return;
    }
    this = (std::once_flag::_State_type *)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
    if (!this) {
      return;
    }
  }
  if (a2[15][77])
  {
    this = (std::once_flag::_State_type *)a2[6];
    if (this)
    {
      long long v33 = a2;
      uint64_t v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)this, memory_order_acquire) != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v34;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v33;
        p_p = &__p;
        std::__call_once(this, &p_p, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    if (*((_DWORD *)a2 + 14) != 11) {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, a2[1], (uint64_t)a3, 2, "[lazy = true] can only be specified for submessage fields.");
    }
  }
  if (a2[15][76])
  {
    if (*((_DWORD *)a2 + 15) != 3) {
      goto LABEL_16;
    }
    this = (std::once_flag::_State_type *)a2[6];
    if (this)
    {
      long long v33 = a2;
      uint64_t v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)this, memory_order_acquire) != -1)
      {
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v34;
        __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v33;
        p_p = &__p;
        std::__call_once(this, &p_p, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    if ((*((_DWORD *)a2 + 14) - 13) >= 0xFFFFFFFC) {
LABEL_16:
    }
      google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, a2[1], (uint64_t)a3, 2, "[packed = true] can only be specified for repeated primitive fields.");
  }
  uint64_t v6 = a2[10];
  if (v6)
  {
    uint64_t v7 = (google::protobuf::DescriptorBuilder *)*((void *)v6 + 4);
    this = (std::once_flag::_State_type *)google::protobuf::MessageOptions::default_instance((google::protobuf::MessageOptions *)this);
    if (v7 != (google::protobuf::DescriptorBuilder *)this)
    {
      if (*(unsigned char *)(*((void *)a2[10] + 4) + 72))
      {
        if (!*((unsigned char *)a2 + 67))
        {
          uint64_t v8 = a2[1];
          uint64_t v9 = "MessageSets cannot have fields, only extensions.";
          uint64_t v10 = (uint64_t)v5;
          uint64_t v11 = a3;
          uint64_t v12 = 0;
          goto LABEL_28;
        }
        if (*((_DWORD *)a2 + 15) != 1) {
          goto LABEL_26;
        }
        this = (std::once_flag::_State_type *)a2[6];
        if (this)
        {
          long long v33 = a2;
          uint64_t v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)this, memory_order_acquire) != -1)
          {
            __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v34;
            __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v33;
            p_p = &__p;
            std::__call_once(this, &p_p, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        if (*((_DWORD *)a2 + 14) != 11)
        {
LABEL_26:
          uint64_t v8 = a2[1];
          uint64_t v9 = "Extensions of MessageSets must be optional messages.";
          uint64_t v10 = (uint64_t)v5;
          uint64_t v11 = a3;
          uint64_t v12 = 2;
LABEL_28:
          google::protobuf::DescriptorBuilder::AddError(v10, v8, (uint64_t)v11, v12, v9);
        }
      }
    }
  }
  uint64_t v13 = a2[5];
  if (v13)
  {
    unint64_t v14 = (google::protobuf::FileOptions *)*((void *)v13 + 17);
    int v15 = (google::protobuf::FileOptions *)google::protobuf::FileOptions::default_instance((google::protobuf::FileOptions *)this);
    if (v14 != v15 && *(_DWORD *)(*((void *)v13 + 17) + 160) == 3)
    {
      uint64_t v16 = a2[10];
      if (v16)
      {
        uint64_t v17 = *((void *)v16 + 2);
        if (!v17
          || (int v18 = *(void **)(v17 + 136), v18 == google::protobuf::FileOptions::default_instance(v15))
          || *(_DWORD *)(*(void *)(v17 + 136) + 160) != 3)
        {
          google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, a2[1], (uint64_t)a3, 3, "Extensions to non-lite types can only be declared in non-lite files.  Note that you cannot extend a non-lite type to contain a lite type, but the reverse is allowed.");
        }
      }
    }
  }
  uint64_t v19 = (std::once_flag::_State_type *)a2[6];
  if (v19)
  {
    long long v33 = a2;
    uint64_t v34 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v34;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v33;
      p_p = &__p;
      std::__call_once(v19, &p_p, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (*((_DWORD *)a2 + 14) == 11
    && *(unsigned char *)(*((void *)a2[13] + 4) + 75)
    && (google::protobuf::DescriptorBuilder::ValidateMapEntry(v5, a2, a3) & 1) == 0)
  {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, a2[1], (uint64_t)a3, 2, "map_entry should not be set explicitly. Use map<KeyType, ValueType> instead.");
  }
  google::protobuf::DescriptorBuilder::ValidateJSType(v5, (google::protobuf::FieldDescriptor *)a2, a3);
  if (*((unsigned char *)a2 + 67) && *((unsigned char *)a2 + 66))
  {
    long long v20 = a2[4];
    sub_1000CECEC((unsigned __int8 *)*a2, &__p);
    uint64_t v21 = *((unsigned __int8 *)v20 + 23);
    if ((v21 & 0x80u) == 0) {
      uint64_t v22 = *((unsigned __int8 *)v20 + 23);
    }
    else {
      uint64_t v22 = *((void *)v20 + 1);
    }
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    int v24 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if (v22 == size)
    {
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v25 = &__p;
      }
      else {
        int v25 = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((v21 & 0x80) != 0)
      {
        BOOL v30 = memcmp(*(const void **)v20, v25, *((void *)v20 + 1)) != 0;
        goto LABEL_67;
      }
      if (v20[23])
      {
        uint64_t v26 = v21 - 1;
        do
        {
          int v28 = *(unsigned __int8 *)v20++;
          int v27 = v28;
          int v29 = v25->__r_.__value_.__s.__data_[0];
          int v25 = (std::string *)((char *)v25 + 1);
          BOOL v30 = v27 != v29;
        }
        while (v27 == v29 && v26-- != 0);
LABEL_67:
        if ((v24 & 0x80000000) == 0) {
          goto LABEL_69;
        }
        goto LABEL_68;
      }
      BOOL v30 = 0;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      {
LABEL_69:
        if (v30) {
          google::protobuf::DescriptorBuilder::AddError((uint64_t)v5, a2[1], (uint64_t)a3, 7, "option json_name is not allowed on extension fields.");
        }
        return;
      }
    }
    else
    {
      BOOL v30 = 1;
      if ((SHIBYTE(__p.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_69;
      }
    }
LABEL_68:
    operator delete(__p.__r_.__value_.__l.__data_);
    goto LABEL_69;
  }
}

void google::protobuf::DescriptorBuilder::ValidateProto3(google::protobuf::DescriptorBuilder *this, google::protobuf::FileDescriptor *a2, const google::protobuf::FileDescriptorProto *a3)
{
  if (*((int *)a2 + 14) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Field(this, (google::protobuf::FieldDescriptor *)(*((void *)a2 + 16) + v6), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 17) + 8 * v7++ + 8));
      v6 += 152;
    }
    while (v7 < *((int *)a2 + 14));
  }
  if (*((int *)a2 + 11) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Message(this, (google::protobuf::Descriptor *)(*((void *)a2 + 13) + v8), *(const google::protobuf::DescriptorProto **)(*((void *)a3 + 8) + 8 * v9++ + 8));
      v8 += 144;
    }
    while (v9 < *((int *)a2 + 11));
  }
  if (*((int *)a2 + 12) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Enum(this, (const std::string::value_type **)(*((void *)a2 + 14) + v10), *(const google::protobuf::EnumDescriptorProto **)(*((void *)a3 + 11) + 8 * v11++ + 8));
      v10 += 80;
    }
    while (v11 < *((int *)a2 + 12));
  }
}

void google::protobuf::DescriptorBuilder::ValidateProto3Field(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  if (*((unsigned char *)a2 + 67))
  {
    uint64_t v6 = *(const void ***)(*((void *)a2 + 10) + 8);
    if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBA20, memory_order_acquire) & 1) == 0
      && __cxa_guard_acquire(&qword_1001EBA20))
    {
      sub_1000D8ED8();
    }
    if (qword_1001EBA18 + 8 == sub_1000D9338(qword_1001EBA18, v6)) {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 3, "Extensions in proto3 are only allowed for defining options.");
    }
  }
  if (*((_DWORD *)a2 + 15) == 2) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Required fields are not allowed in proto3.");
  }
  if (*((unsigned char *)a2 + 64)) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 4, "Explicit default values are not allowed in proto3.");
  }
  uint64_t v7 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v7)
  {
    v21.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v20.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      *(void *)&long long v23 = &v21;
      *((void *)&v23 + 1) = &v20;
      v22.__r_.__value_.__r.__words[0] = (std::string::size_type)&v23;
      std::__call_once(v7, &v22, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (*((_DWORD *)a2 + 14) == 14
    && google::protobuf::FieldDescriptor::enum_type(a2)
    && *(_DWORD *)(*(void *)(google::protobuf::FieldDescriptor::enum_type(a2) + 16) + 60) != 3
    && *(_DWORD *)(*(void *)(google::protobuf::FieldDescriptor::enum_type(a2) + 16) + 60))
  {
    uint64_t v8 = (const std::string::value_type *)*((void *)a2 + 1);
    google::protobuf::FieldDescriptor::enum_type(a2);
    std::operator+<char>();
    uint64_t v9 = std::string::append(&v20, "\" is not a proto3 enum, but is used in \"");
    long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
    v21.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v10;
    v9->__r_.__value_.__l.__size_ = 0;
    v9->__r_.__value_.__r.__words[2] = 0;
    v9->__r_.__value_.__r.__words[0] = 0;
    uint64_t v11 = *(void *)(*((void *)a2 + 10) + 8);
    int v12 = *(char *)(v11 + 23);
    if (v12 >= 0) {
      uint64_t v13 = *(const std::string::value_type **)(*((void *)a2 + 10) + 8);
    }
    else {
      uint64_t v13 = *(const std::string::value_type **)v11;
    }
    if (v12 >= 0) {
      std::string::size_type v14 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      std::string::size_type v14 = *(void *)(v11 + 8);
    }
    int v15 = std::string::append(&v21, v13, v14);
    long long v16 = *(_OWORD *)&v15->__r_.__value_.__l.__data_;
    v22.__r_.__value_.__r.__words[2] = v15->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v22.__r_.__value_.__l.__data_ = v16;
    v15->__r_.__value_.__l.__size_ = 0;
    v15->__r_.__value_.__r.__words[2] = 0;
    v15->__r_.__value_.__r.__words[0] = 0;
    uint64_t v17 = std::string::append(&v22, "\" which is a proto3 message type.");
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    std::string::size_type v24 = v17->__r_.__value_.__r.__words[2];
    long long v23 = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v8, (uint64_t)a3, 2, (const std::string::value_type *)&v23);
    if (SHIBYTE(v24) < 0) {
      operator delete((void *)v23);
    }
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v21.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v20.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v19 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v19)
  {
    v21.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v20.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
    {
      *(void *)&long long v23 = &v21;
      *((void *)&v23 + 1) = &v20;
      v22.__r_.__value_.__r.__words[0] = (std::string::size_type)&v23;
      std::__call_once(v19, &v22, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (*((_DWORD *)a2 + 14) == 10) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "Groups are not supported in proto3 syntax.");
  }
}

void sub_1000D3420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
}

void google::protobuf::DescriptorBuilder::ValidateProto3Message(google::protobuf::DescriptorBuilder *this, google::protobuf::Descriptor *a2, const google::protobuf::DescriptorProto *a3)
{
  if (*((int *)a2 + 29) >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Message(this, (google::protobuf::Descriptor *)(*((void *)a2 + 7) + v6), *(const google::protobuf::DescriptorProto **)(*((void *)a3 + 8) + 8 * v7++ + 8));
      v6 += 144;
    }
    while (v7 < *((int *)a2 + 29));
  }
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Enum(this, (const std::string::value_type **)(*((void *)a2 + 8) + v8), *(const google::protobuf::EnumDescriptorProto **)(*((void *)a3 + 11) + 8 * v9++ + 8));
      v8 += 80;
    }
    while (v9 < *((int *)a2 + 30));
  }
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Field(this, (google::protobuf::FieldDescriptor *)(*((void *)a2 + 5) + v10), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 5) + 8 * v11++ + 8));
      v10 += 152;
    }
    while (v11 < *((int *)a2 + 26));
  }
  if (*((int *)a2 + 32) >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    do
    {
      google::protobuf::DescriptorBuilder::ValidateProto3Field(this, (google::protobuf::FieldDescriptor *)(*((void *)a2 + 10) + v12), *(const google::protobuf::FieldDescriptorProto **)(*((void *)a3 + 17) + 8 * v13++ + 8));
      v12 += 152;
    }
    while (v13 < *((int *)a2 + 32));
  }
  if (*((int *)a2 + 31) > 0) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), *(void *)(*((void *)a3 + 14) + 8), 1, "Extension ranges are not allowed in proto3.");
  }
  if (*(unsigned char *)(*((void *)a2 + 4) + 72)) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 0, "MessageSet is not supported in proto3.");
  }
  v45[0] = 0;
  v45[1] = 0;
  uint64_t v44 = v45;
  if (*((int *)a2 + 26) < 1)
  {
    std::string v36 = 0;
  }
  else
  {
    uint64_t v14 = 0;
    do
    {
      int v15 = *(unsigned __int8 **)(*((void *)a2 + 5) + 152 * v14);
      memset(&v43, 0, sizeof(v43));
      int v16 = (char)v15[23];
      if (v16 >= 0) {
        uint64_t v17 = v15;
      }
      else {
        uint64_t v17 = *(unsigned __int8 **)v15;
      }
      if (v16 >= 0) {
        uint64_t v18 = v15[23];
      }
      else {
        uint64_t v18 = *((void *)v15 + 1);
      }
      for (; v18; --v18)
      {
        int v19 = *v17;
        if (v19 != 95)
        {
          if ((v19 - 65) < 0x1A) {
            LOBYTE(v19) = v19 + 32;
          }
          std::string::push_back(&v43, v19);
        }
        ++v17;
      }
      if (v45 == (void *)sub_1000D9338((uint64_t)&v44, (const void **)&v43.__r_.__value_.__l.__data_))
      {
        uint64_t v35 = *((void *)a2 + 5);
        __p[0] = &v43;
        sub_1000DF4C8(&v44, (const void **)&v43.__r_.__value_.__l.__data_, (uint64_t)&unk_10017F9D8, (long long **)__p)[7] = v35 + 152 * v14;
      }
      else
      {
        std::string v20 = (const std::string::value_type *)*((void *)a2 + 1);
        uint64_t v21 = *(void *)(*((void *)a3 + 5) + 8 * v14 + 8);
        std::operator+<char>();
        std::string v22 = std::string::append(&v37, "\" conflicts with field \"");
        long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
        v38.__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v38.__r_.__value_.__l.__data_ = v23;
        v22->__r_.__value_.__l.__size_ = 0;
        v22->__r_.__value_.__r.__words[2] = 0;
        v22->__r_.__value_.__r.__words[0] = 0;
        uint64_t v46 = &v43;
        std::string::size_type v24 = sub_1000DF4C8(&v44, (const void **)&v43.__r_.__value_.__l.__data_, (uint64_t)&unk_10017F9D8, (long long **)&v46);
        uint64_t v25 = *(void *)v24[7];
        int v26 = *(char *)(v25 + 23);
        if (v26 >= 0) {
          int v27 = *(const std::string::value_type **)v24[7];
        }
        else {
          int v27 = *(const std::string::value_type **)v25;
        }
        if (v26 >= 0) {
          std::string::size_type v28 = *(unsigned __int8 *)(v25 + 23);
        }
        else {
          std::string::size_type v28 = *(void *)(v25 + 8);
        }
        int v29 = std::string::append(&v38, v27, v28);
        long long v30 = *(_OWORD *)&v29->__r_.__value_.__l.__data_;
        v39.__r_.__value_.__r.__words[2] = v29->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v39.__r_.__value_.__l.__data_ = v30;
        v29->__r_.__value_.__l.__size_ = 0;
        v29->__r_.__value_.__r.__words[2] = 0;
        v29->__r_.__value_.__r.__words[0] = 0;
        long long v31 = std::string::append(&v39, "\". This is not ");
        long long v32 = *(_OWORD *)&v31->__r_.__value_.__l.__data_;
        v40.__r_.__value_.__r.__words[2] = v31->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v40.__r_.__value_.__l.__data_ = v32;
        v31->__r_.__value_.__l.__size_ = 0;
        v31->__r_.__value_.__r.__words[2] = 0;
        v31->__r_.__value_.__r.__words[0] = 0;
        long long v33 = std::string::append(&v40, "allowed in proto3.");
        long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
        std::string::size_type v42 = v33->__r_.__value_.__r.__words[2];
        *(_OWORD *)std::string __p = v34;
        v33->__r_.__value_.__l.__size_ = 0;
        v33->__r_.__value_.__r.__words[2] = 0;
        v33->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v20, v21, 0, (const std::string::value_type *)__p);
        if (SHIBYTE(v42) < 0) {
          operator delete(__p[0]);
        }
        if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v40.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v39.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v38.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v37.__r_.__value_.__l.__data_);
        }
      }
      if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v43.__r_.__value_.__l.__data_);
      }
      ++v14;
    }
    while (v14 < *((int *)a2 + 26));
    std::string v36 = (char *)v45[0];
  }
  sub_1000DD030((uint64_t)&v44, v36);
}

void sub_1000D38BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,void *__p,uint64_t a44,int a45,__int16 a46,char a47,char a48)
{
  if (a48 < 0) {
    operator delete(__p);
  }
  sub_1000DD030(v48 - 128, *(char **)(v48 - 120));
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::ValidateProto3Enum(google::protobuf::DescriptorBuilder *this, const std::string::value_type **a2, const google::protobuf::EnumDescriptorProto *a3)
{
  if (*((int *)a2 + 11) >= 1)
  {
    if (*((_DWORD *)a2[6] + 4)) {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, a2[1], *(void *)(*((void *)a3 + 5) + 8), 1, "The first enum value must be zero in proto3.");
    }
  }
}

uint64_t google::protobuf::DescriptorBuilder::ValidateMapEntry(google::protobuf::DescriptorBuilder *this, const std::string::value_type **a2, const google::protobuf::FieldDescriptorProto *a3)
{
  uint64_t v6 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
  if (*(_DWORD *)(v6 + 128)) {
    return 0;
  }
  if (*((_DWORD *)a2 + 15) != 3) {
    return 0;
  }
  uint64_t v7 = (void *)v6;
  if (*(_DWORD *)(v6 + 124) || *(_DWORD *)(v6 + 116) || *(_DWORD *)(v6 + 120) || *(_DWORD *)(v6 + 104) != 2) {
    return 0;
  }
  uint64_t v8 = *(unsigned __int8 **)v6;
  sub_1000CEBD4((unsigned __int8 *)*a2, 0, &v22);
  uint64_t v9 = std::string::append(&v22, "Entry");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  std::string::size_type v24 = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)std::string __p = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  BOOL v11 = sub_1000CF940(v8, (unsigned __int8 *)__p) || a2[10] != (const std::string::value_type *)v7[3];
  if (SHIBYTE(v24) < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  if (v11) {
    return 0;
  }
  if (*(unsigned char *)(v7[4] + 75))
  {
    uint64_t v12 = (_DWORD *)v7[5];
    uint64_t v13 = (google::protobuf::FieldDescriptor *)(v12 + 38);
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  if (v12[15] != 1 || v12[17] != 1) {
    return 0;
  }
  uint64_t v14 = *(unsigned __int16 **)v12;
  int v15 = *(char *)(*(void *)v12 + 23);
  if (v15 < 0)
  {
    if (*((void *)v14 + 1) != 3) {
      return 0;
    }
    uint64_t v14 = *(unsigned __int16 **)v14;
  }
  else if (v15 != 3)
  {
    return 0;
  }
  int v16 = *v14;
  int v17 = *((unsigned __int8 *)v14 + 2);
  if (v16 != 25963 || v17 != 121) {
    return 0;
  }
  if (*((_DWORD *)v13 + 15) != 1) {
    return 0;
  }
  uint64_t v21 = v13;
  if (*((_DWORD *)v13 + 17) != 2 || sub_1000D3D50(*(void **)v13, "value")) {
    return 0;
  }
  unsigned int v20 = sub_1000BF23C((uint64_t)v12) - 1;
  if (v20 <= 0xD && ((0x2E03u >> v20) & 1) != 0) {
    google::protobuf::DescriptorBuilder::AddError((uint64_t)this, a2[1], (uint64_t)a3, 2, off_1001CF1E8[v20]);
  }
  if (sub_1000BF23C((uint64_t)v21) == 14)
  {
    if (*(_DWORD *)(*(void *)(google::protobuf::FieldDescriptor::enum_type(v21) + 48) + 16)) {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, a2[1], (uint64_t)a3, 2, "Enum value in map must define 0 as the first value.");
    }
  }
  return 1;
}

void sub_1000D3BE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::ValidateJSType(google::protobuf::DescriptorBuilder *this, google::protobuf::FieldDescriptor *a2, const google::protobuf::FieldDescriptorProto *a3)
{
  unsigned int v3 = *(_DWORD *)(*((void *)a2 + 15) + 80);
  if (v3)
  {
    uint64_t v7 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v7)
    {
      int v15 = a2;
      int v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
      {
        __p[0] = &v16;
        __p[1] = &v15;
        int v17 = __p;
        std::__call_once(v7, &v17, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    unsigned int v8 = *((_DWORD *)a2 + 14);
    BOOL v9 = v8 > 0x12;
    int v10 = (1 << v8) & 0x50058;
    if (v9 || v10 == 0)
    {
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, *((const std::string::value_type **)a2 + 1), (uint64_t)a3, 2, "jstype is only allowed on int64, uint64, sint64, fixed64 or sfixed64 fields.");
    }
    else if (v3 >= 3)
    {
      uint64_t v12 = (const std::string::value_type *)*((void *)a2 + 1);
      google::protobuf::FieldOptions_JSType_descriptor((google::protobuf *)v7);
      std::operator+<char>();
      google::protobuf::DescriptorBuilder::AddError((uint64_t)this, v12, (uint64_t)a3, 2, (const std::string::value_type *)__p);
      if (v14 < 0) {
        operator delete(__p[0]);
      }
    }
  }
}

void sub_1000D3D34(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1000D3D50(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (*((char *)a1 + 23) < 0)
  {
    if (v4 == a1[1])
    {
      if (v4 == -1) {
        goto LABEL_10;
      }
      a1 = (void *)*a1;
      return memcmp(a1, __s, v4) != 0;
    }
  }
  else if (v4 == *((unsigned __int8 *)a1 + 23))
  {
    if (v4 == -1) {
LABEL_10:
    }
      sub_1000D97B8();
    return memcmp(a1, __s, v4) != 0;
  }
  return 1;
}

google::protobuf::DescriptorBuilder::OptionInterpreter *google::protobuf::DescriptorBuilder::OptionInterpreter::OptionInterpreter(google::protobuf::DescriptorBuilder::OptionInterpreter *this, google::protobuf::DescriptorBuilder *a2)
{
  *(void *)this = a2;
  *((void *)this + 4) = 0;
  *((void *)this + 3) = (char *)this + 32;
  *((void *)this + 7) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = (char *)this + 56;
  *((void *)this + 8) = 0;
  google::protobuf::DynamicMessageFactory::DynamicMessageFactory((google::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 72));
  if (!*(void *)this)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 6378);
    unsigned int v3 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: builder_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v3->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
  }
  return this;
}

void sub_1000D3E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory(v5);
  sub_1000E08B8(v4, *v7);
  sub_1000E0804(v3, *v6);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::~OptionInterpreter(google::protobuf::DescriptorBuilder::OptionInterpreter *this)
{
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::InterpretSingleOption(uint64_t *a1, const google::protobuf::Message *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1[2];
  if (!*(_DWORD *)(v5 + 32))
  {
    sub_1000BBA84(v117, "Option must have a name.");
    google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, (const std::string::value_type *)v117);
LABEL_98:
    if (SHIBYTE(v118) < 0) {
      operator delete(*(void **)v117);
    }
    return 0;
  }
  unint64_t v8 = *(void *)(*(void *)(*(void *)(v5 + 40) + 8) + 24) & 0xFFFFFFFFFFFFFFFELL;
  int v9 = *(char *)(v8 + 23);
  if (v9 < 0)
  {
    if (*(void *)(v8 + 8) != 20) {
      goto LABEL_15;
    }
    unint64_t v8 = *(void *)v8;
  }
  else if (v9 != 20)
  {
    goto LABEL_15;
  }
  unint64_t v10 = *(void *)v8;
  uint64_t v11 = *(void *)(v8 + 8);
  int v12 = *(_DWORD *)(v8 + 16);
  if (v10 == 0x707265746E696E75 && v11 == 0x706F5F6465746572 && v12 == 1852795252)
  {
    sub_1000BBA84(v117, "Option must not use reserved name \"uninterpreted_option\".");
    google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, (const std::string::value_type *)v117);
    goto LABEL_98;
  }
LABEL_15:
  int v15 = (uint64_t *)*a1;
  uint64_t v16 = (*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  if (google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(v15, *(uint64_t **)(v16 + 8), 1) == 1)
  {
    uint64_t v18 = v17;
    if (!v17) {
      goto LABEL_19;
    }
  }
  else
  {
    uint64_t v18 = (const std::string::value_type **)(*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    if (!v18)
    {
LABEL_19:
      int v19 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)v117, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 6502);
      unsigned int v20 = google::protobuf::internal::LogMessage::operator<<(v19, "CHECK failed: options_descriptor: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v103, (const char **)&v20->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)v117);
    }
  }
  long long v113 = 0;
  v114 = 0;
  long long v115 = 0;
  sub_1000BBA84(&__str, "");
  std::string __p = 0;
  v110 = 0;
  std::string::size_type v111 = 0;
  sub_1000DD97C(&__p, *(const void **)a4, *(void *)(a4 + 8), (uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 2);
  if (*(int *)(a1[2] + 32) < 1)
  {
    uint64_t v22 = 0;
LABEL_94:
    if (*(_DWORD *)(v22 + 60) == 3
      || (uint64_t v62 = v113,
          uint64_t v63 = v114,
          (*(void (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2),
          unint64_t UnknownFields = google::protobuf::Reflection::GetUnknownFields(v64, a2),
          google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v62, v63, v22, (uint64_t)&__str, UnknownFields)))
    {
      operator new();
    }
    goto LABEL_162;
  }
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  while (1)
  {
    uint64_t v23 = *a1;
    if (*(char *)(*a1 + 199) < 0)
    {
      **(unsigned char **)(v23 + 176) = 0;
      *(void *)(v23 + 184) = 0;
    }
    else
    {
      *(unsigned char *)(v23 + 176) = 0;
      *(unsigned char *)(v23 + 199) = 0;
    }
    uint64_t v24 = *(void *)(*(void *)(a1[2] + 40) + 8 * v21 + 8);
    uint64_t v25 = *(void *)(v24 + 24);
    std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type size = __str.__r_.__value_.__l.__size_;
    }
    if (size)
    {
      std::string::append(&__str, ".");
      uint64_t v24 = *(void *)(*(void *)(a1[2] + 40) + 8 * v21 + 8);
    }
    unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFELL;
    if (*(unsigned char *)(v24 + 32)) {
      break;
    }
    int v34 = *(char *)(v27 + 23);
    if (v34 >= 0) {
      uint64_t v35 = (const std::string::value_type *)v27;
    }
    else {
      uint64_t v35 = *(const std::string::value_type **)v27;
    }
    if (v34 >= 0) {
      std::string::size_type v36 = *(unsigned __int8 *)(v27 + 23);
    }
    else {
      std::string::size_type v36 = *(void *)(v27 + 8);
    }
    std::string::append(&__str, v35, v36);
    FieldByName = (google::protobuf::DescriptorBuilder::OptionInterpreter *)google::protobuf::Descriptor::FindFieldByName((uint64_t)v18, (uint64_t *)v27, v37);
    uint64_t v22 = (uint64_t)FieldByName;
    if (!FieldByName) {
      goto LABEL_101;
    }
LABEL_51:
    uint64_t v38 = *(void *)(v22 + 80);
    if ((const std::string::value_type **)v38 != v18)
    {
      if (!v38 || !*(unsigned char *)(v38 + 140))
      {
        std::operator+<char>();
        int v69 = std::string::append(&v107, "\" is not a field or extension of message \"");
        long long v70 = *(_OWORD *)&v69->__r_.__value_.__l.__data_;
        v108.__r_.__value_.__r.__words[2] = v69->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v108.__r_.__value_.__l.__data_ = v70;
        v69->__r_.__value_.__l.__size_ = 0;
        v69->__r_.__value_.__r.__words[2] = 0;
        v69->__r_.__value_.__r.__words[0] = 0;
        int v71 = (*v18)[23];
        if (v71 >= 0) {
          long long v72 = *v18;
        }
        else {
          long long v72 = *(const std::string::value_type **)*v18;
        }
        if (v71 >= 0) {
          std::string::size_type v73 = *((unsigned __int8 *)*v18 + 23);
        }
        else {
          std::string::size_type v73 = *((void *)*v18 + 1);
        }
        v74 = std::string::append(&v108, v72, v73);
        long long v75 = *(_OWORD *)&v74->__r_.__value_.__l.__data_;
        v103.__r_.__value_.__r.__words[2] = v74->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v103.__r_.__value_.__l.__data_ = v75;
        v74->__r_.__value_.__l.__size_ = 0;
        v74->__r_.__value_.__r.__words[2] = 0;
        v74->__r_.__value_.__r.__words[0] = 0;
        v76 = std::string::append(&v103, "\".");
        long long v77 = *(_OWORD *)&v76->__r_.__value_.__l.__data_;
        int64_t v118 = v76->__r_.__value_.__r.__words[2];
        *(_OWORD *)long long v117 = v77;
        v76->__r_.__value_.__l.__size_ = 0;
        v76->__r_.__value_.__r.__words[2] = 0;
        v76->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, (const std::string::value_type *)v117);
        if (SHIBYTE(v118) < 0) {
          operator delete(*(void **)v117);
        }
        if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v103.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v108.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v78 = (void *)v107.__r_.__value_.__r.__words[0];
          goto LABEL_161;
        }
        goto LABEL_162;
      }
LABEL_106:
      google::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting(FieldByName, (const google::protobuf::UninterpretedOption *)a1[2], a2);
      uint64_t v66 = 1;
      goto LABEL_163;
    }
    int v39 = *(_DWORD *)(v22 + 68);
    std::string v40 = v110;
    if (v110 >= v111)
    {
      std::string::size_type v42 = (char *)__p;
      uint64_t v43 = (v110 - (unsigned char *)__p) >> 2;
      unint64_t v44 = v43 + 1;
      if ((unint64_t)(v43 + 1) >> 62) {
        sub_100078F84();
      }
      uint64_t v45 = v111 - (unsigned char *)__p;
      if ((v111 - (unsigned char *)__p) >> 1 > v44) {
        unint64_t v44 = v45 >> 1;
      }
      if ((unint64_t)v45 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v46 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v46 = v44;
      }
      if (v46)
      {
        uint64_t v47 = (char *)sub_1000DD508((uint64_t)&v111, v46);
        std::string::size_type v42 = (char *)__p;
        std::string v40 = v110;
      }
      else
      {
        uint64_t v47 = 0;
      }
      uint64_t v48 = &v47[4 * v43];
      *(_DWORD *)uint64_t v48 = v39;
      int v41 = v48 + 4;
      while (v40 != v42)
      {
        int v49 = *((_DWORD *)v40 - 1);
        v40 -= 4;
        *((_DWORD *)v48 - 1) = v49;
        v48 -= 4;
      }
      std::string __p = v48;
      v110 = v41;
      std::string::size_type v111 = &v47[4 * v46];
      if (v42) {
        operator delete(v42);
      }
    }
    else
    {
      *(_DWORD *)v110 = v39;
      int v41 = v40 + 4;
    }
    v110 = v41;
    uint64_t v50 = *(int *)(a1[2] + 32);
    if (v21 < v50 - 1)
    {
      uint64_t v51 = *(std::once_flag::_State_type **)(v22 + 48);
      if (v51)
      {
        v108.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v107.__r_.__value_.__r.__words[0] = v22;
        if (atomic_load_explicit((atomic_ullong *volatile)v51, memory_order_acquire) != -1)
        {
          *(void *)long long v117 = &v108;
          *(void *)&v117[8] = &v107;
          v103.__r_.__value_.__r.__words[0] = (std::string::size_type)v117;
          std::__call_once(v51, &v103, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      if ((*(_DWORD *)(v22 + 56) & 0xFFFFFFFE) == 0xA)
      {
        if (*(_DWORD *)(v22 + 60) != 3)
        {
          uint64_t v52 = v114;
          if (v114 >= (uint64_t *)v115)
          {
            uint64_t v54 = v114 - v113;
            if ((unint64_t)(v54 + 1) >> 61) {
              sub_100078F84();
            }
            unint64_t v55 = (v115 - (char *)v113) >> 2;
            if (v55 <= v54 + 1) {
              unint64_t v55 = v54 + 1;
            }
            if ((unint64_t)(v115 - (char *)v113) >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v56 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v56 = v55;
            }
            if (v56) {
              int v57 = (char *)sub_1000B4170((uint64_t)&v115, v56);
            }
            else {
              int v57 = 0;
            }
            signed int v58 = (uint64_t *)&v57[8 * v54];
            *signed int v58 = v22;
            long long v53 = v58 + 1;
            uint64_t v60 = v113;
            uint64_t v59 = v114;
            if (v114 != v113)
            {
              do
              {
                uint64_t v61 = *--v59;
                *--signed int v58 = v61;
              }
              while (v59 != v60);
              uint64_t v59 = v113;
            }
            long long v113 = v58;
            v114 = v53;
            long long v115 = &v57[8 * v56];
            if (v59) {
              operator delete(v59);
            }
          }
          else
          {
            uint64_t *v114 = v22;
            long long v53 = v52 + 1;
          }
          v114 = v53;
          uint64_t v18 = (const std::string::value_type **)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v22);
          LODWORD(v50) = *(_DWORD *)(a1[2] + 32);
          goto LABEL_91;
        }
        std::operator+<char>();
        uint64_t v81 = std::string::append(&v103, "\" is a repeated message. Repeated message options must be initialized using an aggregate value.");
        long long v82 = *(_OWORD *)&v81->__r_.__value_.__l.__data_;
        int64_t v118 = v81->__r_.__value_.__r.__words[2];
        *(_OWORD *)long long v117 = v82;
        v81->__r_.__value_.__l.__size_ = 0;
        v81->__r_.__value_.__r.__words[2] = 0;
        v81->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, (const std::string::value_type *)v117);
      }
      else
      {
        std::operator+<char>();
        std::string::size_type v79 = std::string::append(&v103, "\" is an atomic type, not a message.");
        long long v80 = *(_OWORD *)&v79->__r_.__value_.__l.__data_;
        int64_t v118 = v79->__r_.__value_.__r.__words[2];
        *(_OWORD *)long long v117 = v80;
        v79->__r_.__value_.__l.__size_ = 0;
        v79->__r_.__value_.__r.__words[2] = 0;
        v79->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, (const std::string::value_type *)v117);
      }
      if (SHIBYTE(v118) < 0) {
        operator delete(*(void **)v117);
      }
      if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0)
      {
        uint64_t v78 = (void *)v103.__r_.__value_.__r.__words[0];
        goto LABEL_161;
      }
      goto LABEL_162;
    }
LABEL_91:
    if (++v21 >= (int)v50) {
      goto LABEL_94;
    }
  }
  std::operator+<char>();
  std::string::size_type v28 = std::string::append(&v103, ")");
  long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
  int64_t v118 = v28->__r_.__value_.__r.__words[2];
  *(_OWORD *)long long v117 = v29;
  v28->__r_.__value_.__l.__size_ = 0;
  v28->__r_.__value_.__r.__words[2] = 0;
  v28->__r_.__value_.__r.__words[0] = 0;
  if (v118 >= 0) {
    long long v30 = v117;
  }
  else {
    long long v30 = *(unsigned __int8 **)v117;
  }
  if (v118 >= 0) {
    std::string::size_type v31 = HIBYTE(v118);
  }
  else {
    std::string::size_type v31 = *(void *)&v117[8];
  }
  std::string::append(&__str, (const std::string::value_type *)v30, v31);
  if (SHIBYTE(v118) < 0) {
    operator delete(*(void **)v117);
  }
  if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v103.__r_.__value_.__l.__data_);
  }
  FieldByName = (google::protobuf::DescriptorBuilder::OptionInterpreter *)google::protobuf::DescriptorBuilder::LookupSymbol((uint64_t *)*a1, (std::string *)v27, a1[1], 0, 0, 1);
  if (FieldByName == 2) {
    uint64_t v22 = v33;
  }
  if (v22) {
    goto LABEL_51;
  }
LABEL_101:
  uint64_t v67 = *a1;
  if (*(unsigned char *)(*(void *)*a1 + 42)) {
    goto LABEL_106;
  }
  if (*(char *)(v67 + 199) < 0) {
    uint64_t v68 = *(void *)(v67 + 184);
  }
  else {
    uint64_t v68 = *(unsigned __int8 *)(v67 + 199);
  }
  if (v68)
  {
    std::operator+<char>();
    std::string::size_type v83 = std::string::append(&v105, "\" is resolved to \"(");
    long long v84 = *(_OWORD *)&v83->__r_.__value_.__l.__data_;
    v106.__r_.__value_.__r.__words[2] = v83->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v106.__r_.__value_.__l.__data_ = v84;
    v83->__r_.__value_.__l.__size_ = 0;
    v83->__r_.__value_.__r.__words[2] = 0;
    v83->__r_.__value_.__r.__words[0] = 0;
    int v85 = *(char *)(*a1 + 199);
    if (v85 >= 0) {
      int v86 = (const std::string::value_type *)(*a1 + 176);
    }
    else {
      int v86 = *(const std::string::value_type **)(*a1 + 176);
    }
    if (v85 >= 0) {
      std::string::size_type v87 = *(unsigned __int8 *)(*a1 + 199);
    }
    else {
      std::string::size_type v87 = *(void *)(*a1 + 184);
    }
    int v88 = std::string::append(&v106, v86, v87);
    long long v89 = *(_OWORD *)&v88->__r_.__value_.__l.__data_;
    v107.__r_.__value_.__r.__words[2] = v88->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v107.__r_.__value_.__l.__data_ = v89;
    v88->__r_.__value_.__l.__size_ = 0;
    v88->__r_.__value_.__r.__words[2] = 0;
    v88->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v90 = std::string::append(&v107, ")\", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., \"(.");
    long long v91 = *(_OWORD *)&v90->__r_.__value_.__l.__data_;
    v108.__r_.__value_.__r.__words[2] = v90->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v108.__r_.__value_.__l.__data_ = v91;
    v90->__r_.__value_.__l.__size_ = 0;
    v90->__r_.__value_.__r.__words[2] = 0;
    v90->__r_.__value_.__r.__words[0] = 0;
    std::string::basic_string(&v104, &__str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v116);
    if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v92 = &v104;
    }
    else {
      uint64_t v92 = (std::string *)v104.__r_.__value_.__r.__words[0];
    }
    if ((v104.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v93 = HIBYTE(v104.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v93 = v104.__r_.__value_.__l.__size_;
    }
    int v94 = std::string::append(&v108, (const std::string::value_type *)v92, v93);
    long long v95 = *(_OWORD *)&v94->__r_.__value_.__l.__data_;
    v103.__r_.__value_.__r.__words[2] = v94->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v103.__r_.__value_.__l.__data_ = v95;
    v94->__r_.__value_.__l.__size_ = 0;
    v94->__r_.__value_.__r.__words[2] = 0;
    v94->__r_.__value_.__r.__words[0] = 0;
    std::string::size_type v96 = std::string::append(&v103, "\") to start from the outermost scope.");
    long long v97 = *(_OWORD *)&v96->__r_.__value_.__l.__data_;
    int64_t v118 = v96->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long v117 = v97;
    v96->__r_.__value_.__l.__size_ = 0;
    v96->__r_.__value_.__r.__words[2] = 0;
    v96->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, (const std::string::value_type *)v117);
    if (SHIBYTE(v118) < 0) {
      operator delete(*(void **)v117);
    }
    if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v103.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v104.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v104.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v108.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v107.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v107.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v106.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v106.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v105.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v78 = (void *)v105.__r_.__value_.__r.__words[0];
      goto LABEL_161;
    }
  }
  else
  {
    std::operator+<char>();
    uint64_t v98 = std::string::append(&v108, "\" unknown. Ensure that your proto");
    long long v99 = *(_OWORD *)&v98->__r_.__value_.__l.__data_;
    v103.__r_.__value_.__r.__words[2] = v98->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v103.__r_.__value_.__l.__data_ = v99;
    v98->__r_.__value_.__l.__size_ = 0;
    v98->__r_.__value_.__r.__words[2] = 0;
    v98->__r_.__value_.__r.__words[0] = 0;
    uint64_t v100 = std::string::append(&v103, " definition file imports the proto which defines the option.");
    long long v101 = *(_OWORD *)&v100->__r_.__value_.__l.__data_;
    int64_t v118 = v100->__r_.__value_.__r.__words[2];
    *(_OWORD *)long long v117 = v101;
    v100->__r_.__value_.__l.__size_ = 0;
    v100->__r_.__value_.__r.__words[2] = 0;
    v100->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, (const std::string::value_type *)v117);
    if (SHIBYTE(v118) < 0) {
      operator delete(*(void **)v117);
    }
    if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v103.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v108.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v78 = (void *)v108.__r_.__value_.__r.__words[0];
LABEL_161:
      operator delete(v78);
    }
  }
LABEL_162:
  uint64_t v66 = 0;
LABEL_163:
  if (__p)
  {
    v110 = (char *)__p;
    operator delete(__p);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  if (v113)
  {
    v114 = v113;
    operator delete(v113);
  }
  return v66;
}

void sub_1000D4E60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,void *a46,uint64_t a47,int a48,__int16 a49,char a50,char a51,uint64_t a52,void *a53,uint64_t a54,uint64_t a55,void *a56,uint64_t a57,int a58,__int16 a59,char a60,char a61)
{
  if (*(char *)(v61 - 153) < 0) {
    operator delete(*(void **)(v61 - 176));
  }
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a51 < 0) {
    operator delete(a46);
  }
  if (a53) {
    operator delete(a53);
  }
  if (a61 < 0) {
    operator delete(a56);
  }
  uint64_t v63 = *(void **)(v61 - 208);
  if (v63)
  {
    *(void *)(v61 - 200) = v63;
    operator delete(v63);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::AddWithoutInterpreting(google::protobuf::DescriptorBuilder::OptionInterpreter *this, const google::protobuf::UninterpretedOption *a2, google::protobuf::Message *a3)
{
  uint64_t v5 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a3 + 152))(a3);
  sub_1000BBA84(__p, "uninterpreted_option");
  uint64_t FieldByName = google::protobuf::Descriptor::FindFieldByName(v5, (uint64_t *)__p, v6);
  unint64_t v8 = (const google::protobuf::FieldDescriptor *)FieldByName;
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p[0].__r_.__value_.__l.__data_);
    if (!v8)
    {
LABEL_5:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 6773);
      int v9 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: field != nullptr: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v9->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
  }
  else if (!FieldByName)
  {
    goto LABEL_5;
  }
  (*(void (**)(google::protobuf::Message *))(*(void *)a3 + 152))(a3);
  uint64_t v11 = google::protobuf::Reflection::AddMessage(v10, a3, v8, 0);
  return (*(uint64_t (**)(uint64_t, const google::protobuf::UninterpretedOption *))(*(void *)v11 + 112))(v11, a2);
}

void sub_1000D5258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

BOOL google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v9 = *(_DWORD **)a6;
  uint64_t v10 = *(void *)(a6 + 8) - *(void *)a6;
  unint64_t v11 = (unint64_t)v10 >> 4;
  if (a2 != a3)
  {
    if ((int)v11 >= 1)
    {
      uint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v38 = a2 + 1;
      do
      {
        uint64_t v17 = *a2;
        if (v9[v15] == *(_DWORD *)(*a2 + 68))
        {
          uint64_t v18 = *(std::once_flag::_State_type **)(v17 + 48);
          if (v18)
          {
            std::string::size_type v42 = google::protobuf::FieldDescriptor::TypeOnceInit;
            uint64_t v41 = v17;
            if (atomic_load_explicit((atomic_ullong *volatile)v18, memory_order_acquire) != -1)
            {
              __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v42;
              __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v41;
              v40.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
              std::__call_once(v18, &v40, (void (__cdecl *)(void *))sub_1000BB820);
            }
          }
          int v19 = *(_DWORD *)(v17 + 56);
          if (v19 == 10)
          {
            if (v9[v15 + 1] == 4
              && (google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v38, a3, a4, a5, *(void *)&v9[v15 + 2]) & 1) == 0)
            {
              return 0;
            }
          }
          else
          {
            if (v19 != 11)
            {
              google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 6833);
              uint64_t v35 = google::protobuf::internal::LogMessage::operator<<(__p, "Invalid wire type for CPPTYPE_MESSAGE: ");
              std::string::size_type v36 = google::protobuf::internal::LogMessage::operator<<(v35, v19);
              google::protobuf::internal::LogFinisher::operator=((int)&v40, (const char **)&v36->__r_.__value_.__l.__data_);
              google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
              return 0;
            }
            if (v9[v15 + 1] == 3)
            {
              memset(__p, 0, 24);
              uint64_t v20 = *(void *)&v9[v15 + 2];
              char v21 = *(unsigned char *)(v20 + 23);
              if (v21 >= 0) {
                uint64_t v22 = *(const void **)&v9[v15 + 2];
              }
              else {
                uint64_t v22 = *(const void **)v20;
              }
              if (v21 >= 0) {
                int v23 = *(unsigned __int8 *)(v20 + 23);
              }
              else {
                int v23 = *(_DWORD *)(v20 + 8);
              }
              if (google::protobuf::UnknownFieldSet::ParseFromArray((google::protobuf::UnknownFieldSet *)__p, v22, v23)&& (google::protobuf::DescriptorBuilder::OptionInterpreter::ExamineIfOptionIsSet(a1, v38, a3, a4, a5, __p) & 1) == 0)
              {
                std::string v37 = (void *)__p[0].__r_.__value_.__r.__words[0];
                if (__p[0].__r_.__value_.__r.__words[0] != __p[0].__r_.__value_.__l.__size_)
                {
                  google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)__p);
                  std::string v37 = (void *)__p[0].__r_.__value_.__r.__words[0];
                }
                if (v37)
                {
                  __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v37;
                  operator delete(v37);
                }
                return 0;
              }
              uint64_t v24 = (void *)__p[0].__r_.__value_.__r.__words[0];
              if (__p[0].__r_.__value_.__r.__words[0] != __p[0].__r_.__value_.__l.__size_)
              {
                google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)__p);
                uint64_t v24 = (void *)__p[0].__r_.__value_.__r.__words[0];
              }
              if (v24)
              {
                __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)v24;
                operator delete(v24);
              }
            }
          }
        }
        ++v16;
        int v9 = *(_DWORD **)a6;
        v15 += 4;
      }
      while (v16 < (int)((*(void *)(a6 + 8) - *(void *)a6) >> 4));
    }
    return 1;
  }
  if ((int)v11 < 1) {
    return 1;
  }
  int v25 = *(_DWORD *)(a4 + 68);
  if (*v9 == v25)
  {
    BOOL v26 = 0;
  }
  else
  {
    uint64_t v28 = (int)(v10 >> 4);
    uint64_t v29 = ((unint64_t)v10 >> 4);
    long long v30 = v9 + 4;
    uint64_t v31 = 1;
    do
    {
      if (v29 == v31) {
        return v31 >= v28;
      }
      int v32 = *v30;
      v30 += 4;
      ++v31;
    }
    while (v32 != v25);
    BOOL v26 = v31 - 1 >= v28;
  }
  std::operator+<char>();
  uint64_t v33 = std::string::append(&v40, "\" was already set.");
  long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
  __p[0].__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
  *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v34;
  v33->__r_.__value_.__l.__size_ = 0;
  v33->__r_.__value_.__r.__words[2] = 0;
  v33->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError(*a1, (const std::string::value_type *)(a1[1] + 24), a1[2], 7, (const std::string::value_type *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v40.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v40.__r_.__value_.__l.__data_);
  }
  return v26;
}

void sub_1000D55C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::SetOptionValue(google::protobuf::DescriptorBuilder::OptionInterpreter *this, const google::protobuf::FieldDescriptor *a2, google::protobuf::UnknownFieldSet *a3)
{
  uint64_t v6 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v6)
  {
    v102.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v101.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
    if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
    {
      __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v102;
      __dst.__r_.__value_.__l.__size_ = (std::string::size_type)&v101;
      v103.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
      std::__call_once(v6, &v103, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  int v7 = *((_DWORD *)a2 + 14);
  switch(v7)
  {
    case 1:
      uint64_t v14 = *((void *)this + 2);
      int v15 = *(_DWORD *)(v14 + 16);
      if ((v15 & 0x20) != 0)
      {
        double v27 = *(double *)(v14 + 88);
      }
      else if ((v15 & 8) != 0)
      {
        double v27 = (double)*(unint64_t *)(v14 + 72);
      }
      else
      {
        if ((v15 & 0x10) == 0) {
          goto LABEL_161;
        }
        double v27 = (double)*(uint64_t *)(v14 + 80);
      }
      google::protobuf::UnknownFieldSet::AddFixed64(a3, *((_DWORD *)a2 + 17), *(uint64_t *)&v27);
      return 1;
    case 2:
      uint64_t v16 = *((void *)this + 2);
      int v17 = *(_DWORD *)(v16 + 16);
      if ((v17 & 0x20) != 0)
      {
        float v28 = *(double *)(v16 + 88);
      }
      else if ((v17 & 8) != 0)
      {
        float v28 = (float)*(unint64_t *)(v16 + 72);
      }
      else
      {
        if ((v17 & 0x10) == 0) {
          goto LABEL_161;
        }
        float v28 = (float)*(uint64_t *)(v16 + 80);
      }
      google::protobuf::UnknownFieldSet::AddFixed32(a3, *((_DWORD *)a2 + 17), SLODWORD(v28));
      return 1;
    case 3:
    case 16:
    case 18:
      uint64_t v10 = *((void *)this + 2);
      int v11 = *(_DWORD *)(v10 + 16);
      if ((v11 & 8) != 0)
      {
        uint64_t v21 = *(void *)(v10 + 72);
        if (v21 < 0) {
          goto LABEL_161;
        }
        unsigned int v22 = *((_DWORD *)a2 + 17);
      }
      else
      {
        if ((v11 & 0x10) == 0) {
          goto LABEL_161;
        }
        unsigned int v22 = *((_DWORD *)a2 + 17);
        uint64_t v21 = *(void *)(v10 + 80);
      }
      int v39 = (std::once_flag::_State_type *)*((void *)a2 + 6);
      if (v39)
      {
        v102.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v101.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        if (atomic_load_explicit((atomic_ullong *volatile)v39, memory_order_acquire) != -1)
        {
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v102;
          __dst.__r_.__value_.__l.__size_ = (std::string::size_type)&v101;
          v103.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
          std::__call_once(v39, &v103, (void (__cdecl *)(void *))sub_1000BB820);
        }
        int v7 = *((_DWORD *)a2 + 14);
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64((int)v39, v22, v21, v7, a3);
      return 1;
    case 4:
    case 6:
      uint64_t v13 = *((void *)this + 2);
      if ((*(unsigned char *)(v13 + 16) & 8) == 0) {
        goto LABEL_161;
      }
      unsigned int v24 = *((_DWORD *)a2 + 17);
      uint64_t v25 = *(void *)(v13 + 72);
      BOOL v26 = (std::once_flag::_State_type *)*((void *)a2 + 6);
      if (v26)
      {
        v102.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v101.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        if (atomic_load_explicit((atomic_ullong *volatile)v26, memory_order_acquire) != -1)
        {
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v102;
          __dst.__r_.__value_.__l.__size_ = (std::string::size_type)&v101;
          v103.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
          std::__call_once(v26, &v103, (void (__cdecl *)(void *))sub_1000BB820);
        }
        int v7 = *((_DWORD *)a2 + 14);
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64((int)v26, v24, v25, v7, a3);
      return 1;
    case 5:
    case 15:
    case 17:
      uint64_t v8 = *((void *)this + 2);
      int v9 = *(_DWORD *)(v8 + 16);
      if ((v9 & 8) != 0)
      {
        unint64_t v20 = *(void *)(v8 + 72);
        if (v20 >> 31) {
          goto LABEL_161;
        }
        unsigned int v40 = *((_DWORD *)a2 + 17);
        uint64_t v41 = (std::once_flag::_State_type *)*((void *)a2 + 6);
        if (v41)
        {
          v102.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
          v101.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
          if (atomic_load_explicit((atomic_ullong *volatile)v41, memory_order_acquire) != -1)
          {
            __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v102;
            __dst.__r_.__value_.__l.__size_ = (std::string::size_type)&v101;
            v103.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
            std::__call_once(v41, &v103, (void (__cdecl *)(void *))sub_1000BB820);
          }
          int v7 = *((_DWORD *)a2 + 14);
        }
        unsigned int v42 = v40;
        uint64_t v43 = v20;
      }
      else
      {
        if ((v9 & 0x10) == 0) {
          goto LABEL_161;
        }
        int64_t v38 = *(void *)(v8 + 80);
        if (v38 <= (uint64_t)0xFFFFFFFF7FFFFFFFLL) {
          goto LABEL_161;
        }
        unsigned int v52 = *((_DWORD *)a2 + 17);
        LODWORD(v41) = sub_1000BF23C((uint64_t)a2);
        unsigned int v42 = v52;
        uint64_t v43 = v38;
        int v7 = (int)v41;
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32((int)v41, v42, v43, v7, a3);
      return 1;
    case 7:
    case 13:
      uint64_t v12 = *((void *)this + 2);
      if ((*(unsigned char *)(v12 + 16) & 8) == 0) {
        goto LABEL_161;
      }
      unint64_t v23 = *(void *)(v12 + 72);
      if (HIDWORD(v23)) {
        goto LABEL_161;
      }
      unsigned int v44 = *((_DWORD *)a2 + 17);
      uint64_t v45 = (std::once_flag::_State_type *)*((void *)a2 + 6);
      if (v45)
      {
        v102.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v101.__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
        if (atomic_load_explicit((atomic_ullong *volatile)v45, memory_order_acquire) != -1)
        {
          __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)&v102;
          __dst.__r_.__value_.__l.__size_ = (std::string::size_type)&v101;
          v103.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
          std::__call_once(v45, &v103, (void (__cdecl *)(void *))sub_1000BB820);
        }
        int v7 = *((_DWORD *)a2 + 14);
      }
      google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32((int)v45, v44, v23, v7, a3);
      return 1;
    case 8:
      uint64_t v18 = *((void *)this + 2);
      if ((*(unsigned char *)(v18 + 16) & 1) == 0) {
        goto LABEL_161;
      }
      uint64_t v29 = (_DWORD *)(*(void *)(v18 + 48) & 0xFFFFFFFFFFFFFFFELL);
      if (*((char *)v29 + 23) < 0)
      {
        uint64_t v46 = *((void *)v29 + 1);
        if (v46 != 4 || **(_DWORD **)v29 != 1702195828)
        {
          if (v46 != 5) {
            goto LABEL_161;
          }
          uint64_t v29 = *(_DWORD **)v29;
          goto LABEL_77;
        }
      }
      else
      {
        int v30 = *((unsigned __int8 *)v29 + 23);
        if (v30 != 4)
        {
          if (v30 != 5) {
            goto LABEL_161;
          }
LABEL_77:
          int v47 = *v29;
          int v48 = *((unsigned __int8 *)v29 + 4);
          if (v47 != 1936482662 || v48 != 101)
          {
LABEL_161:
            std::operator+<char>();
            std::string::size_type v96 = std::string::append(&v103, "\".");
            long long v97 = *(_OWORD *)&v96->__r_.__value_.__l.__data_;
            __dst.__r_.__value_.__r.__words[2] = v96->__r_.__value_.__r.__words[2];
            *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v97;
            v96->__r_.__value_.__l.__size_ = 0;
            v96->__r_.__value_.__r.__words[2] = 0;
            v96->__r_.__value_.__r.__words[0] = 0;
            google::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)&__dst);
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__dst.__r_.__value_.__l.__data_);
            }
            if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0)
            {
              long long v95 = (void *)v103.__r_.__value_.__r.__words[0];
LABEL_165:
              operator delete(v95);
            }
            return 0;
          }
          uint64_t v50 = 0;
LABEL_168:
          unsigned int v77 = *((_DWORD *)a2 + 17);
          goto LABEL_169;
        }
        if (*v29 != 1702195828) {
          goto LABEL_161;
        }
      }
      uint64_t v50 = 1;
      goto LABEL_168;
    case 9:
    case 12:
      if ((*(unsigned char *)(*((void *)this + 2) + 16) & 2) != 0) {
        google::protobuf::UnknownFieldSet::AddLengthDelimited(a3);
      }
      goto LABEL_161;
    case 10:
    case 11:
      uint64_t result = google::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(this, (std::once_flag::_State_type **)a2, a3);
      if (!result) {
        return result;
      }
      return 1;
    case 14:
      if ((*(unsigned char *)(*((void *)this + 2) + 16) & 1) == 0) {
        goto LABEL_161;
      }
      uint64_t v31 = (google::protobuf::DescriptorPool *)google::protobuf::FieldDescriptor::enum_type(a2);
      unint64_t v32 = *(void *)(*((void *)this + 2) + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v33 = *(void *)(*((void *)v31 + 2) + 16);
      uint64_t v34 = google::protobuf::DescriptorPool::internal_generated_pool(v31);
      google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
      if (v33 == v34)
      {
        uint64_t ValueByName = google::protobuf::EnumDescriptor::FindValueByName((uint64_t)v31, (uint64_t *)v32, v35);
        goto LABEL_134;
      }
      std::string::size_type v36 = (long long *)*((void *)v31 + 1);
      if (*((char *)v36 + 23) < 0)
      {
        sub_1000BB834(&__dst, *(void **)v36, *((void *)v36 + 1));
      }
      else
      {
        long long v37 = *v36;
        __dst.__r_.__value_.__r.__words[2] = *((void *)v36 + 2);
        *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v37;
      }
      std::string::size_type size = HIBYTE(__dst.__r_.__value_.__r.__words[2]);
      if ((__dst.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = __dst.__r_.__value_.__l.__size_;
      }
      if (*(char *)(*(void *)v31 + 23) < 0) {
        uint64_t v54 = *(void *)(*(void *)v31 + 8);
      }
      else {
        uint64_t v54 = *(unsigned __int8 *)(*(void *)v31 + 23);
      }
      std::string::resize(&__dst, size - v54, 0);
      int v55 = *(char *)(v32 + 23);
      if (v55 >= 0) {
        unint64_t v56 = (const std::string::value_type *)v32;
      }
      else {
        unint64_t v56 = *(const std::string::value_type **)v32;
      }
      if (v55 >= 0) {
        std::string::size_type v57 = *(unsigned __int8 *)(v32 + 23);
      }
      else {
        std::string::size_type v57 = *(void *)(v32 + 8);
      }
      std::string::append(&__dst, v56, v57);
      if (google::protobuf::DescriptorBuilder::FindSymbolNotEnforcingDeps(*(uint64_t **)this, (uint64_t *)&__dst, 1) != 5)
      {
        uint64_t ValueByName = 0;
        goto LABEL_130;
      }
      uint64_t ValueByName = v58;
      if (*(google::protobuf::DescriptorPool **)(v58 + 24) == v31)
      {
LABEL_130:
        char v76 = 1;
        goto LABEL_131;
      }
      std::operator+<char>();
      uint64_t v59 = std::string::append(&v98, "\" has no value named \"");
      long long v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
      v99.__r_.__value_.__r.__words[2] = v59->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v99.__r_.__value_.__l.__data_ = v60;
      v59->__r_.__value_.__l.__size_ = 0;
      v59->__r_.__value_.__r.__words[2] = 0;
      v59->__r_.__value_.__r.__words[0] = 0;
      int v61 = *(char *)(v32 + 23);
      if (v61 >= 0) {
        uint64_t v62 = (const std::string::value_type *)v32;
      }
      else {
        uint64_t v62 = *(const std::string::value_type **)v32;
      }
      if (v61 >= 0) {
        std::string::size_type v63 = *(unsigned __int8 *)(v32 + 23);
      }
      else {
        std::string::size_type v63 = *(void *)(v32 + 8);
      }
      uint64_t v64 = std::string::append(&v99, v62, v63);
      long long v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
      v100.__r_.__value_.__r.__words[2] = v64->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v100.__r_.__value_.__l.__data_ = v65;
      v64->__r_.__value_.__l.__size_ = 0;
      v64->__r_.__value_.__r.__words[2] = 0;
      v64->__r_.__value_.__r.__words[0] = 0;
      uint64_t v66 = std::string::append(&v100, "\" for option \"");
      long long v67 = *(_OWORD *)&v66->__r_.__value_.__l.__data_;
      v101.__r_.__value_.__r.__words[2] = v66->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v101.__r_.__value_.__l.__data_ = v67;
      v66->__r_.__value_.__l.__size_ = 0;
      v66->__r_.__value_.__r.__words[2] = 0;
      v66->__r_.__value_.__r.__words[0] = 0;
      uint64_t v68 = *((void *)a2 + 1);
      int v69 = *(char *)(v68 + 23);
      if (v69 >= 0) {
        long long v70 = (const std::string::value_type *)*((void *)a2 + 1);
      }
      else {
        long long v70 = *(const std::string::value_type **)v68;
      }
      if (v69 >= 0) {
        std::string::size_type v71 = *(unsigned __int8 *)(v68 + 23);
      }
      else {
        std::string::size_type v71 = *(void *)(v68 + 8);
      }
      long long v72 = std::string::append(&v101, v70, v71);
      long long v73 = *(_OWORD *)&v72->__r_.__value_.__l.__data_;
      v102.__r_.__value_.__r.__words[2] = v72->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v102.__r_.__value_.__l.__data_ = v73;
      v72->__r_.__value_.__l.__size_ = 0;
      v72->__r_.__value_.__r.__words[2] = 0;
      v72->__r_.__value_.__r.__words[0] = 0;
      v74 = std::string::append(&v102, "\". This appears to be a value from a sibling type.");
      long long v75 = *(_OWORD *)&v74->__r_.__value_.__l.__data_;
      v103.__r_.__value_.__r.__words[2] = v74->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v103.__r_.__value_.__l.__data_ = v75;
      v74->__r_.__value_.__l.__size_ = 0;
      v74->__r_.__value_.__r.__words[2] = 0;
      v74->__r_.__value_.__r.__words[0] = 0;
      google::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)&v103);
      if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v103.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v102.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v101.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v101.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v100.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v99.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v99.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v98.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v98.__r_.__value_.__l.__data_);
      }
      char v76 = 0;
      uint64_t ValueByName = 0;
LABEL_131:
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      if ((v76 & 1) == 0) {
        return 0;
      }
LABEL_134:
      if (!ValueByName)
      {
        google::protobuf::FieldDescriptor::enum_type(a2);
        std::operator+<char>();
        uint64_t v78 = std::string::append(&v99, "\" has no value named \"");
        long long v79 = *(_OWORD *)&v78->__r_.__value_.__l.__data_;
        v100.__r_.__value_.__r.__words[2] = v78->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v100.__r_.__value_.__l.__data_ = v79;
        v78->__r_.__value_.__l.__size_ = 0;
        v78->__r_.__value_.__r.__words[2] = 0;
        v78->__r_.__value_.__r.__words[0] = 0;
        int v80 = *(char *)(v32 + 23);
        if (v80 >= 0) {
          uint64_t v81 = (const std::string::value_type *)v32;
        }
        else {
          uint64_t v81 = *(const std::string::value_type **)v32;
        }
        if (v80 >= 0) {
          std::string::size_type v82 = *(unsigned __int8 *)(v32 + 23);
        }
        else {
          std::string::size_type v82 = *(void *)(v32 + 8);
        }
        std::string::size_type v83 = std::string::append(&v100, v81, v82);
        long long v84 = *(_OWORD *)&v83->__r_.__value_.__l.__data_;
        v101.__r_.__value_.__r.__words[2] = v83->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v101.__r_.__value_.__l.__data_ = v84;
        v83->__r_.__value_.__l.__size_ = 0;
        v83->__r_.__value_.__r.__words[2] = 0;
        v83->__r_.__value_.__r.__words[0] = 0;
        int v85 = std::string::append(&v101, "\" for option \"");
        long long v86 = *(_OWORD *)&v85->__r_.__value_.__l.__data_;
        v102.__r_.__value_.__r.__words[2] = v85->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v102.__r_.__value_.__l.__data_ = v86;
        v85->__r_.__value_.__l.__size_ = 0;
        v85->__r_.__value_.__r.__words[2] = 0;
        v85->__r_.__value_.__r.__words[0] = 0;
        uint64_t v87 = *((void *)a2 + 1);
        int v88 = *(char *)(v87 + 23);
        if (v88 >= 0) {
          long long v89 = (const std::string::value_type *)*((void *)a2 + 1);
        }
        else {
          long long v89 = *(const std::string::value_type **)v87;
        }
        if (v88 >= 0) {
          std::string::size_type v90 = *(unsigned __int8 *)(v87 + 23);
        }
        else {
          std::string::size_type v90 = *(void *)(v87 + 8);
        }
        long long v91 = std::string::append(&v102, v89, v90);
        long long v92 = *(_OWORD *)&v91->__r_.__value_.__l.__data_;
        v103.__r_.__value_.__r.__words[2] = v91->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v103.__r_.__value_.__l.__data_ = v92;
        v91->__r_.__value_.__l.__size_ = 0;
        v91->__r_.__value_.__r.__words[2] = 0;
        v91->__r_.__value_.__r.__words[0] = 0;
        std::string::size_type v93 = std::string::append(&v103, "\".");
        long long v94 = *(_OWORD *)&v93->__r_.__value_.__l.__data_;
        __dst.__r_.__value_.__r.__words[2] = v93->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v94;
        v93->__r_.__value_.__l.__size_ = 0;
        v93->__r_.__value_.__r.__words[2] = 0;
        v93->__r_.__value_.__r.__words[0] = 0;
        google::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)&__dst);
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v103.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v103.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v102.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v102.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v101.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v101.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v100.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v100.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v99.__r_.__value_.__r.__words[2]) < 0)
        {
          long long v95 = (void *)v99.__r_.__value_.__r.__words[0];
          goto LABEL_165;
        }
        return 0;
      }
      unsigned int v77 = *((_DWORD *)a2 + 17);
      uint64_t v50 = *(int *)(ValueByName + 16);
LABEL_169:
      google::protobuf::UnknownFieldSet::AddVarint(a3, v77, v50);
      return 1;
    default:
      return 1;
  }
}

void sub_1000D6410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *__p,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  if (*(char *)(v42 - 121) < 0) {
    operator delete(*(void **)(v42 - 144));
  }
  if (a42 < 0) {
    operator delete(__p);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (*(char *)(v42 - 89) < 0) {
    operator delete(*(void **)(v42 - 112));
  }
  _Unwind_Resume(a1);
}

google::protobuf::UnknownFieldSet *sub_1000D660C(google::protobuf::UnknownFieldSet *a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2 != *((void **)a1 + 1))
  {
    google::protobuf::UnknownFieldSet::ClearFallback(a1);
    uint64_t v2 = *(void **)a1;
  }
  if (v2)
  {
    *((void *)a1 + 1) = v2;
    operator delete(v2);
  }
  return a1;
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt32(int a1, unsigned int a2, uint64_t a3, int a4, google::protobuf::UnknownFieldSet *this)
{
  if (a4 == 17)
  {
    a3 = (2 * a3) ^ ((int)a3 >> 31);
LABEL_6:
    google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
    return;
  }
  if (a4 != 15)
  {
    if (a4 != 5)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7195);
      uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_INT32: ");
      int v7 = google::protobuf::internal::LogMessage::operator<<(v6, a4);
      google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
      return;
    }
    a3 = (int)a3;
    goto LABEL_6;
  }
  google::protobuf::UnknownFieldSet::AddFixed32(this, a2, a3);
}

void sub_1000D6738(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetInt64(int a1, unsigned int a2, uint64_t a3, int a4, google::protobuf::UnknownFieldSet *this)
{
  if (a4 == 18)
  {
    a3 = (2 * a3) ^ (a3 >> 63);
LABEL_6:
    google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
    return;
  }
  if (a4 != 16)
  {
    if (a4 != 3)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7218);
      uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_INT64: ");
      int v7 = google::protobuf::internal::LogMessage::operator<<(v6, a4);
      google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
      return;
    }
    goto LABEL_6;
  }
  google::protobuf::UnknownFieldSet::AddFixed64(this, a2, a3);
}

void sub_1000D6824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt32(int a1, unsigned int a2, unsigned int a3, int a4, google::protobuf::UnknownFieldSet *this)
{
  if (a4 == 7)
  {
    google::protobuf::UnknownFieldSet::AddFixed32(this, a2, a3);
  }
  else if (a4 == 13)
  {
    google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7236);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_UINT32: ");
    int v7 = google::protobuf::internal::LogMessage::operator<<(v6, a4);
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
}

void sub_1000D6904(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::OptionInterpreter::SetUInt64(int a1, unsigned int a2, uint64_t a3, int a4, google::protobuf::UnknownFieldSet *this)
{
  if (a4 == 6)
  {
    google::protobuf::UnknownFieldSet::AddFixed64(this, a2, a3);
  }
  else if (a4 == 4)
  {
    google::protobuf::UnknownFieldSet::AddVarint(this, a2, a3);
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7254);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v9, "Invalid wire type for CPPTYPE_UINT64: ");
    int v7 = google::protobuf::internal::LogMessage::operator<<(v6, a4);
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
}

void sub_1000D69E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::OptionInterpreter::SetAggregateOption(google::protobuf::DescriptorBuilder::OptionInterpreter *this, std::once_flag::_State_type **a2, google::protobuf::UnknownFieldSet *a3)
{
  if ((*(unsigned char *)(*((void *)this + 2) + 16) & 4) != 0)
  {
    unint64_t v23 = (const google::protobuf::Descriptor *)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
    uint64_t Prototype = google::protobuf::DynamicMessageFactory::GetPrototype((google::protobuf::DescriptorBuilder::OptionInterpreter *)((char *)this + 72), v23);
    uint64_t v25 = (char *)(*(uint64_t (**)(uint64_t))(*(void *)Prototype + 24))(Prototype);
    if (!v25)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7148);
      BOOL v26 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: dynamic.get() != nullptr: ");
      double v27 = google::protobuf::internal::LogMessage::operator<<(v26, "Could not create an instance of ");
      LOWORD(v43.__r_.__value_.__l.__data_) = 0;
      v43.__r_.__value_.__s.__data_[2] = 0;
      google::protobuf::FieldDescriptor::DebugStringWithOptions((uint64_t)a2, (uint64_t)&v43, &v42);
      float v28 = google::protobuf::internal::LogMessage::operator<<(v27, (const std::string::value_type *)&v42);
      google::protobuf::internal::LogFinisher::operator=((int)&__str, (const char **)&v28->__r_.__value_.__l.__data_);
      if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v42.__r_.__value_.__l.__data_);
      }
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    }
    v43.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1001CF158;
    *(_OWORD *)&v43.__r_.__value_.__r.__words[1] = 0uLL;
    uint64_t v44 = 0;
    std::string::size_type v29 = *(void *)this;
    v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&off_1001CF1A0;
    v46.__r_.__value_.__l.__size_ = v29;
    google::protobuf::TextFormat::Parser::Parser((google::protobuf::TextFormat::Parser *)&v42);
    v42.__r_.__value_.__r.__words[0] = (std::string::size_type)&v43;
    v42.__r_.__value_.__l.__size_ = (std::string::size_type)&v46;
    uint64_t v21 = google::protobuf::TextFormat::Parser::ParseFromString(&v42.__r_.__value_.__l.__data_, *(void *)(*((void *)this + 2) + 64) & 0xFFFFFFFFFFFFFFFELL, v25);
    if (v21)
    {
      memset(&__str, 0, sizeof(__str));
      google::protobuf::MessageLite::SerializeToString((uint64_t)v25, &__str);
      int v30 = a2[6];
      if (v30)
      {
        int v49 = (const google::protobuf::FieldDescriptor *)a2;
        uint64_t v50 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v30, memory_order_acquire) != -1)
        {
          __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v50;
          __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v49;
          v47.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
          std::__call_once(v30, &v47, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      int v31 = *((_DWORD *)a2 + 14);
      if (v31 == 11) {
        google::protobuf::UnknownFieldSet::AddLengthDelimited(a3);
      }
      int64_t v38 = a2[6];
      if (v38)
      {
        int v49 = (const google::protobuf::FieldDescriptor *)a2;
        uint64_t v50 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v38, memory_order_acquire) != -1)
        {
          __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v50;
          __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v49;
          v47.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
          std::__call_once(v38, &v47, (void (__cdecl *)(void *))sub_1000BB820);
        }
        int v31 = *((_DWORD *)a2 + 14);
      }
      if (v31 != 10)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7168);
        int v39 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: (option_field->type()) == (FieldDescriptor::TYPE_GROUP): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v41, (const char **)&v39->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
      }
      google::protobuf::UnknownFieldSet::AddGroup(a3);
    }
    std::operator+<char>();
    unint64_t v32 = std::string::append(&v47, "\": ");
    long long v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v33;
    v32->__r_.__value_.__l.__size_ = 0;
    v32->__r_.__value_.__r.__words[2] = 0;
    v32->__r_.__value_.__r.__words[0] = 0;
    if (v44 >= 0) {
      std::string::size_type size = &v43.__r_.__value_.__s.__data_[8];
    }
    else {
      std::string::size_type size = (const std::string::value_type *)v43.__r_.__value_.__l.__size_;
    }
    if (v44 >= 0) {
      std::string::size_type v35 = HIBYTE(v44);
    }
    else {
      std::string::size_type v35 = v43.__r_.__value_.__r.__words[2];
    }
    std::string::size_type v36 = std::string::append(&__str, size, v35);
    long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v37;
    v36->__r_.__value_.__l.__size_ = 0;
    v36->__r_.__value_.__r.__words[2] = 0;
    v36->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    google::protobuf::TextFormat::Parser::~Parser((google::protobuf::TextFormat::Parser *)&v42);
    google::protobuf::TextFormat::Finder::~Finder((google::protobuf::TextFormat::Finder *)&v46);
    v43.__r_.__value_.__r.__words[0] = (std::string::size_type)off_1001CF158;
    if (SHIBYTE(v44) < 0) {
      operator delete((void *)v43.__r_.__value_.__l.__size_);
    }
    google::protobuf::io::ErrorCollector::~ErrorCollector((google::protobuf::io::ErrorCollector *)&v43);
    if (v25) {
      (*(void (**)(char *))(*(void *)v25 + 8))(v25);
    }
  }
  else
  {
    std::operator+<char>();
    uint64_t v5 = std::string::append(&v46, "\" is a message. To set the entire message, use syntax like \"");
    long long v6 = *(_OWORD *)&v5->__r_.__value_.__l.__data_;
    v47.__r_.__value_.__r.__words[2] = v5->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v47.__r_.__value_.__l.__data_ = v6;
    v5->__r_.__value_.__l.__size_ = 0;
    v5->__r_.__value_.__r.__words[2] = 0;
    v5->__r_.__value_.__r.__words[0] = 0;
    int v7 = *((char *)*a2 + 23);
    if (v7 >= 0) {
      char v8 = (const std::string::value_type *)*a2;
    }
    else {
      char v8 = (const std::string::value_type *)**a2;
    }
    if (v7 >= 0) {
      std::string::size_type v9 = *((unsigned __int8 *)*a2 + 23);
    }
    else {
      std::string::size_type v9 = (*a2)[1];
    }
    uint64_t v10 = std::string::append(&v47, v8, v9);
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    __str.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    uint64_t v12 = std::string::append(&__str, " = { <proto text format> }\". To set fields within it, use syntax like \"");
    long long v13 = *(_OWORD *)&v12->__r_.__value_.__l.__data_;
    v43.__r_.__value_.__r.__words[2] = v12->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v43.__r_.__value_.__l.__data_ = v13;
    v12->__r_.__value_.__l.__size_ = 0;
    v12->__r_.__value_.__r.__words[2] = 0;
    v12->__r_.__value_.__r.__words[0] = 0;
    int v14 = *((char *)*a2 + 23);
    if (v14 >= 0) {
      int v15 = (const std::string::value_type *)*a2;
    }
    else {
      int v15 = (const std::string::value_type *)**a2;
    }
    if (v14 >= 0) {
      std::string::size_type v16 = *((unsigned __int8 *)*a2 + 23);
    }
    else {
      std::string::size_type v16 = (*a2)[1];
    }
    int v17 = std::string::append(&v43, v15, v16);
    long long v18 = *(_OWORD *)&v17->__r_.__value_.__l.__data_;
    v42.__r_.__value_.__r.__words[2] = v17->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v42.__r_.__value_.__l.__data_ = v18;
    v17->__r_.__value_.__l.__size_ = 0;
    v17->__r_.__value_.__r.__words[2] = 0;
    v17->__r_.__value_.__r.__words[0] = 0;
    int v19 = std::string::append(&v42, ".foo = value\".");
    long long v20 = *(_OWORD *)&v19->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v19->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v20;
    v19->__r_.__value_.__l.__size_ = 0;
    v19->__r_.__value_.__r.__words[2] = 0;
    v19->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(*(void *)this, (const std::string::value_type *)(*((void *)this + 1) + 24), *((void *)this + 2), 8, (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v42.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v43.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v43.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v46.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  return v21;
}

void sub_1000D6F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,int a39,__int16 a40,char a41,char a42)
{
  google::protobuf::internal::LogMessage::~LogMessage(&a27);
  if (*(char *)(v44 - 105) < 0) {
    operator delete(*(void **)(v43 + 56));
  }
  google::protobuf::TextFormat::Parser::~Parser((google::protobuf::TextFormat::Parser *)&__p);
  google::protobuf::TextFormat::Finder::~Finder((google::protobuf::TextFormat::Finder *)&a37);
  sub_1000D7130(&a20);
  if (v42) {
    (*(void (**)(uint64_t))(*(void *)v42 + 8))(v42);
  }
  _Unwind_Resume(a1);
}

void sub_1000D7130(void **this)
{
  *this = off_1001CF158;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ErrorCollector::~ErrorCollector((google::protobuf::io::ErrorCollector *)this);
}

unint64_t google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v12[0] = a2;
  v12[1] = a3;
  sub_1000D7AF4((uint64_t)v12, &__str);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    if (!__str.__r_.__value_.__l.__size_) {
      goto LABEL_10;
    }
    p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
  }
  else
  {
    if (!*((unsigned char *)&__str.__r_.__value_.__s + 23)) {
      goto LABEL_10;
    }
    p_str = &__str;
  }
  if (p_str->__r_.__value_.__s.__data_[0] == 46)
  {
    std::string::basic_string(&v10, &__str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v13);
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    std::string __str = v10;
  }
LABEL_10:
  long long v6 = *(void **)(a1 + 32);
  sub_1000BB974(v9, (uint64_t *)&__str, v4);
  unint64_t v7 = google::protobuf::DescriptorPool::Tables::FindByNameHelper(v6, a1, v9[0], (uint64_t)v9[1]);
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_1000D726C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::FieldDescriptor::InternalTypeOnceInit(google::protobuf::FieldDescriptor *this, uint64_t a2, const char *a3)
{
  if (!*(unsigned char *)(*((void *)this + 5) + 65))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__str, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7296);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(&__str, "CHECK failed: file()->finished_building_ == true: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v30, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__str.__r_.__value_.__l.__data_);
  }
  uint64_t v5 = (uint64_t *)*((void *)this + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(*((void *)this + 5) + 16);
    sub_1000BB974(v31, v5, a3);
    int v7 = google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(v6, v31[0], v31[1]);
    if (v7 == 4)
    {
      *((_DWORD *)this + 14) = 14;
      std::string::size_type v9 = (char *)this + 112;
    }
    else
    {
      if (v7 != 1) {
        goto LABEL_9;
      }
      *((_DWORD *)this + 14) = 11;
      std::string::size_type v9 = (char *)this + 104;
    }
    *(void *)std::string::size_type v9 = v8;
  }
LABEL_9:
  uint64_t v10 = *((void *)this + 14);
  if (v10 && !*((void *)this + 18))
  {
    if (!*((void *)this + 17)) {
      goto LABEL_34;
    }
    long long v11 = *(long long **)(v10 + 8);
    if (*((char *)v11 + 23) < 0)
    {
      sub_1000BB834(&__str, *(void **)v11, *((void *)v11 + 1));
    }
    else
    {
      long long v12 = *v11;
      __str.__r_.__value_.__r.__words[2] = *((void *)v11 + 2);
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v12;
    }
    std::string::size_type v13 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
    if (v13 == -1)
    {
      std::string::operator=(&__str, *((const std::string **)this + 17));
    }
    else
    {
      std::string::basic_string(&v29, &__str, 0, v13, (std::allocator<char> *)&v33);
      int v14 = std::string::append(&v29, ".");
      long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
      v30.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v30.__r_.__value_.__l.__data_ = v15;
      v14->__r_.__value_.__l.__size_ = 0;
      v14->__r_.__value_.__r.__words[2] = 0;
      v14->__r_.__value_.__r.__words[0] = 0;
      uint64_t v16 = *((void *)this + 17);
      int v17 = *(char *)(v16 + 23);
      if (v17 >= 0) {
        long long v18 = (const std::string::value_type *)*((void *)this + 17);
      }
      else {
        long long v18 = *(const std::string::value_type **)v16;
      }
      if (v17 >= 0) {
        std::string::size_type v19 = *(unsigned __int8 *)(v16 + 23);
      }
      else {
        std::string::size_type v19 = *(void *)(v16 + 8);
      }
      long long v20 = std::string::append(&v30, v18, v19);
      std::string::size_type v22 = v20->__r_.__value_.__r.__words[0];
      v34[0] = v20->__r_.__value_.__l.__size_;
      *(void *)((char *)v34 + 7) = *(std::string::size_type *)((char *)&v20->__r_.__value_.__r.__words[1] + 7);
      char v23 = HIBYTE(v20->__r_.__value_.__r.__words[2]);
      v20->__r_.__value_.__l.__size_ = 0;
      v20->__r_.__value_.__r.__words[2] = 0;
      v20->__r_.__value_.__r.__words[0] = 0;
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      __str.__r_.__value_.__r.__words[0] = v22;
      __str.__r_.__value_.__l.__size_ = v34[0];
      *(std::string::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v34 + 7);
      *((unsigned char *)&__str.__r_.__value_.__s + 23) = v23;
      if (SHIBYTE(v30.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v30.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v29.__r_.__value_.__l.__data_);
      }
    }
    uint64_t v24 = *(void *)(*((void *)this + 5) + 16);
    sub_1000BB974(v28, (uint64_t *)&__str, v21);
    if (google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(v24, v28[0], v28[1]) == 5) {
      *((void *)this + 18) = v25;
    }
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    if (!*((void *)this + 18))
    {
LABEL_34:
      uint64_t v26 = *((void *)this + 14);
      if (!*(_DWORD *)(v26 + 44))
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__str, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7328);
        double v27 = google::protobuf::internal::LogMessage::operator<<(&__str, "CHECK failed: enum_type_->value_count(): ");
        google::protobuf::internal::LogFinisher::operator=((int)&v30, (const char **)&v27->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&__str.__r_.__value_.__l.__data_);
        uint64_t v26 = *((void *)this + 14);
      }
      *((void *)this + 18) = *(void *)(v26 + 48);
    }
  }
}

void sub_1000D7558(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void *__p,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
}

uint64_t google::protobuf::FieldDescriptor::PrintableNameForExtension(google::protobuf::FieldDescriptor *this)
{
  if (!*((unsigned char *)this + 67) || !*(unsigned char *)(*(void *)(*((void *)this + 10) + 32) + 72)) {
    goto LABEL_9;
  }
  uint64_t v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    uint64_t v6 = this;
    int v7 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v9[0] = &v7;
      v9[1] = &v6;
      uint64_t v8 = v9;
      std::__call_once(v2, &v8, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (*((_DWORD *)this + 14) == 11
    && *((_DWORD *)this + 15) == 1
    && (uint64_t v3 = *((void *)this + 12), v3 == google::protobuf::FieldDescriptor::message_type(this)))
  {
    uint64_t v4 = (char *)(google::protobuf::FieldDescriptor::message_type(this) + 8);
  }
  else
  {
LABEL_9:
    uint64_t v4 = (char *)this + 8;
  }
  return *(void *)v4;
}

void google::protobuf::FileDescriptor::InternalDependenciesOnceInit(google::protobuf::FileDescriptor *this, uint64_t a2, const char *a3)
{
  if (!*((unsigned char *)this + 65))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7372);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: finished_building_ == true: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  int v5 = *((_DWORD *)this + 8);
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i < v5; ++i)
    {
      int v7 = *(uint64_t **)(*((void *)this + 10) + 8 * i);
      if (v7)
      {
        *(void *)(*((void *)this + 9) + 8 * i) = google::protobuf::DescriptorPool::FindFileByName(*((void *)this + 2), v7, a3);
        int v5 = *((_DWORD *)this + 8);
      }
    }
  }
}

void sub_1000D7750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::LazyDescriptor::Once(google::protobuf::internal::LazyDescriptor *this)
{
  uint64_t v2 = (std::once_flag::_State_type *)*((void *)this + 2);
  if (v2)
  {
    uint64_t v3 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v5[0] = google::protobuf::internal::LazyDescriptor::OnceStatic;
      v5[1] = &v3;
      uint64_t v4 = v5;
      std::__call_once(v2, &v4, (void (__cdecl *)(void *))sub_1000E10C4);
    }
  }
}

void google::protobuf::internal::LazyDescriptor::OnceInternal(google::protobuf::internal::LazyDescriptor *this, uint64_t a2, const char *a3)
{
  if (!*(unsigned char *)(*((void *)this + 3) + 65))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 7435);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: file_->finished_building_: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (!*(void *)this)
  {
    int v5 = (uint64_t *)*((void *)this + 1);
    if (v5)
    {
      uint64_t v6 = *(void *)(*((void *)this + 3) + 16);
      sub_1000BB974(v8, v5, a3);
      if (google::protobuf::DescriptorPool::CrossLinkOnDemandHelper(v6, v8[0], v8[1]) == 1) {
        *(void *)this = v7;
      }
    }
  }
}

void sub_1000D788C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_1000D78A4(_DWORD *result, void *a2)
{
  uint64_t v2 = (a2[30] - a2[29]) >> 3;
  *uint64_t result = (a2[27] - a2[26]) >> 3;
  result[1] = v2;
  uint64_t v3 = (a2[36] - a2[35]) >> 3;
  result[2] = (a2[33] - a2[32]) >> 3;
  result[3] = v3;
  uint64_t v4 = (a2[55] - a2[54]) >> 3;
  result[4] = -1431655765 * ((a2[24] - a2[23]) >> 3);
  result[5] = v4;
  uint64_t v5 = (a2[61] - a2[60]) >> 4;
  result[6] = (a2[58] - a2[57]) >> 3;
  result[7] = v5;
  return result;
}

void *sub_1000D7924(void *a1, char *__s)
{
  *a1 = __s;
  a1[1] = 0;
  if (__s)
  {
    size_t v3 = strlen(__s);
    size_t v5 = v3;
    if ((v3 & 0x8000000000000000) != 0) {
      google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v3, "size_t to int conversion", v4);
    }
    a1[1] = v5;
  }
  return a1;
}

void *sub_1000D7974(void *a1, char **a2)
{
  uint64_t v3 = (uint64_t)a2[1];
  if (v3 < 1)
  {
    unint64_t v4 = 0;
  }
  else
  {
    unint64_t v4 = 0;
    size_t v5 = *a2;
    unint64_t v6 = (unint64_t)&(*a2)[v3];
    do
    {
      uint64_t v7 = *v5++;
      unint64_t v4 = 5 * v4 + v7;
    }
    while ((unint64_t)v5 < v6);
  }
  int8x8_t v8 = (int8x8_t)a1[1];
  if (!*(void *)&v8) {
    return 0;
  }
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v8);
  v9.i16[0] = vaddlv_u8(v9);
  unint64_t v10 = v9.u32[0];
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v11 = v4;
    if (v4 >= *(void *)&v8) {
      unint64_t v11 = v4 % *(void *)&v8;
    }
  }
  else
  {
    unint64_t v11 = (*(void *)&v8 - 1) & v4;
  }
  long long v12 = *(void **)(*a1 + 8 * v11);
  if (!v12) {
    return 0;
  }
  std::string::size_type v13 = (void *)*v12;
  if (*v12)
  {
    uint64_t v14 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v15 = v13[1];
      if (v4 == v15)
      {
        if (sub_1000D7A9C(v14, (uint64_t)(v13 + 2), (uint64_t)a2)) {
          return v13;
        }
      }
      else
      {
        if (v10 > 1)
        {
          if (v15 >= *(void *)&v8) {
            v15 %= *(void *)&v8;
          }
        }
        else
        {
          v15 &= *(void *)&v8 - 1;
        }
        if (v15 != v11) {
          return 0;
        }
      }
      std::string::size_type v13 = (void *)*v13;
    }
    while (v13);
  }
  return v13;
}

BOOL sub_1000D7A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v4 = *(void *)(a2 + 8);
  if (v4 != *(void *)(a3 + 8)) {
    return 0;
  }
  size_t v5 = *(const void **)a2;
  unint64_t v6 = *(const void **)a3;
  return v4 < 1 || v5 == v6 || memcmp(v5, v6, v4) == 0;
}

void *sub_1000D7AF4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(void *)a1) {
    return sub_1000BB9D8(a2, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    return sub_1000BBA84(a2, "");
  }
}

uint64_t google::protobuf::internal::OnShutdownDelete<google::protobuf::EncodedDescriptorDatabase>(google::protobuf::EncodedDescriptorDatabase *)::{lambda(void const*)#1}::__invoke(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t *sub_1000D7B44(uint64_t a1, unint64_t *a2)
{
  int64_t v4 = *(uint64_t **)(a1 + 8);
  uint64_t v2 = (uint64_t *)(a1 + 8);
  uint64_t v3 = v4;
  if (!v4) {
    return v2;
  }
  unint64_t v5 = *a2;
  int v6 = *((_DWORD *)a2 + 2);
  uint64_t v7 = v2;
  do
  {
    unint64_t v8 = v3[4];
    if (v8 >= v5)
    {
      if (v5 >= v8)
      {
        if (*((_DWORD *)v3 + 10) < v6) {
          ++v3;
        }
        else {
          uint64_t v7 = v3;
        }
      }
      else
      {
        uint64_t v7 = v3;
      }
    }
    else
    {
      ++v3;
    }
    uint64_t v3 = (uint64_t *)*v3;
  }
  while (v3);
  if (v7 == v2) {
    return v2;
  }
  unint64_t v9 = v7[4];
  if (v5 < v9 || v9 >= v5 && v6 < *((_DWORD *)v7 + 10)) {
    return v2;
  }
  return v7;
}

uint64_t sub_1000D7BD4(uint64_t a1)
{
  return (***(uint64_t (****)(void))a1)(**(void **)(*(void *)a1 + 8));
}

BOOL sub_1000D7BE8(uint64_t a1, void *a2, void *a3)
{
  if (*a2 != *a3) {
    return 0;
  }
  int64_t v4 = a2[2];
  if (v4 != a3[2]) {
    return 0;
  }
  unint64_t v5 = (const void *)a2[1];
  int v6 = (const void *)a3[1];
  return v4 < 1 || v5 == v6 || memcmp(v5, v6, v4) == 0;
}

uint64_t sub_1000D7C50(void *a1, uint64_t a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (v2)
  {
    int v3 = *(_DWORD *)(a2 + 8);
    unint64_t v4 = (16777619 * v3) ^ (16777499 * *(void *)a2);
    uint8x8_t v5 = (uint8x8_t)vcnt_s8(v2);
    v5.i16[0] = vaddlv_u8(v5);
    if (v5.u32[0] > 1uLL)
    {
      uint64_t v6 = (16777619 * v3) ^ (16777499 * *(void *)a2);
      if (v4 >= *(void *)&v2) {
        uint64_t v6 = v4 % *(void *)&v2;
      }
    }
    else
    {
      uint64_t v6 = v4 & (*(void *)&v2 - 1);
    }
    uint64_t v7 = *(uint64_t ***)(*a1 + 8 * v6);
    if (v7)
    {
      for (uint64_t i = *v7; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v9 = i[1];
        if (v4 == v9)
        {
          if (i[2] == *(void *)a2 && *((_DWORD *)i + 6) == v3) {
            return i[4];
          }
        }
        else
        {
          if (v5.u32[0] > 1uLL)
          {
            if (v9 >= *(void *)&v2) {
              v9 %= *(void *)&v2;
            }
          }
          else
          {
            v9 &= *(void *)&v2 - 1;
          }
          if (v9 != v6) {
            return 0;
          }
        }
      }
    }
  }
  return 0;
}

uint64_t sub_1000D7D2C(void *a1, uint64_t a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (v2)
  {
    int v3 = *(_DWORD *)(a2 + 8);
    unint64_t v4 = (16777619 * v3) ^ (16777499 * *(void *)a2);
    uint8x8_t v5 = (uint8x8_t)vcnt_s8(v2);
    v5.i16[0] = vaddlv_u8(v5);
    if (v5.u32[0] > 1uLL)
    {
      uint64_t v6 = (16777619 * v3) ^ (16777499 * *(void *)a2);
      if (v4 >= *(void *)&v2) {
        uint64_t v6 = v4 % *(void *)&v2;
      }
    }
    else
    {
      uint64_t v6 = v4 & (*(void *)&v2 - 1);
    }
    uint64_t v7 = *(uint64_t ***)(*a1 + 8 * v6);
    if (v7)
    {
      for (uint64_t i = *v7; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v9 = i[1];
        if (v9 == v4)
        {
          if (i[2] == *(void *)a2 && *((_DWORD *)i + 6) == v3) {
            return i[4];
          }
        }
        else
        {
          if (v5.u32[0] > 1uLL)
          {
            if (v9 >= *(void *)&v2) {
              v9 %= *(void *)&v2;
            }
          }
          else
          {
            v9 &= *(void *)&v2 - 1;
          }
          if (v9 != v6) {
            return 0;
          }
        }
      }
    }
  }
  return 0;
}

void sub_1000D7E08(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  if (*(char *)(a2 + 23) < 0) {
    sub_1000BB834(&__p, *(void **)a2, *(void *)(a2 + 8));
  }
  else {
    std::string __p = *(std::string *)a2;
  }
  google::protobuf::StripWhitespace(&__p);
  sub_1000BB974(v16, (uint64_t *)&__p, v5);
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v17 = 0;
  google::protobuf::SplitStringUsing(v16[0], (uint64_t)v16[1], "\n", &v17);
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  uint64_t v6 = v17;
  for (uint64_t i = v18; v6 != i; v6 += 24)
  {
    int v8 = *(char *)(a1 + 127);
    BOOL v9 = v8 < 0;
    unint64_t v10 = *(void ***)(a1 + 104);
    uint64_t v11 = *(void *)(a1 + 112);
    if (v8 >= 0) {
      unint64_t v10 = (void **)(a1 + 104);
    }
    int v39 = v10;
    int v8 = v8;
    if (v9) {
      int v8 = v11;
    }
    int v40 = v8;
    LODWORD(v12) = *(char *)(v6 + 23);
    uint64_t v13 = *(void *)v6;
    BOOL v14 = (int)v12 < 0;
    if ((int)v12 >= 0) {
      uint64_t v13 = v6;
    }
    uint64_t v37 = v13;
    LODWORD(v12) = v12;
    if (v14) {
      uint64_t v12 = *(void *)(v6 + 8);
    }
    int v38 = v12;
    uint64_t v35 = 0;
    int v36 = -1;
    uint64_t v33 = 0;
    int v34 = -1;
    uint64_t v31 = 0;
    int v32 = -1;
    uint64_t v29 = 0;
    int v30 = -1;
    uint64_t v27 = 0;
    int v28 = -1;
    uint64_t v25 = 0;
    int v26 = -1;
    uint64_t v23 = 0;
    int v24 = -1;
    uint64_t v21 = 0;
    int v22 = -1;
    *(void *)&long long v15 = &v27;
    *((void *)&v15 + 1) = &v25;
    google::protobuf::strings::SubstituteAndAppend(a3, "$0// $1\n", (uint64_t)&v39, (uint64_t)&v37, (uint64_t)&v35, (uint64_t)&v33, (uint64_t)&v31, (uint64_t)&v29, v15, (uint64_t)&v23, (uint64_t)&v21);
  }
  int v39 = (void **)&v17;
  sub_1000D9860(&v39);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_1000D7FF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
}

BOOL sub_1000D804C(int a1, google::protobuf::MessageLite *a2, uint64_t a3, uint64_t *a4)
{
  if (*(void *)(*(void *)((*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)a2 + 152))(a2)
                             + 16)
                 + 16) == a3
    || (uint64_t v8 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)a2 + 152))(a2),
        (uint64_t MessageTypeByName = google::protobuf::DescriptorPool::FindMessageTypeByName(a3, *(uint64_t **)(v8 + 8), v9)) == 0))
  {
    return sub_1000D8330(a1, (uint64_t)a2, a4);
  }
  else
  {
    uint64_t v11 = (const google::protobuf::Descriptor *)MessageTypeByName;
    google::protobuf::DynamicMessageFactory::DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)v23);
    uint64_t Prototype = google::protobuf::DynamicMessageFactory::GetPrototype((google::protobuf::DynamicMessageFactory *)v23, v11);
    uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)Prototype + 24))(Prototype);
    google::protobuf::MessageLite::SerializeAsString(a2, (uint64_t)__p);
    char v14 = google::protobuf::MessageLite::ParseFromString(v13, __p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    uint64_t v15 = v13;
    if ((v14 & 1) == 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 2341);
      uint64_t v16 = google::protobuf::internal::LogMessage::operator<<(__p, "Found invalid proto option data for: ");
      uint64_t v17 = (*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)a2 + 152))(a2);
      uint64_t v18 = google::protobuf::internal::LogMessage::operator<<(v16, *(const std::string::value_type **)(v17 + 8));
      google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v18->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
      uint64_t v15 = (uint64_t)a2;
    }
    BOOL v19 = sub_1000D8330(a1, v15, a4);
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)v23);
    return v19;
  }
}

void sub_1000D82AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  google::protobuf::internal::LogMessage::~LogMessage(&__p);
  if (v19) {
    (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
  }
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&a19);
  _Unwind_Resume(a1);
}

BOOL sub_1000D8330(int a1, uint64_t a2, uint64_t *a3)
{
  sub_1000D89B4(a3);
  (*(void (**)(uint64_t))(*(void *)a2 + 152))(a2);
  unsigned int v52 = 0;
  long long v53 = 0;
  uint64_t v54 = 0;
  int v40 = (google::protobuf::Reflection *)v6;
  uint64_t v45 = (google::protobuf::Message *)a2;
  google::protobuf::Reflection::ListFields(v6, a2, (uint64_t)&v52);
  uint64_t v7 = v52;
  char v41 = v53;
  if (v52 != v53)
  {
    int v44 = a1 + 1;
    std::string::size_type __n = 2 * a1;
    while (1)
    {
      uint64_t v8 = *(void *)v7;
      int v9 = *(_DWORD *)(*(void *)v7 + 60);
      uint64_t v42 = v7;
      if (v9 != 3) {
        break;
      }
      int v10 = google::protobuf::Reflection::FieldSize(v40, v45, (const google::protobuf::FieldDescriptor *)v8);
      if (v10 >= 1) {
        goto LABEL_7;
      }
LABEL_68:
      uint64_t v7 = v42 + 8;
      if (v42 + 8 == v41)
      {
        uint64_t v7 = v52;
        goto LABEL_70;
      }
    }
    int v10 = 1;
LABEL_7:
    for (int i = 0; i != v10; ++i)
    {
      memset(&v51, 0, sizeof(v51));
      uint64_t v12 = *(std::once_flag::_State_type **)(v8 + 48);
      if (v12)
      {
        v55.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v56[0] = v8;
        if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
        {
          v46.__r_.__value_.__r.__words[0] = (std::string::size_type)&v55;
          v46.__r_.__value_.__l.__size_ = (std::string::size_type)v56;
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v46;
          std::__call_once(v12, &__p, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      if ((*(_DWORD *)(v8 + 56) & 0xFFFFFFFE) != 0xA) {
        google::protobuf::TextFormat::PrintFieldValueToString();
      }
      memset(&__p, 0, sizeof(__p));
      google::protobuf::TextFormat::Printer::Printer((google::protobuf::TextFormat::Printer *)&v46);
      LODWORD(v46.__r_.__value_.__l.__data_) = v44;
      if (v9 == 3) {
        int v13 = i;
      }
      else {
        int v13 = -1;
      }
      google::protobuf::TextFormat::Printer::PrintFieldValueToString((int *)&v46, v45, (google::protobuf::FieldDescriptor *)v8, v13, (uint64_t)&__p);
      std::string::append(&v51, "{\n");
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      std::string::append(&v51, (const std::string::value_type *)p_p, size);
      std::string::append(&v51, __n, 32);
      std::string::append(&v51, "}");
      sub_1000D8A04((uint64_t)v49, v49[1]);
      sub_1000D8A88((uint64_t)v48, (void *)v48[1]);
      uint64_t v16 = v47;
      std::string v47 = 0;
      if (v16) {
        (*(void (**)(char *))(*(void *)v16 + 8))(v16);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      memset(&__p, 0, sizeof(__p));
      if (*(unsigned char *)(v8 + 67))
      {
        std::operator+<char>();
        uint64_t v17 = std::string::append(&v46, ")");
        std::string::size_type v18 = v17->__r_.__value_.__r.__words[0];
        v55.__r_.__value_.__r.__words[0] = v17->__r_.__value_.__l.__size_;
        *(std::string::size_type *)((char *)v55.__r_.__value_.__r.__words + 7) = *(std::string::size_type *)((char *)&v17->__r_.__value_.__r.__words[1] + 7);
        char v19 = HIBYTE(v17->__r_.__value_.__r.__words[2]);
        v17->__r_.__value_.__l.__size_ = 0;
        v17->__r_.__value_.__r.__words[2] = 0;
        v17->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        __p.__r_.__value_.__r.__words[0] = v18;
        __p.__r_.__value_.__l.__size_ = v55.__r_.__value_.__r.__words[0];
        *(std::string::size_type *)((char *)&__p.__r_.__value_.__r.__words[1] + 7) = *(std::string::size_type *)((char *)v55.__r_.__value_.__r.__words + 7);
        *((unsigned char *)&__p.__r_.__value_.__s + 23) = v19;
        if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v46.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        std::string::operator=(&__p, *(const std::string **)v8);
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v20 = __p.__r_.__value_.__l.__size_;
      }
      sub_1000BB8EC((uint64_t)&v55, v20 + 3);
      if ((v55.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        char v21 = &v55;
      }
      else {
        char v21 = (std::string *)v55.__r_.__value_.__r.__words[0];
      }
      if (v20)
      {
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          int v22 = &__p;
        }
        else {
          int v22 = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        memmove(v21, v22, v20);
      }
      *(_DWORD *)((char *)&v21->__r_.__value_.__l.__data_ + v20) = 2112800;
      if ((v51.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v23 = &v51;
      }
      else {
        uint64_t v23 = (std::string *)v51.__r_.__value_.__r.__words[0];
      }
      if ((v51.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v24 = HIBYTE(v51.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v24 = v51.__r_.__value_.__l.__size_;
      }
      uint64_t v25 = std::string::append(&v55, (const std::string::value_type *)v23, v24);
      std::string::size_type v26 = v25->__r_.__value_.__r.__words[0];
      v56[0] = v25->__r_.__value_.__l.__size_;
      *(void *)((char *)v56 + 7) = *(std::string::size_type *)((char *)&v25->__r_.__value_.__r.__words[1] + 7);
      char v27 = HIBYTE(v25->__r_.__value_.__r.__words[2]);
      v25->__r_.__value_.__l.__size_ = 0;
      v25->__r_.__value_.__r.__words[2] = 0;
      v25->__r_.__value_.__r.__words[0] = 0;
      unint64_t v28 = a3[1];
      unint64_t v29 = a3[2];
      if (v28 >= v29)
      {
        unint64_t v31 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v28 - *a3) >> 3);
        unint64_t v32 = v31 + 1;
        if (v31 + 1 > 0xAAAAAAAAAAAAAAALL) {
          sub_100078F84();
        }
        unint64_t v33 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v29 - *a3) >> 3);
        if (2 * v33 > v32) {
          unint64_t v32 = 2 * v33;
        }
        if (v33 >= 0x555555555555555) {
          unint64_t v34 = 0xAAAAAAAAAAAAAAALL;
        }
        else {
          unint64_t v34 = v32;
        }
        v48[0] = a3 + 2;
        if (v34) {
          uint64_t v35 = (char *)sub_1000D8B84((uint64_t)(a3 + 2), v34);
        }
        else {
          uint64_t v35 = 0;
        }
        std::string::size_type v36 = (std::string::size_type)&v35[24 * v31];
        v46.__r_.__value_.__r.__words[0] = (std::string::size_type)v35;
        v46.__r_.__value_.__l.__size_ = v36;
        std::string v47 = &v35[24 * v34];
        *(void *)std::string::size_type v36 = v26;
        *(void *)(v36 + 8) = v56[0];
        *(void *)(v36 + 15) = *(void *)((char *)v56 + 7);
        *(unsigned char *)(v36 + 23) = v27;
        v46.__r_.__value_.__r.__words[2] = v36 + 24;
        sub_1000D8B0C(a3, &v46);
        uint64_t v30 = a3[1];
        sub_1000D8CEC((uint64_t)&v46);
      }
      else
      {
        *(void *)unint64_t v28 = v26;
        *(void *)(v28 + 8) = v56[0];
        *(void *)(v28 + 15) = *(void *)((char *)v56 + 7);
        *(unsigned char *)(v28 + 23) = v27;
        uint64_t v30 = v28 + 24;
        a3[1] = v28 + 24;
      }
      a3[1] = v30;
      if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v55.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v51.__r_.__value_.__l.__data_);
      }
    }
    goto LABEL_68;
  }
LABEL_70:
  uint64_t v38 = *a3;
  uint64_t v37 = a3[1];
  if (v7)
  {
    long long v53 = v7;
    operator delete(v7);
  }
  return v38 != v37;
}

void sub_1000D8888(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  uint64_t v45 = *(void **)(v43 - 160);
  if (v45)
  {
    *(void *)(v43 - 152) = v45;
    operator delete(v45);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000D8948(uint64_t a1)
{
  sub_1000D8A04(a1 + 56, *(void **)(a1 + 64));
  sub_1000D8A88(a1 + 32, *(void **)(a1 + 40));
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_1000D89B4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

void sub_1000D8A04(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1000D8A04(a1, *a2);
    sub_1000D8A04(a1, a2[1]);
    uint64_t v4 = a2[5];
    a2[5] = 0;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    operator delete(a2);
  }
}

void sub_1000D8A88(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1000D8A88(a1, *a2);
    sub_1000D8A88(a1, a2[1]);
    uint64_t v4 = a2[5];
    a2[5] = 0;
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    operator delete(a2);
  }
}

uint64_t sub_1000D8B0C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1000D8BCC((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_1000D8B84(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_100079064();
  }
  return operator new(24 * a2);
}

uint64_t sub_1000D8BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  void v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  sub_1000D8C6C((uint64_t)v12);
  return a6;
}

uint64_t sub_1000D8C6C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1000D8CA4(a1);
  }
  return a1;
}

void sub_1000D8CA4(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 24;
  }
}

uint64_t sub_1000D8CEC(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1000D8D24(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

std::string *sub_1000D8D7C@<X0>(std::string::value_type *__s@<X1>, std::string **a2@<X0>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  return sub_1000D8DD4(*a2, a2[1], __s, a3);
}

void sub_1000D8DB8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1000D8DD4(std::string *result, std::string *a2, std::string::value_type *__s, std::string *this)
{
  if (result != a2)
  {
    uint64_t v7 = (uint64_t)result;
    uint64_t v8 = 0;
    do
    {
      if (v8) {
        std::string::append(this, __s);
      }
      int v9 = *(char *)(v7 + 23);
      BOOL v10 = v9 < 0;
      uint64_t v11 = *(void *)v7;
      if (v9 >= 0) {
        uint64_t v11 = v7;
      }
      uint64_t v12 = *(unsigned __int8 *)(v7 + 23);
      if (v10) {
        uint64_t v12 = *(void *)(v7 + 8);
      }
      v13[0] = v11;
      v13[1] = v12;
      uint64_t result = google::protobuf::StrAppend(this, (uint64_t)v13);
      v7 += 24;
      v8 -= 24;
    }
    while ((std::string *)v7 != a2);
  }
  return result;
}

google::protobuf::FileDescriptorTables *google::protobuf::internal::OnShutdownDelete<google::protobuf::FileDescriptorTables>(google::protobuf::FileDescriptorTables *)::{lambda(void const*)#1}::__invoke(google::protobuf::FileDescriptorTables *result)
{
  if (result)
  {
    google::protobuf::FileDescriptorTables::~FileDescriptorTables(result);
    operator delete();
  }
  return result;
}

void sub_1000D8ED8()
{
}

void sub_1000D906C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::OnShutdownDelete<std::set<std::string>>(std::set<std::string> *)::{lambda(void const*)#1}::__invoke(uint64_t result)
{
  if (result)
  {
    sub_1000DD030(result, *(char **)(result + 8));
    operator delete();
  }
  return result;
}

_OWORD *sub_1000D9138(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t v5 = (void **)sub_1000D91CC((uint64_t)a1, &v9, a2);
  uint64_t v6 = *v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    uint64_t v6 = operator new(0x38uLL);
    std::string v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    sub_10002751C(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

void *sub_1000D91CC(uint64_t a1, void *a2, const void **a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 16;
    do
    {
      while (1)
      {
        uint64_t v8 = (void *)v4;
        uint64_t v9 = (const void **)(v4 + 32);
        if (!sub_1000D926C(v7, a3, (const void **)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v8;
        uint64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!sub_1000D926C(v7, v9, a3)) {
        break;
      }
      uint64_t v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

BOOL sub_1000D926C(uint64_t a1, const void **a2, const void **a3)
{
  int v3 = *((char *)a3 + 23);
  int v4 = *((char *)a2 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = (size_t)a2[1];
  }
  if (v4 >= 0) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = *a2;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    size_t v7 = (size_t)a3[1];
  }
  if (v3 >= 0) {
    uint64_t v8 = a3;
  }
  else {
    uint64_t v8 = *a3;
  }
  if (v7 >= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = v7;
  }
  int v10 = memcmp(v6, v8, v9);
  if (v10) {
    return v10 < 0;
  }
  else {
    return v5 < v7;
  }
}

void sub_1000D92D8(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 55) < 0) {
      operator delete(__p[4]);
    }
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

uint64_t sub_1000D9338(uint64_t a1, const void **a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 16;
  uint64_t v6 = a1 + 8;
  do
  {
    BOOL v7 = sub_1000D926C(v5, (const void **)(v3 + 32), a2);
    uint64_t v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      uint64_t v8 = (uint64_t *)v3;
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v8;
  }
  while (*v8);
  if (v6 == v2 || sub_1000D926C(v5, a2, (const void **)(v6 + 32))) {
    return v2;
  }
  return v6;
}

void sub_1000D93C8(void **this)
{
  *this = off_1001CF158;
  if (*((char *)this + 31) < 0) {
    operator delete(this[1]);
  }
  google::protobuf::io::ErrorCollector::~ErrorCollector((google::protobuf::io::ErrorCollector *)this);
  operator delete();
}

std::string *sub_1000D943C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (std::string *)(a1 + 8);
  if ((*(char *)(a1 + 31) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(a1 + 31)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*(void *)(a1 + 16)) {
LABEL_3:
  }
    std::string::append((std::string *)(a1 + 8), "; ");
LABEL_4:
  int v6 = *(char *)(a4 + 23);
  if (v6 >= 0) {
    BOOL v7 = (const std::string::value_type *)a4;
  }
  else {
    BOOL v7 = *(const std::string::value_type **)a4;
  }
  if (v6 >= 0) {
    std::string::size_type v8 = *(unsigned __int8 *)(a4 + 23);
  }
  else {
    std::string::size_type v8 = *(void *)(a4 + 8);
  }
  return std::string::append(v5, v7, v8);
}

void sub_1000D94BC(google::protobuf::TextFormat::Finder *a1)
{
  google::protobuf::TextFormat::Finder::~Finder(a1);
  operator delete();
}

uint64_t sub_1000D94F4(uint64_t a1, uint64_t a2, std::string *a3)
{
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 152))(a2);
  int v6 = google::protobuf::DescriptorBuilder::LookupSymbolNoPlaceholder(*(void *)(a1 + 8), a3, *(void *)(v5 + 8), 0, 1);
  uint64_t v8 = v7;
  if (v6 == 1)
  {
    if (!*(unsigned char *)(*(void *)(v5 + 32) + 72) || *(int *)(v7 + 128) < 1) {
      return 0;
    }
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *(void *)(v8 + 80);
      if (*(void *)(v11 + v9 + 80) == v5)
      {
        uint64_t v12 = *(std::once_flag::_State_type **)(v11 + v9 + 48);
        if (v12)
        {
          uint64_t v14 = v11 + v9;
          long long v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
          {
            v17[0] = &v15;
            v17[1] = &v14;
            uint64_t v16 = v17;
            std::__call_once(v12, &v16, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        if (*(_DWORD *)(v11 + v9 + 56) == 11
          && *(_DWORD *)(v11 + v9 + 60) == 1
          && google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(v11 + v9)) == v8)
        {
          break;
        }
      }
      ++v10;
      v9 += 152;
      if (v10 >= *(int *)(v8 + 128)) {
        return 0;
      }
    }
    return v11 + v9;
  }
  else if (v6 != 2 || !*(unsigned char *)(v7 + 67))
  {
    return 0;
  }
  return v8;
}

uint64_t sub_1000D9678(uint64_t a1, uint64_t a2, const void **a3, std::string *a4)
{
  size_t v7 = strlen("type.googleapis.com/");
  size_t v8 = v7;
  size_t v9 = *((unsigned __int8 *)a3 + 23);
  if (*((char *)a3 + 23) < 0)
  {
    if ((const void *)v7 != a3[1])
    {
      size_t v11 = strlen("type.googleprod.com/");
      size_t v9 = (size_t)a3[1];
      goto LABEL_15;
    }
    if (v7 == -1) {
      goto LABEL_23;
    }
    uint64_t v10 = (const void **)*a3;
  }
  else
  {
    if (v7 != v9)
    {
      size_t v11 = strlen("type.googleprod.com/");
      goto LABEL_12;
    }
    uint64_t v10 = a3;
    if (v8 == -1) {
LABEL_23:
    }
      sub_1000D97B8();
  }
  if (!memcmp(v10, "type.googleapis.com/", v8)) {
    goto LABEL_20;
  }
  size_t v11 = strlen("type.googleprod.com/");
  if ((v9 & 0x80) != 0)
  {
    size_t v9 = (size_t)a3[1];
LABEL_15:
    if (v11 != v9) {
      return 0;
    }
    if (v9 == -1) {
      sub_1000D97B8();
    }
    a3 = (const void **)*a3;
    goto LABEL_18;
  }
LABEL_12:
  if (v11 != v9) {
    return 0;
  }
LABEL_18:
  if (memcmp(a3, "type.googleprod.com/", v9)) {
    return 0;
  }
LABEL_20:
  if (google::protobuf::DescriptorBuilder::FindSymbol(*(void *)(a1 + 8), a4, 1) == 1) {
    return v13;
  }
  else {
    return 0;
  }
}

void sub_1000D97B8()
{
}

void sub_1000D97D0(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_1000D982C(exception, a1);
}

void sub_1000D9818(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_1000D982C(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  return result;
}

void sub_1000D9860(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_1000D89B4((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_1000D98B4(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_1000D99A4(a1, prime);
    }
  }
}

void sub_1000D99A4(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_100079064();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      size_t v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            void *v7 = *v11;
            void *v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            size_t v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          size_t v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    uint64_t v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

uint64_t sub_1000D9B00(uint64_t a1)
{
  sub_1000D9B3C(a1, *(void ***)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_1000D9B3C(int a1, void **__p)
{
  if (__p)
  {
    uint64_t v2 = __p;
    do
    {
      uint64_t v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

uint64_t sub_1000D9B88(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      uint64_t v3 = (void *)*v2;
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
  int8x8_t v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

void sub_1000D9BD4(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_1000D9C28((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_1000D9C28(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (v2 != *a1)
  {
    uint64_t v4 = a1[1];
    do
    {
      uint64_t v6 = *(void **)(v4 - 24);
      v4 -= 24;
      unint64_t v5 = v6;
      if (v6)
      {
        *(void *)(v2 - 16) = v5;
        operator delete(v5);
      }
      uint64_t v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

void sub_1000D9C80(void ***a1)
{
  uint64_t v2 = (uint64_t **)*a1;
  if (*v2)
  {
    sub_1000D9CD4((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_1000D9CD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4 != a2)
  {
    unint64_t v5 = v4 - 1;
    do
    {
      uint64_t v6 = *v5;
      uint64_t *v5 = 0;
      if (v6) {
        sub_1000D9D38((uint64_t)v5, v6);
      }
    }
    while (v5-- != a2);
  }
  *(void *)(a1 + 8) = a2;
}

void sub_1000D9D38(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    operator delete();
  }
}

void sub_1000D9D94(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_1000D9DE8(v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void *sub_1000D9DE8(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = (void *)*result;
  uint64_t v3 = (void *)result[1];
  while (v3 != v2)
  {
    uint64_t v4 = (void *)*--v3;
    uint64_t result = v4;
    *uint64_t v3 = 0;
    if (v4) {
      uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
  }
  v1[1] = v2;
  return result;
}

void sub_1000D9E54(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_1000D9EA8((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

uint64_t sub_1000D9EA8(uint64_t result, void *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = *(void **)(result + 8);
  while (v3 != a2)
  {
    uint64_t v4 = *--v3;
    uint64_t result = v4;
    *uint64_t v3 = 0;
    if (v4) {
      operator delete();
    }
  }
  *(void *)(v2 + 8) = a2;
  return result;
}

void sub_1000D9F0C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (google::protobuf::FileDescriptorTables **)**a1;
  if (v2)
  {
    uint64_t v4 = (google::protobuf::FileDescriptorTables **)v1[1];
    unint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
        sub_1000D9F94(--v4, 0);
      while (v4 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

google::protobuf::FileDescriptorTables *sub_1000D9F94(google::protobuf::FileDescriptorTables **a1, google::protobuf::FileDescriptorTables *a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    google::protobuf::FileDescriptorTables::~FileDescriptorTables(result);
    operator delete();
  }
  return result;
}

unsigned __int8 *sub_1000D9FE4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_1000DA310(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    uint64_t v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (sub_1000DA7BC(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  sub_1000DA264(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_1000D98B4(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  int v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    void *v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v25[0];
  ++*v7;
  return i;
}

void sub_1000DA240(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p) {
    sub_1000DA864((uint64_t)&a11, __p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_1000DA264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = (char *)operator new(0x30uLL);
  *(void *)(a4 + 8) = v7;
  *(void *)a4 = v8;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)unint64_t v8 = 0;
  *((void *)v8 + 1) = a2;
  uint64_t result = v8 + 16;
  if (*(char *)(a3 + 23) < 0)
  {
    uint64_t result = sub_1000BB834(result, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)a3;
    *((void *)v8 + 4) = *(void *)(a3 + 16);
  }
  *((_DWORD *)v8 + 10) = *(_DWORD *)(a3 + 24);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_1000DA2F4(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_1000DA864(v3, v2);
  _Unwind_Resume(a1);
}

unint64_t sub_1000DA310(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 8);
  if (*(char *)(a2 + 23) >= 0)
  {
    unint64_t v3 = *(unsigned __int8 *)(a2 + 23);
  }
  else
  {
    a2 = *(void *)a2;
    unint64_t v3 = v2;
  }
  return sub_1000DA350((uint64_t)&v5, (uint64_t *)a2, v3);
}

unint64_t sub_1000DA350(uint64_t a1, uint64_t *a2, unint64_t a3)
{
  if (a3 > 0x20)
  {
    if (a3 > 0x40)
    {
      uint64_t v4 = *(uint64_t *)((char *)a2 + a3 - 48);
      uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 40);
      uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 24);
      uint64_t v8 = *(uint64_t *)((char *)a2 + a3 - 64);
      uint64_t v7 = *(uint64_t *)((char *)a2 + a3 - 56);
      uint64_t v9 = *(uint64_t *)((char *)a2 + a3 - 16);
      uint64_t v10 = *(uint64_t *)((char *)a2 + a3 - 8);
      unint64_t v11 = v7 + v9;
      unint64_t v12 = 0x9DDFEA08EB382D69
          * (v6 ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))) >> 47) ^ (0x9DDFEA08EB382D69 * (v6 ^ (v4 + a3))));
      unint64_t v13 = 0x9DDFEA08EB382D69 * (v12 ^ (v12 >> 47));
      unint64_t v14 = v8 + a3 + v7 + v4;
      uint64_t v15 = v14 + v5;
      unint64_t v16 = __ROR8__(v14, 44) + v8 + a3 + __ROR8__(v5 + v8 + a3 - 0x622015F714C7D297 * (v12 ^ (v12 >> 47)), 21);
      uint64_t v17 = v7 + v9 + *(uint64_t *)((char *)a2 + a3 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v18 = v17 + v6 + v9;
      uint64_t v19 = __ROR8__(v18, 44);
      uint64_t v20 = v18 + v10;
      uint64_t v21 = v19 + v17 + __ROR8__(v17 + v5 + v10, 21);
      uint64_t v23 = *a2;
      int v22 = a2 + 4;
      unint64_t v24 = v23 - 0x4B6D499041670D8DLL * v5;
      uint64_t v25 = -(uint64_t)((a3 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        uint64_t v26 = *(v22 - 3);
        uint64_t v27 = v24 + v15 + v11 + v26;
        uint64_t v28 = v22[2];
        uint64_t v29 = v22[3];
        uint64_t v30 = v22[1];
        unint64_t v11 = v30 + v15 - 0x4B6D499041670D8DLL * __ROR8__(v11 + v16 + v28, 42);
        uint64_t v31 = v13 + v20;
        uint64_t v32 = *(v22 - 2);
        uint64_t v33 = *(v22 - 1);
        uint64_t v34 = *(v22 - 4) - 0x4B6D499041670D8DLL * v16;
        uint64_t v35 = v34 + v20 + v33;
        uint64_t v36 = v34 + v26 + v32;
        uint64_t v15 = v36 + v33;
        uint64_t v37 = __ROR8__(v36, 44) + v34;
        unint64_t v38 = (0xB492B66FBE98F273 * __ROR8__(v27, 37)) ^ v21;
        unint64_t v24 = 0xB492B66FBE98F273 * __ROR8__(v31, 33);
        unint64_t v16 = v37 + __ROR8__(v35 + v38, 21);
        unint64_t v39 = v24 + v21 + *v22;
        uint64_t v20 = v39 + v30 + v28 + v29;
        uint64_t v21 = __ROR8__(v39 + v30 + v28, 44) + v39 + __ROR8__(v11 + v32 + v39 + v29, 21);
        v22 += 8;
        unint64_t v13 = v38;
        v25 += 64;
      }
      while (v25);
      unint64_t v40 = v24
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) ^ ((0x9DDFEA08EB382D69 * (v21 ^ ((0x9DDFEA08EB382D69 * (v21 ^ v16)) >> 47) ^ (0x9DDFEA08EB382D69 * (v21 ^ v16)))) >> 47));
      unint64_t v41 = 0x9DDFEA08EB382D69
          * (v40 ^ (v38
                  - 0x4B6D499041670D8DLL * (v11 ^ (v11 >> 47))
                  - 0x622015F714C7D297
                  * ((0x9DDFEA08EB382D69
                    * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) ^ ((0x9DDFEA08EB382D69 * (v20 ^ ((0x9DDFEA08EB382D69 * (v20 ^ v15)) >> 47) ^ (0x9DDFEA08EB382D69 * (v20 ^ v15)))) >> 47))));
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) ^ ((0x9DDFEA08EB382D69 * (v40 ^ (v41 >> 47) ^ v41)) >> 47));
    }
    else
    {
      return sub_1000DA6FC(a2, a3);
    }
  }
  else if (a3 > 0x10)
  {
    return sub_1000DA650(a2, a3);
  }
  else
  {
    return sub_1000DA558(a2, a3);
  }
}

unint64_t sub_1000DA558(_DWORD *a1, unint64_t a2)
{
  if (a2 < 9)
  {
    if (a2 < 4)
    {
      unint64_t result = 0x9AE16A3B2F90404FLL;
      if (a2)
      {
        unint64_t v8 = (0xC949D7C7509E6557 * (a2 + 4 * *((unsigned __int8 *)a1 + a2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                      * (*(unsigned __int8 *)a1 | ((unint64_t)*((unsigned __int8 *)a1 + (a2 >> 1)) << 8)));
        return 0x9AE16A3B2F90404FLL * (v8 ^ (v8 >> 47));
      }
    }
    else
    {
      uint64_t v6 = *(unsigned int *)((char *)a1 + a2 - 4);
      unint64_t v7 = 0x9DDFEA08EB382D69 * (((8 * *a1) + a2) ^ v6);
      return 0x9DDFEA08EB382D69
           * ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) ^ ((0x9DDFEA08EB382D69 * (v6 ^ (v7 >> 47) ^ v7)) >> 47));
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)a1 + a2 - 8);
    uint64_t v4 = __ROR8__(v3 + a2, a2);
    return (0x9DDFEA08EB382D69
          * ((0x9DDFEA08EB382D69
            * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) ^ ((0x9DDFEA08EB382D69 * (v4 ^ ((0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)) >> 47) ^ (0x9DDFEA08EB382D69 * (v4 ^ *(void *)a1)))) >> 47))) ^ v3;
  }
  return result;
}

unint64_t sub_1000DA650(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  unint64_t v3 = 0xB492B66FBE98F273 * *a1;
  uint64_t v4 = __ROR8__(0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8), 30) + __ROR8__(v3 - v2, 43);
  unint64_t v5 = v3 + a2 + __ROR8__(v2 ^ 0xC949D7C7509E6557, 20) - 0x9AE16A3B2F90404FLL * *(void *)((char *)a1 + a2 - 8);
  unint64_t v6 = 0x9DDFEA08EB382D69 * (v5 ^ (v4 - 0x3C5A37A36834CED9 * *(void *)((char *)a1 + a2 - 16)));
  return 0x9DDFEA08EB382D69
       * ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) ^ ((0x9DDFEA08EB382D69 * (v5 ^ (v6 >> 47) ^ v6)) >> 47));
}

unint64_t sub_1000DA6FC(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)((char *)a1 + a2 - 16);
  uint64_t v3 = *a1 - 0x3C5A37A36834CED9 * (v2 + a2);
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = __ROR8__(v3 + v4, 52);
  uint64_t v7 = v3 + a1[1];
  uint64_t v8 = __ROR8__(v7, 7);
  uint64_t v9 = v7 + v5;
  uint64_t v10 = *(void *)((char *)a1 + a2 - 32) + v5;
  uint64_t v11 = v8 + __ROR8__(*a1 - 0x3C5A37A36834CED9 * (v2 + a2), 37) + v6 + __ROR8__(v9, 31);
  uint64_t v12 = *(void *)((char *)a1 + a2 - 24) + v10 + v2;
  unint64_t v13 = 0xC3A5C85C97CB3127 * (v12 + *(void *)((char *)a1 + a2 - 8) + v4 + v11)
      - 0x651E95C4D06FBFB1
      * (v9
       + v4
       + __ROR8__(v10, 37)
       + __ROR8__(*(void *)((char *)a1 + a2 - 24) + v10, 7)
       + __ROR8__(*(void *)((char *)a1 + a2 - 8) + v4 + v10, 52)
       + __ROR8__(v12, 31));
  return 0x9AE16A3B2F90404FLL
       * ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) ^ ((v11 - 0x3C5A37A36834CED9 * (v13 ^ (v13 >> 47))) >> 47));
}

uint64_t sub_1000DA7BC(uint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2[23];
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = a2[23];
  }
  else {
    uint64_t v5 = *((void *)a2 + 1);
  }
  uint64_t v6 = a3[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a3 + 1);
  }
  if (v5 != v6) {
    return 0;
  }
  if (v7 < 0) {
    uint64_t v3 = *(unsigned __int8 **)a3;
  }
  if ((v4 & 0x80) != 0) {
    return memcmp(*(const void **)a2, v3, *((void *)a2 + 1)) == 0;
  }
  if (!a2[23]) {
    return 1;
  }
  uint64_t v8 = v4 - 1;
  do
  {
    int v10 = *a2++;
    int v9 = v10;
    int v12 = *v3++;
    int v11 = v12;
    BOOL v14 = v8-- != 0;
    uint64_t result = v9 == v11;
  }
  while (v9 == v11 && v14);
  return result;
}

void sub_1000DA864(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

void sub_1000DA8C4(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime <= *(void *)&v4)
  {
    if (prime >= *(void *)&v4) {
      return;
    }
    unint64_t v11 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v12 = (uint8x8_t)vcnt_s8(v4), v12.i16[0] = vaddlv_u8(v12), v12.u32[0] > 1uLL))
    {
      unint64_t v11 = std::__next_prime(v11);
    }
    else
    {
      uint64_t v13 = 1 << -(char)__clz(v11 - 1);
      if (v11 >= 2) {
        unint64_t v11 = v13;
      }
    }
    if (prime <= v11) {
      size_t prime = v11;
    }
    if (prime >= *(void *)&v4) {
      return;
    }
    if (!prime)
    {
      unint64_t v16 = *(void **)a1;
      *(void *)a1 = 0;
      if (v16) {
        operator delete(v16);
      }
      *(void *)(a1 + 8) = 0;
      return;
    }
  }
  if (prime >> 61) {
    sub_100079064();
  }
  uint64_t v5 = operator new(8 * prime);
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = v5;
  if (v6) {
    operator delete(v6);
  }
  uint64_t v7 = 0;
  *(void *)(a1 + 8) = prime;
  do
    *(void *)(*(void *)a1 + 8 * v7++) = 0;
  while (prime != v7);
  uint64_t v8 = *(void **)(a1 + 16);
  if (v8)
  {
    size_t v9 = v8[1];
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)prime);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      if (v9 >= prime) {
        v9 %= prime;
      }
    }
    else
    {
      v9 &= prime - 1;
    }
    *(void *)(*(void *)a1 + 8 * v9) = a1 + 16;
    BOOL v14 = (void *)*v8;
    if (*v8)
    {
      do
      {
        size_t v15 = v14[1];
        if (v10.u32[0] > 1uLL)
        {
          if (v15 >= prime) {
            v15 %= prime;
          }
        }
        else
        {
          v15 &= prime - 1;
        }
        if (v15 != v9)
        {
          if (!*(void *)(*(void *)a1 + 8 * v15))
          {
            *(void *)(*(void *)a1 + 8 * v15) = v8;
            goto LABEL_31;
          }
          *uint64_t v8 = *v14;
          void *v14 = **(void **)(*(void *)a1 + 8 * v15);
          **(void **)(*(void *)a1 + 8 * v15) = v14;
          BOOL v14 = v8;
        }
        size_t v15 = v9;
LABEL_31:
        uint64_t v8 = v14;
        BOOL v14 = (void *)*v14;
        size_t v9 = v15;
      }
      while (v14);
    }
  }
}

uint64_t sub_1000DAAC0(uint64_t *a1)
{
  uint64_t result = *a1;
  *a1 = 0;
  if (result)
  {
    sub_1000D9B88(result);
    operator delete();
  }
  return result;
}

void *sub_1000DAB10(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    sub_100079064();
  }
  return operator new(32 * a2);
}

uint64_t *sub_1000DAB48(void *a1, char **a2)
{
  uint64_t result = sub_1000DAB80(a1, a2);
  if (result)
  {
    sub_1000DACA8(a1, result);
    return (uint64_t *)1;
  }
  return result;
}

void *sub_1000DAB80(void *a1, char **a2)
{
  uint64_t v3 = (uint64_t)a2[1];
  if (v3 < 1)
  {
    unint64_t v4 = 0;
  }
  else
  {
    unint64_t v4 = 0;
    uint64_t v5 = *a2;
    unint64_t v6 = (unint64_t)&(*a2)[v3];
    do
    {
      uint64_t v7 = *v5++;
      unint64_t v4 = 5 * v4 + v7;
    }
    while ((unint64_t)v5 < v6);
  }
  int8x8_t v8 = (int8x8_t)a1[1];
  if (!*(void *)&v8) {
    return 0;
  }
  uint8x8_t v9 = (uint8x8_t)vcnt_s8(v8);
  v9.i16[0] = vaddlv_u8(v9);
  unint64_t v10 = v9.u32[0];
  if (v9.u32[0] > 1uLL)
  {
    unint64_t v11 = v4;
    if (v4 >= *(void *)&v8) {
      unint64_t v11 = v4 % *(void *)&v8;
    }
  }
  else
  {
    unint64_t v11 = (*(void *)&v8 - 1) & v4;
  }
  uint8x8_t v12 = *(void **)(*a1 + 8 * v11);
  if (!v12) {
    return 0;
  }
  uint64_t v13 = (void *)*v12;
  if (*v12)
  {
    uint64_t v14 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v15 = v13[1];
      if (v15 == v4)
      {
        if (sub_1000D7A9C(v14, (uint64_t)(v13 + 2), (uint64_t)a2)) {
          return v13;
        }
      }
      else
      {
        if (v10 > 1)
        {
          if (v15 >= *(void *)&v8) {
            v15 %= *(void *)&v8;
          }
        }
        else
        {
          v15 &= *(void *)&v8 - 1;
        }
        if (v15 != v11) {
          return 0;
        }
      }
      uint64_t v13 = (void *)*v13;
    }
    while (v13);
  }
  return v13;
}

uint64_t sub_1000DACA8(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  sub_1000DACEC(a1, a2, (uint64_t)&__p);
  uint64_t v3 = __p;
  std::string __p = 0;
  if (v3) {
    operator delete(v3);
  }
  return v2;
}

void *sub_1000DACEC@<X0>(void *result@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  unint64_t v6 = *(void **)(*result + 8 * v4);
  do
  {
    uint64_t v7 = v6;
    unint64_t v6 = (void *)*v6;
  }
  while (v6 != a2);
  if (v7 == result + 2) {
    goto LABEL_18;
  }
  unint64_t v8 = v7[1];
  if (v5.u32[0] > 1uLL)
  {
    if (v8 >= *(void *)&v3) {
      v8 %= *(void *)&v3;
    }
  }
  else
  {
    v8 &= *(void *)&v3 - 1;
  }
  if (v8 != v4)
  {
LABEL_18:
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v9 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v4) {
LABEL_19:
    }
      *(void *)(*result + 8 * v4) = 0;
  }
  uint64_t v10 = *a2;
  if (*a2)
  {
    unint64_t v11 = *(void *)(v10 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v11 >= *(void *)&v3) {
        v11 %= *(void *)&v3;
      }
    }
    else
    {
      v11 &= *(void *)&v3 - 1;
    }
    if (v11 != v4)
    {
      *(void *)(*result + 8 * v11) = v7;
      uint64_t v10 = *a2;
    }
  }
  void *v7 = v10;
  *a2 = 0;
  --result[3];
  *(void *)a3 = a2;
  *(void *)(a3 + 8) = result + 2;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

uint64_t sub_1000DAE20(uint64_t **a1, unint64_t *a2)
{
  int8x8_t v3 = sub_1000D7B44((uint64_t)a1, a2);
  if (a1 + 1 == (uint64_t **)v3) {
    return 0;
  }
  unint64_t v4 = v3;
  sub_1000DAE74(a1, v3);
  operator delete(v4);
  return 1;
}

uint64_t *sub_1000DAE74(uint64_t **a1, uint64_t *a2)
{
  uint64_t v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      int8x8_t v3 = v2;
      uint64_t v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    unint64_t v4 = a2;
    do
    {
      int8x8_t v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      unint64_t v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2) {
    *a1 = v3;
  }
  unint64_t v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  sub_1000DAEE8(v6, a2);
  return v3;
}

uint64_t *sub_1000DAEE8(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  int8x8_t v3 = a2;
  if (*a2)
  {
    unint64_t v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      int8x8_t v3 = a2;
      goto LABEL_7;
    }
    do
    {
      int8x8_t v3 = v4;
      unint64_t v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  uint64_t v2 = v3[1];
  if (v2)
  {
LABEL_7:
    int v5 = 0;
    *(void *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  int v5 = 1;
LABEL_8:
  unint64_t v6 = (uint64_t **)v3[2];
  uint64_t v7 = *v6;
  if (*v6 == v3)
  {
    uint64_t *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      uint64_t v7 = 0;
      uint64_t result = (uint64_t *)v2;
    }
    else
    {
      uint64_t v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  int v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    uint64_t v9 = a2[2];
    v3[2] = v9;
    *(void *)(v9 + 8 * (*(void *)a2[2] != (void)a2)) = v3;
    uint64_t v11 = *a2;
    uint64_t v10 = a2[1];
    *(void *)(v11 + 16) = v3;
    *int8x8_t v3 = v11;
    v3[1] = v10;
    if (v10) {
      *(void *)(v10 + 16) = v3;
    }
    *((unsigned char *)v3 + 24) = *((unsigned char *)a2 + 24);
    if (result == a2) {
      uint64_t result = v3;
    }
  }
  if (!v8 || !result) {
    return result;
  }
  if (!v5)
  {
    *(unsigned char *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    uint64_t v12 = v7[2];
    if (*(uint64_t **)v12 == v7) {
      break;
    }
    if (!*((unsigned char *)v7 + 24))
    {
      *((unsigned char *)v7 + 24) = 1;
      *(unsigned char *)(v12 + 24) = 0;
      uint64_t v13 = *(uint64_t **)(v12 + 8);
      uint64_t v14 = *v13;
      *(void *)(v12 + 8) = *v13;
      if (v14) {
        *(void *)(v14 + 16) = v12;
      }
      v13[2] = *(void *)(v12 + 16);
      *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v13;
      uint64_t *v13 = v12;
      *(void *)(v12 + 16) = v13;
      if (result == (uint64_t *)*v7) {
        uint64_t result = v7;
      }
      uint64_t v7 = *(uint64_t **)(*v7 + 8);
    }
    unint64_t v15 = (void *)*v7;
    if (*v7 && !*((unsigned char *)v15 + 24))
    {
      unint64_t v16 = (uint64_t *)v7[1];
      if (!v16) {
        goto LABEL_56;
      }
LABEL_55:
      if (*((unsigned char *)v16 + 24))
      {
LABEL_56:
        *((unsigned char *)v15 + 24) = 1;
        *((unsigned char *)v7 + 24) = 0;
        uint64_t v22 = v15[1];
        uint64_t *v7 = v22;
        if (v22) {
          *(void *)(v22 + 16) = v7;
        }
        v15[2] = v7[2];
        *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)vsub_1000E08B8((uint64_t)this + 48, *((void **)this + 7)) = v15;
        v15[1] = v7;
        v7[2] = (uint64_t)v15;
        unint64_t v16 = v7;
      }
      else
      {
        unint64_t v15 = v7;
      }
      uint64_t v23 = v15[2];
      *((unsigned char *)v15 + 24) = *(unsigned char *)(v23 + 24);
      *(unsigned char *)(v23 + 24) = 1;
      *((unsigned char *)v16 + 24) = 1;
      unint64_t v24 = *(uint64_t **)(v23 + 8);
      uint64_t v25 = *v24;
      *(void *)(v23 + 8) = *v24;
      if (v25) {
        *(void *)(v25 + 16) = v23;
      }
      uint64_t v24[2] = *(void *)(v23 + 16);
      *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
      *unint64_t v24 = v23;
      goto LABEL_72;
    }
    unint64_t v16 = (uint64_t *)v7[1];
    if (v16 && !*((unsigned char *)v16 + 24)) {
      goto LABEL_55;
    }
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      uint64_t v17 = result;
LABEL_53:
      *((unsigned char *)v17 + 24) = 1;
      return result;
    }
    if (!*((unsigned char *)v17 + 24)) {
      goto LABEL_53;
    }
LABEL_49:
    uint64_t v7 = *(uint64_t **)(v17[2] + 8 * (*(void *)v17[2] == (void)v17));
  }
  if (!*((unsigned char *)v7 + 24))
  {
    *((unsigned char *)v7 + 24) = 1;
    *(unsigned char *)(v12 + 24) = 0;
    uint64_t v18 = v7[1];
    *(void *)uint64_t v12 = v18;
    if (v18) {
      *(void *)(v18 + 16) = v12;
    }
    v7[2] = *(void *)(v12 + 16);
    *(void *)(*(void *)(v12 + 16) + 8 * (**(void **)(v12 + 16) != v12)) = v7;
    v7[1] = v12;
    *(void *)(v12 + 16) = v7;
    if (result == (uint64_t *)v12) {
      uint64_t result = v7;
    }
    uint64_t v7 = *(uint64_t **)v12;
  }
  uint64_t v19 = (void *)*v7;
  if (*v7 && !*((unsigned char *)v19 + 24)) {
    goto LABEL_68;
  }
  uint64_t v20 = (uint64_t *)v7[1];
  if (!v20 || *((unsigned char *)v20 + 24))
  {
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v17 = (uint64_t *)v7[2];
    if (*((unsigned char *)v17 + 24)) {
      BOOL v21 = v17 == result;
    }
    else {
      BOOL v21 = 1;
    }
    if (v21) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }
  if (v19 && !*((unsigned char *)v19 + 24))
  {
LABEL_68:
    uint64_t v20 = v7;
  }
  else
  {
    *((unsigned char *)v20 + 24) = 1;
    *((unsigned char *)v7 + 24) = 0;
    uint64_t v26 = *v20;
    v7[1] = *v20;
    if (v26) {
      *(void *)(v26 + 16) = v7;
    }
    uint64_t v20[2] = v7[2];
    *(void *)(v7[2] + 8 * (*(void *)v7[2] != (void)vsub_1000E08B8((uint64_t)this + 48, *((void **)this + 7)) = v20;
    *uint64_t v20 = (uint64_t)v7;
    v7[2] = (uint64_t)v20;
    uint64_t v19 = v7;
  }
  uint64_t v23 = v20[2];
  *((unsigned char *)v20 + 24) = *(unsigned char *)(v23 + 24);
  *(unsigned char *)(v23 + 24) = 1;
  *((unsigned char *)v19 + 24) = 1;
  unint64_t v24 = *(uint64_t **)v23;
  uint64_t v27 = *(void *)(*(void *)v23 + 8);
  *(void *)uint64_t v23 = v27;
  if (v27) {
    *(void *)(v27 + 16) = v23;
  }
  uint64_t v24[2] = *(void *)(v23 + 16);
  *(void *)(*(void *)(v23 + 16) + 8 * (**(void **)(v23 + 16) != v23)) = v24;
  v24[1] = v23;
LABEL_72:
  *(void *)(v23 + 16) = v24;
  return result;
}

void sub_1000DB26C(void **a1, unint64_t a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  int v5 = v6;
  uint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      sub_100078F84();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      uint64_t v13 = (char *)sub_1000B4170(v4, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v14 = &v13[8 * v10];
    unint64_t v15 = &v13[8 * v12];
    bzero(v14, 8 * a2);
    unint64_t v16 = &v14[8 * a2];
    uint64_t v18 = (char *)*a1;
    uint64_t v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        uint64_t v19 = *((void *)v17 - 1);
        v17 -= 8;
        *((void *)v14 - 1) = v19;
        v14 -= 8;
      }
      while (v17 != v18);
      uint64_t v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
    {
      operator delete(v17);
    }
  }
}

void sub_1000DB380(void **a1, unint64_t a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  int v5 = v6;
  uint64_t v7 = *(_DWORD **)(v4 - 8);
  if (a2 <= (v6 - (unsigned char *)v7) >> 4)
  {
    if (a2)
    {
      uint64_t v14 = &v7[4 * a2];
      do
      {
        *(void *)uint64_t v7 = 0;
        v7[2] = 0;
        v7 += 4;
      }
      while (v7 != v14);
      uint64_t v7 = v14;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = (char *)v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 4);
    if (v9 >> 60) {
      sub_100078F84();
    }
    uint64_t v10 = v8 >> 4;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 3 > v9) {
      unint64_t v9 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      uint64_t v13 = (char *)sub_10007902C(v4, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    unint64_t v15 = &v13[16 * v10];
    unint64_t v16 = &v15[16 * a2];
    uint64_t v17 = v15;
    do
    {
      *(void *)uint64_t v17 = 0;
      *((_DWORD *)v17 + 2) = 0;
      v17 += 16;
    }
    while (v17 != v16);
    uint64_t v18 = &v13[16 * v12];
    uint64_t v20 = (char *)*a1;
    uint64_t v19 = (char *)a1[1];
    if (v19 != *a1)
    {
      do
      {
        *((_OWORD *)v15 - 1) = *((_OWORD *)v19 - 1);
        v15 -= 16;
        v19 -= 16;
      }
      while (v19 != v20);
      uint64_t v19 = (char *)*a1;
    }
    *a1 = v15;
    a1[1] = v16;
    a1[2] = v18;
    if (v19)
    {
      operator delete(v19);
    }
  }
}

void sub_1000DB4B4(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - *a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      sub_100078F84();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - *a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    uint64_t v18 = v4;
    if (v12) {
      uint64_t v13 = (char *)sub_1000B4170(v4, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    uint64_t v14 = v13;
    unint64_t v15 = &v13[8 * v10];
    uint64_t v17 = &v13[8 * v12];
    bzero(v15, 8 * a2);
    unint64_t v16 = &v15[8 * a2];
    sub_1000DB5B8(a1, &v14);
    sub_1000DB74C((uint64_t)&v14);
  }
}

void sub_1000DB5A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DB74C((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DB5B8(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1000DB630((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1000DB630(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    unint64_t v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_1000DB6C8((uint64_t)v13);
  return v11;
}

uint64_t sub_1000DB6C8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1000DB700(a1);
  }
  return a1;
}

void sub_1000DB700(uint64_t a1)
{
  uint64_t v1 = *(uint64_t **)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(uint64_t **)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *v1;
    uint64_t *v1 = 0;
    if (v3) {
      sub_1000D9D38((uint64_t)v1, v3);
    }
    ++v1;
  }
}

uint64_t sub_1000DB74C(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1000DB784(uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 16); i != a2; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 8;
    uint64_t v5 = *(void *)(i - 8);
    *(void *)(i - 8) = 0;
    if (v5) {
      sub_1000D9D38(i - 8, v5);
    }
  }
}

void sub_1000DB7D8(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - *a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      sub_100078F84();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - *a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    uint64_t v18 = v4;
    if (v12) {
      uint64_t v13 = (char *)sub_1000B4170(v4, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    char v14 = v13;
    long long v15 = &v13[8 * v10];
    uint64_t v17 = &v13[8 * v12];
    bzero(v15, 8 * a2);
    long long v16 = &v15[8 * a2];
    sub_1000DB8DC(a1, &v14);
    sub_1000DBA8C(&v14);
  }
}

void sub_1000DB8C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBA8C((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DB8DC(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1000DB954((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1000DB954(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    unint64_t v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_1000DB9EC((uint64_t)v13);
  return v11;
}

uint64_t sub_1000DB9EC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1000DBA24((void *)a1);
  }
  return a1;
}

void *sub_1000DBA24(void *result)
{
  uint64_t v1 = *(void ***)(result[2] + 8);
  uint64_t v2 = *(void ***)(result[1] + 8);
  while (v1 != v2)
  {
    uint64_t result = *v1;
    uint64_t *v1 = 0;
    if (result) {
      uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
    }
    ++v1;
  }
  return result;
}

void **sub_1000DBA8C(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void *sub_1000DBAC4(void *result, uint64_t a2)
{
  uint64_t v2 = result[2];
  if (v2 != a2)
  {
    uint64_t v4 = result;
    do
    {
      uint64_t v4[2] = v2 - 8;
      uint64_t result = *(void **)(v2 - 8);
      *(void *)(v2 - 8) = 0;
      if (result) {
        uint64_t result = (void *)(*(uint64_t (**)(void *))(*result + 8))(result);
      }
      uint64_t v2 = v4[2];
    }
    while (v2 != a2);
  }
  return result;
}

void sub_1000DBB38(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - *a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      sub_100078F84();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - *a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    uint64_t v18 = v4;
    if (v12) {
      uint64_t v13 = (char *)sub_1000B4170(v4, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    char v14 = v13;
    long long v15 = &v13[8 * v10];
    uint64_t v17 = &v13[8 * v12];
    bzero(v15, 8 * a2);
    long long v16 = &v15[8 * a2];
    sub_1000DBC3C(a1, &v14);
    sub_1000DBDDC((uint64_t)&v14);
  }
}

void sub_1000DBC28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBDDC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DBC3C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1000DBCB4((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1000DBCB4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v16 = a6;
  *((void *)&v16 + 1) = a7;
  long long v15 = v16;
  v13[0] = a1;
  v13[1] = &v15;
  v13[2] = &v16;
  if (a3 == a5)
  {
    uint64_t v11 = a6;
  }
  else
  {
    uint64_t v8 = (void *)(a7 - 8);
    unint64_t v9 = (void *)(a7 - 8);
    do
    {
      uint64_t v10 = *--a3;
      *a3 = 0;
      *v9-- = v10;
      *((void *)&v16 + 1) = v8;
      v7 -= 8;
      uint64_t v8 = v9;
    }
    while (a3 != a5);
    uint64_t v11 = v16;
  }
  char v14 = 1;
  sub_1000DBD4C((uint64_t)v13);
  return v11;
}

uint64_t sub_1000DBD4C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1000DBD84(a1);
  }
  return a1;
}

uint64_t sub_1000DBD84(uint64_t result)
{
  uint64_t v1 = *(uint64_t **)(*(void *)(result + 16) + 8);
  uint64_t v2 = *(uint64_t **)(*(void *)(result + 8) + 8);
  while (v1 != v2)
  {
    uint64_t result = *v1;
    uint64_t *v1 = 0;
    if (result) {
      operator delete();
    }
    ++v1;
  }
  return result;
}

uint64_t sub_1000DBDDC(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1000DBE14(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2 != a2)
  {
    uint64_t v3 = result;
    do
    {
      *(void *)(v3 + 16) = v2 - 8;
      uint64_t result = *(void *)(v2 - 8);
      *(void *)(v2 - 8) = 0;
      if (result) {
        operator delete();
      }
      uint64_t v2 = *(void *)(v3 + 16);
    }
    while (v2 != a2);
  }
  return result;
}

void sub_1000DBE78(char **a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = *a1;
    uint64_t v9 = v7 - *a1;
    unint64_t v10 = a2 + (v9 >> 3);
    if (v10 >> 61) {
      sub_100078F84();
    }
    uint64_t v11 = v9 >> 3;
    uint64_t v12 = v5 - v8;
    if (v12 >> 2 > v10) {
      unint64_t v10 = v12 >> 2;
    }
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v13 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v13 = v10;
    }
    uint64_t v24 = v4;
    if (v13)
    {
      char v14 = (char *)sub_1000B4170(v4, v13);
      uint64_t v8 = *a1;
      uint64_t v7 = a1[1];
    }
    else
    {
      char v14 = 0;
    }
    long long v15 = &v14[8 * v11];
    long long v16 = &v14[8 * v13];
    uint64_t v23 = v16;
    bzero(v15, 8 * a2);
    uint64_t v17 = &v15[8 * a2];
    *((void *)&v22 + 1) = v17;
    if (v7 != v8)
    {
      do
      {
        uint64_t v18 = *((void *)v7 - 1);
        v7 -= 8;
        *(void *)uint64_t v7 = 0;
        *((void *)v15 - 1) = v18;
        v15 -= 8;
      }
      while (v7 != v8);
      uint64_t v17 = (char *)*((void *)&v22 + 1);
      long long v16 = v23;
    }
    long long v19 = *(_OWORD *)a1;
    *a1 = v15;
    a1[1] = v17;
    long long v22 = v19;
    uint64_t v20 = a1[2];
    a1[2] = v16;
    uint64_t v23 = v20;
    uint64_t v21 = v19;
    sub_1000DBFA0((uint64_t)&v21);
  }
}

uint64_t sub_1000DBFA0(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 8;
    sub_1000D9F94((google::protobuf::FileDescriptorTables **)(i - 8), 0);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1000DBFF4(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      size_t v13 = 24 * ((24 * a2 - 24) / 0x18) + 24;
      bzero(*(void **)(v4 - 8), v13);
      v7 += v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL) {
      sub_100078F84();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v19 = v4;
    if (v11) {
      uint64_t v12 = (char *)sub_1000D8B84(v4, v11);
    }
    else {
      uint64_t v12 = 0;
    }
    long long v15 = v12;
    long long v16 = &v12[24 * v8];
    uint64_t v18 = &v12[24 * v11];
    size_t v14 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v16, v14);
    uint64_t v17 = &v16[v14];
    sub_1000DC15C(a1, &v15);
    sub_1000DC2F8((uint64_t)&v15);
  }
}

void sub_1000DC148(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DC2F8((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DC15C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1000DC1D4((uint64_t)(a1 + 2), a1[1], (void *)a1[1], *a1, (void *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_1000DC1D4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 24) = 0;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      long long v8 = *(_OWORD *)(a3 - 3);
      a3 -= 3;
      *(_OWORD *)(v7 - 24) = v8;
      *(void *)(v7 - 8) = a3[2];
      *a3 = 0;
      a3[1] = 0;
      a3[2] = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 24;
      *((void *)&v14 + 1) -= 24;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_1000DC278((uint64_t)v11);
  return v9;
}

uint64_t sub_1000DC278(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1000DC2B0(a1);
  }
  return a1;
}

void sub_1000DC2B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)v1;
    if (*(void *)v1)
    {
      *(void *)(v1 + 8) = v3;
      operator delete(v3);
    }
    v1 += 24;
  }
}

uint64_t sub_1000DC2F8(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1000DC330(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    uint64_t v5 = *(void **)(v2 - 24);
    *(void *)(a1 + 16) = v2 - 24;
    if (v5)
    {
      *(void *)(v2 - 16) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
}

void sub_1000DC38C(uint64_t a1)
{
  if (*(void *)(a1 + 24))
  {
    sub_1000D9B3C(a1, *(void ***)(a1 + 16));
    *(void *)(a1 + 16) = 0;
    uint64_t v2 = *(void *)(a1 + 8);
    if (v2)
    {
      for (uint64_t i = 0; i != v2; ++i)
        *(void *)(*(void *)a1 + 8 * i) = 0;
    }
    *(void *)(a1 + 24) = 0;
  }
}

void *sub_1000DC3E4(uint64_t a1, char **a2, _OWORD *a3)
{
  uint64_t v7 = (uint64_t)a2[1];
  if (v7 < 1)
  {
    unint64_t v8 = 0;
  }
  else
  {
    unint64_t v8 = 0;
    uint64_t v9 = *a2;
    unint64_t v10 = (unint64_t)&(*a2)[v7];
    do
    {
      uint64_t v11 = *v9++;
      unint64_t v8 = 5 * v8 + v11;
    }
    while ((unint64_t)v9 < v10);
  }
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    unint64_t v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v12) {
        unint64_t v3 = v8 % v12;
      }
    }
    else
    {
      unint64_t v3 = (v12 - 1) & v8;
    }
    long long v15 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v15)
    {
      long long v16 = *v15;
      if (*v15)
      {
        do
        {
          unint64_t v17 = v16[1];
          if (v17 == v8)
          {
            if (sub_1000D7A9C(a1 + 32, (uint64_t)(v16 + 2), (uint64_t)a2)) {
              return v16;
            }
          }
          else
          {
            if (v14 > 1)
            {
              if (v17 >= v12) {
                v17 %= v12;
              }
            }
            else
            {
              v17 &= v12 - 1;
            }
            if (v17 != v3) {
              break;
            }
          }
          long long v16 = (void *)*v16;
        }
        while (v16);
      }
    }
  }
  long long v16 = operator new(0x30uLL);
  void *v16 = 0;
  v16[1] = v8;
  long long v18 = a3[1];
  *((_OWORD *)v16 + 1) = *a3;
  *((_OWORD *)v16 + 2) = v18;
  float v19 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v20 = *(float *)(a1 + 32);
  if (!v12 || (float)(v20 * (float)v12) < v19)
  {
    BOOL v21 = 1;
    if (v12 >= 3) {
      BOOL v21 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v22 = v21 | (2 * v12);
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      size_t v24 = v23;
    }
    else {
      size_t v24 = v22;
    }
    sub_1000D98B4(a1, v24);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v8 >= v12) {
        unint64_t v3 = v8 % v12;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v12 - 1) & v8;
    }
  }
  uint64_t v25 = *(void *)a1;
  uint64_t v26 = *(void **)(*(void *)a1 + 8 * v3);
  if (v26)
  {
    void *v16 = *v26;
LABEL_43:
    *uint64_t v26 = v16;
    goto LABEL_44;
  }
  void *v16 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v16;
  *(void *)(v25 + 8 * v3) = a1 + 16;
  if (*v16)
  {
    unint64_t v27 = *(void *)(*v16 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v27 >= v12) {
        v27 %= v12;
      }
    }
    else
    {
      v27 &= v12 - 1;
    }
    uint64_t v26 = (void *)(*(void *)a1 + 8 * v27);
    goto LABEL_43;
  }
LABEL_44:
  ++*(void *)(a1 + 24);
  return v16;
}

void sub_1000DC63C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_1000DC650(uint64_t a1, char **a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t)a2[1];
  if (v7 < 1)
  {
    unint64_t v8 = 0;
  }
  else
  {
    unint64_t v8 = 0;
    uint64_t v9 = *a2;
    unint64_t v10 = (unint64_t)&(*a2)[v7];
    do
    {
      uint64_t v11 = *v9++;
      unint64_t v8 = 5 * v8 + v11;
    }
    while ((unint64_t)v9 < v10);
  }
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    unint64_t v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v12) {
        unint64_t v3 = v8 % v12;
      }
    }
    else
    {
      unint64_t v3 = (v12 - 1) & v8;
    }
    long long v15 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v15)
    {
      long long v16 = *v15;
      if (*v15)
      {
        do
        {
          unint64_t v17 = v16[1];
          if (v17 == v8)
          {
            if (sub_1000D7A9C(a1 + 32, (uint64_t)(v16 + 2), (uint64_t)a2)) {
              return v16;
            }
          }
          else
          {
            if (v14 > 1)
            {
              if (v17 >= v12) {
                v17 %= v12;
              }
            }
            else
            {
              v17 &= v12 - 1;
            }
            if (v17 != v3) {
              break;
            }
          }
          long long v16 = (void *)*v16;
        }
        while (v16);
      }
    }
  }
  long long v16 = operator new(0x28uLL);
  void *v16 = 0;
  v16[1] = v8;
  *((_OWORD *)v16 + 1) = *(_OWORD *)a3;
  v16[4] = *(void *)(a3 + 16);
  float v18 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v19 = *(float *)(a1 + 32);
  if (!v12 || (float)(v19 * (float)v12) < v18)
  {
    BOOL v20 = 1;
    if (v12 >= 3) {
      BOOL v20 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v21 = v20 | (2 * v12);
    unint64_t v22 = vcvtps_u32_f32(v18 / v19);
    if (v21 <= v22) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v21;
    }
    sub_1000D98B4(a1, v23);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v8 >= v12) {
        unint64_t v3 = v8 % v12;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v12 - 1) & v8;
    }
  }
  uint64_t v24 = *(void *)a1;
  uint64_t v25 = *(void **)(*(void *)a1 + 8 * v3);
  if (v25)
  {
    void *v16 = *v25;
LABEL_43:
    *uint64_t v25 = v16;
    goto LABEL_44;
  }
  void *v16 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v16;
  *(void *)(v24 + 8 * v3) = a1 + 16;
  if (*v16)
  {
    unint64_t v26 = *(void *)(*v16 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v26 >= v12) {
        v26 %= v12;
      }
    }
    else
    {
      v26 &= v12 - 1;
    }
    uint64_t v25 = (void *)(*(void *)a1 + 8 * v26);
    goto LABEL_43;
  }
LABEL_44:
  ++*(void *)(a1 + 24);
  return v16;
}

void sub_1000DC8B0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

_OWORD *sub_1000DC8C4(uint64_t **a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v5 = sub_1000DC950((uint64_t)a1, &v9, a2);
  uint64_t v6 = (_OWORD *)*v5;
  if (!*v5)
  {
    uint64_t v7 = (uint64_t **)v5;
    uint64_t v6 = operator new(0x38uLL);
    std::string v6[2] = *(_OWORD *)a3;
    *((void *)v6 + 6) = *(void *)(a3 + 16);
    sub_10002751C(a1, v9, v7, (uint64_t *)v6);
  }
  return v6;
}

uint64_t *sub_1000DC950(uint64_t a1, void *a2, unint64_t *a3)
{
  uint64_t v5 = *(uint64_t **)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  uint64_t v4 = v5;
  if (v5)
  {
    unint64_t v6 = *a3;
    int v7 = *((_DWORD *)a3 + 2);
    while (1)
    {
      while (1)
      {
        unint64_t v8 = v4;
        unint64_t v9 = v4[4];
        if (v6 >= v9) {
          break;
        }
LABEL_4:
        uint64_t v4 = (uint64_t *)*v8;
        uint64_t result = v8;
        if (!*v8) {
          goto LABEL_12;
        }
      }
      if (v9 >= v6)
      {
        int v10 = *((_DWORD *)v8 + 10);
        if (v7 < v10) {
          goto LABEL_4;
        }
        if (v10 >= v7) {
          goto LABEL_12;
        }
      }
      uint64_t result = v8 + 1;
      uint64_t v4 = (uint64_t *)v8[1];
      if (!v4) {
        goto LABEL_12;
      }
    }
  }
  unint64_t v8 = result;
LABEL_12:
  *a2 = v8;
  return result;
}

uint64_t sub_1000DC9B8(uint64_t *a1, int *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_100078F84();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  unint64_t v17 = a1 + 2;
  if (v9) {
    int v10 = (char *)sub_1000D8B84(v7, v9);
  }
  else {
    int v10 = 0;
  }
  uint8x8_t v13 = v10;
  unint64_t v14 = &v10[24 * v4];
  long long v15 = v14;
  long long v16 = &v10[24 * v9];
  sub_1000DCAC0(v14, *a2);
  long long v15 = v14 + 24;
  sub_1000DC15C(a1, &v13);
  uint64_t v11 = a1[1];
  sub_1000DC2F8((uint64_t)&v13);
  return v11;
}

void sub_1000DCAAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DC2F8((uint64_t)va);
  _Unwind_Resume(a1);
}

void *sub_1000DCAC0(void *a1, size_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1000DCB34(a1, a2);
    unint64_t v4 = (char *)a1[1];
    unint64_t v5 = &v4[a2];
    bzero(v4, a2);
    a1[1] = v5;
  }
  return a1;
}

void sub_1000DCB18(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1000DCB34(void *a1, size_t __sz)
{
  if ((__sz & 0x8000000000000000) != 0) {
    sub_100078F84();
  }
  uint64_t result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

std::string *sub_1000DCB78(std::string *result, std::string *a2, std::string::value_type *__s, std::string *this)
{
  if (result != a2)
  {
    uint64_t v7 = result;
    uint64_t v8 = 0;
    do
    {
      if (v8) {
        std::string::append(this, __s);
      }
      unint64_t v9 = (google::protobuf *)*(unsigned int *)((char *)&v7->__r_.__value_.__l.__data_ + v8);
      v10[0] = v11;
      v10[1] = google::protobuf::FastInt32ToBufferLeft(v9, v11, __s) - v11;
      uint64_t result = google::protobuf::StrAppend(this, (uint64_t)v10);
      v8 += 4;
    }
    while ((std::string *)((char *)v7 + v8) != a2);
  }
  return result;
}

void *sub_1000DCC40(uint64_t a1, unsigned __int8 *a2, uint64_t a3, long long **a4)
{
  uint64_t v8 = (void *)(a1 + 24);
  unint64_t v9 = sub_1000DA310(a1 + 24, (uint64_t)a2);
  unint64_t v10 = v9;
  unint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    unint64_t v13 = v12.u32[0];
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v4 = v9;
      if (v9 >= v11) {
        unint64_t v4 = v9 % v11;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v9;
    }
    unint64_t v14 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v14)
    {
      for (uint64_t i = *v14; i; uint64_t i = *(void **)i)
      {
        unint64_t v16 = *((void *)i + 1);
        if (v16 == v10)
        {
          if (sub_1000DA7BC(a1 + 32, (unsigned __int8 *)i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v13 > 1)
          {
            if (v16 >= v11) {
              v16 %= v11;
            }
          }
          else
          {
            v16 &= v11 - 1;
          }
          if (v16 != v4) {
            break;
          }
        }
      }
    }
  }
  unint64_t v17 = (void *)(a1 + 16);
  uint64_t i = operator new(0x30uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v10;
  float v18 = *a4;
  long long v19 = **a4;
  *((void *)i + 4) = *((void *)*a4 + 2);
  *((_OWORD *)i + 1) = v19;
  *((void *)v18 + 1) = 0;
  *((void *)v18 + 2) = 0;
  *(void *)float v18 = 0;
  *((void *)i + 5) = 0;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v21 = *(float *)(a1 + 32);
  if (!v11 || (float)(v21 * (float)v11) < v20)
  {
    BOOL v22 = 1;
    if (v11 >= 3) {
      BOOL v22 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v11);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    sub_1000D98B4(a1, v25);
    unint64_t v11 = *(void *)(a1 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v4 = v10 % v11;
      }
      else {
        unint64_t v4 = v10;
      }
    }
    else
    {
      unint64_t v4 = (v11 - 1) & v10;
    }
  }
  uint64_t v26 = *(void *)a1;
  unint64_t v27 = *(void **)(*(void *)a1 + 8 * v4);
  if (v27)
  {
    *(void *)uint64_t i = *v27;
LABEL_38:
    void *v27 = i;
    goto LABEL_39;
  }
  *(void *)uint64_t i = *v17;
  void *v17 = i;
  *(void *)(v26 + 8 * v4) = v17;
  if (*(void *)i)
  {
    unint64_t v28 = *(void *)(*(void *)i + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v28 >= v11) {
        v28 %= v11;
      }
    }
    else
    {
      v28 &= v11 - 1;
    }
    unint64_t v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_38;
  }
LABEL_39:
  ++*v8;
  return i;
}

void sub_1000DCEB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  sub_1000DA864(v11, v10);
  _Unwind_Resume(a1);
}

uint64_t sub_1000DCECC(uint64_t a1)
{
  return (**(uint64_t (***)(void))a1)(**(void **)(*(void *)a1 + 8));
}

unsigned __int8 *sub_1000DCEDC(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = sub_1000DA310((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  unint64_t v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = *((void *)v11 + 1);
      if (v13 == v6)
      {
        if (sub_1000DA7BC(v12, v11 + 16, a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      uint64_t v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

google::protobuf::DescriptorPool::Tables *sub_1000DCFE0(google::protobuf::DescriptorPool::Tables **a1, google::protobuf::DescriptorPool::Tables *a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    google::protobuf::DescriptorPool::Tables::~Tables(result);
    operator delete();
  }
  return result;
}

void sub_1000DD030(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_1000DD030(a1, *(void *)a2);
    sub_1000DD030(a1, *((void *)a2 + 1));
    if (a2[55] < 0) {
      operator delete(*((void **)a2 + 4));
    }
    operator delete(a2);
  }
}

google::protobuf::DescriptorPool *google::protobuf::internal::OnShutdownDelete<google::protobuf::DescriptorPool>(google::protobuf::DescriptorPool *)::{lambda(void const*)#1}::__invoke(google::protobuf::DescriptorPool *result)
{
  if (result)
  {
    google::protobuf::DescriptorPool::~DescriptorPool(result);
    operator delete();
  }
  return result;
}

unsigned __int8 *sub_1000DD0D4(void *a1, unsigned __int8 *a2)
{
  unint64_t v4 = sub_1000DA310((uint64_t)(a1 + 3), (uint64_t)a2);
  int8x8_t v5 = (int8x8_t)a1[1];
  if (!*(void *)&v5) {
    return 0;
  }
  unint64_t v6 = v4;
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v5);
  v7.i16[0] = vaddlv_u8(v7);
  unint64_t v8 = v7.u32[0];
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v9 = v4;
    if (v4 >= *(void *)&v5) {
      unint64_t v9 = v4 % *(void *)&v5;
    }
  }
  else
  {
    unint64_t v9 = (*(void *)&v5 - 1) & v4;
  }
  unint64_t v10 = *(unsigned __int8 ***)(*a1 + 8 * v9);
  if (!v10) {
    return 0;
  }
  uint64_t v11 = *v10;
  if (*v10)
  {
    uint64_t v12 = (uint64_t)(a1 + 4);
    do
    {
      unint64_t v13 = *((void *)v11 + 1);
      if (v6 == v13)
      {
        if (sub_1000DA7BC(v12, v11 + 16, a2)) {
          return v11;
        }
      }
      else
      {
        if (v8 > 1)
        {
          if (v13 >= *(void *)&v5) {
            v13 %= *(void *)&v5;
          }
        }
        else
        {
          v13 &= *(void *)&v5 - 1;
        }
        if (v13 != v9) {
          return 0;
        }
      }
      uint64_t v11 = *(unsigned __int8 **)v11;
    }
    while (v11);
  }
  return v11;
}

void *sub_1000DD1D8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint8x8_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_1000DA310(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    unint64_t v13 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(void **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (sub_1000DA7BC(a1 + 32, (unsigned __int8 *)i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  unint64_t v16 = (void *)(a1 + 16);
  uint64_t i = operator new(0x28uLL);
  *(void *)uint64_t i = 0;
  *((void *)i + 1) = v9;
  *((_OWORD *)i + 1) = *(_OWORD *)a3;
  *((void *)i + 4) = *(void *)(a3 + 16);
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v10 || (float)(v18 * (float)v10) < v17)
  {
    BOOL v19 = 1;
    if (v10 >= 3) {
      BOOL v19 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v10);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    sub_1000D98B4(a1, v22);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  uint64_t v23 = *(void *)a1;
  unint64_t v24 = *(void **)(*(void *)a1 + 8 * v3);
  if (v24)
  {
    *(void *)uint64_t i = *v24;
LABEL_38:
    *unint64_t v24 = i;
    goto LABEL_39;
  }
  *(void *)uint64_t i = *v16;
  void *v16 = i;
  *(void *)(v23 + 8 * v3) = v16;
  if (*(void *)i)
  {
    unint64_t v25 = *(void *)(*(void *)i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v25 >= v10) {
        v25 %= v10;
      }
    }
    else
    {
      v25 &= v10 - 1;
    }
    unint64_t v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_38;
  }
LABEL_39:
  ++*v7;
  return i;
}

void sub_1000DD440(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  sub_1000DA864(v11, v10);
  _Unwind_Resume(a1);
}

void *sub_1000DD45C(void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000BB8D4();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    unint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((unsigned char *)__b + 23) = __len;
    unint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memset(v6, __c, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __b;
}

void *sub_1000DD508(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_100079064();
  }
  return operator new(4 * a2);
}

uint64_t *sub_1000DD540(uint64_t **a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v6 = a1 + 1;
  int8x8_t v5 = a1[1];
  if (v5)
  {
    unint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        size_t v8 = (uint64_t **)v5;
        unint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        int8x8_t v5 = *v8;
        unint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      int8x8_t v5 = v8[1];
      if (!v5)
      {
        unint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    size_t v8 = a1 + 1;
LABEL_10:
    unint64_t v10 = (uint64_t *)operator new(0x28uLL);
    v10[4] = *a3;
    sub_10002751C(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

void sub_1000DD5FC(uint64_t a1, long long **a2, long long **a3, unint64_t a4)
{
  unint64_t v6 = a2;
  uint64_t v8 = a1 + 16;
  unint64_t v9 = *(std::string **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) < a4)
  {
    sub_1000DD7A8((uint64_t *)a1);
    if (a4 > 0xAAAAAAAAAAAAAAALL) {
      sub_100078F84();
    }
    unint64_t v10 = 0x5555555555555556 * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3);
    if (v10 <= a4) {
      unint64_t v10 = a4;
    }
    if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a1 + 16) - *(void *)a1) >> 3) >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v10;
    }
    sub_1000DD7E4((void *)a1, v11);
    unint64_t v12 = sub_1000DD838(v8, v6, a3, *(char **)(a1 + 8));
LABEL_15:
    *(void *)(a1 + 8) = v12;
    return;
  }
  unint64_t v13 = *(std::string **)(a1 + 8);
  if (0xAAAAAAAAAAAAAAABLL * (((char *)v13 - (char *)v9) >> 3) < a4)
  {
    unint64_t v14 = &a2[0xAAAAAAAAAAAAAABLL * (((char *)v13 - (char *)v9) >> 3)];
    if (v13 != v9)
    {
      uint64_t v15 = 0x5555555555555558 * (((char *)v13 - (char *)v9) >> 3);
      do
      {
        unint64_t v16 = *v6++;
        std::string::operator=(v9++, (const std::string *)v16);
        v15 -= 8;
      }
      while (v15);
      unint64_t v9 = *(std::string **)(a1 + 8);
    }
    unint64_t v12 = sub_1000DD838(v8, v14, a3, (char *)v9);
    goto LABEL_15;
  }
  if (a2 == a3)
  {
    uint64_t v17 = *(void *)a1;
  }
  else
  {
    uint64_t v17 = *(void *)a1;
    do
    {
      float v18 = *v6++;
      std::string::operator=(v9++, (const std::string *)v18);
      v17 += 24;
    }
    while (v6 != a3);
    unint64_t v13 = *(std::string **)(a1 + 8);
  }
  while (v13 != (std::string *)v17)
  {
    if (SHIBYTE(v13[-1].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13[-1].__r_.__value_.__l.__data_);
    }
    --v13;
  }
  *(void *)(a1 + 8) = v17;
}

void sub_1000DD79C(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

void sub_1000DD7A8(uint64_t *a1)
{
  if (*a1)
  {
    sub_1000D89B4(a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

char *sub_1000DD7E4(void *a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL) {
    sub_100078F84();
  }
  uint64_t result = (char *)sub_1000D8B84((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

char *sub_1000DD838(uint64_t a1, long long **a2, long long **a3, char *__dst)
{
  uint64_t v4 = __dst;
  unint64_t v12 = __dst;
  unint64_t v13 = __dst;
  v10[0] = a1;
  v10[1] = &v12;
  void v10[2] = &v13;
  char v11 = 0;
  if (a2 != a3)
  {
    unint64_t v6 = a2;
    do
    {
      unint64_t v7 = *v6;
      if (*((char *)*v6 + 23) < 0)
      {
        sub_1000BB834(v4, *(void **)v7, *((void *)v7 + 1));
        uint64_t v4 = v13;
      }
      else
      {
        long long v8 = *v7;
        *((void *)v4 + 2) = *((void *)v7 + 2);
        *(_OWORD *)uint64_t v4 = v8;
      }
      ++v6;
      v4 += 24;
      unint64_t v13 = v4;
    }
    while (v6 != a3);
  }
  char v11 = 1;
  sub_1000DD8FC((uint64_t)v10);
  return v4;
}

void sub_1000DD8E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1000DD8FC(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1000DD934(a1);
  }
  return a1;
}

void sub_1000DD934(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 24;
  }
}

void *sub_1000DD97C(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    unint64_t v6 = result;
    uint64_t result = sub_1000DD9F8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1000DD9DC(_Unwind_Exception *exception_object)
{
  unint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1000DD9F8(void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_100078F84();
  }
  uint64_t result = (char *)sub_1000DD508((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

unsigned __int8 *sub_1000DDA3C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_1000DA310(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    unint64_t v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (sub_1000DA7BC(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  sub_1000DDCBC(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_1000D98B4(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  size_t v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    void *v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v25[0];
  ++*v7;
  return i;
}

void sub_1000DDC98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p) {
    sub_1000DA864((uint64_t)&a11, __p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000DDCBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x28uLL);
  *(void *)(a4 + 8) = v7;
  *(void *)a4 = v8;
  *(unsigned char *)(a4 + 16) = 0;
  *unint64_t v8 = 0;
  v8[1] = a2;
  uint64_t result = v8 + 2;
  if (*(char *)(a3 + 23) < 0)
  {
    uint64_t result = sub_1000BB834(result, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)a3;
    result[2] = *(void *)(a3 + 16);
  }
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_1000DDD44(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_1000DA864(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1000DDD60(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

uint64_t sub_1000DDDC8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    *(void *)(a1 + 56) = v2;
    operator delete(v2);
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1000DDE1C(uint64_t a1, unint64_t *a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  if (!v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  do
  {
    unint64_t v5 = v2[4];
    BOOL v6 = v5 >= v3;
    if (v5 >= v3) {
      uint64_t v7 = v2;
    }
    else {
      uint64_t v7 = v2 + 1;
    }
    if (v6) {
      uint64_t v4 = v2;
    }
    uint64_t v2 = (void *)*v7;
  }
  while (*v7);
  if (v4 == (uint64_t *)(a1 + 8) || v3 < v4[4]) {
    return 0;
  }
  sub_1000DAE74((uint64_t **)a1, v4);
  operator delete(v4);
  return 1;
}

void sub_1000DDE98()
{
}

void sub_1000DDF9C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBA8C((void **)va);
  _Unwind_Resume(a1);
}

void sub_1000DDFD0(void **a1, long long *a2)
{
  uint64_t v4 = (char *)a1[1];
  unint64_t v5 = (char *)a1[2];
  if (v4 >= v5)
  {
    uint64_t v9 = 0x2E8BA2E8BA2E8BA3 * ((v4 - (unsigned char *)*a1) >> 3);
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) > 0x2E8BA2E8BA2E8BALL) {
      sub_100078F84();
    }
    unint64_t v11 = 0x2E8BA2E8BA2E8BA3 * ((v5 - (unsigned char *)*a1) >> 3);
    if (2 * v11 > v10) {
      unint64_t v10 = 2 * v11;
    }
    if (v11 >= 0x1745D1745D1745DLL) {
      unint64_t v12 = 0x2E8BA2E8BA2E8BALL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      if (v12 > 0x2E8BA2E8BA2E8BALL) {
        sub_100079064();
      }
      unint64_t v13 = (char *)operator new(88 * v12);
    }
    else
    {
      unint64_t v13 = 0;
    }
    unint64_t v14 = &v13[88 * v9];
    *((void *)v14 + 2) = *((void *)a2 + 2);
    *(_OWORD *)unint64_t v14 = *a2;
    unint64_t v15 = &v13[88 * v12];
    *(void *)a2 = 0;
    *((void *)a2 + 1) = 0;
    long long v16 = *(long long *)((char *)a2 + 24);
    *((void *)a2 + 2) = 0;
    *((void *)a2 + 3) = 0;
    *(_OWORD *)(v14 + 24) = v16;
    *((void *)v14 + 5) = *((void *)a2 + 5);
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)v14 + 8) = 0;
    *((_OWORD *)v14 + 3) = a2[3];
    *((void *)v14 + 8) = *((void *)a2 + 8);
    *((void *)a2 + 6) = 0;
    *((void *)a2 + 7) = 0;
    *((void *)a2 + 8) = 0;
    *(_OWORD *)(v14 + 72) = *(long long *)((char *)a2 + 72);
    unint64_t v8 = v14 + 88;
    float v17 = (char *)*a1;
    BOOL v18 = (char *)a1[1];
    if (v18 == *a1)
    {
      *a1 = v14;
      a1[1] = v8;
      a1[2] = v15;
    }
    else
    {
      do
      {
        long long v19 = *(_OWORD *)(v18 - 88);
        *((void *)v14 - 9) = *((void *)v18 - 9);
        *(_OWORD *)(v14 - 88) = v19;
        *((void *)v18 - 10) = 0;
        *((void *)v18 - 9) = 0;
        *((void *)v18 - 11) = 0;
        long long v20 = *((_OWORD *)v18 - 4);
        *((void *)v14 - 6) = *((void *)v18 - 6);
        *((_OWORD *)v14 - 4) = v20;
        *((void *)v18 - 7) = 0;
        *((void *)v18 - 6) = 0;
        *((void *)v18 - 8) = 0;
        *((void *)v14 - 5) = 0;
        *((void *)v14 - 4) = 0;
        *((void *)v14 - 3) = 0;
        *(_OWORD *)(v14 - 40) = *(_OWORD *)(v18 - 40);
        *((void *)v14 - 3) = *((void *)v18 - 3);
        *((void *)v18 - 5) = 0;
        *((void *)v18 - 4) = 0;
        *((void *)v18 - 3) = 0;
        *((_OWORD *)v14 - 1) = *((_OWORD *)v18 - 1);
        v14 -= 88;
        v18 -= 88;
      }
      while (v18 != v17);
      BOOL v18 = (char *)*a1;
      uint64_t v21 = (uint64_t)a1[1];
      *a1 = v14;
      a1[1] = v8;
      a1[2] = v15;
      while ((char *)v21 != v18)
      {
        v21 -= 88;
        sub_1000DDD60(v21);
      }
    }
    if (v18) {
      operator delete(v18);
    }
  }
  else
  {
    long long v6 = *a2;
    *((void *)v4 + 2) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v4 = v6;
    *((void *)a2 + 1) = 0;
    *((void *)a2 + 2) = 0;
    *(void *)a2 = 0;
    long long v7 = *(long long *)((char *)a2 + 24);
    *((void *)v4 + 5) = *((void *)a2 + 5);
    *(_OWORD *)(v4 + 24) = v7;
    *((void *)a2 + 4) = 0;
    *((void *)a2 + 5) = 0;
    *((void *)a2 + 3) = 0;
    *((void *)v4 + 6) = 0;
    *((void *)v4 + 7) = 0;
    *((void *)v4 + 8) = 0;
    *((_OWORD *)v4 + 3) = a2[3];
    *((void *)v4 + 8) = *((void *)a2 + 8);
    *((void *)a2 + 6) = 0;
    *((void *)a2 + 7) = 0;
    *((void *)a2 + 8) = 0;
    *(_OWORD *)(v4 + 72) = *(long long *)((char *)a2 + 72);
    unint64_t v8 = v4 + 88;
  }
  a1[1] = v8;
}

char *sub_1000DE210(char *__dst, long long *a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000BB834(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v11 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v11;
  }
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000BB834(__dst + 24, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v12 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)(__dst + 24) = v12;
  }
  *((void *)__dst + 6) = 0;
  *((void *)__dst + 7) = 0;
  *((void *)__dst + 8) = 0;
  sub_1000DD97C((void *)__dst + 6, *(const void **)a4, *(void *)(a4 + 8), (uint64_t)(*(void *)(a4 + 8) - *(void *)a4) >> 2);
  *((void *)__dst + 9) = a5;
  *((void *)__dst + 10) = a6;
  return __dst;
}

void sub_1000DE2CC(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000DE300(void *result, long long *a2)
{
  uint64_t v2 = result;
  uint64_t v3 = result[1];
  if (*((char *)a2 + 23) < 0)
  {
    uint64_t result = sub_1000BB834((unsigned char *)result[1], *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *(void *)(v3 + 16) = *((void *)a2 + 2);
    *(_OWORD *)uint64_t v3 = v4;
  }
  v2[1] = v3 + 24;
  return result;
}

void sub_1000DE358(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_1000DE360(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0xAAAAAAAAAAAAAAALL) {
    sub_100078F84();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x555555555555555) {
    unint64_t v9 = 0xAAAAAAAAAAAAAAALL;
  }
  else {
    unint64_t v9 = v5;
  }
  BOOL v18 = a1 + 2;
  if (v9) {
    unint64_t v10 = (char *)sub_1000D8B84(v7, v9);
  }
  else {
    unint64_t v10 = 0;
  }
  long long v11 = &v10[24 * v4];
  v15[0] = v10;
  v15[1] = v11;
  long long v16 = v11;
  float v17 = &v10[24 * v9];
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000BB834(v11, *(void **)a2, *((void *)a2 + 1));
    long long v11 = v16;
  }
  else
  {
    long long v12 = *a2;
    *((void *)v11 + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long v11 = v12;
  }
  long long v16 = v11 + 24;
  sub_1000D8B0C(a1, v15);
  uint64_t v13 = a1[1];
  sub_1000D8CEC((uint64_t)v15);
  return v13;
}

void sub_1000DE470(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000D8CEC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_1000DE484(uint64_t **a1, int *a2, _DWORD *a3)
{
  long long v6 = a1 + 1;
  unint64_t v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        unint64_t v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 7);
        if (v7 >= v9) {
          break;
        }
        unint64_t v5 = *v8;
        long long v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      unint64_t v5 = v8[1];
      if (!v5)
      {
        long long v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    unint64_t v8 = a1 + 1;
LABEL_10:
    unint64_t v10 = (uint64_t *)operator new(0x20uLL);
    *((_DWORD *)v10 + 7) = *a3;
    sub_10002751C(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

uint64_t *sub_1000DE540(uint64_t **a1, const void **a2, uint64_t a3)
{
  unint64_t v5 = (uint64_t **)sub_1000D91CC((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    sub_1000DE5C0((uint64_t)a1, a3, (uint64_t)&v7);
    sub_10002751C(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

void *sub_1000DE5C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  long long v6 = (char *)operator new(0x38uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t result = sub_1000BB834(result, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)a2;
    result[2] = *(void *)(a2 + 16);
  }
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1000DE644(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_1000D92D8(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1000DE660()
{
}

void sub_1000DE904(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_1000DE95C()
{
}

void sub_1000DEA60(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBA8C((void **)va);
  _Unwind_Resume(a1);
}

void sub_1000DEA94()
{
}

void sub_1000DED38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_1000DED90()
{
}

void sub_1000DEE94(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBA8C((void **)va);
  _Unwind_Resume(a1);
}

void sub_1000DEEC8()
{
}

void sub_1000DEFCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBA8C((void **)va);
  _Unwind_Resume(a1);
}

void sub_1000DF000()
{
}

void sub_1000DF2A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_1000DF2FC()
{
}

void sub_1000DF400(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBA8C((void **)va);
  _Unwind_Resume(a1);
}

_OWORD *sub_1000DF434(uint64_t **a1, const void **a2, uint64_t a3)
{
  uint64_t v5 = (void **)sub_1000D91CC((uint64_t)a1, &v11, a2);
  long long v6 = *v5;
  if (!*v5)
  {
    int v7 = (uint64_t **)v5;
    long long v6 = operator new(0x40uLL);
    std::string v6[2] = *(_OWORD *)a3;
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    uint64_t v8 = *(void *)(a3 + 16);
    uint64_t v9 = *(void *)(a3 + 24);
    *(void *)(a3 + 16) = 0;
    *((void *)v6 + 6) = v8;
    *((void *)v6 + 7) = v9;
    sub_10002751C(a1, v11, v7, (uint64_t *)v6);
  }
  return v6;
}

uint64_t *sub_1000DF4C8(uint64_t **a1, const void **a2, uint64_t a3, long long **a4)
{
  long long v6 = (uint64_t **)sub_1000D91CC((uint64_t)a1, &v9, a2);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_1000DF560((uint64_t)a1, a4, (uint64_t)&v8);
    sub_10002751C(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

unsigned char *sub_1000DF560@<X0>(uint64_t a1@<X0>, long long **a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  long long v6 = (char *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 32;
  uint64_t v8 = *a2;
  if (*((char *)*a2 + 23) < 0)
  {
    uint64_t result = sub_1000BB834(result, *(void **)v8, *((void *)v8 + 1));
  }
  else
  {
    long long v9 = *v8;
    *((void *)v6 + 6) = *((void *)v8 + 2);
    *(_OWORD *)uint64_t result = v9;
  }
  *((void *)v6 + 7) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1000DF5EC(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_1000D92D8(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1000DF608()
{
}

void sub_1000DF8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_1000DF904()
{
}

void sub_1000DFA08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBA8C((void **)va);
  _Unwind_Resume(a1);
}

void sub_1000DFA3C()
{
}

void sub_1000DFCE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_1000DFD38()
{
}

void sub_1000DFE3C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBA8C((void **)va);
  _Unwind_Resume(a1);
}

void sub_1000DFE70()
{
}

void sub_1000E0114(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_1000E016C()
{
}

void sub_1000E0270(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBA8C((void **)va);
  _Unwind_Resume(a1);
}

void sub_1000E02A4()
{
}

void sub_1000E0548(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void sub_1000E05A0()
{
}

void sub_1000E06A4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBA8C((void **)va);
  _Unwind_Resume(a1);
}

void sub_1000E06D8(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_1000E06D8(a1, *(void *)a2);
    sub_1000E06D8(a1, *((void *)a2 + 1));
    if (a2[63] < 0) {
      operator delete(*((void **)a2 + 5));
    }
    operator delete(a2);
  }
}

uint64_t **sub_1000E073C(uint64_t **a1, int *a2, uint64_t a3, _DWORD **a4)
{
  int v7 = a1 + 1;
  long long v6 = a1[1];
  if (v6)
  {
    int v8 = *a2;
    while (1)
    {
      while (1)
      {
        long long v9 = (uint64_t **)v6;
        int v10 = *((_DWORD *)v6 + 8);
        if (v8 >= v10) {
          break;
        }
        long long v6 = *v9;
        int v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      long long v6 = v9[1];
      if (!v6)
      {
        int v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    long long v9 = a1 + 1;
LABEL_10:
    uint64_t v11 = operator new(0x40uLL);
    v11[8] = **a4;
    *((void *)v11 + 6) = 0;
    *((void *)v11 + 7) = 0;
    *((void *)v11 + 5) = 0;
    sub_10002751C(a1, (uint64_t)v9, v7, (uint64_t *)v11);
    return (uint64_t **)v11;
  }
  return v9;
}

void sub_1000E0804(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1000E0804(a1, *a2);
    sub_1000E0804(a1, a2[1]);
    sub_1000E0860((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void sub_1000E0860(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(void *)(a1 + 32) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *(void **)a1;
  if (*(void *)a1)
  {
    *(void *)(a1 + 8) = v3;
    operator delete(v3);
  }
}

void sub_1000E08B8(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1000E08B8(a1, *a2);
    sub_1000E08B8(a1, a2[1]);
    unint64_t v4 = (void *)a2[4];
    if (v4)
    {
      a2[5] = v4;
      operator delete(v4);
    }
    operator delete(a2);
  }
}

void sub_1000E091C(uint64_t a1, google::protobuf::UnknownFieldSet *a2)
{
  if (a2)
  {
    uint64_t v3 = *(void **)a2;
    if (*(void *)a2 != *((void *)a2 + 1))
    {
      google::protobuf::UnknownFieldSet::ClearFallback(a2);
      uint64_t v3 = *(void **)a2;
    }
    if (v3)
    {
      *((void *)a2 + 1) = v3;
      operator delete(v3);
    }
    operator delete();
  }
}

uint64_t *sub_1000E0998(uint64_t **a1, int **a2, uint64_t a3, uint64_t *a4)
{
  long long v6 = (uint64_t **)sub_1000E0A30((uint64_t)a1, &v9, a2);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_1000E0AF0((uint64_t)a1, a4, (uint64_t)&v8);
    sub_10002751C(a1, v9, v6, v8);
    return v8;
  }
  return result;
}

void *sub_1000E0A30(uint64_t a1, void *a2, int **a3)
{
  uint64_t v5 = *(void **)(a1 + 8);
  uint64_t result = (void *)(a1 + 8);
  unint64_t v4 = v5;
  if (v5)
  {
    long long v6 = a3[1];
    do
    {
      while (1)
      {
        int v7 = v4;
        int v8 = (int *)v4[4];
        uint64_t v9 = (int *)v7[5];
        if (v8 != v9) {
          break;
        }
LABEL_12:
        if (*a3 != v6)
        {
          uint64_t v15 = (uint64_t)(*a3 + 1);
          while (v8 != v9)
          {
            int v16 = *v8;
            int v17 = *(_DWORD *)(v15 - 4);
            if (*v8 < v17) {
              break;
            }
            ++v8;
            BOOL v18 = v17 < v16 || v15 == (void)v6;
            v15 += 4;
            if (v18) {
              goto LABEL_27;
            }
          }
          uint64_t result = v7 + 1;
          unint64_t v4 = (void *)v7[1];
          if (v4) {
            continue;
          }
        }
        goto LABEL_27;
      }
      int v10 = v8 + 1;
      uint64_t v11 = *a3;
      while (v11 != v6)
      {
        int v12 = *v11;
        int v13 = *(v10 - 1);
        if (*v11 < v13) {
          break;
        }
        ++v11;
        if (v13 < v12 || v10++ == v9) {
          goto LABEL_12;
        }
      }
      unint64_t v4 = (void *)*v7;
      uint64_t result = v7;
    }
    while (*v7);
  }
  else
  {
    int v7 = result;
  }
LABEL_27:
  *a2 = v7;
  return result;
}

void *sub_1000E0AF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  long long v6 = operator new(0x40uLL);
  *(void *)(a3 + 8) = v5;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v7 = *a2;
  v6[5] = 0;
  v6[6] = 0;
  v6[4] = 0;
  uint64_t result = sub_1000DD97C(v6 + 4, *(const void **)v7, *(void *)(v7 + 8), (uint64_t)(*(void *)(v7 + 8) - *(void *)v7) >> 2);
  *((_DWORD *)v6 + 14) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1000E0B6C(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_1000E0B88(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1000E0B88(uint64_t a1, void *__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v3 = (void *)__p[4];
    if (v3)
    {
      __p[5] = v3;
      operator delete(v3);
    }
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

uint64_t *sub_1000E0BE8(uint64_t **a1, int **a2, uint64_t a3, uint64_t *a4)
{
  long long v6 = (uint64_t **)sub_1000E0A30((uint64_t)a1, &v11, a2);
  uint64_t v7 = *v6;
  if (!*v6)
  {
    int v8 = v6;
    sub_1000E0C94((uint64_t)a1, a4, (uint64_t)v10);
    sub_10002751C(a1, v11, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_1000E0D1C((uint64_t)v10, 0);
  }
  return v7;
}

void *sub_1000E0C94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  long long v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t v7 = *a2;
  v6[5] = 0;
  v6[6] = 0;
  v6[4] = 0;
  uint64_t result = sub_1000DD97C(v6 + 4, *(const void **)v7, *(void *)(v7 + 8), (uint64_t)(*(void *)(v7 + 8) - *(void *)v7) >> 2);
  v6[7] = 0;
  v6[8] = 0;
  v6[9] = 0;
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1000E0D04(_Unwind_Exception *a1)
{
  sub_1000E0D1C(v1, 0);
  _Unwind_Resume(a1);
}

void sub_1000E0D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_1000E0860((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

char *sub_1000E0D74(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  uint64_t v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 2)
  {
    if (v9)
    {
      *((void *)result + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      void *v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 62) {
      sub_100078F84();
    }
    uint64_t v10 = v8 >> 1;
    if (v8 >> 1 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    uint64_t result = sub_1000DD9F8(v7, v11);
    int v13 = (char *)v7[1];
    int v12 = (void **)(v7 + 1);
    uint64_t v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      BOOL v18 = v9;
      long long v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  int v12 = (void **)(result + 8);
  unint64_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 2;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  int v16 = &__src[4 * v15];
  if (v14 != v9)
  {
    uint64_t result = (char *)memmove(*(void **)result, __src, v14 - v9);
    uint64_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    BOOL v18 = v9;
    long long v19 = v16;
LABEL_18:
    uint64_t result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  char *v12 = &v9[v17];
  return result;
}

void sub_1000E0E80(void *a1)
{
  uint64_t v2 = (google::protobuf::SourceCodeInfo_Location **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::SourceCodeInfo_Location **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void *sub_1000E0F00(uint64_t a1, int **a2)
{
  uint64_t v3 = (void *)(a1 + 8);
  uint64_t result = sub_1000E0F80(a1, a2, *(void **)(a1 + 8), (void *)(a1 + 8));
  if (v3 != result)
  {
    uint64_t v6 = result[4];
    uint64_t v5 = result[5];
    if (v6 == v5) {
      return result;
    }
    uint64_t v7 = *a2;
    uint64_t v8 = v6 + 4;
    while (v7 != a2[1])
    {
      int v9 = *v7;
      int v10 = *(_DWORD *)(v8 - 4);
      if (*v7 < v10) {
        break;
      }
      ++v7;
      BOOL v11 = v10 < v9 || v8 == v5;
      v8 += 4;
      if (v11) {
        return result;
      }
    }
  }
  return v3;
}

void *sub_1000E0F80(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t result = a4;
  if (a3)
  {
    uint64_t v5 = a2[1];
    do
    {
      if (*a2 == v5)
      {
LABEL_12:
        uint64_t result = a3;
      }
      else
      {
        uint64_t v6 = (int *)a3[4];
        uint64_t v7 = *a2 + 4;
        while (v6 != (int *)a3[5])
        {
          int v8 = *v6;
          int v9 = *(_DWORD *)(v7 - 4);
          if (*v6 < v9) {
            break;
          }
          ++v6;
          BOOL v10 = v9 < v8 || v7 == v5;
          v7 += 4;
          if (v10) {
            goto LABEL_12;
          }
        }
        ++a3;
      }
      a3 = (void *)*a3;
    }
    while (a3);
  }
  return result;
}

std::string *sub_1000E0FE4(std::string *result, std::string **a2, const google::protobuf::SourceCodeInfo_Location **a3, unsigned int a4, unsigned int a5)
{
  int v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    BOOL v11 = a3;
    int v12 = a2;
    do
    {
      unint64_t v14 = *v11++;
      int v13 = v14;
      unint64_t v15 = *v12++;
      uint64_t result = sub_1000E1094(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    long long v19 = &a3[a5];
    long long v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      size_t v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(v18);
      uint64_t result = sub_1000E1094(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *sub_1000E1094(const google::protobuf::SourceCodeInfo_Location *a1, std::string *a2)
{
  return google::protobuf::SourceCodeInfo_Location::MergeFrom(a2, a1);
}

uint64_t sub_1000E10A4(uint64_t a1)
{
  return (**(uint64_t (***)(void))a1)(**(void **)(*(void *)a1 + 8));
}

uint64_t sub_1000E10B4(uint64_t a1)
{
  return (**(uint64_t (***)(void))a1)(**(void **)(*(void *)a1 + 8));
}

uint64_t sub_1000E10C4(uint64_t a1)
{
  return (**(uint64_t (***)(void))a1)(**(void **)(*(void *)a1 + 8));
}

float google::protobuf::io::SafeDoubleToFloat(google::protobuf::io *this, double a2)
{
  if (a2 <= 3.40282347e38)
  {
    if (a2 >= -3.40282347e38) {
      return a2;
    }
    if (a2 >= -3.40282357e38) {
      return -3.4028e38;
    }
    else {
      return -INFINITY;
    }
  }
  else if (a2 <= 3.40282357e38)
  {
    return 3.4028e38;
  }
  else
  {
    return INFINITY;
  }
}

void sub_1000E1144(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::DescriptorProto::DescriptorProto(google::protobuf::_DescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))google::protobuf::_DescriptorProto_default_instance_, v4);
}

void sub_1000E11B4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::_DescriptorProto_ExtensionRange_default_instance_ = (uint64_t)off_1001CF578;
  *(void *)algn_1001ED3F8 = 0;
  qword_1001ED400 = 0;
  if (atomic_load_explicit(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto);
  }
  qword_1001ED408 = 0;
  unk_1001ED410 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_DescriptorProto_ExtensionRange_default_instance_, v4);
}

void sub_1000E125C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  qword_1001ED420 = 0;
  unk_1001ED428 = 0;
  google::protobuf::_DescriptorProto_ReservedRange_default_instance_ = (uint64_t)off_1001CF628;
  qword_1001ED430 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_DescriptorProto_ReservedRange_default_instance_, v4);
}

void sub_1000E12D8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::EnumDescriptorProto::EnumDescriptorProto(google::protobuf::_EnumDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))google::protobuf::_EnumDescriptorProto_default_instance_, v4);
}

void sub_1000E1348(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  qword_1001ED5F8 = 0;
  unk_1001ED600 = 0;
  google::protobuf::_EnumDescriptorProto_EnumReservedRange_default_instance_ = (uint64_t)off_1001CF998;
  qword_1001ED608 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumDescriptorProto_EnumReservedRange_default_instance_, v4);
}

void sub_1000E13C4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::EnumOptions::EnumOptions((uint64_t)&google::protobuf::_EnumOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumOptions_default_instance_, v4);
}

void sub_1000E1434(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::EnumValueDescriptorProto::EnumValueDescriptorProto((uint64_t)&google::protobuf::_EnumValueDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumValueDescriptorProto_default_instance_, v4);
}

void sub_1000E14A4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::EnumValueOptions::EnumValueOptions((uint64_t)&google::protobuf::_EnumValueOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumValueOptions_default_instance_, v4);
}

void sub_1000E1514(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions((uint64_t)&google::protobuf::_ExtensionRangeOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_ExtensionRangeOptions_default_instance_, v4);
}

void sub_1000E1584(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FieldDescriptorProto::FieldDescriptorProto((uint64_t)&google::protobuf::_FieldDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FieldDescriptorProto_default_instance_, v4);
}

void sub_1000E15F4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FieldOptions::FieldOptions((uint64_t)&google::protobuf::_FieldOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FieldOptions_default_instance_, v4);
}

void sub_1000E1664(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FileDescriptorProto::FileDescriptorProto(google::protobuf::_FileDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))google::protobuf::_FileDescriptorProto_default_instance_, v4);
}

void sub_1000E16D4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FileDescriptorSet::FileDescriptorSet((uint64_t)&google::protobuf::_FileDescriptorSet_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FileDescriptorSet_default_instance_, v4);
}

void sub_1000E1744(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::FileOptions::FileOptions((uint64_t)&google::protobuf::_FileOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FileOptions_default_instance_, v4);
}

void sub_1000E17B4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::GeneratedCodeInfo::GeneratedCodeInfo((uint64_t)&google::protobuf::_GeneratedCodeInfo_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_GeneratedCodeInfo_default_instance_, v4);
}

void sub_1000E1824(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::GeneratedCodeInfo_Annotation::GeneratedCodeInfo_Annotation(google::protobuf::_GeneratedCodeInfo_Annotation_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))google::protobuf::_GeneratedCodeInfo_Annotation_default_instance_, v4);
}

void sub_1000E1894(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::MessageOptions::MessageOptions((uint64_t)&google::protobuf::_MessageOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_MessageOptions_default_instance_, v4);
}

void sub_1000E1904(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::MethodDescriptorProto::MethodDescriptorProto((uint64_t)&google::protobuf::_MethodDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_MethodDescriptorProto_default_instance_, v4);
}

void sub_1000E1974(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::MethodOptions::MethodOptions(google::protobuf::_MethodOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))google::protobuf::_MethodOptions_default_instance_, v4);
}

void sub_1000E19E4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::OneofDescriptorProto::OneofDescriptorProto(google::protobuf::_OneofDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))google::protobuf::_OneofDescriptorProto_default_instance_, v4);
}

void sub_1000E1A54(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::OneofOptions::OneofOptions((uint64_t)&google::protobuf::_OneofOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_OneofOptions_default_instance_, v4);
}

void sub_1000E1AC4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto(google::protobuf::_ServiceDescriptorProto_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))google::protobuf::_ServiceDescriptorProto_default_instance_, v4);
}

void sub_1000E1B34(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::ServiceOptions::ServiceOptions((uint64_t)&google::protobuf::_ServiceOptions_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_ServiceOptions_default_instance_, v4);
}

void sub_1000E1BA4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::SourceCodeInfo::SourceCodeInfo((uint64_t)&google::protobuf::_SourceCodeInfo_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_SourceCodeInfo_default_instance_, v4);
}

void sub_1000E1C14(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location((uint64_t)&google::protobuf::_SourceCodeInfo_Location_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_SourceCodeInfo_Location_default_instance_, v4);
}

void sub_1000E1C84(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::UninterpretedOption::UninterpretedOption(google::protobuf::_UninterpretedOption_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))google::protobuf::_UninterpretedOption_default_instance_, v4);
}

void sub_1000E1CF4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.pb.cc", a4);
  google::protobuf::UninterpretedOption_NamePart::UninterpretedOption_NamePart((uint64_t)&google::protobuf::_UninterpretedOption_NamePart_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_UninterpretedOption_NamePart_default_instance_, v4);
}

uint64_t google::protobuf::FieldOptions_JSType_descriptor(google::protobuf *this)
{
  return qword_1001EBC00;
}

uint64_t google::protobuf::FileDescriptorSet::FileDescriptorSet(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CF418;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FileDescriptorSet_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return a1;
}

void sub_1000E1E00(_Unwind_Exception *a1)
{
  sub_1000F9B58(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorSet::~FileDescriptorSet(google::protobuf::FileDescriptorSet *this)
{
}

{
  uint64_t vars8;

  google::protobuf::FileDescriptorSet::~FileDescriptorSet(this);
  operator delete();
}

uint64_t google::protobuf::FileDescriptorSet::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::FileDescriptorSet::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::FileDescriptorProto **)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = google::protobuf::FileDescriptorProto::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *google::protobuf::FileDescriptorSet::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  size_t v22 = a2;
  if ((sub_1000355B8((uint64_t)a3, &v22, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v22 + 1);
      unsigned int v7 = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, (const char *)(v8 - 128));
      size_t v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        BOOL v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          int v12 = (google::protobuf::internal *)((char *)v11 + 1);
          size_t v22 = (google::protobuf::internal *)((char *)v11 + 1);
          int v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              int v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            int *v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            int v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          BOOL v11 = sub_1000E20F4(a3, v16, v12);
          size_t v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        a3[10].i32[0] = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        uint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        uint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
        char v6 = v22;
      }
      size_t v22 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8((uint64_t)a3, &v22, a3[11].i32[1])) {
        return v22;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    size_t v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

google::protobuf::internal *sub_1000E20F4(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::FileDescriptorProto::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FileDescriptorSet::_InternalSerialize(google::protobuf::FileDescriptorSet *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int32x2_t v8 = *(google::protobuf::FileDescriptorProto **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          __int32 v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          __int32 v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        __int32 v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)google::protobuf::FileDescriptorProto::_InternalSerialize(v8, v10, a3);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::FileDescriptorSet::ByteSizeLong(google::protobuf::FileDescriptorSet *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (google::protobuf::FileDescriptorProto **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = google::protobuf::FileDescriptorProto::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FileDescriptorSet *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void google::protobuf::FileDescriptorSet::MergeFrom(google::protobuf::FileDescriptorSet *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::FileDescriptorSet::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::FileDescriptorSet::MergeFrom(google::protobuf::FileDescriptorSet *this, const google::protobuf::FileDescriptorSet *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (google::protobuf::FileDescriptorProto **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorSet *)((char *)this + 16), v5);
    sub_1000F9BD8((uint64_t *)this + 2, (google::protobuf::FileDescriptorProto **)v7, v6, v5, **((_DWORD **)this + 4) - *((_DWORD *)this + 6));
    signed int v8 = *((_DWORD *)this + 6) + v5;
    *((_DWORD *)this + 6) = v8;
    unsigned int v9 = (signed int *)*((void *)this + 4);
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
}

void google::protobuf::FileDescriptorSet::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    google::protobuf::FileDescriptorSet::Clear(this);
    google::protobuf::FileDescriptorSet::MergeFrom((google::protobuf::FileDescriptorSet *)this, (const google::protobuf::Message *)a2);
  }
}

BOOL google::protobuf::FileDescriptorSet::IsInitialized(google::protobuf::FileDescriptorSet *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char IsInitialized = google::protobuf::FileDescriptorProto::IsInitialized(*(google::protobuf::FileDescriptorProto **)(*((void *)this + 4) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((IsInitialized & 1) != 0);
  return v3 < 1;
}

uint64_t google::protobuf::FileDescriptorSet::GetMetadata(google::protobuf::FileDescriptorSet *this)
{
  return *off_1001EAAD0;
}

void *google::protobuf::FileDescriptorProto::FileDescriptorProto(void *a1, uint64_t a2)
{
  *a1 = off_1001CF4C8;
  a1[1] = a2;
  a1[2] = 0;
  a1[3] = a2;
  a1[4] = 0;
  a1[5] = 0;
  a1[6] = a2;
  a1[9] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = a2;
  a1[13] = 0;
  a1[14] = 0;
  a1[15] = a2;
  a1[16] = 0;
  a1[17] = 0;
  a1[18] = 0;
  a1[21] = a2;
  a1[19] = a2;
  a1[20] = 0;
  if (atomic_load_explicit(scc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FileDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  a1[22] = &google::protobuf::internal::fixed_address_empty_string;
  a1[23] = &google::protobuf::internal::fixed_address_empty_string;
  a1[25] = 0;
  a1[26] = 0;
  a1[24] = &google::protobuf::internal::fixed_address_empty_string;
  return a1;
}

void sub_1000E26C0(_Unwind_Exception *a1)
{
  if (*(int *)(v4 + 164) >= 1) {
    sub_100163A7C(v8);
  }
  sub_100163B78(v9, v7);
  sub_1000F9EA8(v6);
  sub_1000F9E28(v5);
  sub_1000F9DA8(v3);
  sub_1000F9D28(v2);
  sub_1000F9C98(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorProto::~FileDescriptorProto(google::protobuf::FileDescriptorProto *this)
{
  sub_1000E27D4(this);
  sub_1000333D0((uint64_t *)this + 1);
  if (*((int *)this + 41) >= 1)
  {
    uint64_t v2 = *((void *)this + 21);
    uint64_t v4 = *(void *)(v2 - 8);
    int v3 = (void *)(v2 - 8);
    if (!v4) {
      operator delete(v3);
    }
  }
  if (*((int *)this + 37) >= 1)
  {
    uint64_t v5 = *((void *)this + 19);
    uint64_t v7 = *(void *)(v5 - 8);
    int v6 = (void *)(v5 - 8);
    if (!v7) {
      operator delete(v6);
    }
  }
  sub_1000F9EA8((void *)this + 15);
  sub_1000F9E28((void *)this + 12);
  sub_1000F9DA8((void *)this + 9);
  sub_1000F9D28((void *)this + 6);
  sub_1000F9C98((void *)this + 3);
}

{
  uint64_t vars8;

  google::protobuf::FileDescriptorProto::~FileDescriptorProto(this);
  operator delete();
}

google::protobuf::SourceCodeInfo *sub_1000E27D4(google::protobuf::SourceCodeInfo *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((void *)result + 22);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = *((void *)result + 23);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v4 = *((void *)result + 24);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    operator delete();
  }
  if (result != (google::protobuf::SourceCodeInfo *)google::protobuf::_FileDescriptorProto_default_instance_)
  {
    uint64_t v5 = (google::protobuf::FileOptions *)*((void *)result + 25);
    if (v5)
    {
      google::protobuf::FileOptions::~FileOptions(v5);
      operator delete();
    }
    uint64_t result = (google::protobuf::SourceCodeInfo *)*((void *)v1 + 26);
    if (result)
    {
      google::protobuf::SourceCodeInfo::~SourceCodeInfo(result);
      operator delete();
    }
  }
  return result;
}

uint64_t google::protobuf::FileDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::FileDescriptorProto::Clear(google::protobuf::FileDescriptorProto *this)
{
  uint64_t result = (google::protobuf::Arena **)sub_1000F9B0C((uint64_t)this + 24);
  uint64_t v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (google::protobuf::DescriptorProto **)(*((void *)this + 8) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = google::protobuf::DescriptorProto::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  uint64_t v6 = *((unsigned int *)this + 20);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (google::protobuf::EnumDescriptorProto **)(*((void *)this + 11) + 8);
    do
    {
      signed int v8 = *v7++;
      uint64_t result = google::protobuf::EnumDescriptorProto::Clear(v8);
      --v6;
    }
    while (v6);
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  }
  uint64_t v9 = *((unsigned int *)this + 26);
  if ((int)v9 >= 1)
  {
    __int32 v10 = (google::protobuf::Arena ***)(*((void *)this + 14) + 8);
    do
    {
      unsigned int v11 = *v10++;
      uint64_t result = google::protobuf::ServiceDescriptorProto::Clear(v11);
      --v9;
    }
    while (v9);
    *((_DWORD *)this + 26) = 0;
  }
  uint64_t v12 = *((unsigned int *)this + 32);
  if ((int)v12 >= 1)
  {
    unsigned int v13 = (google::protobuf::Arena ***)(*((void *)this + 17) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = google::protobuf::FieldDescriptorProto::Clear(v14);
      --v12;
    }
    while (v12);
    *((_DWORD *)this + 3sub_1000F9B58((void *)this + 2) = 0;
  }
  *((_DWORD *)this + 36) = 0;
  *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  int v15 = *((_DWORD *)this + 4);
  if ((v15 & 0x1F) == 0) {
    goto LABEL_24;
  }
  if ((v15 & 1) == 0)
  {
    if ((v15 & 2) == 0) {
      goto LABEL_20;
    }
LABEL_32:
    unint64_t v19 = *((void *)this + 23) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v19 + 23) < 0)
    {
      **(unsigned char **)unint64_t v19 = 0;
      *(void *)(v19 + 8) = 0;
      if ((v15 & 4) != 0) {
        goto LABEL_36;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v19 = 0;
      *(unsigned char *)(v19 + 23) = 0;
      if ((v15 & 4) != 0) {
        goto LABEL_36;
      }
    }
LABEL_21:
    if ((v15 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_40;
  }
  unint64_t v18 = *((void *)this + 22) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v18 + 23) < 0)
  {
    **(unsigned char **)unint64_t v18 = 0;
    *(void *)(v18 + 8) = 0;
    if ((v15 & 2) != 0) {
      goto LABEL_32;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v18 = 0;
    *(unsigned char *)(v18 + 23) = 0;
    if ((v15 & 2) != 0) {
      goto LABEL_32;
    }
  }
LABEL_20:
  if ((v15 & 4) == 0) {
    goto LABEL_21;
  }
LABEL_36:
  unint64_t v20 = *((void *)this + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v20 + 23) < 0)
  {
    **(unsigned char **)unint64_t v20 = 0;
    *(void *)(v20 + 8) = 0;
    if ((v15 & 8) != 0) {
      goto LABEL_40;
    }
LABEL_22:
    if ((v15 & 0x10) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  *(unsigned char *)unint64_t v20 = 0;
  *(unsigned char *)(v20 + 23) = 0;
  if ((v15 & 8) == 0) {
    goto LABEL_22;
  }
LABEL_40:
  uint64_t result = google::protobuf::FileOptions::Clear(*((google::protobuf::FileOptions **)this + 25));
  if ((v15 & 0x10) != 0) {
LABEL_23:
  }
    uint64_t result = google::protobuf::SourceCodeInfo::Clear(*((google::protobuf::Arena ***)this + 26));
LABEL_24:
  char v17 = *((unsigned char *)this + 8);
  uint64_t v16 = (char *)this + 8;
  *((_DWORD *)v16 + sub_1000F9B58((void *)this + 2) = 0;
  if (v17)
  {
    return sub_100035820((unint64_t *)v16);
  }
  return result;
}

google::protobuf::Arena **google::protobuf::FileOptions::Clear(google::protobuf::FileOptions *this)
{
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  uint64_t v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (google::protobuf::Arena ***)(*((void *)this + 8) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  int v6 = *((_DWORD *)this + 10);
  if ((_BYTE)v6)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_19:
      unint64_t v8 = *((void *)this + 10) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_23;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_23;
        }
      }
LABEL_9:
      if ((v6 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_27:
      unint64_t v10 = *((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)unint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        if ((v6 & 0x10) != 0) {
          goto LABEL_31;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
        if ((v6 & 0x10) != 0) {
          goto LABEL_31;
        }
      }
LABEL_11:
      if ((v6 & 0x20) == 0) {
        goto LABEL_12;
      }
LABEL_35:
      unint64_t v12 = *((void *)this + 14) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v12 + 23) < 0)
      {
        **(unsigned char **)unint64_t v12 = 0;
        *(void *)(v12 + 8) = 0;
        if ((v6 & 0x40) != 0) {
          goto LABEL_39;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v12 = 0;
        *(unsigned char *)(v12 + 23) = 0;
        if ((v6 & 0x40) != 0) {
          goto LABEL_39;
        }
      }
LABEL_13:
      if ((v6 & 0x80) == 0) {
        goto LABEL_46;
      }
LABEL_43:
      unint64_t v14 = *((void *)this + 16) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v14 + 23) < 0)
      {
        **(unsigned char **)unint64_t v14 = 0;
        *(void *)(v14 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v14 = 0;
        *(unsigned char *)(v14 + 23) = 0;
      }
      goto LABEL_46;
    }
    unint64_t v7 = *((void *)this + 9) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_23:
    unint64_t v9 = *((void *)this + 11) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_27;
      }
    }
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_31:
    unint64_t v11 = *((void *)this + 13) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v6 & 0x20) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v6 & 0x20) != 0) {
        goto LABEL_35;
      }
    }
LABEL_12:
    if ((v6 & 0x40) == 0) {
      goto LABEL_13;
    }
LABEL_39:
    unint64_t v13 = *((void *)this + 15) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)unint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      if ((v6 & 0x80) == 0) {
        goto LABEL_46;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
      if ((v6 & 0x80) == 0) {
        goto LABEL_46;
      }
    }
    goto LABEL_43;
  }
LABEL_46:
  if ((v6 & 0x300) == 0) {
    goto LABEL_56;
  }
  if ((v6 & 0x100) != 0)
  {
    unint64_t v15 = *((void *)this + 17) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 23) < 0)
    {
      **(unsigned char **)unint64_t v15 = 0;
      *(void *)(v15 + 8) = 0;
      if ((v6 & 0x200) == 0) {
        goto LABEL_56;
      }
      goto LABEL_51;
    }
    *(unsigned char *)unint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
  }
  if ((v6 & 0x200) == 0) {
    goto LABEL_56;
  }
LABEL_51:
  unint64_t v16 = *((void *)this + 18) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    **(unsigned char **)unint64_t v16 = 0;
    *(void *)(v16 + 8) = 0;
  }
  else
  {
    *(unsigned char *)unint64_t v16 = 0;
    *(unsigned char *)(v16 + 23) = 0;
  }
LABEL_56:
  if ((v6 & 0xFC00) != 0)
  {
    *((_WORD *)this + 78) = 0;
    *((_DWORD *)this + 38) = 0;
  }
  if ((v6 & 0xF0000) != 0)
  {
    *((_WORD *)this + 79) = 0;
    *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 1;
    *((unsigned char *)this + 164) = 1;
  }
  char v18 = *((unsigned char *)this + 8);
  char v17 = (char *)this + 8;
  *((_DWORD *)v17 + 8) = 0;
  if (v18)
  {
    return sub_100035820((unint64_t *)v17);
  }
  return result;
}

google::protobuf::Arena **google::protobuf::SourceCodeInfo::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::SourceCodeInfo_Location **)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = google::protobuf::SourceCodeInfo_Location::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *google::protobuf::FileDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v78 = a2;
  if (sub_1000355B8((uint64_t)a3, &v78, a3[11].i32[1])) {
    return v78;
  }
  unsigned int v77 = (unint64_t *)(a1 + 8);
  while (2)
  {
    char v6 = (google::protobuf::internal *)((char *)v78 + 1);
    unsigned int v7 = *(unsigned __int8 *)v78;
    if ((*(char *)v78 & 0x80000000) == 0) {
      goto LABEL_7;
    }
    unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
    unsigned int v7 = v8 - 128;
    if ((*(char *)v6 & 0x80000000) == 0)
    {
      char v6 = (google::protobuf::internal *)((char *)v78 + 2);
LABEL_7:
      uint64_t v78 = v6;
      goto LABEL_8;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v78, (const char *)(v8 - 128));
    uint64_t v78 = TagFallback;
    if (!TagFallback) {
      return 0;
    }
    char v6 = TagFallback;
    unsigned int v7 = v13;
LABEL_8:
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_134;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        unint64_t v10 = (google::protobuf::Arena *)(v9 & 0xFFFFFFFFFFFFFFFELL);
        if (v9) {
          unint64_t v10 = *(google::protobuf::Arena **)v10;
        }
        unint64_t v11 = (uint64_t **)(a1 + 176);
        goto LABEL_128;
      case 2u:
        if (v7 != 18) {
          goto LABEL_134;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v10 = (google::protobuf::Arena *)(v14 & 0xFFFFFFFFFFFFFFFELL);
        if (v14) {
          unint64_t v10 = *(google::protobuf::Arena **)v10;
        }
        unint64_t v11 = (uint64_t **)(a1 + 184);
        goto LABEL_128;
      case 3u:
        if (v7 != 26) {
          goto LABEL_134;
        }
        unint64_t v15 = (char *)v6 - 1;
        while (1)
        {
          unint64_t v16 = v15 + 1;
          uint64_t v78 = (google::protobuf::internal *)(v15 + 1);
          char v17 = *(int **)(a1 + 40);
          if (!v17) {
            break;
          }
          uint64_t v18 = *(int *)(a1 + 32);
          int v19 = *v17;
          if ((int)v18 >= *v17)
          {
            if (v19 == *(_DWORD *)(a1 + 36))
            {
LABEL_26:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v19 + 1);
              char v17 = *(int **)(a1 + 40);
              int v19 = *v17;
            }
            int *v17 = v19 + 1;
            unint64_t v20 = (std::string *)sub_1000BBB38(*(google::protobuf::Arena **)(a1 + 24));
            uint64_t v21 = *(void *)(a1 + 40);
            uint64_t v22 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_1000F9B58((void *)this + 2) = v22 + 1;
            *(void *)(v21 + 8 * v22 + 8) = v20;
            unint64_t v16 = (std::string::value_type *)v78;
            goto LABEL_28;
          }
          *(_DWORD *)(a1 + 3sub_1000F9B58((void *)this + 2) = v18 + 1;
          unint64_t v20 = *(std::string **)&v17[2 * v18 + 2];
LABEL_28:
          unint64_t v15 = google::protobuf::internal::InlineGreedyStringParser(v20, v16, (uint64_t)a3);
          uint64_t v78 = (google::protobuf::internal *)v15;
          if (!v15) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
            goto LABEL_142;
          }
        }
        int v19 = *(_DWORD *)(a1 + 36);
        goto LABEL_26;
      case 4u:
        if (v7 != 34) {
          goto LABEL_134;
        }
        unint64_t v23 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          unint64_t v24 = (google::protobuf::internal *)((char *)v23 + 1);
          uint64_t v78 = (google::protobuf::internal *)((char *)v23 + 1);
          unint64_t v25 = *(int **)(a1 + 64);
          if (!v25) {
            break;
          }
          uint64_t v26 = *(int *)(a1 + 56);
          int v27 = *v25;
          if ((int)v26 >= *v25)
          {
            if (v27 == *(_DWORD *)(a1 + 60))
            {
LABEL_39:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v27 + 1);
              unint64_t v25 = *(int **)(a1 + 64);
              int v27 = *v25;
            }
            *unint64_t v25 = v27 + 1;
            uint64_t v28 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*(void *)(a1 + 48));
            uint64_t v29 = *(void *)(a1 + 64);
            uint64_t v30 = *(int *)(a1 + 56);
            *(_DWORD *)(a1 + 56) = v30 + 1;
            *(void *)(v29 + 8 * v30 + 8) = v28;
            unint64_t v24 = v78;
            goto LABEL_41;
          }
          *(_DWORD *)(a1 + 56) = v26 + 1;
          uint64_t v28 = *(void *)&v25[2 * v26 + 2];
LABEL_41:
          unint64_t v23 = sub_1000E36F8(a3, v28, v24);
          uint64_t v78 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *(unsigned char *)v23 != 34) {
            goto LABEL_142;
          }
        }
        int v27 = *(_DWORD *)(a1 + 60);
        goto LABEL_39;
      case 5u:
        if (v7 != 42) {
          goto LABEL_134;
        }
        uint64_t v31 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          uint64_t v32 = (google::protobuf::internal *)((char *)v31 + 1);
          uint64_t v78 = (google::protobuf::internal *)((char *)v31 + 1);
          uint64_t v33 = *(int **)(a1 + 88);
          if (!v33) {
            break;
          }
          uint64_t v34 = *(int *)(a1 + 80);
          int v35 = *v33;
          if ((int)v34 >= *v33)
          {
            if (v35 == *(_DWORD *)(a1 + 84))
            {
LABEL_52:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v35 + 1);
              uint64_t v33 = *(int **)(a1 + 88);
              int v35 = *v33;
            }
            int *v33 = v35 + 1;
            uint64_t v36 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*(void *)(a1 + 72));
            uint64_t v37 = *(void *)(a1 + 88);
            uint64_t v38 = *(int *)(a1 + 80);
            *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v38 + 1;
            *(void *)(v37 + 8 * v38 + 8) = v36;
            uint64_t v32 = v78;
            goto LABEL_54;
          }
          *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v34 + 1;
          uint64_t v36 = *(void *)&v33[2 * v34 + 2];
LABEL_54:
          uint64_t v31 = sub_1000E37C8(a3, v36, v32);
          uint64_t v78 = v31;
          if (!v31) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v31 || *(unsigned char *)v31 != 42) {
            goto LABEL_142;
          }
        }
        int v35 = *(_DWORD *)(a1 + 84);
        goto LABEL_52;
      case 6u:
        if (v7 != 50) {
          goto LABEL_134;
        }
        unint64_t v39 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          unint64_t v40 = (google::protobuf::internal *)((char *)v39 + 1);
          uint64_t v78 = (google::protobuf::internal *)((char *)v39 + 1);
          unint64_t v41 = *(int **)(a1 + 112);
          if (!v41) {
            break;
          }
          uint64_t v42 = *(int *)(a1 + 104);
          int v43 = *v41;
          if ((int)v42 >= *v41)
          {
            if (v43 == *(_DWORD *)(a1 + 108))
            {
LABEL_65:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 96), v43 + 1);
              unint64_t v41 = *(int **)(a1 + 112);
              int v43 = *v41;
            }
            int *v41 = v43 + 1;
            uint64_t v44 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(*(void *)(a1 + 96));
            uint64_t v45 = *(void *)(a1 + 112);
            uint64_t v46 = *(int *)(a1 + 104);
            *(_DWORD *)(a1 + 104) = v46 + 1;
            *(void *)(v45 + 8 * v46 + 8) = v44;
            unint64_t v40 = v78;
            goto LABEL_67;
          }
          *(_DWORD *)(a1 + 104) = v42 + 1;
          uint64_t v44 = *(void *)&v41[2 * v42 + 2];
LABEL_67:
          unint64_t v39 = sub_1000E3898(a3, v44, v40);
          uint64_t v78 = v39;
          if (!v39) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v39 || *(unsigned char *)v39 != 50) {
            goto LABEL_142;
          }
        }
        int v43 = *(_DWORD *)(a1 + 108);
        goto LABEL_65;
      case 7u:
        if (v7 != 58) {
          goto LABEL_134;
        }
        std::string v47 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          int v48 = (google::protobuf::internal *)((char *)v47 + 1);
          uint64_t v78 = (google::protobuf::internal *)((char *)v47 + 1);
          int v49 = *(int **)(a1 + 136);
          if (!v49) {
            break;
          }
          uint64_t v50 = *(int *)(a1 + 128);
          int v51 = *v49;
          if ((int)v50 >= *v49)
          {
            if (v51 == *(_DWORD *)(a1 + 132))
            {
LABEL_78:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 120), v51 + 1);
              int v49 = *(int **)(a1 + 136);
              int v51 = *v49;
            }
            *int v49 = v51 + 1;
            uint64_t v52 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*(void *)(a1 + 120));
            uint64_t v53 = *(void *)(a1 + 136);
            uint64_t v54 = *(int *)(a1 + 128);
            *(_DWORD *)(a1 + 128) = v54 + 1;
            *(void *)(v53 + 8 * v54 + 8) = v52;
            int v48 = v78;
            goto LABEL_80;
          }
          *(_DWORD *)(a1 + 128) = v50 + 1;
          uint64_t v52 = *(void *)&v49[2 * v50 + 2];
LABEL_80:
          std::string v47 = sub_1000E3968(a3, v52, v48);
          uint64_t v78 = v47;
          if (!v47) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v47 || *(unsigned char *)v47 != 58) {
            goto LABEL_142;
          }
        }
        int v51 = *(_DWORD *)(a1 + 132);
        goto LABEL_78;
      case 8u:
        if (v7 != 66) {
          goto LABEL_134;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v55 = *(void *)(a1 + 200);
        if (!v55)
        {
          unint64_t v56 = (void *)(*v77 & 0xFFFFFFFFFFFFFFFELL);
          if (*v77) {
            unint64_t v56 = (void *)*v56;
          }
          uint64_t v55 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v56);
          *(void *)(a1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v55;
          char v6 = v78;
        }
        std::string::size_type v57 = sub_1000E3A38(a3, v55, v6);
        goto LABEL_141;
      case 9u:
        if (v7 != 74) {
          goto LABEL_134;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v58 = *(void *)(a1 + 208);
        if (!v58)
        {
          uint64_t v59 = (void *)(*v77 & 0xFFFFFFFFFFFFFFFELL);
          if (*v77) {
            uint64_t v59 = (void *)*v59;
          }
          uint64_t v58 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(v59);
          *(void *)(a1 + 208) = v58;
          char v6 = v78;
        }
        std::string::size_type v57 = sub_1000E3B08((uint64_t)a3, v58, v6);
        goto LABEL_141;
      case 0xAu:
        if (v7 == 80)
        {
          long long v60 = (unsigned __int8 *)v6 - 1;
          while (1)
          {
            uint64_t v78 = (google::protobuf::internal *)(v60 + 1);
            int v61 = v60[1];
            if ((char)v60[1] < 0)
            {
              int v62 = v61 + (v60[2] << 7);
              int v61 = v62 - 128;
              if ((char)v60[2] < 0)
              {
                long long v60 = (unsigned __int8 *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)(v60 + 1), (v62 - 128));
                int v61 = v63;
              }
              else
              {
                v60 += 3;
              }
            }
            else
            {
              v60 += 2;
            }
            uint64_t v78 = (google::protobuf::internal *)v60;
            uint64_t v64 = *(unsigned int *)(a1 + 144);
            if (v64 == *(_DWORD *)(a1 + 148))
            {
              int v65 = v64 + 1;
              google::protobuf::RepeatedField<int>::Reserve((unsigned int *)(a1 + 144), v64 + 1);
              *(_DWORD *)(*(void *)(a1 + 152) + 4 * v64) = v61;
              long long v60 = (unsigned __int8 *)v78;
            }
            else
            {
              *(_DWORD *)(*(void *)(a1 + 152) + 4 * v64) = v61;
              int v65 = v64 + 1;
            }
            *(_DWORD *)(a1 + 144) = v65;
            if (!v60) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v60 || *v60 != 80) {
              goto LABEL_142;
            }
          }
        }
        if (v7 != 82) {
          goto LABEL_134;
        }
        v74 = (unsigned int *)(a1 + 144);
        goto LABEL_133;
      case 0xBu:
        if (v7 != 88)
        {
          if (v7 == 90)
          {
            v74 = (unsigned int *)(a1 + 160);
LABEL_133:
            std::string::size_type v57 = (google::protobuf::internal *)google::protobuf::internal::PackedInt32Parser(v74, v6, (uint64_t)a3);
          }
          else
          {
LABEL_134:
            if (v7) {
              BOOL v75 = (v7 & 7) == 4;
            }
            else {
              BOOL v75 = 1;
            }
            if (v75)
            {
              a3[10].i32[0] = v7 - 1;
              return v78;
            }
            if (*v77)
            {
              char v76 = (google::protobuf::Arena **)((*v77 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              char v76 = sub_10003562C(v77);
              char v6 = v78;
            }
            std::string::size_type v57 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v76, v6);
          }
LABEL_141:
          uint64_t v78 = v57;
          if (!v57) {
            return 0;
          }
LABEL_142:
          if (sub_1000355B8((uint64_t)a3, &v78, a3[11].i32[1])) {
            return v78;
          }
          continue;
        }
        uint64_t v66 = (unsigned __int8 *)v6 - 1;
        while (1)
        {
          uint64_t v78 = (google::protobuf::internal *)(v66 + 1);
          int v67 = v66[1];
          if ((char)v66[1] < 0)
          {
            int v68 = v67 + (v66[2] << 7);
            int v67 = v68 - 128;
            if ((char)v66[2] < 0)
            {
              uint64_t v66 = (unsigned __int8 *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)(v66 + 1), (v68 - 128));
              int v67 = v69;
            }
            else
            {
              v66 += 3;
            }
          }
          else
          {
            v66 += 2;
          }
          uint64_t v78 = (google::protobuf::internal *)v66;
          uint64_t v70 = *(unsigned int *)(a1 + 160);
          if (v70 == *(_DWORD *)(a1 + 164))
          {
            int v71 = v70 + 1;
            google::protobuf::RepeatedField<int>::Reserve((unsigned int *)(a1 + 160), v70 + 1);
            *(_DWORD *)(*(void *)(a1 + 168) + 4 * v7google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v67;
            uint64_t v66 = (unsigned __int8 *)v78;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 168) + 4 * v7google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v67;
            int v71 = v70 + 1;
          }
          *(_DWORD *)(a1 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v71;
          if (!v66) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v66 || *v66 != 88) {
            goto LABEL_142;
          }
        }
      case 0xCu:
        if (v7 != 98) {
          goto LABEL_134;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v72 = *(void *)(a1 + 8);
        unint64_t v10 = (google::protobuf::Arena *)(v72 & 0xFFFFFFFFFFFFFFFELL);
        if (v72) {
          unint64_t v10 = *(google::protobuf::Arena **)v10;
        }
        unint64_t v11 = (uint64_t **)(a1 + 192);
LABEL_128:
        long long v73 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v11, v10);
        std::string::size_type v57 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v73, (std::string::value_type *)v78, (uint64_t)a3);
        goto LABEL_141;
      default:
        goto LABEL_134;
    }
  }
}

google::protobuf::internal *sub_1000E36F8(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::DescriptorProto::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

google::protobuf::internal *sub_1000E37C8(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::EnumDescriptorProto::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

google::protobuf::internal *sub_1000E3898(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::ServiceDescriptorProto::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

google::protobuf::internal *sub_1000E3968(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::FieldDescriptorProto::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

google::protobuf::internal *sub_1000E3A38(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::FileOptions::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

google::protobuf::internal *sub_1000E3B08(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::SourceCodeInfo::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FileDescriptorProto::_InternalSerialize(google::protobuf::FileDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 22) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_100034480(a3, 2, (const void **)(*((void *)this + 23) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *((unsigned int *)this + 8);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      uint64_t v4 = sub_1000E4244(a3, 3, *(void *)(*((void *)this + 5) + v8 + 8), v4);
      v8 += 8;
    }
    while (v9 != v8);
  }
  int v10 = *((_DWORD *)this + 14);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v12 = *(google::protobuf::DescriptorProto **)(*((void *)this + 8) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v13 = *((_DWORD *)v12 + 5);
      if (v13 > 0x7F)
      {
        v4[1] = v13 | 0x80;
        unsigned int v15 = v13 >> 7;
        if (v13 >> 14)
        {
          uint64_t v14 = v4 + 3;
          do
          {
            *(v14 - sub_1000333D0((uint64_t *)this + 1) = v15 | 0x80;
            unsigned int v16 = v15 >> 7;
            ++v14;
            unsigned int v17 = v15 >> 14;
            v15 >>= 7;
          }
          while (v17);
          *(v14 - sub_1000333D0((uint64_t *)this + 1) = v16;
        }
        else
        {
          uint64_t v4[2] = v15;
          uint64_t v14 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v13;
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::DescriptorProto::_InternalSerialize(v12, v14, a3);
    }
  }
  int v18 = *((_DWORD *)this + 20);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v20 = *(google::protobuf::EnumDescriptorProto **)(*((void *)this + 11) + 8 * j + 8);
      *uint64_t v4 = 42;
      unsigned int v21 = *((_DWORD *)v20 + 5);
      if (v21 > 0x7F)
      {
        v4[1] = v21 | 0x80;
        unsigned int v23 = v21 >> 7;
        if (v21 >> 14)
        {
          uint64_t v22 = v4 + 3;
          do
          {
            *(v22 - sub_1000333D0((uint64_t *)this + 1) = v23 | 0x80;
            unsigned int v24 = v23 >> 7;
            ++v22;
            unsigned int v25 = v23 >> 14;
            v23 >>= 7;
          }
          while (v25);
          *(v22 - sub_1000333D0((uint64_t *)this + 1) = v24;
        }
        else
        {
          uint64_t v4[2] = v23;
          uint64_t v22 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v21;
        uint64_t v22 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::EnumDescriptorProto::_InternalSerialize(v20, v22, a3);
    }
  }
  int v26 = *((_DWORD *)this + 26);
  if (v26)
  {
    for (int k = 0; k != v26; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v28 = *(google::protobuf::ServiceDescriptorProto **)(*((void *)this + 14) + 8 * k + 8);
      *uint64_t v4 = 50;
      unsigned int v29 = *((_DWORD *)v28 + 5);
      if (v29 > 0x7F)
      {
        v4[1] = v29 | 0x80;
        unsigned int v31 = v29 >> 7;
        if (v29 >> 14)
        {
          uint64_t v30 = v4 + 3;
          do
          {
            *(v30 - sub_1000333D0((uint64_t *)this + 1) = v31 | 0x80;
            unsigned int v32 = v31 >> 7;
            ++v30;
            unsigned int v33 = v31 >> 14;
            v31 >>= 7;
          }
          while (v33);
          *(v30 - sub_1000333D0((uint64_t *)this + 1) = v32;
        }
        else
        {
          uint64_t v4[2] = v31;
          uint64_t v30 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v29;
        uint64_t v30 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::ServiceDescriptorProto::_InternalSerialize(v28, v30, a3);
    }
  }
  int v34 = *((_DWORD *)this + 32);
  if (v34)
  {
    for (int m = 0; m != v34; ++m)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v36 = *(google::protobuf::FieldDescriptorProto **)(*((void *)this + 17) + 8 * m + 8);
      *uint64_t v4 = 58;
      unsigned int v37 = *((_DWORD *)v36 + 5);
      if (v37 > 0x7F)
      {
        v4[1] = v37 | 0x80;
        unsigned int v39 = v37 >> 7;
        if (v37 >> 14)
        {
          uint64_t v38 = v4 + 3;
          do
          {
            *(v38 - sub_1000333D0((uint64_t *)this + 1) = v39 | 0x80;
            unsigned int v40 = v39 >> 7;
            ++v38;
            unsigned int v41 = v39 >> 14;
            v39 >>= 7;
          }
          while (v41);
          *(v38 - sub_1000333D0((uint64_t *)this + 1) = v40;
        }
        else
        {
          uint64_t v4[2] = v39;
          uint64_t v38 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v37;
        uint64_t v38 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::FieldDescriptorProto::_InternalSerialize(v36, v38, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v42 = (google::protobuf::FileOptions *)*((void *)this + 25);
    *uint64_t v4 = 66;
    unsigned int v43 = *((_DWORD *)v42 + 11);
    if (v43 > 0x7F)
    {
      v4[1] = v43 | 0x80;
      unsigned int v45 = v43 >> 7;
      if (v43 >> 14)
      {
        uint64_t v44 = v4 + 3;
        do
        {
          *(v44 - sub_1000333D0((uint64_t *)this + 1) = v45 | 0x80;
          unsigned int v46 = v45 >> 7;
          ++v44;
          unsigned int v47 = v45 >> 14;
          v45 >>= 7;
        }
        while (v47);
        *(v44 - sub_1000333D0((uint64_t *)this + 1) = v46;
      }
      else
      {
        uint64_t v4[2] = v45;
        uint64_t v44 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v43;
      uint64_t v44 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)google::protobuf::FileOptions::_InternalSerialize(v42, v44, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    int v48 = (google::protobuf::SourceCodeInfo *)*((void *)this + 26);
    *uint64_t v4 = 74;
    unsigned int v49 = *((_DWORD *)v48 + 10);
    if (v49 > 0x7F)
    {
      v4[1] = v49 | 0x80;
      unsigned int v51 = v49 >> 7;
      if (v49 >> 14)
      {
        uint64_t v50 = v4 + 3;
        do
        {
          *(v50 - sub_1000333D0((uint64_t *)this + 1) = v51 | 0x80;
          unsigned int v52 = v51 >> 7;
          ++v50;
          unsigned int v53 = v51 >> 14;
          v51 >>= 7;
        }
        while (v53);
        *(v50 - sub_1000333D0((uint64_t *)this + 1) = v52;
      }
      else
      {
        uint64_t v4[2] = v51;
        uint64_t v50 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v49;
      uint64_t v50 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)google::protobuf::SourceCodeInfo::_InternalSerialize(v48, v50, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  }
  uint64_t v54 = *((unsigned int *)this + 36);
  if ((int)v54 >= 1)
  {
    for (uint64_t n = 0; n != v54; ++n)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v56 = *(int *)(*((void *)this + 19) + 4 * n);
      *uint64_t v4 = 80;
      if (v56 > 0x7F)
      {
        v4[1] = v56 | 0x80;
        unint64_t v57 = v56 >> 7;
        if (v56 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - sub_1000333D0((uint64_t *)this + 1) = v57 | 0x80;
            unint64_t v58 = v57 >> 7;
            ++v4;
            unint64_t v59 = v57 >> 14;
            v57 >>= 7;
          }
          while (v59);
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v58;
        }
        else
        {
          uint64_t v4[2] = v57;
          v4 += 3;
        }
      }
      else
      {
        v4[1] = v56;
        v4 += 2;
      }
    }
  }
  uint64_t v60 = *((unsigned int *)this + 40);
  if ((int)v60 >= 1)
  {
    for (iint i = 0; ii != v60; ++ii)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v62 = *(int *)(*((void *)this + 21) + 4 * ii);
      *uint64_t v4 = 88;
      if (v62 > 0x7F)
      {
        v4[1] = v62 | 0x80;
        unint64_t v63 = v62 >> 7;
        if (v62 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - sub_1000333D0((uint64_t *)this + 1) = v63 | 0x80;
            unint64_t v64 = v63 >> 7;
            ++v4;
            unint64_t v65 = v63 >> 14;
            v63 >>= 7;
          }
          while (v65);
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v64;
        }
        else
        {
          uint64_t v4[2] = v63;
          v4 += 3;
        }
      }
      else
      {
        v4[1] = v62;
        v4 += 2;
      }
    }
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_100034480(a3, 12, (const void **)(*((void *)this + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v66 = *((void *)this + 1);
  if ((v66 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v66 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

unsigned __int8 *sub_1000E4244(google::protobuf::io::EpsCopyOutputStream *a1, int a2, uint64_t a3, unsigned __int8 *a4)
{
  if (*(char *)(a3 + 23) < 0)
  {
    int64_t v4 = *(void *)(a3 + 8);
    if (v4 > 127) {
      goto LABEL_24;
    }
  }
  else
  {
    int64_t v4 = *(unsigned __int8 *)(a3 + 23);
  }
  unsigned int v5 = 8 * a2;
  uint64_t v6 = 1;
  uint64_t v7 = 2;
  uint64_t v8 = 3;
  uint64_t v9 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v9 = 5;
  }
  if (v5 >= 0x200000) {
    uint64_t v8 = v9;
  }
  if (v5 >= 0x4000) {
    uint64_t v7 = v8;
  }
  if (v5 >= 0x80) {
    uint64_t v6 = v7;
  }
  if ((uint64_t)(*(void *)a1 + ~(unint64_t)&a4[v6] + 16) >= v4)
  {
    unsigned int v10 = v5 | 2;
    if ((v5 | 2) > 0x7F)
    {
      *a4 = v5 | 0x82;
      unsigned int v12 = v5 >> 7;
      if (v10 >> 14)
      {
        BOOL v11 = a4 + 2;
        do
        {
          *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
          unsigned int v13 = v12 >> 7;
          ++v11;
          unsigned int v14 = v12 >> 14;
          v12 >>= 7;
        }
        while (v14);
        *(v11 - sub_1000333D0((uint64_t *)this + 1) = v13;
      }
      else
      {
        a4[1] = v12;
        BOOL v11 = a4 + 2;
      }
    }
    else
    {
      *a4 = v10;
      BOOL v11 = a4 + 1;
    }
    unsigned __int8 *v11 = v4;
    unsigned int v15 = (char *)(v11 + 1);
    if (*(char *)(a3 + 23) >= 0) {
      unsigned int v16 = (const void *)a3;
    }
    else {
      unsigned int v16 = *(const void **)a3;
    }
    memcpy(v15, v16, v4);
    return (unsigned __int8 *)&v15[v4];
  }
LABEL_24:
  return google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(a1, a2, a3, a4);
}

char *google::protobuf::FileDescriptorProto::ByteSizeLong(google::protobuf::FileDescriptorProto *this)
{
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 8);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*((void *)this + 5) + 8);
    uint64_t v4 = *((unsigned int *)this + 8);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    BOOL v11 = (google::protobuf::DescriptorProto **)(v10 + 8);
  }
  else {
    BOOL v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      unsigned int v14 = google::protobuf::DescriptorProto::ByteSizeLong(v13);
      v9 += (uint64_t)&v14[(9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6];
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *((int *)this + 20);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *((void *)this + 11);
  if (v17) {
    int v18 = (google::protobuf::EnumDescriptorProto **)(v17 + 8);
  }
  else {
    int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      unint64_t v20 = *v18++;
      unsigned int v21 = google::protobuf::EnumDescriptorProto::ByteSizeLong(v20);
      v16 += (uint64_t)&v21[(9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6];
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *((int *)this + 26);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *((void *)this + 14);
  if (v24) {
    unsigned int v25 = (google::protobuf::ServiceDescriptorProto **)(v24 + 8);
  }
  else {
    unsigned int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      int v27 = *v25++;
      uint64_t v28 = google::protobuf::ServiceDescriptorProto::ByteSizeLong(v27);
      v23 += (uint64_t)&v28[(9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6];
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *((int *)this + 32);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *((void *)this + 17);
  if (v31) {
    unsigned int v32 = (google::protobuf::FieldDescriptorProto **)(v31 + 8);
  }
  else {
    unsigned int v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      int v34 = *v32++;
      int v35 = google::protobuf::FieldDescriptorProto::ByteSizeLong(v34);
      v30 += (uint64_t)&v35[(9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6];
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 36);
  uint64_t v37 = *((unsigned int *)this + 36);
  uint64_t v38 = (const google::protobuf::UnknownFieldSet *)(v36
                                                  + google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 40)
                                                  + *((unsigned int *)this + 40)
                                                  + v30
                                                  + v37);
  int v39 = *((_DWORD *)this + 4);
  if ((v39 & 0x1F) == 0) {
    goto LABEL_39;
  }
  if (v39)
  {
    unint64_t v42 = *((void *)this + 22) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v43 = *(unsigned __int8 *)(v42 + 23);
    uint64_t v44 = *(void *)(v42 + 8);
    if ((v43 & 0x80u) == 0) {
      uint64_t v44 = v43;
    }
    uint64_t v38 = (const google::protobuf::UnknownFieldSet *)((char *)v38 + v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v39 & 2) == 0)
    {
LABEL_35:
      if ((v39 & 4) == 0) {
        goto LABEL_36;
      }
LABEL_47:
      unint64_t v48 = *((void *)this + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v49 = *(unsigned __int8 *)(v48 + 23);
      uint64_t v50 = *(void *)(v48 + 8);
      if ((v49 & 0x80u) == 0) {
        uint64_t v50 = v49;
      }
      uint64_t v38 = (const google::protobuf::UnknownFieldSet *)((char *)v38 + v50
                                                                    + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6)
                                                                    + 1);
      if ((v39 & 8) == 0)
      {
LABEL_37:
        if ((v39 & 0x10) == 0) {
          goto LABEL_39;
        }
        goto LABEL_38;
      }
      goto LABEL_50;
    }
  }
  else if ((v39 & 2) == 0)
  {
    goto LABEL_35;
  }
  unint64_t v45 = *((void *)this + 23) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v46 = *(unsigned __int8 *)(v45 + 23);
  uint64_t v47 = *(void *)(v45 + 8);
  if ((v46 & 0x80u) == 0) {
    uint64_t v47 = v46;
  }
  uint64_t v38 = (const google::protobuf::UnknownFieldSet *)((char *)v38 + v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v39 & 4) != 0) {
    goto LABEL_47;
  }
LABEL_36:
  if ((v39 & 8) == 0) {
    goto LABEL_37;
  }
LABEL_50:
  unsigned int v51 = google::protobuf::FileOptions::ByteSizeLong(*((google::protobuf::FileOptions **)this + 25));
  uint64_t v38 = (const google::protobuf::UnknownFieldSet *)&v51[((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6)
                                                      + 1
                                                      + (void)v38];
  if ((v39 & 0x10) != 0)
  {
LABEL_38:
    unsigned int v40 = google::protobuf::SourceCodeInfo::ByteSizeLong(*((google::protobuf::SourceCodeInfo **)this + 26));
    uint64_t v38 = (const google::protobuf::UnknownFieldSet *)&v40[((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6)
                                                        + 1
                                                        + (void)v38];
  }
LABEL_39:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FileDescriptorProto *)((char *)this + 8), v38, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v38;
    return (char *)v38;
  }
}

void google::protobuf::FileDescriptorProto::MergeFrom(google::protobuf::FileDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::FileDescriptorProto::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::FileDescriptorProto::MergeFrom(google::protobuf::FileDescriptorProto *this, const google::protobuf::FileDescriptorProto *a2)
{
  uint64_t v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    uint64_t v7 = (const std::string **)(*((void *)a2 + 5) + 8);
    uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 24), *((_DWORD *)a2 + 8));
    sub_1000F9F28((std::string *)this + 1, (std::string **)v8, v7, v6, **((_DWORD **)this + 5) - *((_DWORD *)this + 8));
    signed int v9 = *((_DWORD *)this + 8) + v6;
    *((_DWORD *)this + 8) = v9;
    uint64_t v10 = (signed int *)*((void *)this + 5);
    if (*v10 < v9) {
      signed int *v10 = v9;
    }
  }
  unsigned int v11 = *((_DWORD *)a2 + 14);
  if (v11)
  {
    uint64_t v12 = (google::protobuf::DescriptorProto **)(*((void *)a2 + 8) + 8);
    unsigned int v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 48), *((_DWORD *)a2 + 14));
    sub_1000F9FD4((uint64_t *)this + 6, (google::protobuf::DescriptorProto **)v13, v12, v11, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    signed int v14 = *((_DWORD *)this + 14) + v11;
    *((_DWORD *)this + 14) = v14;
    uint64_t v15 = (signed int *)*((void *)this + 8);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  unsigned int v16 = *((_DWORD *)a2 + 20);
  if (v16)
  {
    uint64_t v17 = (google::protobuf::EnumDescriptorProto **)(*((void *)a2 + 11) + 8);
    int v18 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 72), *((_DWORD *)a2 + 20));
    sub_1000FA094((uint64_t *)this + 9, (google::protobuf::EnumDescriptorProto **)v18, v17, v16, **((_DWORD **)this + 11) - *((_DWORD *)this + 20));
    signed int v19 = *((_DWORD *)this + 20) + v16;
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v19;
    unint64_t v20 = (signed int *)*((void *)this + 11);
    if (*v20 < v19) {
      *unint64_t v20 = v19;
    }
  }
  unsigned int v21 = *((_DWORD *)a2 + 26);
  if (v21)
  {
    uint64_t v22 = (google::protobuf::ServiceDescriptorProto **)(*((void *)a2 + 14) + 8);
    uint64_t v23 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 96), *((_DWORD *)a2 + 26));
    sub_1000FA154((uint64_t *)this + 12, (google::protobuf::ServiceDescriptorProto **)v23, v22, v21, **((_DWORD **)this + 14) - *((_DWORD *)this + 26));
    signed int v24 = *((_DWORD *)this + 26) + v21;
    *((_DWORD *)this + 26) = v24;
    unsigned int v25 = (signed int *)*((void *)this + 14);
    if (*v25 < v24) {
      *unsigned int v25 = v24;
    }
  }
  unsigned int v26 = *((_DWORD *)a2 + 32);
  if (v26)
  {
    int v27 = (google::protobuf::FieldDescriptorProto **)(*((void *)a2 + 17) + 8);
    uint64_t v28 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileDescriptorProto *)((char *)this + 120), *((_DWORD *)a2 + 32));
    sub_1000FA214((uint64_t *)this + 15, (google::protobuf::FieldDescriptorProto **)v28, v27, v26, **((_DWORD **)this + 17) - *((_DWORD *)this + 32));
    signed int v29 = *((_DWORD *)this + 32) + v26;
    *((_DWORD *)this + 3sub_1000F9B58((void *)this + 2) = v29;
    uint64_t v30 = (signed int *)*((void *)this + 17);
    if (*v30 < v29) {
      *uint64_t v30 = v29;
    }
  }
  int v31 = *((_DWORD *)a2 + 36);
  if (v31)
  {
    uint64_t v32 = *((int *)this + 36);
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 36, v32 + v31);
    uint64_t v33 = *((void *)this + 19);
    *((_DWORD *)this + 36) += *((_DWORD *)a2 + 36);
    memcpy((void *)(v33 + 4 * v32), *((const void **)a2 + 19), 4 * *((int *)a2 + 36));
  }
  int v34 = *((_DWORD *)a2 + 40);
  if (v34)
  {
    uint64_t v35 = *((int *)this + 40);
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)this + 40, v35 + v34);
    uint64_t v36 = *((void *)this + 21);
    *((_DWORD *)this + 40) += *((_DWORD *)a2 + 40);
    memcpy((void *)(v36 + 4 * v35), *((const void **)a2 + 21), 4 * *((int *)a2 + 40));
  }
  int v37 = *((_DWORD *)a2 + 4);
  if ((v37 & 0x1F) == 0) {
    return;
  }
  if (v37)
  {
    unint64_t v38 = *((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 4) |= 1u;
    uint64_t v39 = *((void *)this + 1);
    unsigned int v40 = (google::protobuf::Arena *)(v39 & 0xFFFFFFFFFFFFFFFELL);
    if (v39) {
      unsigned int v40 = *(google::protobuf::Arena **)v40;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 22, v38, v40);
    if ((v37 & 2) == 0)
    {
LABEL_25:
      if ((v37 & 4) == 0) {
        goto LABEL_26;
      }
LABEL_35:
      unint64_t v44 = *((void *)a2 + 24) & 0xFFFFFFFFFFFFFFFELL;
      *((_DWORD *)this + 4) |= 4u;
      uint64_t v45 = *((void *)this + 1);
      uint64_t v46 = (google::protobuf::Arena *)(v45 & 0xFFFFFFFFFFFFFFFELL);
      if (v45) {
        uint64_t v46 = *(google::protobuf::Arena **)v46;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 24, v44, v46);
      if ((v37 & 8) == 0)
      {
LABEL_27:
        if ((v37 & 0x10) == 0) {
          return;
        }
        goto LABEL_46;
      }
      goto LABEL_38;
    }
  }
  else if ((v37 & 2) == 0)
  {
    goto LABEL_25;
  }
  unint64_t v41 = *((void *)a2 + 23) & 0xFFFFFFFFFFFFFFFELL;
  *((_DWORD *)this + 4) |= 2u;
  uint64_t v42 = *((void *)this + 1);
  uint64_t v43 = (google::protobuf::Arena *)(v42 & 0xFFFFFFFFFFFFFFFELL);
  if (v42) {
    uint64_t v43 = *(google::protobuf::Arena **)v43;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 23, v41, v43);
  if ((v37 & 4) != 0) {
    goto LABEL_35;
  }
LABEL_26:
  if ((v37 & 8) == 0) {
    goto LABEL_27;
  }
LABEL_38:
  *((_DWORD *)this + 4) |= 8u;
  uint64_t v47 = (google::protobuf::FileOptions *)*((void *)this + 25);
  if (!v47)
  {
    unint64_t v48 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      unint64_t v48 = (void *)*v48;
    }
    uint64_t v47 = (google::protobuf::FileOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v48);
    *((void *)this + 25) = v47;
  }
  if (*((void *)a2 + 25)) {
    uint64_t v49 = (const google::protobuf::FileOptions *)*((void *)a2 + 25);
  }
  else {
    uint64_t v49 = (const google::protobuf::FileOptions *)&google::protobuf::_FileOptions_default_instance_;
  }
  google::protobuf::FileOptions::MergeFrom(v47, v49);
  if ((v37 & 0x10) != 0)
  {
LABEL_46:
    *((_DWORD *)this + 4) |= 0x10u;
    uint64_t v50 = (std::string *)*((void *)this + 26);
    if (!v50)
    {
      unsigned int v51 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        unsigned int v51 = (void *)*v51;
      }
      uint64_t v50 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(v51);
      *((void *)this + 26) = v50;
    }
    if (*((void *)a2 + 26)) {
      unsigned int v52 = (const google::protobuf::SourceCodeInfo *)*((void *)a2 + 26);
    }
    else {
      unsigned int v52 = (const google::protobuf::SourceCodeInfo *)&google::protobuf::_SourceCodeInfo_default_instance_;
    }
    google::protobuf::SourceCodeInfo::MergeFrom(v50, v52);
  }
}

void google::protobuf::FileOptions::MergeFrom(google::protobuf::FileOptions *this, const google::protobuf::FileOptions *a2)
{
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::FileOptions *)((char *)this + 16), (const google::protobuf::FileOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    unsigned int v6 = (google::protobuf::UninterpretedOption **)(*((void *)a2 + 8) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::FileOptions *)((char *)this + 48), *((_DWORD *)a2 + 14));
    sub_1000FA694((std::string *)this + 2, (std::string **)v7, v6, v5, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    signed int v8 = *((_DWORD *)this + 14) + v5;
    *((_DWORD *)this + 14) = v8;
    signed int v9 = (signed int *)*((void *)this + 8);
    if (*v9 < v8) {
      *signed int v9 = v8;
    }
  }
  int v10 = *((_DWORD *)a2 + 10);
  if (!(_BYTE)v10) {
    goto LABEL_40;
  }
  if (v10)
  {
    unint64_t v11 = *((void *)a2 + 9) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 10) |= 1u;
    uint64_t v12 = *((void *)this + 1);
    unsigned int v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
    if (v12) {
      unsigned int v13 = *(google::protobuf::Arena **)v13;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 9, v11, v13);
    if ((v10 & 2) == 0)
    {
LABEL_9:
      if ((v10 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_9;
  }
  unint64_t v14 = *((void *)a2 + 10) & 0xFFFFFFFFFFFFFFFELL;
  *((_DWORD *)this + 10) |= 2u;
  uint64_t v15 = *((void *)this + 1);
  unsigned int v16 = (google::protobuf::Arena *)(v15 & 0xFFFFFFFFFFFFFFFELL);
  if (v15) {
    unsigned int v16 = *(google::protobuf::Arena **)v16;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 10, v14, v16);
  if ((v10 & 4) == 0)
  {
LABEL_10:
    if ((v10 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_22:
  unint64_t v17 = *((void *)a2 + 11) & 0xFFFFFFFFFFFFFFFELL;
  *((_DWORD *)this + 10) |= 4u;
  uint64_t v18 = *((void *)this + 1);
  signed int v19 = (google::protobuf::Arena *)(v18 & 0xFFFFFFFFFFFFFFFELL);
  if (v18) {
    signed int v19 = *(google::protobuf::Arena **)v19;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 11, v17, v19);
  if ((v10 & 8) == 0)
  {
LABEL_11:
    if ((v10 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_25:
  unint64_t v20 = *((void *)a2 + 12) & 0xFFFFFFFFFFFFFFFELL;
  *((_DWORD *)this + 10) |= 8u;
  uint64_t v21 = *((void *)this + 1);
  uint64_t v22 = (google::protobuf::Arena *)(v21 & 0xFFFFFFFFFFFFFFFELL);
  if (v21) {
    uint64_t v22 = *(google::protobuf::Arena **)v22;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 12, v20, v22);
  if ((v10 & 0x10) == 0)
  {
LABEL_12:
    if ((v10 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_31:
    unint64_t v26 = *((void *)a2 + 14) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 10) |= 0x20u;
    uint64_t v27 = *((void *)this + 1);
    uint64_t v28 = (google::protobuf::Arena *)(v27 & 0xFFFFFFFFFFFFFFFELL);
    if (v27) {
      uint64_t v28 = *(google::protobuf::Arena **)v28;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 14, v26, v28);
    if ((v10 & 0x40) == 0)
    {
LABEL_14:
      if ((v10 & 0x80) == 0) {
        goto LABEL_40;
      }
      goto LABEL_37;
    }
    goto LABEL_34;
  }
LABEL_28:
  unint64_t v23 = *((void *)a2 + 13) & 0xFFFFFFFFFFFFFFFELL;
  *((_DWORD *)this + 10) |= 0x10u;
  uint64_t v24 = *((void *)this + 1);
  unsigned int v25 = (google::protobuf::Arena *)(v24 & 0xFFFFFFFFFFFFFFFELL);
  if (v24) {
    unsigned int v25 = *(google::protobuf::Arena **)v25;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 13, v23, v25);
  if ((v10 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_13:
  if ((v10 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_34:
  unint64_t v29 = *((void *)a2 + 15) & 0xFFFFFFFFFFFFFFFELL;
  *((_DWORD *)this + 10) |= 0x40u;
  uint64_t v30 = *((void *)this + 1);
  int v31 = (google::protobuf::Arena *)(v30 & 0xFFFFFFFFFFFFFFFELL);
  if (v30) {
    int v31 = *(google::protobuf::Arena **)v31;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 15, v29, v31);
  if ((v10 & 0x80) != 0)
  {
LABEL_37:
    unint64_t v32 = *((void *)a2 + 16) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 10) |= 0x80u;
    uint64_t v33 = *((void *)this + 1);
    int v34 = (google::protobuf::Arena *)(v33 & 0xFFFFFFFFFFFFFFFELL);
    if (v33) {
      int v34 = *(google::protobuf::Arena **)v34;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 16, v32, v34);
  }
LABEL_40:
  if ((v10 & 0xFF00) == 0) {
    goto LABEL_51;
  }
  if ((v10 & 0x100) != 0)
  {
    unint64_t v35 = *((void *)a2 + 17) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 10) |= 0x100u;
    uint64_t v36 = *((void *)this + 1);
    int v37 = (google::protobuf::Arena *)(v36 & 0xFFFFFFFFFFFFFFFELL);
    if (v36) {
      int v37 = *(google::protobuf::Arena **)v37;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 17, v35, v37);
    if ((v10 & 0x200) == 0)
    {
LABEL_43:
      if ((v10 & 0x400) == 0) {
        goto LABEL_44;
      }
      goto LABEL_65;
    }
  }
  else if ((v10 & 0x200) == 0)
  {
    goto LABEL_43;
  }
  unint64_t v38 = *((void *)a2 + 18) & 0xFFFFFFFFFFFFFFFELL;
  *((_DWORD *)this + 10) |= 0x200u;
  uint64_t v39 = *((void *)this + 1);
  unsigned int v40 = (google::protobuf::Arena *)(v39 & 0xFFFFFFFFFFFFFFFELL);
  if (v39) {
    unsigned int v40 = *(google::protobuf::Arena **)v40;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 18, v38, v40);
  if ((v10 & 0x400) == 0)
  {
LABEL_44:
    if ((v10 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_66;
  }
LABEL_65:
  *((unsigned char *)this + 15sub_1000F9B58((void *)this + 2) = *((unsigned char *)a2 + 152);
  if ((v10 & 0x800) == 0)
  {
LABEL_45:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_67;
  }
LABEL_66:
  *((unsigned char *)this + 153) = *((unsigned char *)a2 + 153);
  if ((v10 & 0x1000) == 0)
  {
LABEL_46:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_68;
  }
LABEL_67:
  *((unsigned char *)this + 154) = *((unsigned char *)a2 + 154);
  if ((v10 & 0x2000) == 0)
  {
LABEL_47:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_48;
    }
LABEL_69:
    *((unsigned char *)this + 156) = *((unsigned char *)a2 + 156);
    if ((v10 & 0x8000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }
LABEL_68:
  *((unsigned char *)this + 155) = *((unsigned char *)a2 + 155);
  if ((v10 & 0x4000) != 0) {
    goto LABEL_69;
  }
LABEL_48:
  if ((v10 & 0x8000) != 0) {
LABEL_49:
  }
    *((unsigned char *)this + 157) = *((unsigned char *)a2 + 157);
LABEL_50:
  *((_DWORD *)this + 10) |= v10;
LABEL_51:
  if ((v10 & 0xF0000) == 0) {
    return;
  }
  if ((v10 & 0x10000) != 0)
  {
    *((unsigned char *)this + 158) = *((unsigned char *)a2 + 158);
    if ((v10 & 0x20000) == 0)
    {
LABEL_54:
      if ((v10 & 0x40000) == 0) {
        goto LABEL_55;
      }
LABEL_73:
      *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = *((_DWORD *)a2 + 40);
      if ((v10 & 0x80000) == 0) {
        goto LABEL_57;
      }
      goto LABEL_56;
    }
  }
  else if ((v10 & 0x20000) == 0)
  {
    goto LABEL_54;
  }
  *((unsigned char *)this + 159) = *((unsigned char *)a2 + 159);
  if ((v10 & 0x40000) != 0) {
    goto LABEL_73;
  }
LABEL_55:
  if ((v10 & 0x80000) != 0) {
LABEL_56:
  }
    *((unsigned char *)this + 164) = *((unsigned char *)a2 + 164);
LABEL_57:
  *((_DWORD *)this + 10) |= v10;
}

std::string *google::protobuf::SourceCodeInfo::MergeFrom(std::string *this, const google::protobuf::SourceCodeInfo *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    unsigned int v6 = (const google::protobuf::SourceCodeInfo_Location **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], v5);
    this = sub_1000E0FE4((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  return this;
}

void google::protobuf::FileDescriptorProto::CopyFrom(google::protobuf::FileDescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::FileDescriptorProto::Clear(this);
    google::protobuf::FileDescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::FileDescriptorProto::IsInitialized(google::protobuf::FileDescriptorProto *this)
{
  uint64_t v2 = *((unsigned int *)this + 14);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char IsInitialized = google::protobuf::DescriptorProto::IsInitialized(*(google::protobuf::DescriptorProto **)(*((void *)this + 8) + 8 * v2));
    uint64_t v2 = v3;
    if ((IsInitialized & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *((unsigned int *)this + 20);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = google::protobuf::EnumDescriptorProto::IsInitialized(*(google::protobuf::EnumDescriptorProto **)(*((void *)this + 11) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *((unsigned int *)this + 26);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = v8 - 1;
    char v10 = google::protobuf::ServiceDescriptorProto::IsInitialized(*(google::protobuf::ServiceDescriptorProto **)(*((void *)this + 14) + 8 * v8));
    uint64_t v8 = v9;
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v11 = *((unsigned int *)this + 32);
  while ((int)v11 >= 1)
  {
    uint64_t v12 = v11 - 1;
    char v13 = google::protobuf::FieldDescriptorProto::IsInitialized(*(google::protobuf::FieldDescriptorProto **)(*((void *)this + 17) + 8 * v11));
    uint64_t v11 = v12;
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  if ((*((unsigned char *)this + 16) & 8) == 0) {
    return 1;
  }
  uint64_t v15 = *((void *)this + 25);
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v15 + 16));
  if (result)
  {
    uint64_t result = sub_1000E8DC0(v15 + 48);
    if (result) {
      return 1;
    }
  }
  return result;
}

BOOL sub_1000E5170(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 8);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char IsInitialized = google::protobuf::DescriptorProto::IsInitialized(*(google::protobuf::DescriptorProto **)(*(void *)(a1 + 16) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((IsInitialized & 1) != 0);
  return v3 < 1;
}

uint64_t google::protobuf::FileOptions::IsInitialized(google::protobuf::FileOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::FileOptions *)((char *)this + 16));
  if (result)
  {
    return sub_1000E8DC0((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::FileDescriptorProto::GetMetadata(google::protobuf::FileDescriptorProto *this)
{
  return off_1001EAAD0[2];
}

void google::protobuf::DescriptorProto_ExtensionRange::~DescriptorProto_ExtensionRange(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  if (this != (google::protobuf::DescriptorProto_ExtensionRange *)&google::protobuf::_DescriptorProto_ExtensionRange_default_instance_)
  {
    uint64_t v2 = (google::protobuf::ExtensionRangeOptions *)*((void *)this + 3);
    if (v2)
    {
      google::protobuf::ExtensionRangeOptions::~ExtensionRangeOptions(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  google::protobuf::DescriptorProto_ExtensionRange::~DescriptorProto_ExtensionRange(this);
  operator delete();
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::DescriptorProto_ExtensionRange::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = *((_DWORD *)this + 4);
  if (v2) {
    this = google::protobuf::ExtensionRangeOptions::Clear(this[3]);
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 3sub_1000F9B58((void *)this + 2) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_100035820((unint64_t *)v3);
  }
  return this;
}

google::protobuf::Arena **google::protobuf::ExtensionRangeOptions::Clear(google::protobuf::ExtensionRangeOptions *this)
{
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  uint64_t v3 = *((unsigned int *)this + 12);
  if ((int)v3 >= 1)
  {
    char v4 = (google::protobuf::Arena ***)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 1sub_1000F9B58((void *)this + 2) = 0;
  }
  char v7 = *((unsigned char *)this + 8);
  uint64_t v6 = (unint64_t *)((char *)this + 8);
  if (v7)
  {
    return sub_100035820(v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::DescriptorProto_ExtensionRange::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v30, a3[11].i32[1]) & 1) == 0)
  {
    char v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v30 + 1);
      unsigned int v9 = *(unsigned __int8 *)v30;
      if ((*(char *)v30 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v30, (const char *)(v10 - 128));
      uint64_t v30 = TagFallback;
      if (!TagFallback) {
        goto LABEL_48;
      }
      uint64_t v8 = TagFallback;
      unsigned int v9 = v25;
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 == 26)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v16 = *(void *)(a1 + 24);
          if (!v16)
          {
            unint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              unint64_t v17 = (void *)*v17;
            }
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v17);
            *(void *)(a1 + 24) = v16;
            uint64_t v8 = v30;
          }
          uint64_t v15 = sub_1000E5620(a3, v16, v8);
        }
        else
        {
LABEL_14:
          if (v9) {
            BOOL v13 = (v9 & 7) == 4;
          }
          else {
            BOOL v13 = 1;
          }
          if (v13)
          {
            a3[10].i32[0] = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unint64_t v14 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unint64_t v14 = sub_10003562C((unint64_t *)(a1 + 8));
            uint64_t v8 = v30;
          }
          uint64_t v15 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v14, v8);
        }
        uint64_t v30 = v15;
        if (!v15) {
          goto LABEL_48;
        }
        goto LABEL_38;
      }
      if (v11 == 2)
      {
        if (v9 != 16) {
          goto LABEL_14;
        }
        v5 |= 4u;
        signed int v19 = (google::protobuf::internal *)((char *)v8 + 1);
        LODWORD(v18) = *(unsigned __int8 *)v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_33;
        }
        int v20 = *(char *)v19;
        unint64_t v18 = v18 + (v20 << 7) - 128;
        if ((v20 & 0x80000000) == 0)
        {
          signed int v19 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_33:
          uint64_t v30 = v19;
          *(_DWORD *)(a1 + 36) = v18;
          goto LABEL_38;
        }
        unint64_t v26 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v18);
        uint64_t v30 = v26;
        *(_DWORD *)(a1 + 36) = v27;
        if (!v26) {
          goto LABEL_48;
        }
      }
      else
      {
        if (v11 != 1 || v9 != 8) {
          goto LABEL_14;
        }
        v5 |= 2u;
        uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 1);
        LODWORD(v2sub_1000333D0((uint64_t *)this + 1) = *(unsigned __int8 *)v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_37;
        }
        int v23 = *(char *)v22;
        unint64_t v21 = v21 + (v23 << 7) - 128;
        if ((v23 & 0x80000000) == 0)
        {
          uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
          uint64_t v30 = v22;
          *(_DWORD *)(a1 + 3sub_1000F9B58((void *)this + 2) = v21;
          goto LABEL_38;
        }
        uint64_t v28 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v21);
        uint64_t v30 = v28;
        *(_DWORD *)(a1 + 3sub_1000F9B58((void *)this + 2) = v29;
        if (!v28)
        {
LABEL_48:
          uint64_t v30 = 0;
          goto LABEL_2;
        }
      }
LABEL_38:
      if (sub_1000355B8((uint64_t)a3, &v30, a3[11].i32[1])) {
        goto LABEL_2;
      }
    }
    uint64_t v8 = (google::protobuf::internal *)((char *)v30 + 2);
LABEL_7:
    uint64_t v30 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

google::protobuf::internal *sub_1000E5620(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::ExtensionRangeOptions::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto_ExtensionRange::_InternalSerialize(google::protobuf::DescriptorProto_ExtensionRange *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((int *)this + 8);
    *a2 = 8;
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      if (v7 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          ++a2;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v9;
        if ((v6 & 4) != 0) {
          goto LABEL_16;
        }
      }
      else
      {
        a2[2] = v8;
        a2 += 3;
        if ((v6 & 4) != 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 4) != 0) {
        goto LABEL_16;
      }
    }
LABEL_3:
    if ((v6 & 1) == 0) {
      goto LABEL_37;
    }
    goto LABEL_27;
  }
  if ((v6 & 4) == 0) {
    goto LABEL_3;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v11 = *((int *)this + 9);
  *a2 = 16;
  if (v11 > 0x7F)
  {
    a2[1] = v11 | 0x80;
    unint64_t v12 = v11 >> 7;
    if (v11 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        ++a2;
        unint64_t v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
      if ((v6 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      a2[2] = v12;
      a2 += 3;
      if ((v6 & 1) == 0) {
        goto LABEL_37;
      }
    }
  }
  else
  {
    a2[1] = v11;
    a2 += 2;
    if ((v6 & 1) == 0) {
      goto LABEL_37;
    }
  }
LABEL_27:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  uint64_t v15 = (google::protobuf::ExtensionRangeOptions *)*((void *)this + 3);
  *a2 = 26;
  unsigned int v16 = *((_DWORD *)v15 + 16);
  if (v16 > 0x7F)
  {
    a2[1] = v16 | 0x80;
    unsigned int v18 = v16 >> 7;
    if (v16 >> 14)
    {
      unint64_t v17 = a2 + 3;
      do
      {
        *(v17 - sub_1000333D0((uint64_t *)this + 1) = v18 | 0x80;
        unsigned int v19 = v18 >> 7;
        ++v17;
        unsigned int v20 = v18 >> 14;
        v18 >>= 7;
      }
      while (v20);
      *(v17 - sub_1000333D0((uint64_t *)this + 1) = v19;
    }
    else
    {
      a2[2] = v18;
      unint64_t v17 = a2 + 3;
    }
  }
  else
  {
    a2[1] = v16;
    unint64_t v17 = a2 + 2;
  }
  a2 = (unsigned __int8 *)google::protobuf::ExtensionRangeOptions::_InternalSerialize(v15, v17, a3);
LABEL_37:
  uint64_t v21 = *((void *)this + 1);
  if ((v21 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v21 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::DescriptorProto_ExtensionRange::ByteSizeLong(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    char v4 = google::protobuf::ExtensionRangeOptions::ByteSizeLong(*((google::protobuf::ExtensionRangeOptions **)this + 3));
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)&v4[((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1];
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *((_DWORD *)this + 8);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v6);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v7 = *((_DWORD *)this + 9);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v8);
  }
LABEL_16:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::DescriptorProto_ExtensionRange *)((char *)this + 8), v3, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v3;
    return (char *)v3;
  }
}

void google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(google::protobuf::DescriptorProto_ExtensionRange *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::DescriptorProto_ExtensionRange::MergeFrom(google::protobuf::DescriptorProto_ExtensionRange *this, const google::protobuf::DescriptorProto_ExtensionRange *a2)
{
  char v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      *((_DWORD *)this + 4) |= 1u;
      int v7 = (google::protobuf::ExtensionRangeOptions *)*((void *)this + 3);
      if (!v7)
      {
        uint64_t v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          uint64_t v8 = (void *)*v8;
        }
        int v7 = (google::protobuf::ExtensionRangeOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v8);
        *((void *)this + 3) = v7;
      }
      if (*((void *)a2 + 3)) {
        unint64_t v9 = (const google::protobuf::ExtensionRangeOptions *)*((void *)a2 + 3);
      }
      else {
        unint64_t v9 = (const google::protobuf::ExtensionRangeOptions *)&google::protobuf::_ExtensionRangeOptions_default_instance_;
      }
      google::protobuf::ExtensionRangeOptions::MergeFrom(v7, v9);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0)
        {
LABEL_8:
          *((_DWORD *)this + 4) |= v6;
          return;
        }
LABEL_7:
        *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
        goto LABEL_8;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    if ((v6 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
}

void google::protobuf::ExtensionRangeOptions::MergeFrom(google::protobuf::ExtensionRangeOptions *this, const google::protobuf::ExtensionRangeOptions *a2)
{
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::ExtensionRangeOptions *)((char *)this + 16), (const google::protobuf::ExtensionRangeOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 12);
  if (v5)
  {
    int v6 = (google::protobuf::UninterpretedOption **)(*((void *)a2 + 7) + 8);
    int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::ExtensionRangeOptions *)((char *)this + 40), v5);
    sub_1000FA694((std::string *)((char *)this + 40), (std::string **)v7, v6, v5, **((_DWORD **)this + 7) - *((_DWORD *)this + 12));
    signed int v8 = *((_DWORD *)this + 12) + v5;
    *((_DWORD *)this + 1sub_1000F9B58((void *)this + 2) = v8;
    unint64_t v9 = (signed int *)*((void *)this + 7);
    if (*v9 < v8) {
      *unint64_t v9 = v8;
    }
  }
}

void google::protobuf::DescriptorProto_ExtensionRange::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    google::protobuf::DescriptorProto_ExtensionRange::Clear(this);
    google::protobuf::DescriptorProto_ExtensionRange::MergeFrom((google::protobuf::DescriptorProto_ExtensionRange *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::IsInitialized(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v1 = *((void *)this + 3);
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v1 + 16));
  if (result)
  {
    uint64_t result = sub_1000E8DC0(v1 + 40);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t google::protobuf::ExtensionRangeOptions::IsInitialized(google::protobuf::ExtensionRangeOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::ExtensionRangeOptions *)((char *)this + 16));
  if (result)
  {
    return sub_1000E8DC0((uint64_t)this + 40);
  }
  return result;
}

uint64_t google::protobuf::DescriptorProto_ExtensionRange::GetMetadata(google::protobuf::DescriptorProto_ExtensionRange *this)
{
  return off_1001EAAD0[4];
}

void google::protobuf::DescriptorProto_ReservedRange::~DescriptorProto_ReservedRange(google::protobuf::DescriptorProto_ReservedRange *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::DescriptorProto_ReservedRange::Clear(google::protobuf::DescriptorProto_ReservedRange *this)
{
  if ((*((unsigned char *)this + 16) & 3) != 0) {
    *((void *)this + 3) = 0;
  }
  char v2 = *((unsigned char *)this + 8);
  uint64_t result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_1000F9B58((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::DescriptorProto_ReservedRange::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unint64_t v26 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v26 + 1);
      unsigned int v9 = *(unsigned __int8 *)v26;
      if ((*(char *)v26 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v26, (const char *)(v10 - 128));
      unint64_t v26 = TagFallback;
      if (!TagFallback) {
        goto LABEL_40;
      }
      signed int v8 = TagFallback;
      unsigned int v9 = v21;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 16) {
          goto LABEL_13;
        }
        v5 |= 2u;
        uint64_t v15 = (google::protobuf::internal *)((char *)v8 + 1);
        LODWORD(v14) = *(unsigned __int8 *)v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_25;
        }
        int v16 = *(char *)v15;
        unint64_t v14 = v14 + (v16 << 7) - 128;
        if ((v16 & 0x80000000) == 0)
        {
          uint64_t v15 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_25:
          unint64_t v26 = v15;
          *(_DWORD *)(a1 + 28) = v14;
          goto LABEL_30;
        }
        uint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v14);
        unint64_t v26 = v22;
        *(_DWORD *)(a1 + 28) = v23;
        if (!v22) {
          goto LABEL_40;
        }
      }
      else
      {
        if (v9 >> 3 != 1 || v9 != 8)
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unint64_t v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unint64_t v13 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v26;
          }
          unint64_t v26 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
          if (!v26)
          {
LABEL_40:
            unint64_t v26 = 0;
            goto LABEL_2;
          }
          goto LABEL_30;
        }
        v5 |= 1u;
        unsigned int v18 = (google::protobuf::internal *)((char *)v8 + 1);
        LODWORD(v17) = *(unsigned __int8 *)v8;
        if ((v17 & 0x80) == 0) {
          goto LABEL_29;
        }
        int v19 = *(char *)v18;
        unint64_t v17 = v17 + (v19 << 7) - 128;
        if ((v19 & 0x80000000) == 0)
        {
          unsigned int v18 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_29:
          unint64_t v26 = v18;
          *(_DWORD *)(a1 + 24) = v17;
          goto LABEL_30;
        }
        uint64_t v24 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v17);
        unint64_t v26 = v24;
        *(_DWORD *)(a1 + 24) = v25;
        if (!v24) {
          goto LABEL_40;
        }
      }
LABEL_30:
      if (sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    signed int v8 = (google::protobuf::internal *)((char *)v26 + 2);
LABEL_7:
    unint64_t v26 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

const google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto_ReservedRange::_InternalSerialize(google::protobuf::DescriptorProto_ReservedRange *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((int *)this + 6);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unint64_t v11 = v8 >> 7;
        ++a2;
        unint64_t v12 = v8 >> 14;
        v8 >>= 7;
      }
      while (v12);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v11;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_23;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v9 = *((int *)this + 7);
  *a2 = 16;
  if (v9 > 0x7F)
  {
    a2[1] = v9 | 0x80;
    unint64_t v10 = v9 >> 7;
    if (v9 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
        unint64_t v13 = v10 >> 7;
        ++a2;
        unint64_t v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      a2[2] = v10;
      a2 += 3;
    }
  }
  else
  {
    a2[1] = v9;
    a2 += 2;
  }
LABEL_23:
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::DescriptorProto_ReservedRange::ByteSizeLong(google::protobuf::DescriptorProto_ReservedRange *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *((_DWORD *)this + 6);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *((_DWORD *)this + 7);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::DescriptorProto_ReservedRange *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v2;
  return (char *)v2;
}

void google::protobuf::DescriptorProto_ReservedRange::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::DescriptorProto_ReservedRange::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **google::protobuf::DescriptorProto_ReservedRange::MergeFrom(void **this, const google::protobuf::DescriptorProto_ReservedRange *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      *((_DWORD *)v3 + 6) = *((_DWORD *)a2 + 6);
    }
    if ((v5 & 2) != 0) {
      *((_DWORD *)v3 + 7) = *((_DWORD *)a2 + 7);
    }
    *((_DWORD *)v3 + 4) |= v5;
  }
  return this;
}

void google::protobuf::DescriptorProto_ReservedRange::CopyFrom(google::protobuf::DescriptorProto_ReservedRange *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::DescriptorProto_ReservedRange::Clear(this);
    google::protobuf::DescriptorProto_ReservedRange::MergeFrom((void **)this, a2);
  }
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::IsInitialized(google::protobuf::DescriptorProto_ReservedRange *this)
{
  return 1;
}

uint64_t google::protobuf::DescriptorProto_ReservedRange::GetMetadata(google::protobuf::DescriptorProto_ReservedRange *this)
{
  return off_1001EAAD0[6];
}

void *google::protobuf::DescriptorProto::DescriptorProto(void *a1, uint64_t a2)
{
  *a1 = off_1001CF6D8;
  a1[1] = a2;
  a1[2] = 0;
  a1[3] = a2;
  a1[6] = a2;
  a1[4] = 0;
  a1[5] = 0;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = a2;
  a1[13] = 0;
  a1[14] = 0;
  a1[15] = a2;
  a1[16] = 0;
  a1[17] = 0;
  a1[24] = a2;
  a1[18] = a2;
  a1[19] = 0;
  a1[20] = 0;
  a1[21] = a2;
  a1[22] = 0;
  a1[23] = 0;
  a1[25] = 0;
  a1[26] = 0;
  if (atomic_load_explicit(scc_info_DescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  a1[27] = &google::protobuf::internal::fixed_address_empty_string;
  a1[28] = 0;
  return a1;
}

void sub_1000E64A4(_Unwind_Exception *a1)
{
  sub_1000F9C98(v8);
  sub_1000719B4(v7);
  sub_1000FA354(v6);
  sub_1000F9EA8(v5);
  sub_1000FA2D4(v4);
  sub_1000F9DA8(v3);
  sub_1000F9D28(v2);
  sub_1000F9EA8(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorProto::~DescriptorProto(google::protobuf::DescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 27);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if (this != (google::protobuf::DescriptorProto *)google::protobuf::_DescriptorProto_default_instance_)
  {
    int v3 = (google::protobuf::MessageOptions *)*((void *)this + 28);
    if (v3)
    {
      google::protobuf::MessageOptions::~MessageOptions(v3);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_1000F9C98((void *)this + 24);
  sub_1000719B4((void *)this + 21);
  sub_1000FA354((void *)this + 18);
  sub_1000F9EA8((void *)this + 15);
  sub_1000FA2D4((void *)this + 12);
  sub_1000F9DA8((void *)this + 9);
  sub_1000F9D28((char *)this + 48);
  sub_1000F9EA8((void *)this + 3);
}

{
  uint64_t vars8;

  google::protobuf::DescriptorProto::~DescriptorProto(this);
  operator delete();
}

uint64_t google::protobuf::DescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::DescriptorProto::Clear(google::protobuf::DescriptorProto *this)
{
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    int v3 = (google::protobuf::Arena ***)(*((void *)this + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      google::protobuf::FieldDescriptorProto::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  uint64_t v5 = *((unsigned int *)this + 14);
  if ((int)v5 >= 1)
  {
    int v6 = (google::protobuf::DescriptorProto **)(*((void *)this + 8) + 8);
    do
    {
      unint64_t v7 = *v6++;
      google::protobuf::DescriptorProto::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 14) = 0;
  }
  uint64_t v8 = *((unsigned int *)this + 20);
  if ((int)v8 >= 1)
  {
    unint64_t v9 = (google::protobuf::EnumDescriptorProto **)(*((void *)this + 11) + 8);
    do
    {
      unint64_t v10 = *v9++;
      google::protobuf::EnumDescriptorProto::Clear(v10);
      --v8;
    }
    while (v8);
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  }
  uint64_t v11 = *((unsigned int *)this + 26);
  if ((int)v11 >= 1)
  {
    unint64_t v12 = (google::protobuf::Arena ***)(*((void *)this + 14) + 8);
    do
    {
      unint64_t v13 = *v12++;
      google::protobuf::DescriptorProto_ExtensionRange::Clear(v13);
      --v11;
    }
    while (v11);
    *((_DWORD *)this + 26) = 0;
  }
  uint64_t v14 = *((unsigned int *)this + 32);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (google::protobuf::Arena ***)(*((void *)this + 17) + 8);
    do
    {
      int v16 = *v15++;
      google::protobuf::FieldDescriptorProto::Clear(v16);
      --v14;
    }
    while (v14);
    *((_DWORD *)this + 3sub_1000F9B58((void *)this + 2) = 0;
  }
  uint64_t v17 = *((unsigned int *)this + 38);
  if ((int)v17 >= 1)
  {
    unsigned int v18 = (google::protobuf::Arena ***)(*((void *)this + 20) + 8);
    do
    {
      int v19 = *v18++;
      google::protobuf::OneofDescriptorProto::Clear(v19);
      --v17;
    }
    while (v17);
    *((_DWORD *)this + 38) = 0;
  }
  uint64_t v20 = *((unsigned int *)this + 44);
  if ((int)v20 >= 1)
  {
    unsigned int v21 = (google::protobuf::DescriptorProto_ReservedRange **)(*((void *)this + 23) + 8);
    do
    {
      uint64_t v22 = *v21++;
      google::protobuf::DescriptorProto_ReservedRange::Clear(v22);
      --v20;
    }
    while (v20);
    *((_DWORD *)this + 44) = 0;
  }
  uint64_t result = (google::protobuf::Arena **)sub_1000F9B0C((uint64_t)this + 192);
  int v24 = *((_DWORD *)this + 4);
  if ((v24 & 3) != 0)
  {
    if ((v24 & 1) == 0) {
      goto LABEL_33;
    }
    unint64_t v25 = *((void *)this + 27) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v25 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v25 = 0;
      *(unsigned char *)(v25 + 23) = 0;
LABEL_33:
      if ((v24 & 2) == 0) {
        goto LABEL_35;
      }
      goto LABEL_34;
    }
    **(unsigned char **)unint64_t v25 = 0;
    *(void *)(v25 + 8) = 0;
    if ((v24 & 2) != 0) {
LABEL_34:
    }
      uint64_t result = google::protobuf::MessageOptions::Clear(*((google::protobuf::MessageOptions **)this + 28));
  }
LABEL_35:
  char v27 = *((unsigned char *)this + 8);
  unint64_t v26 = (char *)this + 8;
  *((_DWORD *)v26 + sub_1000F9B58((void *)this + 2) = 0;
  if (v27)
  {
    return sub_100035820((unint64_t *)v26);
  }
  return result;
}

google::protobuf::Arena **google::protobuf::MessageOptions::Clear(google::protobuf::MessageOptions *this)
{
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  uint64_t v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (google::protobuf::Arena ***)(*((void *)this + 8) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  char v7 = *((unsigned char *)this + 8);
  int v6 = (char *)this + 8;
  *((_DWORD *)v6 + 16) = 0;
  *((_DWORD *)v6 + 8) = 0;
  if (v7)
  {
    return sub_100035820((unint64_t *)v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::DescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  int v85 = a2;
  if ((sub_1000355B8((uint64_t)a3, &v85, a3[11].i32[1]) & 1) == 0)
  {
    long long v84 = (unint64_t *)(a1 + 8);
    while (2)
    {
      int v6 = (google::protobuf::internal *)((char *)v85 + 1);
      unsigned int v7 = *(unsigned __int8 *)v85;
      if (*(char *)v85 < 0)
      {
        unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*(char *)v6 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v85, (const char *)(v8 - 128));
          int v85 = TagFallback;
          if (!TagFallback) {
            return 0;
          }
          int v6 = TagFallback;
          unsigned int v7 = v14;
LABEL_8:
          switch(v7 >> 3)
          {
            case 1u:
              if (v7 != 10) {
                goto LABEL_125;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v9 = *(void *)(a1 + 8);
              unint64_t v10 = (google::protobuf::Arena *)(v9 & 0xFFFFFFFFFFFFFFFELL);
              if (v9) {
                unint64_t v10 = *(google::protobuf::Arena **)v10;
              }
              uint64_t v11 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 216), v10);
              unint64_t v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v11, (std::string::value_type *)v85, (uint64_t)a3);
              goto LABEL_132;
            case 2u:
              if (v7 != 18) {
                goto LABEL_125;
              }
              uint64_t v15 = (google::protobuf::internal *)((char *)v6 - 1);
              while (1)
              {
                int v16 = (google::protobuf::internal *)((char *)v15 + 1);
                int v85 = (google::protobuf::internal *)((char *)v15 + 1);
                uint64_t v17 = *(int **)(a1 + 40);
                if (!v17) {
                  break;
                }
                uint64_t v18 = *(int *)(a1 + 32);
                int v19 = *v17;
                if ((int)v18 >= *v17)
                {
                  if (v19 == *(_DWORD *)(a1 + 36))
                  {
LABEL_22:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v19 + 1);
                    uint64_t v17 = *(int **)(a1 + 40);
                    int v19 = *v17;
                  }
                  int *v17 = v19 + 1;
                  uint64_t v20 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*(void *)(a1 + 24));
                  uint64_t v21 = *(void *)(a1 + 40);
                  uint64_t v22 = *(int *)(a1 + 32);
                  *(_DWORD *)(a1 + 3sub_1000F9B58((void *)this + 2) = v22 + 1;
                  *(void *)(v21 + 8 * v22 + 8) = v20;
                  int v16 = v85;
                  goto LABEL_24;
                }
                *(_DWORD *)(a1 + 3sub_1000F9B58((void *)this + 2) = v18 + 1;
                uint64_t v20 = *(void *)&v17[2 * v18 + 2];
LABEL_24:
                uint64_t v15 = sub_1000E3968(a3, v20, v16);
                int v85 = v15;
                if (!v15) {
                  return 0;
                }
                if (*(void *)a3 <= (unint64_t)v15 || *(unsigned char *)v15 != 18) {
                  goto LABEL_133;
                }
              }
              int v19 = *(_DWORD *)(a1 + 36);
              goto LABEL_22;
            case 3u:
              if (v7 != 26) {
                goto LABEL_125;
              }
              unint64_t v23 = (unint64_t)v6 - 1;
              while (1)
              {
                int v24 = (google::protobuf::internal *)(v23 + 1);
                int v85 = (google::protobuf::internal *)(v23 + 1);
                unint64_t v25 = *(int **)(a1 + 64);
                if (!v25) {
                  break;
                }
                uint64_t v26 = *(int *)(a1 + 56);
                int v27 = *v25;
                if ((int)v26 >= *v25)
                {
                  if (v27 == *(_DWORD *)(a1 + 60))
                  {
LABEL_35:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v27 + 1);
                    unint64_t v25 = *(int **)(a1 + 64);
                    int v27 = *v25;
                  }
                  *unint64_t v25 = v27 + 1;
                  uint64_t v29 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*(void *)(a1 + 48));
                  LODWORD(v28) = v29;
                  uint64_t v30 = *(void *)(a1 + 64);
                  uint64_t v31 = *(int *)(a1 + 56);
                  *(_DWORD *)(a1 + 56) = v31 + 1;
                  *(void *)(v30 + 8 * v31 + 8) = v29;
                  int v24 = v85;
                  goto LABEL_37;
                }
                *(_DWORD *)(a1 + 56) = v26 + 1;
                uint64_t v28 = *(void *)&v25[2 * v26 + 2];
LABEL_37:
                unint64_t v23 = sub_1000E36F8((int)a3, v28, v24);
                int v85 = (google::protobuf::internal *)v23;
                if (!v23) {
                  return 0;
                }
                if (*(void *)a3 <= v23 || *(unsigned char *)v23 != 26) {
                  goto LABEL_133;
                }
              }
              int v27 = *(_DWORD *)(a1 + 60);
              goto LABEL_35;
            case 4u:
              if (v7 != 34) {
                goto LABEL_125;
              }
              unint64_t v32 = (google::protobuf::internal *)((char *)v6 - 1);
              while (1)
              {
                uint64_t v33 = (google::protobuf::internal *)((char *)v32 + 1);
                int v85 = (google::protobuf::internal *)((char *)v32 + 1);
                int v34 = *(int **)(a1 + 88);
                if (!v34) {
                  break;
                }
                uint64_t v35 = *(int *)(a1 + 80);
                int v36 = *v34;
                if ((int)v35 >= *v34)
                {
                  if (v36 == *(_DWORD *)(a1 + 84))
                  {
LABEL_48:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v36 + 1);
                    int v34 = *(int **)(a1 + 88);
                    int v36 = *v34;
                  }
                  *int v34 = v36 + 1;
                  uint64_t v37 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*(void *)(a1 + 72));
                  uint64_t v38 = *(void *)(a1 + 88);
                  uint64_t v39 = *(int *)(a1 + 80);
                  *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v39 + 1;
                  *(void *)(v38 + 8 * v39 + 8) = v37;
                  uint64_t v33 = v85;
                  goto LABEL_50;
                }
                *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v35 + 1;
                uint64_t v37 = *(void *)&v34[2 * v35 + 2];
LABEL_50:
                unint64_t v32 = sub_1000E37C8(a3, v37, v33);
                int v85 = v32;
                if (!v32) {
                  return 0;
                }
                if (*(void *)a3 <= (unint64_t)v32 || *(unsigned char *)v32 != 34) {
                  goto LABEL_133;
                }
              }
              int v36 = *(_DWORD *)(a1 + 84);
              goto LABEL_48;
            case 5u:
              if (v7 != 42) {
                goto LABEL_125;
              }
              unsigned int v40 = (google::protobuf::internal *)((char *)v6 - 1);
              while (1)
              {
                unint64_t v41 = (google::protobuf::internal *)((char *)v40 + 1);
                int v85 = (google::protobuf::internal *)((char *)v40 + 1);
                uint64_t v42 = *(int **)(a1 + 112);
                if (!v42) {
                  break;
                }
                uint64_t v43 = *(int *)(a1 + 104);
                int v44 = *v42;
                if ((int)v43 >= *v42)
                {
                  if (v44 == *(_DWORD *)(a1 + 108))
                  {
LABEL_61:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 96), v44 + 1);
                    uint64_t v42 = *(int **)(a1 + 112);
                    int v44 = *v42;
                  }
                  *uint64_t v42 = v44 + 1;
                  uint64_t v45 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(*(void *)(a1 + 96));
                  uint64_t v46 = *(void *)(a1 + 112);
                  uint64_t v47 = *(int *)(a1 + 104);
                  *(_DWORD *)(a1 + 104) = v47 + 1;
                  *(void *)(v46 + 8 * v47 + 8) = v45;
                  unint64_t v41 = v85;
                  goto LABEL_63;
                }
                *(_DWORD *)(a1 + 104) = v43 + 1;
                uint64_t v45 = *(void *)&v42[2 * v43 + 2];
LABEL_63:
                unsigned int v40 = sub_1000E7124(a3, v45, v41);
                int v85 = v40;
                if (!v40) {
                  return 0;
                }
                if (*(void *)a3 <= (unint64_t)v40 || *(unsigned char *)v40 != 42) {
                  goto LABEL_133;
                }
              }
              int v44 = *(_DWORD *)(a1 + 108);
              goto LABEL_61;
            case 6u:
              if (v7 != 50) {
                goto LABEL_125;
              }
              unint64_t v48 = (google::protobuf::internal *)((char *)v6 - 1);
              while (1)
              {
                uint64_t v49 = (google::protobuf::internal *)((char *)v48 + 1);
                int v85 = (google::protobuf::internal *)((char *)v48 + 1);
                uint64_t v50 = *(int **)(a1 + 136);
                if (!v50) {
                  break;
                }
                uint64_t v51 = *(int *)(a1 + 128);
                int v52 = *v50;
                if ((int)v51 >= *v50)
                {
                  if (v52 == *(_DWORD *)(a1 + 132))
                  {
LABEL_74:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 120), v52 + 1);
                    uint64_t v50 = *(int **)(a1 + 136);
                    int v52 = *v50;
                  }
                  *uint64_t v50 = v52 + 1;
                  uint64_t v53 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*(void *)(a1 + 120));
                  uint64_t v54 = *(void *)(a1 + 136);
                  uint64_t v55 = *(int *)(a1 + 128);
                  *(_DWORD *)(a1 + 128) = v55 + 1;
                  *(void *)(v54 + 8 * v55 + 8) = v53;
                  uint64_t v49 = v85;
                  goto LABEL_76;
                }
                *(_DWORD *)(a1 + 128) = v51 + 1;
                uint64_t v53 = *(void *)&v50[2 * v51 + 2];
LABEL_76:
                unint64_t v48 = sub_1000E3968(a3, v53, v49);
                int v85 = v48;
                if (!v48) {
                  return 0;
                }
                if (*(void *)a3 <= (unint64_t)v48 || *(unsigned char *)v48 != 50) {
                  goto LABEL_133;
                }
              }
              int v52 = *(_DWORD *)(a1 + 132);
              goto LABEL_74;
            case 7u:
              if (v7 != 58) {
                goto LABEL_125;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v56 = *(void *)(a1 + 224);
              if (!v56)
              {
                unint64_t v57 = (void *)(*v84 & 0xFFFFFFFFFFFFFFFELL);
                if (*v84) {
                  unint64_t v57 = (void *)*v57;
                }
                uint64_t v56 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(v57);
                *(void *)(a1 + 224) = v56;
                int v6 = v85;
              }
              unint64_t v12 = sub_1000E71F4(a3, v56, v6);
              goto LABEL_132;
            case 8u:
              if (v7 != 66) {
                goto LABEL_125;
              }
              unint64_t v58 = (google::protobuf::internal *)((char *)v6 - 1);
              while (1)
              {
                unint64_t v59 = (google::protobuf::internal *)((char *)v58 + 1);
                int v85 = (google::protobuf::internal *)((char *)v58 + 1);
                uint64_t v60 = *(int **)(a1 + 160);
                if (!v60) {
                  break;
                }
                uint64_t v61 = *(int *)(a1 + 152);
                int v62 = *v60;
                if ((int)v61 >= *v60)
                {
                  if (v62 == *(_DWORD *)(a1 + 156))
                  {
LABEL_93:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 144), v62 + 1);
                    uint64_t v60 = *(int **)(a1 + 160);
                    int v62 = *v60;
                  }
                  int *v60 = v62 + 1;
                  uint64_t v63 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(*(void *)(a1 + 144));
                  uint64_t v64 = *(void *)(a1 + 160);
                  uint64_t v65 = *(int *)(a1 + 152);
                  *(_DWORD *)(a1 + 15sub_1000F9B58((void *)this + 2) = v65 + 1;
                  *(void *)(v64 + 8 * v65 + 8) = v63;
                  unint64_t v59 = v85;
                  goto LABEL_95;
                }
                *(_DWORD *)(a1 + 15sub_1000F9B58((void *)this + 2) = v61 + 1;
                uint64_t v63 = *(void *)&v60[2 * v61 + 2];
LABEL_95:
                unint64_t v58 = sub_1000E72C4(a3, v63, v59);
                int v85 = v58;
                if (!v58) {
                  return 0;
                }
                if (*(void *)a3 <= (unint64_t)v58 || *(unsigned char *)v58 != 66) {
                  goto LABEL_133;
                }
              }
              int v62 = *(_DWORD *)(a1 + 156);
              goto LABEL_93;
            case 9u:
              if (v7 != 74) {
                goto LABEL_125;
              }
              uint64_t v66 = (google::protobuf::internal *)((char *)v6 - 1);
              while (1)
              {
                int v67 = (google::protobuf::internal *)((char *)v66 + 1);
                int v85 = (google::protobuf::internal *)((char *)v66 + 1);
                int v68 = *(int **)(a1 + 184);
                if (!v68) {
                  break;
                }
                uint64_t v69 = *(int *)(a1 + 176);
                int v70 = *v68;
                if ((int)v69 >= *v68)
                {
                  if (v70 == *(_DWORD *)(a1 + 180))
                  {
LABEL_106:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 168), v70 + 1);
                    int v68 = *(int **)(a1 + 184);
                    int v70 = *v68;
                  }
                  *int v68 = v70 + 1;
                  uint64_t v71 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(*(void *)(a1 + 168));
                  uint64_t v72 = *(void *)(a1 + 184);
                  uint64_t v73 = *(int *)(a1 + 176);
                  *(_DWORD *)(a1 + 176) = v73 + 1;
                  *(void *)(v72 + 8 * v73 + 8) = v71;
                  int v67 = v85;
                  goto LABEL_108;
                }
                *(_DWORD *)(a1 + 176) = v69 + 1;
                uint64_t v71 = *(void *)&v68[2 * v69 + 2];
LABEL_108:
                uint64_t v66 = sub_1000E7394((uint64_t)a3, v71, v67);
                int v85 = v66;
                if (!v66) {
                  return 0;
                }
                if (*(void *)a3 <= (unint64_t)v66 || *(unsigned char *)v66 != 74) {
                  goto LABEL_133;
                }
              }
              int v70 = *(_DWORD *)(a1 + 180);
              goto LABEL_106;
            case 0xAu:
              if (v7 != 82) {
                goto LABEL_125;
              }
              v74 = (char *)v6 - 1;
              break;
            default:
LABEL_125:
              if (v7) {
                BOOL v82 = (v7 & 7) == 4;
              }
              else {
                BOOL v82 = 1;
              }
              if (v82)
              {
                a3[10].i32[0] = v7 - 1;
                return v85;
              }
              if (*v84)
              {
                std::string::size_type v83 = (google::protobuf::Arena **)((*v84 & 0xFFFFFFFFFFFFFFFELL) + 8);
              }
              else
              {
                std::string::size_type v83 = sub_10003562C(v84);
                int v6 = v85;
              }
              unint64_t v12 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v83, v6);
LABEL_132:
              int v85 = v12;
              if (!v12) {
                return 0;
              }
LABEL_133:
              if (sub_1000355B8((uint64_t)a3, &v85, a3[11].i32[1])) {
                return v85;
              }
              continue;
          }
          while (1)
          {
            BOOL v75 = v74 + 1;
            int v85 = (google::protobuf::internal *)(v74 + 1);
            char v76 = *(int **)(a1 + 208);
            if (!v76) {
              break;
            }
            uint64_t v77 = *(int *)(a1 + 200);
            int v78 = *v76;
            if ((int)v77 >= *v76)
            {
              if (v78 == *(_DWORD *)(a1 + 204))
              {
LABEL_119:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 192), v78 + 1);
                char v76 = *(int **)(a1 + 208);
                int v78 = *v76;
              }
              int *v76 = v78 + 1;
              long long v79 = (std::string *)sub_1000BBB38(*(google::protobuf::Arena **)(a1 + 192));
              uint64_t v80 = *(void *)(a1 + 208);
              uint64_t v81 = *(int *)(a1 + 200);
              *(_DWORD *)(a1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v81 + 1;
              *(void *)(v80 + 8 * v81 + 8) = v79;
              BOOL v75 = (std::string::value_type *)v85;
              goto LABEL_121;
            }
            *(_DWORD *)(a1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v77 + 1;
            long long v79 = *(std::string **)&v76[2 * v77 + 2];
LABEL_121:
            v74 = google::protobuf::internal::InlineGreedyStringParser(v79, v75, (uint64_t)a3);
            int v85 = (google::protobuf::internal *)v74;
            if (!v74) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v74 || *v74 != 82) {
              goto LABEL_133;
            }
          }
          int v78 = *(_DWORD *)(a1 + 204);
          goto LABEL_119;
        }
        int v6 = (google::protobuf::internal *)((char *)v85 + 2);
      }
      break;
    }
    int v85 = v6;
    goto LABEL_8;
  }
  return v85;
}

google::protobuf::internal *sub_1000E7124(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::DescriptorProto_ExtensionRange::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

google::protobuf::internal *sub_1000E71F4(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::MessageOptions::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

google::protobuf::internal *sub_1000E72C4(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::OneofDescriptorProto::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

google::protobuf::internal *sub_1000E7394(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::DescriptorProto_ReservedRange::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::DescriptorProto::_InternalSerialize(google::protobuf::DescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 27) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v9 = *(google::protobuf::FieldDescriptorProto **)(*((void *)this + 5) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          BOOL v11 = v4 + 3;
          do
          {
            *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - sub_1000333D0((uint64_t *)this + 1) = v13;
        }
        else
        {
          uint64_t v4[2] = v12;
          BOOL v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        BOOL v11 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::FieldDescriptorProto::_InternalSerialize(v9, v11, a3);
    }
  }
  int v15 = *((_DWORD *)this + 14);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v17 = *(google::protobuf::DescriptorProto **)(*((void *)this + 8) + 8 * j + 8);
      *uint64_t v4 = 26;
      unsigned int v18 = *((_DWORD *)v17 + 5);
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unsigned int v20 = v18 >> 7;
        if (v18 >> 14)
        {
          int v19 = v4 + 3;
          do
          {
            *(v19 - sub_1000333D0((uint64_t *)this + 1) = v20 | 0x80;
            unsigned int v21 = v20 >> 7;
            ++v19;
            unsigned int v22 = v20 >> 14;
            v20 >>= 7;
          }
          while (v22);
          *(v19 - sub_1000333D0((uint64_t *)this + 1) = v21;
        }
        else
        {
          uint64_t v4[2] = v20;
          int v19 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v18;
        int v19 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::DescriptorProto::_InternalSerialize(v17, v19, a3);
    }
  }
  int v23 = *((_DWORD *)this + 20);
  if (v23)
  {
    for (int k = 0; k != v23; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v25 = *(google::protobuf::EnumDescriptorProto **)(*((void *)this + 11) + 8 * k + 8);
      *uint64_t v4 = 34;
      unsigned int v26 = *((_DWORD *)v25 + 5);
      if (v26 > 0x7F)
      {
        v4[1] = v26 | 0x80;
        unsigned int v28 = v26 >> 7;
        if (v26 >> 14)
        {
          int v27 = v4 + 3;
          do
          {
            *(v27 - sub_1000333D0((uint64_t *)this + 1) = v28 | 0x80;
            unsigned int v29 = v28 >> 7;
            ++v27;
            unsigned int v30 = v28 >> 14;
            v28 >>= 7;
          }
          while (v30);
          *(v27 - sub_1000333D0((uint64_t *)this + 1) = v29;
        }
        else
        {
          uint64_t v4[2] = v28;
          int v27 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v26;
        int v27 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::EnumDescriptorProto::_InternalSerialize(v25, v27, a3);
    }
  }
  int v31 = *((_DWORD *)this + 26);
  if (v31)
  {
    for (int m = 0; m != v31; ++m)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v33 = *(google::protobuf::DescriptorProto_ExtensionRange **)(*((void *)this + 14) + 8 * m + 8);
      *uint64_t v4 = 42;
      unsigned int v34 = *((_DWORD *)v33 + 5);
      if (v34 > 0x7F)
      {
        v4[1] = v34 | 0x80;
        unsigned int v36 = v34 >> 7;
        if (v34 >> 14)
        {
          uint64_t v35 = v4 + 3;
          do
          {
            *(v35 - sub_1000333D0((uint64_t *)this + 1) = v36 | 0x80;
            unsigned int v37 = v36 >> 7;
            ++v35;
            unsigned int v38 = v36 >> 14;
            v36 >>= 7;
          }
          while (v38);
          *(v35 - sub_1000333D0((uint64_t *)this + 1) = v37;
        }
        else
        {
          uint64_t v4[2] = v36;
          uint64_t v35 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v34;
        uint64_t v35 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::DescriptorProto_ExtensionRange::_InternalSerialize(v33, v35, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
    }
  }
  int v39 = *((_DWORD *)this + 32);
  if (v39)
  {
    for (int n = 0; n != v39; ++n)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v41 = *(google::protobuf::FieldDescriptorProto **)(*((void *)this + 17) + 8 * n + 8);
      *uint64_t v4 = 50;
      unsigned int v42 = *((_DWORD *)v41 + 5);
      if (v42 > 0x7F)
      {
        v4[1] = v42 | 0x80;
        unsigned int v44 = v42 >> 7;
        if (v42 >> 14)
        {
          uint64_t v43 = v4 + 3;
          do
          {
            *(v43 - sub_1000333D0((uint64_t *)this + 1) = v44 | 0x80;
            unsigned int v45 = v44 >> 7;
            ++v43;
            unsigned int v46 = v44 >> 14;
            v44 >>= 7;
          }
          while (v46);
          *(v43 - sub_1000333D0((uint64_t *)this + 1) = v45;
        }
        else
        {
          uint64_t v4[2] = v44;
          uint64_t v43 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v42;
        uint64_t v43 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::FieldDescriptorProto::_InternalSerialize(v41, v43, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v47 = (google::protobuf::MessageOptions *)*((void *)this + 28);
    *uint64_t v4 = 58;
    unsigned int v48 = *((_DWORD *)v47 + 11);
    if (v48 > 0x7F)
    {
      v4[1] = v48 | 0x80;
      unsigned int v50 = v48 >> 7;
      if (v48 >> 14)
      {
        uint64_t v49 = v4 + 3;
        do
        {
          *(v49 - sub_1000333D0((uint64_t *)this + 1) = v50 | 0x80;
          unsigned int v51 = v50 >> 7;
          ++v49;
          unsigned int v52 = v50 >> 14;
          v50 >>= 7;
        }
        while (v52);
        *(v49 - sub_1000333D0((uint64_t *)this + 1) = v51;
      }
      else
      {
        uint64_t v4[2] = v50;
        uint64_t v49 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v48;
      uint64_t v49 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)google::protobuf::MessageOptions::_InternalSerialize(v47, v49, a3);
  }
  int v53 = *((_DWORD *)this + 38);
  if (v53)
  {
    for (iint i = 0; ii != v53; ++ii)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v55 = *(google::protobuf::OneofDescriptorProto **)(*((void *)this + 20) + 8 * ii + 8);
      *uint64_t v4 = 66;
      unsigned int v56 = *((_DWORD *)v55 + 5);
      if (v56 > 0x7F)
      {
        v4[1] = v56 | 0x80;
        unsigned int v58 = v56 >> 7;
        if (v56 >> 14)
        {
          unint64_t v57 = v4 + 3;
          do
          {
            *(v57 - sub_1000333D0((uint64_t *)this + 1) = v58 | 0x80;
            unsigned int v59 = v58 >> 7;
            ++v57;
            unsigned int v60 = v58 >> 14;
            v58 >>= 7;
          }
          while (v60);
          *(v57 - sub_1000333D0((uint64_t *)this + 1) = v59;
        }
        else
        {
          uint64_t v4[2] = v58;
          unint64_t v57 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v56;
        unint64_t v57 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::OneofDescriptorProto::_InternalSerialize(v55, v57, a3);
    }
  }
  int v61 = *((_DWORD *)this + 44);
  if (v61)
  {
    for (jint j = 0; jj != v61; ++jj)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v63 = *(google::protobuf::DescriptorProto_ReservedRange **)(*((void *)this + 23) + 8 * jj + 8);
      *uint64_t v4 = 74;
      unsigned int v64 = *((_DWORD *)v63 + 5);
      if (v64 > 0x7F)
      {
        v4[1] = v64 | 0x80;
        unsigned int v66 = v64 >> 7;
        if (v64 >> 14)
        {
          uint64_t v65 = v4 + 3;
          do
          {
            *(v65 - sub_1000333D0((uint64_t *)this + 1) = v66 | 0x80;
            unsigned int v67 = v66 >> 7;
            ++v65;
            unsigned int v68 = v66 >> 14;
            v66 >>= 7;
          }
          while (v68);
          *(v65 - sub_1000333D0((uint64_t *)this + 1) = v67;
        }
        else
        {
          uint64_t v4[2] = v66;
          uint64_t v65 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v64;
        uint64_t v65 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::DescriptorProto_ReservedRange::_InternalSerialize(v63, v65, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
    }
  }
  uint64_t v69 = *((unsigned int *)this + 50);
  if ((int)v69 >= 1)
  {
    uint64_t v70 = 0;
    uint64_t v71 = 8 * v69;
    do
    {
      uint64_t v4 = sub_1000E4244(a3, 10, *(void *)(*((void *)this + 26) + v70 + 8), v4);
      v70 += 8;
    }
    while (v71 != v70);
  }
  uint64_t v72 = *((void *)this + 1);
  if ((v72 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v72 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *google::protobuf::DescriptorProto::ByteSizeLong(google::protobuf::DescriptorProto *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (google::protobuf::FieldDescriptorProto **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      int v7 = google::protobuf::FieldDescriptorProto::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    BOOL v11 = (google::protobuf::DescriptorProto **)(v10 + 8);
  }
  else {
    BOOL v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      uint64_t v14 = google::protobuf::DescriptorProto::ByteSizeLong(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *((int *)this + 20);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *((void *)this + 11);
  if (v17) {
    unsigned int v18 = (google::protobuf::EnumDescriptorProto **)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      unsigned int v20 = *v18++;
      unsigned int v21 = google::protobuf::EnumDescriptorProto::ByteSizeLong(v20);
      v16 += (uint64_t)&v21[(9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6];
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *((int *)this + 26);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *((void *)this + 14);
  if (v24) {
    unint64_t v25 = (google::protobuf::DescriptorProto_ExtensionRange **)(v24 + 8);
  }
  else {
    unint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      int v27 = *v25++;
      unsigned int v28 = google::protobuf::DescriptorProto_ExtensionRange::ByteSizeLong(v27);
      v23 += (uint64_t)&v28[(9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6];
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *((int *)this + 32);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *((void *)this + 17);
  if (v31) {
    unint64_t v32 = (google::protobuf::FieldDescriptorProto **)(v31 + 8);
  }
  else {
    unint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      unsigned int v34 = *v32++;
      uint64_t v35 = google::protobuf::FieldDescriptorProto::ByteSizeLong(v34);
      v30 += (uint64_t)&v35[(9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6];
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *((int *)this + 38);
  uint64_t v37 = v30 + v36;
  uint64_t v38 = *((void *)this + 20);
  if (v38) {
    int v39 = (google::protobuf::OneofDescriptorProto **)(v38 + 8);
  }
  else {
    int v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      unint64_t v41 = *v39++;
      unsigned int v42 = google::protobuf::OneofDescriptorProto::ByteSizeLong(v41);
      v37 += (uint64_t)&v42[(9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6];
      v40 -= 8;
    }
    while (v40);
  }
  uint64_t v43 = *((int *)this + 44);
  uint64_t v44 = v37 + v43;
  uint64_t v45 = *((void *)this + 23);
  if (v45) {
    unsigned int v46 = (google::protobuf::DescriptorProto_ReservedRange **)(v45 + 8);
  }
  else {
    unsigned int v46 = 0;
  }
  if (v43)
  {
    uint64_t v47 = 8 * v43;
    do
    {
      unsigned int v48 = *v46++;
      uint64_t v49 = google::protobuf::DescriptorProto_ReservedRange::ByteSizeLong(v48);
      v44 += (uint64_t)&v49[(9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6];
      v47 -= 8;
    }
    while (v47);
  }
  uint64_t v50 = *((unsigned int *)this + 50);
  unsigned int v51 = (const google::protobuf::UnknownFieldSet *)(v44 + v50);
  if ((int)v50 >= 1)
  {
    unsigned int v52 = (uint64_t *)(*((void *)this + 26) + 8);
    do
    {
      uint64_t v53 = *v52++;
      uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
      uint64_t v55 = *(void *)(v53 + 8);
      if ((v54 & 0x80u) == 0) {
        uint64_t v55 = v54;
      }
      unsigned int v51 = (const google::protobuf::UnknownFieldSet *)((char *)v51 + v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6));
      --v50;
    }
    while (v50);
  }
  int v56 = *((_DWORD *)this + 4);
  if ((v56 & 3) != 0)
  {
    if (v56)
    {
      unint64_t v57 = *((void *)this + 27) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v58 = *(unsigned __int8 *)(v57 + 23);
      uint64_t v59 = *(void *)(v57 + 8);
      if ((v58 & 0x80u) == 0) {
        uint64_t v59 = v58;
      }
      unsigned int v51 = (const google::protobuf::UnknownFieldSet *)((char *)v51 + v59
                                                                    + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6)
                                                                    + 1);
    }
    if ((v56 & 2) != 0)
    {
      unsigned int v60 = google::protobuf::MessageOptions::ByteSizeLong(*((google::protobuf::MessageOptions **)this + 28));
      unsigned int v51 = (const google::protobuf::UnknownFieldSet *)&v60[((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v51];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::DescriptorProto *)((char *)this + 8), v51, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v51;
    return (char *)v51;
  }
}

void google::protobuf::DescriptorProto::MergeFrom(google::protobuf::DescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::DescriptorProto::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::DescriptorProto::MergeFrom(google::protobuf::DescriptorProto *this, const google::protobuf::DescriptorProto *a2)
{
  uint64_t v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    int v7 = (google::protobuf::FieldDescriptorProto **)(*((void *)a2 + 5) + 8);
    uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 24), *((_DWORD *)a2 + 8));
    sub_1000FA214((uint64_t *)this + 3, (google::protobuf::FieldDescriptorProto **)v8, v7, v6, **((_DWORD **)this + 5) - *((_DWORD *)this + 8));
    signed int v9 = *((_DWORD *)this + 8) + v6;
    *((_DWORD *)this + 8) = v9;
    uint64_t v10 = (signed int *)*((void *)this + 5);
    if (*v10 < v9) {
      signed int *v10 = v9;
    }
  }
  uint64_t v11 = *((unsigned int *)a2 + 14);
  if (v11)
  {
    uint64_t v12 = *((void *)a2 + 8) + 8;
    unsigned int v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 48), *((_DWORD *)a2 + 14));
    sub_1000F9FD4((char *)this + 48, v13, v12, v11, (**((_DWORD **)this + 8) - *((_DWORD *)this + 14)));
    int v14 = *((_DWORD *)this + 14) + v11;
    *((_DWORD *)this + 14) = v14;
    uint64_t v15 = (_DWORD *)*((void *)this + 8);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  unsigned int v16 = *((_DWORD *)a2 + 20);
  if (v16)
  {
    uint64_t v17 = (google::protobuf::EnumDescriptorProto **)(*((void *)a2 + 11) + 8);
    unsigned int v18 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 72), *((_DWORD *)a2 + 20));
    sub_1000FA094((uint64_t *)this + 9, (google::protobuf::EnumDescriptorProto **)v18, v17, v16, **((_DWORD **)this + 11) - *((_DWORD *)this + 20));
    signed int v19 = *((_DWORD *)this + 20) + v16;
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v19;
    unsigned int v20 = (signed int *)*((void *)this + 11);
    if (*v20 < v19) {
      *unsigned int v20 = v19;
    }
  }
  unsigned int v21 = *((_DWORD *)a2 + 26);
  if (v21)
  {
    uint64_t v22 = (google::protobuf::DescriptorProto_ExtensionRange **)(*((void *)a2 + 14) + 8);
    uint64_t v23 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 96), *((_DWORD *)a2 + 26));
    sub_1000FA3D4((uint64_t *)this + 12, (google::protobuf::DescriptorProto_ExtensionRange **)v23, v22, v21, **((_DWORD **)this + 14) - *((_DWORD *)this + 26));
    signed int v24 = *((_DWORD *)this + 26) + v21;
    *((_DWORD *)this + 26) = v24;
    unint64_t v25 = (signed int *)*((void *)this + 14);
    if (*v25 < v24) {
      *unint64_t v25 = v24;
    }
  }
  unsigned int v26 = *((_DWORD *)a2 + 32);
  if (v26)
  {
    int v27 = (google::protobuf::FieldDescriptorProto **)(*((void *)a2 + 17) + 8);
    unsigned int v28 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 120), *((_DWORD *)a2 + 32));
    sub_1000FA214((uint64_t *)this + 15, (google::protobuf::FieldDescriptorProto **)v28, v27, v26, **((_DWORD **)this + 17) - *((_DWORD *)this + 32));
    signed int v29 = *((_DWORD *)this + 32) + v26;
    *((_DWORD *)this + 3sub_1000F9B58((void *)this + 2) = v29;
    uint64_t v30 = (signed int *)*((void *)this + 17);
    if (*v30 < v29) {
      *uint64_t v30 = v29;
    }
  }
  unsigned int v31 = *((_DWORD *)a2 + 38);
  if (v31)
  {
    unint64_t v32 = (google::protobuf::OneofDescriptorProto **)(*((void *)a2 + 20) + 8);
    uint64_t v33 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 144), *((_DWORD *)a2 + 38));
    sub_1000FA494((uint64_t *)this + 18, (google::protobuf::OneofDescriptorProto **)v33, v32, v31, **((_DWORD **)this + 20) - *((_DWORD *)this + 38));
    signed int v34 = *((_DWORD *)this + 38) + v31;
    *((_DWORD *)this + 38) = v34;
    uint64_t v35 = (signed int *)*((void *)this + 20);
    if (*v35 < v34) {
      signed int *v35 = v34;
    }
  }
  unsigned int v36 = *((_DWORD *)a2 + 44);
  if (v36)
  {
    uint64_t v37 = (google::protobuf::DescriptorProto_ReservedRange **)(*((void *)a2 + 23) + 8);
    uint64_t v38 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 168), *((_DWORD *)a2 + 44));
    sub_1000FA554((void **)this + 21, (void ***)v38, v37, v36, **((_DWORD **)this + 23) - *((_DWORD *)this + 44));
    signed int v39 = *((_DWORD *)this + 44) + v36;
    *((_DWORD *)this + 44) = v39;
    uint64_t v40 = (signed int *)*((void *)this + 23);
    if (*v40 < v39) {
      *uint64_t v40 = v39;
    }
  }
  unsigned int v41 = *((_DWORD *)a2 + 50);
  if (v41)
  {
    unsigned int v42 = (const std::string **)(*((void *)a2 + 26) + 8);
    uint64_t v43 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::DescriptorProto *)((char *)this + 192), *((_DWORD *)a2 + 50));
    sub_1000F9F28((std::string *)this + 8, (std::string **)v43, v42, v41, **((_DWORD **)this + 26) - *((_DWORD *)this + 50));
    signed int v44 = *((_DWORD *)this + 50) + v41;
    *((_DWORD *)this + 5google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v44;
    uint64_t v45 = (signed int *)*((void *)this + 26);
    if (*v45 < v44) {
      *uint64_t v45 = v44;
    }
  }
  int v46 = *((_DWORD *)a2 + 4);
  if ((v46 & 3) != 0)
  {
    if (v46)
    {
      unint64_t v47 = *((void *)a2 + 27) & 0xFFFFFFFFFFFFFFFELL;
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v48 = *((void *)this + 1);
      uint64_t v49 = (google::protobuf::Arena *)(v48 & 0xFFFFFFFFFFFFFFFELL);
      if (v48) {
        uint64_t v49 = *(google::protobuf::Arena **)v49;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 27, v47, v49);
    }
    if ((v46 & 2) != 0)
    {
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v50 = (std::string *)*((void *)this + 28);
      if (!v50)
      {
        unsigned int v51 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v51 = (void *)*v51;
        }
        uint64_t v50 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(v51);
        *((void *)this + 28) = v50;
      }
      if (*((void *)a2 + 28)) {
        unsigned int v52 = (const google::protobuf::MessageOptions *)*((void *)a2 + 28);
      }
      else {
        unsigned int v52 = (const google::protobuf::MessageOptions *)&google::protobuf::_MessageOptions_default_instance_;
      }
      google::protobuf::MessageOptions::MergeFrom(v50, v52);
    }
  }
}

void google::protobuf::MessageOptions::MergeFrom(std::string *this, const google::protobuf::MessageOptions *a2)
{
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::internal::ExtensionSet *)&this->__r_.__value_.__r.__words[2], (const google::protobuf::MessageOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    unsigned int v6 = (google::protobuf::UninterpretedOption **)(*((void *)a2 + 8) + 8);
    int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&this[2], *((_DWORD *)a2 + 14));
    sub_1000FA694(this + 2, (std::string **)v7, v6, v5, *(_DWORD *)this[2].__r_.__value_.__r.__words[2] - LODWORD(this[2].__r_.__value_.__r.__words[1]));
    signed int v8 = LODWORD(this[2].__r_.__value_.__r.__words[1]) + v5;
    LODWORD(this[2].__r_.__value_.__r.__words[1]) = v8;
    signed int v9 = (signed int *)this[2].__r_.__value_.__r.__words[2];
    if (*v9 < v8) {
      *signed int v9 = v8;
    }
  }
  int v10 = *((_DWORD *)a2 + 10);
  if ((v10 & 0xF) != 0)
  {
    if (v10)
    {
      this[3].__r_.__value_.__s.__data_[0] = *((unsigned char *)a2 + 72);
      if ((v10 & 2) == 0)
      {
LABEL_9:
        if ((v10 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_16;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_9;
    }
    this[3].__r_.__value_.__s.__data_[1] = *((unsigned char *)a2 + 73);
    if ((v10 & 4) == 0)
    {
LABEL_10:
      if ((v10 & 8) == 0)
      {
LABEL_12:
        LODWORD(this[1].__r_.__value_.__r.__words[2]) |= v10;
        return;
      }
LABEL_11:
      this[3].__r_.__value_.__s.__data_[3] = *((unsigned char *)a2 + 75);
      goto LABEL_12;
    }
LABEL_16:
    this[3].__r_.__value_.__s.__data_[2] = *((unsigned char *)a2 + 74);
    if ((v10 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
}

void google::protobuf::DescriptorProto::CopyFrom(google::protobuf::DescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::DescriptorProto::Clear(this);
    google::protobuf::DescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::DescriptorProto::IsInitialized(google::protobuf::DescriptorProto *this)
{
  uint64_t v2 = *((unsigned int *)this + 8);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char IsInitialized = google::protobuf::FieldDescriptorProto::IsInitialized(*(google::protobuf::FieldDescriptorProto **)(*((void *)this + 5) + 8 * v2));
    uint64_t v2 = v3;
    if ((IsInitialized & 1) == 0) {
      return 0;
    }
  }
  uint64_t result = sub_1000E5170((uint64_t)this + 48);
  if (result)
  {
    uint64_t v6 = *((unsigned int *)this + 20);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = google::protobuf::EnumDescriptorProto::IsInitialized(*(google::protobuf::EnumDescriptorProto **)(*((void *)this + 11) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *((unsigned int *)this + 26);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = google::protobuf::DescriptorProto_ExtensionRange::IsInitialized(*(google::protobuf::DescriptorProto_ExtensionRange **)(*((void *)this + 14) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v12 = *((unsigned int *)this + 32);
    while ((int)v12 >= 1)
    {
      uint64_t v13 = v12 - 1;
      char v14 = google::protobuf::FieldDescriptorProto::IsInitialized(*(google::protobuf::FieldDescriptorProto **)(*((void *)this + 17) + 8 * v12));
      uint64_t v12 = v13;
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v15 = *((unsigned int *)this + 38);
    while ((int)v15 >= 1)
    {
      uint64_t v16 = v15 - 1;
      char v17 = google::protobuf::OneofDescriptorProto::IsInitialized(*(google::protobuf::OneofDescriptorProto **)(*((void *)this + 20) + 8 * v15));
      uint64_t result = 0;
      uint64_t v15 = v16;
      if ((v17 & 1) == 0) {
        return result;
      }
    }
    if ((*((unsigned char *)this + 16) & 2) == 0) {
      return 1;
    }
    uint64_t v18 = *((void *)this + 28);
    uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v18 + 16));
    if (result)
    {
      uint64_t result = sub_1000E8DC0(v18 + 48);
      if (result) {
        return 1;
      }
    }
  }
  return result;
}

uint64_t google::protobuf::MessageOptions::IsInitialized(google::protobuf::MessageOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::MessageOptions *)((char *)this + 16));
  if (result)
  {
    return sub_1000E8DC0((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::DescriptorProto::GetMetadata(google::protobuf::DescriptorProto *this)
{
  return off_1001EAAD0[8];
}

uint64_t google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CF788;
  *(void *)(a1 + 8) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet(a1 + 16, a2);
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  if (atomic_load_explicit(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return a1;
}

void sub_1000E86A0(_Unwind_Exception *a1)
{
  sub_1000FA614(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::ExtensionRangeOptions::~ExtensionRangeOptions(google::protobuf::ExtensionRangeOptions *this)
{
}

{
  uint64_t vars8;

  google::protobuf::ExtensionRangeOptions::~ExtensionRangeOptions(this);
  operator delete();
}

uint64_t google::protobuf::ExtensionRangeOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

void *google::protobuf::ExtensionRangeOptions::default_instance(google::protobuf::ExtensionRangeOptions *this)
{
  if (atomic_load_explicit(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ExtensionRangeOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_ExtensionRangeOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::ExtensionRangeOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v22 = a2;
  if ((sub_1000355B8((uint64_t)a3, &v22, a3[11].i32[1]) & 1) == 0)
  {
    unsigned int v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = (google::protobuf::internal *)((char *)v22 + 1);
      LODWORD(v7) = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      uint64_t v7 = (const char *)(v7 + (*(unsigned __int8 *)v6 << 7) - 128);
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, v7);
      uint64_t v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v6 = TagFallback;
LABEL_7:
      if (v7 == 7994)
      {
        char v11 = (google::protobuf::internal *)((char *)v6 - 2);
        while (1)
        {
          uint64_t v12 = (google::protobuf::internal *)((char *)v11 + 2);
          uint64_t v22 = (google::protobuf::internal *)((char *)v11 + 2);
          uint64_t v13 = *(int **)(a1 + 56);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 48);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 52))
            {
LABEL_20:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 40), v15 + 1);
              uint64_t v13 = *(int **)(a1 + 56);
              int v15 = *v13;
            }
            int *v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(void *)(a1 + 40));
            uint64_t v17 = *(void *)(a1 + 56);
            uint64_t v18 = *(int *)(a1 + 48);
            *(_DWORD *)(a1 + 48) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            uint64_t v12 = v22;
            goto LABEL_22;
          }
          *(_DWORD *)(a1 + 48) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_22:
          char v11 = sub_1000E89B0((uint64_t)a3, v16, v12);
          uint64_t v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(_WORD *)v11 != 16058) {
            goto LABEL_30;
          }
        }
        int v15 = *(_DWORD *)(a1 + 52);
        goto LABEL_20;
      }
      if (v7) {
        BOOL v8 = (v7 & 7) == 4;
      }
      else {
        BOOL v8 = 1;
      }
      if (v8)
      {
        a3[10].i32[0] = v7 - 1;
        return v22;
      }
      unint64_t v9 = v7;
      if (v7 >> 6 < 0x7D)
      {
        if (*v5)
        {
          signed int v19 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          signed int v19 = sub_10003562C((unint64_t *)(a1 + 8));
          uint64_t v6 = v22;
        }
        uint64_t v10 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v19, v6);
      }
      else
      {
        uint64_t v10 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v7, v6, (uint64_t)&google::protobuf::_ExtensionRangeOptions_default_instance_, (unint64_t *)(a1 + 8), a3);
      }
      uint64_t v22 = v10;
      if (!v10) {
        return 0;
      }
LABEL_30:
      if (sub_1000355B8((uint64_t)a3, &v22, a3[11].i32[1])) {
        return v22;
      }
    }
    uint64_t v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    uint64_t v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

google::protobuf::internal *sub_1000E89B0(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  unsigned int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::UninterpretedOption::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::ExtensionRangeOptions::_InternalSerialize(google::protobuf::ExtensionRangeOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6 = *((_DWORD *)this + 12);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v8 = *(google::protobuf::UninterpretedOption **)(*((void *)this + 7) + 8 * i + 8);
      *(_WORD *)a2 = 16058;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[2] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 4;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[3] = v11;
          int v10 = a2 + 4;
        }
      }
      else
      {
        a2[2] = v9;
        int v10 = a2 + 3;
      }
      a2 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v8, v10, a3);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::ExtensionRangeOptions *)((char *)this + 16), 1000, 0x20000000, a2, a3);
  uint64_t v16 = *((void *)this + 1);
  if (v16)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v16 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v15);
  }
  return result;
}

char *google::protobuf::ExtensionRangeOptions::ByteSizeLong(google::protobuf::ExtensionRangeOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::ExtensionRangeOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 12);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 7);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      unsigned int v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::ExtensionRangeOptions *)((char *)this + 8), v4, (_DWORD *)this + 16);
  }
  else
  {
    *((_DWORD *)this + 16) = v4;
    return (char *)v4;
  }
}

void google::protobuf::ExtensionRangeOptions::MergeFrom(google::protobuf::ExtensionRangeOptions *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::ExtensionRangeOptions::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::ExtensionRangeOptions::CopyFrom(google::protobuf::ExtensionRangeOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::ExtensionRangeOptions::Clear(this);
    google::protobuf::ExtensionRangeOptions::MergeFrom(this, a2);
  }
}

void google::protobuf::ExtensionRangeOptions::CopyFrom(google::protobuf::ExtensionRangeOptions *this, const google::protobuf::ExtensionRangeOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::ExtensionRangeOptions::Clear(this);
    google::protobuf::ExtensionRangeOptions::MergeFrom(this, a2);
  }
}

uint64_t sub_1000E8DC0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v2 = v1--;
      uint64_t v3 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v4 = *(unsigned int *)(v3 + 32);
      uint64_t v5 = *(void *)(v3 + 40);
      while ((int)v4 >= 1)
      {
        uint64_t v6 = *(void *)(v5 + 8 * v4--);
        if ((~*(_DWORD *)(v6 + 16) & 3) != 0) {
          return 0;
        }
      }
    }
    while (v2 >= 2);
  }
  return 1;
}

uint64_t google::protobuf::ExtensionRangeOptions::GetMetadata(google::protobuf::ExtensionRangeOptions *this)
{
  return off_1001EAAD0[10];
}

uint64_t google::protobuf::FieldDescriptorProto::FieldDescriptorProto(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CF838;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  if (atomic_load_explicit(scc_info_FieldDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FieldDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(void *)(a1 + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 3sub_1000F9B58((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 48) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 7sub_1000F9B58((void *)this + 2) = 0;
  *(void *)(a1 + 56) = &google::protobuf::internal::fixed_address_empty_string;
  *(unsigned char *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *(void *)(a1 + 84) = 0x100000001;
  return a1;
}

void google::protobuf::FieldDescriptorProto::~FieldDescriptorProto(google::protobuf::FieldDescriptorProto *this)
{
}

{
  uint64_t vars8;

  google::protobuf::FieldDescriptorProto::~FieldDescriptorProto(this);
  operator delete();
}

google::protobuf::FieldOptions *sub_1000E8F18(google::protobuf::FieldOptions *result)
{
  uint64_t v1 = *((void *)result + 3);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v2 = *((void *)result + 4);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = *((void *)result + 5);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v4 = *((void *)result + 6);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    operator delete();
  }
  uint64_t v5 = *((void *)result + 7);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    operator delete();
  }
  if (result != (google::protobuf::FieldOptions *)&google::protobuf::_FieldDescriptorProto_default_instance_)
  {
    uint64_t result = (google::protobuf::FieldOptions *)*((void *)result + 8);
    if (result)
    {
      google::protobuf::FieldOptions::~FieldOptions(result);
      operator delete();
    }
  }
  return result;
}

uint64_t google::protobuf::FieldDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::FieldDescriptorProto::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    unint64_t v5 = (unint64_t)this[3] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_21;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_25:
    unint64_t v7 = (unint64_t)this[5] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_29;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_33;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_21:
  unint64_t v6 = (unint64_t)this[4] & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_25;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_29:
  unint64_t v8 = (unint64_t)this[6] & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x10) != 0) {
      goto LABEL_33;
    }
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_33:
  unint64_t v9 = (unint64_t)this[7] & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v2 & 0x20) == 0) {
      goto LABEL_9;
    }
LABEL_8:
    this = google::protobuf::FieldOptions::Clear(this[8]);
    goto LABEL_9;
  }
  **(unsigned char **)unint64_t v9 = 0;
  *(void *)(v9 + 8) = 0;
  if ((v2 & 0x20) != 0) {
    goto LABEL_8;
  }
LABEL_9:
  if ((v2 & 0xC0) != 0) {
    *(void *)(v1 + 7sub_1000F9B58((void *)this + 2) = 0;
  }
  if ((v2 & 0x700) != 0)
  {
    *(unsigned char *)(v1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    *(void *)(v1 + 84) = 0x100000001;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_100035820((unint64_t *)v3);
  }
  return this;
}

google::protobuf::Arena **google::protobuf::FieldOptions::Clear(google::protobuf::FieldOptions *this)
{
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  uint64_t v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    char v4 = (google::protobuf::Arena ***)(*((void *)this + 8) + 8);
    do
    {
      unint64_t v5 = *v4++;
      uint64_t result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  if ((*((unsigned char *)this + 40) & 0x3F) != 0)
  {
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    *((void *)this + 9) = 0;
  }
  char v7 = *((unsigned char *)this + 8);
  unint64_t v6 = (char *)this + 8;
  *((_DWORD *)v6 + 8) = 0;
  if (v7)
  {
    return sub_100035820((unint64_t *)v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::FieldDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  unsigned int v52 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v52, a3[11].i32[1]) & 1) == 0)
  {
    char v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = (google::protobuf::internal *)((char *)v52 + 1);
      unsigned int v9 = *(unsigned __int8 *)v52;
      if (*(char *)v52 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v52, (const char *)(v10 - 128));
          unsigned int v52 = TagFallback;
          if (!TagFallback) {
            goto LABEL_98;
          }
          unint64_t v8 = TagFallback;
          unsigned int v9 = v15;
          goto LABEL_8;
        }
        unint64_t v8 = (google::protobuf::internal *)((char *)v52 + 2);
      }
      unsigned int v52 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_70;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          unsigned int v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
          if (v11) {
            unsigned int v12 = *(google::protobuf::Arena **)v12;
          }
          unsigned int v13 = (uint64_t **)(a1 + 24);
          goto LABEL_61;
        case 2u:
          if (v9 != 18) {
            goto LABEL_70;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v16 = *(void *)(a1 + 8);
          unsigned int v12 = (google::protobuf::Arena *)(v16 & 0xFFFFFFFFFFFFFFFELL);
          if (v16) {
            unsigned int v12 = *(google::protobuf::Arena **)v12;
          }
          unsigned int v13 = (uint64_t **)(a1 + 32);
          goto LABEL_61;
        case 3u:
          if (v9 != 24) {
            goto LABEL_70;
          }
          v5 |= 0x40u;
          uint64_t v18 = (google::protobuf::internal *)((char *)v8 + 1);
          LODWORD(v17) = *(unsigned __int8 *)v8;
          if ((v17 & 0x80) == 0) {
            goto LABEL_23;
          }
          int v19 = *(char *)v18;
          unint64_t v17 = v17 + (v19 << 7) - 128;
          if (v19 < 0)
          {
            unsigned int v42 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v17);
            unsigned int v52 = v42;
            *(_DWORD *)(a1 + 7sub_1000F9B58((void *)this + 2) = v43;
            if (!v42) {
              goto LABEL_98;
            }
          }
          else
          {
            uint64_t v18 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_23:
            unsigned int v52 = v18;
            *(_DWORD *)(a1 + 7sub_1000F9B58((void *)this + 2) = v17;
          }
          goto LABEL_63;
        case 4u:
          if (v9 != 32) {
            goto LABEL_70;
          }
          unsigned int v20 = (google::protobuf::internal *)((char *)v8 + 1);
          uint64_t v21 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_28;
          }
          int v22 = *(char *)v20;
          int v23 = v21 + (v22 << 7);
          uint64_t v21 = (v23 - 128);
          if (v22 < 0)
          {
            unsigned int v52 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, (v23 - 128));
            if (!v52) {
              goto LABEL_98;
            }
            uint64_t v21 = v44;
          }
          else
          {
            unsigned int v20 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_28:
            unsigned int v52 = v20;
          }
          if ((v21 - 1) <= 2)
          {
            *(_DWORD *)(a1 + 16) |= 0x200u;
            *(_DWORD *)(a1 + 84) = v21;
            goto LABEL_63;
          }
          if (*v7) {
            uint64_t v50 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else {
            uint64_t v50 = sub_10003562C((unint64_t *)(a1 + 8));
          }
          unsigned int v51 = 4;
          goto LABEL_93;
        case 5u:
          if (v9 != 40) {
            goto LABEL_70;
          }
          signed int v24 = (google::protobuf::internal *)((char *)v8 + 1);
          uint64_t v21 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_35;
          }
          int v25 = *(char *)v24;
          int v26 = v21 + (v25 << 7);
          uint64_t v21 = (v26 - 128);
          if (v25 < 0)
          {
            unsigned int v52 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, (v26 - 128));
            if (!v52) {
              goto LABEL_98;
            }
            uint64_t v21 = v45;
          }
          else
          {
            signed int v24 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_35:
            unsigned int v52 = v24;
          }
          if ((v21 - 1) > 0x11)
          {
            if (*v7) {
              uint64_t v50 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else {
              uint64_t v50 = sub_10003562C((unint64_t *)(a1 + 8));
            }
            unsigned int v51 = 5;
LABEL_93:
            google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v50, v51, v21);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x400u;
            *(_DWORD *)(a1 + 88) = v21;
          }
          goto LABEL_63;
        case 6u:
          if (v9 != 50) {
            goto LABEL_70;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v27 = *(void *)(a1 + 8);
          unsigned int v12 = (google::protobuf::Arena *)(v27 & 0xFFFFFFFFFFFFFFFELL);
          if (v27) {
            unsigned int v12 = *(google::protobuf::Arena **)v12;
          }
          unsigned int v13 = (uint64_t **)(a1 + 40);
          goto LABEL_61;
        case 7u:
          if (v9 != 58) {
            goto LABEL_70;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v28 = *(void *)(a1 + 8);
          unsigned int v12 = (google::protobuf::Arena *)(v28 & 0xFFFFFFFFFFFFFFFELL);
          if (v28) {
            unsigned int v12 = *(google::protobuf::Arena **)v12;
          }
          unsigned int v13 = (uint64_t **)(a1 + 48);
          goto LABEL_61;
        case 8u:
          if (v9 != 66) {
            goto LABEL_70;
          }
          *(_DWORD *)(a1 + 16) |= 0x20u;
          uint64_t v29 = *(void *)(a1 + 64);
          if (!v29)
          {
            uint64_t v30 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              uint64_t v30 = (void *)*v30;
            }
            uint64_t v29 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(v30);
            *(void *)(a1 + 64) = v29;
            unint64_t v8 = v52;
          }
          unsigned int v31 = sub_1000E9880(a3, v29, v8);
          goto LABEL_62;
        case 9u:
          if (v9 != 72) {
            goto LABEL_70;
          }
          v5 |= 0x80u;
          uint64_t v33 = (google::protobuf::internal *)((char *)v8 + 1);
          LODWORD(v3sub_1000F9B58((void *)this + 2) = *(unsigned __int8 *)v8;
          if ((v32 & 0x80) == 0) {
            goto LABEL_56;
          }
          int v34 = *(char *)v33;
          unint64_t v32 = v32 + (v34 << 7) - 128;
          if (v34 < 0)
          {
            int v46 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v32);
            unsigned int v52 = v46;
            *(_DWORD *)(a1 + 76) = v47;
            if (!v46) {
              goto LABEL_98;
            }
          }
          else
          {
            uint64_t v33 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_56:
            unsigned int v52 = v33;
            *(_DWORD *)(a1 + 76) = v32;
          }
          goto LABEL_63;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_70;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v35 = *(void *)(a1 + 8);
          unsigned int v12 = (google::protobuf::Arena *)(v35 & 0xFFFFFFFFFFFFFFFELL);
          if (v35) {
            unsigned int v12 = *(google::protobuf::Arena **)v12;
          }
          unsigned int v13 = (uint64_t **)(a1 + 56);
LABEL_61:
          unsigned int v36 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v13, v12);
          unsigned int v31 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v36, (std::string::value_type *)v52, (uint64_t)a3);
          goto LABEL_62;
        case 0x11u:
          if (v9 != 136) {
            goto LABEL_70;
          }
          v5 |= 0x100u;
          uint64_t v37 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v38 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_69;
          }
          int v39 = *(char *)v37;
          unint64_t v38 = v38 + (v39 << 7) - 128;
          if (v39 < 0)
          {
            uint64_t v48 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v38);
            unsigned int v52 = v48;
            *(unsigned char *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v49 != 0;
            if (!v48) {
              goto LABEL_98;
            }
          }
          else
          {
            uint64_t v37 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_69:
            unsigned int v52 = v37;
            *(unsigned char *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v38 != 0;
          }
          goto LABEL_63;
        default:
LABEL_70:
          if (v9) {
            BOOL v40 = (v9 & 7) == 4;
          }
          else {
            BOOL v40 = 1;
          }
          if (v40)
          {
            a3[10].i32[0] = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unsigned int v41 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v41 = sub_10003562C((unint64_t *)(a1 + 8));
            unint64_t v8 = v52;
          }
          unsigned int v31 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v41, v8);
LABEL_62:
          unsigned int v52 = v31;
          if (!v31)
          {
LABEL_98:
            unsigned int v52 = 0;
            goto LABEL_2;
          }
LABEL_63:
          if (sub_1000355B8((uint64_t)a3, &v52, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v52;
}

google::protobuf::internal *sub_1000E9880(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    unint64_t v6 = result;
  }
  else
  {
    unint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::FieldOptions::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FieldDescriptorProto::_InternalSerialize(google::protobuf::FieldDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    char v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x40) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v7 = *((int *)this + 18);
      *char v4 = 24;
      if (v7 > 0x7F)
      {
        v4[1] = v7 | 0x80;
        unint64_t v8 = v7 >> 7;
        if (v7 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
            unint64_t v9 = v8 >> 7;
            ++v4;
            unint64_t v10 = v8 >> 14;
            v8 >>= 7;
          }
          while (v10);
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v9;
          if ((v6 & 0x200) != 0) {
            goto LABEL_26;
          }
        }
        else
        {
          uint64_t v4[2] = v8;
          v4 += 3;
          if ((v6 & 0x200) != 0) {
            goto LABEL_26;
          }
        }
      }
      else
      {
        v4[1] = v7;
        v4 += 2;
        if ((v6 & 0x200) != 0) {
          goto LABEL_26;
        }
      }
LABEL_5:
      if ((v6 & 0x400) == 0) {
        goto LABEL_6;
      }
LABEL_37:
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v15 = *((int *)this + 22);
      *char v4 = 40;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        if (v15 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - sub_1000333D0((uint64_t *)this + 1) = v16 | 0x80;
            unint64_t v17 = v16 >> 7;
            ++v4;
            unint64_t v18 = v16 >> 14;
            v16 >>= 7;
          }
          while (v18);
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v17;
          if ((v6 & 4) != 0) {
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v4[2] = v16;
          v4 += 3;
          if ((v6 & 4) != 0) {
            goto LABEL_48;
          }
        }
      }
      else
      {
        v4[1] = v15;
        v4 += 2;
        if ((v6 & 4) != 0) {
          goto LABEL_48;
        }
      }
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_49;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_100034480(a3, 2, (const void **)(*((void *)this + 4) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) != 0) {
    goto LABEL_15;
  }
LABEL_4:
  if ((v6 & 0x200) == 0) {
    goto LABEL_5;
  }
LABEL_26:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v11 = *((int *)this + 21);
  *char v4 = 32;
  if (v11 > 0x7F)
  {
    v4[1] = v11 | 0x80;
    unint64_t v12 = v11 >> 7;
    if (v11 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        ++v4;
        unint64_t v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v13;
      if ((v6 & 0x400) != 0) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v4[2] = v12;
      v4 += 3;
      if ((v6 & 0x400) != 0) {
        goto LABEL_37;
      }
    }
  }
  else
  {
    v4[1] = v11;
    v4 += 2;
    if ((v6 & 0x400) != 0) {
      goto LABEL_37;
    }
  }
LABEL_6:
  if ((v6 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_48:
  char v4 = sub_100034480(a3, 6, (const void **)(*((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_8:
    if ((v6 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_50;
  }
LABEL_49:
  char v4 = sub_100034480(a3, 7, (const void **)(*((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 0x80) == 0) {
      goto LABEL_10;
    }
LABEL_60:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v25 = *((int *)this + 19);
    *char v4 = 72;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      if (v25 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v26 | 0x80;
          unint64_t v27 = v26 >> 7;
          ++v4;
          unint64_t v28 = v26 >> 14;
          v26 >>= 7;
        }
        while (v28);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v27;
        if ((v6 & 0x10) != 0) {
          goto LABEL_71;
        }
      }
      else
      {
        uint64_t v4[2] = v26;
        v4 += 3;
        if ((v6 & 0x10) != 0) {
          goto LABEL_71;
        }
      }
    }
    else
    {
      v4[1] = v25;
      v4 += 2;
      if ((v6 & 0x10) != 0) {
        goto LABEL_71;
      }
    }
LABEL_11:
    if ((v6 & 0x100) == 0) {
      goto LABEL_75;
    }
    goto LABEL_72;
  }
LABEL_50:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  int v19 = (google::protobuf::FieldOptions *)*((void *)this + 8);
  *char v4 = 66;
  unsigned int v20 = *((_DWORD *)v19 + 11);
  if (v20 > 0x7F)
  {
    v4[1] = v20 | 0x80;
    unsigned int v22 = v20 >> 7;
    if (v20 >> 14)
    {
      uint64_t v21 = v4 + 3;
      do
      {
        *(v21 - sub_1000333D0((uint64_t *)this + 1) = v22 | 0x80;
        unsigned int v23 = v22 >> 7;
        ++v21;
        unsigned int v24 = v22 >> 14;
        v22 >>= 7;
      }
      while (v24);
      *(v21 - sub_1000333D0((uint64_t *)this + 1) = v23;
    }
    else
    {
      uint64_t v4[2] = v22;
      uint64_t v21 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v20;
    uint64_t v21 = v4 + 2;
  }
  char v4 = (unsigned __int8 *)google::protobuf::FieldOptions::_InternalSerialize(v19, v21, a3);
  if ((v6 & 0x80) != 0) {
    goto LABEL_60;
  }
LABEL_10:
  if ((v6 & 0x10) == 0) {
    goto LABEL_11;
  }
LABEL_71:
  char v4 = sub_100034480(a3, 10, (const void **)(*((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0) {
    goto LABEL_75;
  }
LABEL_72:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v29 = *((unsigned char *)this + 80);
  *(_WORD *)char v4 = 392;
  uint64_t v4[2] = v29;
  v4 += 3;
LABEL_75:
  uint64_t v30 = *((void *)this + 1);
  if ((v30 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v30 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *google::protobuf::FieldDescriptorProto::ByteSizeLong(google::protobuf::FieldDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_37;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)(v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *((void *)this + 4) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1);
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v10 = *((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v13 = *((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  uint64_t v15 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    uint64_t v15 = v14;
  }
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_28;
  }
LABEL_25:
  unint64_t v16 = *((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_29;
  }
LABEL_28:
  int v19 = google::protobuf::FieldOptions::ByteSizeLong(*((google::protobuf::FieldOptions **)this + 8));
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)&v19[(void)v3
                                                     + 1
                                                     + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6)];
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
LABEL_29:
  int v20 = *((_DWORD *)this + 18);
  if (v20 < 0) {
    uint64_t v21 = 11;
  }
  else {
    uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v21);
  if ((v2 & 0x80) != 0)
  {
LABEL_33:
    int v22 = *((_DWORD *)this + 19);
    if (v22 < 0) {
      uint64_t v23 = 11;
    }
    else {
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v23);
  }
LABEL_37:
  if ((v2 & 0x700) != 0)
  {
    if ((v2 & 0x100) != 0) {
      uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + 3);
    }
    if ((v2 & 0x200) != 0)
    {
      int v24 = *((_DWORD *)this + 21);
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v24 >= 0) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 11;
      }
      uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v26);
    }
    if ((v2 & 0x400) != 0)
    {
      int v27 = *((_DWORD *)this + 22);
      uint64_t v28 = ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v27 >= 0) {
        uint64_t v29 = v28;
      }
      else {
        uint64_t v29 = 11;
      }
      uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v29);
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FieldDescriptorProto *)((char *)this + 8), v3, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v3;
    return (char *)v3;
  }
}

void google::protobuf::FieldDescriptorProto::MergeFrom(google::protobuf::FieldDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::FieldDescriptorProto::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::FieldDescriptorProto::MergeFrom(google::protobuf::FieldDescriptorProto *this, const google::protobuf::FieldDescriptorProto *a2)
{
  unint64_t v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v6)
  {
    if (v6)
    {
      unint64_t v7 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = *((void *)this + 1);
      uint64_t v9 = (google::protobuf::Arena *)(v8 & 0xFFFFFFFFFFFFFFFELL);
      if (v8) {
        uint64_t v9 = *(google::protobuf::Arena **)v9;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 3, v7, v9);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_27;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_6;
    }
    unint64_t v10 = *((void *)a2 + 4) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 4) |= 2u;
    uint64_t v11 = *((void *)this + 1);
    uint64_t v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
    if (v11) {
      uint64_t v12 = *(google::protobuf::Arena **)v12;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 4, v10, v12);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_30;
    }
LABEL_27:
    unint64_t v13 = *((void *)a2 + 5) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 4) |= 4u;
    uint64_t v14 = *((void *)this + 1);
    uint64_t v15 = (google::protobuf::Arena *)(v14 & 0xFFFFFFFFFFFFFFFELL);
    if (v14) {
      uint64_t v15 = *(google::protobuf::Arena **)v15;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 5, v13, v15);
    if ((v6 & 8) == 0)
    {
LABEL_8:
      if ((v6 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_33;
    }
LABEL_30:
    unint64_t v16 = *((void *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 4) |= 8u;
    uint64_t v17 = *((void *)this + 1);
    uint64_t v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
    if (v17) {
      uint64_t v18 = *(google::protobuf::Arena **)v18;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 6, v16, v18);
    if ((v6 & 0x10) == 0)
    {
LABEL_9:
      if ((v6 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_36;
    }
LABEL_33:
    unint64_t v19 = *((void *)a2 + 7) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 4) |= 0x10u;
    uint64_t v20 = *((void *)this + 1);
    uint64_t v21 = (google::protobuf::Arena *)(v20 & 0xFFFFFFFFFFFFFFFELL);
    if (v20) {
      uint64_t v21 = *(google::protobuf::Arena **)v21;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 7, v19, v21);
    if ((v6 & 0x20) == 0)
    {
LABEL_10:
      if ((v6 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_44;
    }
LABEL_36:
    *((_DWORD *)this + 4) |= 0x20u;
    int v22 = (std::string *)*((void *)this + 8);
    if (!v22)
    {
      uint64_t v23 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        uint64_t v23 = (void *)*v23;
      }
      int v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(v23);
      *((void *)this + 8) = v22;
    }
    if (*((void *)a2 + 8)) {
      int v24 = (const google::protobuf::FieldOptions *)*((void *)a2 + 8);
    }
    else {
      int v24 = (const google::protobuf::FieldOptions *)&google::protobuf::_FieldOptions_default_instance_;
    }
    google::protobuf::FieldOptions::MergeFrom(v22, v24);
    if ((v6 & 0x40) == 0)
    {
LABEL_11:
      if ((v6 & 0x80) == 0)
      {
LABEL_13:
        *((_DWORD *)this + 4) |= v6;
        goto LABEL_14;
      }
LABEL_12:
      *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
      goto LABEL_13;
    }
LABEL_44:
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    if ((v6 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  if ((v6 & 0x700) == 0) {
    return;
  }
  if ((v6 & 0x100) == 0)
  {
    if ((v6 & 0x200) == 0) {
      goto LABEL_17;
    }
LABEL_47:
    *((_DWORD *)this + 2sub_1000333D0((uint64_t *)this + 1) = *((_DWORD *)a2 + 21);
    if ((v6 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  *((unsigned char *)this + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = *((unsigned char *)a2 + 80);
  if ((v6 & 0x200) != 0) {
    goto LABEL_47;
  }
LABEL_17:
  if ((v6 & 0x400) != 0) {
LABEL_18:
  }
    *((_DWORD *)this + 2sub_1000F9B58((void *)this + 2) = *((_DWORD *)a2 + 22);
LABEL_19:
  *((_DWORD *)this + 4) |= v6;
}

void google::protobuf::FieldOptions::MergeFrom(std::string *this, const google::protobuf::FieldOptions *a2)
{
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::internal::ExtensionSet *)&this->__r_.__value_.__r.__words[2], (const google::protobuf::FieldOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    int v6 = (google::protobuf::UninterpretedOption **)(*((void *)a2 + 8) + 8);
    unint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&this[2], *((_DWORD *)a2 + 14));
    sub_1000FA694(this + 2, (std::string **)v7, v6, v5, *(_DWORD *)this[2].__r_.__value_.__r.__words[2] - LODWORD(this[2].__r_.__value_.__r.__words[1]));
    signed int v8 = LODWORD(this[2].__r_.__value_.__r.__words[1]) + v5;
    LODWORD(this[2].__r_.__value_.__r.__words[1]) = v8;
    uint64_t v9 = (signed int *)this[2].__r_.__value_.__r.__words[2];
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  int v10 = *((_DWORD *)a2 + 10);
  if ((v10 & 0x3F) != 0)
  {
    if (v10)
    {
      LODWORD(this[3].__r_.__value_.__l.__data_) = *((_DWORD *)a2 + 18);
      if ((v10 & 2) == 0)
      {
LABEL_9:
        if ((v10 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_18;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_9;
    }
    this[3].__r_.__value_.__s.__data_[4] = *((unsigned char *)a2 + 76);
    if ((v10 & 4) == 0)
    {
LABEL_10:
      if ((v10 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
LABEL_18:
    this[3].__r_.__value_.__s.__data_[5] = *((unsigned char *)a2 + 77);
    if ((v10 & 8) == 0)
    {
LABEL_11:
      if ((v10 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_20;
    }
LABEL_19:
    this[3].__r_.__value_.__s.__data_[6] = *((unsigned char *)a2 + 78);
    if ((v10 & 0x10) == 0)
    {
LABEL_12:
      if ((v10 & 0x20) == 0)
      {
LABEL_14:
        LODWORD(this[1].__r_.__value_.__r.__words[2]) |= v10;
        return;
      }
LABEL_13:
      LODWORD(this[3].__r_.__value_.__r.__words[1]) = *((_DWORD *)a2 + 20);
      goto LABEL_14;
    }
LABEL_20:
    this[3].__r_.__value_.__s.__data_[7] = *((unsigned char *)a2 + 79);
    if ((v10 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
}

void google::protobuf::FieldDescriptorProto::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    google::protobuf::FieldDescriptorProto::Clear(this);
    google::protobuf::FieldDescriptorProto::MergeFrom((google::protobuf::FieldDescriptorProto *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t google::protobuf::FieldDescriptorProto::IsInitialized(google::protobuf::FieldDescriptorProto *this)
{
  if ((*((unsigned char *)this + 16) & 0x20) == 0) {
    return 1;
  }
  uint64_t v1 = *((void *)this + 8);
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v1 + 16));
  if (result)
  {
    uint64_t result = sub_1000E8DC0(v1 + 48);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t google::protobuf::FieldOptions::IsInitialized(google::protobuf::FieldOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::FieldOptions *)((char *)this + 16));
  if (result)
  {
    return sub_1000E8DC0((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::FieldDescriptorProto::GetMetadata(google::protobuf::FieldDescriptorProto *this)
{
  return off_1001EAAD0[12];
}

void *google::protobuf::OneofDescriptorProto::OneofDescriptorProto(void *a1, uint64_t a2)
{
  *a1 = off_1001CF8E8;
  a1[1] = a2;
  a1[2] = 0;
  if (atomic_load_explicit(scc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_OneofDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  a1[3] = &google::protobuf::internal::fixed_address_empty_string;
  a1[4] = 0;
  return a1;
}

void google::protobuf::OneofDescriptorProto::~OneofDescriptorProto(google::protobuf::OneofDescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if (this != (google::protobuf::OneofDescriptorProto *)google::protobuf::_OneofDescriptorProto_default_instance_)
  {
    uint64_t v3 = (google::protobuf::OneofOptions *)*((void *)this + 4);
    if (v3)
    {
      google::protobuf::OneofOptions::~OneofOptions(v3);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  google::protobuf::OneofDescriptorProto::~OneofDescriptorProto(this);
  operator delete();
}

uint64_t google::protobuf::OneofDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::OneofDescriptorProto::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = (unint64_t)this[3] & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      this = google::protobuf::OneofOptions::Clear(this[4]);
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_100035820((unint64_t *)v4);
  }
  return this;
}

google::protobuf::Arena **google::protobuf::OneofOptions::Clear(google::protobuf::OneofOptions *this)
{
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  uint64_t v3 = *((unsigned int *)this + 12);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (google::protobuf::Arena ***)(*((void *)this + 7) + 8);
    do
    {
      char v5 = *v4++;
      uint64_t result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 1sub_1000F9B58((void *)this + 2) = 0;
  }
  char v7 = *((unsigned char *)this + 8);
  int v6 = (unint64_t *)((char *)this + 8);
  if (v7)
  {
    return sub_100035820(v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::OneofDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v21 = a2;
  if ((sub_1000355B8((uint64_t)a3, &v21, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      char v7 = (google::protobuf::internal *)((char *)v21 + 1);
      unsigned int v8 = *(unsigned __int8 *)v21;
      if ((*(char *)v21 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v21, (const char *)(v9 - 128));
      uint64_t v21 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v7 = TagFallback;
      unsigned int v8 = v20;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v14 = *(void *)(a1 + 32);
          if (!v14)
          {
            uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
            if (*v6) {
              uint64_t v15 = (void *)*v15;
            }
            uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(v15);
            *(void *)(a1 + 3sub_1000F9B58((void *)this + 2) = v14;
            char v7 = v21;
          }
          unint64_t v13 = sub_1000EA9D0(a3, v14, v7);
          goto LABEL_29;
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (google::protobuf::Arena *)(v16 & 0xFFFFFFFFFFFFFFFELL);
        if (v16) {
          uint64_t v17 = *(google::protobuf::Arena **)v17;
        }
        uint64_t v18 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 24), v17);
        unint64_t v13 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v18, (std::string::value_type *)v21, (uint64_t)a3);
        goto LABEL_29;
      }
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        a3[10].i32[0] = v8 - 1;
        return v21;
      }
      if (*v6)
      {
        uint64_t v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        uint64_t v12 = sub_10003562C((unint64_t *)(a1 + 8));
        char v7 = v21;
      }
      unint64_t v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
LABEL_29:
      uint64_t v21 = v13;
      if (!v13) {
        return 0;
      }
      if (sub_1000355B8((uint64_t)a3, &v21, a3[11].i32[1])) {
        return v21;
      }
    }
    char v7 = (google::protobuf::internal *)((char *)v21 + 2);
LABEL_7:
    uint64_t v21 = v7;
    goto LABEL_8;
  }
  return v21;
}

google::protobuf::internal *sub_1000EA9D0(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  char v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::OneofOptions::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::OneofDescriptorProto::_InternalSerialize(google::protobuf::OneofDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    char v7 = (google::protobuf::OneofOptions *)*((void *)this + 4);
    *uint64_t v4 = 18;
    unsigned int v8 = *((_DWORD *)v7 + 16);
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        int v9 = v4 + 3;
        do
        {
          *(v9 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
          unsigned int v11 = v10 >> 7;
          ++v9;
          unsigned int v12 = v10 >> 14;
          v10 >>= 7;
        }
        while (v12);
        *(v9 - sub_1000333D0((uint64_t *)this + 1) = v11;
      }
      else
      {
        uint64_t v4[2] = v10;
        int v9 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v8;
      int v9 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)google::protobuf::OneofOptions::_InternalSerialize(v7, v9, a3);
  }
  uint64_t v13 = *((void *)this + 1);
  if ((v13 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v13 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *google::protobuf::OneofDescriptorProto::ByteSizeLong(google::protobuf::OneofDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    char v7 = google::protobuf::OneofOptions::ByteSizeLong(*((google::protobuf::OneofOptions **)this + 4));
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)&v7[(void)v3
                                                      + 1
                                                      + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6)];
    goto LABEL_10;
  }
  unint64_t v4 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)(v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::OneofDescriptorProto *)((char *)this + 8), v3, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v3;
    return (char *)v3;
  }
}

void google::protobuf::OneofDescriptorProto::MergeFrom(google::protobuf::OneofDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::OneofDescriptorProto::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::OneofDescriptorProto::MergeFrom(google::protobuf::OneofDescriptorProto *this, const google::protobuf::OneofDescriptorProto *a2)
{
  unint64_t v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      unint64_t v7 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = *((void *)this + 1);
      int v9 = (google::protobuf::Arena *)(v8 & 0xFFFFFFFFFFFFFFFELL);
      if (v8) {
        int v9 = *(google::protobuf::Arena **)v9;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 3, v7, v9);
    }
    if ((v6 & 2) != 0)
    {
      *((_DWORD *)this + 4) |= 2u;
      unsigned int v10 = (google::protobuf::OneofOptions *)*((void *)this + 4);
      if (!v10)
      {
        unsigned int v11 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v11 = (void *)*v11;
        }
        unsigned int v10 = (google::protobuf::OneofOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(v11);
        *((void *)this + 4) = v10;
      }
      if (*((void *)a2 + 4)) {
        unsigned int v12 = (const google::protobuf::OneofOptions *)*((void *)a2 + 4);
      }
      else {
        unsigned int v12 = (const google::protobuf::OneofOptions *)&google::protobuf::_OneofOptions_default_instance_;
      }
      google::protobuf::OneofOptions::MergeFrom(v10, v12);
    }
  }
}

void google::protobuf::OneofOptions::MergeFrom(google::protobuf::OneofOptions *this, const google::protobuf::OneofOptions *a2)
{
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::OneofOptions *)((char *)this + 16), (const google::protobuf::OneofOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 12);
  if (v5)
  {
    int v6 = (google::protobuf::UninterpretedOption **)(*((void *)a2 + 7) + 8);
    unint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::OneofOptions *)((char *)this + 40), v5);
    sub_1000FA694((std::string *)((char *)this + 40), (std::string **)v7, v6, v5, **((_DWORD **)this + 7) - *((_DWORD *)this + 12));
    signed int v8 = *((_DWORD *)this + 12) + v5;
    *((_DWORD *)this + 1sub_1000F9B58((void *)this + 2) = v8;
    int v9 = (signed int *)*((void *)this + 7);
    if (*v9 < v8) {
      *int v9 = v8;
    }
  }
}

void google::protobuf::OneofDescriptorProto::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    google::protobuf::OneofDescriptorProto::Clear(this);
    google::protobuf::OneofDescriptorProto::MergeFrom((google::protobuf::OneofDescriptorProto *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t google::protobuf::OneofDescriptorProto::IsInitialized(google::protobuf::OneofDescriptorProto *this)
{
  if ((*((unsigned char *)this + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v1 = *((void *)this + 4);
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v1 + 16));
  if (result)
  {
    uint64_t result = sub_1000E8DC0(v1 + 40);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t google::protobuf::OneofOptions::IsInitialized(google::protobuf::OneofOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::OneofOptions *)((char *)this + 16));
  if (result)
  {
    return sub_1000E8DC0((uint64_t)this + 40);
  }
  return result;
}

uint64_t google::protobuf::OneofDescriptorProto::GetMetadata(google::protobuf::OneofDescriptorProto *this)
{
  return off_1001EAAD0[14];
}

void google::protobuf::EnumDescriptorProto_EnumReservedRange::~EnumDescriptorProto_EnumReservedRange(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::EnumDescriptorProto_EnumReservedRange::Clear(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  if ((*((unsigned char *)this + 16) & 3) != 0) {
    *((void *)this + 3) = 0;
  }
  char v2 = *((unsigned char *)this + 8);
  uint64_t result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_1000F9B58((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v26 + 1);
      unsigned int v9 = *(unsigned __int8 *)v26;
      if ((*(char *)v26 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v26, (const char *)(v10 - 128));
      uint64_t v26 = TagFallback;
      if (!TagFallback) {
        goto LABEL_40;
      }
      signed int v8 = TagFallback;
      unsigned int v9 = v21;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 16) {
          goto LABEL_13;
        }
        v5 |= 2u;
        uint64_t v15 = (google::protobuf::internal *)((char *)v8 + 1);
        LODWORD(v14) = *(unsigned __int8 *)v8;
        if ((v14 & 0x80) == 0) {
          goto LABEL_25;
        }
        int v16 = *(char *)v15;
        unint64_t v14 = v14 + (v16 << 7) - 128;
        if ((v16 & 0x80000000) == 0)
        {
          uint64_t v15 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_25:
          uint64_t v26 = v15;
          *(_DWORD *)(a1 + 28) = v14;
          goto LABEL_30;
        }
        int v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v14);
        uint64_t v26 = v22;
        *(_DWORD *)(a1 + 28) = v23;
        if (!v22) {
          goto LABEL_40;
        }
      }
      else
      {
        if (v9 >> 3 != 1 || v9 != 8)
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            uint64_t v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            uint64_t v13 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v26;
          }
          uint64_t v26 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
          if (!v26)
          {
LABEL_40:
            uint64_t v26 = 0;
            goto LABEL_2;
          }
          goto LABEL_30;
        }
        v5 |= 1u;
        uint64_t v18 = (google::protobuf::internal *)((char *)v8 + 1);
        LODWORD(v17) = *(unsigned __int8 *)v8;
        if ((v17 & 0x80) == 0) {
          goto LABEL_29;
        }
        int v19 = *(char *)v18;
        unint64_t v17 = v17 + (v19 << 7) - 128;
        if ((v19 & 0x80000000) == 0)
        {
          uint64_t v18 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_29:
          uint64_t v26 = v18;
          *(_DWORD *)(a1 + 24) = v17;
          goto LABEL_30;
        }
        int v24 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v17);
        uint64_t v26 = v24;
        *(_DWORD *)(a1 + 24) = v25;
        if (!v24) {
          goto LABEL_40;
        }
      }
LABEL_30:
      if (sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    signed int v8 = (google::protobuf::internal *)((char *)v26 + 2);
LABEL_7:
    uint64_t v26 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalSerialize(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((int *)this + 6);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unint64_t v11 = v8 >> 7;
        ++a2;
        unint64_t v12 = v8 >> 14;
        v8 >>= 7;
      }
      while (v12);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v11;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_23;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v9 = *((int *)this + 7);
  *a2 = 16;
  if (v9 > 0x7F)
  {
    a2[1] = v9 | 0x80;
    unint64_t v10 = v9 >> 7;
    if (v9 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
        unint64_t v13 = v10 >> 7;
        ++a2;
        unint64_t v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      a2[2] = v10;
      a2 += 3;
    }
  }
  else
  {
    a2[1] = v9;
    a2 += 2;
  }
LABEL_23:
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::EnumDescriptorProto_EnumReservedRange::ByteSizeLong(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *((_DWORD *)this + 6);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *((_DWORD *)this + 7);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumDescriptorProto_EnumReservedRange *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v2;
  return (char *)v2;
}

void google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(void **this, const google::protobuf::EnumDescriptorProto_EnumReservedRange *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      *((_DWORD *)v3 + 6) = *((_DWORD *)a2 + 6);
    }
    if ((v5 & 2) != 0) {
      *((_DWORD *)v3 + 7) = *((_DWORD *)a2 + 7);
    }
    *((_DWORD *)v3 + 4) |= v5;
  }
  return this;
}

void google::protobuf::EnumDescriptorProto_EnumReservedRange::CopyFrom(google::protobuf::EnumDescriptorProto_EnumReservedRange *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::EnumDescriptorProto_EnumReservedRange::Clear(this);
    google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom((void **)this, a2);
  }
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::IsInitialized(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  return 1;
}

uint64_t google::protobuf::EnumDescriptorProto_EnumReservedRange::GetMetadata(google::protobuf::EnumDescriptorProto_EnumReservedRange *this)
{
  return off_1001EAAD0[16];
}

void *google::protobuf::EnumDescriptorProto::EnumDescriptorProto(void *a1, uint64_t a2)
{
  *a1 = off_1001CFA48;
  a1[1] = a2;
  a1[2] = 0;
  a1[3] = a2;
  a1[4] = 0;
  a1[5] = 0;
  a1[6] = a2;
  a1[9] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[10] = 0;
  a1[11] = 0;
  if (atomic_load_explicit(scc_info_EnumDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  a1[12] = &google::protobuf::internal::fixed_address_empty_string;
  a1[13] = 0;
  return a1;
}

void sub_1000EB704(_Unwind_Exception *a1)
{
  sub_1000F9C98(v3);
  sub_1000719B4(v2);
  sub_1000FA754(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumDescriptorProto::~EnumDescriptorProto(google::protobuf::EnumDescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 12);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if (this != (google::protobuf::EnumDescriptorProto *)google::protobuf::_EnumDescriptorProto_default_instance_)
  {
    int v3 = (google::protobuf::EnumOptions *)*((void *)this + 13);
    if (v3)
    {
      google::protobuf::EnumOptions::~EnumOptions(v3);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_1000F9C98((void *)this + 9);
  sub_1000719B4((void *)this + 6);
  sub_1000FA754((void *)this + 3);
}

{
  uint64_t vars8;

  google::protobuf::EnumDescriptorProto::~EnumDescriptorProto(this);
  operator delete();
}

uint64_t google::protobuf::EnumDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::EnumDescriptorProto::Clear(google::protobuf::EnumDescriptorProto *this)
{
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    int v3 = (google::protobuf::Arena ***)(*((void *)this + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      google::protobuf::EnumValueDescriptorProto::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 8) = 0;
  }
  uint64_t v5 = *((unsigned int *)this + 14);
  if ((int)v5 >= 1)
  {
    int v6 = (google::protobuf::EnumDescriptorProto_EnumReservedRange **)(*((void *)this + 8) + 8);
    do
    {
      unint64_t v7 = *v6++;
      google::protobuf::EnumDescriptorProto_EnumReservedRange::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 14) = 0;
  }
  uint64_t result = (google::protobuf::Arena **)sub_1000F9B0C((uint64_t)this + 72);
  int v9 = *((_DWORD *)this + 4);
  if ((v9 & 3) != 0)
  {
    if ((v9 & 1) == 0) {
      goto LABEL_13;
    }
    unint64_t v10 = *((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v10 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
LABEL_13:
      if ((v9 & 2) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    **(unsigned char **)unint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
    if ((v9 & 2) != 0) {
LABEL_14:
    }
      uint64_t result = google::protobuf::EnumOptions::Clear(*((google::protobuf::EnumOptions **)this + 13));
  }
LABEL_15:
  char v12 = *((unsigned char *)this + 8);
  unint64_t v11 = (char *)this + 8;
  *((_DWORD *)v11 + sub_1000F9B58((void *)this + 2) = 0;
  if (v12)
  {
    return sub_100035820((unint64_t *)v11);
  }
  return result;
}

google::protobuf::Arena **google::protobuf::EnumOptions::Clear(google::protobuf::EnumOptions *this)
{
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  uint64_t v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (google::protobuf::Arena ***)(*((void *)this + 8) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  char v7 = *((unsigned char *)this + 8);
  int v6 = (char *)this + 8;
  *((_WORD *)v6 + 3sub_1000F9B58((void *)this + 2) = 0;
  *((_DWORD *)v6 + 8) = 0;
  if (v7)
  {
    return sub_100035820((unint64_t *)v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::EnumDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v44 = a2;
  if ((sub_1000355B8((uint64_t)a3, &v44, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (2)
    {
      char v7 = (google::protobuf::internal *)((char *)v44 + 1);
      unsigned int v8 = *(unsigned __int8 *)v44;
      if (*(char *)v44 < 0)
      {
        unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*(char *)v7 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v44, (const char *)(v9 - 128));
          uint64_t v44 = TagFallback;
          if (!TagFallback) {
            return 0;
          }
          char v7 = TagFallback;
          unsigned int v8 = v43;
LABEL_8:
          switch(v8 >> 3)
          {
            case 1u:
              if (v8 != 10) {
                goto LABEL_58;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v10 = *(void *)(a1 + 8);
              unint64_t v11 = (google::protobuf::Arena *)(v10 & 0xFFFFFFFFFFFFFFFELL);
              if (v10) {
                unint64_t v11 = *(google::protobuf::Arena **)v11;
              }
              char v12 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 96), v11);
              unint64_t v13 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v12, (std::string::value_type *)v44, (uint64_t)a3);
              goto LABEL_65;
            case 2u:
              if (v8 != 18) {
                goto LABEL_58;
              }
              unint64_t v14 = (google::protobuf::internal *)((char *)v7 - 1);
              while (1)
              {
                uint64_t v15 = (google::protobuf::internal *)((char *)v14 + 1);
                uint64_t v44 = (google::protobuf::internal *)((char *)v14 + 1);
                int v16 = *(int **)(a1 + 40);
                if (!v16) {
                  break;
                }
                uint64_t v17 = *(int *)(a1 + 32);
                int v18 = *v16;
                if ((int)v17 >= *v16)
                {
                  if (v18 == *(_DWORD *)(a1 + 36))
                  {
LABEL_20:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v18 + 1);
                    int v16 = *(int **)(a1 + 40);
                    int v18 = *v16;
                  }
                  int *v16 = v18 + 1;
                  uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(*(void *)(a1 + 24));
                  uint64_t v20 = *(void *)(a1 + 40);
                  uint64_t v21 = *(int *)(a1 + 32);
                  *(_DWORD *)(a1 + 3sub_1000F9B58((void *)this + 2) = v21 + 1;
                  *(void *)(v20 + 8 * v21 + 8) = v19;
                  uint64_t v15 = v44;
                  goto LABEL_22;
                }
                *(_DWORD *)(a1 + 3sub_1000F9B58((void *)this + 2) = v17 + 1;
                uint64_t v19 = *(void *)&v16[2 * v17 + 2];
LABEL_22:
                unint64_t v14 = sub_1000EBE1C(a3, v19, v15);
                uint64_t v44 = v14;
                if (!v14) {
                  return 0;
                }
                if (*(void *)a3 <= (unint64_t)v14 || *(unsigned char *)v14 != 18) {
                  goto LABEL_66;
                }
              }
              int v18 = *(_DWORD *)(a1 + 36);
              goto LABEL_20;
            case 3u:
              if (v8 != 26) {
                goto LABEL_58;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v22 = *(void *)(a1 + 104);
              if (!v22)
              {
                int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
                if (*v6) {
                  int v23 = (void *)*v23;
                }
                uint64_t v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(v23);
                *(void *)(a1 + 104) = v22;
                char v7 = v44;
              }
              unint64_t v13 = sub_1000EBEEC(a3, v22, v7);
              goto LABEL_65;
            case 4u:
              if (v8 != 34) {
                goto LABEL_58;
              }
              int v24 = (google::protobuf::internal *)((char *)v7 - 1);
              while (1)
              {
                int v25 = (google::protobuf::internal *)((char *)v24 + 1);
                uint64_t v44 = (google::protobuf::internal *)((char *)v24 + 1);
                uint64_t v26 = *(int **)(a1 + 64);
                if (!v26) {
                  break;
                }
                uint64_t v27 = *(int *)(a1 + 56);
                int v28 = *v26;
                if ((int)v27 >= *v26)
                {
                  if (v28 == *(_DWORD *)(a1 + 60))
                  {
LABEL_39:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v28 + 1);
                    uint64_t v26 = *(int **)(a1 + 64);
                    int v28 = *v26;
                  }
                  *uint64_t v26 = v28 + 1;
                  uint64_t v29 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(*(void *)(a1 + 48));
                  uint64_t v30 = *(void *)(a1 + 64);
                  uint64_t v31 = *(int *)(a1 + 56);
                  *(_DWORD *)(a1 + 56) = v31 + 1;
                  *(void *)(v30 + 8 * v31 + 8) = v29;
                  int v25 = v44;
                  goto LABEL_41;
                }
                *(_DWORD *)(a1 + 56) = v27 + 1;
                uint64_t v29 = *(void *)&v26[2 * v27 + 2];
LABEL_41:
                int v24 = sub_1000EBFBC((uint64_t)a3, v29, v25);
                uint64_t v44 = v24;
                if (!v24) {
                  return 0;
                }
                if (*(void *)a3 <= (unint64_t)v24 || *(unsigned char *)v24 != 34) {
                  goto LABEL_66;
                }
              }
              int v28 = *(_DWORD *)(a1 + 60);
              goto LABEL_39;
            case 5u:
              if (v8 != 42) {
                goto LABEL_58;
              }
              unint64_t v32 = (char *)v7 - 1;
              break;
            default:
LABEL_58:
              if (v8) {
                BOOL v40 = (v8 & 7) == 4;
              }
              else {
                BOOL v40 = 1;
              }
              if (v40)
              {
                a3[10].i32[0] = v8 - 1;
                return v44;
              }
              if (*v6)
              {
                unsigned int v41 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
              }
              else
              {
                unsigned int v41 = sub_10003562C((unint64_t *)(a1 + 8));
                char v7 = v44;
              }
              unint64_t v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v41, v7);
LABEL_65:
              uint64_t v44 = v13;
              if (!v13) {
                return 0;
              }
LABEL_66:
              if (sub_1000355B8((uint64_t)a3, &v44, a3[11].i32[1])) {
                return v44;
              }
              continue;
          }
          while (1)
          {
            uint64_t v33 = v32 + 1;
            uint64_t v44 = (google::protobuf::internal *)(v32 + 1);
            int v34 = *(int **)(a1 + 88);
            if (!v34) {
              break;
            }
            uint64_t v35 = *(int *)(a1 + 80);
            int v36 = *v34;
            if ((int)v35 >= *v34)
            {
              if (v36 == *(_DWORD *)(a1 + 84))
              {
LABEL_52:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v36 + 1);
                int v34 = *(int **)(a1 + 88);
                int v36 = *v34;
              }
              *int v34 = v36 + 1;
              uint64_t v37 = (std::string *)sub_1000BBB38(*(google::protobuf::Arena **)(a1 + 72));
              uint64_t v38 = *(void *)(a1 + 88);
              uint64_t v39 = *(int *)(a1 + 80);
              *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v39 + 1;
              *(void *)(v38 + 8 * v39 + 8) = v37;
              uint64_t v33 = (std::string::value_type *)v44;
              goto LABEL_54;
            }
            *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v35 + 1;
            uint64_t v37 = *(std::string **)&v34[2 * v35 + 2];
LABEL_54:
            unint64_t v32 = google::protobuf::internal::InlineGreedyStringParser(v37, v33, (uint64_t)a3);
            uint64_t v44 = (google::protobuf::internal *)v32;
            if (!v32) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v32 || *v32 != 42) {
              goto LABEL_66;
            }
          }
          int v36 = *(_DWORD *)(a1 + 84);
          goto LABEL_52;
        }
        char v7 = (google::protobuf::internal *)((char *)v44 + 2);
      }
      break;
    }
    uint64_t v44 = v7;
    goto LABEL_8;
  }
  return v44;
}

google::protobuf::internal *sub_1000EBE1C(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::EnumValueDescriptorProto::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

google::protobuf::internal *sub_1000EBEEC(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::EnumOptions::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

google::protobuf::internal *sub_1000EBFBC(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumDescriptorProto::_InternalSerialize(google::protobuf::EnumDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v9 = *(google::protobuf::EnumValueDescriptorProto **)(*((void *)this + 5) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          BOOL v11 = v4 + 3;
          do
          {
            *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - sub_1000333D0((uint64_t *)this + 1) = v13;
        }
        else
        {
          uint64_t v4[2] = v12;
          BOOL v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        BOOL v11 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::EnumValueDescriptorProto::_InternalSerialize(v9, v11, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v15 = (google::protobuf::EnumOptions *)*((void *)this + 13);
    *uint64_t v4 = 26;
    unsigned int v16 = *((_DWORD *)v15 + 11);
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v18 = v16 >> 7;
      if (v16 >> 14)
      {
        uint64_t v17 = v4 + 3;
        do
        {
          *(v17 - sub_1000333D0((uint64_t *)this + 1) = v18 | 0x80;
          unsigned int v19 = v18 >> 7;
          ++v17;
          unsigned int v20 = v18 >> 14;
          v18 >>= 7;
        }
        while (v20);
        *(v17 - sub_1000333D0((uint64_t *)this + 1) = v19;
      }
      else
      {
        uint64_t v4[2] = v18;
        uint64_t v17 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v16;
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)google::protobuf::EnumOptions::_InternalSerialize(v15, v17, a3);
  }
  int v21 = *((_DWORD *)this + 14);
  if (v21)
  {
    for (int j = 0; j != v21; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v23 = *(google::protobuf::EnumDescriptorProto_EnumReservedRange **)(*((void *)this + 8) + 8 * j + 8);
      *uint64_t v4 = 34;
      unsigned int v24 = *((_DWORD *)v23 + 5);
      if (v24 > 0x7F)
      {
        v4[1] = v24 | 0x80;
        unsigned int v26 = v24 >> 7;
        if (v24 >> 14)
        {
          int v25 = v4 + 3;
          do
          {
            *(v25 - sub_1000333D0((uint64_t *)this + 1) = v26 | 0x80;
            unsigned int v27 = v26 >> 7;
            ++v25;
            unsigned int v28 = v26 >> 14;
            v26 >>= 7;
          }
          while (v28);
          *(v25 - sub_1000333D0((uint64_t *)this + 1) = v27;
        }
        else
        {
          uint64_t v4[2] = v26;
          int v25 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v24;
        int v25 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::EnumDescriptorProto_EnumReservedRange::_InternalSerialize(v23, v25, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
    }
  }
  uint64_t v29 = *((unsigned int *)this + 20);
  if ((int)v29 >= 1)
  {
    uint64_t v30 = 0;
    uint64_t v31 = 8 * v29;
    do
    {
      uint64_t v4 = sub_1000E4244(a3, 5, *(void *)(*((void *)this + 11) + v30 + 8), v4);
      v30 += 8;
    }
    while (v31 != v30);
  }
  uint64_t v32 = *((void *)this + 1);
  if ((v32 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v32 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *google::protobuf::EnumDescriptorProto::ByteSizeLong(google::protobuf::EnumDescriptorProto *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (google::protobuf::EnumValueDescriptorProto **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      int v7 = google::protobuf::EnumValueDescriptorProto::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    BOOL v11 = (google::protobuf::EnumDescriptorProto_EnumReservedRange **)(v10 + 8);
  }
  else {
    BOOL v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      unsigned int v14 = google::protobuf::EnumDescriptorProto_EnumReservedRange::ByteSizeLong(v13);
      v9 += (uint64_t)&v14[(9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6];
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *((unsigned int *)this + 20);
  unsigned int v16 = (const google::protobuf::UnknownFieldSet *)(v9 + v15);
  if ((int)v15 >= 1)
  {
    uint64_t v17 = (uint64_t *)(*((void *)this + 11) + 8);
    do
    {
      uint64_t v18 = *v17++;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      unsigned int v16 = (const google::protobuf::UnknownFieldSet *)((char *)v16 + v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6));
      --v15;
    }
    while (v15);
  }
  int v21 = *((_DWORD *)this + 4);
  if ((v21 & 3) != 0)
  {
    if (v21)
    {
      unint64_t v22 = *((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
      uint64_t v24 = *(void *)(v22 + 8);
      if ((v23 & 0x80u) == 0) {
        uint64_t v24 = v23;
      }
      unsigned int v16 = (const google::protobuf::UnknownFieldSet *)((char *)v16 + v24
                                                                    + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6)
                                                                    + 1);
    }
    if ((v21 & 2) != 0)
    {
      int v25 = google::protobuf::EnumOptions::ByteSizeLong(*((google::protobuf::EnumOptions **)this + 13));
      unsigned int v16 = (const google::protobuf::UnknownFieldSet *)&v25[((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v16];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumDescriptorProto *)((char *)this + 8), v16, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v16;
    return (char *)v16;
  }
}

void google::protobuf::EnumDescriptorProto::MergeFrom(google::protobuf::EnumDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::EnumDescriptorProto::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::EnumDescriptorProto::MergeFrom(google::protobuf::EnumDescriptorProto *this, const google::protobuf::EnumDescriptorProto *a2)
{
  uint64_t v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    int v7 = (google::protobuf::EnumValueDescriptorProto **)(*((void *)a2 + 5) + 8);
    uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumDescriptorProto *)((char *)this + 24), *((_DWORD *)a2 + 8));
    sub_1000FA7D4((uint64_t *)this + 3, (google::protobuf::EnumValueDescriptorProto **)v8, v7, v6, **((_DWORD **)this + 5) - *((_DWORD *)this + 8));
    signed int v9 = *((_DWORD *)this + 8) + v6;
    *((_DWORD *)this + 8) = v9;
    uint64_t v10 = (signed int *)*((void *)this + 5);
    if (*v10 < v9) {
      signed int *v10 = v9;
    }
  }
  unsigned int v11 = *((_DWORD *)a2 + 14);
  if (v11)
  {
    uint64_t v12 = (google::protobuf::EnumDescriptorProto_EnumReservedRange **)(*((void *)a2 + 8) + 8);
    unsigned int v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumDescriptorProto *)((char *)this + 48), *((_DWORD *)a2 + 14));
    sub_1000FA894((void **)this + 6, (void ***)v13, v12, v11, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    signed int v14 = *((_DWORD *)this + 14) + v11;
    *((_DWORD *)this + 14) = v14;
    uint64_t v15 = (signed int *)*((void *)this + 8);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  unsigned int v16 = *((_DWORD *)a2 + 20);
  if (v16)
  {
    uint64_t v17 = (const std::string **)(*((void *)a2 + 11) + 8);
    uint64_t v18 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::EnumDescriptorProto *)((char *)this + 72), *((_DWORD *)a2 + 20));
    sub_1000F9F28((std::string *)this + 3, (std::string **)v18, v17, v16, **((_DWORD **)this + 11) - *((_DWORD *)this + 20));
    signed int v19 = *((_DWORD *)this + 20) + v16;
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v19;
    uint64_t v20 = (signed int *)*((void *)this + 11);
    if (*v20 < v19) {
      *uint64_t v20 = v19;
    }
  }
  int v21 = *((_DWORD *)a2 + 4);
  if ((v21 & 3) != 0)
  {
    if (v21)
    {
      unint64_t v22 = *((void *)a2 + 12) & 0xFFFFFFFFFFFFFFFELL;
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v23 = *((void *)this + 1);
      uint64_t v24 = (google::protobuf::Arena *)(v23 & 0xFFFFFFFFFFFFFFFELL);
      if (v23) {
        uint64_t v24 = *(google::protobuf::Arena **)v24;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 12, v22, v24);
    }
    if ((v21 & 2) != 0)
    {
      *((_DWORD *)this + 4) |= 2u;
      int v25 = (std::string *)*((void *)this + 13);
      if (!v25)
      {
        unsigned int v26 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v26 = (void *)*v26;
        }
        int v25 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(v26);
        *((void *)this + 13) = v25;
      }
      if (*((void *)a2 + 13)) {
        unsigned int v27 = (const google::protobuf::EnumOptions *)*((void *)a2 + 13);
      }
      else {
        unsigned int v27 = (const google::protobuf::EnumOptions *)&google::protobuf::_EnumOptions_default_instance_;
      }
      google::protobuf::EnumOptions::MergeFrom(v25, v27);
    }
  }
}

void google::protobuf::EnumOptions::MergeFrom(std::string *this, const google::protobuf::EnumOptions *a2)
{
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::internal::ExtensionSet *)&this->__r_.__value_.__r.__words[2], (const google::protobuf::EnumOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    unsigned int v6 = (google::protobuf::UninterpretedOption **)(*((void *)a2 + 8) + 8);
    int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&this[2], *((_DWORD *)a2 + 14));
    sub_1000FA694(this + 2, (std::string **)v7, v6, v5, *(_DWORD *)this[2].__r_.__value_.__r.__words[2] - LODWORD(this[2].__r_.__value_.__r.__words[1]));
    signed int v8 = LODWORD(this[2].__r_.__value_.__r.__words[1]) + v5;
    LODWORD(this[2].__r_.__value_.__r.__words[1]) = v8;
    signed int v9 = (signed int *)this[2].__r_.__value_.__r.__words[2];
    if (*v9 < v8) {
      *signed int v9 = v8;
    }
  }
  int v10 = *((_DWORD *)a2 + 10);
  if ((v10 & 3) != 0)
  {
    if (v10) {
      this[3].__r_.__value_.__s.__data_[0] = *((unsigned char *)a2 + 72);
    }
    if ((v10 & 2) != 0) {
      this[3].__r_.__value_.__s.__data_[1] = *((unsigned char *)a2 + 73);
    }
    LODWORD(this[1].__r_.__value_.__r.__words[2]) |= v10;
  }
}

void google::protobuf::EnumDescriptorProto::CopyFrom(google::protobuf::EnumDescriptorProto *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::EnumDescriptorProto::Clear(this);
    google::protobuf::EnumDescriptorProto::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::EnumDescriptorProto::IsInitialized(google::protobuf::EnumDescriptorProto *this)
{
  uint64_t v2 = *((unsigned int *)this + 8);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char IsInitialized = google::protobuf::EnumValueDescriptorProto::IsInitialized(*(google::protobuf::EnumValueDescriptorProto **)(*((void *)this + 5) + 8 * v2));
    uint64_t v2 = v3;
    if ((IsInitialized & 1) == 0) {
      return 0;
    }
  }
  if ((*((unsigned char *)this + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v6 = *((void *)this + 13);
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v6 + 16));
  if (result)
  {
    uint64_t result = sub_1000E8DC0(v6 + 48);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t google::protobuf::EnumOptions::IsInitialized(google::protobuf::EnumOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::EnumOptions *)((char *)this + 16));
  if (result)
  {
    return sub_1000E8DC0((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::EnumDescriptorProto::GetMetadata(google::protobuf::EnumDescriptorProto *this)
{
  return off_1001EAAD0[18];
}

uint64_t google::protobuf::EnumValueDescriptorProto::EnumValueDescriptorProto(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CFAF8;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  if (atomic_load_explicit(scc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumValueDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(void *)(a1 + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 3sub_1000F9B58((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  return a1;
}

void google::protobuf::EnumValueDescriptorProto::~EnumValueDescriptorProto(google::protobuf::EnumValueDescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if (this != (google::protobuf::EnumValueDescriptorProto *)&google::protobuf::_EnumValueDescriptorProto_default_instance_)
  {
    uint64_t v3 = (google::protobuf::EnumValueOptions *)*((void *)this + 4);
    if (v3)
    {
      google::protobuf::EnumValueOptions::~EnumValueOptions(v3);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  google::protobuf::EnumValueDescriptorProto::~EnumValueDescriptorProto(this);
  operator delete();
}

uint64_t google::protobuf::EnumValueDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::EnumValueDescriptorProto::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = (unint64_t)this[3] & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      this = google::protobuf::EnumValueOptions::Clear(this[4]);
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 3sub_1000F9B58((void *)this + 2) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_100035820((unint64_t *)v4);
  }
  return this;
}

google::protobuf::Arena **google::protobuf::EnumValueOptions::Clear(google::protobuf::EnumValueOptions *this)
{
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  uint64_t v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (google::protobuf::Arena ***)(*((void *)this + 8) + 8);
    do
    {
      char v5 = *v4++;
      uint64_t result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  char v7 = *((unsigned char *)this + 8);
  uint64_t v6 = (char *)this + 8;
  v6[64] = 0;
  *((_DWORD *)v6 + 8) = 0;
  if (v7)
  {
    return sub_100035820((unint64_t *)v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::EnumValueDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  unsigned int v28 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v28, a3[11].i32[1]) & 1) == 0)
  {
    char v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v28 + 1);
      unsigned int v9 = *(unsigned __int8 *)v28;
      if ((*(char *)v28 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v28, (const char *)(v10 - 128));
      unsigned int v28 = TagFallback;
      if (!TagFallback) {
        goto LABEL_44;
      }
      signed int v8 = TagFallback;
      unsigned int v9 = v25;
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 != 26) {
          goto LABEL_14;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v16 = *(void *)(a1 + 32);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(v17);
          *(void *)(a1 + 3sub_1000F9B58((void *)this + 2) = v16;
          signed int v8 = v28;
        }
        uint64_t v15 = sub_1000ECEF4(a3, v16, v8);
LABEL_35:
        unsigned int v28 = v15;
        if (!v15) {
          goto LABEL_44;
        }
        goto LABEL_36;
      }
      if (v11 != 2)
      {
        if (v11 == 1 && v9 == 10)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v21 = *(void *)(a1 + 8);
          unint64_t v22 = (google::protobuf::Arena *)(v21 & 0xFFFFFFFFFFFFFFFELL);
          if (v21) {
            unint64_t v22 = *(google::protobuf::Arena **)v22;
          }
          uint64_t v23 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 24), v22);
          uint64_t v15 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v23, (std::string::value_type *)v28, (uint64_t)a3);
        }
        else
        {
LABEL_14:
          if (v9) {
            BOOL v13 = (v9 & 7) == 4;
          }
          else {
            BOOL v13 = 1;
          }
          if (v13)
          {
            a3[10].i32[0] = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            signed int v14 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            signed int v14 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v28;
          }
          uint64_t v15 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v14, v8);
        }
        goto LABEL_35;
      }
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 4u;
      signed int v19 = (google::protobuf::internal *)((char *)v8 + 1);
      LODWORD(v18) = *(unsigned __int8 *)v8;
      if ((v18 & 0x80) == 0) {
        goto LABEL_31;
      }
      int v20 = *(char *)v19;
      unint64_t v18 = v18 + (v20 << 7) - 128;
      if ((v20 & 0x80000000) == 0)
      {
        signed int v19 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_31:
        unsigned int v28 = v19;
        *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v18;
        goto LABEL_36;
      }
      unsigned int v26 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v18);
      unsigned int v28 = v26;
      *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v27;
      if (!v26)
      {
LABEL_44:
        unsigned int v28 = 0;
        goto LABEL_2;
      }
LABEL_36:
      if (sub_1000355B8((uint64_t)a3, &v28, a3[11].i32[1])) {
        goto LABEL_2;
      }
    }
    signed int v8 = (google::protobuf::internal *)((char *)v28 + 2);
LABEL_7:
    unsigned int v28 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v28;
}

google::protobuf::internal *sub_1000ECEF4(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::EnumValueOptions::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumValueDescriptorProto::_InternalSerialize(google::protobuf::EnumValueDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v7 = *((int *)this + 10);
  *uint64_t v4 = 16;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        ++v4;
        unint64_t v10 = v8 >> 14;
        v8 >>= 7;
      }
      while (v10);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v9;
      if ((v6 & 2) == 0) {
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v4[2] = v8;
      v4 += 3;
      if ((v6 & 2) == 0) {
        goto LABEL_27;
      }
    }
  }
  else
  {
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0) {
      goto LABEL_27;
    }
  }
LABEL_17:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  BOOL v11 = (google::protobuf::EnumValueOptions *)*((void *)this + 4);
  *uint64_t v4 = 26;
  unsigned int v12 = *((_DWORD *)v11 + 11);
  if (v12 > 0x7F)
  {
    v4[1] = v12 | 0x80;
    unsigned int v14 = v12 >> 7;
    if (v12 >> 14)
    {
      BOOL v13 = v4 + 3;
      do
      {
        *(v13 - sub_1000333D0((uint64_t *)this + 1) = v14 | 0x80;
        unsigned int v15 = v14 >> 7;
        ++v13;
        unsigned int v16 = v14 >> 14;
        v14 >>= 7;
      }
      while (v16);
      *(v13 - sub_1000333D0((uint64_t *)this + 1) = v15;
    }
    else
    {
      uint64_t v4[2] = v14;
      BOOL v13 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v12;
    BOOL v13 = v4 + 2;
  }
  uint64_t v4 = (unsigned __int8 *)google::protobuf::EnumValueOptions::_InternalSerialize(v11, v13, a3);
LABEL_27:
  uint64_t v17 = *((void *)this + 1);
  if ((v17 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *google::protobuf::EnumValueDescriptorProto::ByteSizeLong(google::protobuf::EnumValueDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (v2)
  {
    unint64_t v4 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)(v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = google::protobuf::EnumValueOptions::ByteSizeLong(*((google::protobuf::EnumValueOptions **)this + 4));
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)&v7[(void)v3
                                                      + 1
                                                      + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6)];
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v8 = *((_DWORD *)this + 10);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v9);
  }
LABEL_15:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumValueDescriptorProto *)((char *)this + 8), v3, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v3;
    return (char *)v3;
  }
}

void google::protobuf::EnumValueDescriptorProto::MergeFrom(google::protobuf::EnumValueDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::EnumValueDescriptorProto::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::EnumValueDescriptorProto::MergeFrom(google::protobuf::EnumValueDescriptorProto *this, const google::protobuf::EnumValueDescriptorProto *a2)
{
  unint64_t v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      unint64_t v7 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = *((void *)this + 1);
      uint64_t v9 = (google::protobuf::Arena *)(v8 & 0xFFFFFFFFFFFFFFFELL);
      if (v8) {
        uint64_t v9 = *(google::protobuf::Arena **)v9;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 3, v7, v9);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0)
        {
LABEL_8:
          *((_DWORD *)this + 4) |= v6;
          return;
        }
LABEL_7:
        *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = *((_DWORD *)a2 + 10);
        goto LABEL_8;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 4) |= 2u;
    unint64_t v10 = (std::string *)*((void *)this + 4);
    if (!v10)
    {
      BOOL v11 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        BOOL v11 = (void *)*v11;
      }
      unint64_t v10 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(v11);
      *((void *)this + 4) = v10;
    }
    if (*((void *)a2 + 4)) {
      unsigned int v12 = (const google::protobuf::EnumValueOptions *)*((void *)a2 + 4);
    }
    else {
      unsigned int v12 = (const google::protobuf::EnumValueOptions *)&google::protobuf::_EnumValueOptions_default_instance_;
    }
    google::protobuf::EnumValueOptions::MergeFrom(v10, v12);
    if ((v6 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
}

void google::protobuf::EnumValueOptions::MergeFrom(std::string *this, const google::protobuf::EnumValueOptions *a2)
{
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::internal::ExtensionSet *)&this->__r_.__value_.__r.__words[2], (const google::protobuf::EnumValueOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    int v6 = (google::protobuf::UninterpretedOption **)(*((void *)a2 + 8) + 8);
    unint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&this[2], *((_DWORD *)a2 + 14));
    sub_1000FA694(this + 2, (std::string **)v7, v6, v5, *(_DWORD *)this[2].__r_.__value_.__r.__words[2] - LODWORD(this[2].__r_.__value_.__r.__words[1]));
    signed int v8 = LODWORD(this[2].__r_.__value_.__r.__words[1]) + v5;
    LODWORD(this[2].__r_.__value_.__r.__words[1]) = v8;
    uint64_t v9 = (signed int *)this[2].__r_.__value_.__r.__words[2];
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  if (*((unsigned char *)a2 + 40))
  {
    std::string::value_type v10 = *((unsigned char *)a2 + 72);
    LODWORD(this[1].__r_.__value_.__r.__words[2]) |= 1u;
    this[3].__r_.__value_.__s.__data_[0] = v10;
  }
}

void google::protobuf::EnumValueDescriptorProto::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    google::protobuf::EnumValueDescriptorProto::Clear(this);
    google::protobuf::EnumValueDescriptorProto::MergeFrom((google::protobuf::EnumValueDescriptorProto *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t google::protobuf::EnumValueDescriptorProto::IsInitialized(google::protobuf::EnumValueDescriptorProto *this)
{
  if ((*((unsigned char *)this + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v1 = *((void *)this + 4);
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v1 + 16));
  if (result)
  {
    uint64_t result = sub_1000E8DC0(v1 + 48);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t google::protobuf::EnumValueOptions::IsInitialized(google::protobuf::EnumValueOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::EnumValueOptions *)((char *)this + 16));
  if (result)
  {
    return sub_1000E8DC0((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::EnumValueDescriptorProto::GetMetadata(google::protobuf::EnumValueDescriptorProto *this)
{
  return off_1001EAAD0[20];
}

void *google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto(void *a1, uint64_t a2)
{
  *a1 = off_1001CFBA8;
  a1[1] = a2;
  a1[3] = a2;
  a1[2] = 0;
  a1[4] = 0;
  a1[5] = 0;
  if (atomic_load_explicit(scc_info_ServiceDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_ServiceDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  a1[6] = &google::protobuf::internal::fixed_address_empty_string;
  a1[7] = 0;
  return a1;
}

void sub_1000ED6B4(_Unwind_Exception *a1)
{
  sub_1000FA954(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto(google::protobuf::ServiceDescriptorProto *this)
{
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if (this != (google::protobuf::ServiceDescriptorProto *)google::protobuf::_ServiceDescriptorProto_default_instance_)
  {
    uint64_t v3 = (google::protobuf::ServiceOptions *)*((void *)this + 7);
    if (v3)
    {
      google::protobuf::ServiceOptions::~ServiceOptions(v3);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_1000FA954((void *)this + 3);
}

{
  uint64_t vars8;

  google::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto(this);
  operator delete();
}

uint64_t google::protobuf::ServiceDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::ServiceDescriptorProto::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::Arena ***)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = google::protobuf::MethodDescriptorProto::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_1000F9B58((void *)this + 2) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      this = google::protobuf::ServiceOptions::Clear(*(google::protobuf::ServiceOptions **)(v1 + 56));
  }
LABEL_11:
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_100035820((unint64_t *)v7);
  }
  return this;
}

google::protobuf::Arena **google::protobuf::ServiceOptions::Clear(google::protobuf::ServiceOptions *this)
{
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  uint64_t v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (google::protobuf::Arena ***)(*((void *)this + 8) + 8);
    do
    {
      int v5 = *v4++;
      uint64_t result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  char v7 = *((unsigned char *)this + 8);
  unint64_t v6 = (char *)this + 8;
  v6[64] = 0;
  *((_DWORD *)v6 + 8) = 0;
  if (v7)
  {
    return sub_100035820((unint64_t *)v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::ServiceDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if ((sub_1000355B8((uint64_t)a3, &v30, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      char v7 = (google::protobuf::internal *)((char *)v30 + 1);
      unsigned int v8 = *(unsigned __int8 *)v30;
      if ((*(char *)v30 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v30, (const char *)(v9 - 128));
      uint64_t v30 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v7 = TagFallback;
      unsigned int v8 = v29;
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 == 26)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v15 = *(void *)(a1 + 56);
          if (!v15)
          {
            unsigned int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
            if (*v6) {
              unsigned int v16 = (void *)*v16;
            }
            uint64_t v15 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(v16);
            *(void *)(a1 + 56) = v15;
            char v7 = v30;
          }
          unsigned int v14 = sub_1000EDC74(a3, v15, v7);
          goto LABEL_43;
        }
        goto LABEL_14;
      }
      if (v10 == 2)
      {
        if (v8 != 18) {
          goto LABEL_14;
        }
        uint64_t v17 = (google::protobuf::internal *)((char *)v7 - 1);
        while (2)
        {
          unint64_t v18 = (google::protobuf::internal *)((char *)v17 + 1);
          uint64_t v30 = (google::protobuf::internal *)((char *)v17 + 1);
          signed int v19 = *(int **)(a1 + 40);
          if (v19)
          {
            uint64_t v20 = *(int *)(a1 + 32);
            int v21 = *v19;
            if ((int)v20 < *v19)
            {
              *(_DWORD *)(a1 + 3sub_1000F9B58((void *)this + 2) = v20 + 1;
              uint64_t v22 = *(void *)&v19[2 * v20 + 2];
              goto LABEL_36;
            }
            if (v21 == *(_DWORD *)(a1 + 36))
            {
LABEL_34:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v21 + 1);
              signed int v19 = *(int **)(a1 + 40);
              int v21 = *v19;
            }
            int *v19 = v21 + 1;
            uint64_t v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(*(void *)(a1 + 24));
            uint64_t v23 = *(void *)(a1 + 40);
            uint64_t v24 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_1000F9B58((void *)this + 2) = v24 + 1;
            *(void *)(v23 + 8 * v24 + 8) = v22;
            unint64_t v18 = v30;
LABEL_36:
            uint64_t v17 = sub_1000EDBA4(a3, v22, v18);
            uint64_t v30 = v17;
            if (!v17) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v17 || *(unsigned char *)v17 != 18) {
              goto LABEL_44;
            }
            continue;
          }
          break;
        }
        int v21 = *(_DWORD *)(a1 + 36);
        goto LABEL_34;
      }
      if (v10 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v25 = *(void *)(a1 + 8);
        unsigned int v26 = (google::protobuf::Arena *)(v25 & 0xFFFFFFFFFFFFFFFELL);
        if (v25) {
          unsigned int v26 = *(google::protobuf::Arena **)v26;
        }
        int v27 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 48), v26);
        unsigned int v14 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v27, (std::string::value_type *)v30, (uint64_t)a3);
        goto LABEL_43;
      }
LABEL_14:
      if (v8) {
        BOOL v12 = (v8 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
        a3[10].i32[0] = v8 - 1;
        return v30;
      }
      if (*v6)
      {
        BOOL v13 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        BOOL v13 = sub_10003562C((unint64_t *)(a1 + 8));
        char v7 = v30;
      }
      unsigned int v14 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v13, v7);
LABEL_43:
      uint64_t v30 = v14;
      if (!v14) {
        return 0;
      }
LABEL_44:
      if (sub_1000355B8((uint64_t)a3, &v30, a3[11].i32[1])) {
        return v30;
      }
    }
    char v7 = (google::protobuf::internal *)((char *)v30 + 2);
LABEL_7:
    uint64_t v30 = v7;
    goto LABEL_8;
  }
  return v30;
}

google::protobuf::internal *sub_1000EDBA4(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    unint64_t v6 = result;
  }
  else
  {
    unint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::MethodDescriptorProto::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

google::protobuf::internal *sub_1000EDC74(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    unint64_t v6 = result;
  }
  else
  {
    unint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::ServiceOptions::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::ServiceDescriptorProto::_InternalSerialize(google::protobuf::ServiceDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v9 = *(google::protobuf::MethodDescriptorProto **)(*((void *)this + 5) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        v4[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          BOOL v11 = v4 + 3;
          do
          {
            *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - sub_1000333D0((uint64_t *)this + 1) = v13;
        }
        else
        {
          uint64_t v4[2] = v12;
          BOOL v11 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v10;
        BOOL v11 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::MethodDescriptorProto::_InternalSerialize(v9, v11, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v15 = (google::protobuf::ServiceOptions *)*((void *)this + 7);
    *uint64_t v4 = 26;
    unsigned int v16 = *((_DWORD *)v15 + 11);
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v18 = v16 >> 7;
      if (v16 >> 14)
      {
        uint64_t v17 = v4 + 3;
        do
        {
          *(v17 - sub_1000333D0((uint64_t *)this + 1) = v18 | 0x80;
          unsigned int v19 = v18 >> 7;
          ++v17;
          unsigned int v20 = v18 >> 14;
          v18 >>= 7;
        }
        while (v20);
        *(v17 - sub_1000333D0((uint64_t *)this + 1) = v19;
      }
      else
      {
        uint64_t v4[2] = v18;
        uint64_t v17 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v16;
      uint64_t v17 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)google::protobuf::ServiceOptions::_InternalSerialize(v15, v17, a3);
  }
  uint64_t v21 = *((void *)this + 1);
  if ((v21 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v21 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *google::protobuf::ServiceDescriptorProto::ByteSizeLong(google::protobuf::ServiceDescriptorProto *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (google::protobuf::MethodDescriptorProto **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      int v7 = google::protobuf::MethodDescriptorProto::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *((_DWORD *)this + 4);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    if ((v8 & 2) != 0)
    {
      unsigned int v12 = google::protobuf::ServiceOptions::ByteSizeLong(*((google::protobuf::ServiceOptions **)this + 7));
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v12[(void)v2
                                                         + 1
                                                         + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::ServiceDescriptorProto *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void google::protobuf::ServiceDescriptorProto::MergeFrom(google::protobuf::ServiceDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::ServiceDescriptorProto::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::ServiceDescriptorProto::MergeFrom(google::protobuf::ServiceDescriptorProto *this, const google::protobuf::ServiceDescriptorProto *a2)
{
  uint64_t v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    int v7 = (google::protobuf::MethodDescriptorProto **)(*((void *)a2 + 5) + 8);
    int v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::ServiceDescriptorProto *)((char *)this + 24), *((_DWORD *)a2 + 8));
    sub_1000FA9D4((uint64_t *)this + 3, (google::protobuf::MethodDescriptorProto **)v8, v7, v6, **((_DWORD **)this + 5) - *((_DWORD *)this + 8));
    signed int v9 = *((_DWORD *)this + 8) + v6;
    *((_DWORD *)this + 8) = v9;
    uint64_t v10 = (signed int *)*((void *)this + 5);
    if (*v10 < v9) {
      signed int *v10 = v9;
    }
  }
  int v11 = *((_DWORD *)a2 + 4);
  if ((v11 & 3) != 0)
  {
    if (v11)
    {
      unint64_t v12 = *((void *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v13 = *((void *)this + 1);
      unsigned int v14 = (google::protobuf::Arena *)(v13 & 0xFFFFFFFFFFFFFFFELL);
      if (v13) {
        unsigned int v14 = *(google::protobuf::Arena **)v14;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 6, v12, v14);
    }
    if ((v11 & 2) != 0)
    {
      *((_DWORD *)this + 4) |= 2u;
      uint64_t v15 = (std::string *)*((void *)this + 7);
      if (!v15)
      {
        unsigned int v16 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v16 = (void *)*v16;
        }
        uint64_t v15 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(v16);
        *((void *)this + 7) = v15;
      }
      if (*((void *)a2 + 7)) {
        uint64_t v17 = (const google::protobuf::ServiceOptions *)*((void *)a2 + 7);
      }
      else {
        uint64_t v17 = (const google::protobuf::ServiceOptions *)&google::protobuf::_ServiceOptions_default_instance_;
      }
      google::protobuf::ServiceOptions::MergeFrom(v15, v17);
    }
  }
}

void google::protobuf::ServiceOptions::MergeFrom(std::string *this, const google::protobuf::ServiceOptions *a2)
{
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::internal::ExtensionSet *)&this->__r_.__value_.__r.__words[2], (const google::protobuf::ServiceOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    unsigned int v6 = (google::protobuf::UninterpretedOption **)(*((void *)a2 + 8) + 8);
    int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&this[2], *((_DWORD *)a2 + 14));
    sub_1000FA694(this + 2, (std::string **)v7, v6, v5, *(_DWORD *)this[2].__r_.__value_.__r.__words[2] - LODWORD(this[2].__r_.__value_.__r.__words[1]));
    signed int v8 = LODWORD(this[2].__r_.__value_.__r.__words[1]) + v5;
    LODWORD(this[2].__r_.__value_.__r.__words[1]) = v8;
    signed int v9 = (signed int *)this[2].__r_.__value_.__r.__words[2];
    if (*v9 < v8) {
      *signed int v9 = v8;
    }
  }
  if (*((unsigned char *)a2 + 40))
  {
    std::string::value_type v10 = *((unsigned char *)a2 + 72);
    LODWORD(this[1].__r_.__value_.__r.__words[2]) |= 1u;
    this[3].__r_.__value_.__s.__data_[0] = v10;
  }
}

void google::protobuf::ServiceDescriptorProto::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    google::protobuf::ServiceDescriptorProto::Clear(this);
    google::protobuf::ServiceDescriptorProto::MergeFrom((google::protobuf::ServiceDescriptorProto *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t google::protobuf::ServiceDescriptorProto::IsInitialized(google::protobuf::ServiceDescriptorProto *this)
{
  uint64_t v2 = *((unsigned int *)this + 8);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char IsInitialized = google::protobuf::MethodDescriptorProto::IsInitialized(*(google::protobuf::MethodDescriptorProto **)(*((void *)this + 5) + 8 * v2));
    uint64_t v2 = v3;
    if ((IsInitialized & 1) == 0) {
      return 0;
    }
  }
  if ((*((unsigned char *)this + 16) & 2) == 0) {
    return 1;
  }
  uint64_t v6 = *((void *)this + 7);
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v6 + 16));
  if (result)
  {
    uint64_t result = sub_1000E8DC0(v6 + 48);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t google::protobuf::ServiceOptions::IsInitialized(google::protobuf::ServiceOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::ServiceOptions *)((char *)this + 16));
  if (result)
  {
    return sub_1000E8DC0((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::ServiceDescriptorProto::GetMetadata(google::protobuf::ServiceDescriptorProto *this)
{
  return off_1001EAAD0[22];
}

uint64_t google::protobuf::MethodDescriptorProto::MethodDescriptorProto(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CFC58;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  if (atomic_load_explicit(scc_info_MethodDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MethodDescriptorProto_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(void *)(a1 + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 3sub_1000F9B58((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 48) = 0;
  *(_WORD *)(a1 + 56) = 0;
  return a1;
}

void google::protobuf::MethodDescriptorProto::~MethodDescriptorProto(google::protobuf::MethodDescriptorProto *this)
{
}

{
  uint64_t vars8;

  google::protobuf::MethodDescriptorProto::~MethodDescriptorProto(this);
  operator delete();
}

google::protobuf::MethodOptions *sub_1000EE534(google::protobuf::MethodOptions *result)
{
  uint64_t v1 = *((void *)result + 3);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v2 = *((void *)result + 4);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = *((void *)result + 5);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  if (result != (google::protobuf::MethodOptions *)&google::protobuf::_MethodDescriptorProto_default_instance_)
  {
    uint64_t result = (google::protobuf::MethodOptions *)*((void *)result + 6);
    if (result)
    {
      google::protobuf::MethodOptions::~MethodOptions(result);
      operator delete();
    }
  }
  return result;
}

uint64_t google::protobuf::MethodDescriptorProto::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::MethodDescriptorProto::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = (unint64_t)this[3] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v6 = (unint64_t)this[4] & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  unint64_t v7 = (unint64_t)this[5] & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    this = google::protobuf::MethodOptions::Clear(this[6]);
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_WORD *)(v3 + 48) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_100035820((unint64_t *)v3);
  }
  return this;
}

google::protobuf::Arena **google::protobuf::MethodOptions::Clear(google::protobuf::MethodOptions *this)
{
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  uint64_t v3 = *((unsigned int *)this + 14);
  if ((int)v3 >= 1)
  {
    char v4 = (google::protobuf::Arena ***)(*((void *)this + 8) + 8);
    do
    {
      unint64_t v5 = *v4++;
      uint64_t result = google::protobuf::UninterpretedOption::Clear(v5);
      --v3;
    }
    while (v3);
    *((_DWORD *)this + 14) = 0;
  }
  if ((*((unsigned char *)this + 40) & 3) != 0) {
    *((void *)this + 9) = 0;
  }
  char v7 = *((unsigned char *)this + 8);
  unint64_t v6 = (char *)this + 8;
  *((_DWORD *)v6 + 8) = 0;
  if (v7)
  {
    return sub_100035820((unint64_t *)v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::MethodDescriptorProto::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  int v34 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v34, a3[11].i32[1]) & 1) == 0)
  {
    char v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v34 + 1);
      unsigned int v9 = *(unsigned __int8 *)v34;
      if (*(char *)v34 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v34, (const char *)(v10 - 128));
          int v34 = TagFallback;
          if (!TagFallback) {
            goto LABEL_56;
          }
          signed int v8 = TagFallback;
          unsigned int v9 = v29;
          goto LABEL_8;
        }
        signed int v8 = (google::protobuf::internal *)((char *)v34 + 2);
      }
      int v34 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_38;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          unint64_t v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
          if (v11) {
            unint64_t v12 = *(google::protobuf::Arena **)v12;
          }
          uint64_t v13 = (uint64_t **)(a1 + 24);
          goto LABEL_21;
        case 2u:
          if (v9 != 18) {
            goto LABEL_38;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v14 = *(void *)(a1 + 8);
          unint64_t v12 = (google::protobuf::Arena *)(v14 & 0xFFFFFFFFFFFFFFFELL);
          if (v14) {
            unint64_t v12 = *(google::protobuf::Arena **)v12;
          }
          uint64_t v13 = (uint64_t **)(a1 + 32);
          goto LABEL_21;
        case 3u:
          if (v9 != 26) {
            goto LABEL_38;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v15 = *(void *)(a1 + 8);
          unint64_t v12 = (google::protobuf::Arena *)(v15 & 0xFFFFFFFFFFFFFFFELL);
          if (v15) {
            unint64_t v12 = *(google::protobuf::Arena **)v12;
          }
          uint64_t v13 = (uint64_t **)(a1 + 40);
LABEL_21:
          unsigned int v16 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v13, v12);
          uint64_t v17 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v16, (std::string::value_type *)v34, (uint64_t)a3);
          goto LABEL_45;
        case 4u:
          if (v9 != 34) {
            goto LABEL_38;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v18 = *(void *)(a1 + 48);
          if (!v18)
          {
            unsigned int v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              unsigned int v19 = (void *)*v19;
            }
            uint64_t v18 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v19);
            *(void *)(a1 + 48) = v18;
            signed int v8 = v34;
          }
          uint64_t v17 = sub_1000EEB8C(a3, v18, v8);
          goto LABEL_45;
        case 5u:
          if (v9 != 40) {
            goto LABEL_38;
          }
          v5 |= 0x10u;
          unsigned int v20 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v21 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_32;
          }
          int v22 = *(char *)v20;
          unint64_t v21 = v21 + (v22 << 7) - 128;
          if (v22 < 0)
          {
            uint64_t v30 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v21);
            int v34 = v30;
            *(unsigned char *)(a1 + 56) = v31 != 0;
            if (!v30) {
              goto LABEL_56;
            }
          }
          else
          {
            unsigned int v20 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_32:
            int v34 = v20;
            *(unsigned char *)(a1 + 56) = v21 != 0;
          }
          goto LABEL_46;
        case 6u:
          if (v9 != 48) {
            goto LABEL_38;
          }
          v5 |= 0x20u;
          uint64_t v23 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v24 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_37;
          }
          int v25 = *(char *)v23;
          unint64_t v24 = v24 + (v25 << 7) - 128;
          if (v25 < 0)
          {
            uint64_t v32 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v24);
            int v34 = v32;
            *(unsigned char *)(a1 + 57) = v33 != 0;
            if (!v32) {
              goto LABEL_56;
            }
          }
          else
          {
            uint64_t v23 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
            int v34 = v23;
            *(unsigned char *)(a1 + 57) = v24 != 0;
          }
          goto LABEL_46;
        default:
LABEL_38:
          if (v9) {
            BOOL v26 = (v9 & 7) == 4;
          }
          else {
            BOOL v26 = 1;
          }
          if (v26)
          {
            a3[10].i32[0] = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            int v27 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            int v27 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v34;
          }
          uint64_t v17 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v27, v8);
LABEL_45:
          int v34 = v17;
          if (!v17)
          {
LABEL_56:
            int v34 = 0;
            goto LABEL_2;
          }
LABEL_46:
          if (sub_1000355B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v34;
}

google::protobuf::internal *sub_1000EEB8C(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    unint64_t v6 = result;
  }
  else
  {
    unint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::MethodOptions::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::MethodDescriptorProto::_InternalSerialize(google::protobuf::MethodDescriptorProto *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    char v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_100034480(a3, 2, (const void **)(*((void *)this + 4) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  char v4 = sub_100034480(a3, 3, (const void **)(*((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_11:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  char v7 = (google::protobuf::MethodOptions *)*((void *)this + 6);
  *char v4 = 34;
  unsigned int v8 = *((_DWORD *)v7 + 11);
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    unsigned int v10 = v8 >> 7;
    if (v8 >> 14)
    {
      int v9 = v4 + 3;
      do
      {
        *(v9 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
        unsigned int v11 = v10 >> 7;
        ++v9;
        unsigned int v12 = v10 >> 14;
        v10 >>= 7;
      }
      while (v12);
      *(v9 - sub_1000333D0((uint64_t *)this + 1) = v11;
    }
    else
    {
      uint64_t v4[2] = v10;
      int v9 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v8;
    int v9 = v4 + 2;
  }
  char v4 = (unsigned __int8 *)google::protobuf::MethodOptions::_InternalSerialize(v7, v9, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
LABEL_21:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v13 = *((unsigned char *)this + 56);
  *char v4 = 40;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x20) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned __int8 v14 = *((unsigned char *)this + 57);
    *char v4 = 48;
    v4[1] = v14;
    v4 += 2;
  }
LABEL_27:
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *google::protobuf::MethodDescriptorProto::ByteSizeLong(google::protobuf::MethodDescriptorProto *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 0x3F) == 0)
  {
    char v4 = 0;
    goto LABEL_20;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v5 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *((void *)this + 4) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v14 = *((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if ((v2 & 8) != 0)
  {
LABEL_14:
    unsigned int v11 = google::protobuf::MethodOptions::ByteSizeLong(*((google::protobuf::MethodOptions **)this + 6));
    v3 += (uint64_t)&v11[((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
LABEL_15:
  uint64_t v12 = v3 + 2;
  if ((v2 & 0x10) == 0) {
    uint64_t v12 = v3;
  }
  if ((v2 & 0x20) != 0) {
    char v4 = (const google::protobuf::UnknownFieldSet *)(v12 + 2);
  }
  else {
    char v4 = (const google::protobuf::UnknownFieldSet *)v12;
  }
LABEL_20:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::MethodDescriptorProto *)((char *)this + 8), v4, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v4;
    return (char *)v4;
  }
}

void google::protobuf::MethodDescriptorProto::MergeFrom(google::protobuf::MethodDescriptorProto *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::MethodDescriptorProto::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::MethodDescriptorProto::MergeFrom(google::protobuf::MethodDescriptorProto *this, const google::protobuf::MethodDescriptorProto *a2)
{
  char v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x3F) != 0)
  {
    if (v6)
    {
      unint64_t v7 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v8 = *((void *)this + 1);
      uint64_t v9 = (google::protobuf::Arena *)(v8 & 0xFFFFFFFFFFFFFFFELL);
      if (v8) {
        uint64_t v9 = *(google::protobuf::Arena **)v9;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 3, v7, v9);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_6;
    }
    unint64_t v10 = *((void *)a2 + 4) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 4) |= 2u;
    uint64_t v11 = *((void *)this + 1);
    uint64_t v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
    if (v11) {
      uint64_t v12 = *(google::protobuf::Arena **)v12;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 4, v10, v12);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_22;
    }
LABEL_19:
    unint64_t v13 = *((void *)a2 + 5) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 4) |= 4u;
    uint64_t v14 = *((void *)this + 1);
    uint64_t v15 = (google::protobuf::Arena *)(v14 & 0xFFFFFFFFFFFFFFFELL);
    if (v14) {
      uint64_t v15 = *(google::protobuf::Arena **)v15;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 5, v13, v15);
    if ((v6 & 8) == 0)
    {
LABEL_8:
      if ((v6 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_30;
    }
LABEL_22:
    *((_DWORD *)this + 4) |= 8u;
    uint64_t v16 = (std::string *)*((void *)this + 6);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v16 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v17);
      *((void *)this + 6) = v16;
    }
    if (*((void *)a2 + 6)) {
      uint64_t v18 = (const google::protobuf::MethodOptions *)*((void *)a2 + 6);
    }
    else {
      uint64_t v18 = (const google::protobuf::MethodOptions *)google::protobuf::_MethodOptions_default_instance_;
    }
    google::protobuf::MethodOptions::MergeFrom(v16, v18);
    if ((v6 & 0x10) == 0)
    {
LABEL_9:
      if ((v6 & 0x20) == 0)
      {
LABEL_11:
        *((_DWORD *)this + 4) |= v6;
        return;
      }
LABEL_10:
      *((unsigned char *)this + 57) = *((unsigned char *)a2 + 57);
      goto LABEL_11;
    }
LABEL_30:
    *((unsigned char *)this + 56) = *((unsigned char *)a2 + 56);
    if ((v6 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
}

void google::protobuf::MethodOptions::MergeFrom(std::string *this, const google::protobuf::MethodOptions *a2)
{
  google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::internal::ExtensionSet *)&this->__r_.__value_.__r.__words[2], (const google::protobuf::MethodOptions *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 14);
  if (v5)
  {
    int v6 = (google::protobuf::UninterpretedOption **)(*((void *)a2 + 8) + 8);
    unint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&this[2], *((_DWORD *)a2 + 14));
    sub_1000FA694(this + 2, (std::string **)v7, v6, v5, *(_DWORD *)this[2].__r_.__value_.__r.__words[2] - LODWORD(this[2].__r_.__value_.__r.__words[1]));
    signed int v8 = LODWORD(this[2].__r_.__value_.__r.__words[1]) + v5;
    LODWORD(this[2].__r_.__value_.__r.__words[1]) = v8;
    uint64_t v9 = (signed int *)this[2].__r_.__value_.__r.__words[2];
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  int v10 = *((_DWORD *)a2 + 10);
  if ((v10 & 3) != 0)
  {
    if (v10) {
      this[3].__r_.__value_.__s.__data_[0] = *((unsigned char *)a2 + 72);
    }
    if ((v10 & 2) != 0) {
      HIDWORD(this[3].__r_.__value_.__r.__words[0]) = *((_DWORD *)a2 + 19);
    }
    LODWORD(this[1].__r_.__value_.__r.__words[2]) |= v10;
  }
}

void google::protobuf::MethodDescriptorProto::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    google::protobuf::MethodDescriptorProto::Clear(this);
    google::protobuf::MethodDescriptorProto::MergeFrom((google::protobuf::MethodDescriptorProto *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t google::protobuf::MethodDescriptorProto::IsInitialized(google::protobuf::MethodDescriptorProto *this)
{
  if ((*((unsigned char *)this + 16) & 8) == 0) {
    return 1;
  }
  uint64_t v1 = *((void *)this + 6);
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::internal::ExtensionSet *)(v1 + 16));
  if (result)
  {
    uint64_t result = sub_1000E8DC0(v1 + 48);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t google::protobuf::MethodOptions::IsInitialized(google::protobuf::MethodOptions *this)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::IsInitialized((google::protobuf::MethodOptions *)((char *)this + 16));
  if (result)
  {
    return sub_1000E8DC0((uint64_t)this + 48);
  }
  return result;
}

uint64_t google::protobuf::MethodDescriptorProto::GetMetadata(google::protobuf::MethodDescriptorProto *this)
{
  return off_1001EAAD0[24];
}

uint64_t google::protobuf::FileOptions::FileOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CFD08;
  *(void *)(a1 + 8) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet(a1 + 16, a2);
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  if (atomic_load_explicit(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(void *)(a1 + 7sub_1000F9B58((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 88) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 96) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 104) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 11sub_1000F9B58((void *)this + 2) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 128) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 136) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 144) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 15sub_1000F9B58((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 1;
  *(unsigned char *)(a1 + 164) = 1;
  return a1;
}

void sub_1000EF4AC(_Unwind_Exception *a1)
{
  sub_1000FA614(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FileOptions::~FileOptions(google::protobuf::FileOptions *this)
{
}

{
  uint64_t vars8;

  google::protobuf::FileOptions::~FileOptions(this);
  operator delete();
}

void *sub_1000EF518(void *result)
{
  uint64_t v1 = result[9];
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v2 = result[10];
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = result[11];
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v4 = result[12];
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    operator delete();
  }
  uint64_t v5 = result[13];
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    operator delete();
  }
  uint64_t v6 = result[14];
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    operator delete();
  }
  uint64_t v7 = result[15];
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    operator delete();
  }
  uint64_t v8 = result[16];
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    operator delete();
  }
  uint64_t v9 = result[17];
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    operator delete();
  }
  uint64_t v10 = result[18];
  if ((uint64_t *)v10 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v10 + 23) < 0) {
      operator delete(*(void **)v10);
    }
    operator delete();
  }
  return result;
}

uint64_t google::protobuf::FileOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::FileOptions::default_instance(google::protobuf::FileOptions *this)
{
  if (atomic_load_explicit(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FileOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_FileOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::FileOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v87 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v87, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v87 + 1);
      LODWORD(v9) = *(unsigned __int8 *)v87;
      if (*(char *)v87 < 0)
      {
        uint64_t v9 = (const char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v87, v9);
          uint64_t v87 = TagFallback;
          if (!TagFallback) {
            goto LABEL_156;
          }
          uint64_t v8 = TagFallback;
          goto LABEL_8;
        }
        uint64_t v8 = (google::protobuf::internal *)((char *)v87 + 2);
      }
      uint64_t v87 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_121;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v10 = *(void *)(a1 + 8);
          uint64_t v11 = (google::protobuf::Arena *)(v10 & 0xFFFFFFFFFFFFFFFELL);
          if (v10) {
            uint64_t v11 = *(google::protobuf::Arena **)v11;
          }
          uint64_t v12 = (uint64_t **)(a1 + 72);
          goto LABEL_117;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
        case 0xCu:
        case 0xDu:
        case 0xEu:
        case 0xFu:
        case 0x13u:
        case 0x15u:
        case 0x16u:
        case 0x18u:
        case 0x19u:
        case 0x1Au:
        case 0x1Cu:
        case 0x1Du:
        case 0x1Eu:
        case 0x20u:
        case 0x21u:
        case 0x22u:
        case 0x23u:
        case 0x26u:
        case 0x2Bu:
          goto LABEL_121;
        case 8u:
          if (v9 != 66) {
            goto LABEL_121;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          uint64_t v22 = *(void *)(a1 + 8);
          uint64_t v11 = (google::protobuf::Arena *)(v22 & 0xFFFFFFFFFFFFFFFELL);
          if (v22) {
            uint64_t v11 = *(google::protobuf::Arena **)v11;
          }
          uint64_t v12 = (uint64_t **)(a1 + 80);
          goto LABEL_117;
        case 9u:
          if (v9 != 72) {
            goto LABEL_121;
          }
          uint64_t v23 = (google::protobuf::internal *)((char *)v8 + 1);
          uint64_t v24 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_37;
          }
          int v25 = *(char *)v23;
          int v26 = v24 + (v25 << 7);
          uint64_t v24 = (v26 - 128);
          if (v25 < 0)
          {
            uint64_t v87 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, (v26 - 128));
            if (!v87) {
              goto LABEL_156;
            }
            uint64_t v24 = v67;
          }
          else
          {
            uint64_t v23 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
            uint64_t v87 = v23;
          }
          if ((v24 - 1) > 2)
          {
            if (*v7) {
              long long v86 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else {
              long long v86 = sub_10003562C((unint64_t *)(a1 + 8));
            }
            google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v86, 9u, v24);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 0x40000u;
            *(_DWORD *)(a1 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v24;
          }
          goto LABEL_119;
        case 0xAu:
          if (v9 != 80) {
            goto LABEL_121;
          }
          v5 |= 0x400u;
          int v27 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v28 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_44;
          }
          int v29 = *(char *)v27;
          unint64_t v28 = v28 + (v29 << 7) - 128;
          if (v29 < 0)
          {
            unsigned int v68 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v28);
            uint64_t v87 = v68;
            *(unsigned char *)(a1 + 15sub_1000F9B58((void *)this + 2) = v69 != 0;
            if (!v68) {
              goto LABEL_156;
            }
          }
          else
          {
            int v27 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_44:
            uint64_t v87 = v27;
            *(unsigned char *)(a1 + 15sub_1000F9B58((void *)this + 2) = v28 != 0;
          }
          goto LABEL_119;
        case 0xBu:
          if (v9 != 90) {
            goto LABEL_121;
          }
          *(_DWORD *)(a1 + 40) |= 4u;
          uint64_t v30 = *(void *)(a1 + 8);
          uint64_t v11 = (google::protobuf::Arena *)(v30 & 0xFFFFFFFFFFFFFFFELL);
          if (v30) {
            uint64_t v11 = *(google::protobuf::Arena **)v11;
          }
          uint64_t v12 = (uint64_t **)(a1 + 88);
          goto LABEL_117;
        case 0x10u:
          if (v9 != 128) {
            goto LABEL_121;
          }
          v5 |= 0x2000u;
          uint64_t v31 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v32 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_53;
          }
          int v33 = *(char *)v31;
          unint64_t v32 = v32 + (v33 << 7) - 128;
          if (v33 < 0)
          {
            uint64_t v70 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v32);
            uint64_t v87 = v70;
            *(unsigned char *)(a1 + 15sub_1000FA614((void *)this + 5) = v71 != 0;
            if (!v70) {
              goto LABEL_156;
            }
          }
          else
          {
            uint64_t v31 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_53:
            uint64_t v87 = v31;
            *(unsigned char *)(a1 + 15sub_1000FA614((void *)this + 5) = v32 != 0;
          }
          goto LABEL_119;
        case 0x11u:
          if (v9 != 136) {
            goto LABEL_121;
          }
          v5 |= 0x4000u;
          int v34 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v35 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_58;
          }
          int v36 = *(char *)v34;
          unint64_t v35 = v35 + (v36 << 7) - 128;
          if (v36 < 0)
          {
            uint64_t v72 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v35);
            uint64_t v87 = v72;
            *(unsigned char *)(a1 + 15sub_1000FA614((void *)this + 6) = v73 != 0;
            if (!v72) {
              goto LABEL_156;
            }
          }
          else
          {
            int v34 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_58:
            uint64_t v87 = v34;
            *(unsigned char *)(a1 + 15sub_1000FA614((void *)this + 6) = v35 != 0;
          }
          goto LABEL_119;
        case 0x12u:
          if (v9 != 144) {
            goto LABEL_121;
          }
          v5 |= 0x8000u;
          uint64_t v37 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v38 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_63;
          }
          int v39 = *(char *)v37;
          unint64_t v38 = v38 + (v39 << 7) - 128;
          if (v39 < 0)
          {
            v74 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v38);
            uint64_t v87 = v74;
            *(unsigned char *)(a1 + 157) = v75 != 0;
            if (!v74) {
              goto LABEL_156;
            }
          }
          else
          {
            uint64_t v37 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_63:
            uint64_t v87 = v37;
            *(unsigned char *)(a1 + 157) = v38 != 0;
          }
          goto LABEL_119;
        case 0x14u:
          if (v9 != 160) {
            goto LABEL_121;
          }
          v5 |= 0x800u;
          BOOL v40 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v41 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_68;
          }
          int v42 = *(char *)v40;
          unint64_t v41 = v41 + (v42 << 7) - 128;
          if (v42 < 0)
          {
            char v76 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v41);
            uint64_t v87 = v76;
            *(unsigned char *)(a1 + 153) = v77 != 0;
            if (!v76) {
              goto LABEL_156;
            }
          }
          else
          {
            BOOL v40 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_68:
            uint64_t v87 = v40;
            *(unsigned char *)(a1 + 153) = v41 != 0;
          }
          goto LABEL_119;
        case 0x17u:
          if (v9 != 184) {
            goto LABEL_121;
          }
          v5 |= 0x20000u;
          unsigned int v43 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v44 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_73;
          }
          int v45 = *(char *)v43;
          unint64_t v44 = v44 + (v45 << 7) - 128;
          if (v45 < 0)
          {
            int v78 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v44);
            uint64_t v87 = v78;
            *(unsigned char *)(a1 + 159) = v79 != 0;
            if (!v78) {
              goto LABEL_156;
            }
          }
          else
          {
            unsigned int v43 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_73:
            uint64_t v87 = v43;
            *(unsigned char *)(a1 + 159) = v44 != 0;
          }
          goto LABEL_119;
        case 0x1Bu:
          if (v9 != 216) {
            goto LABEL_121;
          }
          v5 |= 0x1000u;
          int v46 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v47 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_78;
          }
          int v48 = *(char *)v46;
          unint64_t v47 = v47 + (v48 << 7) - 128;
          if (v48 < 0)
          {
            uint64_t v80 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v47);
            uint64_t v87 = v80;
            *(unsigned char *)(a1 + 154) = v81 != 0;
            if (!v80) {
              goto LABEL_156;
            }
          }
          else
          {
            int v46 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_78:
            uint64_t v87 = v46;
            *(unsigned char *)(a1 + 154) = v47 != 0;
          }
          goto LABEL_119;
        case 0x1Fu:
          if (v9 != 248) {
            goto LABEL_121;
          }
          v5 |= 0x80000u;
          uint64_t v49 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v50 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_83;
          }
          int v51 = *(char *)v49;
          unint64_t v50 = v50 + (v51 << 7) - 128;
          if (v51 < 0)
          {
            BOOL v82 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v50);
            uint64_t v87 = v82;
            *(unsigned char *)(a1 + 164) = v83 != 0;
            if (!v82) {
              goto LABEL_156;
            }
          }
          else
          {
            uint64_t v49 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_83:
            uint64_t v87 = v49;
            *(unsigned char *)(a1 + 164) = v50 != 0;
          }
          goto LABEL_119;
        case 0x24u:
          if (v9 != 34) {
            goto LABEL_121;
          }
          *(_DWORD *)(a1 + 40) |= 8u;
          uint64_t v52 = *(void *)(a1 + 8);
          uint64_t v11 = (google::protobuf::Arena *)(v52 & 0xFFFFFFFFFFFFFFFELL);
          if (v52) {
            uint64_t v11 = *(google::protobuf::Arena **)v11;
          }
          uint64_t v12 = (uint64_t **)(a1 + 96);
          goto LABEL_117;
        case 0x25u:
          if (v9 != 42) {
            goto LABEL_121;
          }
          *(_DWORD *)(a1 + 40) |= 0x10u;
          uint64_t v53 = *(void *)(a1 + 8);
          uint64_t v11 = (google::protobuf::Arena *)(v53 & 0xFFFFFFFFFFFFFFFELL);
          if (v53) {
            uint64_t v11 = *(google::protobuf::Arena **)v11;
          }
          uint64_t v12 = (uint64_t **)(a1 + 104);
          goto LABEL_117;
        case 0x27u:
          if (v9 != 58) {
            goto LABEL_121;
          }
          *(_DWORD *)(a1 + 40) |= 0x20u;
          uint64_t v54 = *(void *)(a1 + 8);
          uint64_t v11 = (google::protobuf::Arena *)(v54 & 0xFFFFFFFFFFFFFFFELL);
          if (v54) {
            uint64_t v11 = *(google::protobuf::Arena **)v11;
          }
          uint64_t v12 = (uint64_t **)(a1 + 112);
          goto LABEL_117;
        case 0x28u:
          if (v9 != 66) {
            goto LABEL_121;
          }
          *(_DWORD *)(a1 + 40) |= 0x40u;
          uint64_t v55 = *(void *)(a1 + 8);
          uint64_t v11 = (google::protobuf::Arena *)(v55 & 0xFFFFFFFFFFFFFFFELL);
          if (v55) {
            uint64_t v11 = *(google::protobuf::Arena **)v11;
          }
          uint64_t v12 = (uint64_t **)(a1 + 120);
          goto LABEL_117;
        case 0x29u:
          if (v9 != 74) {
            goto LABEL_121;
          }
          *(_DWORD *)(a1 + 40) |= 0x80u;
          uint64_t v56 = *(void *)(a1 + 8);
          uint64_t v11 = (google::protobuf::Arena *)(v56 & 0xFFFFFFFFFFFFFFFELL);
          if (v56) {
            uint64_t v11 = *(google::protobuf::Arena **)v11;
          }
          uint64_t v12 = (uint64_t **)(a1 + 128);
          goto LABEL_117;
        case 0x2Au:
          if (v9 != 80) {
            goto LABEL_121;
          }
          v5 |= 0x10000u;
          unint64_t v57 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v58 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_108;
          }
          int v59 = *(char *)v57;
          unint64_t v58 = v58 + (v59 << 7) - 128;
          if (v59 < 0)
          {
            long long v84 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v58);
            uint64_t v87 = v84;
            *(unsigned char *)(a1 + 158) = v85 != 0;
            if (!v84) {
              goto LABEL_156;
            }
          }
          else
          {
            unint64_t v57 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_108:
            uint64_t v87 = v57;
            *(unsigned char *)(a1 + 158) = v58 != 0;
          }
          goto LABEL_119;
        case 0x2Cu:
          if (v9 != 98) {
            goto LABEL_121;
          }
          *(_DWORD *)(a1 + 40) |= 0x100u;
          uint64_t v60 = *(void *)(a1 + 8);
          uint64_t v11 = (google::protobuf::Arena *)(v60 & 0xFFFFFFFFFFFFFFFELL);
          if (v60) {
            uint64_t v11 = *(google::protobuf::Arena **)v11;
          }
          uint64_t v12 = (uint64_t **)(a1 + 136);
          goto LABEL_117;
        case 0x2Du:
          if (v9 != 106) {
            goto LABEL_121;
          }
          *(_DWORD *)(a1 + 40) |= 0x200u;
          uint64_t v61 = *(void *)(a1 + 8);
          uint64_t v11 = (google::protobuf::Arena *)(v61 & 0xFFFFFFFFFFFFFFFELL);
          if (v61) {
            uint64_t v11 = *(google::protobuf::Arena **)v11;
          }
          uint64_t v12 = (uint64_t **)(a1 + 144);
LABEL_117:
          int v62 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v12, v11);
          uint64_t v63 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v62, (std::string::value_type *)v87, (uint64_t)a3);
          goto LABEL_118;
        default:
          if (v9 >> 3 == 999 && v9 == 58)
          {
            uint64_t v14 = (google::protobuf::internal *)((char *)v8 - 2);
            while (1)
            {
              uint64_t v15 = (google::protobuf::internal *)((char *)v14 + 2);
              uint64_t v87 = (google::protobuf::internal *)((char *)v14 + 2);
              uint64_t v16 = *(int **)(a1 + 64);
              if (!v16) {
                break;
              }
              uint64_t v17 = *(int *)(a1 + 56);
              int v18 = *v16;
              if ((int)v17 >= *v16)
              {
                if (v18 == *(_DWORD *)(a1 + 60))
                {
LABEL_23:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v18 + 1);
                  uint64_t v16 = *(int **)(a1 + 64);
                  int v18 = *v16;
                }
                int *v16 = v18 + 1;
                uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(void *)(a1 + 48));
                uint64_t v20 = *(void *)(a1 + 64);
                uint64_t v21 = *(int *)(a1 + 56);
                *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v21 + 1;
                *(void *)(v20 + 8 * v21 + 8) = v19;
                uint64_t v15 = v87;
                goto LABEL_25;
              }
              *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
LABEL_25:
              uint64_t v14 = sub_1000E89B0((uint64_t)a3, v19, v15);
              uint64_t v87 = v14;
              if (!v14) {
                goto LABEL_156;
              }
              if (*(void *)a3 <= (unint64_t)v14 || *(_WORD *)v14 != 16058) {
                goto LABEL_119;
              }
            }
            int v18 = *(_DWORD *)(a1 + 60);
            goto LABEL_23;
          }
LABEL_121:
          if (v9) {
            BOOL v64 = (v9 & 7) == 4;
          }
          else {
            BOOL v64 = 1;
          }
          if (v64)
          {
            a3[10].i32[0] = v9 - 1;
            goto LABEL_2;
          }
          unint64_t v65 = v9;
          if (v9 >> 6 < 0x7D)
          {
            if (*v7)
            {
              unsigned int v66 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              unsigned int v66 = sub_10003562C((unint64_t *)(a1 + 8));
              uint64_t v8 = v87;
            }
            uint64_t v63 = google::protobuf::internal::UnknownFieldParse(v65, (google::protobuf::UnknownFieldSet *)v66, v8);
          }
          else
          {
            uint64_t v63 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, v8, (uint64_t)&google::protobuf::_FileOptions_default_instance_, (unint64_t *)(a1 + 8), a3);
          }
LABEL_118:
          uint64_t v87 = v63;
          if (!v63)
          {
LABEL_156:
            uint64_t v87 = 0;
            goto LABEL_2;
          }
LABEL_119:
          if (sub_1000355B8((uint64_t)a3, &v87, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v87;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FileOptions::_InternalSerialize(google::protobuf::FileOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    uint64_t v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 9) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x40000) == 0) {
        goto LABEL_4;
      }
LABEL_38:
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v18 = *((int *)this + 40);
      *uint64_t v4 = 72;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        if (v18 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - sub_1000333D0((uint64_t *)this + 1) = v19 | 0x80;
            unint64_t v20 = v19 >> 7;
            ++v4;
            unint64_t v21 = v19 >> 14;
            v19 >>= 7;
          }
          while (v21);
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v20;
          if ((v6 & 0x400) != 0) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v4[2] = v19;
          v4 += 3;
          if ((v6 & 0x400) != 0) {
            goto LABEL_49;
          }
        }
      }
      else
      {
        v4[1] = v18;
        v4 += 2;
        if ((v6 & 0x400) != 0) {
          goto LABEL_49;
        }
      }
LABEL_5:
      if ((v6 & 4) == 0) {
        goto LABEL_6;
      }
      goto LABEL_52;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_100034480(a3, 8, (const void **)(*((void *)this + 10) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40000) != 0) {
    goto LABEL_38;
  }
LABEL_4:
  if ((v6 & 0x400) == 0) {
    goto LABEL_5;
  }
LABEL_49:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v22 = *((unsigned char *)this + 152);
  *uint64_t v4 = 80;
  v4[1] = v22;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_6:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v4 = sub_100034480(a3, 11, (const void **)(*((void *)this + 11) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x2000) == 0)
  {
LABEL_7:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_56;
  }
LABEL_53:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v23 = *((unsigned char *)this + 155);
  *(_WORD *)uint64_t v4 = 384;
  uint64_t v4[2] = v23;
  v4 += 3;
  if ((v6 & 0x4000) == 0)
  {
LABEL_8:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_59;
  }
LABEL_56:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v24 = *((unsigned char *)this + 156);
  *(_WORD *)uint64_t v4 = 392;
  uint64_t v4[2] = v24;
  v4 += 3;
  if ((v6 & 0x8000) == 0)
  {
LABEL_9:
    if ((v6 & 0x800) == 0) {
      goto LABEL_10;
    }
    goto LABEL_62;
  }
LABEL_59:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v25 = *((unsigned char *)this + 157);
  *(_WORD *)uint64_t v4 = 400;
  uint64_t v4[2] = v25;
  v4 += 3;
  if ((v6 & 0x800) == 0)
  {
LABEL_10:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_11;
    }
    goto LABEL_65;
  }
LABEL_62:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v26 = *((unsigned char *)this + 153);
  *(_WORD *)uint64_t v4 = 416;
  uint64_t v4[2] = v26;
  v4 += 3;
  if ((v6 & 0x20000) == 0)
  {
LABEL_11:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_68;
  }
LABEL_65:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v27 = *((unsigned char *)this + 159);
  *(_WORD *)uint64_t v4 = 440;
  uint64_t v4[2] = v27;
  v4 += 3;
  if ((v6 & 0x1000) == 0)
  {
LABEL_12:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_71;
  }
LABEL_68:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v28 = *((unsigned char *)this + 154);
  *(_WORD *)uint64_t v4 = 472;
  uint64_t v4[2] = v28;
  v4 += 3;
  if ((v6 & 0x80000) == 0)
  {
LABEL_13:
    if ((v6 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_74;
  }
LABEL_71:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v29 = *((unsigned char *)this + 164);
  *(_WORD *)uint64_t v4 = 504;
  uint64_t v4[2] = v29;
  v4 += 3;
  if ((v6 & 8) == 0)
  {
LABEL_14:
    if ((v6 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_75;
  }
LABEL_74:
  uint64_t v4 = sub_100034480(a3, 36, (const void **)(*((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_15:
    if ((v6 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_76;
  }
LABEL_75:
  uint64_t v4 = sub_100034480(a3, 37, (const void **)(*((void *)this + 13) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_16:
    if ((v6 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v4 = sub_100034480(a3, 39, (const void **)(*((void *)this + 14) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_17:
    if ((v6 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_78;
  }
LABEL_77:
  uint64_t v4 = sub_100034480(a3, 40, (const void **)(*((void *)this + 15) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_18:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_79;
  }
LABEL_78:
  uint64_t v4 = sub_100034480(a3, 41, (const void **)(*((void *)this + 16) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10000) == 0)
  {
LABEL_19:
    if ((v6 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_82;
  }
LABEL_79:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v30 = *((unsigned char *)this + 158);
  *(_WORD *)uint64_t v4 = 720;
  uint64_t v4[2] = v30;
  v4 += 3;
  if ((v6 & 0x100) == 0)
  {
LABEL_20:
    if ((v6 & 0x200) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_82:
  uint64_t v4 = sub_100034480(a3, 44, (const void **)(*((void *)this + 17) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) != 0) {
LABEL_21:
  }
    uint64_t v4 = sub_100034480(a3, 45, (const void **)(*((void *)this + 18) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_22:
  int v7 = *((_DWORD *)this + 14);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v9 = *(google::protobuf::UninterpretedOption **)(*((void *)this + 8) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 16058;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        uint64_t v4[2] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          uint64_t v11 = v4 + 4;
          do
          {
            *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - sub_1000333D0((uint64_t *)this + 1) = v13;
        }
        else
        {
          v4[3] = v12;
          uint64_t v11 = v4 + 4;
        }
      }
      else
      {
        uint64_t v4[2] = v10;
        uint64_t v11 = v4 + 3;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v9, v11, a3);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::FileOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v17 = *((void *)this + 1);
  if (v17)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v16);
  }
  return result;
}

char *google::protobuf::FileOptions::ByteSizeLong(google::protobuf::FileOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::FileOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *((_DWORD *)this + 10);
  if (!(_BYTE)v10) {
    goto LABEL_19;
  }
  if (v10)
  {
    unint64_t v26 = *((void *)this + 9) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
    uint64_t v28 = *(void *)(v26 + 8);
    if ((v27 & 0x80u) == 0) {
      uint64_t v28 = v27;
    }
    uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v10 & 2) == 0)
    {
LABEL_10:
      if ((v10 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_62;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v29 = *((void *)this + 10) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
  uint64_t v31 = *(void *)(v29 + 8);
  if ((v30 & 0x80u) == 0) {
    uint64_t v31 = v30;
  }
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v10 & 4) == 0)
  {
LABEL_11:
    if ((v10 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_65;
  }
LABEL_62:
  unint64_t v32 = *((void *)this + 11) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v33 = *(unsigned __int8 *)(v32 + 23);
  uint64_t v34 = *(void *)(v32 + 8);
  if ((v33 & 0x80u) == 0) {
    uint64_t v34 = v33;
  }
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v10 & 8) == 0)
  {
LABEL_12:
    if ((v10 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_68;
  }
LABEL_65:
  unint64_t v35 = *((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
  uint64_t v37 = *(void *)(v35 + 8);
  if ((v36 & 0x80u) == 0) {
    uint64_t v37 = v36;
  }
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2);
  if ((v10 & 0x10) == 0)
  {
LABEL_13:
    if ((v10 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_71:
    unint64_t v41 = *((void *)this + 14) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
    uint64_t v43 = *(void *)(v41 + 8);
    if ((v42 & 0x80u) == 0) {
      uint64_t v43 = v42;
    }
    uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2);
    if ((v10 & 0x40) == 0)
    {
LABEL_15:
      if ((v10 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_16;
    }
    goto LABEL_74;
  }
LABEL_68:
  unint64_t v38 = *((void *)this + 13) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v39 = *(unsigned __int8 *)(v38 + 23);
  uint64_t v40 = *(void *)(v38 + 8);
  if ((v39 & 0x80u) == 0) {
    uint64_t v40 = v39;
  }
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2);
  if ((v10 & 0x20) != 0) {
    goto LABEL_71;
  }
LABEL_14:
  if ((v10 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_74:
  unint64_t v44 = *((void *)this + 15) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v45 = *(unsigned __int8 *)(v44 + 23);
  uint64_t v46 = *(void *)(v44 + 8);
  if ((v45 & 0x80u) == 0) {
    uint64_t v46 = v45;
  }
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2);
  if ((v10 & 0x80) != 0)
  {
LABEL_16:
    unint64_t v11 = *((void *)this + 16) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2);
  }
LABEL_19:
  if ((v10 & 0xFF00) != 0)
  {
    if ((v10 & 0x100) != 0)
    {
      unint64_t v14 = *((void *)this + 17) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
      uint64_t v16 = *(void *)(v14 + 8);
      if ((v15 & 0x80u) == 0) {
        uint64_t v16 = v15;
      }
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2);
    }
    if ((v10 & 0x200) != 0)
    {
      unint64_t v17 = *((void *)this + 18) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
      uint64_t v19 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = v18;
      }
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 2);
    }
    unint64_t v20 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((v10 & 0x400) == 0) {
      unint64_t v20 = v4;
    }
    if ((v10 & 0x800) != 0) {
      unint64_t v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    }
    if ((v10 & 0x1000) != 0) {
      unint64_t v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    }
    if ((v10 & 0x2000) != 0) {
      unint64_t v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    }
    if ((v10 & 0x4000) != 0) {
      unint64_t v20 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    }
    if ((v10 & 0x8000) != 0) {
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v20 + 3);
    }
    else {
      uint64_t v4 = v20;
    }
  }
  if ((v10 & 0xF0000) != 0)
  {
    unint64_t v21 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    if ((v10 & 0x10000) == 0) {
      unint64_t v21 = v4;
    }
    if ((v10 & 0x20000) != 0) {
      unint64_t v21 = (const google::protobuf::UnknownFieldSet *)((char *)v21 + 3);
    }
    if ((v10 & 0x40000) != 0)
    {
      int v22 = *((_DWORD *)this + 40);
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v22 >= 0) {
        uint64_t v24 = v23;
      }
      else {
        uint64_t v24 = 11;
      }
      unint64_t v21 = (const google::protobuf::UnknownFieldSet *)((char *)v21 + v24);
    }
    if ((v10 & 0x80000) != 0) {
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v21 + 3);
    }
    else {
      uint64_t v4 = v21;
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FileOptions *)((char *)this + 8), v4, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 1sub_1000333D0((uint64_t *)this + 1) = v4;
    return (char *)v4;
  }
}

void google::protobuf::FileOptions::MergeFrom(google::protobuf::FileOptions *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::FileOptions::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::FileOptions::CopyFrom(google::protobuf::FileOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::FileOptions::Clear(this);
    google::protobuf::FileOptions::MergeFrom(this, a2);
  }
}

void google::protobuf::FileOptions::CopyFrom(google::protobuf::FileOptions *this, const google::protobuf::FileOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::FileOptions::Clear(this);
    google::protobuf::FileOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::FileOptions::GetMetadata(google::protobuf::FileOptions *this)
{
  return off_1001EAAD0[26];
}

uint64_t google::protobuf::MessageOptions::MessageOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CFDB8;
  *(void *)(a1 + 8) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet(a1 + 16, a2);
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *(void *)(a1 + 5sub_1000FA614((void *)this + 6) = 0;
  *(void *)(a1 + 64) = 0;
  if (atomic_load_explicit(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(_DWORD *)(a1 + 7sub_1000F9B58((void *)this + 2) = 0;
  return a1;
}

void sub_1000F0D48(_Unwind_Exception *a1)
{
  sub_1000FA614(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::MessageOptions::~MessageOptions(google::protobuf::MessageOptions *this)
{
}

{
  uint64_t vars8;

  google::protobuf::MessageOptions::~MessageOptions(this);
  operator delete();
}

uint64_t google::protobuf::MessageOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::MessageOptions::default_instance(google::protobuf::MessageOptions *this)
{
  if (atomic_load_explicit(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MessageOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_MessageOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::MessageOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v43 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v43, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v43 + 1);
      LODWORD(v9) = *(unsigned __int8 *)v43;
      if (*(char *)v43 < 0)
      {
        uint64_t v9 = (const char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v43, v9);
          uint64_t v43 = TagFallback;
          if (!TagFallback) {
            goto LABEL_67;
          }
          uint64_t v8 = TagFallback;
          goto LABEL_8;
        }
        uint64_t v8 = (google::protobuf::internal *)((char *)v43 + 2);
      }
      uint64_t v43 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_43;
          }
          v5 |= 1u;
          int v10 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v11 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v12 = *(char *)v10;
          unint64_t v11 = v11 + (v12 << 7) - 128;
          if ((v12 & 0x80000000) == 0)
          {
            int v10 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_13:
            uint64_t v43 = v10;
            *(unsigned char *)(a1 + 7sub_1000F9B58((void *)this + 2) = v11 != 0;
            goto LABEL_55;
          }
          unint64_t v35 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v11);
          uint64_t v43 = v35;
          *(unsigned char *)(a1 + 7sub_1000F9B58((void *)this + 2) = v36 != 0;
          if (!v35) {
            goto LABEL_67;
          }
          goto LABEL_55;
        case 2u:
          if (v9 != 16) {
            goto LABEL_43;
          }
          v5 |= 2u;
          unint64_t v21 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v22 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_32;
          }
          int v23 = *(char *)v21;
          unint64_t v22 = v22 + (v23 << 7) - 128;
          if (v23 < 0)
          {
            uint64_t v37 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v22);
            uint64_t v43 = v37;
            *(unsigned char *)(a1 + 73) = v38 != 0;
            if (!v37) {
              goto LABEL_67;
            }
          }
          else
          {
            unint64_t v21 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_32:
            uint64_t v43 = v21;
            *(unsigned char *)(a1 + 73) = v22 != 0;
          }
          goto LABEL_55;
        case 3u:
          if (v9 != 24) {
            goto LABEL_43;
          }
          v5 |= 4u;
          uint64_t v24 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v25 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_37;
          }
          int v26 = *(char *)v24;
          unint64_t v25 = v25 + (v26 << 7) - 128;
          if (v26 < 0)
          {
            uint64_t v39 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v25);
            uint64_t v43 = v39;
            *(unsigned char *)(a1 + 74) = v40 != 0;
            if (!v39) {
              goto LABEL_67;
            }
          }
          else
          {
            uint64_t v24 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
            uint64_t v43 = v24;
            *(unsigned char *)(a1 + 74) = v25 != 0;
          }
          goto LABEL_55;
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_43;
        case 7u:
          if (v9 != 56) {
            goto LABEL_43;
          }
          v5 |= 8u;
          uint64_t v27 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v28 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_42;
          }
          int v29 = *(char *)v27;
          unint64_t v28 = v28 + (v29 << 7) - 128;
          if (v29 < 0)
          {
            unint64_t v41 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v28);
            uint64_t v43 = v41;
            *(unsigned char *)(a1 + 7sub_1000FA614((void *)this + 5) = v42 != 0;
            if (!v41) {
              goto LABEL_67;
            }
          }
          else
          {
            uint64_t v27 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_42:
            uint64_t v43 = v27;
            *(unsigned char *)(a1 + 7sub_1000FA614((void *)this + 5) = v28 != 0;
          }
          goto LABEL_55;
        default:
          if (v9 >> 3 == 999 && v9 == 58)
          {
            uint64_t v13 = (google::protobuf::internal *)((char *)v8 - 2);
            while (1)
            {
              unint64_t v14 = (google::protobuf::internal *)((char *)v13 + 2);
              uint64_t v43 = (google::protobuf::internal *)((char *)v13 + 2);
              uint64_t v15 = *(int **)(a1 + 64);
              if (!v15) {
                break;
              }
              uint64_t v16 = *(int *)(a1 + 56);
              int v17 = *v15;
              if ((int)v16 >= *v15)
              {
                if (v17 == *(_DWORD *)(a1 + 60))
                {
LABEL_22:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v17 + 1);
                  uint64_t v15 = *(int **)(a1 + 64);
                  int v17 = *v15;
                }
                *uint64_t v15 = v17 + 1;
                uint64_t v18 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(void *)(a1 + 48));
                uint64_t v19 = *(void *)(a1 + 64);
                uint64_t v20 = *(int *)(a1 + 56);
                *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v20 + 1;
                *(void *)(v19 + 8 * v20 + 8) = v18;
                unint64_t v14 = v43;
                goto LABEL_24;
              }
              *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v16 + 1;
              uint64_t v18 = *(void *)&v15[2 * v16 + 2];
LABEL_24:
              uint64_t v13 = sub_1000E89B0((uint64_t)a3, v18, v14);
              uint64_t v43 = v13;
              if (!v13) {
                goto LABEL_67;
              }
              if (*(void *)a3 <= (unint64_t)v13 || *(_WORD *)v13 != 16058) {
                goto LABEL_55;
              }
            }
            int v17 = *(_DWORD *)(a1 + 60);
            goto LABEL_22;
          }
LABEL_43:
          if (v9) {
            BOOL v30 = (v9 & 7) == 4;
          }
          else {
            BOOL v30 = 1;
          }
          if (v30)
          {
            a3[10].i32[0] = v9 - 1;
            goto LABEL_2;
          }
          unint64_t v31 = v9;
          if (v9 >> 6 < 0x7D)
          {
            if (*v7)
            {
              uint64_t v34 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              uint64_t v34 = sub_10003562C((unint64_t *)(a1 + 8));
              uint64_t v8 = v43;
            }
            unint64_t v32 = google::protobuf::internal::UnknownFieldParse(v31, (google::protobuf::UnknownFieldSet *)v34, v8);
          }
          else
          {
            unint64_t v32 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, v8, (uint64_t)&google::protobuf::_MessageOptions_default_instance_, (unint64_t *)(a1 + 8), a3);
          }
          uint64_t v43 = v32;
          if (!v32)
          {
LABEL_67:
            uint64_t v43 = 0;
            goto LABEL_2;
          }
LABEL_55:
          if (sub_1000355B8((uint64_t)a3, &v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v43;
}

const google::protobuf::UnknownFieldSet *google::protobuf::MessageOptions::_InternalSerialize(google::protobuf::MessageOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned __int8 v7 = *((unsigned char *)this + 72);
    *uint64_t v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v8 = *((unsigned char *)this + 73);
  *uint64_t v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v9 = *((unsigned char *)this + 74);
  *uint64_t v4 = 24;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_15:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned __int8 v10 = *((unsigned char *)this + 75);
    *uint64_t v4 = 56;
    v4[1] = v10;
    v4 += 2;
  }
LABEL_18:
  int v11 = *((_DWORD *)this + 14);
  if (v11)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v13 = *(google::protobuf::UninterpretedOption **)(*((void *)this + 8) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 16058;
      unsigned int v14 = *((_DWORD *)v13 + 5);
      if (v14 > 0x7F)
      {
        uint64_t v4[2] = v14 | 0x80;
        unsigned int v16 = v14 >> 7;
        if (v14 >> 14)
        {
          uint64_t v15 = v4 + 4;
          do
          {
            *(v15 - sub_1000333D0((uint64_t *)this + 1) = v16 | 0x80;
            unsigned int v17 = v16 >> 7;
            ++v15;
            unsigned int v18 = v16 >> 14;
            v16 >>= 7;
          }
          while (v18);
          *(v15 - sub_1000333D0((uint64_t *)this + 1) = v17;
        }
        else
        {
          v4[3] = v16;
          uint64_t v15 = v4 + 4;
        }
      }
      else
      {
        uint64_t v4[2] = v14;
        uint64_t v15 = v4 + 3;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v13, v15, a3);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::MessageOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v21 = *((void *)this + 1);
  if (v21)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v21 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v20);
  }
  return result;
}

char *google::protobuf::MessageOptions::ByteSizeLong(google::protobuf::MessageOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::MessageOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unsigned __int8 v8 = *v6++;
      unsigned __int8 v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *((_DWORD *)this + 10);
  if ((v10 & 0xF) != 0)
  {
    int v11 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((v10 & 1) == 0) {
      int v11 = v4;
    }
    if ((v10 & 2) != 0) {
      int v11 = (const google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
    }
    if ((v10 & 4) != 0) {
      int v11 = (const google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
    }
    if ((v10 & 8) != 0) {
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
    }
    else {
      uint64_t v4 = v11;
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::MessageOptions *)((char *)this + 8), v4, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 1sub_1000333D0((uint64_t *)this + 1) = v4;
    return (char *)v4;
  }
}

void google::protobuf::MessageOptions::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::MessageOptions::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void google::protobuf::MessageOptions::CopyFrom(google::protobuf::MessageOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::MessageOptions::Clear(this);
    google::protobuf::MessageOptions::MergeFrom((std::string *)this, a2);
  }
}

void google::protobuf::MessageOptions::CopyFrom(google::protobuf::MessageOptions *this, const google::protobuf::MessageOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::MessageOptions::Clear(this);
    google::protobuf::MessageOptions::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::MessageOptions::GetMetadata(google::protobuf::MessageOptions *this)
{
  return off_1001EAAD0[28];
}

uint64_t google::protobuf::FieldOptions::FieldOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CFE68;
  *(void *)(a1 + 8) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet(a1 + 16, a2);
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *(void *)(a1 + 5sub_1000FA614((void *)this + 6) = 0;
  *(void *)(a1 + 64) = 0;
  if (atomic_load_explicit(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *(void *)(a1 + 7sub_1000F9B58((void *)this + 2) = 0;
  return a1;
}

void sub_1000F17A8(_Unwind_Exception *a1)
{
  sub_1000FA614(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldOptions::~FieldOptions(google::protobuf::FieldOptions *this)
{
}

{
  uint64_t vars8;

  google::protobuf::FieldOptions::~FieldOptions(this);
  operator delete();
}

uint64_t google::protobuf::FieldOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::FieldOptions::default_instance(google::protobuf::FieldOptions *this)
{
  if (atomic_load_explicit(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_FieldOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::FieldOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v54 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v54, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unsigned __int8 v8 = (google::protobuf::internal *)((char *)v54 + 1);
      LODWORD(v9) = *(unsigned __int8 *)v54;
      if (*(char *)v54 < 0)
      {
        unsigned __int8 v9 = (const char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v54, v9);
          uint64_t v54 = TagFallback;
          if (!TagFallback) {
            goto LABEL_94;
          }
          unsigned __int8 v8 = TagFallback;
          goto LABEL_8;
        }
        unsigned __int8 v8 = (google::protobuf::internal *)((char *)v54 + 2);
      }
      uint64_t v54 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_59;
          }
          int v10 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v11 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v12 = *(char *)v10;
          unint64_t v11 = v11 + (v12 << 7) - 128;
          if (v12 < 0)
          {
            uint64_t v54 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v11);
            if (!v54) {
              goto LABEL_94;
            }
            unint64_t v11 = v40;
          }
          else
          {
            int v10 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_13:
            uint64_t v54 = v10;
          }
          if (v11 <= 2)
          {
            *(_DWORD *)(a1 + 40) |= 1u;
            *(_DWORD *)(a1 + 7sub_1000F9B58((void *)this + 2) = v11;
            goto LABEL_69;
          }
          if (*v7)
          {
            unint64_t v50 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unint64_t v52 = v11;
            unint64_t v50 = sub_10003562C((unint64_t *)(a1 + 8));
            unint64_t v11 = v52;
          }
          unsigned int v51 = 1;
          goto LABEL_89;
        case 2u:
          if (v9 != 16) {
            goto LABEL_59;
          }
          v5 |= 2u;
          unint64_t v22 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v23 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_36;
          }
          int v24 = *(char *)v22;
          unint64_t v23 = v23 + (v24 << 7) - 128;
          if (v24 < 0)
          {
            unint64_t v41 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v23);
            uint64_t v54 = v41;
            *(unsigned char *)(a1 + 7sub_1000FA614((void *)this + 6) = v42 != 0;
            if (!v41) {
              goto LABEL_94;
            }
          }
          else
          {
            unint64_t v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_36:
            uint64_t v54 = v22;
            *(unsigned char *)(a1 + 7sub_1000FA614((void *)this + 6) = v23 != 0;
          }
          goto LABEL_69;
        case 3u:
          if (v9 != 24) {
            goto LABEL_59;
          }
          v5 |= 8u;
          unint64_t v25 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v26 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_41;
          }
          int v27 = *(char *)v25;
          unint64_t v26 = v26 + (v27 << 7) - 128;
          if (v27 < 0)
          {
            uint64_t v43 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v26);
            uint64_t v54 = v43;
            *(unsigned char *)(a1 + 78) = v44 != 0;
            if (!v43) {
              goto LABEL_94;
            }
          }
          else
          {
            unint64_t v25 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_41:
            uint64_t v54 = v25;
            *(unsigned char *)(a1 + 78) = v26 != 0;
          }
          goto LABEL_69;
        case 4u:
        case 7u:
        case 8u:
        case 9u:
          goto LABEL_59;
        case 5u:
          if (v9 != 40) {
            goto LABEL_59;
          }
          v5 |= 4u;
          unint64_t v28 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v29 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_46;
          }
          int v30 = *(char *)v28;
          unint64_t v29 = v29 + (v30 << 7) - 128;
          if (v30 < 0)
          {
            uint64_t v45 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v29);
            uint64_t v54 = v45;
            *(unsigned char *)(a1 + 77) = v46 != 0;
            if (!v45) {
              goto LABEL_94;
            }
          }
          else
          {
            unint64_t v28 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_46:
            uint64_t v54 = v28;
            *(unsigned char *)(a1 + 77) = v29 != 0;
          }
          goto LABEL_69;
        case 6u:
          if (v9 != 48) {
            goto LABEL_59;
          }
          unint64_t v31 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v11 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_51;
          }
          int v32 = *(char *)v31;
          unint64_t v11 = v11 + (v32 << 7) - 128;
          if (v32 < 0)
          {
            uint64_t v54 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v11);
            if (!v54) {
              goto LABEL_94;
            }
            unint64_t v11 = v47;
          }
          else
          {
            unint64_t v31 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_51:
            uint64_t v54 = v31;
          }
          if (v11 > 2)
          {
            if (*v7)
            {
              unint64_t v50 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              unint64_t v53 = v11;
              unint64_t v50 = sub_10003562C((unint64_t *)(a1 + 8));
              unint64_t v11 = v53;
            }
            unsigned int v51 = 6;
LABEL_89:
            google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v50, v51, v11);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 0x20u;
            *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v11;
          }
          goto LABEL_69;
        case 0xAu:
          if (v9 != 80) {
            goto LABEL_59;
          }
          v5 |= 0x10u;
          uint64_t v33 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v34 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_58;
          }
          int v35 = *(char *)v33;
          unint64_t v34 = v34 + (v35 << 7) - 128;
          if (v35 < 0)
          {
            int v48 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v34);
            uint64_t v54 = v48;
            *(unsigned char *)(a1 + 79) = v49 != 0;
            if (!v48) {
              goto LABEL_94;
            }
          }
          else
          {
            uint64_t v33 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_58:
            uint64_t v54 = v33;
            *(unsigned char *)(a1 + 79) = v34 != 0;
          }
          goto LABEL_69;
        default:
          if (v9 >> 3 == 999 && v9 == 58)
          {
            uint64_t v13 = (google::protobuf::internal *)((char *)v8 - 2);
            while (1)
            {
              unsigned int v14 = (google::protobuf::internal *)((char *)v13 + 2);
              uint64_t v54 = (google::protobuf::internal *)((char *)v13 + 2);
              uint64_t v15 = *(int **)(a1 + 64);
              if (!v15) {
                break;
              }
              uint64_t v16 = *(int *)(a1 + 56);
              int v17 = *v15;
              if ((int)v16 >= *v15)
              {
                if (v17 == *(_DWORD *)(a1 + 60))
                {
LABEL_24:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v17 + 1);
                  uint64_t v15 = *(int **)(a1 + 64);
                  int v17 = *v15;
                }
                *uint64_t v15 = v17 + 1;
                uint64_t v18 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(void *)(a1 + 48));
                uint64_t v19 = *(void *)(a1 + 64);
                uint64_t v20 = *(int *)(a1 + 56);
                *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v20 + 1;
                *(void *)(v19 + 8 * v20 + 8) = v18;
                unsigned int v14 = v54;
                goto LABEL_26;
              }
              *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v16 + 1;
              uint64_t v18 = *(void *)&v15[2 * v16 + 2];
LABEL_26:
              uint64_t v13 = sub_1000E89B0((uint64_t)a3, v18, v14);
              uint64_t v54 = v13;
              if (!v13) {
                goto LABEL_94;
              }
              if (*(void *)a3 <= (unint64_t)v13 || *(_WORD *)v13 != 16058) {
                goto LABEL_69;
              }
            }
            int v17 = *(_DWORD *)(a1 + 60);
            goto LABEL_24;
          }
LABEL_59:
          if (v9) {
            BOOL v36 = (v9 & 7) == 4;
          }
          else {
            BOOL v36 = 1;
          }
          if (v36)
          {
            a3[10].i32[0] = v9 - 1;
            goto LABEL_2;
          }
          unint64_t v37 = v9;
          if (v9 >> 6 < 0x7D)
          {
            if (*v7)
            {
              uint64_t v39 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              uint64_t v39 = sub_10003562C((unint64_t *)(a1 + 8));
              unsigned __int8 v8 = v54;
            }
            uint64_t v38 = google::protobuf::internal::UnknownFieldParse(v37, (google::protobuf::UnknownFieldSet *)v39, v8);
          }
          else
          {
            uint64_t v38 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, v8, (uint64_t)&google::protobuf::_FieldOptions_default_instance_, (unint64_t *)(a1 + 8), a3);
          }
          uint64_t v54 = v38;
          if (!v38)
          {
LABEL_94:
            uint64_t v54 = 0;
            goto LABEL_2;
          }
LABEL_69:
          if (sub_1000355B8((uint64_t)a3, &v54, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v54;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FieldOptions::_InternalSerialize(google::protobuf::FieldOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((int *)this + 18);
    *uint64_t v4 = 8;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      if (v7 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          ++v4;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v9;
        if ((v6 & 2) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v4[2] = v8;
        v4 += 3;
        if ((v6 & 2) != 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      v4[1] = v7;
      v4 += 2;
      if ((v6 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_3:
    if ((v6 & 8) == 0) {
      goto LABEL_4;
    }
    goto LABEL_22;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_19:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v11 = *((unsigned char *)this + 76);
  *uint64_t v4 = 16;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
LABEL_22:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v12 = *((unsigned char *)this + 78);
  *uint64_t v4 = 24;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_25:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v13 = *((unsigned char *)this + 77);
  *uint64_t v4 = 40;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0) {
      goto LABEL_42;
    }
    goto LABEL_39;
  }
LABEL_28:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v14 = *((int *)this + 20);
  *uint64_t v4 = 48;
  if (v14 > 0x7F)
  {
    v4[1] = v14 | 0x80;
    unint64_t v15 = v14 >> 7;
    if (v14 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        ++v4;
        unint64_t v17 = v15 >> 14;
        v15 >>= 7;
      }
      while (v17);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v16;
      if ((v6 & 0x10) == 0) {
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v4[2] = v15;
      v4 += 3;
      if ((v6 & 0x10) == 0) {
        goto LABEL_42;
      }
    }
  }
  else
  {
    v4[1] = v14;
    v4 += 2;
    if ((v6 & 0x10) == 0) {
      goto LABEL_42;
    }
  }
LABEL_39:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v18 = *((unsigned char *)this + 79);
  *uint64_t v4 = 80;
  v4[1] = v18;
  v4 += 2;
LABEL_42:
  int v19 = *((_DWORD *)this + 14);
  if (v19)
  {
    for (int i = 0; i != v19; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v21 = *(google::protobuf::UninterpretedOption **)(*((void *)this + 8) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 16058;
      unsigned int v22 = *((_DWORD *)v21 + 5);
      if (v22 > 0x7F)
      {
        uint64_t v4[2] = v22 | 0x80;
        unsigned int v24 = v22 >> 7;
        if (v22 >> 14)
        {
          unint64_t v23 = v4 + 4;
          do
          {
            *(v23 - sub_1000333D0((uint64_t *)this + 1) = v24 | 0x80;
            unsigned int v25 = v24 >> 7;
            ++v23;
            unsigned int v26 = v24 >> 14;
            v24 >>= 7;
          }
          while (v26);
          *(v23 - sub_1000333D0((uint64_t *)this + 1) = v25;
        }
        else
        {
          v4[3] = v24;
          unint64_t v23 = v4 + 4;
        }
      }
      else
      {
        uint64_t v4[2] = v22;
        unint64_t v23 = v4 + 3;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v21, v23, a3);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::FieldOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v29 = *((void *)this + 1);
  if (v29)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v29 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v28);
  }
  return result;
}

char *google::protobuf::FieldOptions::ByteSizeLong(google::protobuf::FieldOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::FieldOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unint64_t v8 = *v6++;
      unint64_t v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *((_DWORD *)this + 10);
  if ((v10 & 0x3F) != 0)
  {
    if (v10)
    {
      int v11 = *((_DWORD *)this + 18);
      if (v11 < 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v12);
    }
    unsigned __int8 v13 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((v10 & 2) == 0) {
      unsigned __int8 v13 = v4;
    }
    if ((v10 & 4) != 0) {
      unsigned __int8 v13 = (const google::protobuf::UnknownFieldSet *)((char *)v13 + 2);
    }
    if ((v10 & 8) != 0) {
      unsigned __int8 v13 = (const google::protobuf::UnknownFieldSet *)((char *)v13 + 2);
    }
    if ((v10 & 0x10) != 0) {
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v13 + 2);
    }
    else {
      uint64_t v4 = v13;
    }
    if ((v10 & 0x20) != 0)
    {
      int v14 = *((_DWORD *)this + 20);
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v14 >= 0) {
        uint64_t v16 = v15;
      }
      else {
        uint64_t v16 = 11;
      }
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v16);
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FieldOptions *)((char *)this + 8), v4, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 1sub_1000333D0((uint64_t *)this + 1) = v4;
    return (char *)v4;
  }
}

void google::protobuf::FieldOptions::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::FieldOptions::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void google::protobuf::FieldOptions::CopyFrom(google::protobuf::FieldOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::FieldOptions::Clear(this);
    google::protobuf::FieldOptions::MergeFrom((std::string *)this, a2);
  }
}

void google::protobuf::FieldOptions::CopyFrom(google::protobuf::FieldOptions *this, const google::protobuf::FieldOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::FieldOptions::Clear(this);
    google::protobuf::FieldOptions::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::FieldOptions::GetMetadata(google::protobuf::FieldOptions *this)
{
  return off_1001EAAD0[30];
}

uint64_t google::protobuf::OneofOptions::OneofOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CFF18;
  *(void *)(a1 + 8) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet(a1 + 16, a2);
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 5sub_1000FA614((void *)this + 6) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  if (atomic_load_explicit(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return a1;
}

void sub_1000F24DC(_Unwind_Exception *a1)
{
  sub_1000FA614(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::OneofOptions::~OneofOptions(google::protobuf::OneofOptions *this)
{
}

{
  uint64_t vars8;

  google::protobuf::OneofOptions::~OneofOptions(this);
  operator delete();
}

uint64_t google::protobuf::OneofOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

void *google::protobuf::OneofOptions::default_instance(google::protobuf::OneofOptions *this)
{
  if (atomic_load_explicit(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_OneofOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_OneofOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::OneofOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  unsigned int v22 = a2;
  if ((sub_1000355B8((uint64_t)a3, &v22, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      int v6 = (google::protobuf::internal *)((char *)v22 + 1);
      LODWORD(v7) = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      uint64_t v7 = (const char *)(v7 + (*(unsigned __int8 *)v6 << 7) - 128);
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, v7);
      unsigned int v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      int v6 = TagFallback;
LABEL_7:
      if (v7 == 7994)
      {
        int v11 = (google::protobuf::internal *)((char *)v6 - 2);
        while (1)
        {
          uint64_t v12 = (google::protobuf::internal *)((char *)v11 + 2);
          unsigned int v22 = (google::protobuf::internal *)((char *)v11 + 2);
          unsigned __int8 v13 = *(int **)(a1 + 56);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 48);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 52))
            {
LABEL_20:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 40), v15 + 1);
              unsigned __int8 v13 = *(int **)(a1 + 56);
              int v15 = *v13;
            }
            int *v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(void *)(a1 + 40));
            uint64_t v17 = *(void *)(a1 + 56);
            uint64_t v18 = *(int *)(a1 + 48);
            *(_DWORD *)(a1 + 48) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            uint64_t v12 = v22;
            goto LABEL_22;
          }
          *(_DWORD *)(a1 + 48) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_22:
          int v11 = sub_1000E89B0((uint64_t)a3, v16, v12);
          unsigned int v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(_WORD *)v11 != 16058) {
            goto LABEL_30;
          }
        }
        int v15 = *(_DWORD *)(a1 + 52);
        goto LABEL_20;
      }
      if (v7) {
        BOOL v8 = (v7 & 7) == 4;
      }
      else {
        BOOL v8 = 1;
      }
      if (v8)
      {
        a3[10].i32[0] = v7 - 1;
        return v22;
      }
      unint64_t v9 = v7;
      if (v7 >> 6 < 0x7D)
      {
        if (*v5)
        {
          int v19 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          int v19 = sub_10003562C((unint64_t *)(a1 + 8));
          int v6 = v22;
        }
        int v10 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v19, v6);
      }
      else
      {
        int v10 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v7, v6, (uint64_t)&google::protobuf::_OneofOptions_default_instance_, (unint64_t *)(a1 + 8), a3);
      }
      unsigned int v22 = v10;
      if (!v10) {
        return 0;
      }
LABEL_30:
      if (sub_1000355B8((uint64_t)a3, &v22, a3[11].i32[1])) {
        return v22;
      }
    }
    int v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    unsigned int v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

const google::protobuf::UnknownFieldSet *google::protobuf::OneofOptions::_InternalSerialize(google::protobuf::OneofOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6 = *((_DWORD *)this + 12);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      BOOL v8 = *(google::protobuf::UninterpretedOption **)(*((void *)this + 7) + 8 * i + 8);
      *(_WORD *)a2 = 16058;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[2] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 4;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[3] = v11;
          int v10 = a2 + 4;
        }
      }
      else
      {
        a2[2] = v9;
        int v10 = a2 + 3;
      }
      a2 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v8, v10, a3);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::OneofOptions *)((char *)this + 16), 1000, 0x20000000, a2, a3);
  uint64_t v16 = *((void *)this + 1);
  if (v16)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v16 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v15);
  }
  return result;
}

char *google::protobuf::OneofOptions::ByteSizeLong(google::protobuf::OneofOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::OneofOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 12);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 7);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      BOOL v8 = *v6++;
      unsigned int v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::OneofOptions *)((char *)this + 8), v4, (_DWORD *)this + 16);
  }
  else
  {
    *((_DWORD *)this + 1sub_1000FA614((void *)this + 6) = v4;
    return (char *)v4;
  }
}

void google::protobuf::OneofOptions::MergeFrom(google::protobuf::OneofOptions *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::OneofOptions::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::OneofOptions::CopyFrom(google::protobuf::OneofOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::OneofOptions::Clear(this);
    google::protobuf::OneofOptions::MergeFrom(this, a2);
  }
}

void google::protobuf::OneofOptions::CopyFrom(google::protobuf::OneofOptions *this, const google::protobuf::OneofOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::OneofOptions::Clear(this);
    google::protobuf::OneofOptions::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::OneofOptions::GetMetadata(google::protobuf::OneofOptions *this)
{
  return off_1001EAAD0[32];
}

uint64_t google::protobuf::EnumOptions::EnumOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CFFC8;
  *(void *)(a1 + 8) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet(a1 + 16, a2);
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *(void *)(a1 + 5sub_1000FA614((void *)this + 6) = 0;
  *(void *)(a1 + 64) = 0;
  if (atomic_load_explicit(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(_WORD *)(a1 + 7sub_1000F9B58((void *)this + 2) = 0;
  return a1;
}

void sub_1000F2BF0(_Unwind_Exception *a1)
{
  sub_1000FA614(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumOptions::~EnumOptions(google::protobuf::EnumOptions *this)
{
}

{
  uint64_t vars8;

  google::protobuf::EnumOptions::~EnumOptions(this);
  operator delete();
}

uint64_t google::protobuf::EnumOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::EnumOptions::default_instance(google::protobuf::EnumOptions *this)
{
  if (atomic_load_explicit(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_EnumOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::EnumOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  int v35 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v35, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      BOOL v8 = (google::protobuf::internal *)((char *)v35 + 1);
      LODWORD(v9) = *(unsigned __int8 *)v35;
      if ((*(char *)v35 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = (const char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v35, v9);
      int v35 = TagFallback;
      if (!TagFallback) {
        goto LABEL_56;
      }
      BOOL v8 = TagFallback;
LABEL_8:
      unsigned int v10 = v9 >> 3;
      if (v9 >> 3 == 999)
      {
        if (v9 != 58)
        {
LABEL_14:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            a3[10].i32[0] = v9 - 1;
            goto LABEL_2;
          }
          unint64_t v13 = v9;
          if (v9 >> 6 < 0x7D)
          {
            if (*v7)
            {
              int v30 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              int v30 = sub_10003562C((unint64_t *)(a1 + 8));
              BOOL v8 = v35;
            }
            uint64_t v14 = google::protobuf::internal::UnknownFieldParse(v13, (google::protobuf::UnknownFieldSet *)v30, v8);
          }
          else
          {
            uint64_t v14 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, v8, (uint64_t)&google::protobuf::_EnumOptions_default_instance_, (unint64_t *)(a1 + 8), a3);
          }
          int v35 = v14;
          if (!v14)
          {
LABEL_56:
            int v35 = 0;
            goto LABEL_2;
          }
          goto LABEL_48;
        }
        int v15 = (google::protobuf::internal *)((char *)v8 - 2);
        while (2)
        {
          uint64_t v16 = (google::protobuf::internal *)((char *)v15 + 2);
          int v35 = (google::protobuf::internal *)((char *)v15 + 2);
          uint64_t v17 = *(int **)(a1 + 64);
          if (v17)
          {
            uint64_t v18 = *(int *)(a1 + 56);
            int v19 = *v17;
            if ((int)v18 < *v17)
            {
              *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v18 + 1;
              uint64_t v20 = *(void *)&v17[2 * v18 + 2];
              goto LABEL_29;
            }
            if (v19 == *(_DWORD *)(a1 + 60))
            {
LABEL_27:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v19 + 1);
              uint64_t v17 = *(int **)(a1 + 64);
              int v19 = *v17;
            }
            int *v17 = v19 + 1;
            uint64_t v20 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(void *)(a1 + 48));
            uint64_t v21 = *(void *)(a1 + 64);
            uint64_t v22 = *(int *)(a1 + 56);
            *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v22 + 1;
            *(void *)(v21 + 8 * v22 + 8) = v20;
            uint64_t v16 = v35;
LABEL_29:
            int v15 = sub_1000E89B0((uint64_t)a3, v20, v16);
            int v35 = v15;
            if (!v15) {
              goto LABEL_56;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *(_WORD *)v15 != 16058) {
              goto LABEL_48;
            }
            continue;
          }
          break;
        }
        int v19 = *(_DWORD *)(a1 + 60);
        goto LABEL_27;
      }
      if (v10 == 3)
      {
        if (v9 != 24) {
          goto LABEL_14;
        }
        v5 |= 2u;
        unint64_t v23 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v24 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v25 = *(char *)v23;
        unint64_t v24 = v24 + (v25 << 7) - 128;
        if ((v25 & 0x80000000) == 0)
        {
          unint64_t v23 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
          int v35 = v23;
          *(unsigned char *)(a1 + 73) = v24 != 0;
          goto LABEL_48;
        }
        unint64_t v31 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v24);
        int v35 = v31;
        *(unsigned char *)(a1 + 73) = v32 != 0;
        if (!v31) {
          goto LABEL_56;
        }
      }
      else
      {
        if (v10 != 2 || v9 != 16) {
          goto LABEL_14;
        }
        v5 |= 1u;
        unsigned int v26 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v27 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v28 = *(char *)v26;
        unint64_t v27 = v27 + (v28 << 7) - 128;
        if ((v28 & 0x80000000) == 0)
        {
          unsigned int v26 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_41:
          int v35 = v26;
          *(unsigned char *)(a1 + 7sub_1000F9B58((void *)this + 2) = v27 != 0;
          goto LABEL_48;
        }
        uint64_t v33 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v27);
        int v35 = v33;
        *(unsigned char *)(a1 + 7sub_1000F9B58((void *)this + 2) = v34 != 0;
        if (!v33) {
          goto LABEL_56;
        }
      }
LABEL_48:
      if (sub_1000355B8((uint64_t)a3, &v35, a3[11].i32[1])) {
        goto LABEL_2;
      }
    }
    BOOL v8 = (google::protobuf::internal *)((char *)v35 + 2);
LABEL_7:
    int v35 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v35;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumOptions::_InternalSerialize(google::protobuf::EnumOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned __int8 v7 = *((unsigned char *)this + 72);
    *uint64_t v4 = 16;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned __int8 v8 = *((unsigned char *)this + 73);
    *uint64_t v4 = 24;
    v4[1] = v8;
    v4 += 2;
  }
  int v9 = *((_DWORD *)this + 14);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unsigned int v11 = *(google::protobuf::UninterpretedOption **)(*((void *)this + 8) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 16058;
      unsigned int v12 = *((_DWORD *)v11 + 5);
      if (v12 > 0x7F)
      {
        uint64_t v4[2] = v12 | 0x80;
        unsigned int v14 = v12 >> 7;
        if (v12 >> 14)
        {
          unint64_t v13 = v4 + 4;
          do
          {
            *(v13 - sub_1000333D0((uint64_t *)this + 1) = v14 | 0x80;
            unsigned int v15 = v14 >> 7;
            ++v13;
            unsigned int v16 = v14 >> 14;
            v14 >>= 7;
          }
          while (v16);
          *(v13 - sub_1000333D0((uint64_t *)this + 1) = v15;
        }
        else
        {
          v4[3] = v14;
          unint64_t v13 = v4 + 4;
        }
      }
      else
      {
        uint64_t v4[2] = v12;
        unint64_t v13 = v4 + 3;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v11, v13, a3);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::EnumOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v19 = *((void *)this + 1);
  if (v19)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v19 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v18);
  }
  return result;
}

char *google::protobuf::EnumOptions::ByteSizeLong(google::protobuf::EnumOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::EnumOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unsigned __int8 v8 = *v6++;
      int v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *((_DWORD *)this + 10);
  unsigned int v11 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
  if ((v10 & 1) == 0) {
    unsigned int v11 = v4;
  }
  if ((v10 & 2) != 0) {
    unsigned int v11 = (const google::protobuf::UnknownFieldSet *)((char *)v11 + 2);
  }
  if ((v10 & 3) != 0) {
    unsigned int v12 = v11;
  }
  else {
    unsigned int v12 = v4;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumOptions *)((char *)this + 8), v12, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 1sub_1000333D0((uint64_t *)this + 1) = v12;
    return (char *)v12;
  }
}

void google::protobuf::EnumOptions::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::EnumOptions::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void google::protobuf::EnumOptions::CopyFrom(google::protobuf::EnumOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::EnumOptions::Clear(this);
    google::protobuf::EnumOptions::MergeFrom((std::string *)this, a2);
  }
}

void google::protobuf::EnumOptions::CopyFrom(google::protobuf::EnumOptions *this, const google::protobuf::EnumOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::EnumOptions::Clear(this);
    google::protobuf::EnumOptions::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::EnumOptions::GetMetadata(google::protobuf::EnumOptions *this)
{
  return off_1001EAAD0[34];
}

uint64_t google::protobuf::EnumValueOptions::EnumValueOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D0078;
  *(void *)(a1 + 8) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet(a1 + 16, a2);
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *(void *)(a1 + 5sub_1000FA614((void *)this + 6) = 0;
  *(void *)(a1 + 64) = 0;
  if (atomic_load_explicit(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(unsigned char *)(a1 + 7sub_1000F9B58((void *)this + 2) = 0;
  return a1;
}

void sub_1000F349C(_Unwind_Exception *a1)
{
  sub_1000FA614(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueOptions::~EnumValueOptions(google::protobuf::EnumValueOptions *this)
{
}

{
  uint64_t vars8;

  google::protobuf::EnumValueOptions::~EnumValueOptions(this);
  operator delete();
}

uint64_t google::protobuf::EnumValueOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::EnumValueOptions::default_instance(google::protobuf::EnumValueOptions *this)
{
  if (atomic_load_explicit(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumValueOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_EnumValueOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::EnumValueOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v29, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unsigned __int8 v8 = (google::protobuf::internal *)((char *)v29 + 1);
      LODWORD(v9) = *(unsigned __int8 *)v29;
      if ((*(char *)v29 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      int v9 = (const char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v29, v9);
      uint64_t v29 = TagFallback;
      if (!TagFallback) {
        goto LABEL_48;
      }
      unsigned __int8 v8 = TagFallback;
LABEL_8:
      if (v9 >> 3 == 999)
      {
        if (v9 != 58)
        {
LABEL_13:
          if (v9) {
            BOOL v11 = (v9 & 7) == 4;
          }
          else {
            BOOL v11 = 1;
          }
          if (v11)
          {
            a3[10].i32[0] = v9 - 1;
            goto LABEL_2;
          }
          unint64_t v12 = v9;
          if (v9 >> 6 < 0x7D)
          {
            if (*v7)
            {
              int v25 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              int v25 = sub_10003562C((unint64_t *)(a1 + 8));
              unsigned __int8 v8 = v29;
            }
            unint64_t v13 = google::protobuf::internal::UnknownFieldParse(v12, (google::protobuf::UnknownFieldSet *)v25, v8);
          }
          else
          {
            unint64_t v13 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, v8, (uint64_t)&google::protobuf::_EnumValueOptions_default_instance_, (unint64_t *)(a1 + 8), a3);
          }
          uint64_t v29 = v13;
          if (!v13)
          {
LABEL_48:
            uint64_t v29 = 0;
            goto LABEL_2;
          }
          goto LABEL_40;
        }
        unsigned int v14 = (google::protobuf::internal *)((char *)v8 - 2);
        while (2)
        {
          unsigned int v15 = (google::protobuf::internal *)((char *)v14 + 2);
          uint64_t v29 = (google::protobuf::internal *)((char *)v14 + 2);
          unsigned int v16 = *(int **)(a1 + 64);
          if (v16)
          {
            uint64_t v17 = *(int *)(a1 + 56);
            int v18 = *v16;
            if ((int)v17 < *v16)
            {
              *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
              goto LABEL_28;
            }
            if (v18 == *(_DWORD *)(a1 + 60))
            {
LABEL_26:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v18 + 1);
              unsigned int v16 = *(int **)(a1 + 64);
              int v18 = *v16;
            }
            int *v16 = v18 + 1;
            uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(void *)(a1 + 48));
            uint64_t v20 = *(void *)(a1 + 64);
            uint64_t v21 = *(int *)(a1 + 56);
            *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v21 + 1;
            *(void *)(v20 + 8 * v21 + 8) = v19;
            unsigned int v15 = v29;
LABEL_28:
            unsigned int v14 = sub_1000E89B0((uint64_t)a3, v19, v15);
            uint64_t v29 = v14;
            if (!v14) {
              goto LABEL_48;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(_WORD *)v14 != 16058) {
              goto LABEL_40;
            }
            continue;
          }
          break;
        }
        int v18 = *(_DWORD *)(a1 + 60);
        goto LABEL_26;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 1);
      unint64_t v23 = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_35;
      }
      int v24 = *(char *)v22;
      unint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_35:
        uint64_t v29 = v22;
        *(unsigned char *)(a1 + 7sub_1000F9B58((void *)this + 2) = v23 != 0;
        int v5 = 1;
        goto LABEL_40;
      }
      unint64_t v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v23);
      uint64_t v29 = v27;
      *(unsigned char *)(a1 + 7sub_1000F9B58((void *)this + 2) = v28 != 0;
      int v5 = 1;
      if (!v27) {
        goto LABEL_48;
      }
LABEL_40:
      if (sub_1000355B8((uint64_t)a3, &v29, a3[11].i32[1])) {
        goto LABEL_2;
      }
    }
    unsigned __int8 v8 = (google::protobuf::internal *)((char *)v29 + 2);
LABEL_7:
    uint64_t v29 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v29;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumValueOptions::_InternalSerialize(google::protobuf::EnumValueOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned __int8 v6 = *((unsigned char *)this + 72);
    *uint64_t v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  int v7 = *((_DWORD *)this + 14);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v9 = *(google::protobuf::UninterpretedOption **)(*((void *)this + 8) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 16058;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        uint64_t v4[2] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          BOOL v11 = v4 + 4;
          do
          {
            *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - sub_1000333D0((uint64_t *)this + 1) = v13;
        }
        else
        {
          v4[3] = v12;
          BOOL v11 = v4 + 4;
        }
      }
      else
      {
        uint64_t v4[2] = v10;
        BOOL v11 = v4 + 3;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v9, v11, a3);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::EnumValueOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v17 = *((void *)this + 1);
  if (v17)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v16);
  }
  return result;
}

char *google::protobuf::EnumValueOptions::ByteSizeLong(google::protobuf::EnumValueOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::EnumValueOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = v2 + 2 * v3;
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    unsigned __int8 v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    unsigned __int8 v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unsigned __int8 v8 = *v6++;
      int v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      v4 += (uint64_t)&v9[(9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6];
      v7 -= 8;
    }
    while (v7);
  }
  if (*((unsigned char *)this + 40)) {
    unsigned int v10 = (const google::protobuf::UnknownFieldSet *)(v4 + 2);
  }
  else {
    unsigned int v10 = (const google::protobuf::UnknownFieldSet *)v4;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumValueOptions *)((char *)this + 8), v10, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 1sub_1000333D0((uint64_t *)this + 1) = v10;
    return (char *)v10;
  }
}

void google::protobuf::EnumValueOptions::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::EnumValueOptions::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void google::protobuf::EnumValueOptions::CopyFrom(google::protobuf::EnumValueOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::EnumValueOptions::Clear(this);
    google::protobuf::EnumValueOptions::MergeFrom((std::string *)this, a2);
  }
}

void google::protobuf::EnumValueOptions::CopyFrom(google::protobuf::EnumValueOptions *this, const google::protobuf::EnumValueOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::EnumValueOptions::Clear(this);
    google::protobuf::EnumValueOptions::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::EnumValueOptions::GetMetadata(google::protobuf::EnumValueOptions *this)
{
  return off_1001EAAD0[36];
}

uint64_t google::protobuf::ServiceOptions::ServiceOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D0128;
  *(void *)(a1 + 8) = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet(a1 + 16, a2);
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *(void *)(a1 + 5sub_1000FA614((void *)this + 6) = 0;
  *(void *)(a1 + 64) = 0;
  if (atomic_load_explicit(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(unsigned char *)(a1 + 7sub_1000F9B58((void *)this + 2) = 0;
  return a1;
}

void sub_1000F3C8C(_Unwind_Exception *a1)
{
  sub_1000FA614(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::ServiceOptions::~ServiceOptions(google::protobuf::ServiceOptions *this)
{
}

{
  uint64_t vars8;

  google::protobuf::ServiceOptions::~ServiceOptions(this);
  operator delete();
}

uint64_t google::protobuf::ServiceOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::ServiceOptions::default_instance(google::protobuf::ServiceOptions *this)
{
  if (atomic_load_explicit(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ServiceOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_ServiceOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::ServiceOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v29, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unsigned __int8 v8 = (google::protobuf::internal *)((char *)v29 + 1);
      LODWORD(v9) = *(unsigned __int8 *)v29;
      if ((*(char *)v29 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      int v9 = (const char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v29, v9);
      uint64_t v29 = TagFallback;
      if (!TagFallback) {
        goto LABEL_48;
      }
      unsigned __int8 v8 = TagFallback;
LABEL_8:
      if (v9 >> 3 == 999)
      {
        if (v9 != 58)
        {
LABEL_13:
          if (v9) {
            BOOL v11 = (v9 & 7) == 4;
          }
          else {
            BOOL v11 = 1;
          }
          if (v11)
          {
            a3[10].i32[0] = v9 - 1;
            goto LABEL_2;
          }
          unint64_t v12 = v9;
          if (v9 >> 6 < 0x7D)
          {
            if (*v7)
            {
              int v25 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              int v25 = sub_10003562C((unint64_t *)(a1 + 8));
              unsigned __int8 v8 = v29;
            }
            unsigned int v13 = google::protobuf::internal::UnknownFieldParse(v12, (google::protobuf::UnknownFieldSet *)v25, v8);
          }
          else
          {
            unsigned int v13 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, v8, (uint64_t)&google::protobuf::_ServiceOptions_default_instance_, (unint64_t *)(a1 + 8), a3);
          }
          uint64_t v29 = v13;
          if (!v13)
          {
LABEL_48:
            uint64_t v29 = 0;
            goto LABEL_2;
          }
          goto LABEL_40;
        }
        unsigned int v14 = (google::protobuf::internal *)((char *)v8 - 2);
        while (2)
        {
          unsigned int v15 = (google::protobuf::internal *)((char *)v14 + 2);
          uint64_t v29 = (google::protobuf::internal *)((char *)v14 + 2);
          unsigned int v16 = *(int **)(a1 + 64);
          if (v16)
          {
            uint64_t v17 = *(int *)(a1 + 56);
            int v18 = *v16;
            if ((int)v17 < *v16)
            {
              *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
              goto LABEL_28;
            }
            if (v18 == *(_DWORD *)(a1 + 60))
            {
LABEL_26:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v18 + 1);
              unsigned int v16 = *(int **)(a1 + 64);
              int v18 = *v16;
            }
            int *v16 = v18 + 1;
            uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(void *)(a1 + 48));
            uint64_t v20 = *(void *)(a1 + 64);
            uint64_t v21 = *(int *)(a1 + 56);
            *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v21 + 1;
            *(void *)(v20 + 8 * v21 + 8) = v19;
            unsigned int v15 = v29;
LABEL_28:
            unsigned int v14 = sub_1000E89B0((uint64_t)a3, v19, v15);
            uint64_t v29 = v14;
            if (!v14) {
              goto LABEL_48;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(_WORD *)v14 != 16058) {
              goto LABEL_40;
            }
            continue;
          }
          break;
        }
        int v18 = *(_DWORD *)(a1 + 60);
        goto LABEL_26;
      }
      if (v9 >> 3 != 33 || v9 != 8) {
        goto LABEL_13;
      }
      uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 1);
      unint64_t v23 = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_35;
      }
      int v24 = *(char *)v22;
      unint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_35:
        uint64_t v29 = v22;
        *(unsigned char *)(a1 + 7sub_1000F9B58((void *)this + 2) = v23 != 0;
        int v5 = 1;
        goto LABEL_40;
      }
      unint64_t v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v23);
      uint64_t v29 = v27;
      *(unsigned char *)(a1 + 7sub_1000F9B58((void *)this + 2) = v28 != 0;
      int v5 = 1;
      if (!v27) {
        goto LABEL_48;
      }
LABEL_40:
      if (sub_1000355B8((uint64_t)a3, &v29, a3[11].i32[1])) {
        goto LABEL_2;
      }
    }
    unsigned __int8 v8 = (google::protobuf::internal *)((char *)v29 + 2);
LABEL_7:
    uint64_t v29 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v29;
}

const google::protobuf::UnknownFieldSet *google::protobuf::ServiceOptions::_InternalSerialize(google::protobuf::ServiceOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned __int8 v6 = *((unsigned char *)this + 72);
    *(_WORD *)uint64_t v4 = 648;
    uint64_t v4[2] = v6;
    v4 += 3;
  }
  int v7 = *((_DWORD *)this + 14);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v9 = *(google::protobuf::UninterpretedOption **)(*((void *)this + 8) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 16058;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        uint64_t v4[2] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          BOOL v11 = v4 + 4;
          do
          {
            *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - sub_1000333D0((uint64_t *)this + 1) = v13;
        }
        else
        {
          v4[3] = v12;
          BOOL v11 = v4 + 4;
        }
      }
      else
      {
        uint64_t v4[2] = v10;
        BOOL v11 = v4 + 3;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v9, v11, a3);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::ServiceOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v17 = *((void *)this + 1);
  if (v17)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v16);
  }
  return result;
}

char *google::protobuf::ServiceOptions::ByteSizeLong(google::protobuf::ServiceOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::ServiceOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = v2 + 2 * v3;
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    unsigned __int8 v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    unsigned __int8 v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unsigned __int8 v8 = *v6++;
      int v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      v4 += (uint64_t)&v9[(9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6];
      v7 -= 8;
    }
    while (v7);
  }
  if (*((unsigned char *)this + 40)) {
    unsigned int v10 = (const google::protobuf::UnknownFieldSet *)(v4 + 3);
  }
  else {
    unsigned int v10 = (const google::protobuf::UnknownFieldSet *)v4;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::ServiceOptions *)((char *)this + 8), v10, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 1sub_1000333D0((uint64_t *)this + 1) = v10;
    return (char *)v10;
  }
}

void google::protobuf::ServiceOptions::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::ServiceOptions::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void google::protobuf::ServiceOptions::CopyFrom(google::protobuf::ServiceOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::ServiceOptions::Clear(this);
    google::protobuf::ServiceOptions::MergeFrom((std::string *)this, a2);
  }
}

void google::protobuf::ServiceOptions::CopyFrom(google::protobuf::ServiceOptions *this, const google::protobuf::ServiceOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::ServiceOptions::Clear(this);
    google::protobuf::ServiceOptions::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::ServiceOptions::GetMetadata(google::protobuf::ServiceOptions *this)
{
  return off_1001EAAD0[38];
}

void *google::protobuf::MethodOptions::MethodOptions(void *a1, uint64_t a2)
{
  *a1 = off_1001D01D8;
  a1[1] = a2;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)(a1 + 2), a2);
  a1[6] = a2;
  a1[5] = 0;
  a1[7] = 0;
  a1[8] = 0;
  if (atomic_load_explicit(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  a1[9] = 0;
  return a1;
}

void sub_1000F447C(_Unwind_Exception *a1)
{
  sub_1000FA614(v2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::MethodOptions::~MethodOptions(google::protobuf::MethodOptions *this)
{
}

{
  uint64_t vars8;

  google::protobuf::MethodOptions::~MethodOptions(this);
  operator delete();
}

uint64_t google::protobuf::MethodOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void *google::protobuf::MethodOptions::default_instance(google::protobuf::MethodOptions *this)
{
  if (atomic_load_explicit(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MethodOptions_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_MethodOptions_default_instance_;
}

google::protobuf::internal *google::protobuf::MethodOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  BOOL v36 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v36, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unsigned __int8 v8 = (google::protobuf::internal *)((char *)v36 + 1);
      LODWORD(v9) = *(unsigned __int8 *)v36;
      if ((*(char *)v36 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      int v9 = (const char *)(v9 + (*(unsigned __int8 *)v8 << 7) - 128);
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v36, v9);
      BOOL v36 = TagFallback;
      if (!TagFallback) {
        goto LABEL_62;
      }
      unsigned __int8 v8 = TagFallback;
LABEL_8:
      unsigned int v10 = v9 >> 3;
      if (v9 >> 3 == 999)
      {
        if (v9 != 58)
        {
LABEL_14:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            a3[10].i32[0] = v9 - 1;
            goto LABEL_2;
          }
          unint64_t v13 = v9;
          if (v9 >> 6 < 0x7D)
          {
            if (*v7)
            {
              int v30 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              int v30 = sub_10003562C((unint64_t *)(a1 + 8));
              unsigned __int8 v8 = v36;
            }
            unsigned int v14 = google::protobuf::internal::UnknownFieldParse(v13, (google::protobuf::UnknownFieldSet *)v30, v8);
          }
          else
          {
            unsigned int v14 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField((google::protobuf::internal::ExtensionSet *)(a1 + 16), v9, v8, (uint64_t)google::protobuf::_MethodOptions_default_instance_, (unint64_t *)(a1 + 8), a3);
          }
          BOOL v36 = v14;
          if (!v14)
          {
LABEL_62:
            BOOL v36 = 0;
            goto LABEL_2;
          }
          goto LABEL_50;
        }
        unsigned int v15 = (google::protobuf::internal *)((char *)v8 - 2);
        while (2)
        {
          unsigned int v16 = (google::protobuf::internal *)((char *)v15 + 2);
          BOOL v36 = (google::protobuf::internal *)((char *)v15 + 2);
          uint64_t v17 = *(int **)(a1 + 64);
          if (v17)
          {
            uint64_t v18 = *(int *)(a1 + 56);
            int v19 = *v17;
            if ((int)v18 < *v17)
            {
              *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v18 + 1;
              uint64_t v20 = *(void *)&v17[2 * v18 + 2];
              goto LABEL_29;
            }
            if (v19 == *(_DWORD *)(a1 + 60))
            {
LABEL_27:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v19 + 1);
              uint64_t v17 = *(int **)(a1 + 64);
              int v19 = *v17;
            }
            int *v17 = v19 + 1;
            uint64_t v20 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(*(void *)(a1 + 48));
            uint64_t v21 = *(void *)(a1 + 64);
            uint64_t v22 = *(int *)(a1 + 56);
            *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v22 + 1;
            *(void *)(v21 + 8 * v22 + 8) = v20;
            unsigned int v16 = v36;
LABEL_29:
            unsigned int v15 = sub_1000E89B0((uint64_t)a3, v20, v16);
            BOOL v36 = v15;
            if (!v15) {
              goto LABEL_62;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *(_WORD *)v15 != 16058) {
              goto LABEL_50;
            }
            continue;
          }
          break;
        }
        int v19 = *(_DWORD *)(a1 + 60);
        goto LABEL_27;
      }
      if (v10 == 34)
      {
        if (v9 == 16)
        {
          unint64_t v23 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v24 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_37;
          }
          int v25 = *(char *)v23;
          unint64_t v24 = v24 + (v25 << 7) - 128;
          if (v25 < 0)
          {
            BOOL v36 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v24);
            if (!v36) {
              goto LABEL_62;
            }
            unint64_t v24 = v31;
          }
          else
          {
            unint64_t v23 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
            BOOL v36 = v23;
          }
          if (v24 > 2)
          {
            if (*v7)
            {
              uint64_t v34 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              unint64_t v35 = v24;
              uint64_t v34 = sub_10003562C((unint64_t *)(a1 + 8));
              unint64_t v24 = v35;
            }
            google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v34, 0x22u, v24);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 2u;
            *(_DWORD *)(a1 + 7sub_1000FA614((void *)this + 6) = v24;
          }
          goto LABEL_50;
        }
        goto LABEL_14;
      }
      if (v10 != 33 || v9 != 8) {
        goto LABEL_14;
      }
      unsigned int v26 = (google::protobuf::internal *)((char *)v8 + 1);
      unint64_t v27 = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_43;
      }
      int v28 = *(char *)v26;
      unint64_t v27 = v27 + (v28 << 7) - 128;
      if ((v28 & 0x80000000) == 0)
      {
        unsigned int v26 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_43:
        BOOL v36 = v26;
        *(unsigned char *)(a1 + 7sub_1000F9B58((void *)this + 2) = v27 != 0;
        int v5 = 1;
        goto LABEL_50;
      }
      uint64_t v32 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v27);
      BOOL v36 = v32;
      *(unsigned char *)(a1 + 7sub_1000F9B58((void *)this + 2) = v33 != 0;
      int v5 = 1;
      if (!v32) {
        goto LABEL_62;
      }
LABEL_50:
      if (sub_1000355B8((uint64_t)a3, &v36, a3[11].i32[1])) {
        goto LABEL_2;
      }
    }
    unsigned __int8 v8 = (google::protobuf::internal *)((char *)v36 + 2);
LABEL_7:
    BOOL v36 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v36;
}

const google::protobuf::UnknownFieldSet *google::protobuf::MethodOptions::_InternalSerialize(google::protobuf::MethodOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 10);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned __int8 v7 = *((unsigned char *)this + 72);
    *(_WORD *)uint64_t v4 = 648;
    uint64_t v4[2] = v7;
    v4 += 3;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v8 = *((int *)this + 19);
    *(_WORD *)uint64_t v4 = 656;
    if (v8 > 0x7F)
    {
      uint64_t v4[2] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      if (v8 >> 14)
      {
        v4 += 4;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
          unint64_t v10 = v9 >> 7;
          ++v4;
          unint64_t v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v10;
      }
      else
      {
        v4[3] = v9;
        v4 += 4;
      }
    }
    else
    {
      uint64_t v4[2] = v8;
      v4 += 3;
    }
  }
  int v12 = *((_DWORD *)this + 14);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unsigned int v14 = *(google::protobuf::UninterpretedOption **)(*((void *)this + 8) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 16058;
      unsigned int v15 = *((_DWORD *)v14 + 5);
      if (v15 > 0x7F)
      {
        uint64_t v4[2] = v15 | 0x80;
        unsigned int v17 = v15 >> 7;
        if (v15 >> 14)
        {
          unsigned int v16 = v4 + 4;
          do
          {
            *(v16 - sub_1000333D0((uint64_t *)this + 1) = v17 | 0x80;
            unsigned int v18 = v17 >> 7;
            ++v16;
            unsigned int v19 = v17 >> 14;
            v17 >>= 7;
          }
          while (v19);
          *(v16 - sub_1000333D0((uint64_t *)this + 1) = v18;
        }
        else
        {
          v4[3] = v17;
          unsigned int v16 = v4 + 4;
        }
      }
      else
      {
        uint64_t v4[2] = v15;
        unsigned int v16 = v4 + 3;
      }
      uint64_t v4 = (unsigned __int8 *)google::protobuf::UninterpretedOption::_InternalSerialize(v14, v16, a3);
    }
  }
  uint64_t result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((google::protobuf::MethodOptions *)((char *)this + 16), 1000, 0x20000000, v4, a3);
  uint64_t v22 = *((void *)this + 1);
  if (v22)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v22 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v21);
  }
  return result;
}

char *google::protobuf::MethodOptions::ByteSizeLong(google::protobuf::MethodOptions *this)
{
  uint64_t v2 = google::protobuf::internal::ExtensionSet::ByteSize((google::protobuf::MethodOptions *)((char *)this + 16));
  uint64_t v3 = *((int *)this + 14);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + 2 * v3);
  uint64_t v5 = *((void *)this + 8);
  if (v5) {
    int v6 = (google::protobuf::UninterpretedOption **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unint64_t v8 = *v6++;
      unint64_t v9 = google::protobuf::UninterpretedOption::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *((_DWORD *)this + 10);
  if ((v10 & 3) != 0)
  {
    if (v10) {
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
    }
    if ((v10 & 2) != 0)
    {
      int v11 = *((_DWORD *)this + 19);
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v11 >= 0) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 12;
      }
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v13);
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::MethodOptions *)((char *)this + 8), v4, (_DWORD *)this + 11);
  }
  else
  {
    *((_DWORD *)this + 1sub_1000333D0((uint64_t *)this + 1) = v4;
    return (char *)v4;
  }
}

void google::protobuf::MethodOptions::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::MethodOptions::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void google::protobuf::MethodOptions::CopyFrom(google::protobuf::MethodOptions *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::MethodOptions::Clear(this);
    google::protobuf::MethodOptions::MergeFrom((std::string *)this, a2);
  }
}

void google::protobuf::MethodOptions::CopyFrom(google::protobuf::MethodOptions *this, const google::protobuf::MethodOptions *a2)
{
  if (a2 != this)
  {
    google::protobuf::MethodOptions::Clear(this);
    google::protobuf::MethodOptions::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::MethodOptions::GetMetadata(google::protobuf::MethodOptions *this)
{
  return off_1001EAAD0[40];
}

uint64_t google::protobuf::UninterpretedOption_NamePart::UninterpretedOption_NamePart(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D0288;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = 0;
  if (atomic_load_explicit(scc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_UninterpretedOption_NamePart_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(void *)(a1 + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(unsigned char *)(a1 + 3sub_1000F9B58((void *)this + 2) = 0;
  return a1;
}

void google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(google::protobuf::UninterpretedOption_NamePart *this)
{
  uint64_t v1 = *((void *)this + 3);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(this);
  operator delete();
}

uint64_t google::protobuf::UninterpretedOption_NamePart::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::UninterpretedOption_NamePart::Clear(google::protobuf::UninterpretedOption_NamePart *this)
{
  if (*((unsigned char *)this + 16))
  {
    unint64_t v1 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *((unsigned char *)this + 8);
  uint64_t result = (google::protobuf::Arena **)((char *)this + 8);
  *((unsigned char *)result + 24) = 0;
  *((_DWORD *)result + sub_1000F9B58((void *)this + 2) = 0;
  if (v3) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::UninterpretedOption_NamePart::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v25 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v25, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = (google::protobuf::internal *)((char *)v25 + 1);
      unsigned int v9 = *(unsigned __int8 *)v25;
      if ((*(char *)v25 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v25, (const char *)(v10 - 128));
      int v25 = TagFallback;
      if (!TagFallback) {
        goto LABEL_37;
      }
      unint64_t v8 = TagFallback;
      unsigned int v9 = v22;
LABEL_8:
      if (v9 >> 3 != 2)
      {
        if (v9 >> 3 == 1 && v9 == 10)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v18 = *(void *)(a1 + 8);
          unsigned int v19 = (google::protobuf::Arena *)(v18 & 0xFFFFFFFFFFFFFFFELL);
          if (v18) {
            unsigned int v19 = *(google::protobuf::Arena **)v19;
          }
          uint64_t v20 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 24), v19);
          unsigned int v14 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v20, (std::string::value_type *)v25, a3);
        }
        else
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            uint64_t v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            uint64_t v13 = sub_10003562C((unint64_t *)(a1 + 8));
            unint64_t v8 = v25;
          }
          unsigned int v14 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
        }
        int v25 = v14;
        if (!v14) {
          goto LABEL_37;
        }
        goto LABEL_29;
      }
      if (v9 != 16) {
        goto LABEL_13;
      }
      v5 |= 2u;
      unsigned int v15 = (google::protobuf::internal *)((char *)v8 + 1);
      unint64_t v16 = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_24;
      }
      int v17 = *(char *)v15;
      unint64_t v16 = v16 + (v17 << 7) - 128;
      if ((v17 & 0x80000000) == 0)
      {
        unsigned int v15 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_24:
        int v25 = v15;
        *(unsigned char *)(a1 + 3sub_1000F9B58((void *)this + 2) = v16 != 0;
        goto LABEL_29;
      }
      unint64_t v23 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v16);
      int v25 = v23;
      *(unsigned char *)(a1 + 3sub_1000F9B58((void *)this + 2) = v24 != 0;
      if (!v23)
      {
LABEL_37:
        int v25 = 0;
        goto LABEL_2;
      }
LABEL_29:
      if (sub_1000355B8(a3, &v25, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    unint64_t v8 = (google::protobuf::internal *)((char *)v25 + 2);
LABEL_7:
    int v25 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

const google::protobuf::UnknownFieldSet *google::protobuf::UninterpretedOption_NamePart::_InternalSerialize(google::protobuf::UninterpretedOption_NamePart *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6) {
    uint64_t v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned __int8 v7 = *((unsigned char *)this + 32);
    *uint64_t v4 = 16;
    v4[1] = v7;
    v4 += 2;
  }
  uint64_t v8 = *((void *)this + 1);
  if ((v8 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

uint64_t google::protobuf::UninterpretedOption_NamePart::RequiredFieldsByteSizeFallback(google::protobuf::UninterpretedOption_NamePart *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    unint64_t v3 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    return v2 + 2;
  }
  else {
    return v2;
  }
}

char *google::protobuf::UninterpretedOption_NamePart::ByteSizeLong(google::protobuf::UninterpretedOption_NamePart *this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0)
  {
    uint64_t v5 = (const google::protobuf::UnknownFieldSet *)google::protobuf::UninterpretedOption_NamePart::RequiredFieldsByteSizeFallback(this);
  }
  else
  {
    unint64_t v2 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 3);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UninterpretedOption_NamePart *)((char *)this + 8), v5, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v5;
    return (char *)v5;
  }
}

void google::protobuf::UninterpretedOption_NamePart::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::UninterpretedOption_NamePart::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::UninterpretedOption_NamePart::MergeFrom(std::string *this, const google::protobuf::UninterpretedOption_NamePart *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (google::protobuf::Arena *)(size & 0xFFFFFFFFFFFFFFFELL);
      if (size) {
        uint64_t v8 = *(google::protobuf::Arena **)v8;
      }
      this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1], v6, v8);
    }
    if ((v5 & 2) != 0) {
      v3[1].__r_.__value_.__s.__data_[8] = *((unsigned char *)a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v5;
  }
  return this;
}

void google::protobuf::UninterpretedOption_NamePart::CopyFrom(google::protobuf::UninterpretedOption_NamePart *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::UninterpretedOption_NamePart::Clear(this);
    google::protobuf::UninterpretedOption_NamePart::MergeFrom((std::string *)this, a2);
  }
}

BOOL google::protobuf::UninterpretedOption_NamePart::IsInitialized(google::protobuf::UninterpretedOption_NamePart *this)
{
  return (~*((_DWORD *)this + 4) & 3) == 0;
}

uint64_t google::protobuf::UninterpretedOption_NamePart::GetMetadata(google::protobuf::UninterpretedOption_NamePart *this)
{
  return off_1001EAAD0[42];
}

void *google::protobuf::UninterpretedOption::UninterpretedOption(void *a1, uint64_t a2)
{
  *a1 = off_1001D0338;
  a1[1] = a2;
  a1[3] = a2;
  a1[2] = 0;
  a1[4] = 0;
  a1[5] = 0;
  if (atomic_load_explicit(scc_info_UninterpretedOption_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_UninterpretedOption_google_2fprotobuf_2fdescriptor_2eproto);
  }
  a1[6] = &google::protobuf::internal::fixed_address_empty_string;
  a1[7] = &google::protobuf::internal::fixed_address_empty_string;
  a1[8] = &google::protobuf::internal::fixed_address_empty_string;
  a1[9] = 0;
  a1[10] = 0;
  a1[11] = 0;
  return a1;
}

void sub_1000F54E0(_Unwind_Exception *a1)
{
  sub_1000FAA94(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::UninterpretedOption::~UninterpretedOption(google::protobuf::UninterpretedOption *this)
{
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = *((void *)this + 7);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v4 = *((void *)this + 8);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_1000FAA94((void *)this + 3);
}

{
  uint64_t vars8;

  google::protobuf::UninterpretedOption::~UninterpretedOption(this);
  operator delete();
}

uint64_t google::protobuf::UninterpretedOption::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::UninterpretedOption::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::UninterpretedOption_NamePart **)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = google::protobuf::UninterpretedOption_NamePart::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_1000F9B58((void *)this + 2) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      goto LABEL_18;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_18:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_21:
  if ((v5 & 0x38) != 0)
  {
    *(void *)(v1 + 7sub_1000F9B58((void *)this + 2) = 0;
    *(void *)(v1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
    *(void *)(v1 + 88) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_100035820((unint64_t *)v9);
  }
  return this;
}

google::protobuf::internal *google::protobuf::UninterpretedOption::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unint64_t v40 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v40, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unint64_t v7 = (void *)(a1 + 8);
    while (2)
    {
      unint64_t v8 = (google::protobuf::internal *)((char *)v40 + 1);
      unsigned int v9 = *(unsigned __int8 *)v40;
      if (*(char *)v40 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v40, (const char *)(v10 - 128));
          unint64_t v40 = TagFallback;
          if (!TagFallback) {
            goto LABEL_65;
          }
          unint64_t v8 = TagFallback;
          unsigned int v9 = v20;
LABEL_8:
          switch(v9 >> 3)
          {
            case 2u:
              if (v9 != 18) {
                goto LABEL_49;
              }
              int v11 = (google::protobuf::internal *)((char *)v8 - 1);
              break;
            case 3u:
              if (v9 != 26) {
                goto LABEL_49;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v21 = *(void *)(a1 + 8);
              unsigned int v22 = (google::protobuf::Arena *)(v21 & 0xFFFFFFFFFFFFFFFELL);
              if (v21) {
                unsigned int v22 = *(google::protobuf::Arena **)v22;
              }
              unint64_t v23 = (uint64_t **)(a1 + 48);
              goto LABEL_48;
            case 4u:
              if (v9 != 32) {
                goto LABEL_49;
              }
              v5 |= 8u;
              uint64_t v24 = (google::protobuf::internal *)((char *)v8 + 1);
              unint64_t v25 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_32;
              }
              int v26 = *(char *)v24;
              unint64_t v25 = v25 + (v26 << 7) - 128;
              if (v26 < 0)
              {
                BOOL v36 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v25);
                unint64_t v40 = v36;
                *(void *)(a1 + 7sub_1000F9B58((void *)this + 2) = v37;
                if (!v36) {
                  goto LABEL_65;
                }
              }
              else
              {
                uint64_t v24 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_32:
                unint64_t v40 = v24;
                *(void *)(a1 + 7sub_1000F9B58((void *)this + 2) = v25;
              }
              goto LABEL_57;
            case 5u:
              if (v9 != 40) {
                goto LABEL_49;
              }
              v5 |= 0x10u;
              unint64_t v27 = (google::protobuf::internal *)((char *)v8 + 1);
              unint64_t v28 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_37;
              }
              int v29 = *(char *)v27;
              unint64_t v28 = v28 + (v29 << 7) - 128;
              if (v29 < 0)
              {
                uint64_t v38 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v28);
                unint64_t v40 = v38;
                *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v39;
                if (!v38) {
                  goto LABEL_65;
                }
              }
              else
              {
                unint64_t v27 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
                unint64_t v40 = v27;
                *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v28;
              }
              goto LABEL_57;
            case 6u:
              if (v9 != 49) {
                goto LABEL_49;
              }
              v5 |= 0x20u;
              *(void *)(a1 + 88) = *(void *)v8;
              unint64_t v40 = (google::protobuf::internal *)((char *)v8 + 8);
              goto LABEL_57;
            case 7u:
              if (v9 != 58) {
                goto LABEL_49;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v30 = *(void *)(a1 + 8);
              unsigned int v22 = (google::protobuf::Arena *)(v30 & 0xFFFFFFFFFFFFFFFELL);
              if (v30) {
                unsigned int v22 = *(google::protobuf::Arena **)v22;
              }
              unint64_t v23 = (uint64_t **)(a1 + 56);
              goto LABEL_48;
            case 8u:
              if (v9 != 66) {
                goto LABEL_49;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              uint64_t v31 = *(void *)(a1 + 8);
              unsigned int v22 = (google::protobuf::Arena *)(v31 & 0xFFFFFFFFFFFFFFFELL);
              if (v31) {
                unsigned int v22 = *(google::protobuf::Arena **)v22;
              }
              unint64_t v23 = (uint64_t **)(a1 + 64);
LABEL_48:
              uint64_t v32 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v23, v22);
              uint64_t v33 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v32, (std::string::value_type *)v40, a3);
              goto LABEL_56;
            default:
LABEL_49:
              if (v9) {
                BOOL v34 = (v9 & 7) == 4;
              }
              else {
                BOOL v34 = 1;
              }
              if (v34)
              {
                *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v9 - 1;
                goto LABEL_2;
              }
              if (*v7)
              {
                unint64_t v35 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
              }
              else
              {
                unint64_t v35 = sub_10003562C((unint64_t *)(a1 + 8));
                unint64_t v8 = v40;
              }
              uint64_t v33 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v35, v8);
LABEL_56:
              unint64_t v40 = v33;
              if (!v33)
              {
LABEL_65:
                unint64_t v40 = 0;
                goto LABEL_2;
              }
LABEL_57:
              if (sub_1000355B8(a3, &v40, *(_DWORD *)(a3 + 92))) {
                goto LABEL_2;
              }
              continue;
          }
          while (1)
          {
            BOOL v12 = (google::protobuf::internal *)((char *)v11 + 1);
            unint64_t v40 = (google::protobuf::internal *)((char *)v11 + 1);
            uint64_t v13 = *(int **)(a1 + 40);
            if (!v13) {
              break;
            }
            uint64_t v14 = *(int *)(a1 + 32);
            int v15 = *v13;
            if ((int)v14 >= *v13)
            {
              if (v15 == *(_DWORD *)(a1 + 36))
              {
LABEL_16:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v15 + 1);
                uint64_t v13 = *(int **)(a1 + 40);
                int v15 = *v13;
              }
              int *v13 = v15 + 1;
              uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(*(void *)(a1 + 24));
              uint64_t v17 = *(void *)(a1 + 40);
              uint64_t v18 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + 3sub_1000F9B58((void *)this + 2) = v18 + 1;
              *(void *)(v17 + 8 * v18 + 8) = v16;
              BOOL v12 = v40;
              goto LABEL_18;
            }
            *(_DWORD *)(a1 + 3sub_1000F9B58((void *)this + 2) = v14 + 1;
            uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_18:
            int v11 = sub_1000F5B3C(a3, v16, v12);
            unint64_t v40 = v11;
            if (!v11) {
              goto LABEL_65;
            }
            if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 18) {
              goto LABEL_57;
            }
          }
          int v15 = *(_DWORD *)(a1 + 36);
          goto LABEL_16;
        }
        unint64_t v8 = (google::protobuf::internal *)((char *)v40 + 2);
      }
      break;
    }
    unint64_t v40 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v40;
}

google::protobuf::internal *sub_1000F5B3C(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    unint64_t v6 = result;
  }
  else
  {
    unint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::UninterpretedOption_NamePart::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::UninterpretedOption::_InternalSerialize(google::protobuf::UninterpretedOption *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v8 = *(google::protobuf::UninterpretedOption_NamePart **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)google::protobuf::UninterpretedOption_NamePart::_InternalSerialize(v8, v10, a3);
    }
  }
  int v14 = *((_DWORD *)this + 4);
  if (v14)
  {
    a2 = sub_100034480(a3, 3, (const void **)(*((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v14 & 8) == 0)
    {
LABEL_15:
      if ((v14 & 0x10) == 0) {
        goto LABEL_16;
      }
LABEL_34:
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      unint64_t v21 = *((void *)this + 10);
      *a2 = 40;
      if (v21 > 0x7F)
      {
        a2[1] = v21 | 0x80;
        unint64_t v22 = v21 >> 7;
        if (v21 >> 14)
        {
          a2 += 3;
          do
          {
            *(a2 - sub_1000333D0((uint64_t *)this + 1) = v22 | 0x80;
            unint64_t v23 = v22 >> 7;
            ++a2;
            unint64_t v24 = v22 >> 14;
            v22 >>= 7;
          }
          while (v24);
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v23;
          if ((v14 & 0x20) != 0) {
            goto LABEL_45;
          }
        }
        else
        {
          a2[2] = v22;
          a2 += 3;
          if ((v14 & 0x20) != 0) {
            goto LABEL_45;
          }
        }
      }
      else
      {
        a2[1] = v21;
        a2 += 2;
        if ((v14 & 0x20) != 0) {
          goto LABEL_45;
        }
      }
LABEL_17:
      if ((v14 & 2) == 0) {
        goto LABEL_18;
      }
      goto LABEL_48;
    }
  }
  else if ((v14 & 8) == 0)
  {
    goto LABEL_15;
  }
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v17 = *((void *)this + 9);
  *a2 = 32;
  if (v17 > 0x7F)
  {
    a2[1] = v17 | 0x80;
    unint64_t v18 = v17 >> 7;
    if (v17 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        ++a2;
        unint64_t v20 = v18 >> 14;
        v18 >>= 7;
      }
      while (v20);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v19;
      if ((v14 & 0x10) != 0) {
        goto LABEL_34;
      }
    }
    else
    {
      a2[2] = v18;
      a2 += 3;
      if ((v14 & 0x10) != 0) {
        goto LABEL_34;
      }
    }
  }
  else
  {
    a2[1] = v17;
    a2 += 2;
    if ((v14 & 0x10) != 0) {
      goto LABEL_34;
    }
  }
LABEL_16:
  if ((v14 & 0x20) == 0) {
    goto LABEL_17;
  }
LABEL_45:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  uint64_t v25 = *((void *)this + 11);
  *a2 = 49;
  *(void *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v25;
  a2 += 9;
  if ((v14 & 2) == 0)
  {
LABEL_18:
    if ((v14 & 4) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_48:
  a2 = sub_100034480(a3, 7, (const void **)(*((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v14 & 4) != 0) {
LABEL_19:
  }
    a2 = sub_100034480(a3, 8, (const void **)(*((void *)this + 8) & 0xFFFFFFFFFFFFFFFELL), a2);
LABEL_20:
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, (google::protobuf::io::EpsCopyOutputStream *)a2);
}

char *google::protobuf::UninterpretedOption::ByteSizeLong(google::protobuf::UninterpretedOption *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (google::protobuf::UninterpretedOption_NamePart **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unint64_t v7 = google::protobuf::UninterpretedOption_NamePart::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *((_DWORD *)this + 4);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_18;
  }
  if (v8)
  {
    unint64_t v10 = *((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_26;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v13 = *((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  uint64_t v15 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    uint64_t v15 = v14;
  }
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_26:
  unint64_t v16 = *((void *)this + 8) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_29:
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                 + ((9 * (__clz(*((void *)this + 9) | 1) ^ 0x3F) + 73) >> 6)
                                                 + 1);
  if ((v8 & 0x10) != 0) {
LABEL_15:
  }
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                   + ((9 * (__clz(*((void *)this + 10) | 1) ^ 0x3F) + 73) >> 6)
                                                   + 1);
LABEL_16:
  if ((v8 & 0x20) != 0) {
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + 9);
  }
LABEL_18:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UninterpretedOption *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void google::protobuf::UninterpretedOption::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::UninterpretedOption::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::UninterpretedOption::MergeFrom(std::string *this, const google::protobuf::UninterpretedOption *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    int v6 = (google::protobuf::UninterpretedOption_NamePart **)(*((void *)a2 + 5) + 8);
    unint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1], *((_DWORD *)a2 + 8));
    this = sub_1000FAB14(v3 + 1, (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v5;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v8;
    unsigned int v9 = (signed int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  int v10 = *((_DWORD *)a2 + 4);
  if ((v10 & 0x3F) != 0)
  {
    if (v10)
    {
      unint64_t v11 = *((void *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v13 = (google::protobuf::Arena *)(size & 0xFFFFFFFFFFFFFFFELL);
      if (size) {
        unint64_t v13 = *(google::protobuf::Arena **)v13;
      }
      this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[2], v11, v13);
      if ((v10 & 2) == 0)
      {
LABEL_9:
        if ((v10 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_22;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_9;
    }
    unint64_t v14 = *((void *)a2 + 7) & 0xFFFFFFFFFFFFFFFELL;
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    unint64_t v16 = (google::protobuf::Arena *)(v15 & 0xFFFFFFFFFFFFFFFELL);
    if (v15) {
      unint64_t v16 = *(google::protobuf::Arena **)v16;
    }
    this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v10 & 4) == 0)
    {
LABEL_10:
      if ((v10 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_25;
    }
LABEL_22:
    unint64_t v17 = *((void *)a2 + 8) & 0xFFFFFFFFFFFFFFFELL;
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    unint64_t v19 = (google::protobuf::Arena *)(v18 & 0xFFFFFFFFFFFFFFFELL);
    if (v18) {
      unint64_t v19 = *(google::protobuf::Arena **)v19;
    }
    this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v19);
    if ((v10 & 8) == 0)
    {
LABEL_11:
      if ((v10 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_26;
    }
LABEL_25:
    v3[3].__r_.__value_.__r.__words[0] = *((void *)a2 + 9);
    if ((v10 & 0x10) == 0)
    {
LABEL_12:
      if ((v10 & 0x20) == 0)
      {
LABEL_14:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v10;
        return this;
      }
LABEL_13:
      v3[3].__r_.__value_.__r.__words[2] = *((void *)a2 + 11);
      goto LABEL_14;
    }
LABEL_26:
    v3[3].__r_.__value_.__l.__size_ = *((void *)a2 + 10);
    if ((v10 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  return this;
}

void google::protobuf::UninterpretedOption::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    google::protobuf::UninterpretedOption::Clear(this);
    google::protobuf::UninterpretedOption::MergeFrom((std::string *)this, (const google::protobuf::Message *)a2);
  }
}

BOOL google::protobuf::UninterpretedOption::IsInitialized(google::protobuf::UninterpretedOption *this)
{
  uint64_t v1 = *((unsigned int *)this + 8);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 5) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

uint64_t google::protobuf::UninterpretedOption::GetMetadata(google::protobuf::UninterpretedOption *this)
{
  return off_1001EAAD0[44];
}

uint64_t google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 3sub_1000F9B58((void *)this + 2) = a2;
  *(void *)a1 = off_1001D03E8;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 5sub_1000F9B58((void *)this + 2) = 0;
  *(void *)(a1 + 5sub_1000FA614((void *)this + 6) = a2;
  *(void *)(a1 + 7sub_1000F9B58((void *)this + 2) = a2;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *(void *)(a1 + 88) = 0;
  if (atomic_load_explicit(scc_info_SourceCodeInfo_Location_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_Location_google_2fprotobuf_2fdescriptor_2eproto);
  }
  *(void *)(a1 + 9sub_1000FA614((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 104) = &google::protobuf::internal::fixed_address_empty_string;
  return a1;
}

void sub_1000F64AC(_Unwind_Exception *a1)
{
  sub_1000F9C98(v5);
  sub_100163A90(v2, v3, v4, v1);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(google::protobuf::SourceCodeInfo_Location *this)
{
  uint64_t v2 = *((void *)this + 12);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = *((void *)this + 13);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_1000F9C98((void *)this + 9);
  if (*((int *)this + 13) >= 1)
  {
    uint64_t v4 = *((void *)this + 7);
    uint64_t v6 = *(void *)(v4 - 8);
    unsigned int v5 = (void *)(v4 - 8);
    if (!v6) {
      operator delete(v5);
    }
  }
  if (*((int *)this + 7) >= 1)
  {
    uint64_t v7 = *((void *)this + 4);
    uint64_t v9 = *(void *)(v7 - 8);
    signed int v8 = (void *)(v7 - 8);
    if (!v9) {
      operator delete(v8);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location(this);
  operator delete();
}

uint64_t google::protobuf::SourceCodeInfo_Location::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::SourceCodeInfo_Location::Clear(google::protobuf::SourceCodeInfo_Location *this)
{
  *((_DWORD *)this + sub_1000FA614((void *)this + 6) = 0;
  *((_DWORD *)this + 1sub_1000F9B58((void *)this + 2) = 0;
  uint64_t result = (google::protobuf::Arena **)sub_1000F9B0C((uint64_t)this + 72);
  int v3 = *((_DWORD *)this + 4);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *((void *)this + 13) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  char v7 = *((unsigned char *)this + 8);
  uint64_t v6 = (char *)this + 8;
  *((_DWORD *)v6 + sub_1000F9B58((void *)this + 2) = 0;
  if (v7)
  {
    return sub_100035820((unint64_t *)v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::SourceCodeInfo_Location::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v31 = a2;
  if ((sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (2)
    {
      char v7 = (google::protobuf::internal *)((char *)v31 + 1);
      unsigned int v8 = *(unsigned __int8 *)v31;
      if (*(char *)v31 < 0)
      {
        unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*(char *)v7 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v31, (const char *)(v9 - 128));
          uint64_t v31 = TagFallback;
          if (!TagFallback) {
            return 0;
          }
          char v7 = TagFallback;
          unsigned int v8 = v26;
LABEL_8:
          switch(v8 >> 3)
          {
            case 1u:
              if (v8 == 10)
              {
                int v10 = (unsigned int *)(a1 + 24);
                goto LABEL_13;
              }
              if (v8 != 8) {
                goto LABEL_44;
              }
              int v27 = sub_100037CBC(&v31);
              sub_1000F6A0C(a1, v27);
              goto LABEL_42;
            case 2u:
              if (v8 == 18)
              {
                int v10 = (unsigned int *)(a1 + 48);
LABEL_13:
                unint64_t v11 = (google::protobuf::internal *)google::protobuf::internal::PackedInt32Parser(v10, v7, a3);
LABEL_51:
                uint64_t v31 = v11;
                if (!v11) {
                  return 0;
                }
                goto LABEL_52;
              }
              if (v8 != 16)
              {
LABEL_44:
                if (v8) {
                  BOOL v29 = (v8 & 7) == 4;
                }
                else {
                  BOOL v29 = 1;
                }
                if (v29)
                {
                  *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v8 - 1;
                  return v31;
                }
                if (*v6)
                {
                  uint64_t v30 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
                }
                else
                {
                  uint64_t v30 = sub_10003562C((unint64_t *)(a1 + 8));
                  char v7 = v31;
                }
                unint64_t v11 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v30, v7);
                goto LABEL_51;
              }
              int v28 = sub_100037CBC(&v31);
              sub_1000F6A7C(a1, v28);
LABEL_42:
              if (!v31) {
                return 0;
              }
LABEL_52:
              if (sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92))) {
                return v31;
              }
              continue;
            case 3u:
              if (v8 != 26) {
                goto LABEL_44;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v12 = *(void *)(a1 + 8);
              unint64_t v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
              if (v12) {
                unint64_t v13 = *(google::protobuf::Arena **)v13;
              }
              unint64_t v14 = (uint64_t **)(a1 + 96);
              goto LABEL_22;
            case 4u:
              if (v8 != 34) {
                goto LABEL_44;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v15 = *(void *)(a1 + 8);
              unint64_t v13 = (google::protobuf::Arena *)(v15 & 0xFFFFFFFFFFFFFFFELL);
              if (v15) {
                unint64_t v13 = *(google::protobuf::Arena **)v13;
              }
              unint64_t v14 = (uint64_t **)(a1 + 104);
LABEL_22:
              unint64_t v16 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v14, v13);
              unint64_t v11 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v16, (std::string::value_type *)v31, a3);
              goto LABEL_51;
            case 6u:
              if (v8 != 50) {
                goto LABEL_44;
              }
              unint64_t v17 = (char *)v7 - 1;
              break;
            default:
              goto LABEL_44;
          }
          while (1)
          {
            std::string::size_type v18 = v17 + 1;
            uint64_t v31 = (google::protobuf::internal *)(v17 + 1);
            unint64_t v19 = *(int **)(a1 + 88);
            if (!v19) {
              break;
            }
            uint64_t v20 = *(int *)(a1 + 80);
            int v21 = *v19;
            if ((int)v20 >= *v19)
            {
              if (v21 == *(_DWORD *)(a1 + 84))
              {
LABEL_30:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v21 + 1);
                unint64_t v19 = *(int **)(a1 + 88);
                int v21 = *v19;
              }
              int *v19 = v21 + 1;
              unint64_t v22 = (std::string *)sub_1000BBB38(*(google::protobuf::Arena **)(a1 + 72));
              uint64_t v23 = *(void *)(a1 + 88);
              uint64_t v24 = *(int *)(a1 + 80);
              *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v24 + 1;
              *(void *)(v23 + 8 * v24 + 8) = v22;
              std::string::size_type v18 = (std::string::value_type *)v31;
              goto LABEL_32;
            }
            *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v20 + 1;
            unint64_t v22 = *(std::string **)&v19[2 * v20 + 2];
LABEL_32:
            unint64_t v17 = google::protobuf::internal::InlineGreedyStringParser(v22, v18, a3);
            uint64_t v31 = (google::protobuf::internal *)v17;
            if (!v17) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v17 || *v17 != 50) {
              goto LABEL_52;
            }
          }
          int v21 = *(_DWORD *)(a1 + 84);
          goto LABEL_30;
        }
        char v7 = (google::protobuf::internal *)((char *)v31 + 2);
      }
      break;
    }
    uint64_t v31 = v7;
    goto LABEL_8;
  }
  return v31;
}

void sub_1000F6A0C(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 24);
  unint64_t v4 = (_DWORD *)(a1 + 24);
  if (v5 == *(_DWORD *)(a1 + 28))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)(a1 + 24), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 32) + 4 * vsub_1000FA614((void *)this + 5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 32) + 4 * vsub_1000FA614((void *)this + 5) = a2;
    int v6 = v5 + 1;
  }
  *unint64_t v4 = v6;
}

void sub_1000F6A7C(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 48);
  unint64_t v4 = (_DWORD *)(a1 + 48);
  if (v5 == *(_DWORD *)(a1 + 52))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)(a1 + 48), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 56) + 4 * vsub_1000FA614((void *)this + 5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 56) + 4 * vsub_1000FA614((void *)this + 5) = a2;
    int v6 = v5 + 1;
  }
  *unint64_t v4 = v6;
}

const google::protobuf::UnknownFieldSet *google::protobuf::SourceCodeInfo_Location::_InternalSerialize(google::protobuf::SourceCodeInfo_Location *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unint64_t v4 = a2;
  signed int v6 = *((_DWORD *)this + 10);
  if (v6 >= 1) {
    unint64_t v4 = sub_1000FABD4(a3, 1, (int *)this + 6, v6, a2, (uint64_t (*)(uint64_t))google::protobuf::io::EpsCopyOutputStream::Encode64);
  }
  char v7 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 16);
  if ((int)v7 >= 1) {
    unint64_t v4 = sub_1000FABD4(a3, 2, (int *)this + 12, v7, v4, (uint64_t (*)(uint64_t))google::protobuf::io::EpsCopyOutputStream::Encode64);
  }
  int v8 = *((_DWORD *)this + 4);
  if (v8) {
    unint64_t v4 = sub_100034480(a3, 3, (const void **)(*((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v8 & 2) != 0) {
    unint64_t v4 = sub_100034480(a3, 4, (const void **)(*((void *)this + 13) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v9 = *((unsigned int *)this + 20);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 8 * v9;
    do
    {
      unint64_t v4 = sub_1000E4244(a3, 6, *(void *)(*((void *)this + 11) + v10 + 8), v4);
      v10 += 8;
    }
    while (v11 != v10);
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v12 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, v7);
}

char *google::protobuf::SourceCodeInfo_Location::ByteSizeLong(google::protobuf::SourceCodeInfo_Location *this)
{
  uint64_t v2 = google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 6);
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v3;
  uint64_t v5 = v4 + v2;
  uint64_t v6 = google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 12);
  if (v6)
  {
    int v7 = v6;
    if ((v6 & 0x80000000) != 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v5 += v8;
  }
  else
  {
    int v7 = 0;
  }
  *((_DWORD *)this + 1sub_1000FA614((void *)this + 6) = v7;
  uint64_t v9 = *((unsigned int *)this + 20);
  uint64_t v10 = (const google::protobuf::UnknownFieldSet *)(v5 + v6 + v9);
  if ((int)v9 >= 1)
  {
    uint64_t v11 = (uint64_t *)(*((void *)this + 11) + 8);
    do
    {
      uint64_t v12 = *v11++;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      uint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6));
      --v9;
    }
    while (v9);
  }
  int v15 = *((_DWORD *)this + 4);
  if ((v15 & 3) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      uint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v18
                                                                    + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6)
                                                                    + 1);
    }
    if ((v15 & 2) != 0)
    {
      unint64_t v19 = *((void *)this + 13) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      uint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v21
                                                                    + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6)
                                                                    + 1);
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::SourceCodeInfo_Location *)((char *)this + 8), v10, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v10;
    return (char *)v10;
  }
}

void google::protobuf::SourceCodeInfo_Location::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::SourceCodeInfo_Location::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::SourceCodeInfo_Location::MergeFrom(std::string *this, const google::protobuf::SourceCodeInfo_Location *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t data_low = SLODWORD(v3[1].__r_.__value_.__l.__data_);
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)&v3[1], data_low + v5);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v3[1].__r_.__value_.__l.__data_) += *((_DWORD *)a2 + 6);
    this = (std::string *)memcpy((void *)(size + 4 * data_low), *((const void **)a2 + 4), 4 * *((int *)a2 + 6));
  }
  int v8 = *((_DWORD *)a2 + 12);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)&v3[2], v9 + v8);
    std::string::size_type v10 = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *((_DWORD *)a2 + 12);
    this = (std::string *)memcpy((void *)(v10 + 4 * v9), *((const void **)a2 + 7), 4 * *((int *)a2 + 12));
  }
  unsigned int v11 = *((_DWORD *)a2 + 20);
  if (v11)
  {
    uint64_t v12 = (const std::string **)(*((void *)a2 + 11) + 8);
    uint64_t v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[3], *((_DWORD *)a2 + 20));
    this = sub_1000F9F28(v3 + 3, (std::string **)v13, v12, v11, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2] - LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    signed int v14 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v11;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v14;
    int v15 = (signed int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v15 < v14) {
      *int v15 = v14;
    }
  }
  int v16 = *((_DWORD *)a2 + 4);
  if ((v16 & 3) != 0)
  {
    if (v16)
    {
      unint64_t v17 = *((void *)a2 + 12) & 0xFFFFFFFFFFFFFFFELL;
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
      unint64_t v19 = (google::protobuf::Arena *)(v18 & 0xFFFFFFFFFFFFFFFELL);
      if (v18) {
        unint64_t v19 = *(google::protobuf::Arena **)v19;
      }
      this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[4], v17, v19);
    }
    if ((v16 & 2) != 0)
    {
      unint64_t v20 = *((void *)a2 + 13) & 0xFFFFFFFFFFFFFFFELL;
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
      unint64_t v22 = (google::protobuf::Arena *)(v21 & 0xFFFFFFFFFFFFFFFELL);
      if (v21) {
        unint64_t v22 = *(google::protobuf::Arena **)v22;
      }
      return google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[4].__r_.__value_.__l.__size_, v20, v22);
    }
  }
  return this;
}

void google::protobuf::SourceCodeInfo_Location::CopyFrom(google::protobuf::SourceCodeInfo_Location *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::SourceCodeInfo_Location::Clear(this);
    google::protobuf::SourceCodeInfo_Location::MergeFrom((std::string *)this, a2);
  }
}

std::string *google::protobuf::SourceCodeInfo_Location::CopyFrom(std::string *this, std::string *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    google::protobuf::SourceCodeInfo_Location::Clear((google::protobuf::SourceCodeInfo_Location *)this);
    return google::protobuf::SourceCodeInfo_Location::MergeFrom(v4, (const google::protobuf::SourceCodeInfo_Location *)a2);
  }
  return this;
}

uint64_t google::protobuf::SourceCodeInfo_Location::IsInitialized(google::protobuf::SourceCodeInfo_Location *this)
{
  return 1;
}

uint64_t google::protobuf::SourceCodeInfo_Location::GetMetadata(google::protobuf::SourceCodeInfo_Location *this)
{
  return off_1001EAAD0[46];
}

uint64_t google::protobuf::SourceCodeInfo::SourceCodeInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D0498;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_1000F9B58((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return a1;
}

void sub_1000F71D0(_Unwind_Exception *a1)
{
  sub_1000E0E80(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::SourceCodeInfo::~SourceCodeInfo(google::protobuf::SourceCodeInfo *this)
{
}

{
  uint64_t vars8;

  google::protobuf::SourceCodeInfo::~SourceCodeInfo(this);
  operator delete();
}

uint64_t google::protobuf::SourceCodeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

void *google::protobuf::SourceCodeInfo::default_instance(google::protobuf::SourceCodeInfo *this)
{
  if (atomic_load_explicit(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SourceCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return &google::protobuf::_SourceCodeInfo_default_instance_;
}

google::protobuf::internal *google::protobuf::SourceCodeInfo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unint64_t v22 = a2;
  if ((sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = (google::protobuf::internal *)((char *)v22 + 1);
      unsigned int v7 = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, (const char *)(v8 - 128));
      unint64_t v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v6 = TagFallback;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        unsigned int v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          uint64_t v12 = (google::protobuf::internal *)((char *)v11 + 1);
          unint64_t v22 = (google::protobuf::internal *)((char *)v11 + 1);
          uint64_t v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              uint64_t v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            int *v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            uint64_t v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          unsigned int v11 = sub_1000F7488(a3, v16, v12);
          unint64_t v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        std::string::size_type v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        std::string::size_type v10 = sub_10003562C((unint64_t *)(a1 + 8));
        uint64_t v6 = v22;
      }
      unint64_t v22 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92))) {
        return v22;
      }
    }
    uint64_t v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    unint64_t v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

google::protobuf::internal *sub_1000F7488(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::SourceCodeInfo_Location::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::SourceCodeInfo::_InternalSerialize(google::protobuf::SourceCodeInfo *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v8 = *(google::protobuf::SourceCodeInfo_Location **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)google::protobuf::SourceCodeInfo_Location::_InternalSerialize(v8, v10, a3);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::SourceCodeInfo::ByteSizeLong(google::protobuf::SourceCodeInfo *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (google::protobuf::SourceCodeInfo_Location **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = google::protobuf::SourceCodeInfo_Location::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::SourceCodeInfo *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void google::protobuf::SourceCodeInfo::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::SourceCodeInfo::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void google::protobuf::SourceCodeInfo::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    google::protobuf::SourceCodeInfo::Clear(this);
    google::protobuf::SourceCodeInfo::MergeFrom((std::string *)this, (const google::protobuf::Message *)a2);
  }
}

google::protobuf::Arena **google::protobuf::SourceCodeInfo::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    uint64_t v4 = (std::string *)this;
    google::protobuf::SourceCodeInfo::Clear(this);
    return (google::protobuf::Arena **)google::protobuf::SourceCodeInfo::MergeFrom(v4, (const google::protobuf::SourceCodeInfo *)a2);
  }
  return this;
}

uint64_t google::protobuf::SourceCodeInfo::IsInitialized(google::protobuf::SourceCodeInfo *this)
{
  return 1;
}

uint64_t google::protobuf::SourceCodeInfo::GetMetadata(google::protobuf::SourceCodeInfo *this)
{
  return off_1001EAAD0[48];
}

void *google::protobuf::GeneratedCodeInfo_Annotation::GeneratedCodeInfo_Annotation(void *a1, uint64_t a2)
{
  a1[4] = a2;
  *a1 = off_1001D0548;
  a1[1] = a2;
  a1[2] = 0;
  a1[3] = 0;
  if (atomic_load_explicit(scc_info_GeneratedCodeInfo_Annotation_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_GeneratedCodeInfo_Annotation_google_2fprotobuf_2fdescriptor_2eproto);
  }
  a1[6] = &google::protobuf::internal::fixed_address_empty_string;
  a1[7] = 0;
  return a1;
}

void sub_1000F7934(_Unwind_Exception *exception_object)
{
  if (*(int *)(v1 + 28) >= 1) {
    sub_100163A7C(v2);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::GeneratedCodeInfo_Annotation::~GeneratedCodeInfo_Annotation(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
  if (*((int *)this + 7) >= 1)
  {
    uint64_t v3 = *((void *)this + 4);
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t v4 = (void *)(v3 - 8);
    if (!v5) {
      operator delete(v4);
    }
  }
}

{
  uint64_t vars8;

  google::protobuf::GeneratedCodeInfo_Annotation::~GeneratedCodeInfo_Annotation(this);
  operator delete();
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::GeneratedCodeInfo_Annotation::Clear(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  *((_DWORD *)this + sub_1000FA614((void *)this + 6) = 0;
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    unint64_t v2 = *((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0) {
    *((void *)this + 7) = 0;
  }
  char v4 = *((unsigned char *)this + 8);
  uint64_t result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_1000E0E80((void *)this + 2) = 0;
  if (v4) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::GeneratedCodeInfo_Annotation::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v30, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v30 + 1);
      unsigned int v9 = *(unsigned __int8 *)v30;
      if (*(char *)v30 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v30, (const char *)(v10 - 128));
          uint64_t v30 = TagFallback;
          if (!TagFallback) {
            goto LABEL_46;
          }
          uint64_t v8 = TagFallback;
          unsigned int v9 = v22;
          goto LABEL_8;
        }
        uint64_t v8 = (google::protobuf::internal *)((char *)v30 + 2);
      }
      uint64_t v30 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 == 10)
          {
            unsigned int v11 = (google::protobuf::internal *)google::protobuf::internal::PackedInt32Parser((unsigned int *)(a1 + 24), v8, a3);
            goto LABEL_41;
          }
          if (v9 != 8) {
            goto LABEL_34;
          }
          int v27 = sub_100037CBC(&v30);
          sub_1000F6A0C(a1, v27);
          if (!v30) {
            goto LABEL_46;
          }
          goto LABEL_42;
        case 2u:
          if (v9 != 18) {
            goto LABEL_34;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v12 = *(void *)(a1 + 8);
          unsigned int v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
          if (v12) {
            unsigned int v13 = *(google::protobuf::Arena **)v13;
          }
          uint64_t v14 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 48), v13);
          unsigned int v11 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v14, (std::string::value_type *)v30, a3);
          goto LABEL_41;
        case 3u:
          if (v9 != 24) {
            goto LABEL_34;
          }
          v5 |= 2u;
          uint64_t v16 = (google::protobuf::internal *)((char *)v8 + 1);
          LODWORD(v1sub_1000FA614((void *)this + 5) = *(unsigned __int8 *)v8;
          if ((v15 & 0x80) == 0) {
            goto LABEL_19;
          }
          int v17 = *(char *)v16;
          unint64_t v15 = v15 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            uint64_t v23 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v15);
            uint64_t v30 = v23;
            *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v24;
            if (!v23) {
              goto LABEL_46;
            }
          }
          else
          {
            uint64_t v16 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_19:
            uint64_t v30 = v16;
            *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = v15;
          }
          goto LABEL_42;
        case 4u:
          if (v9 != 32) {
            goto LABEL_34;
          }
          v5 |= 4u;
          unint64_t v19 = (google::protobuf::internal *)((char *)v8 + 1);
          LODWORD(v18) = *(unsigned __int8 *)v8;
          if ((v18 & 0x80) == 0) {
            goto LABEL_24;
          }
          int v20 = *(char *)v19;
          unint64_t v18 = v18 + (v20 << 7) - 128;
          if (v20 < 0)
          {
            uint64_t v25 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v18);
            uint64_t v30 = v25;
            *(_DWORD *)(a1 + 6google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v26;
            if (!v25) {
              goto LABEL_46;
            }
          }
          else
          {
            unint64_t v19 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_24:
            uint64_t v30 = v19;
            *(_DWORD *)(a1 + 6google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v18;
          }
          goto LABEL_42;
        default:
LABEL_34:
          if (v9) {
            BOOL v28 = (v9 & 7) == 4;
          }
          else {
            BOOL v28 = 1;
          }
          if (v28)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            BOOL v29 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            BOOL v29 = sub_10003562C((unint64_t *)(a1 + 8));
            uint64_t v8 = v30;
          }
          unsigned int v11 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v29, v8);
LABEL_41:
          uint64_t v30 = v11;
          if (!v11)
          {
LABEL_46:
            uint64_t v30 = 0;
            goto LABEL_2;
          }
LABEL_42:
          if (sub_1000355B8(a3, &v30, *(_DWORD *)(a3 + 92))) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

const google::protobuf::UnknownFieldSet *google::protobuf::GeneratedCodeInfo_Annotation::_InternalSerialize(google::protobuf::GeneratedCodeInfo_Annotation *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  int v6 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 10);
  if ((int)v6 >= 1) {
    char v4 = sub_1000FABD4(a3, 1, (int *)this + 6, v6, a2, (uint64_t (*)(uint64_t))google::protobuf::io::EpsCopyOutputStream::Encode64);
  }
  int v7 = *((_DWORD *)this + 4);
  if (v7)
  {
    char v4 = sub_100034480(a3, 2, (const void **)(*((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v7 & 2) == 0)
    {
LABEL_5:
      if ((v7 & 4) == 0) {
        goto LABEL_28;
      }
      goto LABEL_19;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_5;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v8 = *((int *)this + 14);
  *char v4 = 24;
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    unint64_t v9 = v8 >> 7;
    if (v8 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
        unint64_t v10 = v9 >> 7;
        ++v4;
        unint64_t v11 = v9 >> 14;
        v9 >>= 7;
      }
      while (v11);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v10;
      if ((v7 & 4) == 0) {
        goto LABEL_28;
      }
    }
    else
    {
      uint64_t v4[2] = v9;
      v4 += 3;
      if ((v7 & 4) == 0) {
        goto LABEL_28;
      }
    }
  }
  else
  {
    v4[1] = v8;
    v4 += 2;
    if ((v7 & 4) == 0) {
      goto LABEL_28;
    }
  }
LABEL_19:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v12 = *((int *)this + 15);
  *char v4 = 32;
  if (v12 > 0x7F)
  {
    v4[1] = v12 | 0x80;
    unint64_t v13 = v12 >> 7;
    if (v12 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v13 | 0x80;
        unint64_t v14 = v13 >> 7;
        ++v4;
        unint64_t v15 = v13 >> 14;
        v13 >>= 7;
      }
      while (v15);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v14;
    }
    else
    {
      uint64_t v4[2] = v13;
      v4 += 3;
    }
  }
  else
  {
    v4[1] = v12;
    v4 += 2;
  }
LABEL_28:
  uint64_t v16 = *((void *)this + 1);
  if ((v16 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v16 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, v6);
}

char *google::protobuf::GeneratedCodeInfo_Annotation::ByteSizeLong(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  uint64_t v2 = google::protobuf::internal::WireFormatLite::Int32Size((unsigned int *)this + 6);
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v3;
  int v5 = (const google::protobuf::UnknownFieldSet *)(v4 + v2);
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      unint64_t v7 = *((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
      uint64_t v9 = *(void *)(v7 + 8);
      if ((v8 & 0x80u) == 0) {
        uint64_t v9 = v8;
      }
      int v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1);
      if ((v6 & 2) == 0)
      {
LABEL_9:
        if ((v6 & 4) == 0) {
          goto LABEL_22;
        }
LABEL_18:
        int v12 = *((_DWORD *)this + 15);
        if (v12 < 0) {
          uint64_t v13 = 11;
        }
        else {
          uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
        int v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v13);
        goto LABEL_22;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_9;
    }
    int v10 = *((_DWORD *)this + 14);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    int v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5 + v11);
    if ((v6 & 4) == 0) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
LABEL_22:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::GeneratedCodeInfo_Annotation *)((char *)this + 8), v5, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v5;
    return (char *)v5;
  }
}

void google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(google::protobuf::GeneratedCodeInfo_Annotation *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom((unint64_t *)this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

unint64_t *google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(unint64_t *this, const google::protobuf::GeneratedCodeInfo_Annotation *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)sub_1000357D4(this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = *((int *)v3 + 6);
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)v3 + 6, v6 + v5);
    unint64_t v7 = v3[4];
    *((_DWORD *)v3 + 6) += *((_DWORD *)a2 + 6);
    this = (unint64_t *)memcpy((void *)(v7 + 4 * v6), *((const void **)a2 + 4), 4 * *((int *)a2 + 6));
  }
  int v8 = *((_DWORD *)a2 + 4);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *((void *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
      *((_DWORD *)v3 + 4) |= 1u;
      unint64_t v10 = v3[1];
      uint64_t v11 = (google::protobuf::Arena *)(v10 & 0xFFFFFFFFFFFFFFFELL);
      if (v10) {
        uint64_t v11 = *(google::protobuf::Arena **)v11;
      }
      this = (unint64_t *)google::protobuf::internal::ArenaStringPtr::Set((std::string **)v3 + 6, v9, v11);
      if ((v8 & 2) == 0)
      {
LABEL_8:
        if ((v8 & 4) == 0)
        {
LABEL_10:
          *((_DWORD *)v3 + 4) |= v8;
          return this;
        }
LABEL_9:
        *((_DWORD *)v3 + 1sub_1000FA614((void *)this + 5) = *((_DWORD *)a2 + 15);
        goto LABEL_10;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_8;
    }
    *((_DWORD *)v3 + 14) = *((_DWORD *)a2 + 14);
    if ((v8 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  return this;
}

void google::protobuf::GeneratedCodeInfo_Annotation::CopyFrom(google::protobuf::GeneratedCodeInfo_Annotation *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::GeneratedCodeInfo_Annotation::Clear(this);
    google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::IsInitialized(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  return 1;
}

uint64_t google::protobuf::GeneratedCodeInfo_Annotation::GetMetadata(google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  return off_1001EAAD0[50];
}

uint64_t google::protobuf::GeneratedCodeInfo::GeneratedCodeInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D05F8;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_1000E0E80((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_GeneratedCodeInfo_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_GeneratedCodeInfo_google_2fprotobuf_2fdescriptor_2eproto);
  }
  return a1;
}

void sub_1000F8310(_Unwind_Exception *a1)
{
  sub_1000FACE4(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::GeneratedCodeInfo::~GeneratedCodeInfo(google::protobuf::GeneratedCodeInfo *this)
{
}

{
  uint64_t vars8;

  google::protobuf::GeneratedCodeInfo::~GeneratedCodeInfo(this);
  operator delete();
}

uint64_t google::protobuf::GeneratedCodeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::GeneratedCodeInfo::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    int v3 = (google::protobuf::GeneratedCodeInfo_Annotation **)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = google::protobuf::GeneratedCodeInfo_Annotation::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  int v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *google::protobuf::GeneratedCodeInfo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v22 = a2;
  if ((sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v22 + 1);
      unsigned int v7 = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, (const char *)(v8 - 128));
      unsigned int v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        uint64_t v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          int v12 = (google::protobuf::internal *)((char *)v11 + 1);
          unsigned int v22 = (google::protobuf::internal *)((char *)v11 + 1);
          uint64_t v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              uint64_t v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            int *v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            int v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          uint64_t v11 = sub_1000F8604(a3, v16, v12);
          unsigned int v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        unint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
        char v6 = v22;
      }
      unsigned int v22 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92))) {
        return v22;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    unsigned int v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

google::protobuf::internal *sub_1000F8604(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::GeneratedCodeInfo_Annotation::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::GeneratedCodeInfo::_InternalSerialize(google::protobuf::GeneratedCodeInfo *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v8 = *(google::protobuf::GeneratedCodeInfo_Annotation **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)google::protobuf::GeneratedCodeInfo_Annotation::_InternalSerialize(v8, v10, a3);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::GeneratedCodeInfo::ByteSizeLong(google::protobuf::GeneratedCodeInfo *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (google::protobuf::GeneratedCodeInfo_Annotation **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = google::protobuf::GeneratedCodeInfo_Annotation::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::GeneratedCodeInfo *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void google::protobuf::GeneratedCodeInfo::MergeFrom(google::protobuf::GeneratedCodeInfo *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::GeneratedCodeInfo::MergeFrom((unint64_t *)this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

unint64_t *google::protobuf::GeneratedCodeInfo::MergeFrom(unint64_t *this, const google::protobuf::GeneratedCodeInfo *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)sub_1000357D4(this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (google::protobuf::GeneratedCodeInfo_Annotation **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    this = sub_1000FAD64(v3 + 2, (google::protobuf::GeneratedCodeInfo_Annotation **)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + sub_1000FA614((void *)this + 6) = v8;
    unsigned int v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  return this;
}

void google::protobuf::GeneratedCodeInfo::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    google::protobuf::GeneratedCodeInfo::Clear(this);
    google::protobuf::GeneratedCodeInfo::MergeFrom((google::protobuf::GeneratedCodeInfo *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t google::protobuf::GeneratedCodeInfo::IsInitialized(google::protobuf::GeneratedCodeInfo *this)
{
  return 1;
}

uint64_t google::protobuf::GeneratedCodeInfo::GetMetadata(google::protobuf::GeneratedCodeInfo *this)
{
  return off_1001EAAD0[52];
}

void *sub_1000F8A90(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FAE24(a1, 1);
  google::protobuf::FileDescriptorSet::FileDescriptorSet((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F8AF4()
{
}

void *sub_1000F8B1C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FAEE0(a1, 1);
  google::protobuf::FileDescriptorProto::FileDescriptorProto(v2, (uint64_t)a1);
  return v2;
}

void sub_1000F8B80()
{
}

void *sub_1000F8BA8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1000FAF9C(a1);
}

void sub_1000F8C48()
{
}

void *sub_1000F8C70(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  uint64_t result = sub_1000FB0CC(this, 1);
  *uint64_t result = off_1001CF628;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1000F8CE0(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FB1A4(a1, 1);
  google::protobuf::DescriptorProto::DescriptorProto(v2, (uint64_t)a1);
  return v2;
}

void sub_1000F8D44()
{
}

void *sub_1000F8D6C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FB260(a1, 1);
  google::protobuf::ExtensionRangeOptions::ExtensionRangeOptions((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F8DD0()
{
}

void *sub_1000F8DF8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FB31C(a1, 1);
  google::protobuf::FieldDescriptorProto::FieldDescriptorProto((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F8E5C()
{
}

void *sub_1000F8E84(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FB3D8(a1, 1);
  google::protobuf::OneofDescriptorProto::OneofDescriptorProto(v2, (uint64_t)a1);
  return v2;
}

void sub_1000F8EE8()
{
}

void *sub_1000F8F10(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  uint64_t result = sub_1000FB494(this, 1);
  *uint64_t result = off_1001CF998;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_1000F8F80(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FB56C(a1, 1);
  google::protobuf::EnumDescriptorProto::EnumDescriptorProto(v2, (uint64_t)a1);
  return v2;
}

void sub_1000F8FE4()
{
}

void *sub_1000F900C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FB628(a1, 1);
  google::protobuf::EnumValueDescriptorProto::EnumValueDescriptorProto((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F9070()
{
}

void *sub_1000F9098(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FB6E4(a1, 1);
  google::protobuf::ServiceDescriptorProto::ServiceDescriptorProto(v2, (uint64_t)a1);
  return v2;
}

void sub_1000F90FC()
{
}

void *sub_1000F9124(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FB7A0(a1, 1);
  google::protobuf::MethodDescriptorProto::MethodDescriptorProto((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F9188()
{
}

void *sub_1000F91B0(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FB85C(a1, 1);
  google::protobuf::FileOptions::FileOptions((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F9214()
{
}

void *sub_1000F923C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FB918(a1, 1);
  google::protobuf::MessageOptions::MessageOptions((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F92A0()
{
}

void *sub_1000F92C8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FB9D4(a1, 1);
  google::protobuf::FieldOptions::FieldOptions((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F932C()
{
}

void *sub_1000F9354(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FBA90(a1, 1);
  google::protobuf::OneofOptions::OneofOptions((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F93B8()
{
}

void *sub_1000F93E0(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FBB4C(a1, 1);
  google::protobuf::EnumOptions::EnumOptions((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F9444()
{
}

void *sub_1000F946C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FBC08(a1, 1);
  google::protobuf::EnumValueOptions::EnumValueOptions((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F94D0()
{
}

void *sub_1000F94F8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FBCC4(a1, 1);
  google::protobuf::ServiceOptions::ServiceOptions((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F955C()
{
}

void *sub_1000F9584(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FBD80(a1, 1);
  google::protobuf::MethodOptions::MethodOptions(v2, (uint64_t)a1);
  return v2;
}

void sub_1000F95E8()
{
}

void *sub_1000F9610(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FBE3C(a1, 1);
  google::protobuf::UninterpretedOption_NamePart::UninterpretedOption_NamePart((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F9674()
{
}

void *sub_1000F969C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FBEF8(a1, 1);
  google::protobuf::UninterpretedOption::UninterpretedOption(v2, (uint64_t)a1);
  return v2;
}

void sub_1000F9700()
{
}

void *sub_1000F9728(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FBFB4(a1, 1);
  google::protobuf::SourceCodeInfo_Location::SourceCodeInfo_Location((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F978C()
{
}

void *sub_1000F97B4(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FC070(a1, 1);
  google::protobuf::SourceCodeInfo::SourceCodeInfo((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F9818()
{
}

void *sub_1000F9840(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FC12C(a1, 1);
  google::protobuf::GeneratedCodeInfo_Annotation::GeneratedCodeInfo_Annotation(v2, (uint64_t)a1);
  return v2;
}

void sub_1000F98A4()
{
}

void *sub_1000F98CC(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000FC1E8(a1, 1);
  google::protobuf::GeneratedCodeInfo::GeneratedCodeInfo((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000F9930()
{
}

uint64_t sub_1000F9954()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorSet>(0);
}

uint64_t sub_1000F995C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorSet>(a2);
}

uint64_t sub_1000F9964()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(0);
}

uint64_t sub_1000F996C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(a2);
}

uint64_t sub_1000F9974()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(0);
}

uint64_t sub_1000F997C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(a2);
}

uint64_t sub_1000F9984()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(0);
}

uint64_t sub_1000F998C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(a2);
}

uint64_t sub_1000F9994()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(0);
}

uint64_t sub_1000F999C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(a2);
}

uint64_t sub_1000F99A4()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(0);
}

uint64_t sub_1000F99AC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(a2);
}

uint64_t sub_1000F99B4()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(0);
}

uint64_t sub_1000F99BC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(a2);
}

uint64_t sub_1000F99C4()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(0);
}

uint64_t sub_1000F99CC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(a2);
}

uint64_t sub_1000F99D4()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(0);
}

uint64_t sub_1000F99DC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(a2);
}

uint64_t sub_1000F99E4()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(0);
}

uint64_t sub_1000F99EC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(a2);
}

uint64_t sub_1000F99F4()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(0);
}

uint64_t sub_1000F99FC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(a2);
}

uint64_t sub_1000F9A04()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(0);
}

uint64_t sub_1000F9A0C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(a2);
}

uint64_t sub_1000F9A14()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(0);
}

uint64_t sub_1000F9A1C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(a2);
}

uint64_t sub_1000F9A24()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(0);
}

uint64_t sub_1000F9A2C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(a2);
}

uint64_t sub_1000F9A34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_1000F9A3C()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(0);
}

uint64_t sub_1000F9A44(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(a2);
}

uint64_t sub_1000F9A4C()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(0);
}

uint64_t sub_1000F9A54(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(a2);
}

uint64_t sub_1000F9A5C()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(0);
}

uint64_t sub_1000F9A64(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(a2);
}

uint64_t sub_1000F9A6C()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(0);
}

uint64_t sub_1000F9A74(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(a2);
}

uint64_t sub_1000F9A7C()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(0);
}

uint64_t sub_1000F9A84(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(a2);
}

uint64_t sub_1000F9A8C()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(0);
}

uint64_t sub_1000F9A94(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(a2);
}

uint64_t sub_1000F9A9C()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(0);
}

uint64_t sub_1000F9AA4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(a2);
}

uint64_t sub_1000F9AAC()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(0);
}

uint64_t sub_1000F9AB4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(a2);
}

uint64_t sub_1000F9ABC()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(0);
}

uint64_t sub_1000F9AC4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(a2);
}

uint64_t sub_1000F9ACC()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(0);
}

uint64_t sub_1000F9AD4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo_Location>(a2);
}

uint64_t sub_1000F9ADC()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(0);
}

uint64_t sub_1000F9AE4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceCodeInfo>(a2);
}

uint64_t sub_1000F9AEC()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(0);
}

uint64_t sub_1000F9AF4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(a2);
}

uint64_t sub_1000F9AFC()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo>(0);
}

uint64_t sub_1000F9B04(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo>(a2);
}

uint64_t sub_1000F9B0C(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(result + 16) + 8;
    do
    {
      uint64_t v3 = *(void *)v2;
      if (*(char *)(*(void *)v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
      }
      v2 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(result + 8) = 0;
  }
  return result;
}

void sub_1000F9B58(void *a1)
{
  uint64_t v2 = (google::protobuf::FileDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::FileDescriptorProto::~FileDescriptorProto(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::FileDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1000F9BD8(uint64_t *a1, google::protobuf::FileDescriptorProto **a2, google::protobuf::FileDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      sub_1000F9C88(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (google::protobuf::FileDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileDescriptorProto>(v18);
      sub_1000F9C88(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void sub_1000F9C88(google::protobuf::FileDescriptorProto *a1, google::protobuf::FileDescriptorProto *this)
{
}

void sub_1000F9C98(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (uint64_t *)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        uint64_t v5 = *v3;
        if (*v3)
        {
          if (*(char *)(v5 + 23) < 0) {
            operator delete(*(void **)v5);
          }
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1000F9D28(void *a1)
{
  uint64_t v2 = (google::protobuf::DescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::DescriptorProto::~DescriptorProto(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::DescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1000F9DA8(void *a1)
{
  uint64_t v2 = (google::protobuf::EnumDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::EnumDescriptorProto::~EnumDescriptorProto(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::EnumDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1000F9E28(void *a1)
{
  uint64_t v2 = (google::protobuf::ServiceDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::ServiceDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1000F9EA8(void *a1)
{
  uint64_t v2 = (google::protobuf::FieldDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::FieldDescriptorProto::~FieldDescriptorProto(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::FieldDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_1000F9F28(std::string *result, std::string **a2, const std::string **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      uint64_t result = std::string::operator=(v15, v13);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (std::string *)sub_1000BBB38(v18);
      uint64_t result = std::string::operator=(v22, v21);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_1000F9FD4(uint64_t *a1, google::protobuf::DescriptorProto **a2, google::protobuf::DescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      sub_1000FA084(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (google::protobuf::DescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(v18);
      sub_1000FA084(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void sub_1000FA084(google::protobuf::DescriptorProto *a1, google::protobuf::DescriptorProto *this)
{
}

void sub_1000FA094(uint64_t *a1, google::protobuf::EnumDescriptorProto **a2, google::protobuf::EnumDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      sub_1000FA144(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (google::protobuf::EnumDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(v18);
      sub_1000FA144(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void sub_1000FA144(google::protobuf::EnumDescriptorProto *a1, google::protobuf::EnumDescriptorProto *this)
{
}

void sub_1000FA154(uint64_t *a1, google::protobuf::ServiceDescriptorProto **a2, google::protobuf::ServiceDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      sub_1000FA204(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (google::protobuf::ServiceDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(v18);
      sub_1000FA204(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void sub_1000FA204(google::protobuf::ServiceDescriptorProto *a1, google::protobuf::ServiceDescriptorProto *this)
{
}

void sub_1000FA214(uint64_t *a1, google::protobuf::FieldDescriptorProto **a2, google::protobuf::FieldDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      sub_1000FA2C4(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (google::protobuf::FieldDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(v18);
      sub_1000FA2C4(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void sub_1000FA2C4(google::protobuf::FieldDescriptorProto *a1, google::protobuf::FieldDescriptorProto *this)
{
}

void sub_1000FA2D4(void *a1)
{
  uint64_t v2 = (google::protobuf::DescriptorProto_ExtensionRange **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::DescriptorProto_ExtensionRange::~DescriptorProto_ExtensionRange(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::DescriptorProto_ExtensionRange **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1000FA354(void *a1)
{
  uint64_t v2 = (google::protobuf::OneofDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::OneofDescriptorProto::~OneofDescriptorProto(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::OneofDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1000FA3D4(uint64_t *a1, google::protobuf::DescriptorProto_ExtensionRange **a2, google::protobuf::DescriptorProto_ExtensionRange **a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      sub_1000FA484(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (google::protobuf::DescriptorProto_ExtensionRange *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(v18);
      sub_1000FA484(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void sub_1000FA484(google::protobuf::DescriptorProto_ExtensionRange *a1, google::protobuf::DescriptorProto_ExtensionRange *this)
{
}

void sub_1000FA494(uint64_t *a1, google::protobuf::OneofDescriptorProto **a2, google::protobuf::OneofDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      sub_1000FA544(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (google::protobuf::OneofDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(v18);
      sub_1000FA544(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void sub_1000FA544(google::protobuf::OneofDescriptorProto *a1, google::protobuf::OneofDescriptorProto *this)
{
}

void **sub_1000FA554(void **result, void ***a2, google::protobuf::DescriptorProto_ReservedRange **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      uint64_t result = sub_1000FA604(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(v18);
      uint64_t result = sub_1000FA604(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_1000FA604(google::protobuf::DescriptorProto_ReservedRange *a1, void **this)
{
  return google::protobuf::DescriptorProto_ReservedRange::MergeFrom(this, a1);
}

void sub_1000FA614(void *a1)
{
  uint64_t v2 = (google::protobuf::UninterpretedOption **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::UninterpretedOption::~UninterpretedOption(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::UninterpretedOption **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_1000FA694(std::string *result, std::string **a2, google::protobuf::UninterpretedOption **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      uint64_t result = sub_1000FA744(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption>(v18);
      uint64_t result = sub_1000FA744(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *sub_1000FA744(google::protobuf::UninterpretedOption *a1, std::string *this)
{
  return google::protobuf::UninterpretedOption::MergeFrom(this, a1);
}

void sub_1000FA754(void *a1)
{
  uint64_t v2 = (google::protobuf::EnumValueDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::EnumValueDescriptorProto::~EnumValueDescriptorProto(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::EnumValueDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1000FA7D4(uint64_t *a1, google::protobuf::EnumValueDescriptorProto **a2, google::protobuf::EnumValueDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      sub_1000FA884(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (google::protobuf::EnumValueDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(v18);
      sub_1000FA884(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void sub_1000FA884(google::protobuf::EnumValueDescriptorProto *a1, google::protobuf::EnumValueDescriptorProto *this)
{
}

void **sub_1000FA894(void **result, void ***a2, google::protobuf::EnumDescriptorProto_EnumReservedRange **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      uint64_t result = sub_1000FA944(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(v18);
      uint64_t result = sub_1000FA944(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_1000FA944(google::protobuf::EnumDescriptorProto_EnumReservedRange *a1, void **this)
{
  return google::protobuf::EnumDescriptorProto_EnumReservedRange::MergeFrom(this, a1);
}

void sub_1000FA954(void *a1)
{
  uint64_t v2 = (google::protobuf::MethodDescriptorProto **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::MethodDescriptorProto::~MethodDescriptorProto(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::MethodDescriptorProto **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1000FA9D4(uint64_t *a1, google::protobuf::MethodDescriptorProto **a2, google::protobuf::MethodDescriptorProto **a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      sub_1000FAA84(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (google::protobuf::MethodDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(v18);
      sub_1000FAA84(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void sub_1000FAA84(google::protobuf::MethodDescriptorProto *a1, google::protobuf::MethodDescriptorProto *this)
{
}

void sub_1000FAA94(void *a1)
{
  uint64_t v2 = (google::protobuf::UninterpretedOption_NamePart **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::UninterpretedOption_NamePart **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_1000FAB14(std::string *result, std::string **a2, google::protobuf::UninterpretedOption_NamePart **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      int v15 = *v12++;
      uint64_t result = sub_1000FABC4(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UninterpretedOption_NamePart>(v18);
      uint64_t result = sub_1000FABC4(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *sub_1000FABC4(google::protobuf::UninterpretedOption_NamePart *a1, std::string *this)
{
  return google::protobuf::UninterpretedOption_NamePart::MergeFrom(this, a1);
}

unsigned __int8 *sub_1000FABD4(google::protobuf::io::EpsCopyOutputStream *this, int a2, int *a3, unsigned int a4, unsigned __int8 *a5, uint64_t (*a6)(uint64_t))
{
  if (*(void *)this <= (unint64_t)a5) {
    a5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a5);
  }
  unsigned int v11 = sub_10004FAC0((uint64_t)this, a2, a4, a5);
  unsigned int v12 = (int *)*((void *)a3 + 1);
  unsigned int v13 = &v12[*a3];
  do
  {
    if (*(void *)this <= (unint64_t)v11) {
      unsigned int v11 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, v11);
    }
    uint64_t v14 = *v12++;
    unint64_t v15 = a6(v14);
    if (v15 > 0x7F)
    {
      unsigned __int8 *v11 = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      if (v15 >> 14)
      {
        v11 += 2;
        do
        {
          *(v11 - sub_1000333D0((uint64_t *)this + 1) = v16 | 0x80;
          unint64_t v17 = v16 >> 7;
          ++v11;
          unint64_t v18 = v16 >> 14;
          v16 >>= 7;
        }
        while (v18);
        *(v11 - sub_1000333D0((uint64_t *)this + 1) = v17;
      }
      else
      {
        v11[1] = v16;
        v11 += 2;
      }
    }
    else
    {
      *v11++ = v15;
    }
  }
  while (v12 < v13);
  return v11;
}

void sub_1000FACE4(void *a1)
{
  uint64_t v2 = (google::protobuf::GeneratedCodeInfo_Annotation **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::GeneratedCodeInfo_Annotation::~GeneratedCodeInfo_Annotation(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::GeneratedCodeInfo_Annotation **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

unint64_t *sub_1000FAD64(unint64_t *result, google::protobuf::GeneratedCodeInfo_Annotation **a2, google::protobuf::GeneratedCodeInfo_Annotation **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      uint64_t result = sub_1000FAE14(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    unint64_t v18 = *v9;
    unint64_t v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      std::string::size_type v21 = *v19++;
      unsigned int v22 = (google::protobuf::GeneratedCodeInfo_Annotation *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::GeneratedCodeInfo_Annotation>(v18);
      uint64_t result = sub_1000FAE14(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

unint64_t *sub_1000FAE14(google::protobuf::GeneratedCodeInfo_Annotation *a1, google::protobuf::GeneratedCodeInfo_Annotation *this)
{
  return google::protobuf::GeneratedCodeInfo_Annotation::MergeFrom((unint64_t *)this, a1);
}

void *sub_1000FAE24(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))google::protobuf::FileDescriptorSet::~FileDescriptorSet);
}

void *sub_1000FAEE0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0xD8uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0xD8uLL, (void (*)(void *))google::protobuf::FileDescriptorProto::~FileDescriptorProto);
}

void *sub_1000FAF9C(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_1000FB010(a1, 1);
  void *v2 = off_1001CF578;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_DescriptorProto_ExtensionRange_google_2fprotobuf_2fdescriptor_2eproto);
  }
  v2[3] = 0;
  v2[4] = 0;
  return v2;
}

void *sub_1000FB010(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))google::protobuf::DescriptorProto_ExtensionRange::~DescriptorProto_ExtensionRange);
}

void *sub_1000FB0CC(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_1000FB184);
}

uint64_t *sub_1000FB184(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_1000FB1A4(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0xE8uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0xE8uLL, (void (*)(void *))google::protobuf::DescriptorProto::~DescriptorProto);
}

void *sub_1000FB260(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x48uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x48uLL, (void (*)(void *))google::protobuf::ExtensionRangeOptions::~ExtensionRangeOptions);
}

void *sub_1000FB31C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x60uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x60uLL, (void (*)(void *))google::protobuf::FieldDescriptorProto::~FieldDescriptorProto);
}

void *sub_1000FB3D8(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))google::protobuf::OneofDescriptorProto::~OneofDescriptorProto);
}

void *sub_1000FB494(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_1000FB54C);
}

uint64_t *sub_1000FB54C(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_1000FB56C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x70uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x70uLL, (void (*)(void *))google::protobuf::EnumDescriptorProto::~EnumDescriptorProto);
}

void *sub_1000FB628(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))google::protobuf::EnumValueDescriptorProto::~EnumValueDescriptorProto);
}

void *sub_1000FB6E4(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x40uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x40uLL, (void (*)(void *))google::protobuf::ServiceDescriptorProto::~ServiceDescriptorProto);
}

void *sub_1000FB7A0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x40uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x40uLL, (void (*)(void *))google::protobuf::MethodDescriptorProto::~MethodDescriptorProto);
}

void *sub_1000FB85C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0xA8uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0xA8uLL, (void (*)(void *))google::protobuf::FileOptions::~FileOptions);
}

void *sub_1000FB918(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x50uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x50uLL, (void (*)(void *))google::protobuf::MessageOptions::~MessageOptions);
}

void *sub_1000FB9D4(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x58uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x58uLL, (void (*)(void *))google::protobuf::FieldOptions::~FieldOptions);
}

void *sub_1000FBA90(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x48uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x48uLL, (void (*)(void *))google::protobuf::OneofOptions::~OneofOptions);
}

void *sub_1000FBB4C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x50uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x50uLL, (void (*)(void *))google::protobuf::EnumOptions::~EnumOptions);
}

void *sub_1000FBC08(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x50uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x50uLL, (void (*)(void *))google::protobuf::EnumValueOptions::~EnumValueOptions);
}

void *sub_1000FBCC4(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x50uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x50uLL, (void (*)(void *))google::protobuf::ServiceOptions::~ServiceOptions);
}

void *sub_1000FBD80(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x50uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x50uLL, (void (*)(void *))google::protobuf::MethodOptions::~MethodOptions);
}

void *sub_1000FBE3C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))google::protobuf::UninterpretedOption_NamePart::~UninterpretedOption_NamePart);
}

void *sub_1000FBEF8(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x60uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x60uLL, (void (*)(void *))google::protobuf::UninterpretedOption::~UninterpretedOption);
}

void *sub_1000FBFB4(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x70uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x70uLL, (void (*)(void *))google::protobuf::SourceCodeInfo_Location::~SourceCodeInfo_Location);
}

void *sub_1000FC070(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))google::protobuf::SourceCodeInfo::~SourceCodeInfo);
}

void *sub_1000FC12C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x40uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x40uLL, (void (*)(void *))google::protobuf::GeneratedCodeInfo_Annotation::~GeneratedCodeInfo_Annotation);
}

void *sub_1000FC1E8(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))google::protobuf::GeneratedCodeInfo::~GeneratedCodeInfo);
}

void sub_1000FC2A4()
{
}

uint64_t google::protobuf::EncodedDescriptorDatabase::Add(google::protobuf::EncodedDescriptorDatabase *this, char *a2, int a3)
{
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v11, 0);
  if (google::protobuf::MessageLite::ParseFromArray((google::protobuf::MessageLite *)v11, a2, a3))
  {
    uint64_t v6 = sub_1000FC39C(*((void *)this + 1), (uint64_t)v11, (std::string::size_type)a2, a3);
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor_database.cc", 559);
    unsigned int v7 = google::protobuf::internal::LogMessage::operator<<(v10, "Invalid file descriptor data passed to EncodedDescriptorDatabase::Add().");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    uint64_t v6 = 0;
  }
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v11);
  return v6;
}

void sub_1000FC370(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v3 = va_arg(va1, void *);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v6 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v9 = va_arg(va1, void);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)va1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000FC39C(uint64_t a1, uint64_t a2, std::string::size_type a3, int a4)
{
  v54.__r_.__value_.__r.__words[0] = a3;
  LODWORD(v54.__r_.__value_.__r.__words[1]) = a4;
  uint64_t v55 = 0;
  uint64_t v56 = 0;
  v54.__r_.__value_.__r.__words[2] = 0;
  sub_1000FDD90((uint64_t *)a1, (uint64_t *)&v54);
  if (SHIBYTE(v56) < 0) {
    operator delete((void *)v54.__r_.__value_.__r.__words[2]);
  }
  sub_1000BB974(v57, (uint64_t *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL), v6);
  if ((sub_1000FD3B8(v57[0], (uint64_t)v57[1]) & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v54, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor_database.cc", 631);
    unsigned int v13 = google::protobuf::internal::LogMessage::operator<<(&v54, "Invalid package name: ");
    uint64_t v14 = google::protobuf::internal::LogMessage::operator<<(v13, (const std::string::value_type *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL));
    google::protobuf::internal::LogFinisher::operator=((int)&v58, (const char **)&v14->__r_.__value_.__l.__data_);
LABEL_16:
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v54.__r_.__value_.__l.__data_);
    return 0;
  }
  sub_1000BB974(&v53, (uint64_t *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL), v7);
  long long v58 = v53;
  sub_1000D7AF4((uint64_t)&v58, &v54);
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = v9 - 24;
  if (*(char *)(v9 - 1) < 0) {
    operator delete(*(void **)v10);
  }
  long long v11 = *(_OWORD *)&v54.__r_.__value_.__l.__data_;
  *(void *)(v10 + 1sub_1000FA614((void *)this + 6) = *((void *)&v54.__r_.__value_.__l + 2);
  *(_OWORD *)uint64_t v10 = v11;
  LODWORD(v54.__r_.__value_.__l.__data_) = -858993459 * ((*(void *)(a1 + 8) - *(void *)a1) >> 3) - 1;
  sub_1000BB974(&v52, (uint64_t *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v8);
  long long v58 = v52;
  sub_1000D7AF4((uint64_t)&v58, &v54.__r_.__value_.__l.__size_);
  sub_1000FE4F8((uint64_t **)(a1 + 24), (uint64_t)&v54, (uint64_t)&v54);
  if ((v12 & 1) == 0)
  {
    if (SHIBYTE(v55) < 0) {
      operator delete((void *)v54.__r_.__value_.__l.__size_);
    }
    goto LABEL_15;
  }
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v16 = *(void *)(a1 + 64);
  int v17 = (uint64_t *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
  uint64_t v59 = *(void *)(a1 + 48);
  LOBYTE(v58) = 0;
  uint64_t v19 = sub_1000FE808(v15, v16, v17, (uint64_t)&v59);
  if (v16 == v19)
  {
    BOOL v20 = 0;
  }
  else
  {
    sub_1000BB974(&v58, v17, v18);
    BOOL v20 = !sub_1000FE79C((uint64_t)&v59, (const void *)v58, *((const char **)&v58 + 1), v19);
  }
  if (SHIBYTE(v55) < 0)
  {
    operator delete((void *)v54.__r_.__value_.__l.__size_);
    if (v20) {
      goto LABEL_15;
    }
  }
  else if (v20)
  {
LABEL_15:
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v54, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor_database.cc", 641);
    std::string::size_type v21 = google::protobuf::internal::LogMessage::operator<<(&v54, "File already exists in database: ");
    unsigned int v22 = google::protobuf::internal::LogMessage::operator<<(v21, (const std::string::value_type *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL));
    google::protobuf::internal::LogFinisher::operator=((int)&v58, (const char **)&v22->__r_.__value_.__l.__data_);
    goto LABEL_16;
  }
  uint64_t v24 = *(void *)(a2 + 64);
  if (v24) {
    uint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    uint64_t v25 = 0;
  }
  uint64_t v26 = *(int *)(a2 + 56);
  if (v26)
  {
    uint64_t v27 = 8 * v26;
    while (1)
    {
      uint64_t v28 = *v25;
      sub_1000BB974(v51, (uint64_t *)(*(void *)(*v25 + 216) & 0xFFFFFFFFFFFFFFFELL), v18);
      uint64_t result = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(a1, v51[0], (std::string::size_type)v51[1]);
      if (!result) {
        break;
      }
      sub_1000BB974(v50, (uint64_t *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v29);
      if ((sub_1000FDEEC(a1, v50[0], (const char *)v50[1], v28) & 1) == 0) {
        return 0;
      }
      ++v25;
      v27 -= 8;
      if (!v27) {
        goto LABEL_28;
      }
    }
  }
  else
  {
LABEL_28:
    uint64_t v30 = *(void *)(a2 + 88);
    if (v30) {
      uint64_t v31 = v30 + 8;
    }
    else {
      uint64_t v31 = 0;
    }
    uint64_t v32 = *(int *)(a2 + 80);
    if (v32)
    {
      uint64_t v33 = 8 * v32;
      do
      {
        sub_1000BB974(v49, (uint64_t *)(*(void *)(*(void *)v31 + 96) & 0xFFFFFFFFFFFFFFFELL), v18);
        if ((google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(a1, v49[0], (std::string::size_type)v49[1]) & 1) == 0)return 0; {
        v31 += 8;
        }
        v33 -= 8;
      }
      while (v33);
    }
    uint64_t v34 = *(void *)(a2 + 136);
    if (v34) {
      unint64_t v35 = (uint64_t *)(v34 + 8);
    }
    else {
      unint64_t v35 = 0;
    }
    uint64_t v36 = *(int *)(a2 + 128);
    if (v36)
    {
      uint64_t v37 = 8 * v36;
      while (1)
      {
        uint64_t v38 = *v35;
        sub_1000BB974(v48, (uint64_t *)(*(void *)(*v35 + 24) & 0xFFFFFFFFFFFFFFFELL), v18);
        uint64_t result = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(a1, v48[0], (std::string::size_type)v48[1]);
        if (!result) {
          break;
        }
        sub_1000BB974(v47, (uint64_t *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v39);
        if ((sub_1000FDFBC(a1, v47[0], (const char *)v47[1], v38) & 1) == 0) {
          return 0;
        }
        ++v35;
        v37 -= 8;
        if (!v37) {
          goto LABEL_43;
        }
      }
    }
    else
    {
LABEL_43:
      uint64_t v40 = *(void *)(a2 + 112);
      if (v40) {
        unint64_t v41 = (uint64_t *)(v40 + 8);
      }
      else {
        unint64_t v41 = 0;
      }
      uint64_t v42 = *(int *)(a2 + 104);
      if (v42)
      {
        uint64_t v43 = 8 * v42 - 8;
        do
        {
          uint64_t v44 = *v41++;
          sub_1000BB974(v46, (uint64_t *)(*(void *)(v44 + 48) & 0xFFFFFFFFFFFFFFFELL), v18);
          uint64_t result = google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(a1, v46[0], (std::string::size_type)v46[1]);
          if (result) {
            BOOL v45 = v43 == 0;
          }
          else {
            BOOL v45 = 1;
          }
          v43 -= 8;
        }
        while (!v45);
      }
      else
      {
        return 1;
      }
    }
  }
  return result;
}

void sub_1000FC770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,void *__p,int a28,__int16 a29,char a30,char a31,int a32,__int16 a33,char a34,char a35)
{
}

char *google::protobuf::EncodedDescriptorDatabase::FindFileByName(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  sub_1000BB974(v7, a2, a3);
  uint64_t result = (char *)google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FindFile(v4, v7[0], (uint64_t)v7[1]);
  if (result) {
    return (char *)google::protobuf::MessageLite::ParseFromArray((google::protobuf::MessageLite *)a3, result, v6);
  }
  return result;
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FindFile(uint64_t a1, void *a2, uint64_t a3)
{
  __s2 = a2;
  uint64_t v11 = a3;
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat((google::protobuf::EncodedDescriptorDatabase::DescriptorIndex *)a1);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  __s1 = *(void **)(a1 + 48);
  char v12 = 0;
  uint64_t v6 = sub_1000FFF30(v4, v5, (uint64_t)&__s2, (uint64_t)&__s1);
  if (*(void *)(a1 + 64) != v6
    && (uint64_t v8 = (int *)v6, sub_1000BB974(&__s1, (uint64_t *)(v6 + 8), v7), __n == v11)
    && ((uint64_t)__n < 1 || __s1 == __s2 || !memcmp(__s1, __s2, __n)))
  {
    return *(void *)(*(void *)a1 + 40 * *v8);
  }
  else
  {
    return 0;
  }
}

char *google::protobuf::EncodedDescriptorDatabase::FindFileContainingSymbol(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v4 = *(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex **)(a1 + 8);
  sub_1000BB974(v9, a2, a3);
  uint64_t v5 = v9[0];
  uint64_t v6 = (const char *)v9[1];
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(v4);
  uint64_t result = (char *)google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FindSymbolOnlyFlat(v4, v5, v6);
  if (result) {
    return (char *)google::protobuf::MessageLite::ParseFromArray((google::protobuf::MessageLite *)a3, result, v8);
  }
  return result;
}

char *google::protobuf::EncodedDescriptorDatabase::FindFileContainingExtension(uint64_t a1, uint64_t *a2, const char *a3, google::protobuf::MessageLite *a4)
{
  int v5 = (int)a3;
  uint64_t v6 = *(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex **)(a1 + 8);
  sub_1000BB974(v9, a2, a3);
  uint64_t result = (char *)google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FindExtension(v6, v9[0], (int64_t)v9[1], v5);
  if (result) {
    return (char *)google::protobuf::MessageLite::ParseFromArray(a4, result, v8);
  }
  return result;
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FindExtension(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex *a1, const void *a2, int64_t a3, int a4)
{
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(a1);
  uint64_t v8 = *((void *)a1 + 21);
  uint64_t v9 = *((void *)a1 + 22);
  *(void *)&long long v16 = a2;
  *((void *)&v16 + sub_1000333D0((uint64_t *)this + 1) = a3;
  int v17 = a4;
  uint64_t v19 = *((void *)a1 + 20);
  char v18 = 0;
  uint64_t v10 = sub_1000FF400(v8, v9, &v16, &v19);
  if (*((void *)a1 + 22) != v10
    && (v12 = (int *)v10, unsigned int v13 = (const void *)sub_1000FD7F8(v10, (uint64_t)a1, v11), v14 == a3)
    && (a3 < 1 || v13 == a2 || !memcmp(v13, a2, a3))
    && v12[8] == a4)
  {
    return *(void *)(*(void *)a1 + 40 * *v12);
  }
  else
  {
    return 0;
  }
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindAllExtensionNumbers(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4 = *(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex **)(a1 + 8);
  sub_1000BB974(v6, a2, a3);
  return google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FindAllExtensionNumbers(v4, v6[0], (int64_t)v6[1], (uint64_t)a3);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FindAllExtensionNumbers(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex *a1, const void *a2, int64_t a3, uint64_t a4)
{
  google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(a1);
  uint64_t v8 = *((void *)a1 + 21);
  uint64_t v9 = *((void *)a1 + 22);
  *(void *)&long long v30 = a2;
  *((void *)&v30 + sub_1000333D0((uint64_t *)this + 1) = a3;
  int v31 = 0;
  uint64_t v33 = *((void *)a1 + 20);
  char v32 = 0;
  uint64_t v10 = sub_1000FF400(v8, v9, &v30, &v33);
  if (*((void *)a1 + 22) == v10 || (v12 = v10, unsigned int v13 = (const void *)sub_1000FD7F8(v10, (uint64_t)a1, v11), v15 != a3))
  {
    char v16 = 0;
  }
  else
  {
    char v16 = 0;
    while (a3 < 1 || v13 == a2 || !memcmp(v13, a2, a3))
    {
      char v18 = *(_DWORD **)(a4 + 8);
      unint64_t v17 = *(void *)(a4 + 16);
      if ((unint64_t)v18 >= v17)
      {
        BOOL v20 = *(_DWORD **)a4;
        uint64_t v21 = ((uint64_t)v18 - *(void *)a4) >> 2;
        unint64_t v22 = v21 + 1;
        if ((unint64_t)(v21 + 1) >> 62) {
          sub_100078F84();
        }
        uint64_t v23 = v17 - (void)v20;
        if (v23 >> 1 > v22) {
          unint64_t v22 = v23 >> 1;
        }
        if ((unint64_t)v23 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v24 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v24 = v22;
        }
        if (v24)
        {
          uint64_t v25 = (char *)sub_1000DD508(a4 + 16, v24);
          BOOL v20 = *(_DWORD **)a4;
          char v18 = *(_DWORD **)(a4 + 8);
        }
        else
        {
          uint64_t v25 = 0;
        }
        uint64_t v26 = &v25[4 * v21];
        *(_DWORD *)uint64_t v26 = *(_DWORD *)(v12 + 32);
        uint64_t v19 = v26 + 4;
        while (v18 != v20)
        {
          int v27 = *--v18;
          *((_DWORD *)v26 - sub_1000333D0((uint64_t *)this + 1) = v27;
          v26 -= 4;
        }
        *(void *)a4 = v26;
        *(void *)(a4 + 8) = v19;
        *(void *)(a4 + 1sub_1000FA614((void *)this + 6) = &v25[4 * v24];
        if (v20) {
          operator delete(v20);
        }
      }
      else
      {
        *char v18 = *(_DWORD *)(v12 + 32);
        uint64_t v19 = v18 + 1;
      }
      *(void *)(a4 + 8) = v19;
      v12 += 40;
      if (v12 == *((void *)a1 + 22))
      {
        char v16 = 1;
        return v16 & 1;
      }
      unsigned int v13 = (const void *)sub_1000FD7F8(v12, (uint64_t)a1, v14);
      char v16 = 1;
      if (v28 != a3) {
        return v16 & 1;
      }
    }
  }
  return v16 & 1;
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::AddSymbol(uint64_t a1, unsigned __int8 *a2, std::string::size_type a3)
{
  int v72 = -858993459 * ((*(void *)(a1 + 8) - *(void *)a1) >> 3) - 1;
  __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)a2;
  __p[0].__r_.__value_.__l.__size_ = a3;
  sub_1000D7AF4((uint64_t)__p, &v73);
  sub_1000FD2F4(&v72, (void *)a1, v6, &v71);
  if ((sub_1000FD3B8(a2, a3) & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor_database.cc", 703);
    char v16 = google::protobuf::internal::LogMessage::operator<<(__p, "Invalid symbol name: ");
    unint64_t v17 = google::protobuf::internal::LogMessage::operator<<(v16, (const std::string::value_type *)&v71);
    google::protobuf::internal::LogFinisher::operator=((int)&v78, (const char **)&v17->__r_.__value_.__l.__data_);
LABEL_53:
    google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
    uint64_t v67 = 0;
    goto LABEL_54;
  }
  uint64_t v8 = (uint64_t *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 88);
  uint64_t v10 = (uint64_t *)(a1 + 88);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(a1 + 88);
    do
    {
      int v11 = sub_1000FED44((void **)(a1 + 104), &v72, (char *)(v9 + 32));
      uint64_t v12 = (uint64_t *)(v9 + 8);
      if (v11)
      {
        uint64_t v12 = (uint64_t *)v9;
        uint64_t v10 = (uint64_t *)v9;
      }
      uint64_t v9 = *v12;
    }
    while (*v12);
  }
  if (v10 == *(uint64_t **)(a1 + 80))
  {
    uint64_t v14 = v10;
  }
  else
  {
    unsigned int v13 = (uint64_t *)*v10;
    if (*v10)
    {
      do
      {
        uint64_t v14 = v13;
        unsigned int v13 = (uint64_t *)v13[1];
      }
      while (v13);
    }
    else
    {
      do
      {
        uint64_t v14 = (uint64_t *)v10[2];
        BOOL v15 = *v14 == (void)v10;
        uint64_t v10 = v14;
      }
      while (v15);
    }
  }
  sub_1000BB974(&v70, (uint64_t *)&v71, v7);
  long long v82 = v70;
  if (v14 != v8)
  {
    sub_1000FD2F4((int *)v14 + 8, (void *)a1, v18, __p);
    sub_1000BB974(&v80, (uint64_t *)__p, v19);
    BOOL v20 = sub_1000FD75C(v80, v81, (unsigned __int8 *)v82, *((int64_t *)&v82 + 1));
    BOOL v21 = v20;
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p[0].__r_.__value_.__l.__data_);
      if (v21) {
        goto LABEL_18;
      }
    }
    else if (v20)
    {
LABEL_18:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor_database.cc", 668);
      unint64_t v22 = google::protobuf::internal::LogMessage::operator<<(__p, "Symbol name \"");
      uint64_t v23 = google::protobuf::internal::LogMessage::operator<<(v22, (uint64_t)&v82);
      unint64_t v24 = google::protobuf::internal::LogMessage::operator<<(v23, "\" conflicts with the existing symbol \"");
      sub_1000FD2F4((int *)v14 + 8, (void *)a1, v25, &v78);
      uint64_t v26 = google::protobuf::internal::LogMessage::operator<<(v24, (const std::string::value_type *)&v78);
      int v27 = google::protobuf::internal::LogMessage::operator<<(v26, "\".");
      google::protobuf::internal::LogFinisher::operator=((int)&v77, (const char **)&v27->__r_.__value_.__l.__data_);
      goto LABEL_51;
    }
    uint64_t v28 = (uint64_t *)v14[1];
    if (v28)
    {
      do
      {
        BOOL v29 = v28;
        uint64_t v28 = (uint64_t *)*v28;
      }
      while (v28);
    }
    else
    {
      do
      {
        BOOL v29 = (uint64_t *)v14[2];
        BOOL v15 = *v29 == (void)v14;
        uint64_t v14 = v29;
      }
      while (!v15);
    }
    if (v29 != v8)
    {
      long long v30 = v82;
      sub_1000FD2F4((int *)v29 + 8, (void *)a1, v18, __p);
      sub_1000BB974(&v75, (uint64_t *)__p, v31);
      BOOL v32 = sub_1000FD75C((unsigned __int8 *)v30, *((int64_t *)&v30 + 1), v75, v76);
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      uint64_t v8 = v29;
      if (v32)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor_database.cc", 682);
        uint64_t v33 = google::protobuf::internal::LogMessage::operator<<(__p, "Symbol name \"");
        uint64_t v34 = google::protobuf::internal::LogMessage::operator<<(v33, (uint64_t)&v82);
        unint64_t v35 = google::protobuf::internal::LogMessage::operator<<(v34, "\" conflicts with the existing symbol \"");
        sub_1000FD2F4((int *)v29 + 8, (void *)a1, v36, &v78);
        uint64_t v37 = google::protobuf::internal::LogMessage::operator<<(v35, (const std::string::value_type *)&v78);
        uint64_t v38 = google::protobuf::internal::LogMessage::operator<<(v37, "\".");
        google::protobuf::internal::LogFinisher::operator=((int)&v77, (const char **)&v38->__r_.__value_.__l.__data_);
        goto LABEL_51;
      }
    }
  }
  uint64_t v39 = *(void *)(a1 + 112);
  uint64_t v40 = *(void *)(a1 + 120);
  __p[0].__r_.__value_.__r.__words[0] = *(void *)(a1 + 104);
  if (v40 == v39)
  {
    uint64_t v42 = v39;
  }
  else
  {
    unint64_t v41 = (v40 - v39) >> 5;
    do
    {
      if (sub_1000FED44(__p, &v72, (char *)(v39 + 32 * (v41 >> 1))))
      {
        v41 >>= 1;
      }
      else
      {
        v39 += 32 * (v41 >> 1) + 32;
        v41 += ~(v41 >> 1);
      }
    }
    while (v41);
    uint64_t v42 = *(void *)(a1 + 112);
  }
  if (v39 == v42) {
    uint64_t v43 = 0;
  }
  else {
    uint64_t v43 = -1;
  }
  sub_1000BB974(&v69, (uint64_t *)&v71, v18);
  BOOL v45 = (int *)(v39 + 32 * v43);
  uint64_t v46 = *(int **)(a1 + 120);
  long long v82 = v69;
  if (v45 != v46)
  {
    sub_1000FD2F4(v45, (void *)a1, v44, __p);
    sub_1000BB974(&v80, (uint64_t *)__p, v47);
    BOOL v48 = sub_1000FD75C(v80, v81, (unsigned __int8 *)v82, *((int64_t *)&v82 + 1));
    BOOL v50 = v48;
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p[0].__r_.__value_.__l.__data_);
      if (v50) {
        goto LABEL_44;
      }
    }
    else if (v48)
    {
LABEL_44:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor_database.cc", 668);
      unsigned int v51 = google::protobuf::internal::LogMessage::operator<<(__p, "Symbol name \"");
      long long v52 = google::protobuf::internal::LogMessage::operator<<(v51, (uint64_t)&v82);
      long long v53 = google::protobuf::internal::LogMessage::operator<<(v52, "\" conflicts with the existing symbol \"");
      sub_1000FD2F4(v45, (void *)a1, v54, &v78);
      uint64_t v55 = google::protobuf::internal::LogMessage::operator<<(v53, (const std::string::value_type *)&v78);
      uint64_t v56 = google::protobuf::internal::LogMessage::operator<<(v55, "\".");
      google::protobuf::internal::LogFinisher::operator=((int)&v77, (const char **)&v56->__r_.__value_.__l.__data_);
      goto LABEL_51;
    }
    unint64_t v57 = v45 + 8;
    if (v57 != v46)
    {
      long long v58 = v82;
      sub_1000FD2F4(v57, (void *)a1, v49, __p);
      sub_1000BB974(&v75, (uint64_t *)__p, v59);
      BOOL v60 = sub_1000FD75C((unsigned __int8 *)v58, *((int64_t *)&v58 + 1), v75, v76);
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      if (v60)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor_database.cc", 682);
        uint64_t v61 = google::protobuf::internal::LogMessage::operator<<(__p, "Symbol name \"");
        int v62 = google::protobuf::internal::LogMessage::operator<<(v61, (uint64_t)&v82);
        uint64_t v63 = google::protobuf::internal::LogMessage::operator<<(v62, "\" conflicts with the existing symbol \"");
        sub_1000FD2F4(v57, (void *)a1, v64, &v78);
        unint64_t v65 = google::protobuf::internal::LogMessage::operator<<(v63, (const std::string::value_type *)&v78);
        unsigned int v66 = google::protobuf::internal::LogMessage::operator<<(v65, "\".");
        google::protobuf::internal::LogFinisher::operator=((int)&v77, (const char **)&v66->__r_.__value_.__l.__data_);
LABEL_51:
        if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v78.__r_.__value_.__l.__data_);
        }
        goto LABEL_53;
      }
    }
  }
  sub_1000FEFDC((uint64_t **)(a1 + 80), v8, (char *)&v72, (uint64_t)&v72);
  uint64_t v67 = 1;
LABEL_54:
  if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v71.__r_.__value_.__l.__data_);
  }
  if (v74 < 0) {
    operator delete(v73);
  }
  return v67;
}

void sub_1000FD224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  google::protobuf::internal::LogMessage::~LogMessage(&a36);
  if (a19 < 0) {
    operator delete(a14);
  }
  if (a26 < 0) {
    operator delete(a21);
  }
  _Unwind_Resume(a1);
}

void sub_1000FD2F4(int *a1@<X0>, void *a2@<X1>, const char *a3@<X2>, std::string *a4@<X8>)
{
  int v5 = (uint64_t *)(a1 + 2);
  sub_1000BB974(&v10, (uint64_t *)(*a2 + 40 * *a1 + 16), a3);
  uint64_t v7 = "";
  if (v11) {
    uint64_t v7 = ".";
  }
  v9[0] = v7;
  v9[1] = v11 != 0;
  sub_1000BB974(&v8, v5, v6);
  google::protobuf::StrCat((uint64_t)&v10, (uint64_t)v9, (uint64_t)&v8, a4);
}

uint64_t sub_1000FD3B8(unsigned __int8 *a1, uint64_t a2)
{
  if (!a2) {
    return 1;
  }
  while (1)
  {
    int v2 = *a1;
    if (v2 != 46 && v2 != 95)
    {
      unsigned int v3 = v2 - 58;
      unsigned int v4 = (v2 & 0xFFFFFFDF) - 91;
      if (v3 <= 0xFFFFFFF5 && v4 < 0xFFFFFFE6) {
        break;
      }
    }
    ++a1;
    if (!--a2) {
      return 1;
    }
  }
  return 0;
}

void google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::EnsureFlat(google::protobuf::EncodedDescriptorDatabase::DescriptorIndex *this)
{
  sub_1000FD840((uint64_t)this);
  uint64_t v2 = *((void *)this + 5);
  if (v2)
  {
    sub_1000FF4B0(&v14, v2 + ((uint64_t)(*((void *)this + 8) - *((void *)this + 7)) >> 5));
    unsigned int v3 = (void *)*((void *)this + 3);
    unsigned int v4 = (_DWORD *)*((void *)this + 7);
    int v5 = (_DWORD *)*((void *)this + 8);
    char v16 = (void *)*((void *)this + 6);
    sub_1000FF618(v3, (void *)this + 4, v4, v5, (_DWORD *)v14, (uint64_t)&v16);
    sub_1000FF810((uint64_t *)this + 7);
    *(_OWORD *)((char *)this + 5sub_1000FA614((void *)this + 6) = v14;
    *((void *)this + 9) = v15;
    uint64_t v15 = 0;
    long long v14 = 0uLL;
    sub_1000E06D8((uint64_t)this + 24, *((char **)this + 4));
    *((void *)this + 4) = 0;
    *((void *)this + sub_1000FA614((void *)this + 5) = 0;
    *((void *)this + 3) = (char *)this + 32;
    unint64_t v17 = (void **)&v14;
    sub_1000FF574(&v17);
  }
  uint64_t v6 = *((void *)this + 12);
  if (v6)
  {
    sub_1000FF84C(&v14, v6 + ((uint64_t)(*((void *)this + 15) - *((void *)this + 14)) >> 5));
    uint64_t v7 = (void *)*((void *)this + 10);
    uint64_t v8 = (_DWORD *)*((void *)this + 14);
    uint64_t v9 = (_DWORD *)*((void *)this + 15);
    char v16 = (void *)*((void *)this + 13);
    sub_1000FF8CC(v7, (void *)this + 11, v8, v9, (int *)v14, &v16);
    sub_1000FF810((uint64_t *)this + 14);
    *((_OWORD *)this + 7) = v14;
    *((void *)this + 1sub_1000FA614((void *)this + 6) = v15;
    uint64_t v15 = 0;
    long long v14 = 0uLL;
    sub_1000E06D8((uint64_t)this + 80, *((char **)this + 11));
    *((void *)this + 1sub_1000333D0((uint64_t *)this + 1) = 0;
    *((void *)this + 1sub_1000FACE4((void *)this + 2) = 0;
    *((void *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = (char *)this + 88;
    unint64_t v17 = (void **)&v14;
    sub_1000FF574(&v17);
  }
  uint64_t v10 = *((void *)this + 19);
  if (v10)
  {
    sub_1000FF9CC(&v14, v10 - 0x3333333333333333 * ((uint64_t)(*((void *)this + 22) - *((void *)this + 21)) >> 3));
    uint64_t v11 = (void *)*((void *)this + 17);
    uint64_t v12 = *((void *)this + 21);
    uint64_t v13 = *((void *)this + 22);
    char v16 = (void *)*((void *)this + 20);
    sub_1000FFB68(v11, (void *)this + 18, v12, v13, (_DWORD *)v14, (uint64_t *)&v16);
    sub_1000FFD8C((uint64_t *)this + 21);
    *(_OWORD *)((char *)this + 168) = v14;
    *((void *)this + 23) = v15;
    uint64_t v15 = 0;
    long long v14 = 0uLL;
    sub_1000E06D8((uint64_t)this + 136, *((char **)this + 18));
    *((void *)this + 18) = 0;
    *((void *)this + 19) = 0;
    *((void *)this + 17) = (char *)this + 144;
    unint64_t v17 = (void **)&v14;
    sub_1000FFAC4(&v17);
  }
}

void sub_1000FD5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_start(va, a6);
  sub_1000FFAC4((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FindSymbolOnlyFlat(void *a1, uint64_t a2, const char *a3)
{
  *(void *)&long long v16 = a2;
  *((void *)&v16 + sub_1000333D0((uint64_t *)this + 1) = a3;
  unsigned int v4 = (int *)a1[14];
  int v5 = (int *)a1[15];
  __p.__r_.__value_.__r.__words[0] = a1[13];
  if (v5 == v4)
  {
    uint64_t v7 = v4;
    uint64_t v8 = v4;
  }
  else
  {
    unint64_t v6 = ((char *)v5 - (char *)v4) >> 5;
    do
    {
      if (sub_1000FF2AC(&__p, &v16, &v4[8 * (v6 >> 1)]))
      {
        v6 >>= 1;
      }
      else
      {
        v4 += 8 * (v6 >> 1) + 8;
        v6 += ~(v6 >> 1);
      }
    }
    while (v6);
    uint64_t v8 = (int *)a1[14];
    uint64_t v7 = (int *)a1[15];
  }
  if (v4 == v8) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = -1;
  }
  uint64_t v10 = &v4[8 * v9];
  if (v10 == v7) {
    return 0;
  }
  sub_1000FD2F4(&v4[8 * v9], a1, a3, &__p);
  sub_1000BB974(v15, (uint64_t *)&__p, v11);
  if (sub_1000FD75C(v15[0], (int64_t)v15[1], (unsigned __int8 *)v16, *((int64_t *)&v16 + 1))) {
    uint64_t v12 = *(void *)(*a1 + 40 * *v10);
  }
  else {
    uint64_t v12 = 0;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v12;
}

void sub_1000FD740(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_1000FD75C(unsigned __int8 *__s2, int64_t __n, unsigned __int8 *__s1, int64_t a4)
{
  if (__n == a4)
  {
    BOOL result = 1;
    if (__n < 1 || __s2 == __s1) {
      return result;
    }
    if (!memcmp(__s2, __s1, __n)) {
      return 1;
    }
  }
  return a4 >= __n && !memcmp(__s1, __s2, __n) && __s1[__n] == 46;
}

unint64_t sub_1000FD7F8(uint64_t a1, uint64_t a2, const char *a3)
{
  sub_1000BB974(&v4, (uint64_t *)(a1 + 8), a3);
  return google::protobuf::StringPiece::substr((google::protobuf::StringPiece *)&v4, 1uLL);
}

uint64_t sub_1000FD840(uint64_t result)
{
  unint64_t v1 = *(void *)result;
  int64x2_t v2 = *(int64x2_t *)(result + 8);
  int64x2_t v3 = vshrq_n_s64(vsubq_s64(v2, vdupq_n_s64(*(void *)result)), 3uLL);
  unint64_t v4 = 0xCCCCCCCCCCCCCCCDLL * v3.i64[0];
  unint64_t v5 = v4;
  if (0xCCCCCCCCCCCCCCCDLL * v3.i64[1] > v4)
  {
    unint64_t v6 = (uint64_t *)result;
    uint64_t v7 = result + 16;
    uint64_t v14 = v7;
    if (v2.i64[0] == v1)
    {
      uint64_t v8 = 0;
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v8 = (char *)sub_1000FE2F4(v7, v4);
    }
    uint64_t v10 = v8;
    uint64_t v11 = &v8[40 * v5];
    uint64_t v12 = v11;
    uint64_t v13 = &v8[40 * v9];
    sub_1000FE27C(v6, &v10);
    return sub_1000FE468((uint64_t)&v10);
  }
  return result;
}

void sub_1000FD8F8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
}

__n128 google::protobuf::EncodedDescriptorDatabase::DescriptorIndex::FindAllFileNames(void *a1, uint64_t *a2)
{
  sub_1000FDA90(a2, a1[5] + ((uint64_t)(a1[8] - a1[7]) >> 5));
  unint64_t v6 = (void *)a1[3];
  if (v6 == a1 + 4)
  {
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v7 = 0;
    do
    {
      sub_1000BB974(&v18, v6 + 5, v4);
      __n128 v17 = v18;
      sub_1000D7AF4((uint64_t)&v17, &v18);
      uint64_t v8 = *a2 + 24 * v7;
      if (*(char *)(v8 + 23) < 0) {
        operator delete(*(void **)v8);
      }
      __n128 result = v18;
      *(void *)(v8 + 1sub_1000FA614((void *)this + 6) = v19;
      *(__n128 *)uint64_t v8 = result;
      uint64_t v9 = (void *)v6[1];
      if (v9)
      {
        do
        {
          uint64_t v10 = v9;
          uint64_t v9 = (void *)*v9;
        }
        while (v9);
      }
      else
      {
        do
        {
          uint64_t v10 = (void *)v6[2];
          BOOL v11 = *v10 == (void)v6;
          unint64_t v6 = v10;
        }
        while (!v11);
      }
      ++v7;
      unint64_t v6 = v10;
    }
    while (v10 != a1 + 4);
    uint64_t v12 = v7;
  }
  uint64_t v14 = a1[7];
  uint64_t v13 = a1[8];
  if (v14 != v13)
  {
    uint64_t v15 = 24 * v12;
    do
    {
      sub_1000BB974(&v18, (uint64_t *)(v14 + 8), v4);
      __n128 v17 = v18;
      sub_1000D7AF4((uint64_t)&v17, &v18);
      uint64_t v16 = *a2 + v15;
      if (*(char *)(v16 + 23) < 0) {
        operator delete(*(void **)v16);
      }
      __n128 result = v18;
      *(void *)(v16 + 1sub_1000FA614((void *)this + 6) = v19;
      *(__n128 *)uint64_t v16 = result;
      v14 += 32;
      v15 += 24;
    }
    while (v14 != v13);
  }
  return result;
}

void sub_1000FDA90(uint64_t *a1, unint64_t a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *a1) >> 3);
  BOOL v5 = a2 >= v4;
  unint64_t v6 = a2 - v4;
  if (v6 != 0 && v5)
  {
    sub_1000FFDC8(a1, v6);
  }
  else if (!v5)
  {
    uint64_t v7 = *a1 + 24 * a2;
    while (v3 != v7)
    {
      if (*(char *)(v3 - 1) < 0) {
        operator delete(*(void **)(v3 - 24));
      }
      v3 -= 24;
    }
    a1[1] = v7;
  }
}

uint64_t google::protobuf::EncodedDescriptorDatabase::FindAllFileNames(uint64_t a1, uint64_t *a2)
{
  return 1;
}

void google::protobuf::EncodedDescriptorDatabase::EncodedDescriptorDatabase(google::protobuf::EncodedDescriptorDatabase *this)
{
  *(void *)this = off_1001D0930;
  operator new();
}

void google::protobuf::EncodedDescriptorDatabase::~EncodedDescriptorDatabase(google::protobuf::EncodedDescriptorDatabase *this)
{
  *(void *)this = off_1001D0930;
  int64x2_t v2 = (void **)*((void *)this + 2);
  uint64_t v3 = (void **)*((void *)this + 3);
  if (v2 != v3)
  {
    do
    {
      unint64_t v4 = *v2++;
      operator delete(v4);
    }
    while (v2 != v3);
    int64x2_t v2 = (void **)*((void *)this + 2);
  }
  if (v2)
  {
    *((void *)this + 3) = v2;
    operator delete(v2);
  }
  uint64_t v5 = *((void *)this + 1);
  *((void *)this + sub_1000333D0((uint64_t *)this + 1) = 0;
  if (v5) {
    sub_1000FFFB8((uint64_t)this + 8, v5);
  }
}

{
  uint64_t vars8;

  google::protobuf::EncodedDescriptorDatabase::~EncodedDescriptorDatabase(this);
  operator delete();
}

uint64_t sub_1000FDCC4@<X0>(const void **a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  if (*((char *)a1 + 23) >= 0) {
    size_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v5 = (size_t)a1[1];
  }
  if (*((char *)a2 + 23) >= 0) {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  uint64_t result = sub_1000BB8EC(a3, v6 + v5);
  if (*(char *)(result + 23) >= 0) {
    uint64_t v8 = (char *)result;
  }
  else {
    uint64_t v8 = *(char **)result;
  }
  if (v5)
  {
    if (*((char *)a1 + 23) >= 0) {
      uint64_t v9 = a1;
    }
    else {
      uint64_t v9 = *a1;
    }
    uint64_t result = (uint64_t)memmove(v8, v9, v5);
  }
  uint64_t v10 = &v8[v5];
  if (v6)
  {
    if (*((char *)a2 + 23) >= 0) {
      BOOL v11 = a2;
    }
    else {
      BOOL v11 = *a2;
    }
    uint64_t result = (uint64_t)memmove(v10, v11, v6);
  }
  v10[v6] = 0;
  return result;
}

uint64_t sub_1000FDD90(uint64_t *a1, uint64_t *a2)
{
  unint64_t v6 = a1[2];
  uint64_t result = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(result - 8);
  if (v7 >= v6)
  {
    unint64_t v11 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v7 - *a1) >> 3);
    unint64_t v12 = v11 + 1;
    if (v11 + 1 > 0x666666666666666) {
      sub_100078F84();
    }
    unint64_t v13 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v5 - *a1) >> 3);
    if (2 * v13 > v12) {
      unint64_t v12 = 2 * v13;
    }
    if (v13 >= 0x333333333333333) {
      unint64_t v14 = 0x666666666666666;
    }
    else {
      unint64_t v14 = v12;
    }
    v19[4] = result;
    if (v14) {
      uint64_t v15 = (char *)sub_1000FE2F4(result, v14);
    }
    else {
      uint64_t v15 = 0;
    }
    uint64_t v16 = &v15[40 * v11];
    v19[0] = v15;
    v19[1] = v16;
    v19[3] = &v15[40 * v14];
    uint64_t v17 = *a2;
    *((_DWORD *)v16 + sub_1000FACE4((void *)this + 2) = *((_DWORD *)a2 + 2);
    *(void *)uint64_t v16 = v17;
    long long v18 = *((_OWORD *)a2 + 1);
    *((void *)v16 + 4) = a2[4];
    *((_OWORD *)v16 + sub_1000333D0((uint64_t *)this + 1) = v18;
    a2[3] = 0;
    a2[4] = 0;
    a2[2] = 0;
    void v19[2] = v16 + 40;
    sub_1000FE27C(a1, v19);
    uint64_t v10 = a1[1];
    uint64_t result = sub_1000FE468((uint64_t)v19);
  }
  else
  {
    uint64_t v8 = *a2;
    *(_DWORD *)(v7 + 8) = *((_DWORD *)a2 + 2);
    *(void *)unint64_t v7 = v8;
    long long v9 = *((_OWORD *)a2 + 1);
    *(void *)(v7 + 3sub_1000FACE4((void *)this + 2) = a2[4];
    *(_OWORD *)(v7 + 1sub_1000FA614((void *)this + 6) = v9;
    a2[3] = 0;
    a2[4] = 0;
    a2[2] = 0;
    uint64_t v10 = v7 + 40;
    a1[1] = v7 + 40;
  }
  a1[1] = v10;
  return result;
}

void sub_1000FDED8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000FE468((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000FDEEC(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 + 64);
  if (v8) {
    long long v9 = (void *)(v8 + 8);
  }
  else {
    long long v9 = 0;
  }
  uint64_t v10 = *(int *)(a4 + 56);
  if (v10)
  {
    uint64_t v11 = 8 * v10;
    while ((sub_1000FDEEC(a1, a2, a3, *v9) & 1) != 0)
    {
      ++v9;
      v11 -= 8;
      if (!v11) {
        goto LABEL_8;
      }
    }
    return 0;
  }
  else
  {
LABEL_8:
    uint64_t v12 = *(void *)(a4 + 136);
    if (v12) {
      unint64_t v13 = (uint64_t *)(v12 + 8);
    }
    else {
      unint64_t v13 = 0;
    }
    uint64_t v14 = *(int *)(a4 + 128);
    if (v14)
    {
      uint64_t v15 = 8 * v14 - 8;
      do
      {
        uint64_t v16 = *v13++;
        uint64_t result = sub_1000FDFBC(a1, a2, a3, v16);
        if (result) {
          BOOL v18 = v15 == 0;
        }
        else {
          BOOL v18 = 1;
        }
        v15 -= 8;
      }
      while (!v18);
    }
    else
    {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1000FDFBC(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4)
{
  v33[0] = a2;
  v33[1] = a3;
  unint64_t v6 = *(void *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      return 1;
    }
    unint64_t v7 = *(unsigned char **)v6;
  }
  else
  {
    unint64_t v7 = (unsigned char *)(*(void *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL);
    if (!*(unsigned char *)(v6 + 23)) {
      return 1;
    }
  }
  if (*v7 == 46)
  {
    LODWORD(v26.__r_.__value_.__l.__data_) = -858993459 * ((*(void *)(a1 + 8) - *(void *)a1) >> 3) - 1;
    sub_1000BB974(&v32, (uint64_t *)v6, a3);
    *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v32;
    sub_1000D7AF4((uint64_t)&__p, &v26.__r_.__value_.__l.__size_);
    int v28 = *(_DWORD *)(a4 + 72);
    sub_1000FE910((uint64_t **)(a1 + 136), (uint64_t)&v26, (uint64_t)&v26);
    if (v8)
    {
      uint64_t v11 = *(void *)(a1 + 168);
      uint64_t v10 = *(void *)(a1 + 176);
      std::string::basic_string(&v29, (const std::string *)(*(void *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL), 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)v37);
      int v12 = *(_DWORD *)(a4 + 72);
      std::string __p = v29;
      memset(&v29, 0, sizeof(v29));
      int v31 = v12;
      uint64_t v36 = *(void *)(a1 + 160);
      LOBYTE(v37[0]) = 0;
      uint64_t v14 = sub_1000FEC3C(v11, v10, (uint64_t)&__p, &v36);
      if (v10 == v14)
      {
        BOOL v9 = 0;
      }
      else
      {
        sub_1000BB974(v34, (uint64_t *)&__p, v13);
        int v35 = v31;
        v37[0] = sub_1000FD7F8(v14, v36, v15);
        v37[1] = v16;
        int v38 = *(_DWORD *)(v14 + 32);
        BOOL v9 = !sub_1000FEB30((uint64_t)&v39, (uint64_t)v34, (uint64_t)v37);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v29.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      BOOL v9 = 1;
    }
    if (v27 < 0)
    {
      operator delete((void *)v26.__r_.__value_.__l.__size_);
      if (v9) {
        goto LABEL_18;
      }
    }
    else if (v9)
    {
LABEL_18:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v26, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor_database.cc", 756);
      uint64_t v17 = google::protobuf::internal::LogMessage::operator<<(&v26, "Extension conflicts with extension already in database: extend ");
      BOOL v18 = google::protobuf::internal::LogMessage::operator<<(v17, (const std::string::value_type *)(*(void *)(a4 + 32) & 0xFFFFFFFFFFFFFFFELL));
      uint64_t v19 = google::protobuf::internal::LogMessage::operator<<(v18, " { ");
      BOOL v20 = google::protobuf::internal::LogMessage::operator<<(v19, (const std::string::value_type *)(*(void *)(a4 + 24) & 0xFFFFFFFFFFFFFFFELL));
      BOOL v21 = google::protobuf::internal::LogMessage::operator<<(v20, " = ");
      unint64_t v22 = google::protobuf::internal::LogMessage::operator<<(v21, *(_DWORD *)(a4 + 72));
      uint64_t v23 = google::protobuf::internal::LogMessage::operator<<(v22, " } from:");
      unint64_t v24 = google::protobuf::internal::LogMessage::operator<<(v23, (uint64_t)v33);
      google::protobuf::internal::LogFinisher::operator=((int)&__p, (const char **)&v24->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v26.__r_.__value_.__l.__data_);
      return 0;
    }
  }
  return 1;
}

void sub_1000FE220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
}

uint64_t sub_1000FE27C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1000FE33C((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_1000FE2F4(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    sub_100079064();
  }
  return operator new(40 * a2);
}

uint64_t sub_1000FE33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + sub_1000333D0((uint64_t *)this + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  void v12[2] = &v15;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    do
    {
      uint64_t v8 = *(void *)(a3 - 40);
      a3 -= 40;
      *(_DWORD *)(v7 - 3sub_1000FACE4((void *)this + 2) = *(_DWORD *)(a3 + 8);
      *(void *)(v7 - 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v8;
      long long v9 = *(_OWORD *)(a3 + 16);
      *(void *)(v7 - 8) = *(void *)(a3 + 32);
      *(_OWORD *)(v7 - 24) = v9;
      *(void *)(a3 + 1sub_1000FA614((void *)this + 6) = 0;
      *(void *)(a3 + 24) = 0;
      *(void *)(a3 + 3sub_1000FACE4((void *)this + 2) = 0;
      uint64_t v7 = *((void *)&v15 + 1) - 40;
      *((void *)&v15 + 1) -= 40;
    }
    while (a3 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_1000FE3E8((uint64_t)v12);
  return v10;
}

uint64_t sub_1000FE3E8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1000FE420(a1);
  }
  return a1;
}

void sub_1000FE420(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 39) < 0) {
      operator delete(*(void **)(v1 + 16));
    }
    v1 += 40;
  }
}

uint64_t sub_1000FE468(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1000FE4A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 40;
      *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = v2 - 40;
      if (*(char *)(v2 - 1) < 0)
      {
        operator delete(*(void **)(v2 - 24));
        uint64_t v5 = *(void *)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

uint64_t *sub_1000FE4F8(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t **)sub_1000FE578((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    sub_1000FE618((uint64_t)a1, a3, (uint64_t)&v7);
    sub_10002751C(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

void *sub_1000FE578(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = (void *)(a1 + 8);
  unint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 24;
    do
    {
      while (1)
      {
        uint64_t v8 = v4;
        uint64_t v9 = (uint64_t)(v4 + 4);
        if (!sub_1000FE6C4(v7, a3, (uint64_t)(v4 + 4))) {
          break;
        }
        unint64_t v4 = (void *)*v8;
        uint64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!sub_1000FE6C4(v7, v9, a3)) {
        break;
      }
      uint64_t v5 = v8 + 1;
      unint64_t v4 = (void *)v8[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

void *sub_1000FE618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = operator new(0x40uLL);
  *(void *)(a3 + 8) = v5;
  *(void *)a3 = v6;
  *(unsigned char *)(a3 + 1sub_1000FA614((void *)this + 6) = 0;
  v6[8] = *(_DWORD *)a2;
  uint64_t result = v6 + 10;
  if (*(char *)(a2 + 31) < 0)
  {
    uint64_t result = sub_1000BB834(result, *(void **)(a2 + 8), *(void *)(a2 + 16));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)(a2 + 8);
    result[2] = *(void *)(a2 + 24);
  }
  *(unsigned char *)(a3 + 1sub_1000FA614((void *)this + 6) = 1;
  return result;
}

void sub_1000FE6A8(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_1000FE73C(v3, v2);
  _Unwind_Resume(a1);
}

BOOL sub_1000FE6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000BB974(&v12, (uint64_t *)(a2 + 8), (const char *)a3);
  unint64_t v4 = v12;
  int64_t v5 = v13;
  sub_1000BB974(&v12, (uint64_t *)(a3 + 8), v6);
  int64_t v7 = v13;
  if (v5 >= v13) {
    size_t v8 = v13;
  }
  else {
    size_t v8 = v5;
  }
  int v9 = memcmp(v4, v12, v8);
  if (v9 < 0) {
    return 1;
  }
  return !v9 && v5 < v7;
}

void sub_1000FE73C(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 63) < 0) {
      operator delete(__p[5]);
    }
  }
  else if (!__p)
  {
    return;
  }
  operator delete(__p);
}

BOOL sub_1000FE79C(uint64_t a1, const void *a2, const char *a3, uint64_t a4)
{
  sub_1000BB974(&v11, (uint64_t *)(a4 + 8), a3);
  uint64_t v6 = v12;
  if ((uint64_t)a3 >= v12) {
    size_t v7 = v12;
  }
  else {
    size_t v7 = (size_t)a3;
  }
  int v8 = memcmp(a2, v11, v7);
  if (v8 < 0) {
    return 1;
  }
  return !v8 && (uint64_t)a3 < v6;
}

uint64_t sub_1000FE808(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4 = a1;
  if (a2 != a1)
  {
    unint64_t v7 = (a2 - a1) >> 5;
    do
    {
      uint64_t v8 = v4 + 32 * (v7 >> 1);
      sub_1000BB974(v11, a3, (const char *)a3);
      BOOL v9 = sub_1000FE8A4(a4, v8, v11[0], (int64_t)v11[1]);
      if (v9) {
        v7 += ~(v7 >> 1);
      }
      else {
        v7 >>= 1;
      }
      if (v9) {
        uint64_t v4 = v8 + 32;
      }
    }
    while (v7);
  }
  return v4;
}

BOOL sub_1000FE8A4(uint64_t a1, uint64_t a2, const char *a3, int64_t a4)
{
  sub_1000BB974(&v11, (uint64_t *)(a2 + 8), a3);
  int64_t v6 = v12;
  if (v12 >= a4) {
    size_t v7 = a4;
  }
  else {
    size_t v7 = v12;
  }
  int v8 = memcmp(v11, a3, v7);
  if (v8 < 0) {
    return 1;
  }
  return !v8 && v6 < a4;
}

uint64_t *sub_1000FE910(uint64_t **a1, uint64_t a2, uint64_t a3)
{
  int64_t v5 = (uint64_t **)sub_1000FE990((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    sub_1000FEA30((uint64_t)a1, a3, (uint64_t)&v7);
    sub_10002751C(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

void *sub_1000FE990(uint64_t a1, void *a2, uint64_t a3)
{
  int64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void **)(a1 + 8);
  if (v4)
  {
    size_t v7 = (uint64_t *)(a1 + 24);
    do
    {
      while (1)
      {
        uint64_t v8 = v4;
        uint64_t v9 = (uint64_t)(v4 + 4);
        if (!sub_1000FEAB8(v7, a3, (uint64_t)(v4 + 4))) {
          break;
        }
        uint64_t v4 = (void *)*v8;
        int64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!sub_1000FEAB8(v7, v9, a3)) {
        break;
      }
      int64_t v5 = v8 + 1;
      uint64_t v4 = (void *)v8[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

unsigned char *sub_1000FEA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  int64_t v6 = operator new(0x48uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 1sub_1000FA614((void *)this + 6) = 0;
  uint64_t result = sub_1000FEBDC(v5, (uint64_t)v6 + 32, a2);
  *(unsigned char *)(a3 + 1sub_1000FA614((void *)this + 6) = 1;
  return result;
}

void sub_1000FEA9C(_Unwind_Exception *a1)
{
  void *v1 = 0;
  sub_1000FE73C(v3, v2);
  _Unwind_Resume(a1);
}

BOOL sub_1000FEAB8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  v12[0] = sub_1000FD7F8(a2, *a1, (const char *)a3);
  v12[1] = v6;
  int v13 = *(_DWORD *)(a2 + 32);
  v10[0] = sub_1000FD7F8(a3, *a1, v7);
  v10[1] = v8;
  int v11 = *(_DWORD *)(a3 + 32);
  return sub_1000FEB30((uint64_t)&v14, (uint64_t)v12, (uint64_t)v10);
}

BOOL sub_1000FEB30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(const void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  size_t v7 = *(const void **)a3;
  uint64_t v8 = *(void *)(a3 + 8);
  if (v6 >= v8) {
    size_t v9 = *(void *)(a3 + 8);
  }
  else {
    size_t v9 = *(void *)(a2 + 8);
  }
  int v10 = memcmp(*(const void **)a2, *(const void **)a3, v9);
  if (v10 < 0) {
    return 1;
  }
  if (!v10 && v6 < v8) {
    return 1;
  }
  int v12 = memcmp(v7, v5, v9);
  if (v12 < 0) {
    return 0;
  }
  return (v12 || v8 >= v6) && *(_DWORD *)(a2 + 16) < *(_DWORD *)(a3 + 16);
}

unsigned char *sub_1000FEBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_DWORD *)a2 = *(_DWORD *)a3;
  uint64_t result = (unsigned char *)(a2 + 8);
  if (*(char *)(a3 + 31) < 0)
  {
    uint64_t result = sub_1000BB834(result, *(void **)(a3 + 8), *(void *)(a3 + 16));
  }
  else
  {
    long long v6 = *(_OWORD *)(a3 + 8);
    *(void *)(a2 + 24) = *(void *)(a3 + 24);
    *(_OWORD *)uint64_t result = v6;
  }
  *(_DWORD *)(a2 + 3sub_1000FACE4((void *)this + 2) = *(_DWORD *)(a3 + 32);
  return result;
}

uint64_t sub_1000FEC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4 = a1;
  if (a2 != a1)
  {
    unint64_t v7 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - a1) >> 3);
    do
    {
      uint64_t v8 = v4 + 40 * (v7 >> 1);
      sub_1000BB974(v11, (uint64_t *)a3, (const char *)a3);
      int v12 = *(_DWORD *)(a3 + 24);
      BOOL v9 = sub_1000FECF0(a4, v8, (const char *)v11);
      if (v9) {
        v7 += ~(v7 >> 1);
      }
      else {
        v7 >>= 1;
      }
      if (v9) {
        uint64_t v4 = v8 + 40;
      }
    }
    while (v7);
  }
  return v4;
}

BOOL sub_1000FECF0(uint64_t *a1, uint64_t a2, const char *a3)
{
  v7[0] = sub_1000FD7F8(a2, *a1, a3);
  v7[1] = v5;
  int v8 = *(_DWORD *)(a2 + 32);
  return sub_1000FEB30((uint64_t)&v9, (uint64_t)v7, (uint64_t)a3);
}

uint64_t sub_1000FED44(void **a1, int *a2, char *a3)
{
  sub_1000FEEE0(a1, a2, a3, v34);
  sub_1000FEEE0(a1, (int *)a3, v6, v32);
  __p.__r_.__value_.__r.__words[0] = google::protobuf::StringPiece::substr((google::protobuf::StringPiece *)v34, 0);
  __p.__r_.__value_.__l.__size_ = v7;
  int v8 = (const void *)google::protobuf::StringPiece::substr((google::protobuf::StringPiece *)v32, 0);
  unsigned int v10 = sub_1000FEF7C((uint64_t)&__p, v8, v9);
  if (v10) {
    return v10 >> 31;
  }
  if (v34[1] != v32[1])
  {
    sub_1000FD2F4(a2, *a1, v11, &__p);
    sub_1000FD2F4((int *)a3, *a1, v19, &v30);
    int v20 = SHIBYTE(v30.__r_.__value_.__r.__words[2]);
    BOOL v21 = (void *)v30.__r_.__value_.__r.__words[0];
    char v22 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v25 = HIBYTE(v30.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v25 = v30.__r_.__value_.__l.__size_;
    }
    if ((v30.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string v26 = &v30;
    }
    else {
      std::string v26 = (std::string *)v30.__r_.__value_.__r.__words[0];
    }
    if (v25 >= size) {
      size_t v27 = size;
    }
    else {
      size_t v27 = v25;
    }
    int v28 = memcmp(p_p, v26, v27);
    if (v28) {
      BOOL v12 = v28 < 0;
    }
    else {
      BOOL v12 = size < v25;
    }
    if (v20 < 0)
    {
      operator delete(v21);
      if ((*((unsigned char *)&__p.__r_.__value_.__s + 23) & 0x80) == 0) {
        return v12;
      }
    }
    else if ((v22 & 0x80) == 0)
    {
      return v12;
    }
    operator delete(__p.__r_.__value_.__l.__data_);
    return v12;
  }
  int64_t v13 = v35;
  int64_t v14 = v33;
  if (v35 >= v33) {
    size_t v15 = v33;
  }
  else {
    size_t v15 = v35;
  }
  int v16 = memcmp((const void *)v34[2], (const void *)v32[2], v15);
  if (v16) {
    BOOL v17 = 0;
  }
  else {
    BOOL v17 = v13 < v14;
  }
  unsigned int v18 = v17;
  if (v16 >= 0) {
    return v18;
  }
  else {
    return 1;
  }
}

void sub_1000FEEC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1000FEEE0@<X0>(void **a1@<X0>, int *a2@<X1>, const char *a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = (uint64_t *)(a2 + 2);
  sub_1000BB974(&v11, (uint64_t *)(**a1 + 40 * *a2 + 16), a3);
  uint64_t v7 = *((void *)&v11 + 1);
  int v8 = a4 + 2;
  if (*((void *)&v11 + 1))
  {
    uint64_t v9 = v11;
    uint64_t result = sub_1000BB974(&v11, v5, v6);
    *int v8 = v11;
  }
  else
  {
    uint64_t result = sub_1000BB974(&v11, v5, v6);
    uint64_t v7 = *((void *)&v11 + 1);
    uint64_t v9 = v11;
    *(void *)int v8 = 0;
    a4[3] = 0;
  }
  *a4 = v9;
  a4[1] = v7;
  return result;
}

uint64_t sub_1000FEF7C(uint64_t a1, const void *a2, int64_t a3)
{
  int64_t v3 = a3;
  uint64_t v4 = *(const void **)a1;
  int64_t v5 = *(void *)(a1 + 8);
  if (v5 < a3) {
    a3 = v5;
  }
  int v7 = memcmp(v4, a2, a3);
  if (v7 < 0) {
    return 0xFFFFFFFFLL;
  }
  int v9 = v7;
  if (v7) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = 0xFFFFFFFFLL;
  }
  if (v5 >= v3 && v9 == 0) {
    return v5 > v3;
  }
  return result;
}

uint64_t *sub_1000FEFDC(uint64_t **a1, uint64_t *a2, char *a3, uint64_t a4)
{
  long long v6 = (uint64_t **)sub_1000FF060((uint64_t)a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_1000FE618((uint64_t)a1, a4, (uint64_t)&v8);
    sub_10002751C(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

char *sub_1000FF060(uint64_t a1, uint64_t *a2, char **a3, uint64_t *a4, char *a5)
{
  uint64_t v9 = a1 + 8;
  if ((uint64_t *)(a1 + 8) != a2 && !sub_1000FED44((void **)(a1 + 24), (int *)a5, (char *)a2 + 32))
  {
    if (!sub_1000FED44((void **)(a1 + 24), (int *)a2 + 8, a5))
    {
      *a3 = (char *)a2;
      *a4 = (uint64_t)a2;
      return (char *)a4;
    }
    a4 = a2 + 1;
    uint64_t v13 = a2[1];
    if (v13)
    {
      int64_t v14 = (char *)a2[1];
      do
      {
        size_t v15 = v14;
        int64_t v14 = *(char **)v14;
      }
      while (v14);
    }
    else
    {
      unsigned int v18 = (char *)a2;
      do
      {
        size_t v15 = (char *)*((void *)v18 + 2);
        BOOL v17 = *(void *)v15 == (void)v18;
        unsigned int v18 = v15;
      }
      while (!v17);
    }
    if (v15 != (char *)v9)
    {
      if (!sub_1000FED44((void **)(a1 + 24), (int *)a5, v15 + 32)) {
        goto LABEL_28;
      }
      uint64_t v13 = *a4;
    }
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = (char *)a2;
    }
    return (char *)a4;
  }
  if (*(uint64_t **)a1 == a2)
  {
    BOOL v12 = a2;
LABEL_16:
    if (*a2)
    {
      *a3 = (char *)v12;
      return (char *)(v12 + 1);
    }
    else
    {
      *a3 = (char *)a2;
      return (char *)a2;
    }
  }
  long long v11 = (uint64_t *)*a2;
  if (*a2)
  {
    do
    {
      BOOL v12 = v11;
      long long v11 = (uint64_t *)v11[1];
    }
    while (v11);
  }
  else
  {
    int v16 = a2;
    do
    {
      BOOL v12 = (uint64_t *)v16[2];
      BOOL v17 = *v12 == (void)v16;
      int v16 = v12;
    }
    while (v17);
  }
  if (sub_1000FED44((void **)(a1 + 24), (int *)v12 + 8, a5)) {
    goto LABEL_16;
  }
LABEL_28:
  return (char *)sub_1000FF20C(a1, a3, (int *)a5);
}

void *sub_1000FF20C(uint64_t a1, void *a2, int *a3)
{
  int64_t v5 = (void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    int v7 = (void **)(a1 + 24);
    do
    {
      while (1)
      {
        int v8 = (void *)v4;
        uint64_t v9 = (int *)(v4 + 32);
        if (!sub_1000FED44(v7, a3, (char *)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v8;
        int64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!sub_1000FED44(v7, v9, (char *)a3)) {
        break;
      }
      int64_t v5 = v8 + 1;
      uint64_t v4 = v8[1];
    }
    while (v4);
  }
  else
  {
    int v8 = (void *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

uint64_t sub_1000FF2AC(void **a1, long long *a2, int *a3)
{
  int64_t v33 = 0;
  int64_t v34 = 0;
  long long v32 = *a2;
  sub_1000FEEE0(a1, a3, (const char *)a3, v30);
  __p.__r_.__value_.__r.__words[0] = google::protobuf::StringPiece::substr((google::protobuf::StringPiece *)&v32, 0);
  __p.__r_.__value_.__l.__size_ = v6;
  int v7 = (const void *)google::protobuf::StringPiece::substr((google::protobuf::StringPiece *)v30, 0);
  unsigned int v9 = sub_1000FEF7C((uint64_t)&__p, v7, v8);
  if (v9) {
    return v9 >> 31;
  }
  if (*((void *)&v32 + 1) == v30[1])
  {
    int64_t v12 = v34;
    int64_t v13 = v31;
    if (v34 >= v31) {
      size_t v14 = v31;
    }
    else {
      size_t v14 = v34;
    }
    int v15 = memcmp(v33, (const void *)v30[2], v14);
    if (v15) {
      BOOL v16 = 0;
    }
    else {
      BOOL v16 = v12 < v13;
    }
    unsigned int v17 = v16;
    if (v15 >= 0) {
      return v17;
    }
    else {
      return 1;
    }
  }
  else
  {
    uint64_t v19 = *(const void **)a2;
    int64_t v18 = *((void *)a2 + 1);
    sub_1000FD2F4(a3, *a1, v10, &__p);
    sub_1000BB974(&v28, (uint64_t *)&__p, v20);
    int64_t v21 = v29;
    if (v18 >= v29) {
      size_t v22 = v29;
    }
    else {
      size_t v22 = v18;
    }
    int v23 = memcmp(v19, v28, v22);
    if (v23) {
      BOOL v24 = 0;
    }
    else {
      BOOL v24 = v18 < v21;
    }
    unsigned int v25 = v24;
    if (v23 >= 0) {
      uint64_t v11 = v25;
    }
    else {
      uint64_t v11 = 1;
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return v11;
}

void sub_1000FF3E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000FF400(uint64_t a1, uint64_t a2, long long *a3, uint64_t *a4)
{
  uint64_t v4 = a1;
  if (a2 != a1)
  {
    unint64_t v7 = 0xCCCCCCCCCCCCCCCDLL * ((a2 - a1) >> 3);
    do
    {
      uint64_t v8 = v4 + 40 * (v7 >> 1);
      long long v11 = *a3;
      uint64_t v12 = *((void *)a3 + 2);
      BOOL v9 = sub_1000FECF0(a4, v8, (const char *)&v11);
      if (v9) {
        v7 += ~(v7 >> 1);
      }
      else {
        v7 >>= 1;
      }
      if (v9) {
        uint64_t v4 = v8 + 40;
      }
    }
    while (v7);
  }
  return v4;
}

void *sub_1000FF4B0(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1000FF530(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 32 * a2);
    a1[1] = &v4[32 * a2];
  }
  return a1;
}

void sub_1000FF51C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

char *sub_1000FF530(void *a1, unint64_t a2)
{
  if (a2 >> 59) {
    sub_100078F84();
  }
  uint64_t result = (char *)sub_1000DAB10((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[32 * v4];
  return result;
}

void sub_1000FF574(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_1000FF5C8((uint64_t *)v2);
    int64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_1000FF5C8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 32)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

uint64_t sub_1000FF618(void *a1, void *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5, uint64_t a6)
{
  if (a1 == a2)
  {
LABEL_11:
    sub_1000FF7AC(a3, a4, a5);
  }
  else
  {
    long long v11 = a1;
    while (a3 != a4)
    {
      BOOL v12 = sub_1000FE6C4(a6, (uint64_t)a3, (uint64_t)(v11 + 4));
      int64_t v13 = (std::string *)(a5 + 2);
      if (v12)
      {
        size_t v14 = (const std::string *)(a3 + 2);
        int v15 = *a3;
        a3 += 8;
        *a5 = v15;
        std::string::operator=(v13, v14);
      }
      else
      {
        *a5 = *((_DWORD *)v11 + 8);
        std::string::operator=(v13, (const std::string *)(v11 + 5));
        BOOL v16 = (void *)v11[1];
        if (v16)
        {
          do
          {
            long long v11 = v16;
            BOOL v16 = (void *)*v16;
          }
          while (v16);
        }
        else
        {
          do
          {
            unsigned int v17 = v11;
            long long v11 = (void *)v11[2];
          }
          while ((void *)*v11 != v17);
        }
      }
      a5 += 8;
      if (v11 == a2) {
        goto LABEL_11;
      }
    }
    sub_1000FF718((uint64_t)&v20, v11, a2, (uint64_t)a5);
  }
  return v18;
}

void *sub_1000FF718(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  int64_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      *(_DWORD *)a4 = *((_DWORD *)v5 + 8);
      std::string::operator=((std::string *)(a4 + 8), (const std::string *)(v5 + 5));
      unint64_t v7 = (void *)v5[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          unint64_t v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (void *)v5[2];
          BOOL v9 = *v8 == (void)v5;
          int64_t v5 = v8;
        }
        while (!v9);
      }
      a4 += 32;
      int64_t v5 = v8;
    }
    while (v8 != a3);
    return a3;
  }
  return v5;
}

_DWORD *sub_1000FF7AC(_DWORD *a1, _DWORD *a2, _DWORD *a3)
{
  uint64_t v4 = a1;
  if (a1 == a2) {
    return a1;
  }
  int64_t v5 = a2;
  do
  {
    std::string::size_type v6 = (const std::string *)(v4 + 2);
    int v7 = *v4;
    v4 += 8;
    uint64_t v8 = (std::string *)(a3 + 2);
    *a3 = v7;
    a3 += 8;
    std::string::operator=(v8, v6);
  }
  while (v4 != v5);
  return v5;
}

void sub_1000FF810(uint64_t *a1)
{
  if (*a1)
  {
    sub_1000FF5C8(a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void *sub_1000FF84C(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1000FF530(a1, a2);
    uint64_t v4 = (char *)a1[1];
    bzero(v4, 32 * a2);
    a1[1] = &v4[32 * a2];
  }
  return a1;
}

void sub_1000FF8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t sub_1000FF8CC(void *a1, void *a2, _DWORD *a3, _DWORD *a4, int *a5, void **a6)
{
  if (a1 == a2)
  {
LABEL_11:
    sub_1000FF7AC(a3, a4, a5);
  }
  else
  {
    long long v11 = a1;
    while (a3 != a4)
    {
      int v12 = sub_1000FED44(a6, a3, (char *)v11 + 32);
      int64_t v13 = (std::string *)(a5 + 2);
      if (v12)
      {
        size_t v14 = (const std::string *)(a3 + 2);
        int v15 = *a3;
        a3 += 8;
        *a5 = v15;
        std::string::operator=(v13, v14);
      }
      else
      {
        *a5 = *((_DWORD *)v11 + 8);
        std::string::operator=(v13, (const std::string *)(v11 + 5));
        BOOL v16 = (void *)v11[1];
        if (v16)
        {
          do
          {
            long long v11 = v16;
            BOOL v16 = (void *)*v16;
          }
          while (v16);
        }
        else
        {
          do
          {
            unsigned int v17 = v11;
            long long v11 = (void *)v11[2];
          }
          while ((void *)*v11 != v17);
        }
      }
      a5 += 8;
      if (v11 == a2) {
        goto LABEL_11;
      }
    }
    sub_1000FF718((uint64_t)&v20, v11, a2, (uint64_t)a5);
  }
  return v18;
}

void *sub_1000FF9CC(void *a1, unint64_t a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  if (a2)
  {
    sub_1000FFA70(a1, a2);
    uint64_t v4 = (char *)a1[1];
    size_t v5 = 40 * ((40 * a2 - 40) / 0x28) + 40;
    bzero(v4, v5);
    a1[1] = &v4[v5];
  }
  return a1;
}

void sub_1000FFA5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

char *sub_1000FFA70(void *a1, unint64_t a2)
{
  if (a2 >= 0x666666666666667) {
    sub_100078F84();
  }
  uint64_t result = (char *)sub_1000FE2F4((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[40 * v4];
  return result;
}

void sub_1000FFAC4(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_1000FFB18((uint64_t *)v2);
    int64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_1000FFB18(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 40)
  {
    if (*(char *)(i - 9) < 0) {
      operator delete(*(void **)(i - 32));
    }
  }
  a1[1] = v2;
}

uint64_t sub_1000FFB68(void *a1, void *a2, uint64_t a3, uint64_t a4, _DWORD *a5, uint64_t *a6)
{
  if (a1 == a2)
  {
LABEL_11:
    sub_1000FFD18(a3, a4, (uint64_t)a5);
  }
  else
  {
    long long v11 = a1;
    while (a3 != a4)
    {
      BOOL v12 = sub_1000FEAB8(a6, a3, (uint64_t)(v11 + 4));
      int64_t v13 = (std::string *)(a5 + 2);
      if (v12)
      {
        *a5 = *(_DWORD *)a3;
        std::string::operator=(v13, (const std::string *)(a3 + 8));
        a5[8] = *(_DWORD *)(a3 + 32);
        a3 += 40;
      }
      else
      {
        *a5 = *((_DWORD *)v11 + 8);
        std::string::operator=(v13, (const std::string *)(v11 + 5));
        a5[8] = *((_DWORD *)v11 + 16);
        size_t v14 = (void *)v11[1];
        if (v14)
        {
          do
          {
            long long v11 = v14;
            size_t v14 = (void *)*v14;
          }
          while (v14);
        }
        else
        {
          do
          {
            int v15 = v11;
            long long v11 = (void *)v11[2];
          }
          while ((void *)*v11 != v15);
        }
      }
      a5 += 10;
      if (v11 == a2) {
        goto LABEL_11;
      }
    }
    sub_1000FFC7C((uint64_t)&v18, v11, a2, (uint64_t)a5);
  }
  return v16;
}

void *sub_1000FFC7C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  size_t v5 = a2;
  if (a2 != a3)
  {
    do
    {
      *(_DWORD *)a4 = *((_DWORD *)v5 + 8);
      std::string::operator=((std::string *)(a4 + 8), (const std::string *)(v5 + 5));
      *(_DWORD *)(a4 + 3sub_1000FACE4((void *)this + 2) = *((_DWORD *)v5 + 16);
      int v7 = (void *)v5[1];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          int v7 = (void *)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (void *)v5[2];
          BOOL v9 = *v8 == (void)v5;
          size_t v5 = v8;
        }
        while (!v9);
      }
      a4 += 40;
      size_t v5 = v8;
    }
    while (v8 != a3);
    return a3;
  }
  return v5;
}

uint64_t sub_1000FFD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 == a2) {
    return a1;
  }
  uint64_t v5 = a2;
  do
  {
    *(_DWORD *)a3 = *(_DWORD *)v4;
    std::string::operator=((std::string *)(a3 + 8), (const std::string *)(v4 + 8));
    *(_DWORD *)(a3 + 3sub_1000FACE4((void *)this + 2) = *(_DWORD *)(v4 + 32);
    a3 += 40;
    v4 += 40;
  }
  while (v4 != v5);
  return v5;
}

void sub_1000FFD8C(uint64_t *a1)
{
  if (*a1)
  {
    sub_1000FFB18(a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_1000FFDC8(uint64_t *a1, unint64_t a2)
{
  uint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  uint64_t v5 = v6;
  uint64_t v7 = *(void *)(v4 - 8);
  if (0xAAAAAAAAAAAAAAABLL * ((v6 - v7) >> 3) >= a2)
  {
    if (a2)
    {
      size_t v13 = 24 * ((24 * a2 - 24) / 0x18) + 24;
      bzero(*(void **)(v4 - 8), v13);
      v7 += v13;
    }
    a1[1] = v7;
  }
  else
  {
    unint64_t v8 = 0xAAAAAAAAAAAAAAABLL * ((v7 - *a1) >> 3);
    unint64_t v9 = v8 + a2;
    if (v8 + a2 > 0xAAAAAAAAAAAAAAALL) {
      sub_100078F84();
    }
    unint64_t v10 = 0xAAAAAAAAAAAAAAABLL * ((v5 - *a1) >> 3);
    if (2 * v10 > v9) {
      unint64_t v9 = 2 * v10;
    }
    if (v10 >= 0x555555555555555) {
      unint64_t v11 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v11 = v9;
    }
    uint64_t v19 = v4;
    if (v11) {
      BOOL v12 = (char *)sub_1000D8B84(v4, v11);
    }
    else {
      BOOL v12 = 0;
    }
    int v15 = v12;
    uint64_t v16 = &v12[24 * v8];
    char v18 = &v12[24 * v11];
    size_t v14 = 24 * ((24 * a2 - 24) / 0x18) + 24;
    bzero(v16, v14);
    unsigned int v17 = &v16[v14];
    sub_1000D8B0C(a1, &v15);
    sub_1000D8CEC((uint64_t)&v15);
  }
}

void sub_1000FFF1C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000D8CEC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1000FFF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a1;
  if (a2 != a1)
  {
    unint64_t v7 = (a2 - a1) >> 5;
    do
    {
      uint64_t v8 = v4 + 32 * (v7 >> 1);
      BOOL v9 = sub_1000FE8A4(a4, v8, *(const char **)a3, *(void *)(a3 + 8));
      if (v9) {
        v7 += ~(v7 >> 1);
      }
      else {
        v7 >>= 1;
      }
      if (v9) {
        uint64_t v4 = v8 + 32;
      }
    }
    while (v7);
  }
  return v4;
}

void sub_1000FFFB8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    int64_t v3 = (void **)(a2 + 168);
    sub_1000FFAC4(&v3);
    sub_1000E06D8(a2 + 136, *(char **)(a2 + 144));
    int64_t v3 = (void **)(a2 + 112);
    sub_1000FF574(&v3);
    sub_1000E06D8(a2 + 80, *(char **)(a2 + 88));
    int64_t v3 = (void **)(a2 + 56);
    sub_1000FF574(&v3);
    sub_1000E06D8(a2 + 24, *(char **)(a2 + 32));
    int64_t v3 = (void **)a2;
    sub_100100060(&v3);
    operator delete();
  }
}

void sub_100100060(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_1001000B4((uint64_t *)v2);
    int64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_1001000B4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 40)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

void google::protobuf::DynamicMessage::SharedCtor(google::protobuf::DynamicMessage *this, int a2)
{
  uint64_t v4 = *((void *)this + 2);
  uint64_t v5 = *(void *)(v4 + 32);
  int v6 = *(_DWORD *)(v5 + 108);
  if (v6 >= 1)
  {
    uint64_t v7 = 0;
    int v8 = 0;
    uint64_t v9 = *(void *)(v5 + 48) + 32;
    do
    {
      if (*(_DWORD *)(v9 - 8) != 1 || !*(unsigned char *)(**(void **)v9 + 65))
      {
        int v10 = *(_DWORD *)(v4 + 8) + 4 * v8++;
        *(_DWORD *)((char *)this + v1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
        int v6 = *(_DWORD *)(v5 + 108);
      }
      v9 += 48;
      ++v7;
    }
    while (v7 < v6);
  }
  uint64_t v11 = *(int *)(v4 + 12);
  if (v11 != -1)
  {
    BOOL v12 = (char *)this + v11;
    uint64_t v13 = *((void *)this + 1);
    size_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFELL);
    if (v13) {
      size_t v14 = (void *)*v14;
    }
    google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)v12, (uint64_t)v14);
  }
  if (*(int *)(v5 + 104) >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    do
    {
      uint64_t v17 = *(void *)(v5 + 40);
      char v18 = (google::protobuf::FieldDescriptor *)(v17 + v15);
      uint64_t v19 = *(int *)(*(void *)(*((void *)this + 2) + 40) + 4 * v16);
      uint64_t v20 = *(void *)(v17 + v15 + 88);
      if (!v20 || *(_DWORD *)(v20 + 24) == 1 && *(unsigned char *)(**(void **)(v20 + 32) + 65))
      {
        int64_t v21 = (std::once_flag::_State_type *)*((void *)v18 + 6);
        if (v21)
        {
          uint64_t v43 = v17 + v15;
          uint64_t v44 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v21, memory_order_acquire) != -1)
          {
            BOOL v45 = v46;
            v46[0] = &v44;
            v46[1] = &v43;
            std::__call_once(v21, &v45, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        size_t v22 = (google::protobuf::DynamicMessage *)((char *)this + v19);
        switch(*(_DWORD *)(v17 + v15 + 56))
        {
          case 1:
            if (*(_DWORD *)(v17 + v15 + 60) == 3) {
              goto LABEL_31;
            }
            *(void *)size_t v22 = *(void *)(v17 + v15 + 144);
            break;
          case 2:
            if (*(_DWORD *)(v17 + v15 + 60) == 3) {
              goto LABEL_31;
            }
            *(_DWORD *)size_t v22 = *(_DWORD *)(v17 + v15 + 144);
            break;
          case 3:
          case 4:
          case 6:
          case 0x10:
          case 0x12:
            if (*(_DWORD *)(v17 + v15 + 60) == 3) {
              goto LABEL_31;
            }
            BOOL v24 = *(uint64_t **)(v17 + v15 + 144);
            goto LABEL_56;
          case 5:
          case 7:
          case 0xD:
          case 0xF:
          case 0x11:
            if (*(_DWORD *)(v17 + v15 + 60) == 3) {
              goto LABEL_31;
            }
            int v23 = *(_DWORD *)(v17 + v15 + 144);
            goto LABEL_45;
          case 8:
            if (*(_DWORD *)(v17 + v15 + 60) == 3) {
              goto LABEL_31;
            }
            *(unsigned char *)size_t v22 = *(unsigned char *)(v17 + v15 + 144);
            break;
          case 9:
          case 0xC:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
            {
              uint64_t v27 = *((void *)this + 1);
              int v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFELL);
              if (v27) {
                int v28 = (void *)*v28;
              }
              *((void *)v22 + sub_1000FACE4((void *)this + 2) = 0;
              *(void *)size_t v22 = v28;
              goto LABEL_52;
            }
            uint64_t v35 = *(void *)(v17 + v15 + 144);
            if (*(char *)(v35 + 23) < 0) {
              uint64_t v36 = *(void *)(v35 + 8);
            }
            else {
              uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
            }
            BOOL v37 = v36 == 0;
            BOOL v24 = &google::protobuf::internal::fixed_address_empty_string;
            if (!v37) {
              BOOL v24 = 0;
            }
LABEL_56:
            *(void *)size_t v22 = v24;
            break;
          case 0xA:
          case 0xB:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
            {
              int v29 = sub_100100518((google::protobuf::FieldDescriptor *)(v17 + v15));
              uint64_t v30 = *((void *)this + 1);
              int64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFELL);
              if (v29)
              {
                int v42 = a2;
                if (a2)
                {
                  if (v30) {
                    int64_t v31 = (void *)*v31;
                  }
                  uint64_t v32 = *(void *)(*((void *)this + 2) + 16);
                  uint64_t v33 = google::protobuf::FieldDescriptor::message_type(v18);
                  PrototypeNoLocint k = (const google::protobuf::Message *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v32 + 16))(v32, v33);
                }
                else
                {
                  if (v30) {
                    int64_t v31 = (void *)*v31;
                  }
                  int v38 = *(google::protobuf::DynamicMessageFactory **)(*((void *)this + 2) + 16);
                  char v39 = (const google::protobuf::Descriptor *)google::protobuf::FieldDescriptor::message_type(v18);
                  PrototypeNoLocint k = (const google::protobuf::Message *)google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(v38, v39);
                }
                if (v31)
                {
                  uint64_t v40 = *((void *)this + 1);
                  unint64_t v41 = (google::protobuf::Arena *)(v40 & 0xFFFFFFFFFFFFFFFELL);
                  if (v40) {
                    unint64_t v41 = *(google::protobuf::Arena **)v41;
                  }
                  google::protobuf::internal::DynamicMapField::DynamicMapField(v22, PrototypeNoLock, v41);
                }
                else
                {
                  google::protobuf::internal::DynamicMapField::DynamicMapField((uint64_t)v22, (uint64_t)PrototypeNoLock);
                }
                a2 = v42;
              }
              else
              {
                if (v30) {
                  int64_t v31 = (void *)*v31;
                }
                *((void *)v22 + sub_1000FACE4((void *)this + 2) = 0;
                *(void *)size_t v22 = v31;
LABEL_52:
                *((void *)v22 + sub_1000333D0((uint64_t *)this + 1) = 0;
              }
            }
            else
            {
              *(void *)size_t v22 = 0;
            }
            break;
          case 0xE:
            if (*(_DWORD *)(v17 + v15 + 60) == 3)
            {
LABEL_31:
              uint64_t v25 = *((void *)this + 1);
              std::string v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFELL);
              if (v25) {
                std::string v26 = (void *)*v26;
              }
              *(void *)size_t v22 = 0;
              *((void *)v22 + sub_1000333D0((uint64_t *)this + 1) = v26;
            }
            else
            {
              int v23 = *(_DWORD *)(google::protobuf::FieldDescriptor::default_value_enum((google::protobuf::FieldDescriptor *)(v17 + v15))
                              + 16);
LABEL_45:
              *(_DWORD *)size_t v22 = v23;
            }
            break;
          default:
            break;
        }
      }
      ++v16;
      v15 += 152;
    }
    while (v16 < *(int *)(v5 + 104));
  }
}

uint64_t sub_100100518(google::protobuf::FieldDescriptor *this)
{
  uint64_t v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    uint64_t v4 = this;
    uint64_t v5 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v7[0] = &v5;
      v7[1] = &v4;
      int v6 = v7;
      std::__call_once(v2, &v6, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (*((_DWORD *)this + 14) == 11) {
    return google::protobuf::FieldDescriptor::is_map_message_type(this);
  }
  else {
    return 0;
  }
}

uint64_t google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(google::protobuf::DynamicMessageFactory *this, const google::protobuf::Descriptor *a2)
{
  uint64_t v9 = a2;
  if (*((unsigned char *)this + 16)
    && (int64_t v3 = *(google::protobuf::MessageFactory **)(*((void *)a2 + 2) + 16),
        uint64_t v4 = (google::protobuf::MessageFactory *)google::protobuf::DescriptorPool::generated_pool(this),
        v3 == v4))
  {
    uint64_t v7 = *(uint64_t (**)(void))(*(void *)google::protobuf::MessageFactory::generated_factory(v4) + 16);
    return v7();
  }
  else
  {
    uint64_t v5 = *((void *)this + 3);
    int v10 = &v9;
    uint64_t v6 = sub_100101CF0(v5, &v9, (uint64_t)&unk_100181DC5, &v10)[3];
    if (!v6) {
      operator new();
    }
    return *(void *)(v6 + 64);
  }
}

void sub_100100EA8()
{
}

void google::protobuf::DynamicMessage::~DynamicMessage(google::protobuf::DynamicMessage *this)
{
  *(void *)this = off_1001D09A0;
  uint64_t v2 = *(void *)(*((void *)this + 2) + 32);
  sub_1000333D0((uint64_t *)this + 1);
  uint64_t v3 = *(int *)(*((void *)this + 2) + 12);
  if (v3 != -1) {
    google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::DynamicMessage *)((char *)this + v3));
  }
  LODWORD(v4) = *(_DWORD *)(v2 + 104);
  if ((int)v4 >= 1)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v7 = *(void *)(v2 + 40);
      uint64_t v8 = v7 + v5;
      uint64_t v9 = *(void *)(v7 + v5 + 88);
      if (!v9 || *(_DWORD *)(v9 + 24) == 1 && *(unsigned char *)(**(void **)(v9 + 32) + 65)) {
        break;
      }
      uint64_t v15 = *((void *)this + 2);
      int v16 = -1431655765 * ((unint64_t)(v9 - *(void *)(*(void *)(v9 + 16) + 48)) >> 4);
      uint64_t v17 = v7 + v5;
      if (*(_DWORD *)((char *)this + 4 * v16 + *(_DWORD *)(v15 + 8)) == *(_DWORD *)(v7 + v5 + 68))
      {
        uint64_t v18 = *(int *)(*(void *)(v15 + 40) + 4 * ((int)v4 + v16));
        uint64_t v19 = *(std::once_flag::_State_type **)(v17 + 48);
        if (v19)
        {
          uint64_t v32 = v7 + v5;
          uint64_t v33 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
          {
            uint64_t v35 = &v33;
            uint64_t v36 = &v32;
            int64_t v34 = &v35;
            std::__call_once(v19, &v34, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        int v10 = (uint64_t *)((char *)this + v18);
        uint64_t v20 = v7 + v5;
        unsigned int v21 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v20 + 56)];
        if (v21 != 9)
        {
          int64_t v31 = *(std::once_flag::_State_type **)(v17 + 48);
          if (v31)
          {
            uint64_t v32 = v8;
            uint64_t v33 = google::protobuf::FieldDescriptor::TypeOnceInit;
            if (atomic_load_explicit((atomic_ullong *volatile)v31, memory_order_acquire) != -1)
            {
              uint64_t v35 = &v33;
              uint64_t v36 = &v32;
              int64_t v34 = &v35;
              std::__call_once(v31, &v34, (void (__cdecl *)(void *))sub_1000BB820);
            }
            unsigned int v21 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v20 + 56)];
          }
          if (v21 != 10) {
            goto LABEL_50;
          }
LABEL_44:
          if (*v10) {
            (*(void (**)(uint64_t))(*(void *)*v10 + 8))(*v10);
          }
          goto LABEL_50;
        }
        uint64_t v22 = *((void *)this + 2);
        uint64_t v23 = *(void *)(v22 + 64);
        uint64_t v24 = *(unsigned int *)(*(void *)(v22 + 40) + 4 * v6);
LABEL_27:
        google::protobuf::internal::ArenaStringPtr::Destroy(v10, *(void *)(v23 + v24) & 0xFFFFFFFFFFFFFFFELL, 0);
      }
LABEL_50:
      ++v6;
      uint64_t v4 = *(int *)(v2 + 104);
      v5 += 152;
      if (v6 >= v4) {
        return;
      }
    }
    int v10 = (uint64_t *)((char *)this + *(int *)(*(void *)(*((void *)this + 2) + 40) + 4 * v6));
    uint64_t v11 = *(std::once_flag::_State_type **)(v8 + 48);
    if (*(_DWORD *)(v8 + 60) == 3)
    {
      if (v11)
      {
        uint64_t v32 = v7 + v5;
        uint64_t v33 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
        {
          uint64_t v35 = &v33;
          uint64_t v36 = &v32;
          int64_t v34 = &v35;
          std::__call_once(v11, &v34, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      switch(*(_DWORD *)(v7 + v5 + 56))
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 0xD:
        case 0xE:
        case 0xF:
        case 0x10:
        case 0x11:
        case 0x12:
          if (*((int *)v10 + 1) >= 1)
          {
            uint64_t v12 = v10[1];
            uint64_t v14 = *(void *)(v12 - 8);
            uint64_t v13 = (void *)(v12 - 8);
            if (!v14) {
              operator delete(v13);
            }
          }
          break;
        case 9:
        case 0xC:
          sub_1000F9C98(v10);
          break;
        case 0xA:
        case 0xB:
          if (sub_100100518((google::protobuf::FieldDescriptor *)(v7 + v5))) {
            (*(void (**)(uint64_t *))*v10)(v10);
          }
          else {
            sub_100101C14(v10);
          }
          break;
        default:
          goto LABEL_50;
      }
      goto LABEL_50;
    }
    if (v11)
    {
      uint64_t v32 = v7 + v5;
      uint64_t v33 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
      {
        uint64_t v35 = &v33;
        uint64_t v36 = &v32;
        int64_t v34 = &v35;
        std::__call_once(v11, &v34, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    uint64_t v25 = v7 + v5;
    unsigned int v26 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v25 + 56)];
    if (v26 != 9)
    {
      int v28 = *(std::once_flag::_State_type **)(v8 + 48);
      if (v28)
      {
        uint64_t v32 = v8;
        uint64_t v33 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v28, memory_order_acquire) != -1)
        {
          uint64_t v35 = &v33;
          uint64_t v36 = &v32;
          int64_t v34 = &v35;
          std::__call_once(v28, &v34, (void (__cdecl *)(void *))sub_1000BB820);
        }
        unsigned int v26 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v25 + 56)];
      }
      if (v26 != 10) {
        goto LABEL_50;
      }
      int v29 = *(google::protobuf::DynamicMessage **)(*((void *)this + 2) + 64);
      if (v29 == this || v29 == 0) {
        goto LABEL_50;
      }
      goto LABEL_44;
    }
    uint64_t v27 = *((void *)this + 2);
    uint64_t v23 = *(void *)(v27 + 64);
    uint64_t v24 = *(int *)(*(void *)(v27 + 40) + 4 * v6);
    goto LABEL_27;
  }
}

{
  void *v1;
  uint64_t vars8;

  google::protobuf::DynamicMessage::~DynamicMessage(this);
  operator delete(v1);
}

void google::protobuf::DynamicMessage::CrossLinkPrototypes(google::protobuf::DynamicMessage *this)
{
  uint64_t v2 = (void *)*((void *)this + 2);
  uint64_t v3 = (google::protobuf::DynamicMessage *)v2[8];
  if (v3 != this && v3 != 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/dynamic_message.cc", 603);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v14, "CHECK failed: is_prototype(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
    uint64_t v2 = (void *)*((void *)this + 2);
  }
  uint64_t v6 = v2[4];
  if (*(int *)(v6 + 104) >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = (google::protobuf::DynamicMessageFactory *)v2[2];
    do
    {
      uint64_t v10 = *(void *)(v6 + 40);
      uint64_t v11 = *(int *)(*(void *)(*((void *)this + 2) + 40) + 4 * v8);
      uint64_t v12 = *(std::once_flag::_State_type **)(v10 + v7 + 48);
      if (v12)
      {
        uint64_t v15 = v10 + v7;
        int v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
        {
          v14[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v16;
          v14[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v15;
          uint64_t v17 = v14;
          std::__call_once(v12, &v17, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v10 + v7 + 56)] == 10
        && *(_DWORD *)(v10 + v7 + 60) != 3)
      {
        uint64_t v13 = (const google::protobuf::Descriptor *)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(v10 + v7));
        *(void *)((char *)this + v1sub_1000333D0((uint64_t *)this + 1) = google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(v9, v13);
      }
      ++v8;
      v7 += 152;
    }
    while (v8 < *(int *)(v6 + 104));
  }
}

void sub_100101528(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DynamicMessage::New(google::protobuf::DynamicMessage *this)
{
  return (*(uint64_t (**)(google::protobuf::DynamicMessage *, void))(*(void *)this + 32))(this, 0);
}

void *google::protobuf::DynamicMessage::New(google::protobuf::DynamicMessage *this, google::protobuf::Arena *a2)
{
  uint64_t v4 = (int *)*((void *)this + 2);
  if (a2)
  {
    uint64_t v5 = (void *)sub_100036A08(a2, *v4);
    bzero(v5, **((int **)this + 2));
    uint64_t v6 = (int *)*((void *)this + 2);
  }
  else
  {
    uint64_t v5 = operator new(*v4);
    uint64_t v6 = (int *)*((void *)this + 2);
    bzero(v5, *v6);
  }
  void *v5 = off_1001D09A0;
  v5[1] = a2;
  void v5[2] = v6;
  *((_DWORD *)v5 + sub_1000FA614((void *)this + 6) = 0;
  google::protobuf::DynamicMessage::SharedCtor((google::protobuf::DynamicMessage *)v5, 1);
  return v5;
}

uint64_t google::protobuf::DynamicMessage::GetCachedSize(google::protobuf::DynamicMessage *this)
{
  return *((unsigned int *)this + 6);
}

uint64_t google::protobuf::DynamicMessage::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t google::protobuf::DynamicMessage::GetMetadata(google::protobuf::DynamicMessage *this)
{
  return *(void *)(*((void *)this + 2) + 32);
}

void google::protobuf::DynamicMessageFactory::DynamicMessageFactory(google::protobuf::DynamicMessageFactory *this)
{
  *(void *)this = off_1001D0A50;
  *((void *)this + sub_1000333D0((uint64_t *)this + 1) = 0;
  *((unsigned char *)this + 1sub_1000FA614((void *)this + 6) = 0;
  operator new();
}

void sub_1001016B4(_Unwind_Exception *a1)
{
  google::protobuf::MessageFactory::~MessageFactory(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::DynamicMessageFactory::~DynamicMessageFactory(google::protobuf::DynamicMessageFactory *this, const google::protobuf::Descriptor *a2, const unsigned int *a3, const void *a4)
{
  *(void *)this = off_1001D0A50;
  uint64_t v5 = (uint64_t *)((char *)this + 24);
  for (uint64_t i = *(void **)(*((void *)this + 3) + 16); i; uint64_t i = (void *)*i)
  {
    google::protobuf::DynamicMessageFactory::DeleteDefaultOneofInstance(*(google::protobuf::DynamicMessageFactory **)(i[3] + 32), a2, a3, a4);
    uint64_t v7 = (void *)i[3];
    if (v7)
    {
      sub_100101B64(v7);
      operator delete();
    }
  }
  std::mutex::~mutex((std::mutex *)((char *)this + 32));
  sub_100101CA0(v5, 0);
  google::protobuf::MessageFactory::~MessageFactory(this);
}

{
  uint64_t vars8;

  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory(this, a2, a3, a4);
  operator delete();
}

void google::protobuf::DynamicMessageFactory::DeleteDefaultOneofInstance(google::protobuf::DynamicMessageFactory *this, const google::protobuf::Descriptor *a2, const unsigned int *a3, const void *a4)
{
  int v4 = *((_DWORD *)this + 27);
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = *((void *)this + 6);
    do
    {
      if ((*(_DWORD *)(v7 + 48 * v6 + 24) != 1 || !*(unsigned char *)(**(void **)(v7 + 48 * v6 + 32) + 65))
        && *(int *)(v7 + 48 * v6 + 24) >= 1)
      {
        uint64_t v8 = 0;
        do
        {
          uint64_t v9 = *(std::once_flag::_State_type **)(*(void *)(*(void *)(v7 + 48 * v6 + 32) + 8 * v8) + 48);
          if (v9)
          {
            uint64_t v10 = *(void *)(*(void *)(v7 + 48 * v6 + 32) + 8 * v8);
            uint64_t v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
            if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
            {
              v13[0] = &v11;
              v13[1] = &v10;
              uint64_t v12 = v13;
              std::__call_once(v9, &v12, (void (__cdecl *)(void *))sub_1000BB820);
            }
            uint64_t v7 = *((void *)this + 6);
          }
          ++v8;
        }
        while (v8 < *(int *)(v7 + 48 * v6 + 24));
        int v4 = *((_DWORD *)this + 27);
      }
      ++v6;
    }
    while (v6 < v4);
  }
}

uint64_t google::protobuf::DynamicMessageFactory::GetPrototype(google::protobuf::DynamicMessageFactory *this, const google::protobuf::Descriptor *a2)
{
  int v4 = (std::mutex *)((char *)this + 32);
  std::mutex::lock((std::mutex *)((char *)this + 32));
  PrototypeNoLocint k = google::protobuf::DynamicMessageFactory::GetPrototypeNoLock(this, a2);
  std::mutex::unlock(v4);
  return PrototypeNoLock;
}

void sub_100101924(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::DynamicMessageFactory::ConstructDefaultOneofInstance(google::protobuf::DynamicMessageFactory *this, const google::protobuf::Descriptor *a2, const unsigned int *a3, void *a4)
{
  int v4 = *((_DWORD *)this + 27);
  if (v4 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = *((void *)this + 6);
    do
    {
      if ((*(_DWORD *)(v9 + 48 * v8 + 24) != 1 || !*(unsigned char *)(**(void **)(v9 + 48 * v8 + 32) + 65))
        && *(int *)(v9 + 48 * v8 + 24) >= 1)
      {
        uint64_t v10 = 0;
        do
        {
          uint64_t v11 = *(void *)(*(void *)(v9 + 48 * v8 + 32) + 8 * v10);
          if (*(unsigned char *)(v11 + 67))
          {
            uint64_t v12 = *(void *)(v11 + 96);
            if (v12) {
              uint64_t v13 = (void *)(v12 + 80);
            }
            else {
              uint64_t v13 = (void *)(*(void *)(v11 + 40) + 128);
            }
          }
          else
          {
            uint64_t v13 = (void *)(*(void *)(v11 + 80) + 40);
          }
          uint64_t v14 = *((unsigned int *)a2 + (int)(678152731 * ((unint64_t)(v11 - *v13) >> 3)));
          uint64_t v15 = *(std::once_flag::_State_type **)(v11 + 48);
          if (v15)
          {
            uint64_t v17 = v11;
            uint64_t v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
            if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
            {
              v20[0] = &v18;
              v20[1] = &v17;
              uint64_t v19 = v20;
              std::__call_once(v15, &v19, (void (__cdecl *)(void *))sub_1000BB820);
            }
          }
          switch(*(_DWORD *)(v11 + 56))
          {
            case 1:
              *(void *)((char *)a3 + v14) = *(void *)(v11 + 144);
              break;
            case 2:
              *(const unsigned int *)((char *)a3 + v14) = *(_DWORD *)(v11 + 144);
              break;
            case 3:
            case 4:
            case 6:
            case 0x10:
            case 0x12:
              goto LABEL_24;
            case 5:
            case 7:
            case 0xD:
            case 0xF:
            case 0x11:
              unsigned int v16 = *(_DWORD *)(v11 + 144);
              goto LABEL_19;
            case 8:
              *((unsigned char *)a3 + v14) = *(unsigned char *)(v11 + 144);
              break;
            case 9:
            case 0xC:
              *(void *)((char *)a3 + v14) = 0;
LABEL_24:
              *(void *)((char *)a3 + v14) = *(void *)(v11 + 144);
              break;
            case 0xA:
            case 0xB:
              *(void *)((char *)a3 + v14) = 0;
              break;
            case 0xE:
              unsigned int v16 = *(_DWORD *)(google::protobuf::FieldDescriptor::default_value_enum((google::protobuf::FieldDescriptor *)v11)
                              + 16);
LABEL_19:
              *(const unsigned int *)((char *)a3 + v14) = v16;
              break;
            default:
              break;
          }
          ++v10;
          uint64_t v9 = *((void *)this + 6);
        }
        while (v10 < *(int *)(v9 + 48 * v8 + 24));
        int v4 = *((_DWORD *)this + 27);
      }
      ++v8;
    }
    while (v8 < v4);
  }
}

void *sub_100101B64(void *a1)
{
  uint64_t v2 = a1[8];
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  uint64_t v3 = a1[7];
  a1[7] = 0;
  if (v3) {
    operator delete();
  }
  uint64_t v4 = a1[6];
  a1[6] = 0;
  if (v4) {
    operator delete[]();
  }
  uint64_t v5 = a1[5];
  a1[5] = 0;
  if (v5) {
    operator delete[]();
  }
  return a1;
}

void sub_100101C14(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3) {
          (*(void (**)(void))(*(void *)*v3 + 8))(*v3);
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t sub_100101CA0(uint64_t *a1, uint64_t a2)
{
  uint64_t result = *a1;
  *a1 = a2;
  if (result)
  {
    sub_1000D9B88(result);
    operator delete();
  }
  return result;
}

void *sub_100101CF0(uint64_t a1, void *a2, uint64_t a3, void **a4)
{
  unint64_t v7 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v8 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v7 >> 47) ^ v7);
  unint64_t v9 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v4 = 0x9DDFEA08EB382D69 * (v8 ^ (v8 >> 47));
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
    }
    else
    {
      unint64_t v4 = v9 & (v10 - 1);
    }
    uint64_t v12 = *(void ***)(*(void *)a1 + 8 * v4);
    if (v12)
    {
      for (uint64_t i = *v12; i; uint64_t i = (void *)*i)
      {
        unint64_t v14 = i[1];
        if (v14 == v9)
        {
          if (i[2] == *a2) {
            return i;
          }
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10) {
              v14 %= v10;
            }
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != v4) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  void *i = 0;
  i[1] = v9;
  i[2] = **a4;
  i[3] = 0;
  float v15 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v16 = *(float *)(a1 + 32);
  if (!v10 || (float)(v16 * (float)v10) < v15)
  {
    BOOL v17 = 1;
    if (v10 >= 3) {
      BOOL v17 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v18 = v17 | (2 * v10);
    unint64_t v19 = vcvtps_u32_f32(v15 / v16);
    if (v18 <= v19) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v18;
    }
    sub_1000D98B4(a1, v20);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v4 = v9 % v10;
      }
      else {
        unint64_t v4 = v9;
      }
    }
    else
    {
      unint64_t v4 = (v10 - 1) & v9;
    }
  }
  uint64_t v21 = *(void *)a1;
  uint64_t v22 = *(void **)(*(void *)a1 + 8 * v4);
  if (v22)
  {
    void *i = *v22;
LABEL_38:
    void *v22 = i;
    goto LABEL_39;
  }
  void *i = *(void *)(a1 + 16);
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = i;
  *(void *)(v21 + 8 * v4) = a1 + 16;
  if (*i)
  {
    unint64_t v23 = *(void *)(*i + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v23 >= v10) {
        v23 %= v10;
      }
    }
    else
    {
      v23 &= v10 - 1;
    }
    uint64_t v22 = (void *)(*(void *)a1 + 8 * v23);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_100101F34(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::GeneratedExtensionFinder::Find(uint64_t a1, int a2, _OWORD *a3)
{
  if (qword_1001EBC10)
  {
    int8x8_t v3 = *(int8x8_t *)(qword_1001EBC10 + 8);
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 8);
      unint64_t v5 = 0x9DDFEA08EB382D69 * (((8 * v4) + 8) ^ HIDWORD(v4));
      unint64_t v6 = 0x9DDFEA08EB382D69 * (HIDWORD(v4) ^ (v5 >> 47) ^ v5);
      unint64_t v7 = (0x9DDFEA08EB382D69 * (v6 ^ (v6 >> 47))) ^ a2;
      uint8x8_t v8 = (uint8x8_t)vcnt_s8(v3);
      v8.i16[0] = vaddlv_u8(v8);
      if (v8.u32[0] > 1uLL)
      {
        unint64_t v9 = v7;
        if (v7 >= *(void *)&v3) {
          unint64_t v9 = v7 % *(void *)&v3;
        }
      }
      else
      {
        unint64_t v9 = (*(void *)&v3 - 1) & v7;
      }
      unint64_t v10 = *(uint64_t ***)(*(void *)qword_1001EBC10 + 8 * v9);
      if (v10)
      {
        for (uint64_t i = *v10; i; uint64_t i = (uint64_t *)*i)
        {
          unint64_t v12 = i[1];
          if (v7 == v12)
          {
            if (i[2] == v4 && *((_DWORD *)i + 6) == a2)
            {
              long long v14 = *((_OWORD *)i + 3);
              *a3 = *((_OWORD *)i + 2);
              a3[1] = v14;
              return 1;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v12 >= *(void *)&v3) {
                v12 %= *(void *)&v3;
              }
            }
            else
            {
              v12 &= *(void *)&v3 - 1;
            }
            if (v12 != v9) {
              return 0;
            }
          }
        }
      }
    }
  }
  return 0;
}

void sub_100102060(unint64_t a1, int a2, _OWORD *a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBC20, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001EBC20))
  {
    operator new();
  }
  uint64_t v7 = qword_1001EBC18;
  qword_1001EBC10 = qword_1001EBC18;
  unint64_t v8 = 0x9DDFEA08EB382D69 * (((8 * a1) + 8) ^ HIDWORD(a1));
  unint64_t v9 = 0x9DDFEA08EB382D69 * (HIDWORD(a1) ^ (v8 >> 47) ^ v8);
  unint64_t v10 = (0x9DDFEA08EB382D69 * (v9 ^ (v9 >> 47))) ^ a2;
  unint64_t v11 = *(void *)(qword_1001EBC18 + 8);
  if (!v11) {
    goto LABEL_23;
  }
  uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
  v12.i16[0] = vaddlv_u8(v12);
  if (v12.u32[0] > 1uLL)
  {
    unint64_t v3 = (0x9DDFEA08EB382D69 * (v9 ^ (v9 >> 47))) ^ a2;
    if (v10 >= v11) {
      unint64_t v3 = v10 % v11;
    }
  }
  else
  {
    unint64_t v3 = (v11 - 1) & v10;
  }
  uint64_t v13 = *(uint64_t ***)(*(void *)qword_1001EBC18 + 8 * v3);
  if (!v13 || (long long v14 = *v13) == 0)
  {
LABEL_23:
    BOOL v17 = operator new(0x40uLL);
    void *v17 = 0;
    v17[1] = v10;
    void v17[2] = a1;
    *((_DWORD *)v17 + sub_1000FA614((void *)this + 6) = a2;
    *((_DWORD *)v17 + 7) = 0;
    long long v18 = a3[1];
    *((_OWORD *)v17 + sub_1000FACE4((void *)this + 2) = *a3;
    *((_OWORD *)v17 + 3) = v18;
    float v19 = (float)(unint64_t)(*(void *)(v7 + 24) + 1);
    float v20 = *(float *)(v7 + 32);
    if (v11 && (float)(v20 * (float)v11) >= v19)
    {
LABEL_69:
      uint64_t v36 = *(void **)v7;
      BOOL v37 = *(void **)(*(void *)v7 + 8 * v3);
      if (v37)
      {
        void *v17 = *v37;
      }
      else
      {
        void *v17 = *(void *)(v7 + 16);
        *(void *)(v7 + 1sub_1000FA614((void *)this + 6) = v17;
        v36[v3] = v7 + 16;
        if (!*v17)
        {
LABEL_78:
          ++*(void *)(v7 + 24);
          return;
        }
        unint64_t v38 = *(void *)(*v17 + 8);
        if ((v11 & (v11 - 1)) != 0)
        {
          if (v38 >= v11) {
            v38 %= v11;
          }
        }
        else
        {
          v38 &= v11 - 1;
        }
        BOOL v37 = (void *)(*(void *)v7 + 8 * v38);
      }
      void *v37 = v17;
      goto LABEL_78;
    }
    BOOL v21 = (v11 & (v11 - 1)) == 0;
    if (v11 < 3) {
      BOOL v21 = 0;
    }
    unint64_t v22 = (2 * v11) | !v21;
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      int8x8_t prime = (int8x8_t)v23;
    }
    else {
      int8x8_t prime = (int8x8_t)v22;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v11 = *(void *)(v7 + 8);
    }
    if (*(void *)&prime > v11) {
      goto LABEL_35;
    }
    if (*(void *)&prime < v11)
    {
      unint64_t v31 = vcvtps_u32_f32((float)*(unint64_t *)(v7 + 24) / *(float *)(v7 + 32));
      if (v11 < 3 || (uint8x8_t v32 = (uint8x8_t)vcnt_s8((int8x8_t)v11), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
      {
        unint64_t v31 = std::__next_prime(v31);
      }
      else
      {
        uint64_t v33 = 1 << -(char)__clz(v31 - 1);
        if (v31 >= 2) {
          unint64_t v31 = v33;
        }
      }
      if (*(void *)&prime <= v31) {
        int8x8_t prime = (int8x8_t)v31;
      }
      if (*(void *)&prime >= v11)
      {
        unint64_t v11 = *(void *)(v7 + 8);
      }
      else
      {
        if (prime)
        {
LABEL_35:
          if (*(void *)&prime >> 61) {
            sub_100079064();
          }
          uint64_t v25 = operator new(8 * *(void *)&prime);
          unsigned int v26 = *(void **)v7;
          *(void *)uint64_t v7 = v25;
          if (v26) {
            operator delete(v26);
          }
          uint64_t v27 = 0;
          *(int8x8_t *)(v7 + 8) = prime;
          do
            *(void *)(*(void *)v7 + 8 * v27++) = 0;
          while (*(void *)&prime != v27);
          int v28 = *(void **)(v7 + 16);
          if (v28)
          {
            unint64_t v29 = v28[1];
            uint8x8_t v30 = (uint8x8_t)vcnt_s8(prime);
            v30.i16[0] = vaddlv_u8(v30);
            if (v30.u32[0] > 1uLL)
            {
              if (v29 >= *(void *)&prime) {
                v29 %= *(void *)&prime;
              }
            }
            else
            {
              v29 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)v7 + 8 * v29) = v7 + 16;
            int64_t v34 = (void *)*v28;
            if (*v28)
            {
              do
              {
                unint64_t v35 = v34[1];
                if (v30.u32[0] > 1uLL)
                {
                  if (v35 >= *(void *)&prime) {
                    v35 %= *(void *)&prime;
                  }
                }
                else
                {
                  v35 &= *(void *)&prime - 1;
                }
                if (v35 != v29)
                {
                  if (!*(void *)(*(void *)v7 + 8 * v35))
                  {
                    *(void *)(*(void *)v7 + 8 * v3sub_1000FA614((void *)this + 5) = v28;
                    goto LABEL_60;
                  }
                  *int v28 = *v34;
                  *int64_t v34 = **(void **)(*(void *)v7 + 8 * v35);
                  **(void **)(*(void *)v7 + 8 * v3sub_1000FA614((void *)this + 5) = v34;
                  int64_t v34 = v28;
                }
                unint64_t v35 = v29;
LABEL_60:
                int v28 = v34;
                int64_t v34 = (void *)*v34;
                unint64_t v29 = v35;
              }
              while (v34);
            }
          }
          unint64_t v11 = (unint64_t)prime;
          goto LABEL_64;
        }
        uint64_t v44 = *(void **)v7;
        *(void *)uint64_t v7 = 0;
        if (v44) {
          operator delete(v44);
        }
        unint64_t v11 = 0;
        *(void *)(v7 + 8) = 0;
      }
    }
LABEL_64:
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v3 = v10 % v11;
      }
      else {
        unint64_t v3 = v10;
      }
    }
    else
    {
      unint64_t v3 = (v11 - 1) & v10;
    }
    goto LABEL_69;
  }
  while (1)
  {
    unint64_t v15 = v14[1];
    if (v15 == v10) {
      break;
    }
    if (v12.u32[0] > 1uLL)
    {
      if (v15 >= v11) {
        v15 %= v11;
      }
    }
    else
    {
      v15 &= v11 - 1;
    }
    if (v15 != v3) {
      goto LABEL_23;
    }
LABEL_22:
    long long v14 = (uint64_t *)*v14;
    if (!v14) {
      goto LABEL_23;
    }
  }
  if (v14[2] != a1 || *((_DWORD *)v14 + 6) != a2) {
    goto LABEL_22;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v48, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 108);
  char v39 = google::protobuf::internal::LogMessage::operator<<(v48, "Multiple extension registrations for type \"");
  (*(void (**)(void **__return_ptr, unint64_t))(*(void *)a1 + 16))(__p, a1);
  uint64_t v40 = google::protobuf::internal::LogMessage::operator<<(v39, (const std::string::value_type *)__p);
  unint64_t v41 = google::protobuf::internal::LogMessage::operator<<(v40, "\", field number ");
  int v42 = google::protobuf::internal::LogMessage::operator<<(v41, a2);
  uint64_t v43 = google::protobuf::internal::LogMessage::operator<<(v42, ".");
  google::protobuf::internal::LogFinisher::operator=((int)&v45, (const char **)&v43->__r_.__value_.__l.__data_);
  if (v47 < 0) {
    operator delete(__p[0]);
  }
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v48[0].__r_.__value_.__l.__data_);
}

void sub_1001025C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
}

void google::protobuf::internal::ExtensionSet::RegisterMessageExtension(unint64_t a1, int a2, char a3, char a4, char a5, uint64_t a6)
{
  if ((a3 & 0xFE) != 0xA)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 177);
    uint8x8_t v12 = google::protobuf::internal::LogMessage::operator<<(v16, "CHECK failed: type == WireFormatLite::TYPE_MESSAGE || type == WireFormatLite::TYPE_GROUP: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v15, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
  }
  LOBYTE(v13) = a3;
  BYTE1(v13) = a4;
  BYTE2(v13) = a5;
  *((void *)&v13 + sub_1000333D0((uint64_t *)this + 1) = a6;
  uint64_t v14 = 0;
  sub_100102060(a1, a2, &v13);
}

void sub_1001026D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *sub_1001026F0(google::protobuf::Arena *this, unint64_t a2)
{
  if (a2 >> 59)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/arena.h", 310);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: (num_elements) <= (std::numeric_limits<size_t>::max() / sizeof(T)): ");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "Requested size is too large to fit into size_t.");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  if (this) {
    return (void *)sub_100108F04(this, a2);
  }
  else {
    return operator new[](32 * a2);
  }
}

void sub_100102788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::ExtensionSet(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = a2;
  *(_DWORD *)(result + 8) = 0;
  *(void *)(result + 1sub_1000FA614((void *)this + 6) = 0;
  return result;
}

void google::protobuf::internal::ExtensionSet::~ExtensionSet(google::protobuf::internal::ExtensionSet *this)
{
  if (!*(void *)this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (*((unsigned __int16 *)this + 4) >= 0x101u)
    {
      sub_100108FEC(*(uint64_t **)v2, (uint64_t *)(v2 + 8));
    }
    else if (*((_WORD *)this + 5))
    {
      uint64_t v3 = 32 * *((unsigned __int16 *)this + 5);
      unint64_t v4 = (uint64_t *)(v2 + 8);
      do
      {
        google::protobuf::internal::ExtensionSet::Extension::Free(v4);
        v4 += 4;
        v3 -= 32;
      }
      while (v3);
    }
    uint64_t v5 = *((void *)this + 2);
    if (*((unsigned __int16 *)this + 4) >= 0x101u)
    {
      if (v5)
      {
        sub_10002770C(v5, *(void **)(v5 + 8));
        operator delete();
      }
    }
    else if (v5)
    {
      operator delete[]();
    }
  }
}

_DWORD *google::protobuf::internal::ExtensionSet::Has(google::protobuf::internal::ExtensionSet *this, int a2)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (result) {
    return (_DWORD *)((*((unsigned char *)result + 10) & 1) == 0);
  }
  return result;
}

_DWORD *google::protobuf::internal::ExtensionSet::FindOrNull(google::protobuf::internal::ExtensionSet *this, int a2)
{
  uint64_t v2 = (_DWORD *)*((void *)this + 2);
  if (*((unsigned __int16 *)this + 4) < 0x101u)
  {
    unint64_t v3 = *((unsigned __int16 *)this + 5);
    if (*((_WORD *)this + 5))
    {
      unint64_t v4 = &v2[8 * v3];
      do
      {
        unint64_t v5 = v3 >> 1;
        unint64_t v6 = &v2[8 * (v3 >> 1)];
        int v8 = *v6;
        char v7 = v6 + 8;
        v3 += ~(v3 >> 1);
        if (v8 < a2) {
          uint64_t v2 = v7;
        }
        else {
          unint64_t v3 = v5;
        }
      }
      while (v3);
      if (v2 != v4)
      {
        int v10 = *v2;
        unint64_t v9 = v2 + 2;
        if (v10 == a2) {
          return v9;
        }
        else {
          return 0;
        }
      }
    }
    return 0;
  }
  uint64_t v14 = (_DWORD *)*((void *)v2 + 1);
  uint8x8_t v12 = v2 + 2;
  long long v13 = v14;
  if (!v14) {
    return 0;
  }
  char v15 = v12;
  do
  {
    int v16 = v13[8];
    BOOL v17 = v16 < a2;
    if (v16 >= a2) {
      long long v18 = v13;
    }
    else {
      long long v18 = v13 + 2;
    }
    if (!v17) {
      char v15 = v13;
    }
    long long v13 = (_DWORD *)*v18;
  }
  while (*v18);
  if (v15 == v12) {
    return 0;
  }
  int v19 = v15[8];
  float v20 = v15 + 10;
  if (v19 <= a2) {
    return v20;
  }
  else {
    return 0;
  }
}

{
  _DWORD *v2;
  unint64_t v3;
  _DWORD *v4;
  unint64_t v5;
  int *v6;
  _DWORD *v7;
  int v8;
  _DWORD *v9;
  int v10;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  int v16;
  BOOL v17;
  void *v18;
  int v19;
  _DWORD *v20;

  uint64_t v2 = (_DWORD *)*((void *)this + 2);
  if (*((unsigned __int16 *)this + 4) < 0x101u)
  {
    unint64_t v3 = *((unsigned __int16 *)this + 5);
    if (*((_WORD *)this + 5))
    {
      unint64_t v4 = &v2[8 * v3];
      do
      {
        unint64_t v5 = v3 >> 1;
        unint64_t v6 = &v2[8 * (v3 >> 1)];
        int v8 = *v6;
        char v7 = v6 + 8;
        v3 += ~(v3 >> 1);
        if (v8 < a2) {
          uint64_t v2 = v7;
        }
        else {
          unint64_t v3 = v5;
        }
      }
      while (v3);
      if (v2 != v4)
      {
        int v10 = *v2;
        unint64_t v9 = v2 + 2;
        if (v10 == a2) {
          return v9;
        }
        else {
          return 0;
        }
      }
    }
    return 0;
  }
  uint64_t v14 = (_DWORD *)*((void *)v2 + 1);
  uint8x8_t v12 = v2 + 2;
  long long v13 = v14;
  if (!v14) {
    return 0;
  }
  char v15 = v12;
  do
  {
    int v16 = v13[8];
    BOOL v17 = v16 < a2;
    if (v16 >= a2) {
      long long v18 = v13;
    }
    else {
      long long v18 = v13 + 2;
    }
    if (!v17) {
      char v15 = v13;
    }
    long long v13 = (_DWORD *)*v18;
  }
  while (*v18);
  if (v15 == v12) {
    return 0;
  }
  int v19 = v15[8];
  float v20 = v15 + 10;
  if (v19 <= a2) {
    return v20;
  }
  else {
    return 0;
  }
}

google::protobuf::internal::ExtensionSet::Extension *google::protobuf::internal::ExtensionSet::ExtensionSize(google::protobuf::internal::ExtensionSet *this, int a2)
{
  uint64_t result = (google::protobuf::internal::ExtensionSet::Extension *)google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (result)
  {
    return (google::protobuf::internal::ExtensionSet::Extension *)google::protobuf::internal::ExtensionSet::Extension::GetSize(result);
  }
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::Extension::GetSize(google::protobuf::internal::ExtensionSet::Extension *this)
{
  switch(*((unsigned char *)this + 8))
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
      uint64_t result = **(unsigned int **)this;
      break;
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
      uint64_t result = *(unsigned int *)(*(void *)this + 8);
      break;
    default:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v4, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 1719);
      uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v4, "Can't get here.");
      google::protobuf::internal::LogFinisher::operator=((int)&v3, (const char **)&v2->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v4[0].__r_.__value_.__l.__data_);
      uint64_t result = 0;
      break;
  }
  return result;
}

void sub_100102A40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unsigned char *google::protobuf::internal::ExtensionSet::ClearExtension(google::protobuf::internal::ExtensionSet *this, int a2)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (result)
  {
    return google::protobuf::internal::ExtensionSet::Extension::Clear(result);
  }
  return result;
}

unsigned char *google::protobuf::internal::ExtensionSet::Extension::Clear(unsigned char *this)
{
  uint64_t v1 = this;
  if (this[9])
  {
    switch(this[8])
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        **(_DWORD **)this = 0;
        break;
      case 9:
      case 0xC:
        unint64_t v5 = *(_DWORD **)this;
        this = (unsigned char *)sub_1000F9B0C((uint64_t)v5);
        break;
      case 0xA:
      case 0xB:
        unint64_t v6 = *(_DWORD **)this;
        uint64_t v7 = *(unsigned int *)(*(void *)this + 8);
        if ((int)v7 >= 1)
        {
          int v8 = (uint64_t *)(*((void *)v6 + 2) + 8);
          do
          {
            uint64_t v9 = *v8++;
            this = (unsigned char *)(*(uint64_t (**)(uint64_t))(*(void *)v9 + 40))(v9);
            --v7;
          }
          while (v7);
          std::string v6[2] = 0;
        }
        break;
      default:
        return this;
    }
  }
  else if ((this[10] & 1) == 0)
  {
    int v2 = google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[this[8]];
    if (v2 == 10)
    {
      uint64_t v4 = **(void **)this;
      if ((this[10] & 0x10) != 0) {
        this = (unsigned char *)(*(uint64_t (**)(void))(v4 + 112))();
      }
      else {
        this = (unsigned char *)(*(uint64_t (**)(void))(v4 + 40))();
      }
    }
    else if (v2 == 9)
    {
      char v3 = *(void **)this;
      if (*(char *)(*(void *)this + 23) < 0)
      {
        *(unsigned char *)*char v3 = 0;
        v3[1] = 0;
      }
      else
      {
        *(unsigned char *)char v3 = 0;
        *((unsigned char *)v3 + 23) = 0;
      }
    }
    v1[10] = v1[10] & 0xF0 | 1;
  }
  return this;
}

uint64_t google::protobuf::internal::ExtensionSet::GetInt32(google::protobuf::internal::ExtensionSet *this, int a2, uint64_t a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4 && (*((unsigned char *)v4 + 10) & 1) == 0) {
    return *v4;
  }
  return a3;
}

uint64_t **google::protobuf::internal::ExtensionSet::SetInt32(google::protobuf::internal::ExtensionSet *this, int a2, char a3, int a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  result[2] = (uint64_t *)a5;
  if (v9)
  {
    *((unsigned char *)result + 8) = a3;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(_DWORD *)uint64_t result = a4;
  return result;
}

BOOL google::protobuf::internal::ExtensionSet::MaybeNewExtension(google::protobuf::internal::ExtensionSet *this, int a2, const google::protobuf::FieldDescriptor *a3, uint64_t ***a4)
{
  unint64_t v6 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  *a4 = v6;
  std::string v6[2] = (uint64_t *)a3;
  return v7 != 0;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedInt32(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 348);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: extension != NULL: ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return *(unsigned int *)(*(void *)(*(void *)v4 + 8) + 4 * a3);
}

void sub_100102E70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::AddInt32(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, int a5, const google::protobuf::FieldDescriptor *a6)
{
  unint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint8x8_t v12 = v11;
  void v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 1sub_1000333D0((uint64_t *)this + 1) = a4;
    uint64_t v14 = (unsigned int *)sub_10010905C(*(google::protobuf::Arena **)this);
    _DWORD *v12 = (uint64_t *)v14;
  }
  else
  {
    uint64_t v14 = (unsigned int *)*v11;
  }
  uint64_t v15 = *v14;
  if (v15 == v14[1])
  {
    unsigned int v16 = v15 + 1;
    google::protobuf::RepeatedField<int>::Reserve(v14, v15 + 1);
    *(_DWORD *)(*((void *)v14 + 1) + 4 * v1sub_1000FA614((void *)this + 5) = a5;
  }
  else
  {
    *(_DWORD *)(*((void *)v14 + 1) + 4 * v1sub_1000FA614((void *)this + 5) = a5;
    unsigned int v16 = v15 + 1;
  }
  unsigned int *v14 = v16;
}

uint64_t google::protobuf::internal::ExtensionSet::GetInt64(google::protobuf::internal::ExtensionSet *this, int a2, uint64_t a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4 && (v4[10] & 1) == 0) {
    return *(void *)v4;
  }
  return a3;
}

uint64_t **google::protobuf::internal::ExtensionSet::SetInt64(google::protobuf::internal::ExtensionSet *this, int a2, char a3, uint64_t *a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  result[2] = (uint64_t *)a5;
  if (v9)
  {
    *((unsigned char *)result + 8) = a3;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *uint64_t result = a4;
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedInt64(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 349);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: extension != NULL: ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(*(void *)v4 + 8) + 8 * a3);
}

void sub_100103054(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::AddInt64(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, uint64_t a5, const google::protobuf::FieldDescriptor *a6)
{
  unint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint8x8_t v12 = v11;
  void v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 1sub_1000333D0((uint64_t *)this + 1) = a4;
    uint64_t v14 = (unsigned int *)sub_100109184(*(google::protobuf::Arena **)this);
    _DWORD *v12 = (uint64_t *)v14;
  }
  else
  {
    uint64_t v14 = (unsigned int *)*v11;
  }
  uint64_t v15 = *v14;
  if (v15 == v14[1])
  {
    unsigned int v16 = v15 + 1;
    google::protobuf::RepeatedField<long long>::Reserve(v14, v15 + 1);
    *(void *)(*((void *)v14 + 1) + 8 * v1sub_1000FA614((void *)this + 5) = a5;
  }
  else
  {
    *(void *)(*((void *)v14 + 1) + 8 * v1sub_1000FA614((void *)this + 5) = a5;
    unsigned int v16 = v15 + 1;
  }
  unsigned int *v14 = v16;
}

uint64_t google::protobuf::internal::ExtensionSet::GetUInt32(google::protobuf::internal::ExtensionSet *this, int a2, uint64_t a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4 && (*((unsigned char *)v4 + 10) & 1) == 0) {
    return *v4;
  }
  return a3;
}

uint64_t **google::protobuf::internal::ExtensionSet::SetUInt32(google::protobuf::internal::ExtensionSet *this, int a2, char a3, int a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  result[2] = (uint64_t *)a5;
  if (v9)
  {
    *((unsigned char *)result + 8) = a3;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(_DWORD *)uint64_t result = a4;
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedUInt32(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 350);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: extension != NULL: ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return *(unsigned int *)(*(void *)(*(void *)v4 + 8) + 4 * a3);
}

void sub_100103238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::AddUInt32(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, int a5, const google::protobuf::FieldDescriptor *a6)
{
  unint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint8x8_t v12 = v11;
  void v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 1sub_1000333D0((uint64_t *)this + 1) = a4;
    uint64_t v14 = (unsigned int *)sub_1001092AC(*(google::protobuf::Arena **)this);
    _DWORD *v12 = (uint64_t *)v14;
  }
  else
  {
    uint64_t v14 = (unsigned int *)*v11;
  }
  uint64_t v15 = *v14;
  if (v15 == v14[1])
  {
    unsigned int v16 = v15 + 1;
    google::protobuf::RepeatedField<unsigned int>::Reserve(v14, v15 + 1);
    *(_DWORD *)(*((void *)v14 + 1) + 4 * v1sub_1000FA614((void *)this + 5) = a5;
  }
  else
  {
    *(_DWORD *)(*((void *)v14 + 1) + 4 * v1sub_1000FA614((void *)this + 5) = a5;
    unsigned int v16 = v15 + 1;
  }
  unsigned int *v14 = v16;
}

uint64_t google::protobuf::internal::ExtensionSet::GetUInt64(google::protobuf::internal::ExtensionSet *this, int a2, uint64_t a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4 && (v4[10] & 1) == 0) {
    return *(void *)v4;
  }
  return a3;
}

uint64_t **google::protobuf::internal::ExtensionSet::SetUInt64(google::protobuf::internal::ExtensionSet *this, int a2, char a3, uint64_t *a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  result[2] = (uint64_t *)a5;
  if (v9)
  {
    *((unsigned char *)result + 8) = a3;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *uint64_t result = a4;
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedUInt64(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 351);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: extension != NULL: ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(*(void *)v4 + 8) + 8 * a3);
}

void sub_10010341C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::AddUInt64(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, uint64_t a5, const google::protobuf::FieldDescriptor *a6)
{
  unint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint8x8_t v12 = v11;
  void v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 1sub_1000333D0((uint64_t *)this + 1) = a4;
    uint64_t v14 = (unsigned int *)sub_1001093D4(*(google::protobuf::Arena **)this);
    _DWORD *v12 = (uint64_t *)v14;
  }
  else
  {
    uint64_t v14 = (unsigned int *)*v11;
  }
  uint64_t v15 = *v14;
  if (v15 == v14[1])
  {
    unsigned int v16 = v15 + 1;
    google::protobuf::RepeatedField<unsigned long long>::Reserve(v14, v15 + 1);
    *(void *)(*((void *)v14 + 1) + 8 * v1sub_1000FA614((void *)this + 5) = a5;
  }
  else
  {
    *(void *)(*((void *)v14 + 1) + 8 * v1sub_1000FA614((void *)this + 5) = a5;
    unsigned int v16 = v15 + 1;
  }
  unsigned int *v14 = v16;
}

float google::protobuf::internal::ExtensionSet::GetFloat(google::protobuf::internal::ExtensionSet *this, int a2, float a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4 && (v4[10] & 1) == 0) {
    return *(float *)v4;
  }
  return a3;
}

uint64_t **google::protobuf::internal::ExtensionSet::SetFloat(google::protobuf::internal::ExtensionSet *this, int a2, char a3, float a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  result[2] = (uint64_t *)a5;
  if (v9)
  {
    *((unsigned char *)result + 8) = a3;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(float *)uint64_t result = a4;
  return result;
}

float google::protobuf::internal::ExtensionSet::GetRepeatedFloat(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 352);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: extension != NULL: ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return *(float *)(*(void *)(*(void *)v4 + 8) + 4 * a3);
}

void sub_100103600(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::AddFloat(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, float a5, const google::protobuf::FieldDescriptor *a6)
{
  unint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint8x8_t v12 = v11;
  void v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 1sub_1000333D0((uint64_t *)this + 1) = a4;
    uint64_t v14 = (unsigned int *)sub_1001094FC(*(google::protobuf::Arena **)this);
    _DWORD *v12 = (uint64_t *)v14;
  }
  else
  {
    uint64_t v14 = (unsigned int *)*v11;
  }
  uint64_t v15 = *v14;
  if (v15 == v14[1])
  {
    unsigned int v16 = v15 + 1;
    google::protobuf::RepeatedField<float>::Reserve(v14, v15 + 1);
    *(float *)(*((void *)v14 + 1) + 4 * v1sub_1000FA614((void *)this + 5) = a5;
  }
  else
  {
    *(float *)(*((void *)v14 + 1) + 4 * v1sub_1000FA614((void *)this + 5) = a5;
    unsigned int v16 = v15 + 1;
  }
  unsigned int *v14 = v16;
}

double google::protobuf::internal::ExtensionSet::GetDouble(google::protobuf::internal::ExtensionSet *this, int a2, double a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4 && (v4[10] & 1) == 0) {
    return *(double *)v4;
  }
  return a3;
}

uint64_t **google::protobuf::internal::ExtensionSet::SetDouble(google::protobuf::internal::ExtensionSet *this, int a2, char a3, double a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  result[2] = (uint64_t *)a5;
  if (v9)
  {
    *((unsigned char *)result + 8) = a3;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(double *)uint64_t result = a4;
  return result;
}

double google::protobuf::internal::ExtensionSet::GetRepeatedDouble(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 353);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: extension != NULL: ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return *(double *)(*(void *)(*(void *)v4 + 8) + 8 * a3);
}

void sub_1001037EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::AddDouble(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, double a5, const google::protobuf::FieldDescriptor *a6)
{
  unint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint8x8_t v12 = v11;
  void v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 1sub_1000333D0((uint64_t *)this + 1) = a4;
    uint64_t v14 = (unsigned int *)sub_100109624(*(google::protobuf::Arena **)this);
    _DWORD *v12 = (uint64_t *)v14;
  }
  else
  {
    uint64_t v14 = (unsigned int *)*v11;
  }
  uint64_t v15 = *v14;
  if (v15 == v14[1])
  {
    unsigned int v16 = v15 + 1;
    google::protobuf::RepeatedField<double>::Reserve(v14, v15 + 1);
    *(double *)(*((void *)v14 + 1) + 8 * v1sub_1000FA614((void *)this + 5) = a5;
  }
  else
  {
    *(double *)(*((void *)v14 + 1) + 8 * v1sub_1000FA614((void *)this + 5) = a5;
    unsigned int v16 = v15 + 1;
  }
  unsigned int *v14 = v16;
}

BOOL google::protobuf::internal::ExtensionSet::GetBool(google::protobuf::internal::ExtensionSet *this, int a2, uint64_t a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4 && (v4[10] & 1) == 0) {
    return *v4 != 0;
  }
  return a3;
}

uint64_t **google::protobuf::internal::ExtensionSet::SetBool(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  result[2] = (uint64_t *)a5;
  if (v9)
  {
    *((unsigned char *)result + 8) = a3;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(unsigned char *)uint64_t result = a4;
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedBool(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 354);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: extension != NULL: ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return *(unsigned __int8 *)(*(void *)(*(void *)v4 + 8) + a3);
}

void sub_1001039E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::AddBool(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, char a5, const google::protobuf::FieldDescriptor *a6)
{
  unint64_t v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint8x8_t v12 = v11;
  void v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 1sub_1000333D0((uint64_t *)this + 1) = a4;
    uint64_t v14 = (unsigned int *)sub_10010974C(*(google::protobuf::Arena **)this);
    _DWORD *v12 = (uint64_t *)v14;
  }
  else
  {
    uint64_t v14 = (unsigned int *)*v11;
  }
  uint64_t v15 = *v14;
  if (v15 == v14[1])
  {
    unsigned int v16 = v15 + 1;
    google::protobuf::RepeatedField<BOOL>::Reserve(v14, v15 + 1);
    *(unsigned char *)(*((void *)v14 + 1) + v1sub_1000FA614((void *)this + 5) = a5;
  }
  else
  {
    *(unsigned char *)(*((void *)v14 + 1) + v1sub_1000FA614((void *)this + 5) = a5;
    unsigned int v16 = v15 + 1;
  }
  unsigned int *v14 = v16;
}

uint64_t *google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(google::protobuf::internal::ExtensionSet *this, int a2, int a3, char a4, const google::protobuf::FieldDescriptor *a5)
{
  char v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  int v10 = v9;
  std::string v9[2] = (uint64_t *)a5;
  if (v11)
  {
    *((unsigned char *)v9 + 9) = 1;
    *((unsigned char *)v9 + 8) = a3;
    *((unsigned char *)v9 + 1sub_1000333D0((uint64_t *)this + 1) = a4;
    switch(a3)
    {
      case 1:
        uint8x8_t v12 = sub_100109624(*(google::protobuf::Arena **)this);
        goto LABEL_12;
      case 2:
        uint8x8_t v12 = sub_1001094FC(*(google::protobuf::Arena **)this);
        goto LABEL_12;
      case 3:
      case 16:
      case 18:
        uint8x8_t v12 = sub_100109184(*(google::protobuf::Arena **)this);
        goto LABEL_12;
      case 4:
      case 6:
        uint8x8_t v12 = sub_1001093D4(*(google::protobuf::Arena **)this);
        goto LABEL_12;
      case 5:
      case 14:
      case 15:
      case 17:
        uint8x8_t v12 = sub_10010905C(*(google::protobuf::Arena **)this);
        goto LABEL_12;
      case 7:
      case 13:
        uint8x8_t v12 = sub_1001092AC(*(google::protobuf::Arena **)this);
        goto LABEL_12;
      case 8:
        uint8x8_t v12 = sub_10010974C(*(google::protobuf::Arena **)this);
        goto LABEL_12;
      case 9:
      case 12:
        uint8x8_t v12 = sub_100109874(*(google::protobuf::Arena **)this);
        goto LABEL_12;
      case 10:
      case 11:
        uint8x8_t v12 = sub_1001099A4(*(google::protobuf::Arena **)this);
LABEL_12:
        uint64_t *v10 = v12;
        break;
      default:
        return *v10;
    }
  }
  return *v10;
}

uint64_t google::protobuf::internal::ExtensionSet::GetEnum(google::protobuf::internal::ExtensionSet *this, int a2, uint64_t a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (v4 && (*((unsigned char *)v4 + 10) & 1) == 0) {
    return *v4;
  }
  return a3;
}

uint64_t **google::protobuf::internal::ExtensionSet::SetEnum(google::protobuf::internal::ExtensionSet *this, int a2, char a3, int a4, const google::protobuf::FieldDescriptor *a5)
{
  uint64_t result = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  result[2] = (uint64_t *)a5;
  if (v9)
  {
    *((unsigned char *)result + 8) = a3;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(_DWORD *)uint64_t result = a4;
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedEnum(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 471);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: extension != NULL: ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return *(unsigned int *)(*(void *)(*(void *)v4 + 8) + 4 * a3);
}

void sub_100103CF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ExtensionSet::AddEnum(google::protobuf::internal::ExtensionSet *this, int a2, char a3, char a4, int a5, const google::protobuf::FieldDescriptor *a6)
{
  char v11 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint8x8_t v12 = v11;
  void v11[2] = (uint64_t *)a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 1sub_1000333D0((uint64_t *)this + 1) = a4;
    uint64_t v14 = (unsigned int *)sub_10010905C(*(google::protobuf::Arena **)this);
    uint64_t *v12 = (uint64_t *)v14;
  }
  else
  {
    uint64_t v14 = (unsigned int *)*v11;
  }
  uint64_t v15 = *v14;
  if (v15 == v14[1])
  {
    unsigned int v16 = v15 + 1;
    google::protobuf::RepeatedField<int>::Reserve(v14, v15 + 1);
    *(_DWORD *)(*((void *)v14 + 1) + 4 * v1sub_1000FA614((void *)this + 5) = a5;
  }
  else
  {
    *(_DWORD *)(*((void *)v14 + 1) + 4 * v1sub_1000FA614((void *)this + 5) = a5;
    unsigned int v16 = v15 + 1;
  }
  unsigned int *v14 = v16;
}

uint64_t google::protobuf::internal::ExtensionSet::GetString(google::protobuf::internal::ExtensionSet *a1, int a2, uint64_t a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(a1, a2);
  if (v4 && (v4[10] & 1) == 0) {
    return *(void *)v4;
  }
  return a3;
}

uint64_t *google::protobuf::internal::ExtensionSet::MutableString(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::FieldDescriptor *a4)
{
  char v7 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  char v8 = v7;
  void v7[2] = (uint64_t *)a4;
  if (v9)
  {
    *((unsigned char *)v7 + 8) = a3;
    *((unsigned char *)v7 + 9) = 0;
    uint64_t result = sub_1000BBB38(*(google::protobuf::Arena **)this);
    *char v8 = result;
  }
  else
  {
    uint64_t result = *v7;
  }
  *((unsigned char *)v8 + 10) &= 0xF0u;
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedString(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 533);
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: extension != NULL: ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(*(void *)v4 + 16) + 8 * a3 + 8);
}

void sub_100103EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::ExtensionSet::AddString(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::FieldDescriptor *a4)
{
  char v7 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  char v8 = v7;
  void v7[2] = (uint64_t *)a4;
  if (v9)
  {
    *((unsigned char *)v7 + 8) = a3;
    *((unsigned char *)v7 + 9) = 1;
    *((unsigned char *)v7 + 1sub_1000333D0((uint64_t *)this + 1) = 0;
    int v10 = sub_100109874(*(google::protobuf::Arena **)this);
    *char v8 = v10;
  }
  else
  {
    int v10 = *v7;
  }
  char v11 = (int *)v10[2];
  if (!v11)
  {
    int v13 = *((_DWORD *)v10 + 3);
LABEL_9:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)v10, v13 + 1);
    char v11 = (int *)v10[2];
    int v13 = *v11;
    goto LABEL_10;
  }
  uint64_t v12 = *((int *)v10 + 2);
  int v13 = *v11;
  if ((int)v12 < *v11)
  {
    *((_DWORD *)v10 + sub_1000FACE4((void *)this + 2) = v12 + 1;
    return *(void **)&v11[2 * v12 + 2];
  }
  if (v13 == *((_DWORD *)v10 + 3)) {
    goto LABEL_9;
  }
LABEL_10:
  int *v11 = v13 + 1;
  uint64_t result = sub_1000BBB38((google::protobuf::Arena *)*v10);
  uint64_t v15 = v10[2];
  uint64_t v16 = *((int *)v10 + 2);
  *((_DWORD *)v10 + sub_1000FACE4((void *)this + 2) = v16 + 1;
  *(void *)(v15 + 8 * v16 + 8) = result;
  return result;
}

uint64_t *google::protobuf::internal::ExtensionSet::MutableMessage(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::MessageLite *a4, const google::protobuf::FieldDescriptor *a5)
{
  char v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  int v10 = v9;
  std::string v9[2] = (uint64_t *)a5;
  if (v11)
  {
    *((unsigned char *)v9 + 8) = a3;
    *((unsigned char *)v9 + 9) = 0;
    *((unsigned char *)v9 + 10) &= 0xFu;
    uint64_t result = (uint64_t *)(*(uint64_t (**)(const google::protobuf::MessageLite *, void))(*(void *)a4 + 32))(a4, *(void *)this);
    uint64_t *v10 = result;
    *((unsigned char *)v10 + 10) &= 0xF0u;
  }
  else
  {
    char v13 = *((unsigned char *)v9 + 10);
    *((unsigned char *)v9 + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v13 & 0xF0;
    uint64_t result = *v9;
    if ((v13 & 0x10) != 0)
    {
      uint64_t v14 = *(uint64_t (**)(void))(*result + 32);
      return (uint64_t *)v14();
    }
  }
  return result;
}

unsigned char *google::protobuf::internal::ExtensionSet::UnsafeArenaSetAllocatedMessage(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::FieldDescriptor *a4, google::protobuf::MessageLite *a5)
{
  if (a5)
  {
    uint64_t result = google::protobuf::internal::ExtensionSet::Insert(this, a2);
    int v10 = result;
    *((void *)result + sub_1000FACE4((void *)this + 2) = a4;
    if (v11)
    {
      result[8] = a3;
      result[9] = 0;
      result[10] &= 0xFu;
    }
    else
    {
      if ((result[10] & 0x10) != 0)
      {
        uint64_t result = (unsigned char *)(*(uint64_t (**)(void))(**(void **)result + 48))();
        goto LABEL_5;
      }
      if (!*(void *)this)
      {
        uint64_t result = *(unsigned char **)result;
        if (*(void *)v10) {
          uint64_t result = (unsigned char *)(*(uint64_t (**)(unsigned char *))(*(void *)result + 8))(result);
        }
      }
    }
    *(void *)int v10 = a5;
LABEL_5:
    v10[10] &= 0xF0u;
    return result;
  }
  uint64_t result = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (result)
  {
    return google::protobuf::internal::ExtensionSet::Extension::Clear(result);
  }
  return result;
}

char *google::protobuf::internal::ExtensionSet::Erase(google::protobuf::internal::ExtensionSet *this, int a2)
{
  int v12 = a2;
  unsigned int v3 = *((unsigned __int16 *)this + 4);
  uint64_t result = (char *)*((void *)this + 2);
  if (v3 >= 0x101) {
    return (char *)sub_10010A29C((uint64_t)result, &v12);
  }
  uint64_t v5 = *((unsigned __int16 *)this + 5);
  if (*((_WORD *)this + 5))
  {
    unint64_t v6 = &result[32 * v5];
    unint64_t v7 = *((unsigned __int16 *)this + 5);
    do
    {
      unint64_t v8 = v7 >> 1;
      char v9 = (int *)&result[32 * (v7 >> 1)];
      int v11 = *v9;
      int v10 = (char *)(v9 + 8);
      v7 += ~(v7 >> 1);
      if (v11 < a2) {
        uint64_t result = v10;
      }
      else {
        unint64_t v7 = v8;
      }
    }
    while (v7);
    if (result != v6 && *(_DWORD *)result == a2)
    {
      if (v6 != result + 32)
      {
        uint64_t result = (char *)memmove(result, result + 32, v6 - (result + 32));
        LOWORD(vsub_1000FA614((void *)this + 5) = *((_WORD *)this + 5);
      }
      *((_WORD *)this + sub_1000FA614((void *)this + 5) = v5 - 1;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::GetRepeatedMessage(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 744);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: extension != NULL: ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(*(void *)v4 + 16) + 8 * a3 + 8);
}

void sub_100104348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::MutableRepeatedMessage(google::protobuf::internal::ExtensionSet *this, int a2, int a3)
{
  uint64_t v4 = google::protobuf::internal::ExtensionSet::FindOrNull(this, a2);
  if (!v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 751);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: extension != NULL: ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "Index out-of-bounds (field is empty).");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  return *(void *)(*(void *)(*(void *)v4 + 16) + 8 * a3 + 8);
}

void sub_1001043EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::AddMessage(google::protobuf::internal::ExtensionSet *this, int a2, char a3, const google::protobuf::MessageLite *a4, const google::protobuf::FieldDescriptor *a5)
{
  char v9 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  int v10 = (unsigned int **)v9;
  std::string v9[2] = (uint64_t *)a5;
  if (v11)
  {
    *((unsigned char *)v9 + 8) = a3;
    *((unsigned char *)v9 + 9) = 1;
    int v12 = (unsigned int *)sub_1001099A4(*(google::protobuf::Arena **)this);
    char *v10 = v12;
  }
  else
  {
    int v12 = (unsigned int *)*v9;
  }
  char v13 = (_DWORD *)*((void *)v12 + 2);
  if (!v13 || (v14 = (int)v12[2], (int)v14 >= *v13) || (v12[2] = v14 + 1, (uint64_t v15 = *(void *)&v13[2 * v14 + 2]) == 0))
  {
    uint64_t v15 = (*(uint64_t (**)(const google::protobuf::MessageLite *, void))(*(void *)a4 + 32))(a4, *(void *)this);
    sub_100109ABC(*v10, v15);
  }
  return v15;
}

unsigned char *google::protobuf::internal::ExtensionSet::Clear(unsigned char *this)
{
  uint64_t v1 = (void *)*((void *)this + 2);
  if (*((unsigned __int16 *)this + 4) >= 0x101u)
  {
    unint64_t v6 = (void *)*v1;
    uint64_t v4 = v1 + 1;
    uint64_t v5 = v6;
    if (v6 != v4)
    {
      do
      {
        this = google::protobuf::internal::ExtensionSet::Extension::Clear((unsigned char *)v5 + 40);
        unint64_t v7 = (void *)v5[1];
        if (v7)
        {
          do
          {
            char v8 = v7;
            unint64_t v7 = (void *)*v7;
          }
          while (v7);
        }
        else
        {
          do
          {
            char v8 = (void *)v5[2];
            BOOL v9 = *v8 == (void)v5;
            uint64_t v5 = v8;
          }
          while (!v9);
        }
        uint64_t v5 = v8;
      }
      while (v8 != v4);
    }
  }
  else if (*((_WORD *)this + 5))
  {
    uint64_t v2 = 32 * *((unsigned __int16 *)this + 5);
    unsigned int v3 = v1 + 1;
    do
    {
      this = google::protobuf::internal::ExtensionSet::Extension::Clear(v3);
      v3 += 32;
      v2 -= 32;
    }
    while (v2);
  }
  return this;
}

void google::protobuf::internal::ExtensionSet::MergeFrom(google::protobuf::internal::ExtensionSet *this, const google::protobuf::internal::ExtensionSet *a2)
{
  if (*((unsigned __int16 *)this + 4) <= 0x100u)
  {
    unsigned int v4 = *((unsigned __int16 *)a2 + 4);
    uint64_t v5 = (char *)*((void *)this + 2);
    uint64_t v6 = *((unsigned __int16 *)this + 5);
    unint64_t v7 = &v5[32 * v6];
    uint64_t v8 = *((void *)a2 + 2);
    if (v4 > 0x100)
    {
      unint64_t v14 = sub_1001047EC(v5, v7, *(void **)v8, (void *)(v8 + 8));
    }
    else
    {
      uint64_t v9 = *((unsigned __int16 *)a2 + 5);
      uint64_t v10 = v8 + 32 * v9;
      BOOL v12 = v6 == 0;
      uint64_t v11 = 0;
      BOOL v12 = v12 || v9 == 0;
      if (!v12)
      {
        do
        {
          if (*(_DWORD *)v5 == *(_DWORD *)v8) {
            char v13 = v5 + 32;
          }
          else {
            char v13 = v5;
          }
          if (*(_DWORD *)v5 < *(_DWORD *)v8)
          {
            v5 += 32;
          }
          else
          {
            v8 += 32;
            uint64_t v5 = v13;
          }
          ++v11;
        }
        while (v5 != v7 && v8 != v10);
      }
      unint64_t v14 = v11 + ((v10 - v8) >> 5) + ((v7 - v5) >> 5);
    }
    google::protobuf::internal::ExtensionSet::GrowCapacity((unsigned __int16 *)this, v14);
  }
  uint64_t v15 = *((void *)a2 + 2);
  if (*((unsigned __int16 *)a2 + 4) >= 0x101u)
  {
    int v19 = *(void **)v15;
    sub_100109BF0(v19, (void *)(v15 + 8), this);
  }
  else if (*((_WORD *)a2 + 5))
  {
    uint64_t v16 = v15 + 32 * *((unsigned __int16 *)a2 + 5);
    do
    {
      BOOL v17 = (int **)(v15 + 8);
      int v18 = *(_DWORD *)v15;
      v15 += 32;
      google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom(this, v18, v17);
    }
    while (v15 != v16);
  }
}

unsigned __int16 *google::protobuf::internal::ExtensionSet::GrowCapacity(unsigned __int16 *this, unint64_t a2)
{
  unint64_t v2 = this[4];
  if (v2 <= 0x100 && v2 < a2)
  {
    unsigned int v4 = this;
    do
    {
      if ((_WORD)v2) {
        LOWORD(vsub_1000FACE4((void *)this + 2) = 4 * v2;
      }
      else {
        LOWORD(vsub_1000FACE4((void *)this + 2) = 1;
      }
    }
    while ((unsigned __int16)v2 < a2);
    uint64_t v5 = (char *)*((void *)this + 2);
    uint64_t v6 = this[5];
    unint64_t v7 = *(google::protobuf::Arena **)this;
    if ((unsigned __int16)v2 < 0x101u)
    {
      this = (unsigned __int16 *)sub_1001026F0(v7, (unsigned __int16)v2);
      uint64_t v8 = (uint64_t **)this;
      if (v6) {
        this = (unsigned __int16 *)memmove(this, v5, 32 * v6);
      }
    }
    else
    {
      this = (unsigned __int16 *)sub_100109F60(v7);
      uint64_t v8 = (uint64_t **)this;
      if (v6)
      {
        uint64_t v9 = &v5[32 * v6];
        uint64_t v10 = *(uint64_t **)this;
        uint64_t v11 = v5;
        do
        {
          int v14 = *(_DWORD *)v11;
          long long v12 = *(_OWORD *)(v11 + 8);
          uint64_t v16 = *((void *)v11 + 3);
          long long v15 = v12;
          this = (unsigned __int16 *)sub_10010A06C(v8, v10, &v14, &v14);
          uint64_t v10 = (uint64_t *)this;
          v11 += 32;
        }
        while (v11 != v9);
      }
    }
    if (*(void *)v4) {
      BOOL v13 = 1;
    }
    else {
      BOOL v13 = v5 == 0;
    }
    if (!v13) {
      operator delete[]();
    }
    v4[4] = v2;
    *((void *)v4 + sub_1000FACE4((void *)this + 2) = v8;
    if ((unsigned __int16)v2 >= 0x101u) {
      v4[5] = 0;
    }
  }
  return this;
}

uint64_t sub_1001047EC(char *a1, char *a2, void *a3, void *a4)
{
  uint64_t v4 = 0;
  if (a1 != a2 && a3 != a4)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *((_DWORD *)a3 + 8);
      if (*(_DWORD *)a1 >= v5)
      {
        if (*(_DWORD *)a1 == v5)
        {
          a1 += 32;
          uint64_t v6 = (void *)a3[1];
          if (v6)
          {
            do
            {
              a3 = v6;
              uint64_t v6 = (void *)*v6;
            }
            while (v6);
          }
          else
          {
            do
            {
              unint64_t v7 = a3;
              a3 = (void *)a3[2];
            }
            while ((void *)*a3 != v7);
          }
        }
        else
        {
          uint64_t v8 = (void *)a3[1];
          if (v8)
          {
            do
            {
              a3 = v8;
              uint64_t v8 = (void *)*v8;
            }
            while (v8);
          }
          else
          {
            do
            {
              uint64_t v9 = a3;
              a3 = (void *)a3[2];
            }
            while ((void *)*a3 != v9);
          }
        }
      }
      else
      {
        a1 += 32;
      }
      ++v4;
    }
    while (a1 != a2 && a3 != a4);
  }
  if (a3 == a4)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = (void *)a3[1];
      if (v11)
      {
        do
        {
          long long v12 = v11;
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          long long v12 = (void *)a3[2];
          BOOL v13 = *v12 == (void)a3;
          a3 = v12;
        }
        while (!v13);
      }
      ++v10;
      a3 = v12;
    }
    while (v12 != a4);
  }
  return v4 + ((a2 - a1) >> 5) + v10;
}

void google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom(google::protobuf::internal::ExtensionSet *this, int a2, int **a3)
{
  if (!*((unsigned char *)a3 + 9))
  {
    if (*((unsigned char *)a3 + 10)) {
      return;
    }
    char v14 = *((unsigned char *)a3 + 8);
    switch(v14)
    {
      case 1:
        uint64_t v55 = (uint64_t *)*a3;
        uint64_t v56 = (uint64_t *)a3[2];
        unint64_t v57 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v57[2] = v56;
        if (v58)
        {
          *((unsigned char *)v57 + 8) = v14;
          *((unsigned char *)v57 + 9) = 0;
        }
        *((unsigned char *)v57 + 10) &= 0xF0u;
        *unint64_t v57 = v55;
        return;
      case 2:
        int v59 = *(_DWORD *)a3;
        BOOL v60 = (uint64_t *)a3[2];
        uint64_t v61 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v61[2] = v60;
        if (v62)
        {
          *((unsigned char *)v61 + 8) = v14;
          *((unsigned char *)v61 + 9) = 0;
        }
        *((unsigned char *)v61 + 10) &= 0xF0u;
        *(_DWORD *)uint64_t v61 = v59;
        return;
      case 3:
      case 4:
      case 6:
      case 16:
      case 18:
        unsigned int v51 = (uint64_t *)*a3;
        long long v52 = (uint64_t *)a3[2];
        long long v53 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v53[2] = v52;
        if (v54)
        {
          *((unsigned char *)v53 + 8) = v14;
          *((unsigned char *)v53 + 9) = 0;
        }
        *((unsigned char *)v53 + 10) &= 0xF0u;
        *long long v53 = v51;
        return;
      case 5:
      case 7:
      case 13:
      case 14:
      case 15:
      case 17:
        int v15 = *(_DWORD *)a3;
        uint64_t v16 = (uint64_t *)a3[2];
        BOOL v17 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        void v17[2] = v16;
        if (v18)
        {
          *((unsigned char *)v17 + 8) = v14;
          *((unsigned char *)v17 + 9) = 0;
        }
        *((unsigned char *)v17 + 10) &= 0xF0u;
        *(_DWORD *)BOOL v17 = v15;
        return;
      case 8:
        char v63 = *(unsigned char *)a3;
        BOOL v64 = (uint64_t *)a3[2];
        unint64_t v65 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        v65[2] = v64;
        if (v66)
        {
          *((unsigned char *)v65 + 8) = v14;
          *((unsigned char *)v65 + 9) = 0;
        }
        *((unsigned char *)v65 + 10) &= 0xF0u;
        *(unsigned char *)unint64_t v65 = v63;
        return;
      case 9:
      case 12:
        uint64_t v73 = (long long *)*a3;
        if (*((char *)*a3 + 23) < 0)
        {
          sub_1000BB834(__p, *(void **)v73, *((void *)v73 + 1));
        }
        else
        {
          long long v74 = *v73;
          uint64_t v80 = *((void *)v73 + 2);
          *(_OWORD *)std::string __p = v74;
        }
        sub_100105108(this, a2, v14, (__n128 *)__p, (google::protobuf::FieldDescriptor *)a3[2]);
        if (SHIBYTE(v80) < 0) {
          operator delete(__p[0]);
        }
        return;
      case 10:
      case 11:
        uint64_t v67 = (uint64_t *)a3[2];
        unsigned int v68 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
        long long v69 = v68;
        int v68[2] = v67;
        if (v70)
        {
          *((unsigned char *)v68 + 8) = *((unsigned char *)a3 + 8);
          *((unsigned char *)v68 + 1sub_1000333D0((uint64_t *)this + 1) = *((unsigned char *)a3 + 11);
          *((unsigned char *)v68 + 9) = 0;
          char v71 = *((unsigned char *)v68 + 10) & 0xF;
          if ((*((unsigned char *)a3 + 10) & 0x10) != 0)
          {
            *((unsigned char *)v68 + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v71 | 0x10;
            uint64_t v78 = (*(uint64_t (**)(int *, void))(*(void *)*a3 + 16))(*a3, *(void *)this);
            std::string *v69 = (uint64_t *)v78;
            (*(void (**)(uint64_t, int *))(*(void *)v78 + 104))(v78, *a3);
            goto LABEL_87;
          }
          *((unsigned char *)v68 + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v71;
          uint64_t v72 = (*(uint64_t (**)(int *, void))(*(void *)*a3 + 32))(*a3, *(void *)this);
          std::string *v69 = (uint64_t *)v72;
LABEL_78:
          (*(void (**)(uint64_t, int *))(*(void *)v72 + 64))(v72, *a3);
LABEL_87:
          *((unsigned char *)v69 + 10) &= 0xF0u;
          return;
        }
        uint64_t v75 = *v68;
        uint64_t v76 = (uint64_t)*a3;
        if ((*((unsigned char *)a3 + 10) & 0x10) != 0)
        {
          if ((*((unsigned char *)v68 + 10) & 0x10) != 0)
          {
            (*(void (**)(uint64_t *, uint64_t))(*v75 + 104))(*v68, v76);
            goto LABEL_87;
          }
          uint64_t v76 = (*(uint64_t (**)(int *, uint64_t *))(*(void *)v76 + 24))(*a3, *v68);
          uint64_t v77 = *v75;
        }
        else
        {
          uint64_t v77 = *v75;
          if ((*((unsigned char *)v68 + 10) & 0x10) != 0)
          {
            uint64_t v72 = (*(uint64_t (**)(uint64_t *, uint64_t))(v77 + 32))(*v68, v76);
            goto LABEL_78;
          }
        }
        (*(void (**)(uint64_t *, uint64_t))(v77 + 64))(v75, v76);
        goto LABEL_87;
      default:
        return;
    }
  }
  uint64_t v6 = (uint64_t *)a3[2];
  unint64_t v7 = google::protobuf::internal::ExtensionSet::Insert(this, a2);
  uint64_t v9 = (unsigned int **)v7;
  void v7[2] = v6;
  if (v8)
  {
    *((unsigned char *)v7 + 8) = *((unsigned char *)a3 + 8);
    *((unsigned char *)v7 + 1sub_1000333D0((uint64_t *)this + 1) = *((unsigned char *)a3 + 11);
    *((unsigned char *)v7 + 9) = 1;
  }
  switch(*((unsigned char *)a3 + 8))
  {
    case 1:
      if (v8) {
        void *v7 = sub_100109624(*(google::protobuf::Arena **)this);
      }
      int v19 = *a3;
      int v25 = **a3;
      if (v25)
      {
        BOOL v21 = *v9;
        uint64_t v22 = (int)**v9;
        google::protobuf::RepeatedField<double>::Reserve(v21, v22 + v25);
        goto LABEL_30;
      }
      break;
    case 2:
      if (v8) {
        void *v7 = sub_1001094FC(*(google::protobuf::Arena **)this);
      }
      uint64_t v10 = *a3;
      int v30 = **a3;
      if (v30)
      {
        long long v12 = *v9;
        uint64_t v13 = (int)**v9;
        google::protobuf::RepeatedField<float>::Reserve(v12, v13 + v30);
        goto LABEL_35;
      }
      break;
    case 3:
    case 0x10:
    case 0x12:
      if (v8) {
        void *v7 = sub_100109184(*(google::protobuf::Arena **)this);
      }
      int v19 = *a3;
      int v20 = **a3;
      if (v20)
      {
        BOOL v21 = *v9;
        uint64_t v22 = (int)**v9;
        google::protobuf::RepeatedField<long long>::Reserve(v21, v22 + v20);
        goto LABEL_30;
      }
      break;
    case 4:
    case 6:
      if (v8) {
        void *v7 = sub_1001093D4(*(google::protobuf::Arena **)this);
      }
      int v19 = *a3;
      int v24 = **a3;
      if (v24)
      {
        BOOL v21 = *v9;
        uint64_t v22 = (int)**v9;
        google::protobuf::RepeatedField<unsigned long long>::Reserve(v21, v22 + v24);
LABEL_30:
        uint64_t v26 = *((void *)v21 + 1);
        *v21 += *v19;
        uint64_t v27 = (void *)(v26 + 8 * v22);
        int v28 = (const void *)*((void *)v19 + 1);
        size_t v29 = 8 * *v19;
        goto LABEL_40;
      }
      break;
    case 5:
    case 0xE:
    case 0xF:
    case 0x11:
      if (v8) {
        void *v7 = sub_10010905C(*(google::protobuf::Arena **)this);
      }
      uint64_t v10 = *a3;
      int v11 = **a3;
      if (v11)
      {
        long long v12 = *v9;
        uint64_t v13 = (int)**v9;
        google::protobuf::RepeatedField<int>::Reserve(v12, v13 + v11);
        goto LABEL_35;
      }
      break;
    case 7:
    case 0xD:
      if (v8) {
        void *v7 = sub_1001092AC(*(google::protobuf::Arena **)this);
      }
      uint64_t v10 = *a3;
      int v23 = **a3;
      if (v23)
      {
        long long v12 = *v9;
        uint64_t v13 = (int)**v9;
        google::protobuf::RepeatedField<unsigned int>::Reserve(v12, v13 + v23);
LABEL_35:
        uint64_t v31 = *((void *)v12 + 1);
        *v12 += *v10;
        uint64_t v27 = (void *)(v31 + 4 * v13);
        int v28 = (const void *)*((void *)v10 + 1);
        size_t v29 = 4 * *v10;
        goto LABEL_40;
      }
      break;
    case 8:
      if (v8) {
        void *v7 = sub_10010974C(*(google::protobuf::Arena **)this);
      }
      uint8x8_t v32 = *a3;
      int v33 = **a3;
      if (v33)
      {
        int64_t v34 = *v9;
        uint64_t v35 = (int)**v9;
        google::protobuf::RepeatedField<BOOL>::Reserve(v34, v35 + v33);
        uint64_t v36 = *((void *)v34 + 1);
        *v34 += *v32;
        uint64_t v27 = (void *)(v36 + v35);
        int v28 = (const void *)*((void *)v32 + 1);
        size_t v29 = *v32;
LABEL_40:
        memcpy(v27, v28, v29);
      }
      break;
    case 9:
    case 0xC:
      if (v8) {
        void *v7 = sub_100109874(*(google::protobuf::Arena **)this);
      }
      BOOL v37 = *a3;
      unsigned int v38 = (*a3)[2];
      if (v38)
      {
        char v39 = *v9;
        uint64_t v40 = (const std::string **)(*((void *)v37 + 2) + 8);
        unint64_t v41 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)v39, v38);
        sub_1000F9F28((std::string *)v39, (std::string **)v41, v40, v38, **((_DWORD **)v39 + 2) - v39[2]);
        signed int v42 = v39[2] + v38;
        v39[2] = v42;
        uint64_t v43 = (signed int *)*((void *)v39 + 2);
        if (*v43 < v42) {
          *uint64_t v43 = v42;
        }
      }
      break;
    case 0xA:
    case 0xB:
      if (v8) {
        void *v7 = sub_1001099A4(*(google::protobuf::Arena **)this);
      }
      uint64_t v44 = *a3;
      if ((*a3)[2] >= 1)
      {
        uint64_t v45 = 0;
        do
        {
          uint64_t v46 = *(void *)(*((void *)v44 + 2) + 8 * v45 + 8);
          char v47 = *v9;
          BOOL v48 = (_DWORD *)*((void *)*v9 + 2);
          if (!v48
            || (uint64_t v49 = (int)v47[2], (int)v49 >= *v48)
            || (v47[2] = v49 + 1, (uint64_t v50 = *(void *)&v48[2 * v49 + 2]) == 0))
          {
            uint64_t v50 = (*(uint64_t (**)(uint64_t, void))(*(void *)v46 + 32))(v46, *(void *)this);
            sub_100109ABC(*v9, v50);
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)v50 + 64))(v50, v46);
          ++v45;
        }
        while (v45 < v44[2]);
      }
      break;
    default:
      return;
  }
}

void sub_10010509C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_100105108(google::protobuf::internal::ExtensionSet *a1, int a2, char a3, __n128 *a4, google::protobuf::FieldDescriptor *a5)
{
  uint64_t v6 = google::protobuf::internal::ExtensionSet::MutableString(a1, a2, a3, a5);
  unint64_t v7 = (__n128 *)v6;
  if (*((char *)v6 + 23) < 0) {
    operator delete((void *)*v6);
  }
  __n128 result = *a4;
  v7[1].n128_u64[0] = a4[1].n128_u64[0];
  __n128 *v7 = result;
  a4[1].n128_u8[7] = 0;
  a4->n128_u8[0] = 0;
  return result;
}

void google::protobuf::internal::ExtensionSet::Swap(google::protobuf::internal::ExtensionSet *this, google::protobuf::internal::ExtensionSet *a2)
{
  if (*(void *)this == *(void *)a2)
  {
    __int16 v4 = *((_WORD *)this + 4);
    *((_WORD *)this + 4) = *((_WORD *)a2 + 4);
    *((_WORD *)a2 + 4) = v4;
    __int16 v5 = *((_WORD *)this + 5);
    *((_WORD *)this + sub_1000FA614((void *)this + 5) = *((_WORD *)a2 + 5);
    *((_WORD *)a2 + sub_1000FA614((void *)this + 5) = v5;
    uint64_t v6 = *((void *)this + 2);
    *((void *)this + sub_1000FACE4((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + sub_1000FACE4((void *)this + 2) = v6;
  }
  else
  {
    uint64_t v7 = 0;
    int v8 = 0;
    uint64_t v9 = 0;
    google::protobuf::internal::ExtensionSet::MergeFrom((google::protobuf::internal::ExtensionSet *)&v7, a2);
    google::protobuf::internal::ExtensionSet::Clear(a2);
    google::protobuf::internal::ExtensionSet::MergeFrom(a2, this);
    google::protobuf::internal::ExtensionSet::Clear(this);
    google::protobuf::internal::ExtensionSet::MergeFrom(this, (const google::protobuf::internal::ExtensionSet *)&v7);
    google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::internal::ExtensionSet *)&v7);
  }
}

void sub_100105214(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::ExtensionSet::~ExtensionSet((google::protobuf::internal::ExtensionSet *)va);
  _Unwind_Resume(a1);
}

uint64_t **google::protobuf::internal::ExtensionSet::Insert(google::protobuf::internal::ExtensionSet *this, int a2)
{
  unsigned int v3 = *((unsigned __int16 *)this + 4);
  __int16 v4 = (uint64_t **)*((void *)this + 2);
  if (v3 >= 0x101)
  {
    *((void *)&v14 + sub_1000333D0((uint64_t *)this + 1) = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    LODWORD(v14) = a2;
    return sub_100109EA4(v4, (int *)&v14, &v14) + 5;
  }
  uint64_t v6 = *((unsigned __int16 *)this + 5);
  uint64_t v7 = &v4[4 * v6];
  if (!*((_WORD *)this + 5))
  {
    if (!*((_WORD *)this + 4)) {
      goto LABEL_18;
    }
    LOWORD(vsub_1000FA614((void *)this + 6) = 0;
LABEL_17:
    *((_WORD *)this + sub_1000FA614((void *)this + 5) = v6 + 1;
    *(_DWORD *)uint64_t v7 = a2;
    v7[1] = 0;
    __n128 result = v7 + 1;
    void v7[2] = 0;
    v7[3] = 0;
    return result;
  }
  unint64_t v8 = *((unsigned __int16 *)this + 5);
  do
  {
    unint64_t v9 = v8 >> 1;
    uint64_t v10 = &v4[4 * (v8 >> 1)];
    int v12 = *(_DWORD *)v10;
    int v11 = v10 + 4;
    v8 += ~(v8 >> 1);
    if (v12 < a2) {
      __int16 v4 = v11;
    }
    else {
      unint64_t v8 = v9;
    }
  }
  while (v8);
  if (v4 != v7)
  {
    if (*(_DWORD *)v4 == a2) {
      return v4 + 1;
    }
    if (v6 < v3)
    {
      memmove(v4 + 4, v4, (char *)v7 - (char *)v4);
      LOWORD(vsub_1000FA614((void *)this + 6) = *((_WORD *)this + 5);
      uint64_t v7 = v4;
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  if (v6 < v3) {
    goto LABEL_17;
  }
LABEL_18:
  google::protobuf::internal::ExtensionSet::GrowCapacity((unsigned __int16 *)this, v6 + 1);
  return (uint64_t **)google::protobuf::internal::ExtensionSet::Insert(this, a2);
}

uint64_t google::protobuf::internal::ExtensionSet::IsInitialized(google::protobuf::internal::ExtensionSet *this)
{
  if (*((unsigned __int16 *)this + 4) < 0x101u)
  {
    if (*((_WORD *)this + 5))
    {
      uint64_t v2 = *((void *)this + 2);
      do
      {
        uint64_t result = google::protobuf::internal::ExtensionSet::Extension::IsInitialized((uint64_t **)(v2 + 8));
        if ((result & 1) == 0) {
          break;
        }
        v2 += 32;
      }
      while (v2 != *((void *)this + 2) + 32 * *((unsigned __int16 *)this + 5));
      return result;
    }
    return 1;
  }
  __int16 v4 = (void *)*((void *)this + 2);
  uint64_t v7 = (uint64_t **)*v4;
  __int16 v5 = (uint64_t **)(v4 + 1);
  uint64_t v6 = v7;
  if (v7 == v5) {
    return 1;
  }
  do
  {
    uint64_t result = google::protobuf::internal::ExtensionSet::Extension::IsInitialized(v6 + 5);
    if (!result) {
      break;
    }
    unint64_t v8 = v6[1];
    if (v8)
    {
      do
      {
        unint64_t v9 = (uint64_t **)v8;
        unint64_t v8 = (uint64_t *)*v8;
      }
      while (v8);
    }
    else
    {
      do
      {
        unint64_t v9 = (uint64_t **)v6[2];
        BOOL v10 = *v9 == (uint64_t *)v6;
        uint64_t v6 = v9;
      }
      while (!v10);
    }
    uint64_t v6 = v9;
  }
  while (v9 != v5);
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::Extension::IsInitialized(uint64_t **this)
{
  if (google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[*((unsigned __int8 *)this + 8)] != 10) {
    return 1;
  }
  if (*((unsigned char *)this + 9))
  {
    uint64_t v2 = *this;
    if (*((int *)*this + 2) >= 1)
    {
      uint64_t v3 = 0;
      while (1)
      {
        uint64_t v4 = *(void *)(v2[2] + 8 * v3 + 8);
        if (((*(uint64_t (**)(uint64_t))(*(void *)v4 + 48))(v4) & 1) == 0) {
          break;
        }
        ++v3;
        uint64_t v2 = *this;
        if (v3 >= *((int *)*this + 2)) {
          return 1;
        }
      }
      return 0;
    }
    return 1;
  }
  if (*((unsigned char *)this + 10)) {
    return 1;
  }
  uint64_t v5 = **this;
  if ((*((unsigned char *)this + 10) & 0x10) != 0) {
    return ((*(uint64_t (**)(void))(v5 + 72))() & 1) != 0;
  }
  uint64_t result = (*(uint64_t (**)(void))(v5 + 48))();
  if (result) {
    return 1;
  }
  return result;
}

uint64_t google::protobuf::internal::ExtensionSet::FindExtensionInfoFromFieldNumber(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, unsigned char *a6)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *))(*(void *)a4 + 16))(a4, a3, a5);
  if (result)
  {
    unsigned int v10 = google::protobuf::internal::WireFormatLite::kWireTypeForFieldType[*a5];
    *a6 = 0;
    if (a2 == 2 && a5[1])
    {
      if (v10 > 5)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 82);
        int v11 = google::protobuf::internal::LogMessage::operator<<(v13, "can't reach here.");
        google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v11->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
      }
      else
      {
        uint64_t result = 1;
        if (((1 << v10) & 0x1C) == 0)
        {
          *a6 = 1;
          return result;
        }
      }
    }
    return v10 == a2;
  }
  return result;
}

void sub_100105630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010564C(char **this)
{
  uint64_t v2 = *this;
  if (*this >= this[1])
  {
    TagFallbacint k = 0;
    goto LABEL_5;
  }
  TagFallbacint k = *v2;
  if (*v2 < 0)
  {
LABEL_5:
    TagFallbacint k = google::protobuf::io::CodedInputStream::ReadTagFallback((google::protobuf::io::CodedInputStream *)this, TagFallback);
    goto LABEL_6;
  }
  *this = v2 + 1;
LABEL_6:
  *((_DWORD *)this + 8) = TagFallback;
  return TagFallback;
}

unsigned __int8 *google::protobuf::internal::ExtensionSet::_InternalSerialize(google::protobuf::internal::ExtensionSet *this, int a2, signed int a3, unsigned __int8 *a4, google::protobuf::io::EpsCopyOutputStream *a5)
{
  uint64_t v7 = (signed int *)*((void *)this + 2);
  if (*((unsigned __int16 *)this + 4) >= 0x101u)
  {
    uint64_t v17 = *((void *)v7 + 1);
    uint64_t v16 = v7 + 2;
    uint64_t v15 = v17;
    if (v17)
    {
      char v18 = v16;
      do
      {
        int v19 = *(_DWORD *)(v15 + 32);
        BOOL v20 = v19 < a2;
        if (v19 >= a2) {
          BOOL v21 = (uint64_t *)v15;
        }
        else {
          BOOL v21 = (uint64_t *)(v15 + 8);
        }
        if (!v20) {
          char v18 = (void *)v15;
        }
        uint64_t v15 = *v21;
      }
      while (*v21);
      if (v18 != v16)
      {
        do
        {
          signed int v22 = *((_DWORD *)v18 + 8);
          if (v22 >= a3) {
            break;
          }
          a4 = google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray((int **)v18 + 5, v22, a4, a5);
          int v23 = (void *)v18[1];
          if (v23)
          {
            do
            {
              int v24 = v23;
              int v23 = (void *)*v23;
            }
            while (v23);
          }
          else
          {
            do
            {
              int v24 = (void *)v18[2];
              BOOL v25 = *v24 == (void)v18;
              char v18 = v24;
            }
            while (!v25);
          }
          char v18 = v24;
        }
        while (v24 != v16);
      }
    }
  }
  else
  {
    unint64_t v8 = *((unsigned __int16 *)this + 5);
    if (*((_WORD *)this + 5))
    {
      unint64_t v9 = &v7[8 * v8];
      do
      {
        unint64_t v10 = v8 >> 1;
        int v11 = &v7[8 * (v8 >> 1)];
        int v13 = *v11;
        char v12 = v11 + 8;
        v8 += ~(v8 >> 1);
        if (v13 < a2) {
          uint64_t v7 = v12;
        }
        else {
          unint64_t v8 = v10;
        }
      }
      while (v8);
      while (v7 != v9 && *v7 < a3)
      {
        a4 = google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray((int **)v7 + 1, *v7, a4, a5);
        v7 += 8;
      }
    }
  }
  return a4;
}

unsigned __int8 *google::protobuf::internal::ExtensionSet::Extension::InternalSerializeFieldWithCachedSizesToArray(int **this, unsigned int a2, unsigned __int8 *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = a3;
  if (*((unsigned char *)this + 9))
  {
    if (*((unsigned char *)this + 11))
    {
      if (*((_DWORD *)this + 3))
      {
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        unsigned int v8 = (8 * a2) | 2;
        if (v8 > 0x7F)
        {
          unsigned __int8 *v5 = (8 * a2) | 0x82;
          unsigned int v23 = (8 * a2) >> 7;
          if (v8 >> 14)
          {
            unint64_t v9 = v5 + 2;
            do
            {
              *(v9 - sub_1000333D0((uint64_t *)this + 1) = v23 | 0x80;
              unsigned int v24 = v23 >> 7;
              ++v9;
              unsigned int v25 = v23 >> 14;
              v23 >>= 7;
            }
            while (v25);
            *(v9 - sub_1000333D0((uint64_t *)this + 1) = v24;
          }
          else
          {
            v5[1] = v23;
            unint64_t v9 = v5 + 2;
          }
        }
        else
        {
          unsigned __int8 *v5 = v8;
          unint64_t v9 = v5 + 1;
        }
        unint64_t v26 = *((int *)this + 3);
        if (v26 > 0x7F)
        {
          *unint64_t v9 = v26 | 0x80;
          unint64_t v27 = v26 >> 7;
          if (v26 >> 14)
          {
            uint64_t v5 = v9 + 2;
            do
            {
              *(v5 - sub_1000333D0((uint64_t *)this + 1) = v27 | 0x80;
              unint64_t v28 = v27 >> 7;
              ++v5;
              unint64_t v29 = v27 >> 14;
              v27 >>= 7;
            }
            while (v29);
            *(v5 - sub_1000333D0((uint64_t *)this + 1) = v28;
          }
          else
          {
            v9[1] = v27;
            uint64_t v5 = v9 + 2;
          }
        }
        else
        {
          *unint64_t v9 = v26;
          uint64_t v5 = v9 + 1;
        }
        switch(*((unsigned char *)this + 8))
        {
          case 1:
            long long v52 = *this;
            if (**this >= 1)
            {
              uint64_t v53 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  long long v52 = *this;
                }
                *(void *)uint64_t v5 = *(void *)(*((void *)v52 + 1) + 8 * v53);
                v5 += 8;
                ++v53;
                long long v52 = *this;
              }
              while (v53 < **this);
            }
            break;
          case 2:
            char v54 = *this;
            if (**this >= 1)
            {
              uint64_t v55 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  char v54 = *this;
                }
                *(_DWORD *)uint64_t v5 = *(_DWORD *)(*((void *)v54 + 1) + 4 * v55);
                v5 += 4;
                ++v55;
                char v54 = *this;
              }
              while (v55 < **this);
            }
            break;
          case 3:
            uint64_t v56 = *this;
            if (**this >= 1)
            {
              uint64_t v57 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v56 = *this;
                }
                unint64_t v58 = *(void *)(*((void *)v56 + 1) + 8 * v57);
                if (v58 > 0x7F)
                {
                  unsigned __int8 *v5 = v58 | 0x80;
                  unint64_t v59 = v58 >> 7;
                  if (v58 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - sub_1000333D0((uint64_t *)this + 1) = v59 | 0x80;
                      unint64_t v60 = v59 >> 7;
                      ++v5;
                      unint64_t v61 = v59 >> 14;
                      v59 >>= 7;
                    }
                    while (v61);
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v60;
                  }
                  else
                  {
                    v5[1] = v59;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v58;
                }
                ++v57;
                uint64_t v56 = *this;
              }
              while (v57 < **this);
            }
            break;
          case 4:
            char v62 = *this;
            if (**this >= 1)
            {
              uint64_t v63 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  char v62 = *this;
                }
                unint64_t v64 = *(void *)(*((void *)v62 + 1) + 8 * v63);
                if (v64 > 0x7F)
                {
                  unsigned __int8 *v5 = v64 | 0x80;
                  unint64_t v65 = v64 >> 7;
                  if (v64 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - sub_1000333D0((uint64_t *)this + 1) = v65 | 0x80;
                      unint64_t v66 = v65 >> 7;
                      ++v5;
                      unint64_t v67 = v65 >> 14;
                      v65 >>= 7;
                    }
                    while (v67);
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v66;
                  }
                  else
                  {
                    v5[1] = v65;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v64;
                }
                ++v63;
                char v62 = *this;
              }
              while (v63 < **this);
            }
            break;
          case 5:
            uint64_t v31 = *this;
            if (**this >= 1)
            {
              uint64_t v32 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v31 = *this;
                }
                unint64_t v33 = *(int *)(*((void *)v31 + 1) + 4 * v32);
                if (v33 > 0x7F)
                {
                  unsigned __int8 *v5 = v33 | 0x80;
                  unint64_t v34 = v33 >> 7;
                  if (v33 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - sub_1000333D0((uint64_t *)this + 1) = v34 | 0x80;
                      unint64_t v35 = v34 >> 7;
                      ++v5;
                      unint64_t v36 = v34 >> 14;
                      v34 >>= 7;
                    }
                    while (v36);
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v35;
                  }
                  else
                  {
                    v5[1] = v34;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v33;
                }
                ++v32;
                uint64_t v31 = *this;
              }
              while (v32 < **this);
            }
            break;
          case 6:
            unsigned int v68 = *this;
            if (**this >= 1)
            {
              uint64_t v69 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  unsigned int v68 = *this;
                }
                *(void *)uint64_t v5 = *(void *)(*((void *)v68 + 1) + 8 * v69);
                v5 += 8;
                ++v69;
                unsigned int v68 = *this;
              }
              while (v69 < **this);
            }
            break;
          case 7:
            char v70 = *this;
            if (**this >= 1)
            {
              uint64_t v71 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  char v70 = *this;
                }
                *(_DWORD *)uint64_t v5 = *(_DWORD *)(*((void *)v70 + 1) + 4 * v71);
                v5 += 4;
                ++v71;
                char v70 = *this;
              }
              while (v71 < **this);
            }
            break;
          case 8:
            uint64_t v72 = *this;
            if (**this >= 1)
            {
              uint64_t v73 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v72 = *this;
                }
                *v5++ = *(unsigned char *)(*((void *)v72 + 1) + v73++);
                uint64_t v72 = *this;
              }
              while (v73 < **this);
            }
            break;
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
            google::protobuf::internal::LogMessage::LogMessage((uint64_t)v307, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 1966);
            int v30 = google::protobuf::internal::LogMessage::operator<<(v307, "Non-primitive types can't be packed.");
            google::protobuf::internal::LogFinisher::operator=((int)&v306, (const char **)&v30->__r_.__value_.__l.__data_);
            google::protobuf::internal::LogMessage::~LogMessage((void **)&v307[0].__r_.__value_.__l.__data_);
            break;
          case 0xD:
            BOOL v37 = *this;
            if (**this >= 1)
            {
              uint64_t v38 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  BOOL v37 = *this;
                }
                unsigned int v39 = *(_DWORD *)(*((void *)v37 + 1) + 4 * v38);
                if (v39 > 0x7F)
                {
                  unsigned __int8 *v5 = v39 | 0x80;
                  unsigned int v40 = v39 >> 7;
                  if (v39 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - sub_1000333D0((uint64_t *)this + 1) = v40 | 0x80;
                      unsigned int v41 = v40 >> 7;
                      ++v5;
                      unsigned int v42 = v40 >> 14;
                      v40 >>= 7;
                    }
                    while (v42);
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v41;
                  }
                  else
                  {
                    v5[1] = v40;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v39;
                }
                ++v38;
                BOOL v37 = *this;
              }
              while (v38 < **this);
            }
            break;
          case 0xE:
            long long v74 = *this;
            if (**this >= 1)
            {
              uint64_t v75 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  long long v74 = *this;
                }
                unint64_t v76 = *(int *)(*((void *)v74 + 1) + 4 * v75);
                if (v76 > 0x7F)
                {
                  unsigned __int8 *v5 = v76 | 0x80;
                  unint64_t v77 = v76 >> 7;
                  if (v76 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - sub_1000333D0((uint64_t *)this + 1) = v77 | 0x80;
                      unint64_t v78 = v77 >> 7;
                      ++v5;
                      unint64_t v79 = v77 >> 14;
                      v77 >>= 7;
                    }
                    while (v79);
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v78;
                  }
                  else
                  {
                    v5[1] = v77;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v76;
                }
                ++v75;
                long long v74 = *this;
              }
              while (v75 < **this);
            }
            break;
          case 0xF:
            uint64_t v43 = *this;
            if (**this >= 1)
            {
              uint64_t v44 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v43 = *this;
                }
                *(_DWORD *)uint64_t v5 = *(_DWORD *)(*((void *)v43 + 1) + 4 * v44);
                v5 += 4;
                ++v44;
                uint64_t v43 = *this;
              }
              while (v44 < **this);
            }
            break;
          case 0x10:
            uint64_t v80 = *this;
            if (**this >= 1)
            {
              uint64_t v81 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v80 = *this;
                }
                *(void *)uint64_t v5 = *(void *)(*((void *)v80 + 1) + 8 * v81);
                v5 += 8;
                ++v81;
                uint64_t v80 = *this;
              }
              while (v81 < **this);
            }
            break;
          case 0x11:
            uint64_t v45 = *this;
            if (**this >= 1)
            {
              uint64_t v46 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  uint64_t v45 = *this;
                }
                int v47 = *(_DWORD *)(*((void *)v45 + 1) + 4 * v46);
                unsigned int v48 = (2 * v47) ^ (v47 >> 31);
                if (v48 > 0x7F)
                {
                  unsigned __int8 *v5 = v48 | 0x80;
                  unsigned int v49 = v48 >> 7;
                  if (v48 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - sub_1000333D0((uint64_t *)this + 1) = v49 | 0x80;
                      unsigned int v50 = v49 >> 7;
                      ++v5;
                      unsigned int v51 = v49 >> 14;
                      v49 >>= 7;
                    }
                    while (v51);
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v50;
                  }
                  else
                  {
                    v5[1] = v49;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v48;
                }
                ++v46;
                uint64_t v45 = *this;
              }
              while (v46 < **this);
            }
            break;
          case 0x12:
            long long v82 = *this;
            if (**this >= 1)
            {
              uint64_t v83 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                  long long v82 = *this;
                }
                uint64_t v84 = *(void *)(*((void *)v82 + 1) + 8 * v83);
                unint64_t v85 = (2 * v84) ^ (v84 >> 63);
                if (v85 > 0x7F)
                {
                  unsigned __int8 *v5 = v85 | 0x80;
                  unint64_t v86 = v85 >> 7;
                  if (v85 >> 14)
                  {
                    v5 += 2;
                    do
                    {
                      *(v5 - sub_1000333D0((uint64_t *)this + 1) = v86 | 0x80;
                      unint64_t v87 = v86 >> 7;
                      ++v5;
                      unint64_t v88 = v86 >> 14;
                      v86 >>= 7;
                    }
                    while (v88);
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v87;
                  }
                  else
                  {
                    v5[1] = v86;
                    v5 += 2;
                  }
                }
                else
                {
                  *v5++ = v85;
                }
                ++v83;
                long long v82 = *this;
              }
              while (v83 < **this);
            }
            break;
          default:
            return v5;
        }
      }
    }
    else
    {
      switch(*((unsigned char *)this + 8))
      {
        case 1:
          char v12 = *this;
          if (**this >= 1)
          {
            uint64_t v13 = 0;
            unsigned int v14 = (8 * a2) | 1;
            unsigned __int8 v15 = (8 * a2) | 0x81;
            int v16 = (a2 >> 4) & 0x1FFFFFF;
            unsigned int v17 = (8 * a2) >> 7;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                char v12 = *this;
              }
              uint64_t v18 = *(void *)(*((void *)v12 + 1) + 8 * v13);
              if (v14 > 0x7F)
              {
                unsigned __int8 *v5 = v15;
                if (v14 >= 0x4000)
                {
                  int v19 = v5 + 2;
                  unsigned int v20 = v16;
                  do
                  {
                    *((unsigned char *)v19 - sub_1000333D0((uint64_t *)this + 1) = v20 | 0x80;
                    unsigned int v21 = v20 >> 7;
                    int v19 = (void *)((char *)v19 + 1);
                    unsigned int v22 = v20 >> 14;
                    v20 >>= 7;
                  }
                  while (v22);
                  *((unsigned char *)v19 - sub_1000333D0((uint64_t *)this + 1) = v21;
                }
                else
                {
                  v5[1] = v17;
                  int v19 = v5 + 2;
                }
              }
              else
              {
                unsigned __int8 *v5 = v14;
                int v19 = v5 + 1;
              }
              void *v19 = v18;
              uint64_t v5 = (unsigned __int8 *)(v19 + 1);
              ++v13;
              char v12 = *this;
            }
            while (v13 < **this);
          }
          break;
        case 2:
          long long v89 = *this;
          if (**this >= 1)
          {
            uint64_t v90 = 0;
            unsigned int v91 = (8 * a2) | 5;
            int v92 = (a2 >> 4) & 0x1FFFFFF;
            unsigned int v93 = (8 * a2) >> 7;
            unsigned __int8 v94 = (8 * a2) | 0x85;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                long long v89 = *this;
              }
              int v95 = *(_DWORD *)(*((void *)v89 + 1) + 4 * v90);
              if (v91 > 0x7F)
              {
                unsigned __int8 *v5 = v94;
                if (v91 >= 0x4000)
                {
                  std::string::size_type v96 = v5 + 2;
                  unsigned int v97 = v92;
                  do
                  {
                    *((unsigned char *)v96 - sub_1000333D0((uint64_t *)this + 1) = v97 | 0x80;
                    unsigned int v98 = v97 >> 7;
                    std::string::size_type v96 = (_DWORD *)((char *)v96 + 1);
                    unsigned int v99 = v97 >> 14;
                    v97 >>= 7;
                  }
                  while (v99);
                  *((unsigned char *)v96 - sub_1000333D0((uint64_t *)this + 1) = v98;
                }
                else
                {
                  v5[1] = v93;
                  std::string::size_type v96 = v5 + 2;
                }
              }
              else
              {
                unsigned __int8 *v5 = v91;
                std::string::size_type v96 = v5 + 1;
              }
              *std::string::size_type v96 = v95;
              uint64_t v5 = (unsigned __int8 *)(v96 + 1);
              ++v90;
              long long v89 = *this;
            }
            while (v90 < **this);
          }
          break;
        case 3:
          std::string v100 = *this;
          if (**this >= 1)
          {
            uint64_t v101 = 0;
            unsigned int v102 = 8 * a2;
            unsigned __int8 v103 = (8 * a2) | 0x80;
            int v104 = (a2 >> 4) & 0x1FFFFFF;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                std::string v100 = *this;
              }
              unint64_t v105 = *(void *)(*((void *)v100 + 1) + 8 * v101);
              if (v102 > 0x7F)
              {
                unsigned __int8 *v5 = v103;
                if (v102 >= 0x4000)
                {
                  std::string v106 = v5 + 2;
                  unsigned int v107 = v104;
                  do
                  {
                    *(v106 - sub_1000333D0((uint64_t *)this + 1) = v107 | 0x80;
                    unsigned int v108 = v107 >> 7;
                    ++v106;
                    unsigned int v109 = v107 >> 14;
                    v107 >>= 7;
                  }
                  while (v109);
                  *(v106 - sub_1000333D0((uint64_t *)this + 1) = v108;
                }
                else
                {
                  v5[1] = v102 >> 7;
                  std::string v106 = v5 + 2;
                }
              }
              else
              {
                std::string v106 = v5 + 1;
                unsigned __int8 *v5 = v102;
              }
              if (v105 > 0x7F)
              {
                unsigned char *v106 = v105 | 0x80;
                unint64_t v110 = v105 >> 7;
                if (v105 >> 14)
                {
                  uint64_t v5 = v106 + 2;
                  do
                  {
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v110 | 0x80;
                    unint64_t v111 = v110 >> 7;
                    ++v5;
                    unint64_t v112 = v110 >> 14;
                    v110 >>= 7;
                  }
                  while (v112);
                  *(v5 - sub_1000333D0((uint64_t *)this + 1) = v111;
                }
                else
                {
                  v106[1] = v110;
                  uint64_t v5 = v106 + 2;
                }
              }
              else
              {
                unsigned char *v106 = v105;
                uint64_t v5 = v106 + 1;
              }
              ++v101;
              std::string v100 = *this;
            }
            while (v101 < **this);
          }
          break;
        case 4:
          long long v113 = *this;
          if (**this >= 1)
          {
            uint64_t v114 = 0;
            unsigned int v115 = 8 * a2;
            unsigned __int8 v116 = (8 * a2) | 0x80;
            int v117 = (a2 >> 4) & 0x1FFFFFF;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                long long v113 = *this;
              }
              unint64_t v118 = *(void *)(*((void *)v113 + 1) + 8 * v114);
              if (v115 > 0x7F)
              {
                unsigned __int8 *v5 = v116;
                if (v115 >= 0x4000)
                {
                  long long v119 = v5 + 2;
                  unsigned int v120 = v117;
                  do
                  {
                    *(v119 - sub_1000333D0((uint64_t *)this + 1) = v120 | 0x80;
                    unsigned int v121 = v120 >> 7;
                    ++v119;
                    unsigned int v122 = v120 >> 14;
                    v120 >>= 7;
                  }
                  while (v122);
                  *(v119 - sub_1000333D0((uint64_t *)this + 1) = v121;
                }
                else
                {
                  v5[1] = v115 >> 7;
                  long long v119 = v5 + 2;
                }
              }
              else
              {
                long long v119 = v5 + 1;
                unsigned __int8 *v5 = v115;
              }
              if (v118 > 0x7F)
              {
                *long long v119 = v118 | 0x80;
                unint64_t v123 = v118 >> 7;
                if (v118 >> 14)
                {
                  uint64_t v5 = v119 + 2;
                  do
                  {
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v123 | 0x80;
                    unint64_t v124 = v123 >> 7;
                    ++v5;
                    unint64_t v125 = v123 >> 14;
                    v123 >>= 7;
                  }
                  while (v125);
                  *(v5 - sub_1000333D0((uint64_t *)this + 1) = v124;
                }
                else
                {
                  v119[1] = v123;
                  uint64_t v5 = v119 + 2;
                }
              }
              else
              {
                *long long v119 = v118;
                uint64_t v5 = v119 + 1;
              }
              ++v114;
              long long v113 = *this;
            }
            while (v114 < **this);
          }
          break;
        case 5:
          uint64_t v126 = *this;
          if (**this >= 1)
          {
            uint64_t v127 = 0;
            unsigned int v128 = 8 * a2;
            unsigned __int8 v129 = (8 * a2) | 0x80;
            int v130 = (a2 >> 4) & 0x1FFFFFF;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                uint64_t v126 = *this;
              }
              unint64_t v131 = *(int *)(*((void *)v126 + 1) + 4 * v127);
              if (v128 > 0x7F)
              {
                unsigned __int8 *v5 = v129;
                if (v128 >= 0x4000)
                {
                  uint64_t v132 = v5 + 2;
                  unsigned int v133 = v130;
                  do
                  {
                    *(v132 - sub_1000333D0((uint64_t *)this + 1) = v133 | 0x80;
                    unsigned int v134 = v133 >> 7;
                    ++v132;
                    unsigned int v135 = v133 >> 14;
                    v133 >>= 7;
                  }
                  while (v135);
                  *(v132 - sub_1000333D0((uint64_t *)this + 1) = v134;
                }
                else
                {
                  v5[1] = v128 >> 7;
                  uint64_t v132 = v5 + 2;
                }
              }
              else
              {
                uint64_t v132 = v5 + 1;
                unsigned __int8 *v5 = v128;
              }
              if (v131 > 0x7F)
              {
                *uint64_t v132 = v131 | 0x80;
                unint64_t v136 = v131 >> 7;
                if (v131 >> 14)
                {
                  uint64_t v5 = v132 + 2;
                  do
                  {
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v136 | 0x80;
                    unint64_t v137 = v136 >> 7;
                    ++v5;
                    unint64_t v138 = v136 >> 14;
                    v136 >>= 7;
                  }
                  while (v138);
                  *(v5 - sub_1000333D0((uint64_t *)this + 1) = v137;
                }
                else
                {
                  v132[1] = v136;
                  uint64_t v5 = v132 + 2;
                }
              }
              else
              {
                *uint64_t v132 = v131;
                uint64_t v5 = v132 + 1;
              }
              ++v127;
              uint64_t v126 = *this;
            }
            while (v127 < **this);
          }
          break;
        case 6:
          v139 = *this;
          if (**this >= 1)
          {
            uint64_t v140 = 0;
            unsigned int v141 = (8 * a2) | 1;
            unsigned __int8 v142 = (8 * a2) | 0x81;
            int v143 = (a2 >> 4) & 0x1FFFFFF;
            unsigned int v144 = (8 * a2) >> 7;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v139 = *this;
              }
              uint64_t v145 = *(void *)(*((void *)v139 + 1) + 8 * v140);
              if (v141 > 0x7F)
              {
                unsigned __int8 *v5 = v142;
                if (v141 >= 0x4000)
                {
                  v146 = v5 + 2;
                  unsigned int v147 = v143;
                  do
                  {
                    *((unsigned char *)v146 - sub_1000333D0((uint64_t *)this + 1) = v147 | 0x80;
                    unsigned int v148 = v147 >> 7;
                    v146 = (void *)((char *)v146 + 1);
                    unsigned int v149 = v147 >> 14;
                    v147 >>= 7;
                  }
                  while (v149);
                  *((unsigned char *)v146 - sub_1000333D0((uint64_t *)this + 1) = v148;
                }
                else
                {
                  v5[1] = v144;
                  v146 = v5 + 2;
                }
              }
              else
              {
                unsigned __int8 *v5 = v141;
                v146 = v5 + 1;
              }
              void *v146 = v145;
              uint64_t v5 = (unsigned __int8 *)(v146 + 1);
              ++v140;
              v139 = *this;
            }
            while (v140 < **this);
          }
          break;
        case 7:
          v150 = *this;
          if (**this >= 1)
          {
            uint64_t v151 = 0;
            unsigned int v152 = (8 * a2) | 5;
            int v153 = (a2 >> 4) & 0x1FFFFFF;
            unsigned int v154 = (8 * a2) >> 7;
            unsigned __int8 v155 = (8 * a2) | 0x85;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v150 = *this;
              }
              int v156 = *(_DWORD *)(*((void *)v150 + 1) + 4 * v151);
              if (v152 > 0x7F)
              {
                unsigned __int8 *v5 = v155;
                if (v152 >= 0x4000)
                {
                  v157 = v5 + 2;
                  unsigned int v158 = v153;
                  do
                  {
                    *((unsigned char *)v157 - sub_1000333D0((uint64_t *)this + 1) = v158 | 0x80;
                    unsigned int v159 = v158 >> 7;
                    v157 = (_DWORD *)((char *)v157 + 1);
                    unsigned int v160 = v158 >> 14;
                    v158 >>= 7;
                  }
                  while (v160);
                  *((unsigned char *)v157 - sub_1000333D0((uint64_t *)this + 1) = v159;
                }
                else
                {
                  v5[1] = v154;
                  v157 = v5 + 2;
                }
              }
              else
              {
                unsigned __int8 *v5 = v152;
                v157 = v5 + 1;
              }
              _DWORD *v157 = v156;
              uint64_t v5 = (unsigned __int8 *)(v157 + 1);
              ++v151;
              v150 = *this;
            }
            while (v151 < **this);
          }
          break;
        case 8:
          v161 = *this;
          if (**this >= 1)
          {
            uint64_t v162 = 0;
            unsigned int v163 = 8 * a2;
            unsigned __int8 v164 = (8 * a2) | 0x80;
            int v165 = (a2 >> 4) & 0x1FFFFFF;
            unsigned int v166 = (8 * a2) >> 7;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v161 = *this;
              }
              char v167 = *(unsigned char *)(*((void *)v161 + 1) + v162);
              if (v163 > 0x7F)
              {
                unsigned __int8 *v5 = v164;
                if (v163 >= 0x4000)
                {
                  v168 = v5 + 2;
                  unsigned int v169 = v165;
                  do
                  {
                    *(v168 - sub_1000333D0((uint64_t *)this + 1) = v169 | 0x80;
                    unsigned int v170 = v169 >> 7;
                    ++v168;
                    unsigned int v171 = v169 >> 14;
                    v169 >>= 7;
                  }
                  while (v171);
                  *(v168 - sub_1000333D0((uint64_t *)this + 1) = v170;
                }
                else
                {
                  v5[1] = v166;
                  v168 = v5 + 2;
                }
              }
              else
              {
                unsigned __int8 *v5 = v163;
                v168 = v5 + 1;
              }
              unsigned char *v168 = v167;
              uint64_t v5 = v168 + 1;
              ++v162;
              v161 = *this;
            }
            while (v162 < **this);
          }
          break;
        case 9:
          v172 = *this;
          if ((*this)[2] >= 1)
          {
            uint64_t v173 = 0;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v172 = *this;
              }
              uint64_t v5 = sub_1000E4244(a4, a2, *(void *)(*((void *)v172 + 2) + 8 * v173++ + 8), v5);
              v172 = *this;
            }
            while (v173 < (*this)[2]);
          }
          break;
        case 0xA:
          v174 = *this;
          if ((*this)[2] >= 1)
          {
            uint64_t v175 = 0;
            unsigned int v176 = (8 * a2) | 3;
            unsigned __int8 v177 = (8 * a2) | 0x83;
            int v178 = (a2 >> 4) & 0x1FFFFFF;
            unsigned int v179 = (8 * a2) | 4;
            unsigned int v180 = (8 * a2) >> 7;
            unsigned __int8 v181 = (8 * a2) | 0x84;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v174 = *this;
              }
              uint64_t v182 = *(void *)(*((void *)v174 + 2) + 8 * v175 + 8);
              if (v176 > 0x7F)
              {
                unsigned __int8 *v5 = v177;
                if (v176 >= 0x4000)
                {
                  v183 = v5 + 2;
                  unsigned int v184 = v178;
                  do
                  {
                    *(v183 - sub_1000333D0((uint64_t *)this + 1) = v184 | 0x80;
                    unsigned int v185 = v184 >> 7;
                    ++v183;
                    unsigned int v186 = v184 >> 14;
                    v184 >>= 7;
                  }
                  while (v186);
                  *(v183 - sub_1000333D0((uint64_t *)this + 1) = v185;
                }
                else
                {
                  v5[1] = v180;
                  v183 = v5 + 2;
                }
              }
              else
              {
                v183 = v5 + 1;
                unsigned __int8 *v5 = v176;
              }
              v187 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, unsigned __int8 *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)v182 + 96))(v182, v183, a4);
              if (*(void *)a4 <= (unint64_t)v187) {
                v187 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v187);
              }
              if (v179 > 0x7F)
              {
                unsigned __int8 *v187 = v181;
                if (v179 >= 0x4000)
                {
                  uint64_t v5 = v187 + 2;
                  unsigned int v188 = v178;
                  do
                  {
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v188 | 0x80;
                    unsigned int v189 = v188 >> 7;
                    ++v5;
                    unsigned int v190 = v188 >> 14;
                    v188 >>= 7;
                  }
                  while (v190);
                  *(v5 - sub_1000333D0((uint64_t *)this + 1) = v189;
                }
                else
                {
                  v187[1] = v180;
                  uint64_t v5 = v187 + 2;
                }
              }
              else
              {
                uint64_t v5 = v187 + 1;
                unsigned __int8 *v187 = v179;
              }
              ++v175;
              v174 = *this;
            }
            while (v175 < (*this)[2]);
          }
          break;
        case 0xB:
          v191 = *this;
          if ((*this)[2] >= 1)
          {
            uint64_t v192 = 0;
            unsigned int v193 = (8 * a2) | 2;
            int v194 = (a2 >> 4) & 0x1FFFFFF;
            unsigned int v195 = (8 * a2) >> 7;
            unsigned __int8 v196 = (8 * a2) | 0x82;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v191 = *this;
              }
              uint64_t v197 = *(void *)(*((void *)v191 + 2) + 8 * v192 + 8);
              if (v193 > 0x7F)
              {
                unsigned __int8 *v5 = v196;
                if (v193 >= 0x4000)
                {
                  v198 = v5 + 2;
                  unsigned int v199 = v194;
                  do
                  {
                    *(v198 - sub_1000333D0((uint64_t *)this + 1) = v199 | 0x80;
                    unsigned int v200 = v199 >> 7;
                    ++v198;
                    unsigned int v201 = v199 >> 14;
                    v199 >>= 7;
                  }
                  while (v201);
                  *(v198 - sub_1000333D0((uint64_t *)this + 1) = v200;
                }
                else
                {
                  v5[1] = v195;
                  v198 = v5 + 2;
                }
              }
              else
              {
                v198 = v5 + 1;
                unsigned __int8 *v5 = v193;
              }
              unsigned int v202 = (*(uint64_t (**)(uint64_t))(*(void *)v197 + 80))(v197);
              if (v202 > 0x7F)
              {
                unsigned char *v198 = v202 | 0x80;
                unsigned int v204 = v202 >> 7;
                if (v202 >> 14)
                {
                  v203 = v198 + 2;
                  do
                  {
                    *(v203 - sub_1000333D0((uint64_t *)this + 1) = v204 | 0x80;
                    unsigned int v205 = v204 >> 7;
                    ++v203;
                    unsigned int v206 = v204 >> 14;
                    v204 >>= 7;
                  }
                  while (v206);
                  *(v203 - sub_1000333D0((uint64_t *)this + 1) = v205;
                }
                else
                {
                  v198[1] = v204;
                  v203 = v198 + 2;
                }
              }
              else
              {
                unsigned char *v198 = v202;
                v203 = v198 + 1;
              }
              uint64_t v5 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, unsigned char *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)v197 + 96))(v197, v203, a4);
              ++v192;
              v191 = *this;
            }
            while (v192 < (*this)[2]);
          }
          break;
        case 0xC:
          v207 = *this;
          if ((*this)[2] >= 1)
          {
            uint64_t v208 = 0;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v207 = *this;
              }
              uint64_t v5 = sub_1000E4244(a4, a2, *(void *)(*((void *)v207 + 2) + 8 * v208++ + 8), v5);
              v207 = *this;
            }
            while (v208 < (*this)[2]);
          }
          break;
        case 0xD:
          v209 = *this;
          if (**this >= 1)
          {
            uint64_t v210 = 0;
            unsigned int v211 = 8 * a2;
            unsigned __int8 v212 = (8 * a2) | 0x80;
            int v213 = (a2 >> 4) & 0x1FFFFFF;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v209 = *this;
              }
              unsigned int v214 = *(_DWORD *)(*((void *)v209 + 1) + 4 * v210);
              if (v211 > 0x7F)
              {
                unsigned __int8 *v5 = v212;
                if (v211 >= 0x4000)
                {
                  v215 = v5 + 2;
                  unsigned int v216 = v213;
                  do
                  {
                    *(v215 - sub_1000333D0((uint64_t *)this + 1) = v216 | 0x80;
                    unsigned int v217 = v216 >> 7;
                    ++v215;
                    unsigned int v218 = v216 >> 14;
                    v216 >>= 7;
                  }
                  while (v218);
                  *(v215 - sub_1000333D0((uint64_t *)this + 1) = v217;
                }
                else
                {
                  v5[1] = v211 >> 7;
                  v215 = v5 + 2;
                }
              }
              else
              {
                v215 = v5 + 1;
                unsigned __int8 *v5 = v211;
              }
              if (v214 > 0x7F)
              {
                unsigned char *v215 = v214 | 0x80;
                unsigned int v219 = v214 >> 7;
                if (v214 >> 14)
                {
                  uint64_t v5 = v215 + 2;
                  do
                  {
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v219 | 0x80;
                    unsigned int v220 = v219 >> 7;
                    ++v5;
                    unsigned int v221 = v219 >> 14;
                    v219 >>= 7;
                  }
                  while (v221);
                  *(v5 - sub_1000333D0((uint64_t *)this + 1) = v220;
                }
                else
                {
                  v215[1] = v219;
                  uint64_t v5 = v215 + 2;
                }
              }
              else
              {
                unsigned char *v215 = v214;
                uint64_t v5 = v215 + 1;
              }
              ++v210;
              v209 = *this;
            }
            while (v210 < **this);
          }
          break;
        case 0xE:
          v222 = *this;
          if (**this >= 1)
          {
            uint64_t v223 = 0;
            unsigned int v224 = 8 * a2;
            unsigned __int8 v225 = (8 * a2) | 0x80;
            int v226 = (a2 >> 4) & 0x1FFFFFF;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v222 = *this;
              }
              unint64_t v227 = *(int *)(*((void *)v222 + 1) + 4 * v223);
              if (v224 > 0x7F)
              {
                unsigned __int8 *v5 = v225;
                if (v224 >= 0x4000)
                {
                  v228 = v5 + 2;
                  unsigned int v229 = v226;
                  do
                  {
                    *(v228 - sub_1000333D0((uint64_t *)this + 1) = v229 | 0x80;
                    unsigned int v230 = v229 >> 7;
                    ++v228;
                    unsigned int v231 = v229 >> 14;
                    v229 >>= 7;
                  }
                  while (v231);
                  *(v228 - sub_1000333D0((uint64_t *)this + 1) = v230;
                }
                else
                {
                  v5[1] = v224 >> 7;
                  v228 = v5 + 2;
                }
              }
              else
              {
                v228 = v5 + 1;
                unsigned __int8 *v5 = v224;
              }
              if (v227 > 0x7F)
              {
                unsigned char *v228 = v227 | 0x80;
                unint64_t v232 = v227 >> 7;
                if (v227 >> 14)
                {
                  uint64_t v5 = v228 + 2;
                  do
                  {
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v232 | 0x80;
                    unint64_t v233 = v232 >> 7;
                    ++v5;
                    unint64_t v234 = v232 >> 14;
                    v232 >>= 7;
                  }
                  while (v234);
                  *(v5 - sub_1000333D0((uint64_t *)this + 1) = v233;
                }
                else
                {
                  v228[1] = v232;
                  uint64_t v5 = v228 + 2;
                }
              }
              else
              {
                unsigned char *v228 = v227;
                uint64_t v5 = v228 + 1;
              }
              ++v223;
              v222 = *this;
            }
            while (v223 < **this);
          }
          break;
        case 0xF:
          v235 = *this;
          if (**this >= 1)
          {
            uint64_t v236 = 0;
            unsigned int v237 = (8 * a2) | 5;
            int v238 = (a2 >> 4) & 0x1FFFFFF;
            unsigned int v239 = (8 * a2) >> 7;
            unsigned __int8 v240 = (8 * a2) | 0x85;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v235 = *this;
              }
              int v241 = *(_DWORD *)(*((void *)v235 + 1) + 4 * v236);
              if (v237 > 0x7F)
              {
                unsigned __int8 *v5 = v240;
                if (v237 >= 0x4000)
                {
                  v242 = v5 + 2;
                  unsigned int v243 = v238;
                  do
                  {
                    *((unsigned char *)v242 - sub_1000333D0((uint64_t *)this + 1) = v243 | 0x80;
                    unsigned int v244 = v243 >> 7;
                    v242 = (_DWORD *)((char *)v242 + 1);
                    unsigned int v245 = v243 >> 14;
                    v243 >>= 7;
                  }
                  while (v245);
                  *((unsigned char *)v242 - sub_1000333D0((uint64_t *)this + 1) = v244;
                }
                else
                {
                  v5[1] = v239;
                  v242 = v5 + 2;
                }
              }
              else
              {
                unsigned __int8 *v5 = v237;
                v242 = v5 + 1;
              }
              _DWORD *v242 = v241;
              uint64_t v5 = (unsigned __int8 *)(v242 + 1);
              ++v236;
              v235 = *this;
            }
            while (v236 < **this);
          }
          break;
        case 0x10:
          v246 = *this;
          if (**this >= 1)
          {
            uint64_t v247 = 0;
            unsigned int v248 = (8 * a2) | 1;
            unsigned __int8 v249 = (8 * a2) | 0x81;
            int v250 = (a2 >> 4) & 0x1FFFFFF;
            unsigned int v251 = (8 * a2) >> 7;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v246 = *this;
              }
              uint64_t v252 = *(void *)(*((void *)v246 + 1) + 8 * v247);
              if (v248 > 0x7F)
              {
                unsigned __int8 *v5 = v249;
                if (v248 >= 0x4000)
                {
                  v253 = v5 + 2;
                  unsigned int v254 = v250;
                  do
                  {
                    *((unsigned char *)v253 - sub_1000333D0((uint64_t *)this + 1) = v254 | 0x80;
                    unsigned int v255 = v254 >> 7;
                    v253 = (void *)((char *)v253 + 1);
                    unsigned int v256 = v254 >> 14;
                    v254 >>= 7;
                  }
                  while (v256);
                  *((unsigned char *)v253 - sub_1000333D0((uint64_t *)this + 1) = v255;
                }
                else
                {
                  v5[1] = v251;
                  v253 = v5 + 2;
                }
              }
              else
              {
                unsigned __int8 *v5 = v248;
                v253 = v5 + 1;
              }
              void *v253 = v252;
              uint64_t v5 = (unsigned __int8 *)(v253 + 1);
              ++v247;
              v246 = *this;
            }
            while (v247 < **this);
          }
          break;
        case 0x11:
          v257 = *this;
          if (**this >= 1)
          {
            uint64_t v258 = 0;
            unsigned int v259 = 8 * a2;
            unsigned __int8 v260 = (8 * a2) | 0x80;
            int v261 = (a2 >> 4) & 0x1FFFFFF;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v257 = *this;
              }
              int v262 = *(_DWORD *)(*((void *)v257 + 1) + 4 * v258);
              if (v259 > 0x7F)
              {
                unsigned __int8 *v5 = v260;
                if (v259 >= 0x4000)
                {
                  v263 = v5 + 2;
                  unsigned int v264 = v261;
                  do
                  {
                    *(v263 - sub_1000333D0((uint64_t *)this + 1) = v264 | 0x80;
                    unsigned int v265 = v264 >> 7;
                    ++v263;
                    unsigned int v266 = v264 >> 14;
                    v264 >>= 7;
                  }
                  while (v266);
                  *(v263 - sub_1000333D0((uint64_t *)this + 1) = v265;
                }
                else
                {
                  v5[1] = v259 >> 7;
                  v263 = v5 + 2;
                }
              }
              else
              {
                v263 = v5 + 1;
                unsigned __int8 *v5 = v259;
              }
              unsigned int v267 = (2 * v262) ^ (v262 >> 31);
              if (v267 > 0x7F)
              {
                unsigned char *v263 = v267 | 0x80;
                unsigned int v268 = v267 >> 7;
                if (v267 >> 14)
                {
                  uint64_t v5 = v263 + 2;
                  do
                  {
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v268 | 0x80;
                    unsigned int v269 = v268 >> 7;
                    ++v5;
                    unsigned int v270 = v268 >> 14;
                    v268 >>= 7;
                  }
                  while (v270);
                  *(v5 - sub_1000333D0((uint64_t *)this + 1) = v269;
                }
                else
                {
                  v263[1] = v268;
                  uint64_t v5 = v263 + 2;
                }
              }
              else
              {
                unsigned char *v263 = v267;
                uint64_t v5 = v263 + 1;
              }
              ++v258;
              v257 = *this;
            }
            while (v258 < **this);
          }
          break;
        case 0x12:
          v271 = *this;
          if (**this >= 1)
          {
            uint64_t v272 = 0;
            unsigned int v273 = 8 * a2;
            unsigned __int8 v274 = (8 * a2) | 0x80;
            int v275 = (a2 >> 4) & 0x1FFFFFF;
            do
            {
              if (*(void *)a4 <= (unint64_t)v5)
              {
                uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v5);
                v271 = *this;
              }
              uint64_t v276 = *(void *)(*((void *)v271 + 1) + 8 * v272);
              if (v273 > 0x7F)
              {
                unsigned __int8 *v5 = v274;
                if (v273 >= 0x4000)
                {
                  v277 = v5 + 2;
                  unsigned int v278 = v275;
                  do
                  {
                    *(v277 - sub_1000333D0((uint64_t *)this + 1) = v278 | 0x80;
                    unsigned int v279 = v278 >> 7;
                    ++v277;
                    unsigned int v280 = v278 >> 14;
                    v278 >>= 7;
                  }
                  while (v280);
                  *(v277 - sub_1000333D0((uint64_t *)this + 1) = v279;
                }
                else
                {
                  v5[1] = v273 >> 7;
                  v277 = v5 + 2;
                }
              }
              else
              {
                v277 = v5 + 1;
                unsigned __int8 *v5 = v273;
              }
              unint64_t v281 = (2 * v276) ^ (v276 >> 63);
              if (v281 > 0x7F)
              {
                unsigned char *v277 = v281 | 0x80;
                unint64_t v282 = v281 >> 7;
                if (v281 >> 14)
                {
                  uint64_t v5 = v277 + 2;
                  do
                  {
                    *(v5 - sub_1000333D0((uint64_t *)this + 1) = v282 | 0x80;
                    unint64_t v283 = v282 >> 7;
                    ++v5;
                    unint64_t v284 = v282 >> 14;
                    v282 >>= 7;
                  }
                  while (v284);
                  *(v5 - sub_1000333D0((uint64_t *)this + 1) = v283;
                }
                else
                {
                  v277[1] = v282;
                  uint64_t v5 = v277 + 2;
                }
              }
              else
              {
                unsigned char *v277 = v281;
                uint64_t v5 = v277 + 1;
              }
              ++v272;
              v271 = *this;
            }
            while (v272 < **this);
          }
          break;
        default:
          return v5;
      }
    }
    return v5;
  }
  if (*((unsigned char *)this + 10)) {
    return v5;
  }
  switch(*((unsigned char *)this + 8))
  {
    case 1:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      double v285 = *(double *)this;
      return (unsigned __int8 *)sub_100108B30(a2, v5, v285);
    case 2:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      float v286 = *(float *)this;
      return (unsigned __int8 *)sub_100108AC4(a2, v5, v286);
    case 3:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      unint64_t v287 = (unint64_t)*this;
      int v288 = a2;
      v289 = v5;
      return sub_10010870C(v288, v287, v289);
    case 4:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      unint64_t v287 = (unint64_t)*this;
      int v288 = a2;
      v289 = v5;
      return sub_10010870C(v288, v287, v289);
    case 5:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      unsigned int v290 = *(_DWORD *)this;
      int v291 = a2;
      v292 = v5;
      goto LABEL_473;
    case 6:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      uint64_t v293 = (uint64_t)*this;
      int v294 = a2;
      v295 = v5;
      goto LABEL_478;
    case 7:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      int v296 = *(_DWORD *)this;
      int v297 = a2;
      v298 = v5;
      goto LABEL_483;
    case 8:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      char v299 = *(unsigned char *)this;
      return sub_100108B9C(a2, v299, v5);
    case 9:
    case 0xC:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      uint64_t v10 = (uint64_t)*this;
      return sub_1000E4244(a4, a2, v10, v5);
    case 0xA:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      uint64_t v300 = (uint64_t)*this;
      return sub_100108C00(a2, v300, v5, a4);
    case 0xB:
      if ((*((unsigned char *)this + 10) & 0x10) != 0)
      {
        v305 = *(uint64_t (**)(void))(*(void *)*this + 136);
        return (unsigned __int8 *)v305();
      }
      else
      {
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
        }
        uint64_t v301 = (uint64_t)*this;
        return (unsigned __int8 *)sub_100108D34(a2, v301, v5, (uint64_t)a4);
      }
    case 0xD:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      unsigned int v302 = *(_DWORD *)this;
      return sub_1001087C0(a2, v302, v5);
    case 0xE:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      unsigned int v290 = *(_DWORD *)this;
      int v291 = a2;
      v292 = v5;
LABEL_473:
      uint64_t result = sub_100108654(v291, v290, v292);
      break;
    case 0xF:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      int v296 = *(_DWORD *)this;
      int v297 = a2;
      v298 = v5;
LABEL_483:
      uint64_t result = (unsigned __int8 *)sub_1001089EC(v297, v296, v298);
      break;
    case 0x10:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      uint64_t v293 = (uint64_t)*this;
      int v294 = a2;
      v295 = v5;
LABEL_478:
      uint64_t result = (unsigned __int8 *)sub_100108A58(v294, v293, v295);
      break;
    case 0x11:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      int v303 = *(_DWORD *)this;
      uint64_t result = sub_100108874(a2, v303, v5);
      break;
    case 0x12:
      if (*(void *)a4 <= (unint64_t)a3) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, a3);
      }
      uint64_t v304 = (uint64_t)*this;
      uint64_t result = sub_100108930(a2, v304, v5);
      break;
    default:
      return v5;
  }
  return result;
}

void sub_100107894(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::ByteSize(google::protobuf::internal::ExtensionSet *this)
{
  uint64_t v1 = (int *)*((void *)this + 2);
  if (*((unsigned __int16 *)this + 4) < 0x101u)
  {
    if (*((_WORD *)this + 5))
    {
      uint64_t v2 = 0;
      uint64_t v3 = &v1[8 * *((unsigned __int16 *)this + 5)];
      do
      {
        uint64_t v4 = (uint64_t **)(v1 + 2);
        int v5 = *v1;
        v1 += 8;
        v2 += google::protobuf::internal::ExtensionSet::Extension::ByteSize(v4, v5);
      }
      while (v1 != v3);
      return v2;
    }
    return 0;
  }
  unsigned int v8 = *(int **)v1;
  uint64_t v6 = v1 + 2;
  uint64_t v7 = v8;
  if (v8 == v6) {
    return 0;
  }
  uint64_t v2 = 0;
  do
  {
    unint64_t v9 = google::protobuf::internal::ExtensionSet::Extension::ByteSize((uint64_t **)v7 + 5, v7[8]);
    uint64_t v10 = (int *)*((void *)v7 + 1);
    if (v10)
    {
      do
      {
        int v11 = v10;
        uint64_t v10 = *(int **)v10;
      }
      while (v10);
    }
    else
    {
      do
      {
        int v11 = (int *)*((void *)v7 + 2);
        BOOL v12 = *(void *)v11 == (void)v7;
        uint64_t v7 = v11;
      }
      while (!v12);
    }
    v2 += v9;
    uint64_t v7 = v11;
  }
  while (v11 != v6);
  return v2;
}

unint64_t google::protobuf::internal::ExtensionSet::Extension::ByteSize(uint64_t **this, int a2)
{
  if (*((unsigned char *)this + 9))
  {
    if (*((unsigned char *)this + 11))
    {
      switch(*((unsigned char *)this + 8))
      {
        case 1:
        case 6:
        case 0x10:
          uint64_t v7 = 8 * *(unsigned int *)*this;
          goto LABEL_51;
        case 2:
        case 7:
        case 0xF:
          uint64_t v7 = 4 * *(unsigned int *)*this;
          goto LABEL_51;
        case 3:
          uint64_t v14 = *(unsigned int *)*this;
          if ((int)v14 < 1) {
            goto LABEL_5;
          }
          uint64_t v7 = 0;
          unsigned __int8 v15 = (uint64_t *)(*this)[1];
          do
          {
            uint64_t v16 = *v15++;
            v7 += (9 * (__clz(v16 | 1) ^ 0x3F) + 73) >> 6;
            --v14;
          }
          while (v14);
          goto LABEL_51;
        case 4:
          uint64_t v17 = *(unsigned int *)*this;
          if ((int)v17 < 1) {
            goto LABEL_5;
          }
          uint64_t v7 = 0;
          uint64_t v18 = (uint64_t *)(*this)[1];
          do
          {
            uint64_t v19 = *v18++;
            v7 += (9 * (__clz(v19 | 1) ^ 0x3F) + 73) >> 6;
            --v17;
          }
          while (v17);
          goto LABEL_51;
        case 5:
          uint64_t v20 = *(unsigned int *)*this;
          if ((int)v20 < 1) {
            goto LABEL_5;
          }
          uint64_t v7 = 0;
          unsigned int v21 = (int *)(*this)[1];
          do
          {
            int v23 = *v21++;
            int v22 = v23;
            if (v23 < 0) {
              uint64_t v24 = 10;
            }
            else {
              uint64_t v24 = (9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6;
            }
            v7 += v24;
            --v20;
          }
          while (v20);
          goto LABEL_51;
        case 8:
          uint64_t v7 = *(unsigned int *)*this;
          goto LABEL_51;
        case 9:
        case 0xA:
        case 0xB:
        case 0xC:
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v87, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set.cc", 1599);
          uint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v87, "Non-primitive types can't be packed.");
          google::protobuf::internal::LogFinisher::operator=((int)&v86, (const char **)&v3->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v87[0].__r_.__value_.__l.__data_);
          goto LABEL_5;
        case 0xD:
          uint64_t v8 = *(unsigned int *)*this;
          if ((int)v8 < 1) {
            goto LABEL_5;
          }
          uint64_t v7 = 0;
          unint64_t v9 = (int *)(*this)[1];
          do
          {
            int v10 = *v9++;
            v7 += (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
            --v8;
          }
          while (v8);
          goto LABEL_51;
        case 0xE:
          uint64_t v25 = *(unsigned int *)*this;
          if ((int)v25 < 1) {
            goto LABEL_5;
          }
          uint64_t v7 = 0;
          unint64_t v26 = (int *)(*this)[1];
          do
          {
            int v28 = *v26++;
            int v27 = v28;
            if (v28 < 0) {
              uint64_t v29 = 10;
            }
            else {
              uint64_t v29 = (9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6;
            }
            v7 += v29;
            --v25;
          }
          while (v25);
          goto LABEL_51;
        case 0x11:
          uint64_t v11 = *(unsigned int *)*this;
          if ((int)v11 < 1) {
            goto LABEL_5;
          }
          uint64_t v7 = 0;
          BOOL v12 = (int *)(*this)[1];
          do
          {
            int v13 = *v12++;
            v7 += (9 * (__clz((2 * v13) ^ (v13 >> 31) | 1) ^ 0x1F) + 73) >> 6;
            --v11;
          }
          while (v11);
          goto LABEL_51;
        case 0x12:
          uint64_t v30 = *(unsigned int *)*this;
          if ((int)v30 < 1) {
            goto LABEL_5;
          }
          uint64_t v7 = 0;
          uint64_t v31 = (uint64_t *)(*this)[1];
          do
          {
            uint64_t v32 = *v31++;
            v7 += (9 * (__clz((2 * v32) ^ (v32 >> 63) | 1) ^ 0x3F) + 73) >> 6;
            --v30;
          }
          while (v30);
LABEL_51:
          *((_DWORD *)this + 3) = v7;
          unint64_t v33 = v7 + ((9 * (__clz((8 * a2) | 3) ^ 0x1F) + 73) >> 6) + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
          if (v7) {
            unint64_t v4 = v33;
          }
          else {
            unint64_t v4 = 0;
          }
          break;
        default:
LABEL_5:
          unint64_t v4 = 0;
          *((_DWORD *)this + 3) = 0;
          break;
      }
    }
    else
    {
      unint64_t v5 = (unint64_t)((9 * (__clz((8 * a2) | 1) ^ 0x1F) + 73) >> 6) << (*((unsigned char *)this + 8) == 10);
      switch(*((unsigned char *)this + 8))
      {
        case 1:
        case 6:
        case 0x10:
          unsigned int v6 = v5 + 8;
          goto LABEL_15;
        case 2:
        case 7:
        case 0xF:
          unsigned int v6 = v5 + 4;
LABEL_15:
          unint64_t v4 = v6 * (unint64_t)*(unsigned int *)*this;
          break;
        case 3:
          uint64_t v39 = *(unsigned int *)*this;
          unint64_t v4 = v5 * (unint64_t)v39;
          if ((int)v39 >= 1)
          {
            unsigned int v40 = (uint64_t *)(*this)[1];
            do
            {
              uint64_t v41 = *v40++;
              v4 += (9 * (__clz(v41 | 1) ^ 0x3F) + 73) >> 6;
              --v39;
            }
            while (v39);
          }
          break;
        case 4:
          uint64_t v42 = *(unsigned int *)*this;
          unint64_t v4 = v5 * (unint64_t)v42;
          if ((int)v42 >= 1)
          {
            uint64_t v43 = (uint64_t *)(*this)[1];
            do
            {
              uint64_t v44 = *v43++;
              v4 += (9 * (__clz(v44 | 1) ^ 0x3F) + 73) >> 6;
              --v42;
            }
            while (v42);
          }
          break;
        case 5:
          uint64_t v45 = *(unsigned int *)*this;
          unint64_t v4 = v5 * (unint64_t)v45;
          if ((int)v45 >= 1)
          {
            uint64_t v46 = (int *)(*this)[1];
            do
            {
              int v48 = *v46++;
              int v47 = v48;
              if (v48 < 0) {
                uint64_t v49 = 10;
              }
              else {
                uint64_t v49 = (9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6;
              }
              v4 += v49;
              --v45;
            }
            while (v45);
          }
          break;
        case 8:
          unint64_t v4 = *(unsigned int *)*this + *(unsigned int *)*this * (unint64_t)v5;
          break;
        case 9:
          uint64_t v50 = *((unsigned int *)*this + 2);
          unint64_t v4 = v5 * (unint64_t)v50;
          if ((int)v50 >= 1)
          {
            unsigned int v51 = (uint64_t *)((*this)[2] + 8);
            do
            {
              uint64_t v52 = *v51++;
              uint64_t v53 = *(unsigned __int8 *)(v52 + 23);
              uint64_t v54 = *(void *)(v52 + 8);
              if ((v53 & 0x80u) == 0) {
                uint64_t v54 = v53;
              }
              v4 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6);
              --v50;
            }
            while (v50);
          }
          break;
        case 0xA:
          uint64_t v55 = (unsigned int *)*this;
          int v56 = *((_DWORD *)*this + 2);
          unint64_t v4 = v5 * (unint64_t)v56;
          if (v56 >= 1)
          {
            uint64_t v57 = 0;
            do
            {
              uint64_t v58 = *(void *)(*((void *)v55 + 2) + 8 * v57 + 8);
              v4 += (*(uint64_t (**)(uint64_t))(*(void *)v58 + 72))(v58);
              ++v57;
              uint64_t v55 = (unsigned int *)*this;
            }
            while (v57 < *((int *)*this + 2));
          }
          break;
        case 0xB:
          unint64_t v59 = (unsigned int *)*this;
          int v60 = *((_DWORD *)*this + 2);
          unint64_t v4 = v5 * (unint64_t)v60;
          if (v60 >= 1)
          {
            uint64_t v61 = 0;
            do
            {
              uint64_t v62 = *(void *)(*((void *)v59 + 2) + 8 * v61 + 8);
              uint64_t v63 = (*(uint64_t (**)(uint64_t))(*(void *)v62 + 72))(v62);
              v4 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6);
              ++v61;
              unint64_t v59 = (unsigned int *)*this;
            }
            while (v61 < *((int *)*this + 2));
          }
          break;
        case 0xC:
          uint64_t v64 = *((unsigned int *)*this + 2);
          unint64_t v4 = v5 * (unint64_t)v64;
          if ((int)v64 >= 1)
          {
            unint64_t v65 = (uint64_t *)((*this)[2] + 8);
            do
            {
              uint64_t v66 = *v65++;
              uint64_t v67 = *(unsigned __int8 *)(v66 + 23);
              uint64_t v68 = *(void *)(v66 + 8);
              if ((v67 & 0x80u) == 0) {
                uint64_t v68 = v67;
              }
              v4 += v68 + ((9 * (__clz(v68 | 1) ^ 0x1F) + 73) >> 6);
              --v64;
            }
            while (v64);
          }
          break;
        case 0xD:
          uint64_t v69 = *(unsigned int *)*this;
          unint64_t v4 = v5 * (unint64_t)v69;
          if ((int)v69 >= 1)
          {
            char v70 = (int *)(*this)[1];
            do
            {
              int v71 = *v70++;
              v4 += (9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6;
              --v69;
            }
            while (v69);
          }
          break;
        case 0xE:
          uint64_t v72 = *(unsigned int *)*this;
          unint64_t v4 = v5 * (unint64_t)v72;
          if ((int)v72 >= 1)
          {
            uint64_t v73 = (int *)(*this)[1];
            do
            {
              int v75 = *v73++;
              int v74 = v75;
              if (v75 < 0) {
                uint64_t v76 = 10;
              }
              else {
                uint64_t v76 = (9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6;
              }
              v4 += v76;
              --v72;
            }
            while (v72);
          }
          break;
        case 0x11:
          uint64_t v77 = *(unsigned int *)*this;
          unint64_t v4 = v5 * (unint64_t)v77;
          if ((int)v77 >= 1)
          {
            unint64_t v78 = (int *)(*this)[1];
            do
            {
              int v79 = *v78++;
              v4 += (9 * (__clz((2 * v79) ^ (v79 >> 31) | 1) ^ 0x1F) + 73) >> 6;
              --v77;
            }
            while (v77);
          }
          break;
        case 0x12:
          uint64_t v80 = *(unsigned int *)*this;
          unint64_t v4 = v5 * (unint64_t)v80;
          if ((int)v80 >= 1)
          {
            uint64_t v81 = (uint64_t *)(*this)[1];
            do
            {
              uint64_t v82 = *v81++;
              v4 += (9 * (__clz((2 * v82) ^ (v82 >> 63) | 1) ^ 0x3F) + 73) >> 6;
              --v80;
            }
            while (v80);
          }
          break;
        default:
          return 0;
      }
    }
  }
  else if (*((unsigned char *)this + 10))
  {
    return 0;
  }
  else
  {
    unint64_t v4 = (unint64_t)((9 * (__clz((8 * a2) | 1) ^ 0x1F) + 73) >> 6) << (*((unsigned char *)this + 8) == 10);
    switch(*((unsigned char *)this + 8))
    {
      case 1:
      case 6:
      case 0x10:
        v4 += 8;
        return v4;
      case 2:
      case 7:
      case 0xF:
        v4 += 4;
        return v4;
      case 3:
      case 4:
        uint64_t v35 = (uint64_t)*this;
        goto LABEL_126;
      case 5:
      case 0xE:
        uint64_t v36 = (9 * (__clz(*(_DWORD *)this | 1) ^ 0x1F) + 73) >> 6;
        if (*(int *)this >= 0) {
          uint64_t v37 = v36;
        }
        else {
          uint64_t v37 = 10;
        }
        v4 += v37;
        return v4;
      case 8:
        return ++v4;
      case 9:
      case 0xC:
        uint64_t v38 = (*this)[1];
        if (*((char *)*this + 23) >= 0) {
          uint64_t v38 = *((unsigned __int8 *)*this + 23);
        }
        v4 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6);
        return v4;
      case 0xA:
        v4 += (*(uint64_t (**)(void))(**this + 72))();
        return v4;
      case 0xB:
        uint64_t v83 = **this;
        if ((*((unsigned char *)this + 10) & 0x10) != 0) {
          uint64_t v84 = (*(uint64_t (**)(void))(v83 + 88))();
        }
        else {
          uint64_t v84 = (*(uint64_t (**)(void))(v83 + 72))();
        }
        v4 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6);
        return v4;
      case 0xD:
        int v85 = *(_DWORD *)this;
        goto LABEL_124;
      case 0x11:
        int v85 = (2 * *(_DWORD *)this) ^ (*(int *)this >> 31);
LABEL_124:
        v4 += (9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6;
        break;
      case 0x12:
        uint64_t v35 = (2 * (void)*this) ^ ((uint64_t)*this >> 63);
LABEL_126:
        v4 += (9 * (__clz(v35 | 1) ^ 0x3F) + 73) >> 6;
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_10010837C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::internal::ExtensionSet::Extension::Free(uint64_t *this)
{
  int v1 = google::protobuf::internal::WireFormatLite::kFieldTypeToCppTypeMap[*((unsigned __int8 *)this + 8)];
  if (*((unsigned char *)this + 9))
  {
    switch(*((unsigned char *)this + 8))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        uint64_t v2 = (int *)*this;
        if (!*this) {
          return this;
        }
        if (v2[1] >= 1)
        {
          uint64_t v3 = *((void *)v2 + 1);
          uint64_t v5 = *(void *)(v3 - 8);
          unint64_t v4 = (void *)(v3 - 8);
          if (!v5) {
            operator delete(v4);
          }
        }
        break;
      case 9:
      case 0xC:
        if (!*this) {
          return this;
        }
        sub_1000F9C98((void *)*this);
        break;
      case 0xA:
      case 0xB:
        if (!*this) {
          return this;
        }
        sub_100101C14((void *)*this);
        break;
      default:
        return this;
    }
    goto LABEL_27;
  }
  if (v1 == 10)
  {
    char v7 = *((unsigned char *)this + 10);
    this = (uint64_t *)*this;
    if ((v7 & 0x10) != 0)
    {
      if (!this) {
        return this;
      }
      uint64_t v8 = *(uint64_t (**)(void))(*this + 8);
    }
    else
    {
      if (!this) {
        return this;
      }
      uint64_t v8 = *(uint64_t (**)(void))(*this + 8);
    }
    return (uint64_t *)v8();
  }
  if (v1 == 9)
  {
    unsigned int v6 = (int *)*this;
    if (*this)
    {
      if (*((char *)v6 + 23) < 0) {
        operator delete(*(void **)v6);
      }
LABEL_27:
      operator delete();
    }
  }
  return this;
}

unsigned char *sub_100108654(int a1, unsigned int a2, unsigned char *a3)
{
  unsigned int v3 = 8 * a1;
  if ((8 * a1) > 0x7F)
  {
    *a3 = v3 | 0x80;
    unsigned int v5 = v3 >> 7;
    if (v3 >> 14)
    {
      unint64_t v4 = a3 + 2;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v5 | 0x80;
        unsigned int v6 = v5 >> 7;
        ++v4;
        unsigned int v7 = v5 >> 14;
        v5 >>= 7;
      }
      while (v7);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v6;
    }
    else
    {
      a3[1] = v5;
      unint64_t v4 = a3 + 2;
    }
  }
  else
  {
    *a3 = v3;
    unint64_t v4 = a3 + 1;
  }
  if (a2 > 0x7F)
  {
    *unint64_t v4 = a2 | 0x80;
    unint64_t v9 = (unint64_t)(int)a2 >> 7;
    if (a2 >> 14)
    {
      uint64_t v8 = v4 + 2;
      do
      {
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
        unint64_t v10 = v9 >> 7;
        ++v8;
        unint64_t v11 = v9 >> 14;
        v9 >>= 7;
      }
      while (v11);
      *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
    }
    else
    {
      v4[1] = v9;
      return v4 + 2;
    }
  }
  else
  {
    *unint64_t v4 = a2;
    return v4 + 1;
  }
  return v8;
}

unsigned char *sub_10010870C(int a1, unint64_t a2, unsigned char *a3)
{
  unsigned int v3 = 8 * a1;
  if ((8 * a1) > 0x7F)
  {
    *a3 = v3 | 0x80;
    unsigned int v5 = v3 >> 7;
    if (v3 >> 14)
    {
      unint64_t v4 = a3 + 2;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v5 | 0x80;
        unsigned int v6 = v5 >> 7;
        ++v4;
        unsigned int v7 = v5 >> 14;
        v5 >>= 7;
      }
      while (v7);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v6;
    }
    else
    {
      a3[1] = v5;
      unint64_t v4 = a3 + 2;
    }
  }
  else
  {
    *a3 = v3;
    unint64_t v4 = a3 + 1;
  }
  if (a2 > 0x7F)
  {
    *unint64_t v4 = a2 | 0x80;
    unint64_t v9 = a2 >> 7;
    if (a2 >> 14)
    {
      uint64_t v8 = v4 + 2;
      do
      {
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
        unint64_t v10 = v9 >> 7;
        ++v8;
        unint64_t v11 = v9 >> 14;
        v9 >>= 7;
      }
      while (v11);
      *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
    }
    else
    {
      v4[1] = v9;
      return v4 + 2;
    }
  }
  else
  {
    *unint64_t v4 = a2;
    return v4 + 1;
  }
  return v8;
}

unsigned char *sub_1001087C0(int a1, unsigned int a2, unsigned char *a3)
{
  unsigned int v3 = 8 * a1;
  if ((8 * a1) > 0x7F)
  {
    *a3 = v3 | 0x80;
    unsigned int v5 = v3 >> 7;
    if (v3 >> 14)
    {
      unint64_t v4 = a3 + 2;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v5 | 0x80;
        unsigned int v6 = v5 >> 7;
        ++v4;
        unsigned int v7 = v5 >> 14;
        v5 >>= 7;
      }
      while (v7);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v6;
    }
    else
    {
      a3[1] = v5;
      unint64_t v4 = a3 + 2;
    }
  }
  else
  {
    *a3 = v3;
    unint64_t v4 = a3 + 1;
  }
  if (a2 > 0x7F)
  {
    *unint64_t v4 = a2 | 0x80;
    unsigned int v9 = a2 >> 7;
    if (a2 >> 14)
    {
      uint64_t v8 = v4 + 2;
      do
      {
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
        unsigned int v10 = v9 >> 7;
        ++v8;
        unsigned int v11 = v9 >> 14;
        v9 >>= 7;
      }
      while (v11);
      *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
    }
    else
    {
      v4[1] = v9;
      return v4 + 2;
    }
  }
  else
  {
    *unint64_t v4 = a2;
    return v4 + 1;
  }
  return v8;
}

unsigned char *sub_100108874(int a1, int a2, unsigned char *a3)
{
  unsigned int v3 = 8 * a1;
  if ((8 * a1) > 0x7F)
  {
    *a3 = v3 | 0x80;
    unsigned int v5 = v3 >> 7;
    if (v3 >> 14)
    {
      unint64_t v4 = a3 + 2;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v5 | 0x80;
        unsigned int v6 = v5 >> 7;
        ++v4;
        unsigned int v7 = v5 >> 14;
        v5 >>= 7;
      }
      while (v7);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v6;
    }
    else
    {
      a3[1] = v5;
      unint64_t v4 = a3 + 2;
    }
  }
  else
  {
    *a3 = v3;
    unint64_t v4 = a3 + 1;
  }
  unsigned int v8 = (2 * a2) ^ (a2 >> 31);
  if (v8 > 0x7F)
  {
    *unint64_t v4 = v8 | 0x80;
    unsigned int v10 = v8 >> 7;
    if (v8 >> 14)
    {
      unsigned int v9 = v4 + 2;
      do
      {
        *(v9 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
        unsigned int v11 = v10 >> 7;
        ++v9;
        unsigned int v12 = v10 >> 14;
        v10 >>= 7;
      }
      while (v12);
      *(v9 - sub_1000333D0((uint64_t *)this + 1) = v11;
    }
    else
    {
      v4[1] = v10;
      return v4 + 2;
    }
  }
  else
  {
    *unint64_t v4 = v8;
    return v4 + 1;
  }
  return v9;
}

unsigned char *sub_100108930(int a1, uint64_t a2, unsigned char *a3)
{
  unsigned int v3 = 8 * a1;
  if ((8 * a1) > 0x7F)
  {
    *a3 = v3 | 0x80;
    unsigned int v5 = v3 >> 7;
    if (v3 >> 14)
    {
      unint64_t v4 = a3 + 2;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v5 | 0x80;
        unsigned int v6 = v5 >> 7;
        ++v4;
        unsigned int v7 = v5 >> 14;
        v5 >>= 7;
      }
      while (v7);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v6;
    }
    else
    {
      a3[1] = v5;
      unint64_t v4 = a3 + 2;
    }
  }
  else
  {
    *a3 = v3;
    unint64_t v4 = a3 + 1;
  }
  unint64_t v8 = (2 * a2) ^ (a2 >> 63);
  if (v8 > 0x7F)
  {
    *unint64_t v4 = v8 | 0x80;
    unint64_t v10 = v8 >> 7;
    if (v8 >> 14)
    {
      unsigned int v9 = v4 + 2;
      do
      {
        *(v9 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
        unint64_t v11 = v10 >> 7;
        ++v9;
        unint64_t v12 = v10 >> 14;
        v10 >>= 7;
      }
      while (v12);
      *(v9 - sub_1000333D0((uint64_t *)this + 1) = v11;
    }
    else
    {
      v4[1] = v10;
      return v4 + 2;
    }
  }
  else
  {
    *unint64_t v4 = v8;
    return v4 + 1;
  }
  return v9;
}

_DWORD *sub_1001089EC(int a1, int a2, unsigned char *a3)
{
  unsigned int v3 = (8 * a1) | 5;
  if (v3 > 0x7F)
  {
    *a3 = (8 * a1) | 0x85;
    unsigned int v5 = (8 * a1) >> 7;
    if (v3 >> 14)
    {
      unint64_t v4 = a3 + 2;
      do
      {
        *((unsigned char *)v4 - sub_1000333D0((uint64_t *)this + 1) = v5 | 0x80;
        unsigned int v6 = v5 >> 7;
        unint64_t v4 = (_DWORD *)((char *)v4 + 1);
        unsigned int v7 = v5 >> 14;
        v5 >>= 7;
      }
      while (v7);
      *((unsigned char *)v4 - sub_1000333D0((uint64_t *)this + 1) = v6;
    }
    else
    {
      a3[1] = v5;
      unint64_t v4 = a3 + 2;
    }
  }
  else
  {
    *a3 = v3;
    unint64_t v4 = a3 + 1;
  }
  *unint64_t v4 = a2;
  return v4 + 1;
}

void *sub_100108A58(int a1, uint64_t a2, unsigned char *a3)
{
  unsigned int v3 = (8 * a1) | 1;
  if (v3 > 0x7F)
  {
    *a3 = (8 * a1) | 0x81;
    unsigned int v5 = (8 * a1) >> 7;
    if (v3 >> 14)
    {
      unint64_t v4 = a3 + 2;
      do
      {
        *((unsigned char *)v4 - sub_1000333D0((uint64_t *)this + 1) = v5 | 0x80;
        unsigned int v6 = v5 >> 7;
        unint64_t v4 = (void *)((char *)v4 + 1);
        unsigned int v7 = v5 >> 14;
        v5 >>= 7;
      }
      while (v7);
      *((unsigned char *)v4 - sub_1000333D0((uint64_t *)this + 1) = v6;
    }
    else
    {
      a3[1] = v5;
      unint64_t v4 = a3 + 2;
    }
  }
  else
  {
    *a3 = v3;
    unint64_t v4 = a3 + 1;
  }
  *unint64_t v4 = a2;
  return v4 + 1;
}

float *sub_100108AC4(int a1, unsigned char *a2, float a3)
{
  unsigned int v3 = (8 * a1) | 5;
  if (v3 > 0x7F)
  {
    *a2 = (8 * a1) | 0x85;
    unsigned int v5 = (8 * a1) >> 7;
    if (v3 >> 14)
    {
      unint64_t v4 = (float *)(a2 + 2);
      do
      {
        *((unsigned char *)v4 - sub_1000333D0((uint64_t *)this + 1) = v5 | 0x80;
        unsigned int v6 = v5 >> 7;
        unint64_t v4 = (float *)((char *)v4 + 1);
        unsigned int v7 = v5 >> 14;
        v5 >>= 7;
      }
      while (v7);
      *((unsigned char *)v4 - sub_1000333D0((uint64_t *)this + 1) = v6;
    }
    else
    {
      a2[1] = v5;
      unint64_t v4 = (float *)(a2 + 2);
    }
  }
  else
  {
    *a2 = v3;
    unint64_t v4 = (float *)(a2 + 1);
  }
  *unint64_t v4 = a3;
  return v4 + 1;
}

double *sub_100108B30(int a1, unsigned char *a2, double a3)
{
  unsigned int v3 = (8 * a1) | 1;
  if (v3 > 0x7F)
  {
    *a2 = (8 * a1) | 0x81;
    unsigned int v5 = (8 * a1) >> 7;
    if (v3 >> 14)
    {
      unint64_t v4 = (double *)(a2 + 2);
      do
      {
        *((unsigned char *)v4 - sub_1000333D0((uint64_t *)this + 1) = v5 | 0x80;
        unsigned int v6 = v5 >> 7;
        unint64_t v4 = (double *)((char *)v4 + 1);
        unsigned int v7 = v5 >> 14;
        v5 >>= 7;
      }
      while (v7);
      *((unsigned char *)v4 - sub_1000333D0((uint64_t *)this + 1) = v6;
    }
    else
    {
      a2[1] = v5;
      unint64_t v4 = (double *)(a2 + 2);
    }
  }
  else
  {
    *a2 = v3;
    unint64_t v4 = (double *)(a2 + 1);
  }
  *unint64_t v4 = a3;
  return v4 + 1;
}

unsigned char *sub_100108B9C(int a1, char a2, unsigned char *a3)
{
  unsigned int v3 = 8 * a1;
  if ((8 * a1) > 0x7F)
  {
    *a3 = v3 | 0x80;
    unsigned int v5 = v3 >> 7;
    if (v3 >> 14)
    {
      unint64_t v4 = a3 + 2;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v5 | 0x80;
        unsigned int v6 = v5 >> 7;
        ++v4;
        unsigned int v7 = v5 >> 14;
        v5 >>= 7;
      }
      while (v7);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v6;
    }
    else
    {
      a3[1] = v5;
      unint64_t v4 = a3 + 2;
    }
  }
  else
  {
    *a3 = v3;
    unint64_t v4 = a3 + 1;
  }
  *unint64_t v4 = a2;
  return v4 + 1;
}

unsigned __int8 *sub_100108C00(int a1, uint64_t a2, unsigned char *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unsigned int v5 = 8 * a1;
  unsigned int v6 = (8 * a1) | 3;
  unsigned int v7 = (8 * a1) >> 7;
  if (v6 > 0x7F)
  {
    *a3 = (8 * a1) | 0x83;
    if (v6 >> 14)
    {
      unint64_t v8 = a3 + 2;
      unsigned int v9 = v5 >> 7;
      do
      {
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
        unsigned int v10 = v9 >> 7;
        ++v8;
        unsigned int v11 = v9 >> 14;
        v9 >>= 7;
      }
      while (v11);
      *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
    }
    else
    {
      a3[1] = v7;
      unint64_t v8 = a3 + 2;
    }
  }
  else
  {
    *a3 = v6;
    unint64_t v8 = a3 + 1;
  }
  unint64_t v12 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, unsigned char *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)a2 + 96))(a2, v8, a4);
  if (*(void *)a4 <= (unint64_t)v12) {
    unint64_t v12 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v12);
  }
  unsigned int v13 = v5 | 4;
  if ((v5 | 4) > 0x7F)
  {
    unsigned __int8 *v12 = v5 | 0x84;
    if (v13 >> 14)
    {
      uint64_t v14 = v12 + 2;
      do
      {
        *(v14 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
        unsigned int v15 = v7 >> 7;
        ++v14;
        unsigned int v16 = v7 >> 14;
        v7 >>= 7;
      }
      while (v16);
      *(v14 - sub_1000333D0((uint64_t *)this + 1) = v15;
    }
    else
    {
      v12[1] = v7;
      return v12 + 2;
    }
  }
  else
  {
    unsigned __int8 *v12 = v13;
    return v12 + 1;
  }
  return v14;
}

uint64_t sub_100108D34(int a1, uint64_t a2, unsigned char *a3, uint64_t a4)
{
  unsigned int v6 = (8 * a1) | 2;
  if (v6 > 0x7F)
  {
    *a3 = (8 * a1) | 0x82;
    unsigned int v8 = (8 * a1) >> 7;
    if (v6 >> 14)
    {
      unsigned int v7 = a3 + 2;
      do
      {
        *(v7 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        ++v7;
        unsigned int v10 = v8 >> 14;
        v8 >>= 7;
      }
      while (v10);
      *(v7 - sub_1000333D0((uint64_t *)this + 1) = v9;
    }
    else
    {
      a3[1] = v8;
      unsigned int v7 = a3 + 2;
    }
  }
  else
  {
    *a3 = v6;
    unsigned int v7 = a3 + 1;
  }
  unsigned int v11 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 80))(a2);
  if (v11 > 0x7F)
  {
    unsigned char *v7 = v11 | 0x80;
    unsigned int v13 = v11 >> 7;
    if (v11 >> 14)
    {
      unint64_t v12 = v7 + 2;
      do
      {
        *(v12 - sub_1000333D0((uint64_t *)this + 1) = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        ++v12;
        unsigned int v15 = v13 >> 14;
        v13 >>= 7;
      }
      while (v15);
      *(v12 - sub_1000333D0((uint64_t *)this + 1) = v14;
    }
    else
    {
      v7[1] = v13;
      unint64_t v12 = v7 + 2;
    }
  }
  else
  {
    unsigned char *v7 = v11;
    unint64_t v12 = v7 + 1;
  }
  unsigned int v16 = *(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(*(void *)a2 + 96);
  return v16(a2, v12, a4);
}

void sub_100108E7C()
{
}

uint64_t sub_100108E90(uint64_t result)
{
  if (result)
  {
    int v1 = (void **)result;
    uint64_t v2 = *(void **)(result + 16);
    if (v2)
    {
      do
      {
        unsigned int v3 = (void *)*v2;
        operator delete(v2);
        uint64_t v2 = v3;
      }
      while (v3);
    }
    unint64_t v4 = *v1;
    int *v1 = 0;
    if (v4) {
      operator delete(v4);
    }
    operator delete();
  }
  return result;
}

uint64_t sub_100108F04(google::protobuf::Arena *this, unint64_t a2)
{
  if (a2 >> 59)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v9, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/arena.h", 558);
    unint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v9, "CHECK failed: (num_elements) <= (std::numeric_limits<size_t>::max() / sizeof(T)): ");
    unsigned int v5 = google::protobuf::internal::LogMessage::operator<<(v4, "Requested size is too large to fit into size_t.");
    google::protobuf::internal::LogFinisher::operator=((int)&v8, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v9[0].__r_.__value_.__l.__data_);
  }
  unint64_t v6 = 32 * a2;
  if (*((unsigned char *)this + 24)) {
  return google::protobuf::Arena::AllocateAlignedNoHook(this, v6);
  }
}

void sub_100108FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t *sub_100108FEC(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    unsigned int v3 = result;
    do
    {
      uint64_t result = google::protobuf::internal::ExtensionSet::Extension::Free(v3 + 5);
      unint64_t v4 = (uint64_t *)v3[1];
      if (v4)
      {
        do
        {
          unsigned int v5 = v4;
          unint64_t v4 = (uint64_t *)*v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          unsigned int v5 = (uint64_t *)v3[2];
          BOOL v6 = *v5 == (void)v3;
          unsigned int v3 = v5;
        }
        while (!v6);
      }
      unsigned int v3 = v5;
    }
    while (v5 != a2);
  }
  return result;
}

void *sub_10010905C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_1001090AC(a1, 0);
  *uint64_t result = 0;
  result[1] = a1;
  return result;
}

void *sub_1001090AC(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x10uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x10uLL, (void (*)(void *))sub_100109164);
}

void sub_100109164(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void *sub_100109184(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_1001091D4(a1, 0);
  *uint64_t result = 0;
  result[1] = a1;
  return result;
}

void *sub_1001091D4(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x10uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x10uLL, (void (*)(void *))sub_10010928C);
}

void sub_10010928C(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void *sub_1001092AC(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_1001092FC(a1, 0);
  *uint64_t result = 0;
  result[1] = a1;
  return result;
}

void *sub_1001092FC(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x10uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x10uLL, (void (*)(void *))sub_1001093B4);
}

void sub_1001093B4(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void *sub_1001093D4(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_100109424(a1, 0);
  *uint64_t result = 0;
  result[1] = a1;
  return result;
}

void *sub_100109424(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x10uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x10uLL, (void (*)(void *))sub_1001094DC);
}

void sub_1001094DC(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void *sub_1001094FC(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_10010954C(a1, 0);
  *uint64_t result = 0;
  result[1] = a1;
  return result;
}

void *sub_10010954C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x10uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x10uLL, (void (*)(void *))sub_100109604);
}

void sub_100109604(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void *sub_100109624(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_100109674(a1, 0);
  *uint64_t result = 0;
  result[1] = a1;
  return result;
}

void *sub_100109674(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x10uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x10uLL, (void (*)(void *))sub_10010972C);
}

void sub_10010972C(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void *sub_10010974C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_10010979C(a1, 0);
  *uint64_t result = 0;
  result[1] = a1;
  return result;
}

void *sub_10010979C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x10uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x10uLL, (void (*)(void *))sub_100109854);
}

void sub_100109854(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void *sub_100109874(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_1001098D0(a1, 0);
  result[2] = 0;
  *uint64_t result = a1;
  result[1] = 0;
  return result;
}

void *sub_1001098D0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x18uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))sub_100109988);
}

void sub_100109988(void *a1)
{
}

void *sub_1001099A4(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_100109A00(a1, 0);
  result[2] = 0;
  *uint64_t result = a1;
  result[1] = 0;
  return result;
}

void *sub_100109A00(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x18uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))sub_100109AB8);
}

unsigned int *sub_100109ABC(unsigned int *this, uint64_t a2)
{
  uint64_t v2 = (int *)*((void *)this + 2);
  if (!v2) {
    return sub_100109B10(this, a2);
  }
  uint64_t v3 = *v2;
  if ((int)v3 >= (int)this[3]) {
    return sub_100109B10(this, a2);
  }
  unint64_t v4 = v2 + 2;
  uint64_t v5 = (int)this[2];
  if ((int)v5 < (int)v3) {
    *(void *)&v4[2 * v3] = *(void *)&v4[2 * v5];
  }
  *(void *)&v4[2 * v5] = a2;
  this[2] = v5 + 1;
  ++**((_DWORD **)this + 2);
  return this;
}

unsigned int *sub_100109B10(unsigned int *this, uint64_t a2)
{
  uint64_t v3 = this;
  unint64_t v4 = (int *)*((void *)this + 2);
  if (!v4)
  {
    int v5 = this[3];
    goto LABEL_11;
  }
  int v5 = this[2];
  unsigned int v6 = this[3];
  if (v5 == v6)
  {
LABEL_11:
    this = google::protobuf::internal::RepeatedPtrFieldBase::Reserve(this, v5 + 1);
    goto LABEL_12;
  }
  uint64_t v7 = *v4;
  if (v7 != v6)
  {
    if (v5 >= (int)v7)
    {
      int v9 = v7 + 1;
      goto LABEL_13;
    }
    *(void *)&v4[2 * v7 + 2] = *(void *)&v4[2 * v5 + 2];
LABEL_12:
    unint64_t v4 = (int *)*((void *)v3 + 2);
    int v9 = *v4 + 1;
LABEL_13:
    *unint64_t v4 = v9;
    goto LABEL_14;
  }
  this = *(unsigned int **)&v4[2 * v5 + 2];
  if (this) {
    BOOL v8 = *(void *)v3 == 0;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    this = (unsigned int *)(*(uint64_t (**)(unsigned int *))(*(void *)this + 8))(this);
    unint64_t v4 = (int *)*((void *)v3 + 2);
  }
LABEL_14:
  uint64_t v10 = (int)v3[2];
  v3[2] = v10 + 1;
  *(void *)&v4[2 * v10 + 2] = a2;
  return this;
}

google::protobuf::internal::ExtensionSet *sub_100109BF0(void *a1, void *a2, google::protobuf::internal::ExtensionSet *this)
{
  if (a1 != a2)
  {
    int v5 = a1;
    do
    {
      google::protobuf::internal::ExtensionSet::InternalExtensionMergeFrom(this, *((_DWORD *)v5 + 8), (int **)v5 + 5);
      unsigned int v6 = (void *)v5[1];
      if (v6)
      {
        do
        {
          uint64_t v7 = v6;
          unsigned int v6 = (void *)*v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          uint64_t v7 = (void *)v5[2];
          BOOL v8 = *v7 == (void)v5;
          int v5 = v7;
        }
        while (!v8);
      }
      int v5 = v7;
    }
    while (v7 != a2);
  }
  return this;
}

google::protobuf::internal::EpsCopyInputStream *sub_100109C74(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  if (*(void *)(a1 + 8) - (void)__s + 16 >= a3)
  {
    uint64_t v6 = a3;
    std::string::assign(this, __s, a3);
    return (google::protobuf::internal::EpsCopyInputStream *)&__s[v6];
  }
  else
  {
    return google::protobuf::internal::EpsCopyInputStream::ReadStringFallback(a1, __s, a3, this);
  }
}

uint64_t sub_100109CE0(int32x2_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4 = a1[11].i32[0];
  BOOL v5 = __OFSUB__(v4--, 1);
  a1[11].i32[0] = v4;
  if (v4 < 0 != v5) {
    return 0;
  }
  ++a1[11].i32[1];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int32x2_t *))(*(void *)a2 + 88))(a2, a3, a1);
  a1[11] = vadd_s32(a1[11], (int32x2_t)0xFFFFFFFF00000001);
  __int32 v9 = a1[10].i32[0];
  a1[10].i32[0] = 0;
  if (v9 != a4) {
    return 0;
  }
  return result;
}

uint64_t sub_100109D7C(uint64_t a1, int a2, const char *a3, char **a4, uint64_t *a5)
{
  *(_OWORD *)(a1 + 3sub_1000FACE4((void *)this + 2) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 7sub_1000FACE4((void *)this + 2) = a3;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0x7FFFFFFF00000000;
  *(_DWORD *)(a1 + 88) = a2;
  *(_DWORD *)(a1 + 9sub_1000FACE4((void *)this + 2) = 0x80000000;
  *(void *)(a1 + 9sub_1000FA614((void *)this + 6) = 0;
  *(void *)(a1 + 104) = 0;
  sub_1000BB974(v8, a5, a3);
  *a4 = sub_100109DF0(a1, v8[0], (int64_t)v8[1]);
  return a1;
}

char *sub_100109DF0(uint64_t a1, char *__src, int64_t __n)
{
  *(_DWORD *)(a1 + 84) = 0;
  if (__n >= 17)
  {
    *(_DWORD *)(a1 + 28) = 16;
    uint64_t v6 = &__src[__n - 16];
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = a1 + 40;
    if (*(void *)(a1 + 72) != 1) {
      return __src;
    }
    uint64_t v7 = 2;
    BOOL v8 = __src;
    goto LABEL_6;
  }
  BOOL v8 = (char *)(a1 + 40);
  memcpy((void *)(a1 + 40), __src, __n);
  *(_DWORD *)(a1 + 28) = 0;
  *(void *)a1 = &v8[__n];
  *(void *)(a1 + 8) = &v8[__n];
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = 0;
  if (*(void *)(a1 + 72) == 1)
  {
    uint64_t v7 = __src - v8;
LABEL_6:
    *(void *)(a1 + 7sub_1000FACE4((void *)this + 2) = v7;
  }
  return v8;
}

uint64_t **sub_100109EA4(uint64_t **a1, int *a2, _OWORD *a3)
{
  uint64_t v6 = a1 + 1;
  BOOL v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        BOOL v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 8);
        if (v7 >= v9) {
          break;
        }
        BOOL v5 = *v8;
        uint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      BOOL v5 = v8[1];
      if (!v5)
      {
        uint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    BOOL v8 = a1 + 1;
LABEL_10:
    uint64_t v10 = (uint64_t *)operator new(0x40uLL);
    long long v11 = a3[1];
    *((_OWORD *)v10 + sub_1000FACE4((void *)this + 2) = *a3;
    *((_OWORD *)v10 + 3) = v11;
    sub_10002751C(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

void *sub_100109F60(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_100109FAC(a1, 0);
  result[2] = 0;
  result[1] = 0;
  *uint64_t result = result + 1;
  return result;
}

void *sub_100109FAC(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x18uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))sub_10010A064);
}

void sub_10010A064(uint64_t a1)
{
}

uint64_t *sub_10010A06C(uint64_t **a1, uint64_t *a2, int *a3, _OWORD *a4)
{
  uint64_t v6 = sub_10010A0F4(a1, a2, &v12, &v11, a3);
  int v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    BOOL v8 = (uint64_t **)v6;
    int v7 = (uint64_t *)operator new(0x40uLL);
    long long v9 = a4[1];
    *((_OWORD *)v7 + sub_1000FACE4((void *)this + 2) = *a4;
    *((_OWORD *)v7 + 3) = v9;
    sub_10002751C(a1, (uint64_t)v12, v8, v7);
  }
  return v7;
}

uint64_t *sub_10010A0F4(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, int *a5)
{
  BOOL v5 = a1 + 1;
  if (a1 + 1 == a2 || (v6 = *a5, int v7 = *((_DWORD *)a2 + 8), *a5 < v7))
  {
    BOOL v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      long long v9 = (uint64_t *)*a2;
      do
      {
        uint64_t v10 = v9;
        long long v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      unsigned int v13 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        unsigned int v13 = v10;
      }
      while (v14);
    }
    int v15 = *a5;
    if (*((_DWORD *)v10 + 8) < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          uint64_t v17 = (uint64_t *)v16;
          int v18 = *(_DWORD *)(v16 + 32);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          BOOL v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }
        if (v18 >= v15) {
          break;
        }
        BOOL v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }
      while (v16);
    }
    else
    {
      uint64_t v17 = a1 + 1;
    }
LABEL_29:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }
  uint64_t v11 = a2[1];
  if (v11)
  {
    unint64_t v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      unint64_t v12 = (uint64_t *)*v12;
    }
    while (v12);
  }
  else
  {
    uint64_t v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      BOOL v14 = *a4 == (void)v19;
      uint64_t v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= *((_DWORD *)a4 + 8))
  {
    uint64_t v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          unsigned int v21 = (uint64_t *)v20;
          int v22 = *(_DWORD *)(v20 + 32);
          if (v6 >= v22) {
            break;
          }
          uint64_t v20 = *v21;
          BOOL v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }
        if (v22 >= v6) {
          break;
        }
        BOOL v5 = v21 + 1;
        uint64_t v20 = v21[1];
      }
      while (v20);
    }
    else
    {
      unsigned int v21 = a1 + 1;
    }
LABEL_48:
    *a3 = v21;
    return v5;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

uint64_t sub_10010A29C(uint64_t a1, int *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  if (!v2) {
    return 0;
  }
  int v3 = *a2;
  uint64_t v4 = a1 + 8;
  do
  {
    int v5 = *(_DWORD *)(v2 + 32);
    BOOL v6 = v5 < v3;
    if (v5 >= v3) {
      int v7 = (uint64_t *)v2;
    }
    else {
      int v7 = (uint64_t *)(v2 + 8);
    }
    if (!v6) {
      uint64_t v4 = v2;
    }
    uint64_t v2 = *v7;
  }
  while (*v7);
  if (v4 == a1 + 8 || v3 < *(_DWORD *)(v4 + 32)) {
    return 0;
  }
  sub_1000DAE74((uint64_t **)a1, (uint64_t *)v4);
  operator delete((void *)v4);
  return 1;
}

void sub_10010A318(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/api.pb.cc", a4);
  google::protobuf::Api::Api((uint64_t)&google::protobuf::_Api_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Api_default_instance_, v4);
}

void sub_10010A388(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/api.pb.cc", a4);
  google::protobuf::Method::Method((uint64_t)&google::protobuf::_Method_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Method_default_instance_, v4);
}

void sub_10010A3F8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/api.pb.cc", a4);
  google::protobuf::_Mixin_default_instance_ = (uint64_t)off_1001D0D88;
  unk_1001EDC70 = 0;
  dword_1001EDC88 = 0;
  if (atomic_load_explicit(scc_info_Mixin_google_2fprotobuf_2fapi_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Mixin_google_2fprotobuf_2fapi_2eproto);
  }
  qword_1001EDC78 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1001EDC80 = &google::protobuf::internal::fixed_address_empty_string;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Mixin_default_instance_, v4);
}

uint64_t google::protobuf::Api::Api(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D0C28;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = a2;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_1000FACE4((void *)this + 2) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 5sub_1000FA614((void *)this + 6) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 7sub_1000FACE4((void *)this + 2) = 0;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = 0;
  *(_DWORD *)(a1 + 11sub_1000FA614((void *)this + 6) = 0;
  if (atomic_load_explicit(scc_info_Api_google_2fprotobuf_2fapi_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Api_google_2fprotobuf_2fapi_2eproto);
  }
  *(void *)(a1 + 88) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 9sub_1000FA614((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 104) = 0;
  *(_DWORD *)(a1 + 11sub_1000FACE4((void *)this + 2) = 0;
  return a1;
}

void sub_10010A54C(_Unwind_Exception *a1)
{
  sub_10010D4B4(v3);
  sub_10010D434(v2);
  sub_10010D3B4(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::Api::~Api(google::protobuf::Api *this)
{
  uint64_t v2 = *((void *)this + 11);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = *((void *)this + 12);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  if (this != (google::protobuf::Api *)&google::protobuf::_Api_default_instance_)
  {
    uint64_t v4 = (google::protobuf::SourceContext *)*((void *)this + 13);
    if (v4)
    {
      google::protobuf::SourceContext::~SourceContext(v4);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_10010D4B4((void *)this + 8);
  sub_10010D434((void *)this + 5);
  sub_10010D3B4((void *)this + 2);
}

{
  uint64_t vars8;

  google::protobuf::Api::~Api(this);
  operator delete();
}

uint64_t google::protobuf::Api::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 11sub_1000FA614((void *)this + 6) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::Api::Clear(google::protobuf::Api *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::Method **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      google::protobuf::Method::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + sub_1000FA614((void *)this + 6) = 0;
  }
  uint64_t v5 = *((unsigned int *)this + 12);
  if ((int)v5 >= 1)
  {
    BOOL v6 = (google::protobuf::Option **)(*((void *)this + 7) + 8);
    do
    {
      int v7 = *v6++;
      google::protobuf::Option::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 1sub_1000FACE4((void *)this + 2) = 0;
  }
  uint64_t v8 = *((unsigned int *)this + 18);
  if ((int)v8 >= 1)
  {
    long long v9 = (google::protobuf::Mixin **)(*((void *)this + 10) + 8);
    do
    {
      uint64_t v10 = *v9++;
      google::protobuf::Mixin::Clear(v10);
      --v8;
    }
    while (v8);
    *((_DWORD *)this + 18) = 0;
  }
  google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 11);
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 12);
  uint64_t v12 = *((void *)this + 1);
  unsigned int v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFELL);
  if (v12)
  {
    if (*v13) {
      goto LABEL_17;
    }
  }
  else if (v13)
  {
    goto LABEL_17;
  }
  uint64_t result = (google::protobuf::Arena **)*((void *)this + 13);
  if (result)
  {
    google::protobuf::SourceContext::~SourceContext((google::protobuf::SourceContext *)result);
    operator delete();
  }
LABEL_17:
  *((void *)this + 13) = 0;
  *((_DWORD *)this + 28) = 0;
  if (v12)
  {
    return sub_100035820((unint64_t *)this + 1);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Api::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unint64_t v59 = a2;
  uint64_t v5 = (unsigned int *)(a1 + 64);
  BOOL v6 = (unint64_t *)(a1 + 8);
  int v7 = (uint64_t **)(a1 + 96);
  uint64_t v8 = (unsigned int *)(a1 + 40);
  long long v9 = (unsigned int *)(a1 + 16);
  uint64_t v10 = (uint64_t **)(a1 + 88);
  while (2)
  {
    if (sub_1000355B8(a3, &v59, *(_DWORD *)(a3 + 92))) {
      return v59;
    }
    TagFallbacint k = (google::protobuf::internal *)((char *)v59 + 1);
    unsigned int v12 = *(unsigned __int8 *)v59;
    if ((*(char *)v59 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v13 = v12 + (*(unsigned __int8 *)TagFallback << 7);
    unsigned int v12 = v13 - 128;
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v59 + 2);
LABEL_6:
      unint64_t v59 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v59, (const char *)(v13 - 128));
    unint64_t v59 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
    unsigned int v12 = v20;
LABEL_7:
    switch(v12 >> 3)
    {
      case 1u:
        if (v12 != 10) {
          goto LABEL_74;
        }
        BOOL v14 = (google::protobuf::Arena *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
        if (*v6) {
          BOOL v14 = *(google::protobuf::Arena **)v14;
        }
        int v15 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v10, v14);
        unint64_t v59 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v15, (std::string::value_type *)v59, a3);
        sub_1000BB974(&v60, (uint64_t *)v15, v16);
        uint64_t v17 = v60;
        int v18 = v61;
        uint64_t v19 = "google.protobuf.Api.name";
        goto LABEL_44;
      case 2u:
        if (v12 != 18) {
          goto LABEL_74;
        }
        unsigned int v21 = (google::protobuf::internal *)((char *)TagFallback - 1);
        while (1)
        {
          int v22 = (google::protobuf::internal *)((char *)v21 + 1);
          unint64_t v59 = (google::protobuf::internal *)((char *)v21 + 1);
          int v23 = *(int **)(a1 + 32);
          if (!v23) {
            break;
          }
          uint64_t v24 = *(int *)(a1 + 24);
          int v25 = *v23;
          if ((int)v24 >= *v23)
          {
            if (v25 == *(_DWORD *)(a1 + 28))
            {
LABEL_21:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9, v25 + 1);
              int v23 = *(int **)(a1 + 32);
              int v25 = *v23;
            }
            *int v23 = v25 + 1;
            uint64_t v26 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Method>(*(void *)(a1 + 16));
            uint64_t v27 = *(void *)(a1 + 32);
            uint64_t v28 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v28 + 1;
            *(void *)(v27 + 8 * v28 + 8) = v26;
            int v22 = v59;
            goto LABEL_23;
          }
          *(_DWORD *)(a1 + 24) = v24 + 1;
          uint64_t v26 = *(void *)&v23[2 * v24 + 2];
LABEL_23:
          unsigned int v21 = sub_10010AD30(a3, v26, v22);
          unint64_t v59 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *(unsigned char *)v21 != 18) {
            goto LABEL_82;
          }
        }
        int v25 = *(_DWORD *)(a1 + 28);
        goto LABEL_21;
      case 3u:
        if (v12 != 26) {
          goto LABEL_74;
        }
        uint64_t v29 = (google::protobuf::internal *)((char *)TagFallback - 1);
        while (1)
        {
          uint64_t v30 = (google::protobuf::internal *)((char *)v29 + 1);
          unint64_t v59 = (google::protobuf::internal *)((char *)v29 + 1);
          uint64_t v31 = *(int **)(a1 + 56);
          if (!v31) {
            break;
          }
          uint64_t v32 = *(int *)(a1 + 48);
          int v33 = *v31;
          if ((int)v32 >= *v31)
          {
            if (v33 == *(_DWORD *)(a1 + 52))
            {
LABEL_34:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v33 + 1);
              uint64_t v31 = *(int **)(a1 + 56);
              int v33 = *v31;
            }
            int *v31 = v33 + 1;
            uint64_t v34 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Option>(*(void *)(a1 + 40));
            uint64_t v35 = *(void *)(a1 + 56);
            uint64_t v36 = *(int *)(a1 + 48);
            *(_DWORD *)(a1 + 48) = v36 + 1;
            *(void *)(v35 + 8 * v36 + 8) = v34;
            uint64_t v30 = v59;
            goto LABEL_36;
          }
          *(_DWORD *)(a1 + 48) = v32 + 1;
          uint64_t v34 = *(void *)&v31[2 * v32 + 2];
LABEL_36:
          uint64_t v29 = sub_10010AE00(a3, v34, v30);
          unint64_t v59 = v29;
          if (!v29) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *(unsigned char *)v29 != 26) {
            goto LABEL_82;
          }
        }
        int v33 = *(_DWORD *)(a1 + 52);
        goto LABEL_34;
      case 4u:
        if (v12 != 34) {
          goto LABEL_74;
        }
        uint64_t v37 = (google::protobuf::Arena *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
        if (*v6) {
          uint64_t v37 = *(google::protobuf::Arena **)v37;
        }
        uint64_t v38 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v7, v37);
        unint64_t v59 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v38, (std::string::value_type *)v59, a3);
        sub_1000BB974(&v60, (uint64_t *)v38, v39);
        uint64_t v17 = v60;
        int v18 = v61;
        uint64_t v19 = "google.protobuf.Api.version";
LABEL_44:
        BOOL v40 = google::protobuf::internal::VerifyUTF8(v17, v18, (google::protobuf::internal *)v19);
        if (v59) {
          int v41 = 2;
        }
        else {
          int v41 = 4;
        }
        if (!v40) {
          return 0;
        }
        goto LABEL_83;
      case 5u:
        if (v12 != 42) {
          goto LABEL_74;
        }
        uint64_t v42 = *(void *)(a1 + 104);
        if (!v42)
        {
          uint64_t v43 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
          if (*v6) {
            uint64_t v43 = (void *)*v43;
          }
          uint64_t v42 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceContext>(v43);
          *(void *)(a1 + 104) = v42;
          TagFallbacint k = v59;
        }
        uint64_t v44 = sub_10010AED0(a3, v42, TagFallback);
        goto LABEL_81;
      case 6u:
        if (v12 != 50) {
          goto LABEL_74;
        }
        uint64_t v45 = (google::protobuf::internal *)((char *)TagFallback - 1);
        while (1)
        {
          uint64_t v46 = (google::protobuf::internal *)((char *)v45 + 1);
          unint64_t v59 = (google::protobuf::internal *)((char *)v45 + 1);
          int v47 = *(int **)(a1 + 80);
          if (!v47) {
            break;
          }
          uint64_t v48 = *(int *)(a1 + 72);
          int v49 = *v47;
          if ((int)v48 >= *v47)
          {
            if (v49 == *(_DWORD *)(a1 + 76))
            {
LABEL_62:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v49 + 1);
              int v47 = *(int **)(a1 + 80);
              int v49 = *v47;
            }
            *int v47 = v49 + 1;
            uint64_t v50 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Mixin>(*(void *)(a1 + 64));
            uint64_t v51 = *(void *)(a1 + 80);
            uint64_t v52 = *(int *)(a1 + 72);
            *(_DWORD *)(a1 + 7sub_1000FACE4((void *)this + 2) = v52 + 1;
            *(void *)(v51 + 8 * v52 + 8) = v50;
            uint64_t v46 = v59;
            goto LABEL_64;
          }
          *(_DWORD *)(a1 + 7sub_1000FACE4((void *)this + 2) = v48 + 1;
          uint64_t v50 = *(void *)&v47[2 * v48 + 2];
LABEL_64:
          uint64_t v45 = sub_10010AFA0(a3, v50, v46);
          unint64_t v59 = v45;
          if (!v45) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v45 || *(unsigned char *)v45 != 50) {
            goto LABEL_82;
          }
        }
        int v49 = *(_DWORD *)(a1 + 76);
        goto LABEL_62;
      case 7u:
        if (v12 != 56) {
          goto LABEL_74;
        }
        uint64_t v53 = (google::protobuf::internal *)((char *)TagFallback + 1);
        LODWORD(v54) = *(unsigned __int8 *)TagFallback;
        if ((*(char *)TagFallback & 0x80000000) == 0) {
          goto LABEL_72;
        }
        int v55 = *(char *)v53;
        unint64_t v54 = v54 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          unint64_t v59 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v54);
          if (!v59) {
            return 0;
          }
        }
        else
        {
          uint64_t v53 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_72:
          unint64_t v59 = v53;
        }
        *(_DWORD *)(a1 + 11sub_1000FACE4((void *)this + 2) = v54;
        goto LABEL_82;
      default:
LABEL_74:
        if (v12) {
          BOOL v56 = (v12 & 7) == 4;
        }
        else {
          BOOL v56 = 1;
        }
        if (v56)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0) = v12 - 1;
          return TagFallback;
        }
        if (*v6)
        {
          uint64_t v57 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v57 = sub_10003562C(v6);
          TagFallbacint k = v59;
        }
        uint64_t v44 = google::protobuf::internal::UnknownFieldParse(v12, (google::protobuf::UnknownFieldSet *)v57, TagFallback);
LABEL_81:
        unint64_t v59 = v44;
        if (v44)
        {
LABEL_82:
          int v41 = 2;
LABEL_83:
          if (v41 != 2) {
            return 0;
          }
          continue;
        }
        return 0;
    }
  }
}

google::protobuf::internal *sub_10010AD30(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    BOOL v6 = result;
  }
  else
  {
    BOOL v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::Method::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *sub_10010AE00(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    BOOL v6 = result;
  }
  else
  {
    BOOL v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::Option::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *sub_10010AED0(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    BOOL v6 = result;
  }
  else
  {
    BOOL v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::SourceContext::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *sub_10010AFA0(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    BOOL v6 = result;
  }
  else
  {
    BOOL v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::Mixin::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Api::_InternalSerialize(google::protobuf::Api *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v7 = *((void *)this + 11) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    uint64_t v8 = *(const char **)(v7 + 8);
    if (!v8) {
      goto LABEL_7;
    }
    unint64_t v7 = *(void *)v7;
    goto LABEL_6;
  }
  uint64_t v8 = (const char *)*(unsigned __int8 *)(v7 + 23);
  if (*(unsigned char *)(v7 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v7, v8, 1, (google::protobuf::internal *)"google.protobuf.Api.name");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 1, (const void **)(*((void *)this + 11) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_7:
  int v9 = *((_DWORD *)this + 6);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      }
      BOOL v11 = *(google::protobuf::Method **)(*((void *)this + 4) + 8 * i + 8);
      *(unsigned char *)a2 = 18;
      unsigned int v12 = *((_DWORD *)v11 + 18);
      if (v12 > 0x7F)
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unsigned int v14 = v12 >> 7;
        if (v12 >> 14)
        {
          unsigned int v13 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v13 - sub_1000333D0((uint64_t *)this + 1) = v14 | 0x80;
            unsigned int v15 = v14 >> 7;
            unsigned int v13 = (google::protobuf::UnknownFieldSet *)((char *)v13 + 1);
            unsigned int v16 = v14 >> 14;
            v14 >>= 7;
          }
          while (v16);
          *((unsigned char *)v13 - sub_1000333D0((uint64_t *)this + 1) = v15;
        }
        else
        {
          *((unsigned char *)a2 + sub_1000FACE4((void *)this + 2) = v14;
          unsigned int v13 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v12;
        unsigned int v13 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::Method::_InternalSerialize(v11, v13, a3, a4);
    }
  }
  int v17 = *((_DWORD *)this + 12);
  if (v17)
  {
    for (int j = 0; j != v17; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      }
      uint64_t v19 = *(google::protobuf::Option **)(*((void *)this + 7) + 8 * j + 8);
      *(unsigned char *)a2 = 26;
      unsigned int v20 = *((_DWORD *)v19 + 8);
      if (v20 > 0x7F)
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v20 | 0x80;
        unsigned int v22 = v20 >> 7;
        if (v20 >> 14)
        {
          unsigned int v21 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v21 - sub_1000333D0((uint64_t *)this + 1) = v22 | 0x80;
            unsigned int v23 = v22 >> 7;
            unsigned int v21 = (google::protobuf::UnknownFieldSet *)((char *)v21 + 1);
            unsigned int v24 = v22 >> 14;
            v22 >>= 7;
          }
          while (v24);
          *((unsigned char *)v21 - sub_1000333D0((uint64_t *)this + 1) = v23;
        }
        else
        {
          *((unsigned char *)a2 + sub_1000FACE4((void *)this + 2) = v22;
          unsigned int v21 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v20;
        unsigned int v21 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::Option::_InternalSerialize(v19, v21, a3, a4);
    }
  }
  unint64_t v25 = *((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v25 + 23) & 0x80000000) == 0)
  {
    uint64_t v26 = (const char *)*(unsigned __int8 *)(v25 + 23);
    if (!*(unsigned char *)(v25 + 23)) {
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  uint64_t v26 = *(const char **)(v25 + 8);
  if (v26)
  {
    unint64_t v25 = *(void *)v25;
LABEL_36:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v25, v26, 1, (google::protobuf::internal *)"google.protobuf.Api.version");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 4, (const void **)(*((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_37:
  if (this != (google::protobuf::Api *)&google::protobuf::_Api_default_instance_)
  {
    uint64_t v27 = (google::protobuf::SourceContext *)*((void *)this + 13);
    if (v27)
    {
      if (*(void *)a3 <= (unint64_t)a2)
      {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
        uint64_t v27 = (google::protobuf::SourceContext *)*((void *)this + 13);
      }
      *(unsigned char *)a2 = 42;
      unsigned int v28 = *((_DWORD *)v27 + 6);
      if (v28 > 0x7F)
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v28 | 0x80;
        unsigned int v30 = v28 >> 7;
        if (v28 >> 14)
        {
          uint64_t v29 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v29 - sub_1000333D0((uint64_t *)this + 1) = v30 | 0x80;
            unsigned int v31 = v30 >> 7;
            uint64_t v29 = (google::protobuf::UnknownFieldSet *)((char *)v29 + 1);
            unsigned int v32 = v30 >> 14;
            v30 >>= 7;
          }
          while (v32);
          *((unsigned char *)v29 - sub_1000333D0((uint64_t *)this + 1) = v31;
        }
        else
        {
          *((unsigned char *)a2 + sub_1000FACE4((void *)this + 2) = v30;
          uint64_t v29 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v28;
        uint64_t v29 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::SourceContext::_InternalSerialize(v27, v29, a3, a4);
    }
  }
  int v33 = *((_DWORD *)this + 18);
  if (v33)
  {
    for (int k = 0; k != v33; ++k)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      }
      uint64_t v35 = *(google::protobuf::Mixin **)(*((void *)this + 10) + 8 * k + 8);
      *(unsigned char *)a2 = 50;
      unsigned int v36 = *((_DWORD *)v35 + 8);
      if (v36 > 0x7F)
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v36 | 0x80;
        unsigned int v38 = v36 >> 7;
        if (v36 >> 14)
        {
          uint64_t v37 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v37 - sub_1000333D0((uint64_t *)this + 1) = v38 | 0x80;
            unsigned int v39 = v38 >> 7;
            uint64_t v37 = (google::protobuf::UnknownFieldSet *)((char *)v37 + 1);
            unsigned int v40 = v38 >> 14;
            v38 >>= 7;
          }
          while (v40);
          *((unsigned char *)v37 - sub_1000333D0((uint64_t *)this + 1) = v39;
        }
        else
        {
          *((unsigned char *)a2 + sub_1000FACE4((void *)this + 2) = v38;
          uint64_t v37 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v36;
        uint64_t v37 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::Mixin::_InternalSerialize(v35, v37, a3, a4);
    }
  }
  unsigned int v41 = *((_DWORD *)this + 28);
  if (v41)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      unsigned int v41 = *((_DWORD *)this + 28);
    }
    *(unsigned char *)a2 = 56;
    if (v41 > 0x7F)
    {
      *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v41 | 0x80;
      unint64_t v42 = (unint64_t)(int)v41 >> 7;
      if (v41 >> 14)
      {
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        do
        {
          *((unsigned char *)a2 - sub_1000333D0((uint64_t *)this + 1) = v42 | 0x80;
          unint64_t v43 = v42 >> 7;
          a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
          unint64_t v44 = v42 >> 14;
          v42 >>= 7;
        }
        while (v44);
        *((unsigned char *)a2 - sub_1000333D0((uint64_t *)this + 1) = v43;
      }
      else
      {
        *((unsigned char *)a2 + sub_1000FACE4((void *)this + 2) = v42;
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
      }
    }
    else
    {
      *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v41;
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  uint64_t v45 = *((void *)this + 1);
  if ((v45 & 1) == 0) {
    return a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v45 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::Api::ByteSizeLong(google::protobuf::Api *this)
{
  uint64_t v2 = *((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (google::protobuf::Method **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      BOOL v6 = *v4++;
      unint64_t v7 = google::protobuf::Method::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 12);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 7);
  if (v10) {
    BOOL v11 = (google::protobuf::Option **)(v10 + 8);
  }
  else {
    BOOL v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      unsigned int v14 = google::protobuf::Option::ByteSizeLong(v13);
      v9 += (uint64_t)&v14[(9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6];
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *((int *)this + 18);
  unsigned int v16 = (const google::protobuf::UnknownFieldSet *)(v9 + v15);
  uint64_t v17 = *((void *)this + 10);
  if (v17) {
    int v18 = (google::protobuf::Mixin **)(v17 + 8);
  }
  else {
    int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      unsigned int v20 = *v18++;
      unsigned int v21 = google::protobuf::Mixin::ByteSizeLong(v20);
      unsigned int v16 = (const google::protobuf::UnknownFieldSet *)((char *)v16
                                                      + (void)v21
                                                      + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6));
      v19 -= 8;
    }
    while (v19);
  }
  unint64_t v22 = *((void *)this + 11) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  if (*(char *)(v22 + 23) < 0)
  {
    if (!*(void *)(v22 + 8)) {
      goto LABEL_26;
    }
  }
  else if (!*(unsigned char *)(v22 + 23))
  {
    goto LABEL_26;
  }
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  unsigned int v16 = (const google::protobuf::UnknownFieldSet *)((char *)v16 + v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_26:
  unint64_t v25 = *((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
  if (*(char *)(v25 + 23) < 0)
  {
    if (!*(void *)(v25 + 8)) {
      goto LABEL_31;
    }
  }
  else if (!*(unsigned char *)(v25 + 23))
  {
    goto LABEL_31;
  }
  uint64_t v27 = *(void *)(v25 + 8);
  if ((v26 & 0x80u) == 0) {
    uint64_t v27 = v26;
  }
  unsigned int v16 = (const google::protobuf::UnknownFieldSet *)((char *)v16 + v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_31:
  if (this != (google::protobuf::Api *)&google::protobuf::_Api_default_instance_)
  {
    unsigned int v28 = (google::protobuf::SourceContext *)*((void *)this + 13);
    if (v28)
    {
      uint64_t v29 = google::protobuf::SourceContext::ByteSizeLong(v28);
      unsigned int v16 = (const google::protobuf::UnknownFieldSet *)&v29[((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v16];
    }
  }
  int v30 = *((_DWORD *)this + 28);
  uint64_t v31 = 11;
  uint64_t v32 = ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v30 >= 0) {
    uint64_t v31 = v32;
  }
  int v33 = (const google::protobuf::UnknownFieldSet *)((char *)v16 + v31);
  if (v30) {
    uint64_t v34 = v33;
  }
  else {
    uint64_t v34 = v16;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Api *)((char *)this + 8), v34, (_DWORD *)this + 29);
  }
  else
  {
    *((_DWORD *)this + 29) = v34;
    return (char *)v34;
  }
}

void google::protobuf::Api::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::Api::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::Api::MergeFrom(std::string *this, const google::protobuf::Api *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    unint64_t v7 = (google::protobuf::Method **)(*((void *)a2 + 4) + 8);
    uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = sub_10010D534((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v8, v7, v6, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v9 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v6;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v9;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v9) {
      *std::string::size_type size = v9;
    }
  }
  unsigned int v11 = *((_DWORD *)a2 + 12);
  if (v11)
  {
    uint64_t v12 = (const google::protobuf::Option **)(*((void *)a2 + 7) + 8);
    unsigned int v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 12));
    this = sub_10010D5F4((std::string *)((char *)v3 + 40), (std::string **)v13, v12, v11, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    signed int v14 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v11;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v14;
    uint64_t v15 = (signed int *)v3[2].__r_.__value_.__l.__size_;
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  unsigned int v16 = *((_DWORD *)a2 + 18);
  if (v16)
  {
    uint64_t v17 = (google::protobuf::Mixin **)(*((void *)a2 + 10) + 8);
    int v18 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[2].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 18));
    this = sub_10010D6B4((std::string *)((char *)v3 + 64), (std::string **)v18, v17, v16, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    signed int v19 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v16;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v19;
    unsigned int v20 = (signed int *)v3[3].__r_.__value_.__l.__size_;
    if (*v20 < v19) {
      *unsigned int v20 = v19;
    }
  }
  unint64_t v21 = *((void *)a2 + 11) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v21 + 23) < 0)
  {
    if (!*(void *)(v21 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v21 + 23))
  {
    goto LABEL_19;
  }
  unint64_t v22 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    unint64_t v22 = *(google::protobuf::Arena **)v22;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[3].__r_.__value_.__r.__words[2], v21, v22);
LABEL_19:
  unint64_t v23 = *((void *)a2 + 12) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v23 + 23) < 0)
  {
    if (!*(void *)(v23 + 8)) {
      goto LABEL_26;
    }
  }
  else if (!*(unsigned char *)(v23 + 23))
  {
    goto LABEL_26;
  }
  uint64_t v24 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    uint64_t v24 = *(google::protobuf::Arena **)v24;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[4], v23, v24);
LABEL_26:
  if (a2 != (const google::protobuf::Api *)&google::protobuf::_Api_default_instance_)
  {
    unint64_t v25 = (const google::protobuf::SourceContext *)*((void *)a2 + 13);
    if (v25)
    {
      uint64_t v26 = (std::string *)v3[4].__r_.__value_.__l.__size_;
      if (!v26)
      {
        uint64_t v27 = (void *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
        if (*p_size) {
          uint64_t v27 = (void *)*v27;
        }
        uint64_t v26 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceContext>(v27);
        v3[4].__r_.__value_.__l.__size_ = (std::string::size_type)v26;
        unint64_t v25 = (const google::protobuf::SourceContext *)*((void *)a2 + 13);
      }
      if (v25) {
        unsigned int v28 = v25;
      }
      else {
        unsigned int v28 = (const google::protobuf::SourceContext *)&google::protobuf::_SourceContext_default_instance_;
      }
      this = google::protobuf::SourceContext::MergeFrom(v26, v28);
    }
  }
  int v29 = *((_DWORD *)a2 + 28);
  if (v29) {
    LODWORD(v3[4].__r_.__value_.__r.__words[2]) = v29;
  }
  return this;
}

void google::protobuf::Api::CopyFrom(google::protobuf::Api *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::Api::Clear(this);
    google::protobuf::Api::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::Api::IsInitialized(google::protobuf::Api *this)
{
  return 1;
}

uint64_t google::protobuf::Api::GetMetadata(google::protobuf::Api *this)
{
  return *off_1001EABB8;
}

uint64_t google::protobuf::Method::Method(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D0CD8;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_1000FACE4((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 7sub_1000FACE4((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Method_google_2fprotobuf_2fapi_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Method_google_2fprotobuf_2fapi_2eproto);
  }
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fapi_2eproto, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 48) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 5sub_1000FA614((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 64) = 0;
  return a1;
}

void sub_10010BB88(_Unwind_Exception *a1)
{
  sub_10010D434(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::Method::~Method(google::protobuf::Method *this)
{
  uint64_t v2 = *((void *)this + 5);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = *((void *)this + 6);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v4 = *((void *)this + 7);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_10010D434((void *)this + 2);
}

{
  uint64_t vars8;

  google::protobuf::Method::~Method(this);
  operator delete();
}

uint64_t google::protobuf::Method::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 7sub_1000FACE4((void *)this + 2) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::Method::Clear(google::protobuf::Method *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::Option **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      google::protobuf::Option::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + sub_1000FA614((void *)this + 6) = 0;
  }
  google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 5);
  google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 6);
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 7);
  char v7 = *((unsigned char *)this + 8);
  unsigned int v6 = (unint64_t *)((char *)this + 8);
  v6[7] = 0;
  if (v7)
  {
    return sub_100035820(v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Method::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v52 = a2;
  uint64_t v5 = (unsigned int *)(a1 + 16);
  unsigned int v6 = (unint64_t *)(a1 + 8);
  char v7 = (uint64_t **)(a1 + 56);
  uint64_t v8 = (uint64_t **)(a1 + 48);
  signed int v9 = (uint64_t **)(a1 + 40);
  while (2)
  {
    if ((sub_1000355B8(a3, &v52, *(_DWORD *)(a3 + 92)) & 1) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v52 + 1);
      unsigned int v11 = *(unsigned __int8 *)v52;
      if (*(char *)v52 < 0)
      {
        unsigned int v12 = v11 + (*(unsigned __int8 *)TagFallback << 7);
        unsigned int v11 = v12 - 128;
        if (*(char *)TagFallback < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v52, (const char *)(v12 - 128));
          uint64_t v52 = TagFallback;
          if (!TagFallback) {
            return TagFallback;
          }
          unsigned int v11 = v19;
LABEL_7:
          switch(v11 >> 3)
          {
            case 1u:
              if (v11 != 10) {
                goto LABEL_56;
              }
              unsigned int v13 = (google::protobuf::Arena *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
              if (*v6) {
                unsigned int v13 = *(google::protobuf::Arena **)v13;
              }
              signed int v14 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v9, v13);
              uint64_t v52 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v14, (std::string::value_type *)v52, a3);
              sub_1000BB974(&v53, (uint64_t *)v14, v15);
              unsigned int v16 = v53;
              uint64_t v17 = v54;
              int v18 = "google.protobuf.Method.name";
              goto LABEL_27;
            case 2u:
              if (v11 != 18) {
                goto LABEL_56;
              }
              unsigned int v20 = (google::protobuf::Arena *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
              if (*v6) {
                unsigned int v20 = *(google::protobuf::Arena **)v20;
              }
              unint64_t v21 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v8, v20);
              uint64_t v52 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v21, (std::string::value_type *)v52, a3);
              sub_1000BB974(&v53, (uint64_t *)v21, v22);
              unsigned int v16 = v53;
              uint64_t v17 = v54;
              int v18 = "google.protobuf.Method.request_type_url";
              goto LABEL_27;
            case 3u:
              if (v11 != 24) {
                goto LABEL_56;
              }
              unint64_t v23 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v24 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_22;
              }
              int v25 = *(char *)v23;
              unint64_t v24 = v24 + (v25 << 7) - 128;
              if (v25 < 0)
              {
                int v47 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v24);
                uint64_t v52 = v47;
                *(unsigned char *)(a1 + 64) = v48 != 0;
                if (!v47) {
                  return 0;
                }
              }
              else
              {
                unint64_t v23 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_22:
                uint64_t v52 = v23;
                *(unsigned char *)(a1 + 64) = v24 != 0;
              }
              goto LABEL_63;
            case 4u:
              if (v11 != 34) {
                goto LABEL_56;
              }
              uint64_t v26 = (google::protobuf::Arena *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
              if (*v6) {
                uint64_t v26 = *(google::protobuf::Arena **)v26;
              }
              uint64_t v27 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v7, v26);
              uint64_t v52 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v27, (std::string::value_type *)v52, a3);
              sub_1000BB974(&v53, (uint64_t *)v27, v28);
              unsigned int v16 = v53;
              uint64_t v17 = v54;
              int v18 = "google.protobuf.Method.response_type_url";
LABEL_27:
              BOOL v29 = google::protobuf::internal::VerifyUTF8(v16, v17, (google::protobuf::internal *)v18);
              if (v52) {
                int v30 = 2;
              }
              else {
                int v30 = 4;
              }
              if (!v29) {
                return 0;
              }
              goto LABEL_64;
            case 5u:
              if (v11 != 40) {
                goto LABEL_56;
              }
              uint64_t v31 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v32 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_36;
              }
              int v33 = *(char *)v31;
              unint64_t v32 = v32 + (v33 << 7) - 128;
              if (v33 < 0)
              {
                int v49 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v32);
                uint64_t v52 = v49;
                *(unsigned char *)(a1 + 6sub_1000FA614((void *)this + 5) = v50 != 0;
                if (!v49) {
                  return 0;
                }
              }
              else
              {
                uint64_t v31 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_36:
                uint64_t v52 = v31;
                *(unsigned char *)(a1 + 6sub_1000FA614((void *)this + 5) = v32 != 0;
              }
              goto LABEL_63;
            case 6u:
              if (v11 != 50) {
                goto LABEL_56;
              }
              uint64_t v34 = (google::protobuf::internal *)((char *)TagFallback - 1);
              break;
            case 7u:
              if (v11 != 56) {
                goto LABEL_56;
              }
              unint64_t v42 = (google::protobuf::internal *)((char *)TagFallback + 1);
              LODWORD(v43) = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_54;
              }
              int v44 = *(char *)v42;
              unint64_t v43 = v43 + (v44 << 7) - 128;
              if (v44 < 0)
              {
                uint64_t v52 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v43);
                if (!v52) {
                  return 0;
                }
              }
              else
              {
                unint64_t v42 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_54:
                uint64_t v52 = v42;
              }
              *(_DWORD *)(a1 + 68) = v43;
              goto LABEL_63;
            default:
LABEL_56:
              if (v11) {
                BOOL v45 = (v11 & 7) == 4;
              }
              else {
                BOOL v45 = 1;
              }
              if (v45)
              {
                *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fapi_2eproto, 0) = v11 - 1;
                return TagFallback;
              }
              if (*v6)
              {
                uint64_t v46 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
              }
              else
              {
                uint64_t v46 = sub_10003562C(v6);
                TagFallbacint k = v52;
              }
              uint64_t v52 = google::protobuf::internal::UnknownFieldParse(v11, (google::protobuf::UnknownFieldSet *)v46, TagFallback);
              if (!v52) {
                return 0;
              }
LABEL_63:
              int v30 = 2;
LABEL_64:
              if (v30 == 2) {
                continue;
              }
              return 0;
          }
          while (1)
          {
            uint64_t v35 = (google::protobuf::internal *)((char *)v34 + 1);
            uint64_t v52 = (google::protobuf::internal *)((char *)v34 + 1);
            unsigned int v36 = *(int **)(a1 + 32);
            if (!v36) {
              break;
            }
            uint64_t v37 = *(int *)(a1 + 24);
            int v38 = *v36;
            if ((int)v37 >= *v36)
            {
              if (v38 == *(_DWORD *)(a1 + 28))
              {
LABEL_44:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v38 + 1);
                unsigned int v36 = *(int **)(a1 + 32);
                int v38 = *v36;
              }
              *unsigned int v36 = v38 + 1;
              uint64_t v39 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Option>(*(void *)(a1 + 16));
              uint64_t v40 = *(void *)(a1 + 32);
              uint64_t v41 = *(int *)(a1 + 24);
              *(_DWORD *)(a1 + 24) = v41 + 1;
              *(void *)(v40 + 8 * v41 + 8) = v39;
              uint64_t v35 = v52;
              goto LABEL_46;
            }
            *(_DWORD *)(a1 + 24) = v37 + 1;
            uint64_t v39 = *(void *)&v36[2 * v37 + 2];
LABEL_46:
            uint64_t v34 = sub_10010AE00(a3, v39, v35);
            uint64_t v52 = v34;
            if (!v34) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v34 || *(unsigned char *)v34 != 50) {
              goto LABEL_63;
            }
          }
          int v38 = *(_DWORD *)(a1 + 28);
          goto LABEL_44;
        }
        TagFallbacint k = (google::protobuf::internal *)((char *)v52 + 2);
      }
      uint64_t v52 = TagFallback;
      goto LABEL_7;
    }
    return v52;
  }
}

const google::protobuf::UnknownFieldSet *google::protobuf::Method::_InternalSerialize(google::protobuf::Method *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v7 = *((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    uint64_t v8 = *(const char **)(v7 + 8);
    if (!v8) {
      goto LABEL_7;
    }
    unint64_t v7 = *(void *)v7;
    goto LABEL_6;
  }
  uint64_t v8 = (const char *)*(unsigned __int8 *)(v7 + 23);
  if (*(unsigned char *)(v7 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v7, v8, 1, (google::protobuf::internal *)"google.protobuf.Method.name");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 1, (const void **)(*((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_7:
  unint64_t v9 = *((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    uint64_t v10 = *(const char **)(v9 + 8);
    if (!v10) {
      goto LABEL_13;
    }
    unint64_t v9 = *(void *)v9;
    goto LABEL_12;
  }
  uint64_t v10 = (const char *)*(unsigned __int8 *)(v9 + 23);
  if (*(unsigned char *)(v9 + 23))
  {
LABEL_12:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v9, v10, 1, (google::protobuf::internal *)"google.protobuf.Method.request_type_url");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 2, (const void **)(*((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_13:
  if (*((unsigned char *)this + 64))
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      char v11 = *((unsigned char *)this + 64);
    }
    else
    {
      char v11 = 1;
    }
    *(unsigned char *)a2 = 24;
    *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v11;
    a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  }
  unint64_t v12 = *((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    unsigned int v13 = *(const char **)(v12 + 8);
    if (!v13) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)v12;
    goto LABEL_22;
  }
  unsigned int v13 = (const char *)*(unsigned __int8 *)(v12 + 23);
  if (*(unsigned char *)(v12 + 23))
  {
LABEL_22:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v12, v13, 1, (google::protobuf::internal *)"google.protobuf.Method.response_type_url");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 4, (const void **)(*((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_23:
  if (*((unsigned char *)this + 65))
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      char v14 = *((unsigned char *)this + 65);
    }
    else
    {
      char v14 = 1;
    }
    *(unsigned char *)a2 = 40;
    *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v14;
    a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
  }
  int v15 = *((_DWORD *)this + 6);
  if (v15)
  {
    for (int i = 0; i != v15; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      }
      uint64_t v17 = *(google::protobuf::Option **)(*((void *)this + 4) + 8 * i + 8);
      *(unsigned char *)a2 = 50;
      unsigned int v18 = *((_DWORD *)v17 + 8);
      if (v18 > 0x7F)
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v18 | 0x80;
        unsigned int v20 = v18 >> 7;
        if (v18 >> 14)
        {
          unsigned int v19 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v19 - sub_1000333D0((uint64_t *)this + 1) = v20 | 0x80;
            unsigned int v21 = v20 >> 7;
            unsigned int v19 = (google::protobuf::UnknownFieldSet *)((char *)v19 + 1);
            unsigned int v22 = v20 >> 14;
            v20 >>= 7;
          }
          while (v22);
          *((unsigned char *)v19 - sub_1000333D0((uint64_t *)this + 1) = v21;
        }
        else
        {
          *((unsigned char *)a2 + sub_1000FACE4((void *)this + 2) = v20;
          unsigned int v19 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v18;
        unsigned int v19 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::Option::_InternalSerialize(v17, v19, a3, a4);
    }
  }
  unsigned int v23 = *((_DWORD *)this + 17);
  if (v23)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      unsigned int v23 = *((_DWORD *)this + 17);
    }
    *(unsigned char *)a2 = 56;
    if (v23 > 0x7F)
    {
      *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v23 | 0x80;
      unint64_t v24 = (unint64_t)(int)v23 >> 7;
      if (v23 >> 14)
      {
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        do
        {
          *((unsigned char *)a2 - sub_1000333D0((uint64_t *)this + 1) = v24 | 0x80;
          unint64_t v25 = v24 >> 7;
          a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
          unint64_t v26 = v24 >> 14;
          v24 >>= 7;
        }
        while (v26);
        *((unsigned char *)a2 - sub_1000333D0((uint64_t *)this + 1) = v25;
      }
      else
      {
        *((unsigned char *)a2 + sub_1000FACE4((void *)this + 2) = v24;
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
      }
    }
    else
    {
      *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v23;
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  uint64_t v27 = *((void *)this + 1);
  if ((v27 & 1) == 0) {
    return a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v27 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::Method::ByteSizeLong(google::protobuf::Method *this)
{
  uint64_t v2 = *((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (google::protobuf::Option **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      unsigned int v6 = *v4++;
      unint64_t v7 = google::protobuf::Option::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  unint64_t v8 = *((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_14;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_14;
  }
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  unint64_t v11 = *((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_19:
  unint64_t v14 = *((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  if (*(char *)(v14 + 23) < 0)
  {
    if (!*(void *)(v14 + 8)) {
      goto LABEL_24;
    }
  }
  else if (!*(unsigned char *)(v14 + 23))
  {
    goto LABEL_24;
  }
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_24:
  if (*((unsigned char *)this + 64)) {
    uint64_t v17 = v2 + 2;
  }
  else {
    uint64_t v17 = v2;
  }
  if (*((unsigned char *)this + 65)) {
    unsigned int v18 = (const google::protobuf::UnknownFieldSet *)(v17 + 2);
  }
  else {
    unsigned int v18 = (const google::protobuf::UnknownFieldSet *)v17;
  }
  int v19 = *((_DWORD *)this + 17);
  if (v19)
  {
    uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v19 >= 0) {
      uint64_t v21 = v20;
    }
    else {
      uint64_t v21 = 11;
    }
    unsigned int v18 = (const google::protobuf::UnknownFieldSet *)((char *)v18 + v21);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Method *)((char *)this + 8), v18, (_DWORD *)this + 18);
  }
  else
  {
    *((_DWORD *)this + 18) = v18;
    return (char *)v18;
  }
}

void google::protobuf::Method::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::Method::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::Method::MergeFrom(std::string *this, const google::protobuf::Method *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    unint64_t v7 = (const google::protobuf::Option **)(*((void *)a2 + 4) + 8);
    unint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = sub_10010D5F4((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v8, v7, v6, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v9 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v6;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v9;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v9) {
      *std::string::size_type size = v9;
    }
  }
  unint64_t v11 = *((void *)a2 + 5) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v12 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    uint64_t v12 = *(google::protobuf::Arena **)v12;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1].__r_.__value_.__r.__words[2], v11, v12);
LABEL_13:
  unint64_t v13 = *((void *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v13 + 23) < 0)
  {
    if (!*(void *)(v13 + 8)) {
      goto LABEL_20;
    }
  }
  else if (!*(unsigned char *)(v13 + 23))
  {
    goto LABEL_20;
  }
  unint64_t v14 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    unint64_t v14 = *(google::protobuf::Arena **)v14;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[2], v13, v14);
LABEL_20:
  unint64_t v15 = *((void *)a2 + 7) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_27;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_27;
  }
  uint64_t v16 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    uint64_t v16 = *(google::protobuf::Arena **)v16;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[2].__r_.__value_.__l.__size_, v15, v16);
LABEL_27:
  if (*((unsigned char *)a2 + 64)) {
    v3[2].__r_.__value_.__s.__data_[16] = 1;
  }
  if (*((unsigned char *)a2 + 65)) {
    v3[2].__r_.__value_.__s.__data_[17] = 1;
  }
  int v17 = *((_DWORD *)a2 + 17);
  if (v17) {
    HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = v17;
  }
  return this;
}

void google::protobuf::Method::CopyFrom(google::protobuf::Method *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::Method::Clear(this);
    google::protobuf::Method::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::Method::IsInitialized(google::protobuf::Method *this)
{
  return 1;
}

uint64_t google::protobuf::Method::GetMetadata(google::protobuf::Method *this)
{
  return off_1001EABB8[2];
}

void google::protobuf::Mixin::~Mixin(google::protobuf::Mixin *this)
{
  uint64_t v1 = *((void *)this + 2);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  google::protobuf::Mixin::~Mixin(this);
  operator delete();
}

uint64_t google::protobuf::Mixin::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 3sub_1000FACE4((void *)this + 2) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::Mixin::Clear(google::protobuf::Mixin *this)
{
  google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 2);
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 3);
  char v4 = *((unsigned char *)this + 8);
  uint64_t v3 = (unint64_t *)((char *)this + 8);
  if (v4)
  {
    return sub_100035820(v3);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Mixin::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unint64_t v26 = a2;
  char v4 = (unint64_t *)(a1 + 8);
  uint64_t v5 = (uint64_t **)(a1 + 24);
  unsigned int v6 = (uint64_t **)(a1 + 16);
  while (1)
  {
    if (sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92))) {
      return v26;
    }
    TagFallbacint k = (google::protobuf::internal *)((char *)v26 + 1);
    unsigned int v8 = *(unsigned __int8 *)v26;
    if ((*(char *)v26 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v9 = v8 + (*(unsigned __int8 *)TagFallback << 7);
    unsigned int v8 = v9 - 128;
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v26 + 2);
LABEL_6:
      unint64_t v26 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v26, (const char *)(v9 - 128));
    unint64_t v26 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
    unsigned int v8 = v24;
LABEL_7:
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_12;
    }
    unint64_t v14 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      unint64_t v14 = *(google::protobuf::Arena **)v14;
    }
    unint64_t v15 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v5, v14);
    unint64_t v26 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v15, (std::string::value_type *)v26, a3);
    sub_1000BB974(&v27, (uint64_t *)v15, v16);
    int v17 = v27;
    unsigned int v18 = v28;
    int v19 = "google.protobuf.Mixin.root";
LABEL_27:
    BOOL v23 = google::protobuf::internal::VerifyUTF8(v17, v18, (google::protobuf::internal *)v19);
    if (v26) {
      int v13 = 2;
    }
    else {
      int v13 = 4;
    }
    if (!v23) {
      return 0;
    }
LABEL_31:
    if (v13 != 2) {
      return 0;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v20 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      uint64_t v20 = *(google::protobuf::Arena **)v20;
    }
    uint64_t v21 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v6, v20);
    unint64_t v26 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v21, (std::string::value_type *)v26, a3);
    sub_1000BB974(&v27, (uint64_t *)v21, v22);
    int v17 = v27;
    unsigned int v18 = v28;
    int v19 = "google.protobuf.Mixin.name";
    goto LABEL_27;
  }
LABEL_12:
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v4)
    {
      uint64_t v12 = (google::protobuf::Arena **)((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else
    {
      uint64_t v12 = sub_10003562C(v4);
      TagFallbacint k = v26;
    }
    unint64_t v26 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, TagFallback);
    if (!v26) {
      return 0;
    }
    int v13 = 2;
    goto LABEL_31;
  }
  *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fapi_2eproto, 0) = v8 - 1;
  return TagFallback;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Mixin::_InternalSerialize(google::protobuf::Mixin *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v7 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    unsigned int v8 = *(const char **)(v7 + 8);
    if (!v8) {
      goto LABEL_7;
    }
    unint64_t v7 = *(void *)v7;
    goto LABEL_6;
  }
  unsigned int v8 = (const char *)*(unsigned __int8 *)(v7 + 23);
  if (*(unsigned char *)(v7 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v7, v8, 1, (google::protobuf::internal *)"google.protobuf.Mixin.name");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 1, (const void **)(*((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_7:
  unint64_t v9 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    uint64_t v10 = *(const char **)(v9 + 8);
    if (!v10) {
      goto LABEL_13;
    }
    unint64_t v9 = *(void *)v9;
    goto LABEL_12;
  }
  uint64_t v10 = (const char *)*(unsigned __int8 *)(v9 + 23);
  if (*(unsigned char *)(v9 + 23))
  {
LABEL_12:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v9, v10, 1, (google::protobuf::internal *)"google.protobuf.Mixin.root");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 2, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_13:
  uint64_t v11 = *((void *)this + 1);
  if ((v11 & 1) == 0) {
    return a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v11 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::Mixin::ByteSizeLong(google::protobuf::Mixin *this)
{
  unint64_t v1 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    char v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  char v4 = (const google::protobuf::UnknownFieldSet *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  unint64_t v5 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  char v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Mixin *)((char *)this + 8), v4, (_DWORD *)this + 8);
  }
  *((_DWORD *)this + 8) = v4;
  return (char *)v4;
}

void google::protobuf::Mixin::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::Mixin::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::Mixin::MergeFrom(std::string *this, const google::protobuf::Mixin *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unint64_t v6 = *((void *)a2 + 2) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_10;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_10;
  }
  uint64_t v7 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    uint64_t v7 = *(google::protobuf::Arena **)v7;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3->__r_.__value_.__r.__words[2], v6, v7);
LABEL_10:
  unint64_t v8 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      return this;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    return this;
  }
  unint64_t v9 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    unint64_t v9 = *(google::protobuf::Arena **)v9;
  }
  return google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1], v8, v9);
}

void google::protobuf::Mixin::CopyFrom(google::protobuf::Mixin *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::Mixin::Clear(this);
    google::protobuf::Mixin::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::Mixin::IsInitialized(google::protobuf::Mixin *this)
{
  return 1;
}

uint64_t google::protobuf::Mixin::GetMetadata(google::protobuf::Mixin *this)
{
  return off_1001EABB8[4];
}

void *sub_10010D188(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_10010D774(a1, 1);
  google::protobuf::Api::Api((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10010D1EC()
{
}

void *sub_10010D214(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_10010D830(a1, 1);
  google::protobuf::Method::Method((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10010D278()
{
}

void *sub_10010D2A0(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_10010D8EC(a1);
}

void sub_10010D348()
{
}

uint64_t sub_10010D36C()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Api>(0);
}

uint64_t sub_10010D374(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Api>(a2);
}

uint64_t sub_10010D37C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 116);
}

uint64_t sub_10010D384()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Method>(0);
}

uint64_t sub_10010D38C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Method>(a2);
}

uint64_t sub_10010D394(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_10010D39C()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Mixin>(0);
}

uint64_t sub_10010D3A4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Mixin>(a2);
}

uint64_t sub_10010D3AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_10010D3B4(void *a1)
{
  uint64_t v2 = (google::protobuf::Method **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::Method::~Method(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::Method **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_10010D434(void *a1)
{
  uint64_t v2 = (google::protobuf::Option **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::Option::~Option(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::Option **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_10010D4B4(void *a1)
{
  uint64_t v2 = (google::protobuf::Mixin **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::Mixin::~Mixin(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::Mixin **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_10010D534(std::string *result, std::string **a2, google::protobuf::Method **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      unint64_t v14 = *v11++;
      int v13 = v14;
      unint64_t v15 = *v12++;
      uint64_t result = sub_10010D5E4(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    int v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      unsigned int v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Method>(v18);
      uint64_t result = sub_10010D5E4(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *sub_10010D5E4(google::protobuf::Method *a1, std::string *this)
{
  return google::protobuf::Method::MergeFrom(this, a1);
}

std::string *sub_10010D5F4(std::string *result, std::string **a2, const google::protobuf::Option **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      unint64_t v14 = *v11++;
      int v13 = v14;
      unint64_t v15 = *v12++;
      uint64_t result = sub_10010D6A4(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    int v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      unsigned int v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Option>(v18);
      uint64_t result = sub_10010D6A4(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *sub_10010D6A4(const google::protobuf::Option *a1, std::string *a2)
{
  return google::protobuf::Option::MergeFrom(a2, a1);
}

std::string *sub_10010D6B4(std::string *result, std::string **a2, google::protobuf::Mixin **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      unint64_t v14 = *v11++;
      int v13 = v14;
      unint64_t v15 = *v12++;
      uint64_t result = sub_10010D764(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    int v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      unsigned int v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Mixin>(v18);
      uint64_t result = sub_10010D764(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *sub_10010D764(google::protobuf::Mixin *a1, std::string *this)
{
  return google::protobuf::Mixin::MergeFrom(this, a1);
}

void *sub_10010D774(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x78uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x78uLL, (void (*)(void *))google::protobuf::Api::~Api);
}

void *sub_10010D830(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x50uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x50uLL, (void (*)(void *))google::protobuf::Method::~Method);
}

void *sub_10010D8EC(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_10010D968(a1, 1);
  void *v2 = off_1001D0D88;
  v2[1] = a1;
  *((_DWORD *)v2 + 8) = 0;
  if (atomic_load_explicit(scc_info_Mixin_google_2fprotobuf_2fapi_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Mixin_google_2fprotobuf_2fapi_2eproto);
  }
  v2[2] = &google::protobuf::internal::fixed_address_empty_string;
  v2[3] = &google::protobuf::internal::fixed_address_empty_string;
  return v2;
}

void *sub_10010D968(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))google::protobuf::Mixin::~Mixin);
}

void sub_10010DA24()
{
}

void sub_10010DA30(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/empty.pb.cc", a4);
  google::protobuf::_Empty_default_instance_ = (uint64_t)off_1001D0E90;
  *(void *)algn_1001EDC98 = 0;
  dword_1001EDCA0 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Empty_default_instance_, v4);
}

void google::protobuf::Empty::~Empty(google::protobuf::Empty *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t google::protobuf::Empty::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 1sub_1000FA614((void *)this + 6) = a2;
  return this;
}

unint64_t *google::protobuf::Empty::Clear(google::protobuf::Empty *this)
{
  char v2 = *((unsigned char *)this + 8);
  uint64_t result = (unint64_t *)((char *)this + 8);
  if (v2) {
    return (unint64_t *)sub_100035820(result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Empty::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v12 = a2;
  uint64_t v4 = (unint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_1000355B8(a3, &v12, *(_DWORD *)(a3 + 92))) {
      return v12;
    }
    TagFallbacint k = (google::protobuf::internal *)((char *)v12 + 1);
    unsigned int v6 = *(unsigned __int8 *)v12;
    if ((*(char *)v12 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v7 = v6 + (*(unsigned __int8 *)TagFallback << 7);
    unsigned int v6 = v7 - 128;
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v12 + 2);
LABEL_6:
      uint64_t v12 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v12, (const char *)(v7 - 128));
    uint64_t v12 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
    unsigned int v6 = v10;
LABEL_7:
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unint64_t v9 = (google::protobuf::Arena **)((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else
    {
      unint64_t v9 = sub_10003562C(v4);
      TagFallbacint k = v12;
    }
    uint64_t v12 = google::protobuf::internal::UnknownFieldParse(v6, (google::protobuf::UnknownFieldSet *)v9, TagFallback);
    if (!v12) {
      return 0;
    }
  }
  *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fapi_2eproto, 0) = v6 - 1;
  return TagFallback;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Empty::_InternalSerialize(google::protobuf::Empty *this, const google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v4 = *((void *)this + 1);
  if (v4) {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
  }
  else {
    return a2;
  }
}

char *google::protobuf::Empty::ByteSizeLong(google::protobuf::Empty *this)
{
  char v2 = *((unsigned char *)this + 8);
  unint64_t v1 = (google::protobuf::Empty *)((char *)this + 8);
  uint64_t v3 = (_DWORD *)((char *)v1 + 8);
  if (v2) {
    return google::protobuf::internal::ComputeUnknownFieldsSize(v1, 0, v3);
  }
  *uint64_t v3 = 0;
  return 0;
}

void google::protobuf::Empty::MergeFrom(google::protobuf::Empty *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    uint64_t v6 = v4[1];
    if (v6)
    {
      sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 8));
    }
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::Empty::CopyFrom(google::protobuf::Empty *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    uint64_t v5 = (unint64_t *)((char *)this + 8);
    if (v6) {
      sub_100035820(v5);
    }
    google::protobuf::Empty::MergeFrom(this, lpsrc);
  }
}

uint64_t google::protobuf::Empty::IsInitialized(google::protobuf::Empty *this)
{
  return 1;
}

uint64_t google::protobuf::Empty::GetMetadata(google::protobuf::Empty *this)
{
  return *off_1001EAC48;
}

void *sub_10010DDD8(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  uint64_t result = sub_10010DE5C(this, 1);
  *uint64_t result = off_1001D0E90;
  result[1] = this;
  *((_DWORD *)result + 4) = 0;
  return result;
}

uint64_t sub_10010DE44()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Empty>(0);
}

uint64_t sub_10010DE4C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Empty>(a2);
}

uint64_t sub_10010DE54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void *sub_10010DE5C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x18uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))sub_10010DF14);
}

uint64_t *sub_10010DF14(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void sub_10010DF34()
{
}

void google::protobuf::internal::MapFieldBase::~MapFieldBase(google::protobuf::internal::MapFieldBase *this)
{
  *(void *)this = off_1001D0F58;
  if (*((void *)this + 2) && !*((void *)this + 1))
  {
    sub_100101C14(*((void **)this + 2));
    operator delete();
  }
  std::mutex::~mutex((std::mutex *)((char *)this + 24));
}

uint64_t google::protobuf::internal::MapFieldBase::GetRepeatedField(google::protobuf::internal::MapFieldBase *this)
{
  return *((void *)this + 2);
}

void google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMap(google::protobuf::internal::MapFieldBase *this)
{
  unsigned int explicit = atomic_load_explicit((atomic_uint *volatile)this + 22, memory_order_acquire);
  if (explicit == 2)
  {
    uint64_t v3 = (std::mutex *)((char *)this + 24);
    std::mutex::lock((std::mutex *)((char *)this + 24));
    if (*((_DWORD *)this + 22) == 2)
    {
      if (!*((void *)this + 2))
      {
        uint64_t v4 = (google::protobuf::Arena *)*((void *)this + 1);
        if (!v4) {
          operator new();
        }
        *((void *)this + sub_1000FACE4((void *)this + 2) = sub_100112108(v4);
      }
      goto LABEL_11;
    }
  }
  else
  {
    if (explicit) {
      return;
    }
    uint64_t v3 = (std::mutex *)((char *)this + 24);
    std::mutex::lock((std::mutex *)((char *)this + 24));
    if (!*((_DWORD *)this + 22))
    {
      (*(void (**)(google::protobuf::internal::MapFieldBase *))(*(void *)this + 112))(this);
LABEL_11:
      atomic_store(2u, (unsigned int *)this + 22);
    }
  }
  std::mutex::unlock(v3);
}

uint64_t google::protobuf::internal::MapFieldBase::MutableRepeatedField(google::protobuf::internal::MapFieldBase *this)
{
  *((_DWORD *)this + 2sub_1000FACE4((void *)this + 2) = 1;
  return *((void *)this + 2);
}

uint64_t google::protobuf::internal::MapFieldBase::SpaceUsedExcludingSelfLong(google::protobuf::internal::MapFieldBase *this)
{
  uint64_t v2 = (std::mutex *)((char *)this + 24);
  std::mutex::lock((std::mutex *)((char *)this + 24));
  uint64_t v3 = (*(uint64_t (**)(google::protobuf::internal::MapFieldBase *))(*(void *)this + 104))(this);
  std::mutex::unlock(v2);
  return v3;
}

uint64_t google::protobuf::internal::MapFieldBase::SpaceUsedExcludingSelfNoLock(google::protobuf::internal::MapFieldBase *this)
{
  uint64_t v1 = *((void *)this + 2);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = 8 * *(int *)(v1 + 12);
  uint64_t v3 = *(int **)(v1 + 16);
  if (v3)
  {
    if (*v3 >= 1)
    {
      uint64_t v4 = 0;
      do
      {
        v2 += (*(uint64_t (**)(void))(**(void **)&v3[2 * v4 + 2] + 136))(*(void *)&v3[2 * v4 + 2]);
        ++v4;
        uint64_t v3 = *(int **)(v1 + 16);
      }
      while (v4 < *v3);
    }
    v2 += 8;
  }
  return v2;
}

BOOL google::protobuf::internal::MapFieldBase::IsMapValid(atomic_uint *this)
{
  return atomic_load_explicit(this + 22, memory_order_acquire) != 1;
}

BOOL google::protobuf::internal::MapFieldBase::IsRepeatedFieldValid(atomic_uint *this)
{
  return atomic_load_explicit(this + 22, memory_order_acquire) != 0;
}

uint64_t google::protobuf::internal::MapFieldBase::SetMapDirty(uint64_t this)
{
  *(_DWORD *)(this + 88) = 0;
  return this;
}

void *google::protobuf::internal::MapFieldBase::SyncRepeatedFieldWithMapNoLock(void *this)
{
  if (!this[2])
  {
    uint64_t v1 = this;
    this = sub_100112108((google::protobuf::Arena *)this[1]);
    v1[2] = this;
  }
  return this;
}

void google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(google::protobuf::internal::MapFieldBase *this)
{
  if (atomic_load_explicit((atomic_uint *volatile)this + 22, memory_order_acquire) == 1)
  {
    uint64_t v2 = (std::mutex *)((char *)this + 24);
    std::mutex::lock((std::mutex *)((char *)this + 24));
    if (*((_DWORD *)this + 22) == 1)
    {
      (*(void (**)(google::protobuf::internal::MapFieldBase *))(*(void *)this + 120))(this);
      atomic_store(2u, (unsigned int *)this + 22);
    }
    std::mutex::unlock(v2);
  }
}

double google::protobuf::internal::DynamicMapField::DynamicMapField(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = 0;
  *(void *)(a1 + 24) = 850045863;
  *(_OWORD *)(a1 + 3sub_1000FACE4((void *)this + 2) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 7sub_1000FA614((void *)this + 6) = 0u;
  *(void *)a1 = off_1001D1008;
  double result = 0.0;
  *(_OWORD *)(a1 + 9sub_1000FA614((void *)this + 6) = xmmword_1001825C0;
  *(_OWORD *)(a1 + 11sub_1000FACE4((void *)this + 2) = xmmword_1001825C0;
  *(void *)(a1 + 128) = &google::protobuf::internal::kGlobalEmptyTable;
  *(void *)(a1 + 13sub_1000FA614((void *)this + 6) = 0;
  *(void *)(a1 + 144) = a2;
  return result;
}

double google::protobuf::internal::DynamicMapField::DynamicMapField(google::protobuf::internal::DynamicMapField *this, const google::protobuf::Message *a2, google::protobuf::Arena *a3)
{
  uint64_t v5 = sub_100112598((uint64_t)this, (char *)a3);
  *(void *)uint64_t v5 = off_1001D1008;
  double result = 0.0;
  *(_OWORD *)(v5 + 9sub_1000FA614((void *)this + 6) = xmmword_1001825C0;
  *(_OWORD *)(v5 + 11sub_1000FACE4((void *)this + 2) = xmmword_1001825C0;
  *(void *)(v5 + 128) = &google::protobuf::internal::kGlobalEmptyTable;
  *(void *)(v5 + 13sub_1000FA614((void *)this + 6) = a3;
  *(void *)(v5 + 144) = a2;
  return result;
}

void google::protobuf::internal::DynamicMapField::~DynamicMapField(google::protobuf::internal::DynamicMapField *this)
{
  *(void *)this = off_1001D1008;
  uint64_t v2 = (char *)this + 96;
  unint64_t v3 = *((void *)this + 15);
  unint64_t v4 = *((void *)this + 13);
  if (v4 > v3)
  {
    uint64_t v5 = *((void *)this + 16);
    while (1)
    {
      char v6 = *(_DWORD **)(v5 + 8 * v3);
      if (v6) {
        break;
      }
      if (v4 == ++v3) {
        goto LABEL_10;
      }
    }
    if (v6 == *(_DWORD **)(v5 + 8 * (v3 ^ 1)))
    {
      char v6 = *(_DWORD **)(*(void *)v6 + 40);
      unsigned int v7 = v6;
      unint64_t v8 = (char *)this + 96;
      unint64_t v9 = v3;
      if (!v6) {
        goto LABEL_10;
      }
    }
    else
    {
      unsigned int v7 = *(_DWORD **)(v5 + 8 * v3);
      unint64_t v8 = (char *)this + 96;
      unint64_t v9 = v3;
    }
    do
    {
      sub_10010E4BC(v6 + 8);
      sub_1001126A4(&v7);
      char v6 = v7;
    }
    while (v7);
  }
LABEL_10:
  sub_10011228C((uint64_t)v2);
  sub_100112238((uint64_t)v2);
  google::protobuf::internal::MapFieldBase::~MapFieldBase(this);
}

{
  uint64_t vars8;

  google::protobuf::internal::DynamicMapField::~DynamicMapField(this);
  operator delete();
}

_DWORD *sub_10010E4BC(_DWORD *result)
{
  switch(result[2])
  {
    case 1:
    case 3:
    case 6:
    case 8:
      double result = *(_DWORD **)result;
      if (result) {
        goto LABEL_7;
      }
      return result;
    case 2:
    case 4:
    case 5:
      double result = *(_DWORD **)result;
      if (result) {
        goto LABEL_7;
      }
      return result;
    case 7:
      double result = *(_DWORD **)result;
      if (result) {
        goto LABEL_7;
      }
      return result;
    case 9:
      uint64_t v1 = *(void *)result;
      if (!*(void *)result) {
        return result;
      }
      if (*(char *)(v1 + 23) < 0) {
        operator delete(*(void **)v1);
      }
LABEL_7:
      operator delete();
    case 0xA:
      double result = *(_DWORD **)result;
      if (result)
      {
        uint64_t v2 = *(uint64_t (**)(void))(*(void *)result + 8);
        return (_DWORD *)v2();
      }
      return result;
    default:
      return result;
  }
}

uint64_t google::protobuf::internal::DynamicMapField::size(google::protobuf::internal::DynamicMapField *this)
{
  return *(unsigned int *)(*(uint64_t (**)(google::protobuf::internal::DynamicMapField *))(*(void *)this + 160))(this);
}

uint64_t google::protobuf::internal::DynamicMapField::Clear(google::protobuf::internal::DynamicMapField *this)
{
  uint64_t v2 = (char *)this + 96;
  if (!*((void *)this + 1))
  {
    unint64_t v3 = *((void *)this + 15);
    unint64_t v4 = *((void *)this + 13);
    if (v4 > v3)
    {
      uint64_t v5 = *((void *)this + 16);
      while (1)
      {
        char v6 = *(_DWORD **)(v5 + 8 * v3);
        if (v6) {
          break;
        }
        if (v4 == ++v3) {
          goto LABEL_11;
        }
      }
      if (v6 == *(_DWORD **)(v5 + 8 * (v3 ^ 1)))
      {
        char v6 = *(_DWORD **)(*(void *)v6 + 40);
        uint64_t v12 = v6;
        int v13 = (char *)this + 96;
        unint64_t v14 = v3;
        if (!v6) {
          goto LABEL_11;
        }
      }
      else
      {
        uint64_t v12 = *(_DWORD **)(v5 + 8 * v3);
        int v13 = (char *)this + 96;
        unint64_t v14 = v3;
      }
      do
      {
        sub_10010E4BC(v6 + 8);
        sub_1001126A4(&v12);
        char v6 = v12;
      }
      while (v12);
    }
  }
LABEL_11:
  uint64_t result = sub_10011228C((uint64_t)v2);
  uint64_t v8 = *((void *)this + 2);
  if (v8)
  {
    uint64_t v9 = *(unsigned int *)(v8 + 8);
    if ((int)v9 >= 1)
    {
      unsigned int v10 = (uint64_t *)(*(void *)(v8 + 16) + 8);
      do
      {
        uint64_t v11 = *v10++;
        uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 40))(v11);
        --v9;
      }
      while (v9);
      *(_DWORD *)(v8 + 8) = 0;
    }
  }
  *((_DWORD *)this + 2sub_1000FACE4((void *)this + 2) = 0;
  return result;
}

BOOL google::protobuf::internal::DynamicMapField::ContainsMapKey(uint64_t a1, unsigned int *a2)
{
  unint64_t v3 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  sub_100112818(v3, a2, 0, v5);
  return v5[0] != 0;
}

void google::protobuf::internal::DynamicMapField::AllocateMapValue(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (google::protobuf::Descriptor *)(*(uint64_t (**)(void))(**(void **)(a1 + 144) + 152))(*(void *)(a1 + 144));
  uint64_t v5 = google::protobuf::Descriptor::map_value(v4);
  char v6 = *(std::once_flag::_State_type **)(v5 + 48);
  if (v6)
  {
    uint64_t v12 = v5;
    int v13 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
    {
      unint64_t v15 = &v13;
      BOOL v16 = &v12;
      unint64_t v14 = &v15;
      std::__call_once(v6, &v14, (void (__cdecl *)(void *))sub_1000BB820);
    }
    unsigned int v7 = *(std::once_flag::_State_type **)(v5 + 48);
    unsigned int v8 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v5 + 56)];
    *(_DWORD *)(a2 + 8) = v8;
    if (v7)
    {
      uint64_t v12 = v5;
      int v13 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
      {
        unint64_t v15 = &v13;
        BOOL v16 = &v12;
        unint64_t v14 = &v15;
        std::__call_once(v7, &v14, (void (__cdecl *)(void *))sub_1000BB820);
      }
      unsigned int v8 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v5 + 56)];
    }
  }
  else
  {
    unsigned int v8 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v5 + 56)];
    *(_DWORD *)(a2 + 8) = v8;
  }
  switch(v8)
  {
    case 1u:
    case 8u:
      uint64_t v9 = sub_100112F5C(*(google::protobuf::Arena **)(a1 + 8));
      goto LABEL_19;
    case 2u:
      uint64_t v9 = sub_100113058(*(google::protobuf::Arena **)(a1 + 8));
      goto LABEL_19;
    case 3u:
      uint64_t v9 = sub_100113154(*(google::protobuf::Arena **)(a1 + 8));
      goto LABEL_19;
    case 4u:
      uint64_t v9 = sub_100113250(*(google::protobuf::Arena **)(a1 + 8));
      goto LABEL_19;
    case 5u:
      uint64_t v9 = sub_10011334C(*(google::protobuf::Arena **)(a1 + 8));
      goto LABEL_19;
    case 6u:
      uint64_t v9 = sub_100113448(*(google::protobuf::Arena **)(a1 + 8));
      goto LABEL_19;
    case 7u:
      uint64_t v9 = sub_100113544(*(google::protobuf::Arena **)(a1 + 8));
      goto LABEL_19;
    case 9u:
      uint64_t v9 = sub_1000BBB38(*(google::protobuf::Arena **)(a1 + 8));
      goto LABEL_19;
    case 0xAu:
      (*(void (**)(void))(**(void **)(a1 + 144) + 152))(*(void *)(a1 + 144));
      uint64_t Message = google::protobuf::Reflection::GetMessage(v10, *(const google::protobuf::Message **)(a1 + 144), (const google::protobuf::FieldDescriptor *)v5, 0);
      uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t, void))(*(void *)Message + 32))(Message, *(void *)(a1 + 8));
LABEL_19:
      *(void *)a2 = v9;
      break;
    default:
      return;
  }
}

BOOL google::protobuf::internal::DynamicMapField::InsertOrLookupMapValue(uint64_t *a1, unsigned int *a2, uint64_t a3)
{
  char v6 = (void *)(*(uint64_t (**)(uint64_t *))(*a1 + 168))(a1);
  sub_100112818(v6, a2, 0, v10);
  uint64_t v7 = v10[0];
  if (v10[0])
  {
    uint64_t v8 = v10[0];
  }
  else
  {
    sub_100113640(a1 + 12, a2, (uint64_t)v10);
    uint64_t v8 = v10[0];
    google::protobuf::internal::DynamicMapField::AllocateMapValue((uint64_t)a1, v10[0] + 32);
  }
  BOOL result = v7 == 0;
  *(_DWORD *)(a3 + 8) = *(_DWORD *)(v8 + 40);
  *(void *)a3 = *(void *)(v8 + 32);
  return result;
}

BOOL google::protobuf::internal::DynamicMapField::LookupMapValue(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  sub_100112818(v5, a2, 0, v8);
  uint64_t v6 = v8[0];
  if (v8[0])
  {
    *(_DWORD *)(a3 + 8) = *(_DWORD *)(v8[0] + 40);
    *(void *)a3 = *(void *)(v6 + 32);
  }
  return v6 != 0;
}

BOOL google::protobuf::internal::DynamicMapField::DeleteMapValue(uint64_t a1, unsigned int *a2)
{
  google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField((google::protobuf::internal::MapFieldBase *)a1);
  sub_100112818((void *)(a1 + 96), a2, 0, &v11);
  long long v4 = v11;
  uint64_t v5 = v11;
  if ((void)v11)
  {
    uint64_t v6 = v12;
    *(_DWORD *)(a1 + 88) = 0;
    if (!*(void *)(a1 + 8))
    {
      long long v8 = v4;
      sub_10010E4BC((_DWORD *)(v5 + 32));
      long long v4 = v8;
    }
    long long v9 = v4;
    uint64_t v10 = v6;
    long long v11 = v4;
    uint64_t v12 = v6;
    sub_1001126A4(&v9);
    sub_10011407C((void *)(a1 + 96), (uint64_t *)&v11);
  }
  return v5 != 0;
}

uint64_t google::protobuf::internal::DynamicMapField::GetMap(google::protobuf::internal::DynamicMapField *this)
{
  return (uint64_t)this + 96;
}

uint64_t google::protobuf::internal::DynamicMapField::MutableMap(google::protobuf::internal::DynamicMapField *this)
{
  *((_DWORD *)this + 2sub_1000FACE4((void *)this + 2) = 0;
  return (uint64_t)this + 96;
}

void google::protobuf::internal::DynamicMapField::SetMapIteratorValue(uint64_t a1, const std::string ***a2)
{
  uint64_t v2 = **a2;
  if (v2)
  {
    sub_10010ECBC((uint64_t)(a2 + 2), **a2);
    *((_DWORD *)a2 + 14) = v2[1].__r_.__value_.__r.__words[2];
    a2[6] = (const std::string **)v2[1].__r_.__value_.__l.__size_;
  }
}

void sub_10010ECBC(uint64_t a1, const std::string *a2)
{
  int v4 = sub_100111CBC((uint64_t)a2);
  sub_1001120AC(a1, v4);
  switch(*(_DWORD *)(a1 + 24))
  {
    case 1:
    case 3:
      *(_DWORD *)a1 = a2->__r_.__value_.__l.__data_;
      break;
    case 2:
    case 4:
      *(void *)a1 = a2->__r_.__value_.__r.__words[0];
      break;
    case 5:
    case 6:
    case 8:
    case 0xA:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 213);
      uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v7, "Unsupported");
      google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
      break;
    case 7:
      *(unsigned char *)a1 = a2->__r_.__value_.__s.__data_[0];
      break;
    case 9:
      std::string::operator=((std::string *)a1, a2);
      break;
    default:
      return;
  }
}

void sub_10010EDB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::DynamicMapField::MergeFrom(google::protobuf::internal::DynamicMapField *this, const google::protobuf::internal::MapFieldBase *a2)
{
  BOOL result = (void *)(*(uint64_t (**)(google::protobuf::internal::DynamicMapField *))(*(void *)this + 168))(this);
  unint64_t v5 = *((void *)a2 + 15);
  unint64_t v6 = *((void *)a2 + 13);
  if (v6 > v5)
  {
    uint64_t v7 = result;
    uint64_t v8 = *((void *)a2 + 16);
    while (1)
    {
      long long v9 = *(unsigned int **)(v8 + 8 * v5);
      if (v9) {
        break;
      }
      if (v6 == ++v5) {
        return result;
      }
    }
    if (v9 == *(unsigned int **)(v8 + 8 * (v5 ^ 1)))
    {
      long long v9 = *(unsigned int **)(*(void *)v9 + 40);
      unint64_t v25 = v9;
      unint64_t v26 = (char *)a2 + 96;
      unint64_t v27 = v5;
      if (!v9) {
        return result;
      }
    }
    else
    {
      unint64_t v25 = *(unsigned int **)(v8 + 8 * v5);
      unint64_t v26 = (char *)a2 + 96;
      unint64_t v27 = v5;
    }
    do
    {
      sub_100112818(v7, v9, 0, v28);
      if (v28[0])
      {
        uint64_t v10 = (double **)(v28[0] + 32);
      }
      else
      {
        sub_100113640((uint64_t *)this + 12, v25, (uint64_t)v28);
        uint64_t v10 = (double **)(v28[0] + 32);
        google::protobuf::internal::DynamicMapField::AllocateMapValue((uint64_t)this, v28[0] + 32);
      }
      long long v11 = (google::protobuf::Descriptor *)(*(uint64_t (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
      uint64_t v12 = google::protobuf::Descriptor::map_value(v11);
      int v13 = *(std::once_flag::_State_type **)(v12 + 48);
      if (v13)
      {
        uint64_t v29 = v12;
        int v30 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
        {
          v28[0] = &v30;
          v28[1] = &v29;
          uint64_t v31 = v28;
          std::__call_once(v13, &v31, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      switch(*(_DWORD *)(v12 + 56))
      {
        case 1:
          double v18 = sub_10010FC38((uint64_t)(v25 + 8));
          sub_10010FB30(v10, v18);
          break;
        case 2:
          float v19 = sub_10010FA34((uint64_t)(v25 + 8));
          sub_10010F92C((float **)v10, v19);
          break;
        case 3:
        case 0x10:
        case 0x12:
          uint64_t v15 = sub_10010F438((uint64_t)(v25 + 8));
          sub_10010F338((void **)v10, v15);
          break;
        case 4:
        case 6:
          uint64_t v17 = sub_10010F830((uint64_t)(v25 + 8));
          sub_10010F730((void **)v10, v17);
          break;
        case 5:
        case 0xF:
        case 0x11:
          int v14 = sub_10010F23C((unsigned int **)v25 + 4);
          sub_10010F13C((_DWORD **)v10, v14);
          break;
        case 7:
        case 0xD:
          int v16 = sub_10010F634((unsigned int **)v25 + 4);
          sub_10010F534((_DWORD **)v10, v16);
          break;
        case 8:
          char v20 = sub_10010FE34((unsigned __int8 **)v25 + 4);
          sub_10010FD34((unsigned char **)v10, v20);
          break;
        case 9:
        case 0xC:
          unsigned int v22 = (const std::string *)sub_100110034((uint64_t)(v25 + 8));
          sub_10010FF30((std::string **)v10, v22);
          break;
        case 0xA:
        case 0xB:
          uint64_t v23 = sub_100110328((uint64_t)v10);
          uint64_t v24 = sub_100110420((uint64_t)(v25 + 8));
          (*(void (**)(uint64_t, uint64_t))(*(void *)v23 + 112))(v23, v24);
          break;
        case 0xE:
          int v21 = sub_10011022C((unsigned int **)v25 + 4);
          sub_10011012C((_DWORD **)v10, v21);
          break;
        default:
          break;
      }
      BOOL result = sub_1001126A4(&v25);
      long long v9 = v25;
    }
    while (v25);
  }
  return result;
}

void sub_10010F13C(_DWORD **a1, int a2)
{
  if (sub_100111D5C((uint64_t)a1) != 1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 783);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v14, "Protocol Buffer map usage error:\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "MapValueRef::SetInt32Value");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, " type does not match\n");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "  Expected : ");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "int32");
    long long v9 = google::protobuf::internal::LogMessage::operator<<(v8, "\n");
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, "  Actual   : ");
    int v11 = sub_100111D5C((uint64_t)a1);
    uint64_t v12 = google::protobuf::internal::LogMessage::operator<<(v10, google::protobuf::FieldDescriptor::kCppTypeToName[v11]);
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  **a1 = a2;
}

void sub_10010F224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010F23C(unsigned int **a1)
{
  if (sub_100111D5C((uint64_t)a1) != 1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 695);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapValueConstRef::GetInt32Value");
    int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "int32");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111D5C((uint64_t)a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return **a1;
}

void sub_10010F320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_10010F338(void **a1, uint64_t a2)
{
  if (sub_100111D5C((uint64_t)a1) != 2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 775);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v14, "Protocol Buffer map usage error:\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "MapValueRef::SetInt64Value");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, " type does not match\n");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "  Expected : ");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "int64");
    int v9 = google::protobuf::internal::LogMessage::operator<<(v8, "\n");
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, "  Actual   : ");
    int v11 = sub_100111D5C((uint64_t)a1);
    char v12 = google::protobuf::internal::LogMessage::operator<<(v10, google::protobuf::FieldDescriptor::kCppTypeToName[v11]);
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  **a1 = a2;
}

void sub_10010F420(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010F438(uint64_t a1)
{
  if (sub_100111D5C(a1) != 2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 685);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapValueConstRef::GetInt64Value");
    int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "int64");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111D5C(a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return **(void **)a1;
}

void sub_10010F51C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_10010F534(_DWORD **a1, int a2)
{
  if (sub_100111D5C((uint64_t)a1) != 3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 787);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v14, "Protocol Buffer map usage error:\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "MapValueRef::SetUInt32Value");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, " type does not match\n");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "  Expected : ");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "uint32");
    int v9 = google::protobuf::internal::LogMessage::operator<<(v8, "\n");
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, "  Actual   : ");
    int v11 = sub_100111D5C((uint64_t)a1);
    char v12 = google::protobuf::internal::LogMessage::operator<<(v10, google::protobuf::FieldDescriptor::kCppTypeToName[v11]);
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  **a1 = a2;
}

void sub_10010F61C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010F634(unsigned int **a1)
{
  if (sub_100111D5C((uint64_t)a1) != 3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 700);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapValueConstRef::GetUInt32Value");
    int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "uint32");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111D5C((uint64_t)a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return **a1;
}

void sub_10010F718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_10010F730(void **a1, uint64_t a2)
{
  if (sub_100111D5C((uint64_t)a1) != 4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 779);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v14, "Protocol Buffer map usage error:\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "MapValueRef::SetUInt64Value");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, " type does not match\n");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "  Expected : ");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "uint64");
    int v9 = google::protobuf::internal::LogMessage::operator<<(v8, "\n");
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, "  Actual   : ");
    int v11 = sub_100111D5C((uint64_t)a1);
    char v12 = google::protobuf::internal::LogMessage::operator<<(v10, google::protobuf::FieldDescriptor::kCppTypeToName[v11]);
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  **a1 = a2;
}

void sub_10010F818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010F830(uint64_t a1)
{
  if (sub_100111D5C(a1) != 4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 690);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapValueConstRef::GetUInt64Value");
    int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "uint64");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111D5C(a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return **(void **)a1;
}

void sub_10010F914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_10010F92C(float **a1, float a2)
{
  if (sub_100111D5C((uint64_t)a1) != 6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 804);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v14, "Protocol Buffer map usage error:\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "MapValueRef::SetFloatValue");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, " type does not match\n");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "  Expected : ");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "float");
    int v9 = google::protobuf::internal::LogMessage::operator<<(v8, "\n");
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, "  Actual   : ");
    int v11 = sub_100111D5C((uint64_t)a1);
    char v12 = google::protobuf::internal::LogMessage::operator<<(v10, google::protobuf::FieldDescriptor::kCppTypeToName[v11]);
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  **a1 = a2;
}

void sub_10010FA1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

float sub_10010FA34(uint64_t a1)
{
  if (sub_100111D5C(a1) != 6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 718);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapValueConstRef::GetFloatValue");
    int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "float");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111D5C(a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return **(float **)a1;
}

void sub_10010FB18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_10010FB30(double **a1, double a2)
{
  if (sub_100111D5C((uint64_t)a1) != 5)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 808);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v14, "Protocol Buffer map usage error:\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "MapValueRef::SetDoubleValue");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, " type does not match\n");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "  Expected : ");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "double");
    int v9 = google::protobuf::internal::LogMessage::operator<<(v8, "\n");
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, "  Actual   : ");
    int v11 = sub_100111D5C((uint64_t)a1);
    char v12 = google::protobuf::internal::LogMessage::operator<<(v10, google::protobuf::FieldDescriptor::kCppTypeToName[v11]);
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  **a1 = a2;
}

void sub_10010FC20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

double sub_10010FC38(uint64_t a1)
{
  if (sub_100111D5C(a1) != 5)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 723);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapValueConstRef::GetDoubleValue");
    int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "double");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111D5C(a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return **(double **)a1;
}

void sub_10010FD1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_10010FD34(unsigned char **a1, char a2)
{
  if (sub_100111D5C((uint64_t)a1) != 7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 791);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v14, "Protocol Buffer map usage error:\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "MapValueRef::SetBoolValue");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, " type does not match\n");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "  Expected : ");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "BOOL");
    int v9 = google::protobuf::internal::LogMessage::operator<<(v8, "\n");
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, "  Actual   : ");
    int v11 = sub_100111D5C((uint64_t)a1);
    char v12 = google::protobuf::internal::LogMessage::operator<<(v10, google::protobuf::FieldDescriptor::kCppTypeToName[v11]);
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  **a1 = a2;
}

void sub_10010FE1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10010FE34(unsigned __int8 **a1)
{
  if (sub_100111D5C((uint64_t)a1) != 7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 704);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapValueConstRef::GetBoolValue");
    int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "BOOL");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111D5C((uint64_t)a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return **a1;
}

void sub_10010FF18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

std::string *sub_10010FF30(std::string **a1, const std::string *a2)
{
  if (sub_100111D5C((uint64_t)a1) != 9)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 800);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v15, "Protocol Buffer map usage error:\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "MapValueRef::SetStringValue");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, " type does not match\n");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "  Expected : ");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "string");
    int v9 = google::protobuf::internal::LogMessage::operator<<(v8, "\n");
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, "  Actual   : ");
    int v11 = sub_100111D5C((uint64_t)a1);
    char v12 = google::protobuf::internal::LogMessage::operator<<(v10, google::protobuf::FieldDescriptor::kCppTypeToName[v11]);
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  return std::string::operator=(*a1, a2);
}

void sub_10011001C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100110034(uint64_t a1)
{
  if (sub_100111D5C(a1) != 9)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 713);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapValueConstRef::GetStringValue");
    int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "string");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111D5C(a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(void *)a1;
}

void sub_100110114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_10011012C(_DWORD **a1, int a2)
{
  if (sub_100111D5C((uint64_t)a1) != 8)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 796);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v14, "Protocol Buffer map usage error:\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "MapValueRef::SetEnumValue");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, " type does not match\n");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "  Expected : ");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "enum");
    int v9 = google::protobuf::internal::LogMessage::operator<<(v8, "\n");
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, "  Actual   : ");
    int v11 = sub_100111D5C((uint64_t)a1);
    char v12 = google::protobuf::internal::LogMessage::operator<<(v10, google::protobuf::FieldDescriptor::kCppTypeToName[v11]);
    google::protobuf::internal::LogFinisher::operator=((int)&v13, (const char **)&v12->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
  }
  **a1 = a2;
}

void sub_100110214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011022C(unsigned int **a1)
{
  if (sub_100111D5C((uint64_t)a1) != 8)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 708);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapValueConstRef::GetEnumValue");
    int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "enum");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111D5C((uint64_t)a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return **a1;
}

void sub_100110310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100110328(uint64_t a1)
{
  if (sub_100111D5C(a1) != 10)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 814);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapValueRef::MutableMessageValue");
    int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "message");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111D5C(a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(void *)a1;
}

void sub_100110408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100110420(uint64_t a1)
{
  if (sub_100111D5C(a1) != 10)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 729);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapValueConstRef::GetMessageValue");
    int v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, "message");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111D5C(a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(void *)a1;
}

void sub_100110500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::internal::DynamicMapField::Swap(google::protobuf::internal::DynamicMapField *this, google::protobuf::internal::MapFieldBase *a2)
{
  uint64_t v4 = *((void *)this + 2);
  *((void *)this + sub_1000FACE4((void *)this + 2) = *((void *)a2 + 2);
  *((void *)a2 + sub_1000FACE4((void *)this + 2) = v4;
  BOOL result = sub_100110568((uint64_t *)this + 12, (uint64_t *)a2 + 12);
  int v6 = *((_DWORD *)a2 + 22);
  *((_DWORD *)a2 + 2sub_1000FACE4((void *)this + 2) = *((_DWORD *)this + 22);
  *((_DWORD *)this + 2sub_1000FACE4((void *)this + 2) = v6;
  return result;
}

uint64_t *sub_100110568(uint64_t *a1, uint64_t *a2)
{
  if (a1[5] == a2[5])
  {
    return sub_1001141C0(a1, a2);
  }
  else
  {
    sub_100114214((uint64_t)v5, a1);
    sub_1001142E0(a1, a2);
    sub_1001142E0(a2, v5);
    return (uint64_t *)sub_100112238((uint64_t)v5);
  }
}

void sub_1001105F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void *google::protobuf::internal::DynamicMapField::SyncRepeatedFieldWithMapNoLock(google::protobuf::internal::DynamicMapField *this)
{
  (*(void (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  unint64_t v3 = v2;
  uint64_t v4 = (google::protobuf::Descriptor *)(*(uint64_t (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  uint64_t v5 = google::protobuf::Descriptor::map_key(v4);
  int v6 = (google::protobuf::Descriptor *)(*(uint64_t (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  BOOL result = (void *)google::protobuf::Descriptor::map_value(v6);
  uint64_t v8 = (uint64_t)result;
  uint64_t v9 = *((void *)this + 2);
  if (!v9)
  {
    uint64_t v10 = (google::protobuf::Arena *)*((void *)this + 1);
    if (!v10) {
      operator new();
    }
    BOOL result = sub_100112108(v10);
    uint64_t v9 = (uint64_t)result;
    *((void *)this + sub_1000FACE4((void *)this + 2) = result;
  }
  uint64_t v11 = *(unsigned int *)(v9 + 8);
  if ((int)v11 >= 1)
  {
    char v12 = (uint64_t *)(*(void *)(v9 + 16) + 8);
    do
    {
      uint64_t v13 = *v12++;
      BOOL result = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v13 + 40))(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v9 + 8) = 0;
  }
  unint64_t v14 = *((void *)this + 15);
  unint64_t v15 = *((void *)this + 13);
  if (v15 > v14)
  {
    uint64_t v16 = *((void *)this + 16);
    while (1)
    {
      uint64_t v17 = *(void *)(v16 + 8 * v14);
      if (v17) {
        break;
      }
      if (v15 == ++v14) {
        return result;
      }
    }
    if (v17 == *(void *)(v16 + 8 * (v14 ^ 1)))
    {
      int v49 = *(unsigned int **)(*(void *)v17 + 40);
      uint64_t v50 = (char *)this + 96;
      unint64_t v51 = v14;
      if (!v49) {
        return result;
      }
    }
    else
    {
      int v49 = *(unsigned int **)(v16 + 8 * v14);
      uint64_t v50 = (char *)this + 96;
      unint64_t v51 = v14;
    }
    do
    {
      double v18 = (void *)(*(uint64_t (**)(void, void))(**((void **)this + 18) + 32))(*((void *)this + 18), *((void *)this + 1));
      sub_100114440(*((void *)this + 2), v18);
      float v19 = v49;
      char v20 = *(std::once_flag::_State_type **)(v5 + 48);
      if (v20)
      {
        uint64_t v52 = v5;
        uint64_t v53 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v20, memory_order_acquire) != -1)
        {
          v46[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v53;
          v46[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v52;
          unint64_t v54 = v46;
          std::__call_once(v20, &v54, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      switch(*(_DWORD *)(v5 + 56))
      {
        case 1:
        case 2:
        case 0xA:
        case 0xB:
        case 0xE:
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v46, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/map_field.cc", 430);
          int v21 = google::protobuf::internal::LogMessage::operator<<(v46, "Can't get here.");
          google::protobuf::internal::LogFinisher::operator=((int)&v54, (const char **)&v21->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v46[0].__r_.__value_.__l.__data_);
          break;
        case 3:
        case 0x10:
        case 0x12:
          uint64_t v23 = sub_100110D5C((uint64_t)v19);
          google::protobuf::Reflection::SetInt64(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v5, v23);
          break;
        case 4:
        case 6:
          unint64_t v25 = sub_100110F4C((uint64_t)v19);
          google::protobuf::Reflection::SetUInt64(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v5, v25);
          break;
        case 5:
        case 0xF:
        case 0x11:
          int v22 = sub_100110E54(v19);
          google::protobuf::Reflection::SetInt32(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v5, v22);
          break;
        case 7:
        case 0xD:
          unsigned int v24 = sub_100111044(v19);
          google::protobuf::Reflection::SetUInt32(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v5, v24);
          break;
        case 8:
          char v26 = sub_10011113C((unsigned __int8 *)v19);
          google::protobuf::Reflection::SetBool(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v5, v26);
          break;
        case 9:
        case 0xC:
          uint64_t v27 = sub_100110C64((uint64_t)v19);
          if (*(char *)(v27 + 23) < 0)
          {
            sub_1000BB834(__p, *(void **)v27, *(void *)(v27 + 8));
          }
          else
          {
            long long v28 = *(_OWORD *)v27;
            uint64_t v48 = *(void *)(v27 + 16);
            *(_OWORD *)std::string __p = v28;
          }
          google::protobuf::Reflection::SetString((uint64_t)v3, (google::protobuf::Message *)v18, (google::protobuf::FieldDescriptor *)v5, (uint64_t)__p);
          if (SHIBYTE(v48) < 0) {
            operator delete(__p[0]);
          }
          break;
        default:
          break;
      }
      uint64_t v29 = v49;
      int v30 = *(std::once_flag::_State_type **)(v8 + 48);
      if (v30)
      {
        uint64_t v52 = v8;
        uint64_t v53 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v30, memory_order_acquire) != -1)
        {
          v46[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v53;
          v46[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v52;
          unint64_t v54 = v46;
          std::__call_once(v30, &v54, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      uint64_t v31 = (unsigned int **)(v29 + 8);
      switch(*(_DWORD *)(v8 + 56))
      {
        case 1:
          double v36 = sub_10010FC38((uint64_t)v31);
          google::protobuf::Reflection::SetDouble(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v8, v36);
          break;
        case 2:
          float v37 = sub_10010FA34((uint64_t)v31);
          google::protobuf::Reflection::SetFloat(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v8, v37);
          break;
        case 3:
        case 0x10:
        case 0x12:
          uint64_t v33 = sub_10010F438((uint64_t)v31);
          google::protobuf::Reflection::SetInt64(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v8, v33);
          break;
        case 4:
        case 6:
          unint64_t v35 = sub_10010F830((uint64_t)v31);
          google::protobuf::Reflection::SetUInt64(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v8, v35);
          break;
        case 5:
        case 0xF:
        case 0x11:
          int v32 = sub_10010F23C(v31);
          google::protobuf::Reflection::SetInt32(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v8, v32);
          break;
        case 7:
        case 0xD:
          unsigned int v34 = sub_10010F634(v31);
          google::protobuf::Reflection::SetUInt32(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v8, v34);
          break;
        case 8:
          char v38 = sub_10010FE34((unsigned __int8 **)v31);
          google::protobuf::Reflection::SetBool(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v8, v38);
          break;
        case 9:
        case 0xC:
          uint64_t v40 = sub_100110034((uint64_t)v31);
          if (*(char *)(v40 + 23) < 0)
          {
            sub_1000BB834(v44, *(void **)v40, *(void *)(v40 + 8));
          }
          else
          {
            long long v41 = *(_OWORD *)v40;
            uint64_t v45 = *(void *)(v40 + 16);
            *(_OWORD *)int v44 = v41;
          }
          google::protobuf::Reflection::SetString((uint64_t)v3, (google::protobuf::Message *)v18, (google::protobuf::FieldDescriptor *)v8, (uint64_t)v44);
          if (SHIBYTE(v45) < 0) {
            operator delete(v44[0]);
          }
          break;
        case 0xA:
        case 0xB:
          uint64_t v42 = sub_100110420((uint64_t)v31);
          unint64_t v43 = google::protobuf::Reflection::MutableMessage(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v8, 0);
          (*(void (**)(uint64_t *, uint64_t))(*v43 + 112))(v43, v42);
          break;
        case 0xE:
          signed int v39 = sub_10011022C(v31);
          google::protobuf::Reflection::SetEnumValue(v3, (google::protobuf::Message *)v18, (const google::protobuf::FieldDescriptor *)v8, v39);
          break;
        default:
          break;
      }
      BOOL result = sub_1001126A4(&v49);
    }
    while (v49);
  }
  return result;
}

void sub_100110BD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100110C64(uint64_t a1)
{
  if (sub_100111CBC(a1) != 9)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 144);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapKey::GetStringValue");
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    int v6 = google::protobuf::internal::LogMessage::operator<<(v5, "string");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111CBC(a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return a1;
}

void sub_100110D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100110D5C(uint64_t a1)
{
  if (sub_100111CBC(a1) != 2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 124);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapKey::GetInt64Value");
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    int v6 = google::protobuf::internal::LogMessage::operator<<(v5, "int64");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111CBC(a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(void *)a1;
}

void sub_100110E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100110E54(unsigned int *a1)
{
  if (sub_100111CBC((uint64_t)a1) != 1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 132);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapKey::GetInt32Value");
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    int v6 = google::protobuf::internal::LogMessage::operator<<(v5, "int32");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111CBC((uint64_t)a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *a1;
}

void sub_100110F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100110F4C(uint64_t a1)
{
  if (sub_100111CBC(a1) != 4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 128);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapKey::GetUInt64Value");
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    int v6 = google::protobuf::internal::LogMessage::operator<<(v5, "uint64");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111CBC(a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *(void *)a1;
}

void sub_10011102C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100111044(unsigned int *a1)
{
  if (sub_100111CBC((uint64_t)a1) != 3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 136);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapKey::GetUInt32Value");
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    int v6 = google::protobuf::internal::LogMessage::operator<<(v5, "uint32");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111CBC((uint64_t)a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *a1;
}

void sub_100111124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10011113C(unsigned __int8 *a1)
{
  if (sub_100111CBC((uint64_t)a1) != 7)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 140);
    uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v13, "Protocol Buffer map usage error:\n");
    unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v2, "MapKey::GetBoolValue");
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v3, " type does not match\n");
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "  Expected : ");
    int v6 = google::protobuf::internal::LogMessage::operator<<(v5, "BOOL");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, "\n");
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "  Actual   : ");
    int v9 = sub_100111CBC((uint64_t)a1);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, google::protobuf::FieldDescriptor::kCppTypeToName[v9]);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  return *a1;
}

void sub_10011121C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::internal::DynamicMapField::SyncMapWithRepeatedFieldNoLock(google::protobuf::internal::DynamicMapField *this)
{
  uint64_t v2 = (uint64_t *)((char *)this + 96);
  (*(void (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  uint64_t v4 = v3;
  uint64_t v5 = (google::protobuf::Descriptor *)(*(uint64_t (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  uint64_t v6 = google::protobuf::Descriptor::map_key(v5);
  uint64_t v7 = (google::protobuf::Descriptor *)(*(uint64_t (**)(void))(**((void **)this + 18) + 152))(*((void *)this + 18));
  uint64_t v8 = google::protobuf::Descriptor::map_value(v7);
  if (!*((void *)this + 1))
  {
    std::string::size_type v9 = *((void *)this + 15);
    std::string::size_type v10 = *((void *)this + 13);
    if (v10 > v9)
    {
      uint64_t v11 = *((void *)this + 16);
      while (1)
      {
        char v12 = *(_DWORD **)(v11 + 8 * v9);
        if (v12) {
          break;
        }
        if (v10 == ++v9) {
          goto LABEL_11;
        }
      }
      if (v12 == *(_DWORD **)(v11 + 8 * (v9 ^ 1)))
      {
        char v12 = *(_DWORD **)(*(void *)v12 + 40);
        v35[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v12;
        v35[0].__r_.__value_.__l.__size_ = (std::string::size_type)v2;
        v35[0].__r_.__value_.__r.__words[2] = v9;
        if (!v12) {
          goto LABEL_11;
        }
      }
      else
      {
        v35[0].__r_.__value_.__r.__words[0] = *(void *)(v11 + 8 * v9);
        v35[0].__r_.__value_.__l.__size_ = (std::string::size_type)v2;
        v35[0].__r_.__value_.__r.__words[2] = v9;
      }
      do
      {
        sub_10010E4BC(v12 + 8);
        sub_1001126A4(v35);
        char v12 = (_DWORD *)v35[0].__r_.__value_.__r.__words[0];
      }
      while (v35[0].__r_.__value_.__r.__words[0]);
    }
  }
LABEL_11:
  sub_10011228C((uint64_t)v2);
  uint64_t v13 = *((void *)this + 2);
  if (*(_DWORD *)(v13 + 8))
  {
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14) {
      unint64_t v15 = (const google::protobuf::Message **)(v14 + 8);
    }
    else {
      unint64_t v15 = 0;
    }
    do
    {
      int v43 = 0;
      uint64_t v16 = *(std::once_flag::_State_type **)(v6 + 48);
      if (v16)
      {
        uint64_t v38 = v6;
        signed int v39 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v16, memory_order_acquire) != -1)
        {
          v35[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v39;
          v35[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v38;
          uint64_t v40 = v35;
          std::__call_once(v16, &v40, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      switch(*(_DWORD *)(v6 + 56))
      {
        case 1:
        case 2:
        case 0xA:
        case 0xB:
        case 0xE:
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)v35, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/map_field.cc", 513);
          uint64_t v17 = google::protobuf::internal::LogMessage::operator<<(v35, "Can't get here.");
          google::protobuf::internal::LogFinisher::operator=((int)&v40, (const char **)&v17->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&v35[0].__r_.__value_.__l.__data_);
          goto LABEL_52;
        case 3:
        case 0x10:
        case 0x12:
          Int64 = (void *)google::protobuf::Reflection::GetInt64(v4, *v15, (const google::protobuf::FieldDescriptor *)v6);
          if (v43 == 2) {
            goto LABEL_43;
          }
          if (v43 == 9 && v42 < 0) {
            operator delete(__p[0]);
          }
          int v21 = 2;
          goto LABEL_42;
        case 4:
        case 6:
          Int64 = (void *)google::protobuf::Reflection::GetUInt64(v4, *v15, (const google::protobuf::FieldDescriptor *)v6);
          if (v43 != 4)
          {
            if (v43 == 9 && v42 < 0) {
              operator delete(__p[0]);
            }
            int v21 = 4;
LABEL_42:
            int v43 = v21;
          }
LABEL_43:
          __p[0] = Int64;
          goto LABEL_52;
        case 5:
        case 0xF:
        case 0x11:
          int Int32 = google::protobuf::Reflection::GetInt32(v4, *v15, (const google::protobuf::FieldDescriptor *)v6);
          if (v43 == 1) {
            goto LABEL_36;
          }
          if (v43 == 9 && v42 < 0) {
            operator delete(__p[0]);
          }
          int v19 = 1;
          break;
        case 7:
        case 0xD:
          int Int32 = google::protobuf::Reflection::GetUInt32(v4, *v15, (const google::protobuf::FieldDescriptor *)v6);
          if (v43 == 3) {
            goto LABEL_36;
          }
          if (v43 == 9 && v42 < 0) {
            operator delete(__p[0]);
          }
          int v19 = 3;
          break;
        case 8:
          BOOL Bool = google::protobuf::Reflection::GetBool(v4, *v15, (const google::protobuf::FieldDescriptor *)v6);
          if (v43 != 7)
          {
            if (v43 == 9 && v42 < 0) {
              operator delete(__p[0]);
            }
            int v43 = 7;
          }
          LOBYTE(__p[0]) = Bool;
          goto LABEL_52;
        case 9:
        case 0xC:
          google::protobuf::Reflection::GetString(v4, *v15, (const google::protobuf::FieldDescriptor *)v6, (uint64_t)&v36);
          sub_100111A60((uint64_t)__p, &v36);
          if (v37 < 0) {
            operator delete((void *)v36.n128_u64[0]);
          }
          goto LABEL_52;
        default:
          goto LABEL_52;
      }
      int v43 = v19;
LABEL_36:
      LODWORD(__p[0]) = Int32;
LABEL_52:
      if (!*((void *)this + 1))
      {
        sub_100112818(v2, (unsigned int *)__p, 0, v35);
        if (v35[0].__r_.__value_.__r.__words[0]) {
          sub_10010E4BC((_DWORD *)(v35[0].__r_.__value_.__r.__words[0] + 32));
        }
      }
      sub_100113640(v2, (unsigned int *)__p, (uint64_t)v35);
      std::string::size_type v23 = v35[0].__r_.__value_.__r.__words[0];
      unsigned int v24 = *(std::once_flag::_State_type **)(v8 + 48);
      if (v24)
      {
        uint64_t v38 = v8;
        signed int v39 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v24, memory_order_acquire) != -1)
        {
          v35[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v39;
          v35[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v38;
          uint64_t v40 = v35;
          std::__call_once(v24, &v40, (void (__cdecl *)(void *))sub_1000BB820);
        }
        unint64_t v25 = *(std::once_flag::_State_type **)(v8 + 48);
        unsigned int v26 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v8 + 56)];
        *(_DWORD *)(v23 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = v26;
        if (v25)
        {
          uint64_t v38 = v8;
          signed int v39 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v25, memory_order_acquire) != -1)
          {
            v35[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v39;
            v35[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v38;
            uint64_t v40 = v35;
            std::__call_once(v25, &v40, (void (__cdecl *)(void *))sub_1000BB820);
          }
          unsigned int v26 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v8 + 56)];
        }
      }
      else
      {
        unsigned int v26 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v8 + 56)];
        *(_DWORD *)(v35[0].__r_.__value_.__r.__words[0] + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = v26;
      }
      switch(v26)
      {
        case 1u:
          uint64_t v27 = sub_100112F5C(*((google::protobuf::Arena **)this + 1));
          Uint Int32 = google::protobuf::Reflection::GetInt32(v4, *v15, (const google::protobuf::FieldDescriptor *)v8);
          goto LABEL_73;
        case 2u:
          uint64_t v27 = sub_100113058(*((google::protobuf::Arena **)this + 1));
          uint64_t UInt64 = google::protobuf::Reflection::GetInt64(v4, *v15, (const google::protobuf::FieldDescriptor *)v8);
          goto LABEL_68;
        case 3u:
          uint64_t v27 = sub_100113154(*((google::protobuf::Arena **)this + 1));
          Uint Int32 = google::protobuf::Reflection::GetUInt32(v4, *v15, (const google::protobuf::FieldDescriptor *)v8);
          goto LABEL_73;
        case 4u:
          uint64_t v27 = sub_100113250(*((google::protobuf::Arena **)this + 1));
          uint64_t UInt64 = google::protobuf::Reflection::GetUInt64(v4, *v15, (const google::protobuf::FieldDescriptor *)v8);
LABEL_68:
          void *v27 = UInt64;
          goto LABEL_78;
        case 5u:
          uint64_t v27 = sub_10011334C(*((google::protobuf::Arena **)this + 1));
          *(double *)uint64_t v27 = google::protobuf::Reflection::GetDouble(v4, *v15, (const google::protobuf::FieldDescriptor *)v8);
          goto LABEL_78;
        case 6u:
          uint64_t v27 = sub_100113448(*((google::protobuf::Arena **)this + 1));
          *(float *)uint64_t v27 = google::protobuf::Reflection::GetFloat(v4, *v15, (const google::protobuf::FieldDescriptor *)v8);
          goto LABEL_78;
        case 7u:
          uint64_t v27 = sub_100113544(*((google::protobuf::Arena **)this + 1));
          *(unsigned char *)uint64_t v27 = google::protobuf::Reflection::GetBool(v4, *v15, (const google::protobuf::FieldDescriptor *)v8);
          goto LABEL_78;
        case 8u:
          uint64_t v27 = sub_100112F5C(*((google::protobuf::Arena **)this + 1));
          Uint Int32 = google::protobuf::Reflection::GetEnumValue(v4, *v15, (const google::protobuf::FieldDescriptor *)v8);
LABEL_73:
          *(_DWORD *)uint64_t v27 = UInt32;
          goto LABEL_78;
        case 9u:
          uint64_t v27 = sub_1000BBB38(*((google::protobuf::Arena **)this + 1));
          google::protobuf::Reflection::GetString(v4, *v15, (const google::protobuf::FieldDescriptor *)v8, (uint64_t)v35);
          if (*((char *)v27 + 23) < 0) {
            operator delete((void *)*v27);
          }
          long long v30 = *(_OWORD *)&v35[0].__r_.__value_.__l.__data_;
          v27[2] = *((void *)&v35[0].__r_.__value_.__l + 2);
          *(_OWORD *)uint64_t v27 = v30;
          goto LABEL_78;
        case 0xAu:
          uint64_t Message = google::protobuf::Reflection::GetMessage(v4, *v15, (const google::protobuf::FieldDescriptor *)v8, 0);
          uint64_t v27 = (void *)(*(uint64_t (**)(uint64_t, void))(*(void *)Message + 32))(Message, *((void *)this + 1));
          (*(void (**)(void *, uint64_t))(*v27 + 112))(v27, Message);
LABEL_78:
          *(void *)(v23 + 3sub_1000FACE4((void *)this + 2) = v27;
          break;
        default:
          break;
      }
      if (v43 == 9 && v42 < 0) {
        operator delete(__p[0]);
      }
      ++v15;
      uint64_t v32 = *((void *)this + 2);
      uint64_t v33 = *(void *)(v32 + 16);
      if (v33) {
        uint64_t v34 = v33 + 8;
      }
      else {
        uint64_t v34 = 0;
      }
    }
    while (v15 != (const google::protobuf::Message **)(v34 + 8 * *(int *)(v32 + 8)));
  }
}

void sub_100111978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,int a31)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a31 == 9 && a30 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_100111A60(uint64_t a1, __n128 *a2)
{
  sub_1001120AC(a1, 9);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  __n128 result = *a2;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = a2[1].n128_u64[0];
  *(__n128 *)a1 = result;
  a2[1].n128_u8[7] = 0;
  a2->n128_u8[0] = 0;
  return result;
}

uint64_t google::protobuf::internal::DynamicMapField::SpaceUsedExcludingSelfNoLock(google::protobuf::internal::DynamicMapField *this)
{
  uint64_t v2 = *((void *)this + 2);
  if (v2)
  {
    uint64_t v3 = 8 * *(int *)(v2 + 12);
    uint64_t v4 = *(int **)(v2 + 16);
    if (v4)
    {
      if (*v4 >= 1)
      {
        uint64_t v5 = 0;
        do
        {
          v3 += (*(uint64_t (**)(void))(**(void **)&v4[2 * v5 + 2] + 136))(*(void *)&v4[2 * v5 + 2]);
          ++v5;
          uint64_t v4 = *(int **)(v2 + 16);
        }
        while (v5 < *v4);
      }
      v3 += 8;
    }
    uint64_t v6 = v3 + 48;
  }
  else
  {
    uint64_t v6 = 48;
  }
  uint64_t v7 = (char *)this + 96;
  uint64_t v8 = *((void *)this + 12);
  if (v8)
  {
    unint64_t v9 = *((void *)this + 15);
    unint64_t v10 = *((void *)this + 13);
    if (v10 <= v9)
    {
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v11 = *((void *)this + 16);
      while (1)
      {
        uint64_t v12 = *(void *)(v11 + 8 * v9);
        if (v12) {
          break;
        }
        if (v10 == ++v9)
        {
          uint64_t v12 = 0;
          unint64_t v9 = v10;
          goto LABEL_18;
        }
      }
      if (v12 == *(void *)(v11 + 8 * (v9 ^ 1))) {
        uint64_t v12 = *(void *)(*(void *)v12 + 40);
      }
    }
LABEL_18:
    v17[0] = v12;
    v17[1] = v7;
    void v17[2] = v9;
    if (sub_100111CBC(v12) == 9) {
      uint64_t v13 = 24 * v8;
    }
    else {
      uint64_t v13 = 0;
    }
    v6 += 48 * v8 + v13;
    switch(sub_100111D5C(v12 + 32))
    {
      case 1u:
      case 3u:
      case 6u:
      case 8u:
        v6 += 4 * v8;
        break;
      case 2u:
      case 4u:
      case 5u:
        v6 += 8 * v8;
        break;
      case 7u:
        v6 += v8;
        break;
      case 9u:
        v6 += 24 * v8;
        break;
      case 0xAu:
        while (v12)
        {
          uint64_t v14 = (const google::protobuf::Message *)sub_100110420(v12 + 32);
          (*(void (**)(const google::protobuf::Message *))(*(void *)v14 + 152))(v14);
          v6 += google::protobuf::Reflection::SpaceUsedLong(v15, v14);
          sub_1001126A4(v17);
          uint64_t v12 = v17[0];
        }
        break;
      default:
        return v6;
    }
  }
  return v6;
}

uint64_t sub_100111CBC(uint64_t a1)
{
  uint64_t result = *(unsigned int *)(a1 + 24);
  if (!result)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 91);
    uint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v7, "Protocol Buffer map usage error:\n");
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v3, "MapKey::type MapKey is not initialized. ");
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v4, "Call set methods to initialize MapKey.");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
    return *(unsigned int *)(a1 + 24);
  }
  return result;
}

void sub_100111D44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100111D5C(uint64_t a1)
{
  uint64_t result = *(unsigned int *)(a1 + 8);
  if (!result || !*(void *)a1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 742);
    uint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v6, "Protocol Buffer map usage error:\n");
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v3, "MapValueConstRef::type MapValueConstRef is not initialized.");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    return *(unsigned int *)(a1 + 8);
  }
  return result;
}

void sub_100111DE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL sub_100111DF8(uint64_t a1, void **a2, void **a3)
{
  return **a2 == **a3;
}

uint64_t sub_100111E14(uint64_t a1, void **a2)
{
  uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  unint64_t v5 = v4[3];
  unint64_t v6 = v4[1];
  if (v6 <= v5)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v7 = v4[4];
    while (1)
    {
      uint64_t v8 = *(void *)(v7 + 8 * v5);
      if (v8) {
        break;
      }
      if (v6 == ++v5)
      {
        uint64_t v8 = 0;
        unint64_t v5 = v4[1];
        goto LABEL_9;
      }
    }
    if (v8 == *(void *)(v7 + 8 * (v5 ^ 1))) {
      uint64_t v8 = *(void *)(*(void *)v8 + 40);
    }
  }
LABEL_9:
  unint64_t v9 = *a2;
  *unint64_t v9 = v8;
  v9[1] = v4;
  std::string v9[2] = v5;
  unint64_t v10 = *(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 176);
  return v10(a1, a2);
}

uint64_t sub_100111EF4(uint64_t a1, void **a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  uint64_t v4 = *a2;
  v4[1] = 0;
  std::string v4[2] = 0;
  *uint64_t v4 = 0;
  return result;
}

void sub_100111F44()
{
}

uint64_t sub_100111F88(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (*a2) {
    operator delete();
  }
  return result;
}

uint64_t sub_100111FA8(uint64_t a1, uint64_t *a2, _DWORD *a3)
{
  uint64_t v6 = *a2;
  long long v7 = *(_OWORD *)*(void *)a3;
  *(void *)(v6 + 1sub_1000FA614((void *)this + 6) = *(void *)(*(void *)a3 + 16);
  *(_OWORD *)uint64_t v6 = v7;
  uint64_t v8 = (uint64_t)(a2 + 2);
  int v9 = sub_100111CBC((uint64_t)(a3 + 4));
  sub_1001120AC(v8, v9);
  *((_DWORD *)a2 + 14) = a3[14];
  unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 176);
  return v10(a1, a2);
}

uint64_t sub_100112048(uint64_t a1, void **a2)
{
  sub_1001126A4(*a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 176);
  return v4(a1, a2);
}

void sub_1001120AC(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 24);
  if (v2 != a2)
  {
    if (v2 == 9 && *(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    *(_DWORD *)(a1 + 24) = a2;
    if (a2 == 9)
    {
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = 0;
    }
  }
}

void *sub_100112108(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_100112164(a1, 0);
  result[2] = 0;
  *uint64_t result = a1;
  result[1] = 0;
  return result;
}

void *sub_100112164(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x18uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))sub_10011221C);
}

void sub_10011221C(void *a1)
{
}

uint64_t sub_100112238(uint64_t a1)
{
  if (!*(void *)(a1 + 40) && *(void *)(a1 + 8) != 1)
  {
    sub_10011228C(a1);
    if (!*(void *)(a1 + 40)) {
      operator delete(*(void **)(a1 + 32));
    }
  }
  return a1;
}

uint64_t sub_10011228C(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 8);
  if (v2)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = v1[4];
      unint64_t v5 = *(uint64_t ***)(v4 + 8 * v3);
      if (v5)
      {
        if (v5 == *(uint64_t ***)(v4 + 8 * (v3 ^ 1)))
        {
          uint64_t v7 = v3 + 1;
          *(void *)(v4 + 8 * (v3 + 1)) = 0;
          *(void *)(v1[4] + 8 * v3) = 0;
          uint64_t v8 = *v5;
          do
          {
            uint64_t v9 = v8[5];
            unint64_t v10 = (uint64_t *)v8[1];
            uint64_t v11 = v8;
            if (v10)
            {
              do
              {
                uint64_t v12 = v10;
                unint64_t v10 = (uint64_t *)*v10;
              }
              while (v10);
            }
            else
            {
              do
              {
                uint64_t v12 = (uint64_t *)v11[2];
                BOOL v13 = *v12 == (void)v11;
                uint64_t v11 = v12;
              }
              while (!v13);
            }
            sub_100112478((uint64_t)v5, v8);
            sub_100112398((uint64_t)v1, v9);
            uint64_t v8 = v12;
          }
          while (v12 != (uint64_t *)(v5 + 1));
          uint64_t result = sub_100112410((uint64_t)v1, (uint64_t)v5);
          goto LABEL_16;
        }
        *(void *)(v4 + 8 * v3) = 0;
        do
        {
          uint64_t v6 = (uint64_t **)v5[6];
          uint64_t result = sub_100112398((uint64_t)v1, (uint64_t)v5);
          unint64_t v5 = v6;
        }
        while (v6);
      }
      uint64_t v7 = v3;
LABEL_16:
      uint64_t v3 = v7 + 1;
      unint64_t v2 = v1[1];
    }
    while (v7 + 1 < v2);
  }
  void *v1 = 0;
  v1[3] = v2;
  return result;
}

uint64_t sub_100112398(uint64_t result, uint64_t a2)
{
  if (a2 && !*(void *)(result + 40))
  {
    if (*(_DWORD *)(a2 + 24) == 9 && *(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    operator delete();
  }
  return result;
}

uint64_t sub_100112410(uint64_t result, uint64_t a2)
{
  if (a2 && !*(void *)(result + 40))
  {
    sub_100112534(a2, *(void **)(a2 + 8));
    operator delete();
  }
  return result;
}

uint64_t *sub_100112478(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_1001124C0(a1, a2);
  if (!*(void *)(a1 + 16)) {
    operator delete(a2);
  }
  return v4;
}

uint64_t *sub_1001124C0(uint64_t a1, uint64_t *a2)
{
  unint64_t v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      uint64_t v3 = v2;
      unint64_t v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    uint64_t v4 = a2;
    do
    {
      uint64_t v3 = (uint64_t *)v4[2];
      BOOL v5 = *v3 == (void)v4;
      uint64_t v4 = v3;
    }
    while (!v5);
  }
  if (*(uint64_t **)a1 == a2) {
    *(void *)a1 = v3;
  }
  --*(void *)(a1 + 24);
  sub_1000DAEE8(*(uint64_t **)(a1 + 8), a2);
  return v3;
}

void sub_100112534(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_100112534(a1, *a2);
    sub_100112534(a1, a2[1]);
    if (!*(void *)(a1 + 16))
    {
      operator delete(a2);
    }
  }
}

uint64_t sub_100112598(uint64_t a1, char *a2)
{
  *(void *)a1 = off_1001D0F58;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = 850045863;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = 0;
  *(_OWORD *)(a1 + 3sub_1000FACE4((void *)this + 2) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 7sub_1000FA614((void *)this + 6) = 0u;
  if (a2) {
    sub_100112620(a2, (void *)(a1 + 24));
  }
  return a1;
}

void sub_10011260C(_Unwind_Exception *a1)
{
  std::mutex::~mutex(v1);
  _Unwind_Resume(a1);
}

char *sub_100112620(char *result, void *a2)
{
  if (a2) {
    return google::protobuf::internal::ArenaImpl::AddCleanup((google::protobuf::internal::ArenaImpl *)result, a2, (void (*)(void *))std::mutex::~mutex);
  }
  return result;
}

void *sub_100112640(void *result, unint64_t a2)
{
  *uint64_t result = 0;
  uint64_t v2 = result[1];
  unint64_t v3 = *(void *)(v2 + 8);
  if (v3 <= a2)
  {
LABEL_6:
    result[2] = a2;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 32);
    while (1)
    {
      uint64_t v5 = *(void *)(v4 + 8 * a2);
      if (v5) {
        break;
      }
      if (v3 == ++a2)
      {
        a2 = v3;
        goto LABEL_6;
      }
    }
    uint64_t v6 = *(void *)(v4 + 8 * (a2 ^ 1));
    result[2] = a2;
    if (v5 == v6) {
      *uint64_t result = *(void *)(*(void *)v5 + 40);
    }
    else {
      *uint64_t result = v5;
    }
  }
  return result;
}

void *sub_1001126A4(void *a1)
{
  uint64_t v2 = *(void *)(*a1 + 48);
  if (v2) {
    goto LABEL_2;
  }
  if (sub_100112760((uint64_t)a1, (unint64_t *)&v11))
  {
    unint64_t v3 = a1[2] + 1;
LABEL_13:
    sub_100112640(a1, v3);
    return a1;
  }
  uint64_t v4 = a1[2];
  uint64_t v5 = *(void *)(*(void *)(a1[1] + 32) + 8 * v4);
  unint64_t v6 = (unint64_t)v11;
  uint64_t v7 = (void *)v11[1];
  if (v7)
  {
    do
    {
      uint64_t v8 = v7;
      uint64_t v7 = (void *)*v7;
    }
    while (v7);
  }
  else
  {
    do
    {
      uint64_t v8 = *(void **)(v6 + 16);
      BOOL v9 = *v8 == v6;
      unint64_t v6 = (unint64_t)v8;
    }
    while (!v9);
  }
  uint64_t v11 = v8;
  if (v8 == (void *)(v5 + 8))
  {
    unint64_t v3 = v4 + 2;
    goto LABEL_13;
  }
  uint64_t v2 = v8[5];
LABEL_2:
  *a1 = v2;
  return a1;
}

BOOL sub_100112760(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  uint64_t v5 = *(unsigned int **)a1;
  uint64_t v6 = *(void *)(a1 + 16) & (v4[1] - 1);
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = v6;
  uint64_t v7 = v4[4];
  uint64_t v8 = *(void *)(v7 + 8 * v6);
  if ((unsigned int *)v8 == v5) {
    return 1;
  }
  if (v8 && v8 != *(void *)(v7 + 8 * (v6 ^ 1)))
  {
    while (1)
    {
      uint64_t v8 = *(void *)(v8 + 48);
      if (!v8) {
        break;
      }
      if ((unsigned int *)v8 == v5) {
        return 1;
      }
    }
  }
  sub_100112818(v4, v5, a2, &v13);
  uint64_t v9 = v14;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = v14;
  uint64_t v10 = *(void *)(*(void *)(a1 + 8) + 32);
  uint64_t v11 = *(void *)(v10 + 8 * v9);
  return !v11 || v11 != *(void *)(v10 + 8 * (v9 ^ 1));
}

unint64_t sub_100112818@<X0>(void *a1@<X0>, unsigned int *a2@<X1>, unint64_t *a3@<X2>, void *a4@<X8>)
{
  unint64_t result = sub_10011290C((uint64_t)a1, a2);
  unint64_t v9 = (a1[1] - 1) & ((0x9E3779B97F4A7C15 * (a1[2] ^ result)) >> 32);
  uint64_t v10 = a1[4];
  uint64_t v11 = *(void *)(v10 + 8 * v9);
  if (v11)
  {
    if (v11 != *(void *)(v10 + 8 * (v9 ^ 1)))
    {
      while (1)
      {
        unint64_t result = sub_100112AD0((unsigned __int8 *)v11, (unsigned __int8 *)a2);
        if (result) {
          break;
        }
        uint64_t v11 = *(void *)(v11 + 48);
        if (!v11) {
          goto LABEL_10;
        }
      }
      *a4 = v11;
      goto LABEL_12;
    }
    unint64_t v9 = v9 & 0xFFFFFFFE;
    uint64_t v12 = *(void *)(v10 + 8 * v9);
    uint64_t v13 = a2;
    unint64_t result = sub_100112CFC(v12, (unsigned __int8 **)&v13);
    if (v12 + 8 != result)
    {
      if (a3) {
        *a3 = result;
      }
      *a4 = *(void *)(result + 40);
LABEL_12:
      a4[1] = a1;
      a4[2] = v9;
      goto LABEL_13;
    }
  }
LABEL_10:
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
LABEL_13:
  a4[3] = v9;
  return result;
}

unint64_t sub_10011290C(uint64_t a1, unsigned int *a2)
{
  switch(sub_100111CBC((uint64_t)a2))
  {
    case 1u:
      sub_100110E54(a2);
      return (int)sub_100110E54(a2);
    case 2u:
      return sub_100110D5C((uint64_t)a2);
    case 3u:
      sub_100111044(a2);
      LODWORD(result) = sub_100111044(a2);
      return result;
    case 4u:
      sub_100110F4C((uint64_t)a2);
      return sub_100110F4C((uint64_t)a2);
    case 5u:
    case 6u:
    case 8u:
    case 0xAu:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 278);
      unint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v8, "Unsupported");
      google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v3->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
      goto LABEL_3;
    case 7u:
      LODWORD(result) = sub_10011113C((unsigned __int8 *)a2);
      return result;
    case 9u:
      uint64_t v6 = sub_100110C64((uint64_t)a2);
      return sub_1000DA310((uint64_t)v8, v6);
    default:
LABEL_3:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 302);
      uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v8, "Can't get here.");
      google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v4->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
      return 0;
  }
}

void sub_100112A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL sub_100112AD0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unint64_t v3 = a1;
  if (*((_DWORD *)a1 + 6) != *((_DWORD *)a2 + 6))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 180);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v24, "Unsupported: type mismatch");
    google::protobuf::internal::LogFinisher::operator=((int)&v23, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  switch(sub_100111CBC((uint64_t)v3))
  {
    case 1u:
    case 3u:
      int v8 = *(_DWORD *)v3;
      int v9 = *(_DWORD *)a2;
      goto LABEL_28;
    case 2u:
    case 4u:
      BOOL v10 = *(void *)v3 == *(void *)a2;
      goto LABEL_29;
    case 5u:
    case 6u:
    case 8u:
    case 0xAu:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 187);
      uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v24, "Unsupported");
      google::protobuf::internal::LogFinisher::operator=((int)&v23, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
      goto LABEL_5;
    case 7u:
      int v8 = *v3;
      int v9 = *a2;
LABEL_28:
      BOOL v10 = v8 == v9;
      goto LABEL_29;
    case 9u:
      uint64_t v11 = v3[23];
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v3[23];
      }
      else {
        uint64_t v12 = *((void *)v3 + 1);
      }
      uint64_t v13 = a2[23];
      int v14 = (char)v13;
      if ((v13 & 0x80u) != 0) {
        uint64_t v13 = *((void *)a2 + 1);
      }
      if (v12 != v13) {
        goto LABEL_6;
      }
      if (v14 >= 0) {
        unint64_t v15 = a2;
      }
      else {
        unint64_t v15 = *(unsigned __int8 **)a2;
      }
      if ((v11 & 0x80) != 0)
      {
        BOOL v10 = memcmp(*(const void **)v3, v15, *((void *)v3 + 1)) == 0;
LABEL_29:
        BOOL result = v10;
      }
      else if (v3[23])
      {
        uint64_t v16 = v11 - 1;
        do
        {
          int v18 = *v3++;
          int v17 = v18;
          int v20 = *v15++;
          int v19 = v20;
          BOOL v22 = v16-- != 0;
          BOOL result = v17 == v19;
        }
        while (v17 == v19 && v22);
      }
      else
      {
        BOOL result = 1;
      }
      break;
    default:
LABEL_5:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 202);
      uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v24, "Can't get here.");
      google::protobuf::internal::LogFinisher::operator=((int)&v23, (const char **)&v6->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
LABEL_6:
      BOOL result = 0;
      break;
  }
  return result;
}

void sub_100112CAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100112CFC(uint64_t a1, unsigned __int8 **a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 8;
  do
  {
    BOOL v6 = sub_100112D78(*(unsigned __int8 **)(v3 + 32), *a2);
    char v7 = (uint64_t *)(v3 + 8);
    if (!v6)
    {
      char v7 = (uint64_t *)v3;
      uint64_t v5 = v3;
    }
    uint64_t v3 = *v7;
  }
  while (*v7);
  if (v5 == v2 || sub_100112D78(*a2, *(unsigned __int8 **)(v5 + 32))) {
    return v2;
  }
  return v5;
}

BOOL sub_100112D78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*((_DWORD *)a1 + 6) != *((_DWORD *)a2 + 6))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 152);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v20, "Unsupported: type mismatch");
    google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  switch(sub_100111CBC((uint64_t)a1))
  {
    case 1u:
      return *(_DWORD *)a1 < *(_DWORD *)a2;
    case 2u:
      return *(void *)a1 < *(void *)a2;
    case 3u:
      unsigned int v8 = *(_DWORD *)a1;
      unsigned int v9 = *(_DWORD *)a2;
      goto LABEL_32;
    case 4u:
      BOOL v10 = *(void *)a1 >= *(void *)a2;
      goto LABEL_33;
    case 5u:
    case 6u:
    case 8u:
    case 0xAu:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field.h", 159);
      uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v20, "Unsupported");
      google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v5->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
      goto LABEL_5;
    case 7u:
      unsigned int v8 = *a1;
      unsigned int v9 = *a2;
LABEL_32:
      BOOL v10 = v8 >= v9;
LABEL_33:
      BOOL result = !v10;
      break;
    case 9u:
      int v11 = (char)a2[23];
      int v12 = (char)a1[23];
      if (v12 >= 0) {
        size_t v13 = a1[23];
      }
      else {
        size_t v13 = *((void *)a1 + 1);
      }
      if (v12 >= 0) {
        int v14 = a1;
      }
      else {
        int v14 = *(const void **)a1;
      }
      if (v11 >= 0) {
        size_t v15 = a2[23];
      }
      else {
        size_t v15 = *((void *)a2 + 1);
      }
      if (v11 >= 0) {
        uint64_t v16 = a2;
      }
      else {
        uint64_t v16 = *(const void **)a2;
      }
      if (v15 >= v13) {
        size_t v17 = v13;
      }
      else {
        size_t v17 = v15;
      }
      int v18 = memcmp(v14, v16, v17);
      if (v18) {
        BOOL result = v18 < 0;
      }
      else {
        BOOL result = v13 < v15;
      }
      break;
    default:
LABEL_5:
      BOOL result = 0;
      break;
  }
  return result;
}

void sub_100112F14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *sub_100112F5C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  BOOL result = sub_100112F9C(a1, 1);
  *(_DWORD *)BOOL result = 0;
  return result;
}

void *sub_100112F9C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 8uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 8uLL, (void (*)(void *))nullsub_4);
}

void *sub_100113058(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  BOOL result = sub_100113098(a1, 1);
  *BOOL result = 0;
  return result;
}

void *sub_100113098(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 8uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 8uLL, (void (*)(void *))nullsub_5);
}

void *sub_100113154(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  BOOL result = sub_100113194(a1, 1);
  *(_DWORD *)BOOL result = 0;
  return result;
}

void *sub_100113194(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 8uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 8uLL, (void (*)(void *))nullsub_6);
}

void *sub_100113250(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  BOOL result = sub_100113290(a1, 1);
  *BOOL result = 0;
  return result;
}

void *sub_100113290(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 8uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 8uLL, (void (*)(void *))nullsub_7);
}

void *sub_10011334C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  BOOL result = sub_10011338C(a1, 1);
  *BOOL result = 0;
  return result;
}

void *sub_10011338C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 8uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 8uLL, (void (*)(void *))nullsub_8);
}

void *sub_100113448(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  BOOL result = sub_100113488(a1, 1);
  *(_DWORD *)BOOL result = 0;
  return result;
}

void *sub_100113488(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 8uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 8uLL, (void (*)(void *))nullsub_9);
}

void *sub_100113544(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  BOOL result = sub_100113584(a1, 1);
  *(unsigned char *)BOOL result = 0;
  return result;
}

void *sub_100113584(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 8uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 8uLL, (void (*)(void *))nullsub_10);
}

double sub_100113640@<D0>(uint64_t *a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  sub_100112818(a1, a2, 0, &v15);
  if ((void)v15)
  {
    uint64_t v7 = *((void *)&v15 + 1);
    uint64_t v8 = v16;
    *(void *)a3 = v15;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 1sub_1000FA614((void *)this + 6) = v8;
    *(unsigned char *)(a3 + 24) = 0;
  }
  else
  {
    if (sub_1001137B8((uint64_t)a1, *a1 + 1))
    {
      sub_100112818(a1, a2, 0, &v12);
      long long v15 = v12;
      uint64_t v9 = v14;
      uint64_t v16 = v13;
      uint64_t v17 = v14;
    }
    else
    {
      uint64_t v9 = v17;
    }
    if (!a1[5]) {
      operator new();
    }
    BOOL v10 = sub_100113850((uint64_t)a1, 1);
    int v11 = (char *)a1[5];
    v10[6] = 0;
    sub_10010ECBC((uint64_t)v10, (const std::string *)a2);
    sub_100113C70(v11, v10);
    *((void *)v10 + 4) = 0;
    v10[10] = 0;
    sub_10011386C(a1, v9, (unint64_t)v10, (unint64_t *)&v12);
    ++*a1;
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 1sub_1000FA614((void *)this + 6) = v13;
    *(unsigned char *)(a3 + 24) = 1;
  }
  return result;
}

void sub_100113794()
{
}

uint64_t sub_1001137B8(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = ((3 * v2) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v3 <= a2)
  {
    if (v2 <= 0x800000000000000)
    {
      size_t v6 = 2 * v2;
LABEL_16:
      sub_10011396C(a1, v6);
      return 1;
    }
  }
  else if (v2 >= 9 && (12 * v2) >> 6 >= a2)
  {
    char v7 = 0;
    do
      ++v7;
    while ((((5 * a2) >> 2) + 1) << v7 < v3);
    size_t v6 = v2 >> v7 <= 8 ? 8 : v2 >> v7;
    if (v6 != v2) {
      goto LABEL_16;
    }
  }
  return 0;
}

void *sub_100113850(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(google::protobuf::Arena **)(a1 + 40);
  uint64_t v3 = 56 * a2;
  if (v2) {
    return (void *)sub_100113BEC(v2, v3);
  }
  else {
    return operator new(v3);
  }
}

uint64_t *sub_10011386C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  unint64_t v4 = a3;
  unint64_t v5 = a2;
  size_t v6 = result;
  uint64_t v8 = result[4];
  uint64_t v9 = *(void *)(v8 + 8 * a2);
  if (!v9)
  {
    *(void *)(a3 + 48) = 0;
    *(void *)(v8 + 8 * asub_1000FACE4((void *)this + 2) = a3;
    goto LABEL_8;
  }
  if (v9 != *(void *)(v8 + 8 * (a2 ^ 1)))
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(void *)(v8 + 8 * a2);
    do
    {
      ++v10;
      uint64_t v11 = *(void *)(v11 + 48);
    }
    while (v11);
    if (v10 < 8)
    {
      *(void *)(a3 + 48) = v9;
      *(void *)(v8 + 8 * asub_1000FACE4((void *)this + 2) = a3;
LABEL_11:
      *a4 = v4;
      a4[1] = (unint64_t)v6;
      a4[2] = v5;
      return result;
    }
    sub_100113CAC((uint64_t)result, a2);
    *(void *)(v4 + 48) = 0;
    uint64_t v14 = *(uint64_t ***)(v6[4] + 8 * v5);
    v15.n128_u64[0] = v4;
    v15.n128_u64[1] = v4;
    double result = sub_100113EBC(v14, (unsigned __int8 **)&v15, &v15);
    v5 &= ~1uLL;
    unint64_t v4 = result[5];
LABEL_8:
    unint64_t v12 = v6[3];
    if (v5 < v12) {
      unint64_t v12 = v5;
    }
    v6[3] = v12;
    goto LABEL_11;
  }
  *(void *)(a3 + 48) = 0;
  uint64_t v13 = *(uint64_t ***)(v8 + 8 * a2);
  v15.n128_u64[0] = a3;
  v15.n128_u64[1] = a3;
  double result = sub_100113EBC(v13, (unsigned __int8 **)&v15, &v15);
  *a4 = result[5];
  a4[1] = (unint64_t)v6;
  a4[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

void sub_10011396C(uint64_t a1, size_t a2)
{
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 == 1)
  {
    *(void *)(a1 + 24) = 8;
    *(void *)(a1 + 8) = 8;
    unint64_t v4 = sub_100113BD4(a1, 8uLL);
    *unint64_t v4 = 0u;
    v4[1] = 0u;
    std::string v4[2] = 0u;
    v4[3] = 0u;
    *(void *)(a1 + 3sub_1000FACE4((void *)this + 2) = v4;
    *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = (unint64_t)a1 >> 12;
  }
  else
  {
    size_t v6 = *(void **)(a1 + 32);
    *(void *)(a1 + 8) = a2;
    char v7 = sub_100113BD4(a1, a2);
    bzero(v7, 8 * a2);
    unint64_t v8 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = *(void *)(a1 + 8);
    *(void *)(a1 + 3sub_1000FACE4((void *)this + 2) = v7;
    while (v8 < v3)
    {
      uint64_t v9 = v6[v8];
      if (v9)
      {
        if (v9 == v6[v8 ^ 1]) {
          sub_100113B0C((uint64_t *)a1, (uint64_t)v6, v8++);
        }
        else {
          sub_100113A8C((uint64_t *)a1, (uint64_t)v6, v8);
        }
      }
      ++v8;
    }
    if (!*(void *)(a1 + 40))
    {
      operator delete(v6);
    }
  }
}

uint64_t *sub_100113A8C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = *(void *)(a2 + 8 * a3);
  do
  {
    unint64_t v5 = *(void *)(v4 + 48);
    unint64_t v6 = sub_10011290C((uint64_t)a1, (unsigned int *)v4);
    double result = sub_10011386C(a1, (a1[1] - 1) & ((0x9E3779B97F4A7C15 * (a1[2] ^ v6)) >> 32), v4, v8);
    unint64_t v4 = v5;
  }
  while (v5);
  return result;
}

uint64_t sub_100113B0C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = *(void **)(a2 + 8 * a3);
  unint64_t v5 = (void *)*v4;
  do
  {
    unint64_t v6 = sub_10011290C((uint64_t)a1, (unsigned int *)v5[4]);
    sub_10011386C(a1, (a1[1] - 1) & ((0x9E3779B97F4A7C15 * (a1[2] ^ v6)) >> 32), v5[5], v11);
    char v7 = (void *)v5[1];
    if (v7)
    {
      do
      {
        unint64_t v8 = v7;
        char v7 = (void *)*v7;
      }
      while (v7);
    }
    else
    {
      do
      {
        unint64_t v8 = (void *)v5[2];
        BOOL v9 = *v8 == (void)v5;
        unint64_t v5 = v8;
      }
      while (!v9);
    }
    unint64_t v5 = v8;
  }
  while (v8 != v4 + 1);
  return sub_100112410((uint64_t)a1, (uint64_t)v4);
}

void *sub_100113BD4(uint64_t a1, size_t __sz)
{
  unint64_t v2 = *(google::protobuf::Arena **)(a1 + 40);
  size_t v3 = 8 * __sz;
  if (v2) {
    return (void *)sub_100113BEC(v2, v3);
  }
  else {
    return operator new(v3);
  }
}

uint64_t sub_100113BEC(google::protobuf::Arena *this, uint64_t a2)
{
  unint64_t v3 = (a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*((unsigned char *)this + 24)) {
  return google::protobuf::Arena::AllocateAlignedNoHook(this, v3);
  }
}

char *sub_100113C70(char *result, void *a2)
{
  if (a2) {
    return google::protobuf::internal::ArenaImpl::AddCleanup((google::protobuf::internal::ArenaImpl *)result, a2, (void (*)(void *))sub_100113C8C);
  }
  return result;
}

void sub_100113C8C(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 24) == 9 && *(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

uint64_t sub_100113CAC(uint64_t a1, uint64_t a2)
{
  unint64_t v6 = *(google::protobuf::Arena **)(a1 + 40);
  unint64_t v4 = (uint64_t **)sub_100113DA0(v6, (uint64_t)&v7, (uint64_t *)&v6);
  sub_100113D2C(a1, a2, v4);
  uint64_t result = sub_100113D2C(a1, a2 ^ 1, v4);
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = v4;
  *(void *)(*(void *)(a1 + 32) + 8 * asub_1000FACE4((void *)this + 2) = v4;
  return result;
}

uint64_t sub_100113D2C(uint64_t a1, uint64_t a2, uint64_t **a3)
{
  unint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8 * a2);
  if (!v3) {
    return 0;
  }
  uint64_t v5 = 0;
  do
  {
    v8.n128_u64[0] = v3;
    v8.n128_u64[1] = v3;
    sub_100113EBC(a3, (unsigned __int8 **)&v8, &v8);
    ++v5;
    unint64_t v6 = *(void *)(v3 + 48);
    *(void *)(v3 + 48) = 0;
    unint64_t v3 = v6;
  }
  while (v6);
  return v5;
}

void *sub_100113DA0(google::protobuf::Arena *a1, uint64_t a2, uint64_t *a3)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_100113DFC(a1, 0);
  uint64_t v5 = *a3;
  result[1] = 0;
  result[2] = v5;
  result[3] = 0;
  *uint64_t result = result + 1;
  return result;
}

void *sub_100113DFC(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_100113EB4);
}

void sub_100113EB4(uint64_t a1)
{
}

uint64_t *sub_100113EBC(uint64_t **a1, unsigned __int8 **a2, __n128 *a3)
{
  uint64_t v5 = (uint64_t **)sub_100113F3C((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    sub_100113FC4((uint64_t)a1, a3, (uint64_t)&v7);
    sub_100114024(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

uint64_t *sub_100113F3C(uint64_t a1, void *a2, unsigned __int8 **a3)
{
  uint64_t v5 = (uint64_t *)(a1 + 8);
  unint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        char v7 = v4;
        if (!sub_100112D78(*a3, (unsigned __int8 *)v4[4])) {
          break;
        }
        unint64_t v4 = (uint64_t *)*v7;
        uint64_t v5 = v7;
        if (!*v7) {
          goto LABEL_9;
        }
      }
      if (!sub_100112D78((unsigned __int8 *)v7[4], *a3)) {
        break;
      }
      uint64_t v5 = v7 + 1;
      unint64_t v4 = (uint64_t *)v7[1];
    }
    while (v4);
  }
  else
  {
    char v7 = (uint64_t *)(a1 + 8);
  }
LABEL_9:
  *a2 = v7;
  return v5;
}

__n128 sub_100113FC4@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a1 + 16;
  uint64_t v5 = *(google::protobuf::Arena **)(a1 + 16);
  if (v5) {
    uint64_t v7 = sub_100113BEC(v5, 48);
  }
  else {
    uint64_t v7 = (uint64_t)operator new(0x30uLL);
  }
  *(void *)a3 = v7;
  *(void *)(a3 + 8) = v6;
  __n128 result = *a2;
  *(__n128 *)(v7 + 3sub_1000FACE4((void *)this + 2) = *a2;
  *(unsigned char *)(a3 + 1sub_1000FA614((void *)this + 6) = 1;
  return result;
}

uint64_t *sub_100114024(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  uint64_t v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  __n128 result = sub_100027574(a1[1], a4);
  a1[3] = (uint64_t *)((char *)a1[3] + 1);
  return result;
}

uint64_t sub_10011407C(void *a1, uint64_t *a2)
{
  BOOL v4 = sub_100112760((uint64_t)a2, (unint64_t *)&v13);
  unint64_t v5 = a2[2];
  uint64_t v6 = *a2;
  uint64_t v7 = a1[4];
  uint64_t v8 = *(void *)(v7 + 8 * v5);
  if (v4)
  {
    uint64_t v9 = sub_100114180((uint64_t)a1, v6, *(void *)(v7 + 8 * v5));
LABEL_5:
    *(void *)(a1[4] + 8 * vsub_1000FA614((void *)this + 5) = v9;
    goto LABEL_6;
  }
  sub_100112478(*(void *)(v7 + 8 * v5), v13);
  if (!*(void *)(v8 + 24))
  {
    sub_100112410((uint64_t)a1, v8);
    uint64_t v9 = 0;
    *(void *)(a1[4] + ((8 * v5) | 8)) = 0;
    v5 &= ~1uLL;
    goto LABEL_5;
  }
LABEL_6:
  uint64_t result = sub_100112398((uint64_t)a1, v6);
  --*a1;
  if (v5 == a1[3])
  {
    unint64_t v11 = a1[1];
    if (v5 < v11)
    {
      uint64_t v12 = a1[4];
      do
      {
        if (*(void *)(v12 + 8 * v5)) {
          break;
        }
        a1[3] = ++v5;
      }
      while (v11 != v5);
    }
  }
  return result;
}

uint64_t sub_100114180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = *(void *)(a3 + 48);
  if (v3 == a2) {
    return v4;
  }
  *(void *)(v3 + 48) = sub_100114180();
  return v3;
}

uint64_t *sub_1001141C0(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  *uint64_t result = *a2;
  *a2 = v2;
  uint64_t v3 = result[1];
  result[1] = a2[1];
  a2[1] = v3;
  uint64_t v4 = result[2];
  result[2] = a2[2];
  a2[2] = v4;
  uint64_t v5 = result[3];
  uint64_t v6 = result[4];
  uint64_t v7 = a2[4];
  result[3] = a2[3];
  result[4] = v7;
  a2[3] = v5;
  a2[4] = v6;
  uint64_t v8 = result[5];
  result[5] = a2[5];
  a2[5] = v8;
  return result;
}

uint64_t sub_100114214(uint64_t a1, void *a2)
{
  *(_OWORD *)a1 = xmmword_1001825C0;
  *(_OWORD *)(a1 + 1sub_1000FA614((void *)this + 6) = xmmword_1001825C0;
  *(void *)(a1 + 3sub_1000FACE4((void *)this + 2) = &google::protobuf::internal::kGlobalEmptyTable;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = 0;
  unint64_t v3 = a2[3];
  unint64_t v4 = a2[1];
  if (v4 <= v3)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v5 = a2[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v3);
      if (v6) {
        break;
      }
      if (v4 == ++v3)
      {
        uint64_t v6 = 0;
        unint64_t v3 = a2[1];
        goto LABEL_9;
      }
    }
    if (v6 == *(void *)(v5 + 8 * (v3 ^ 1))) {
      uint64_t v6 = *(void *)(*(void *)v6 + 40);
    }
  }
LABEL_9:
  *(void *)&long long v9 = v6;
  *((void *)&v9 + sub_1000333D0((uint64_t *)this + 1) = a2;
  unint64_t v10 = v3;
  memset(v8, 0, sizeof(v8));
  sub_100114394((uint64_t *)a1, &v9, v8);
  return a1;
}

void sub_1001142CC(_Unwind_Exception *a1)
{
  sub_100112238(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_1001142E0(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_10011228C((uint64_t)a1);
    unint64_t v4 = a2[3];
    unint64_t v5 = a2[1];
    if (v5 <= v4)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v6 = a2[4];
      while (1)
      {
        uint64_t v7 = *(void *)(v6 + 8 * v4);
        if (v7) {
          break;
        }
        if (v5 == ++v4)
        {
          uint64_t v7 = 0;
          unint64_t v4 = a2[1];
          goto LABEL_10;
        }
      }
      if (v7 == *(void *)(v6 + 8 * (v4 ^ 1))) {
        uint64_t v7 = *(void *)(*(void *)v7 + 40);
      }
    }
LABEL_10:
    *(void *)&long long v10 = v7;
    *((void *)&v10 + sub_1000333D0((uint64_t *)this + 1) = a2;
    unint64_t v11 = v4;
    memset(v9, 0, sizeof(v9));
    sub_100114394(a1, &v10, v9);
  }
  return a1;
}

uint64_t *sub_100114394(uint64_t *result, long long *a2, void *a3)
{
  long long v9 = *a2;
  uint64_t v10 = *((void *)a2 + 2);
  unint64_t v3 = (unsigned int *)v9;
  if ((void)v9 != *a3)
  {
    unint64_t v5 = result;
    do
    {
      sub_100112818(v5, v3, 0, v11);
      if (!v11[0])
      {
        uint64_t v6 = v9;
        sub_100113640(v5, (unsigned int *)v9, (uint64_t)v11);
        uint64_t v7 = v11[0];
        uint64_t v8 = *(void *)(v6 + 32);
        *(_DWORD *)(v11[0] + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = *(_DWORD *)(v6 + 40);
        *(void *)(v7 + 3sub_1000FACE4((void *)this + 2) = v8;
      }
      uint64_t result = sub_1001126A4(&v9);
      unint64_t v3 = (unsigned int *)v9;
    }
    while ((void)v9 != *a3);
  }
  return result;
}

unsigned int *sub_100114440(uint64_t a1, void *a2)
{
  uint64_t result = (unsigned int *)google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::GetMaybeArenaPointer((uint64_t)a2);
  unint64_t v5 = *(char **)a1;
  if (*(unsigned int **)a1 == result && (v7 = *(int **)(a1 + 16)) != 0 && (uint64_t v8 = *v7, (int)v8 < *(_DWORD *)(a1 + 12)))
  {
    long long v9 = v7 + 2;
    uint64_t v10 = *(int *)(a1 + 8);
    if ((int)v10 < (int)v8) {
      *(void *)&v9[2 * v8] = *(void *)&v9[2 * v10];
    }
    *(void *)&v9[2 * v10] = a2;
    *(_DWORD *)(a1 + 8) = v10 + 1;
    ++**(_DWORD **)(a1 + 16);
  }
  else
  {
    Arena = (char *)google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::GetArena((uint64_t)a2);
    return sub_100114504((unsigned int *)a1, a2, Arena, v5);
  }
  return result;
}

unsigned int *sub_100114504(unsigned int *a1, void *a2, char *a3, char *a4)
{
  uint64_t v5 = (uint64_t)a2;
  if (a3 || !a4)
  {
    if (a4 != a3)
    {
      uint64_t v7 = google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::NewFromPrototype((uint64_t)a2);
      sub_1001145D4(v5, v7);
      if (!a3) {
        (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
      }
      uint64_t v5 = v7;
    }
  }
  else
  {
    sub_1001145B8(a4, a2);
  }
  return sub_100109B10(a1, v5);
}

char *sub_1001145B8(char *result, void *a2)
{
  if (a2) {
    return google::protobuf::internal::ArenaImpl::AddCleanup((google::protobuf::internal::ArenaImpl *)result, a2, (void (*)(void *))sub_100114604);
  }
  return result;
}

uint64_t sub_1001145D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a2 + 120))(a2, a1);
}

uint64_t sub_100114604(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void google::protobuf::internal::ExtensionSet::AppendToList(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a4;
  unint64_t v4 = *(void **)(a1 + 16);
  if (*(unsigned __int16 *)(a1 + 8) >= 0x101u)
  {
    unint64_t v11 = (void *)*v4;
    long long v9 = v4 + 1;
    uint64_t v10 = v11;
    uint64_t v16 = a2;
    uint64_t v17 = a3;
    int v18 = &v15;
    if (v11 != v9)
    {
      do
      {
        sub_100116180((uint64_t)&v16, *((unsigned int *)v10 + 8), (google::protobuf::internal::ExtensionSet::Extension *)(v10 + 5));
        uint64_t v12 = (void *)v10[1];
        if (v12)
        {
          do
          {
            uint64_t v13 = v12;
            uint64_t v12 = (void *)*v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            uint64_t v13 = (void *)v10[2];
            BOOL v14 = *v13 == (void)v10;
            uint64_t v10 = v13;
          }
          while (!v14);
        }
        uint64_t v10 = v13;
      }
      while (v13 != v9);
    }
  }
  else
  {
    uint64_t v5 = *(unsigned __int16 *)(a1 + 10);
    uint64_t v16 = a2;
    uint64_t v17 = a3;
    int v18 = &v15;
    if (v5)
    {
      uint64_t v6 = &v4[4 * v5];
      do
      {
        uint64_t v7 = (google::protobuf::internal::ExtensionSet::Extension *)(v4 + 1);
        unsigned int v8 = *(_DWORD *)v4;
        v4 += 4;
        sub_100116180((uint64_t)&v16, v8, v7);
      }
      while (v4 != v6);
    }
  }
}

uint64_t google::protobuf::internal::ExtensionSet::GetMessage(google::protobuf::internal::ExtensionSet *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = google::protobuf::internal::ExtensionSet::FindOrNull(a1, a2);
  if (!v6 || (v6[10] & 1) != 0)
  {
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a4 + 16);
    uint64_t v10 = a4;
    uint64_t v11 = a3;
  }
  else
  {
    uint64_t v7 = *(void *)v6;
    if ((v6[10] & 0x10) == 0) {
      return *(void *)v6;
    }
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a4 + 16))(a4, a3);
    long long v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v7 + 24);
    uint64_t v10 = v7;
  }
  return v9(v10, v11);
}

uint64_t *google::protobuf::internal::ExtensionSet::MutableMessage(google::protobuf::internal::ExtensionSet *this, const google::protobuf::FieldDescriptor *a2, google::protobuf::MessageFactory *a3)
{
  int v18 = 0;
  if (google::protobuf::internal::ExtensionSet::MaybeNewExtension(this, *((_DWORD *)a2 + 17), a2, &v18))
  {
    uint64_t v6 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v6)
    {
      char v19 = a2;
      int v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
      {
        v22[0] = &v20;
        v22[1] = &v19;
        int v21 = v22;
        std::__call_once(v6, &v21, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    uint64_t v7 = v18;
    *((_WORD *)v18 + 4) = *((_DWORD *)a2 + 14);
    *((unsigned char *)v7 + 1sub_1000333D0((uint64_t *)this + 1) = 0;
    uint64_t v8 = google::protobuf::FieldDescriptor::message_type(a2);
    uint64_t v9 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(void *)a3 + 16))(a3, v8);
    *((unsigned char *)v18 + 10) &= 0xFu;
    uint64_t v10 = (uint64_t *)(*(uint64_t (**)(uint64_t, void))(*(void *)v9 + 32))(v9, *(void *)this);
    *int v18 = v10;
    uint64_t v11 = v18;
    *((unsigned char *)v18 + 10) &= 0xF0u;
    return *v11;
  }
  else
  {
    uint64_t v13 = v18;
    char v14 = *((unsigned char *)v18 + 10);
    *((unsigned char *)v18 + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = v14 & 0xF0;
    uint64_t v12 = *v13;
    if ((v14 & 0x10) != 0)
    {
      uint64_t v15 = google::protobuf::FieldDescriptor::message_type(a2);
      uint64_t v16 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(void *)a3 + 16))(a3, v15);
      return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t))(*v12 + 32))(v12, v16);
    }
  }
  return v12;
}

uint64_t google::protobuf::internal::ExtensionSet::UnsafeArenaReleaseMessage(google::protobuf::internal::ExtensionSet *this, const google::protobuf::FieldDescriptor *a2, google::protobuf::MessageFactory *a3)
{
  uint64_t v6 = google::protobuf::internal::ExtensionSet::FindOrNull(this, *((_DWORD *)a2 + 17));
  if (!v6) {
    return 0;
  }
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)v6;
  if ((*((unsigned char *)v6 + 10) & 0x10) != 0)
  {
    uint64_t v9 = google::protobuf::FieldDescriptor::message_type(a2);
    uint64_t v10 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(void *)a3 + 16))(a3, v9);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v8 + 64))(v8, v10);
    if (!*(void *)this)
    {
      if (*v7) {
        (*(void (**)(void))(*(void *)*v7 + 8))(*v7);
      }
    }
  }
  google::protobuf::internal::ExtensionSet::Erase(this, *((_DWORD *)a2 + 17));
  return v8;
}

uint64_t **google::protobuf::internal::ExtensionSet::MaybeNewRepeatedExtension(google::protobuf::Arena **this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v8 = 0;
  if (google::protobuf::internal::ExtensionSet::MaybeNewExtension((google::protobuf::internal::ExtensionSet *)this, *((_DWORD *)a2 + 17), a2, &v8))
  {
    unint64_t v4 = (std::once_flag::_State_type *)*((void *)a2 + 6);
    if (v4)
    {
      uint64_t v9 = a2;
      uint64_t v10 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v4, memory_order_acquire) != -1)
      {
        v12[0] = &v10;
        v12[1] = &v9;
        uint64_t v11 = v12;
        std::__call_once(v4, &v11, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    uint64_t v5 = v8;
    *((unsigned char *)v8 + 8) = *((_DWORD *)a2 + 14);
    *((unsigned char *)v5 + 9) = 1;
    uint64_t v6 = sub_1001099A4(*this);
    *uint64_t v8 = v6;
  }
  return v8;
}

uint64_t google::protobuf::internal::ExtensionSet::AddMessage(google::protobuf::Arena **this, const google::protobuf::FieldDescriptor *a2, google::protobuf::MessageFactory *a3)
{
  uint64_t v6 = google::protobuf::internal::ExtensionSet::MaybeNewRepeatedExtension(this, a2);
  uint64_t v7 = (unsigned int **)v6;
  uint64_t v8 = *v6;
  uint64_t v9 = (_DWORD *)(*v6)[2];
  if (v9)
  {
    uint64_t v10 = *((int *)v8 + 2);
    if ((int)v10 < *v9)
    {
      *((_DWORD *)v8 + sub_1000FACE4((void *)this + 2) = v10 + 1;
      uint64_t v11 = *(void *)&v9[2 * v10 + 2];
      if (v11) {
        return v11;
      }
      uint64_t v8 = *v6;
    }
  }
  if (*((_DWORD *)v8 + 2))
  {
    uint64_t v12 = *(void *)(v8[2] + 8);
  }
  else
  {
    uint64_t v13 = google::protobuf::FieldDescriptor::message_type(a2);
    uint64_t v12 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(void *)a3 + 16))(a3, v13);
    if (!v12)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set_heavy.cc", 273);
      char v14 = google::protobuf::internal::LogMessage::operator<<(v17, "CHECK failed: prototype != NULL: ");
      google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v14->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
      uint64_t v12 = 0;
    }
  }
  uint64_t v11 = (*(uint64_t (**)(uint64_t, google::protobuf::Arena *))(*(void *)v12 + 32))(v12, *this);
  sub_100109ABC(*v7, v11);
  return v11;
}

void sub_100114CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::internal::DescriptorPoolExtensionFinder::Find(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(*(std::mutex ***)(a1 + 8), *(const google::protobuf::Descriptor **)(a1 + 24), a2);
  uint64_t v6 = ExtensionByNumber;
  if (ExtensionByNumber)
  {
    uint64_t v7 = *(std::once_flag::_State_type **)(ExtensionByNumber + 48);
    if (v7)
    {
      int v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
      uint64_t v19 = v6;
      if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
      {
        v18[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v20;
        v18[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v19;
        int v21 = v18;
        std::__call_once(v7, &v21, (void (__cdecl *)(void *))sub_1000BB820);
      }
      uint64_t v7 = *(std::once_flag::_State_type **)(v6 + 48);
    }
    int v8 = *(_DWORD *)(v6 + 56);
    *(unsigned char *)a3 = v8;
    *(unsigned char *)(a3 + sub_1000333D0((uint64_t *)this + 1) = *(_DWORD *)(v6 + 60) == 3;
    *(unsigned char *)(a3 + sub_1000FACE4((void *)this + 2) = *(unsigned char *)(*(void *)(v6 + 120) + 76);
    *(void *)(a3 + 24) = v6;
    if (v7)
    {
      int v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
      uint64_t v19 = v6;
      if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
      {
        v18[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v20;
        v18[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v19;
        int v21 = v18;
        std::__call_once(v7, &v21, (void (__cdecl *)(void *))sub_1000BB820);
      }
      int v8 = *(_DWORD *)(v6 + 56);
    }
    unsigned int v9 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[v8];
    if (v9 == 10)
    {
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v11 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v6);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 16))(v10, v11);
      *(void *)(a3 + 8) = v12;
      if (!v12)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/extension_set_heavy.cc", 308);
        uint64_t v13 = google::protobuf::internal::LogMessage::operator<<(v18, "CHECK failed: output->message_info.prototype != nullptr: ");
        char v14 = google::protobuf::internal::LogMessage::operator<<(v13, "Extension factory's GetPrototype() returned NULL for extension: ");
        uint64_t v15 = google::protobuf::internal::LogMessage::operator<<(v14, *(const std::string::value_type **)(v6 + 8));
        google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v15->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
      }
    }
    else
    {
      char v16 = *(std::once_flag::_State_type **)(v6 + 48);
      if (v16)
      {
        int v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
        uint64_t v19 = v6;
        if (atomic_load_explicit((atomic_ullong *volatile)v16, memory_order_acquire) != -1)
        {
          v18[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v20;
          v18[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v19;
          int v21 = v18;
          std::__call_once(v16, &v21, (void (__cdecl *)(void *))sub_1000BB820);
        }
        unsigned int v9 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v6 + 56)];
      }
      if (v9 == 8)
      {
        *(void *)(a3 + 8) = sub_100114F44;
        *(void *)(a3 + 1sub_1000FA614((void *)this + 6) = google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)v6);
      }
    }
  }
  return v6 != 0;
}

void sub_100114F2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL sub_100114F44(google::protobuf::EnumDescriptor *a1, unsigned int a2)
{
  return google::protobuf::EnumDescriptor::FindValueByNumber(a1, a2) != 0;
}

unsigned __int8 *google::protobuf::internal::ExtensionSet::ParseField(google::protobuf::internal::ExtensionSet *a1, unint64_t a2, google::protobuf::internal *a3, uint64_t a4, unint64_t *a5, int32x2_t *a6)
{
  unint64_t v11 = a2 >> 3;
  LOBYTE(v1sub_1000FA614((void *)this + 5) = 0;
  if (sub_100115024((uint64_t)a1, a2 & 7, a2 >> 3, a4, (uint64_t)a6, v14, &v15)) {
    return sub_100115168(a1, v11, v15, (uint64_t)v14, a5, a3, a6);
  }
  if (*a5) {
    uint64_t v13 = (google::protobuf::Arena **)((*a5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v13 = sub_10003562C(a5);
  }
  return (unsigned __int8 *)google::protobuf::internal::UnknownFieldParse(a2, (google::protobuf::UnknownFieldSet *)v13, a3);
}

uint64_t sub_100115024(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6, unsigned char *a7)
{
  uint64_t v12 = *(void *)(a5 + 96);
  if (v12)
  {
    uint64_t v13 = *(void *)(a5 + 104);
    uint64_t v14 = (*(uint64_t (**)(uint64_t))(*(void *)a4 + 152))(a4);
    int v18 = (uint64_t (**)())&off_1001D1148;
    uint64_t v19 = v12;
    uint64_t v20 = v13;
    uint64_t v21 = v14;
    int ExtensionInfoFromFieldNumber = google::protobuf::internal::ExtensionSet::FindExtensionInfoFromFieldNumber(a1, a2, a3, (uint64_t)&v18, a6, a7);
    google::protobuf::internal::ExtensionFinder::~ExtensionFinder((google::protobuf::internal::ExtensionFinder *)&v18);
    if (ExtensionInfoFromFieldNumber) {
      return 1;
    }
  }
  else
  {
    int v18 = off_1001D0AB8;
    uint64_t v19 = a4;
    char v17 = google::protobuf::internal::ExtensionSet::FindExtensionInfoFromFieldNumber(a1, a2, a3, (uint64_t)&v18, a6, a7);
    google::protobuf::internal::ExtensionFinder::~ExtensionFinder((google::protobuf::internal::ExtensionFinder *)&v18);
    if (v17) {
      return 1;
    }
  }
  return 0;
}

void sub_100115150(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

unsigned __int8 *sub_100115168(google::protobuf::internal::ExtensionSet *this, int a2, int a3, uint64_t a4, unint64_t *a5, google::protobuf::internal *a6, int32x2_t *a7)
{
  int v8 = a6;
  unsigned int v11 = a2;
  uint64_t v12 = this;
  if (a3)
  {
    switch(*(unsigned char *)a4)
    {
      case 1:
        uint64_t v31 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 1, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = (unsigned __int8 *)google::protobuf::internal::PackedDoubleParser((google::protobuf::internal *)v31, v8, (const char *)a7, v32);
        break;
      case 2:
        uint64_t v33 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 2, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = (unsigned __int8 *)google::protobuf::internal::PackedFloatParser((google::protobuf::internal *)v33, v8, (const char *)a7, v34);
        break;
      case 3:
        unint64_t v35 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 3, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = google::protobuf::internal::PackedInt64Parser((unsigned int *)v35, v8, (uint64_t)a7);
        break;
      case 4:
        __n128 v36 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 4, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = google::protobuf::internal::PackedUInt64Parser((unsigned int *)v36, v8, (uint64_t)a7);
        break;
      case 5:
        char v16 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 5, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = google::protobuf::internal::PackedInt32Parser((unsigned int *)v16, v8, (uint64_t)a7);
        break;
      case 6:
        char v37 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 6, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = (unsigned __int8 *)google::protobuf::internal::PackedFixed64Parser((google::protobuf::internal *)v37, v8, (const char *)a7, v38);
        break;
      case 7:
        signed int v39 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 7, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = (unsigned __int8 *)google::protobuf::internal::PackedFixed32Parser((google::protobuf::internal *)v39, v8, (const char *)a7, v40);
        break;
      case 8:
        long long v41 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 8, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = google::protobuf::internal::PackedBoolParser((unsigned int *)v41, v8, (uint64_t)a7);
        break;
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v91, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/extension_set_inl.h", 79);
        uint64_t v13 = google::protobuf::internal::LogMessage::operator<<(&v91, "Non-primitive types can't be packed.");
        google::protobuf::internal::LogFinisher::operator=((int)&v90, (const char **)&v13->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v91.__r_.__value_.__l.__data_);
        goto LABEL_168;
      case 0xD:
        int v18 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 13, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = google::protobuf::internal::PackedUInt32Parser((unsigned int *)v18, v8, (uint64_t)a7);
        break;
      case 0xE:
        v91.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 14, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        *(_OWORD *)&v91.__r_.__value_.__r.__words[1] = *(_OWORD *)(a4 + 8);
        int v92 = a5;
        unsigned int v93 = v11;
        int v8 = sub_10011634C((uint64_t)a7, v8, (uint64_t)&v91);
        goto LABEL_168;
      case 0xF:
        uint64_t v19 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 15, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = (unsigned __int8 *)google::protobuf::internal::PackedSFixed32Parser((google::protobuf::internal *)v19, v8, (const char *)a7, v20);
        break;
      case 0x10:
        char v42 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 16, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = (unsigned __int8 *)google::protobuf::internal::PackedSFixed64Parser((google::protobuf::internal *)v42, v8, (const char *)a7, v43);
        break;
      case 0x11:
        uint64_t v21 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 17, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = google::protobuf::internal::PackedSInt32Parser((unsigned int *)v21, v8, (uint64_t)a7);
        break;
      case 0x12:
        int v44 = google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(this, a2, 18, *(unsigned char *)(a4 + 2), *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        uint64_t result = google::protobuf::internal::PackedSInt64Parser((unsigned int *)v44, v8, (uint64_t)a7);
        break;
      default:
        goto LABEL_168;
    }
  }
  else
  {
    switch(*(unsigned char *)a4)
    {
      case 1:
        int v8 = (google::protobuf::internal *)((char *)a6 + 8);
        double v45 = *(double *)a6;
        if (*(unsigned char *)(a4 + 1)) {
          google::protobuf::internal::ExtensionSet::AddDouble(this, a2, 1, *(unsigned char *)(a4 + 2), v45, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        }
        else {
          google::protobuf::internal::ExtensionSet::SetDouble(this, a2, 1, v45, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        }
        goto LABEL_168;
      case 2:
        int v8 = (google::protobuf::internal *)((char *)a6 + 4);
        float v46 = *(float *)a6;
        if (*(unsigned char *)(a4 + 1)) {
          google::protobuf::internal::ExtensionSet::AddFloat(this, a2, 2, *(unsigned char *)(a4 + 2), v46, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        }
        else {
          google::protobuf::internal::ExtensionSet::SetFloat(this, a2, 2, v46, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        }
        goto LABEL_168;
      case 3:
        uint64_t v47 = *(unsigned __int8 *)a6;
        if (*(char *)a6 < 0)
        {
          int v73 = v47 + (*((unsigned __int8 *)a6 + 1) << 7);
          uint64_t v47 = (v73 - 128);
          if (*((char *)a6 + 1) < 0)
          {
            int v8 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(a6, (v73 - 128));
            if (!v8) {
              goto LABEL_168;
            }
            uint64_t v47 = v86;
          }
          else
          {
            int v8 = (google::protobuf::internal *)((char *)a6 + 2);
          }
        }
        else
        {
          int v8 = (google::protobuf::internal *)((char *)a6 + 1);
        }
        if (*(unsigned char *)(a4 + 1))
        {
          char v60 = *(unsigned char *)(a4 + 2);
          uint64_t v61 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          this = v12;
          a2 = v11;
          char v62 = 3;
          goto LABEL_165;
        }
        uint64_t v81 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        this = v12;
        a2 = v11;
        char v82 = 3;
        goto LABEL_167;
      case 4:
        uint64_t v48 = *(unsigned __int8 *)a6;
        if (*(char *)a6 < 0)
        {
          int v74 = v48 + (*((unsigned __int8 *)a6 + 1) << 7);
          uint64_t v48 = (v74 - 128);
          if (*((char *)a6 + 1) < 0)
          {
            int v8 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(a6, (v74 - 128));
            if (!v8) {
              goto LABEL_168;
            }
            uint64_t v48 = v87;
          }
          else
          {
            int v8 = (google::protobuf::internal *)((char *)a6 + 2);
          }
        }
        else
        {
          int v8 = (google::protobuf::internal *)((char *)a6 + 1);
        }
        if (*(unsigned char *)(a4 + 1))
        {
          char v49 = *(unsigned char *)(a4 + 2);
          uint64_t v50 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          this = v12;
          a2 = v11;
          char v51 = 4;
          goto LABEL_146;
        }
        int v75 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        this = v12;
        a2 = v11;
        char v76 = 4;
        goto LABEL_148;
      case 5:
        int v22 = *(unsigned __int8 *)a6;
        if (*(char *)a6 < 0)
        {
          int v69 = v22 + (*((unsigned __int8 *)a6 + 1) << 7);
          int v22 = v69 - 128;
          if (*((char *)a6 + 1) < 0)
          {
            int v8 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(a6, (v69 - 128));
            if (!v8) {
              goto LABEL_168;
            }
            int v22 = v83;
          }
          else
          {
            int v8 = (google::protobuf::internal *)((char *)a6 + 2);
          }
        }
        else
        {
          int v8 = (google::protobuf::internal *)((char *)a6 + 1);
        }
        if (*(unsigned char *)(a4 + 1))
        {
          char v27 = *(unsigned char *)(a4 + 2);
          long long v28 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          this = v12;
          a2 = v11;
          char v29 = 5;
          goto LABEL_133;
        }
        int v71 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        this = v12;
        a2 = v11;
        char v72 = 5;
        int v84 = v22;
        goto LABEL_136;
      case 6:
        int v8 = (google::protobuf::internal *)((char *)a6 + 8);
        uint64_t v48 = *(void *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          char v49 = *(unsigned char *)(a4 + 2);
          uint64_t v50 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v51 = 6;
LABEL_146:
          google::protobuf::internal::ExtensionSet::AddUInt64(this, a2, v51, v49, v48, v50);
        }
        else
        {
          int v75 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v76 = 6;
LABEL_148:
          google::protobuf::internal::ExtensionSet::SetUInt64(this, a2, v76, (uint64_t *)v48, v75);
        }
        goto LABEL_168;
      case 7:
        int v8 = (google::protobuf::internal *)((char *)a6 + 4);
        int v26 = *(_DWORD *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          char v52 = *(unsigned char *)(a4 + 2);
          uint64_t v53 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v54 = 7;
          goto LABEL_127;
        }
        uint64_t v77 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        char v78 = 7;
        int v79 = *(_DWORD *)a6;
        goto LABEL_129;
      case 8:
        unint64_t v55 = *(unsigned __int8 *)a6;
        if (*(char *)a6 < 0)
        {
          unint64_t v55 = v55 + (*((unsigned __int8 *)a6 + 1) << 7) - 128;
          if (*((char *)a6 + 1) < 0)
          {
            int v8 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(a6, v55);
            if (!v8) {
              goto LABEL_168;
            }
          }
          else
          {
            int v8 = (google::protobuf::internal *)((char *)a6 + 2);
          }
        }
        else
        {
          int v8 = (google::protobuf::internal *)((char *)a6 + 1);
        }
        if (*(unsigned char *)(a4 + 1)) {
          google::protobuf::internal::ExtensionSet::AddBool(v12, v11, 8, *(unsigned char *)(a4 + 2), v55 != 0, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        }
        else {
          google::protobuf::internal::ExtensionSet::SetBool(v12, v11, 8, v55 != 0, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
        }
        goto LABEL_168;
      case 9:
      case 0xC:
        uint64_t v14 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        if (*(unsigned char *)(a4 + 1)) {
          int v15 = (std::string *)google::protobuf::internal::ExtensionSet::AddString(this, a2, 9, v14);
        }
        else {
          int v15 = (std::string *)google::protobuf::internal::ExtensionSet::MutableString(this, a2, 9, v14);
        }
        uint64_t v64 = v15;
        int v65 = *(unsigned __int8 *)v8;
        if (*(char *)v8 < 0)
        {
          SizeFallbacint k = google::protobuf::internal::ReadSizeFallback(v8, (const char *)*(unsigned __int8 *)v8);
          if (!SizeFallback)
          {
            int v8 = 0;
            goto LABEL_168;
          }
          uint64_t v66 = SizeFallback;
          int v65 = v68;
        }
        else
        {
          uint64_t v66 = (char *)v8 + 1;
        }
        return (unsigned __int8 *)sub_100109C74((uint64_t)a7, v66, v65, v64);
      case 0xA:
        BOOL v56 = *(const google::protobuf::MessageLite **)(a4 + 8);
        uint64_t v57 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        if (*(unsigned char *)(a4 + 1)) {
          uint64_t v58 = google::protobuf::internal::ExtensionSet::AddMessage(this, a2, 10, v56, v57);
        }
        else {
          uint64_t v58 = (uint64_t)google::protobuf::internal::ExtensionSet::MutableMessage(this, a2, 10, v56, v57);
        }
        return (unsigned __int8 *)sub_100109CE0(a7, v58, (uint64_t)v8, (8 * v11) | 3);
      case 0xB:
        char v23 = *(const google::protobuf::MessageLite **)(a4 + 8);
        unsigned int v24 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        if (*(unsigned char *)(a4 + 1)) {
          unint64_t v25 = (google::protobuf::MessageLite *)google::protobuf::internal::ExtensionSet::AddMessage(this, a2, 11, v23, v24);
        }
        else {
          unint64_t v25 = (google::protobuf::MessageLite *)google::protobuf::internal::ExtensionSet::MutableMessage(this, a2, 11, v23, v24);
        }
        return (unsigned __int8 *)google::protobuf::internal::ParseContext::ParseMessage((google::protobuf::internal::ParseContext *)a7, v25, (const char *)v8);
      case 0xD:
        int v26 = *(unsigned __int8 *)a6;
        if (*(char *)a6 < 0)
        {
          int v70 = v26 + (*((unsigned __int8 *)a6 + 1) << 7);
          int v26 = v70 - 128;
          if (*((char *)a6 + 1) < 0)
          {
            int v8 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(a6, (v70 - 128));
            if (!v8) {
              goto LABEL_168;
            }
            int v26 = v85;
          }
          else
          {
            int v8 = (google::protobuf::internal *)((char *)a6 + 2);
          }
        }
        else
        {
          int v8 = (google::protobuf::internal *)((char *)a6 + 1);
        }
        if (*(unsigned char *)(a4 + 1))
        {
          char v52 = *(unsigned char *)(a4 + 2);
          uint64_t v53 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          this = v12;
          a2 = v11;
          char v54 = 13;
LABEL_127:
          google::protobuf::internal::ExtensionSet::AddUInt32(this, a2, v54, v52, v26, v53);
        }
        else
        {
          uint64_t v77 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          this = v12;
          a2 = v11;
          char v78 = 13;
          int v79 = v26;
LABEL_129:
          google::protobuf::internal::ExtensionSet::SetUInt32(this, a2, v78, v79, v77);
        }
        goto LABEL_168;
      case 0xE:
        uint64_t v59 = *(unsigned __int8 *)a6;
        if (*(char *)a6 < 0)
        {
          int v80 = v59 + (*((unsigned __int8 *)a6 + 1) << 7);
          uint64_t v59 = (v80 - 128);
          if (*((char *)a6 + 1) < 0)
          {
            int v8 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(a6, (v80 - 128));
            if (!v8) {
              goto LABEL_168;
            }
            uint64_t v59 = v88;
          }
          else
          {
            int v8 = (google::protobuf::internal *)((char *)a6 + 2);
          }
        }
        else
        {
          int v8 = (google::protobuf::internal *)((char *)a6 + 1);
        }
        if ((*(uint64_t (**)(void, uint64_t))(a4 + 8))(*(void *)(a4 + 16), v59))
        {
          if (*(unsigned char *)(a4 + 1)) {
            google::protobuf::internal::ExtensionSet::AddEnum(v12, v11, 14, *(unsigned char *)(a4 + 2), v59, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
          }
          else {
            google::protobuf::internal::ExtensionSet::SetEnum(v12, v11, 14, v59, *(const google::protobuf::FieldDescriptor **)(a4 + 24));
          }
        }
        else
        {
          if (*a5) {
            long long v89 = (google::protobuf::Arena **)((*a5 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else {
            long long v89 = sub_10003562C(a5);
          }
          google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v89, v11, v59);
        }
        goto LABEL_168;
      case 0xF:
        int v8 = (google::protobuf::internal *)((char *)a6 + 4);
        int v22 = *(_DWORD *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          char v27 = *(unsigned char *)(a4 + 2);
          long long v28 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v29 = 15;
          goto LABEL_133;
        }
        int v71 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        char v72 = 15;
        goto LABEL_135;
      case 0x10:
        int v8 = (google::protobuf::internal *)((char *)a6 + 8);
        uint64_t v47 = *(void *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          char v60 = *(unsigned char *)(a4 + 2);
          uint64_t v61 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          char v62 = 16;
          goto LABEL_165;
        }
        uint64_t v81 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
        char v82 = 16;
        goto LABEL_167;
      case 0x11:
        LODWORD(v3google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = *(unsigned __int8 *)a6;
        if (*(char *)a6 < 0)
        {
          unint64_t v30 = v30 + (*((unsigned __int8 *)a6 + 1) << 7) - 128;
          if (*((char *)a6 + 1) < 0)
          {
            int v8 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(a6, v30);
            if (!v8) {
              goto LABEL_168;
            }
          }
          else
          {
            int v8 = (google::protobuf::internal *)((char *)a6 + 2);
          }
        }
        else
        {
          int v8 = (google::protobuf::internal *)((char *)a6 + 1);
        }
        int v22 = -(v30 & 1) ^ (v30 >> 1);
        if (*(unsigned char *)(a4 + 1))
        {
          char v27 = *(unsigned char *)(a4 + 2);
          long long v28 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          this = v12;
          a2 = v11;
          char v29 = 17;
LABEL_133:
          google::protobuf::internal::ExtensionSet::AddInt32(this, a2, v29, v27, v22, v28);
        }
        else
        {
          int v71 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          this = v12;
          a2 = v11;
          char v72 = 17;
LABEL_135:
          int v84 = v22;
LABEL_136:
          google::protobuf::internal::ExtensionSet::SetInt32(this, a2, v72, v84, v71);
        }
        goto LABEL_168;
      case 0x12:
        unint64_t v63 = *(unsigned __int8 *)a6;
        if (*(char *)a6 < 0)
        {
          unint64_t v63 = v63 + (*((unsigned __int8 *)a6 + 1) << 7) - 128;
          if (*((char *)a6 + 1) < 0)
          {
            int v8 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(a6, v63);
            if (!v8) {
              goto LABEL_168;
            }
          }
          else
          {
            int v8 = (google::protobuf::internal *)((char *)a6 + 2);
          }
        }
        else
        {
          int v8 = (google::protobuf::internal *)((char *)a6 + 1);
        }
        uint64_t v47 = -(uint64_t)(v63 & 1) ^ (v63 >> 1);
        if (*(unsigned char *)(a4 + 1))
        {
          char v60 = *(unsigned char *)(a4 + 2);
          uint64_t v61 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          this = v12;
          a2 = v11;
          char v62 = 18;
LABEL_165:
          google::protobuf::internal::ExtensionSet::AddInt64(this, a2, v62, v60, v47, v61);
        }
        else
        {
          uint64_t v81 = *(const google::protobuf::FieldDescriptor **)(a4 + 24);
          this = v12;
          a2 = v11;
          char v82 = 18;
LABEL_167:
          google::protobuf::internal::ExtensionSet::SetInt64(this, a2, v82, (uint64_t *)v47, v81);
        }
LABEL_168:
        uint64_t result = (unsigned __int8 *)v8;
        break;
      default:
        goto LABEL_168;
    }
  }
  return result;
}

void sub_100115D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::internal::ExtensionSet::SpaceUsedExcludingSelfLong(google::protobuf::internal::ExtensionSet *this)
{
  if (*((unsigned __int16 *)this + 4) >= 0x101u)
  {
    uint64_t v5 = (void *)*((void *)this + 2);
    uint64_t v1 = 32 * v5[2];
    uint64_t v6 = (uint64_t **)*v5;
    uint64_t v7 = (uint64_t **)(v5 + 1);
    if ((void *)*v5 != v5 + 1)
    {
      do
      {
        uint64_t v8 = google::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelfLong(v6 + 5);
        unsigned int v9 = v6[1];
        if (v9)
        {
          do
          {
            uint64_t v10 = (uint64_t **)v9;
            unsigned int v9 = (uint64_t *)*v9;
          }
          while (v9);
        }
        else
        {
          do
          {
            uint64_t v10 = (uint64_t **)v6[2];
            BOOL v11 = *v10 == (uint64_t *)v6;
            uint64_t v6 = v10;
          }
          while (!v11);
        }
        v1 += v8;
        uint64_t v6 = v10;
      }
      while (v10 != v7);
    }
  }
  else
  {
    uint64_t v1 = 32 * *((unsigned __int16 *)this + 5);
    if (*((_WORD *)this + 5))
    {
      uint64_t v2 = (uint64_t **)(*((void *)this + 2) + 8);
      uint64_t v3 = 32 * *((unsigned __int16 *)this + 5);
      do
      {
        v1 += google::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelfLong(v2);
        v2 += 4;
        v3 -= 32;
      }
      while (v3);
    }
  }
  return v1;
}

uint64_t google::protobuf::internal::ExtensionSet::Extension::SpaceUsedExcludingSelfLong(uint64_t **this)
{
  unsigned int v1 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned __int8 *)this + 8)];
  if (*((unsigned char *)this + 9))
  {
    switch(*((unsigned char *)this + 8))
    {
      case 1:
      case 3:
      case 4:
      case 6:
      case 0x10:
      case 0x12:
        uint64_t v2 = *((unsigned int *)*this + 1);
        uint64_t v3 = 8 * v2;
        goto LABEL_9;
      case 2:
      case 5:
      case 7:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x11:
        uint64_t v2 = *((unsigned int *)*this + 1);
        uint64_t v3 = 4 * v2;
LABEL_9:
        uint64_t v5 = v3 + 24;
        goto LABEL_10;
      case 8:
        uint64_t v2 = *((unsigned int *)*this + 1);
        uint64_t v5 = v2 + 24;
LABEL_10:
        if ((int)v2 <= 0) {
          return 16;
        }
        else {
          return v5;
        }
      case 9:
      case 0xC:
        uint64_t v8 = *this;
        uint64_t v9 = 8 * *((int *)*this + 3);
        uint64_t v10 = (int *)(*this)[2];
        if (!v10) {
          return v9 + 24;
        }
        if (*v10 >= 1)
        {
          uint64_t v11 = 0;
          do
          {
            v9 += google::protobuf::internal::StringSpaceUsedExcludingSelfLong(*(void *)&v10[2 * v11++ + 2]) + 24;
            uint64_t v10 = (int *)v8[2];
          }
          while (v11 < *v10);
        }
        break;
      case 0xA:
      case 0xB:
        uint64_t v12 = *this;
        uint64_t v9 = 8 * *((int *)*this + 3);
        uint64_t v13 = (int *)(*this)[2];
        if (!v13) {
          return v9 + 24;
        }
        if (*v13 >= 1)
        {
          uint64_t v14 = 0;
          do
          {
            v9 += (*(uint64_t (**)(void))(**(void **)&v13[2 * v14 + 2] + 136))(*(void *)&v13[2 * v14 + 2]);
            ++v14;
            uint64_t v13 = (int *)v12[2];
          }
          while (v14 < *v13);
        }
        break;
      default:
        return 0;
    }
    v9 += 8;
    return v9 + 24;
  }
  else if (v1 == 10)
  {
    uint64_t v6 = **this;
    if ((*((unsigned char *)this + 10) & 0x10) != 0)
    {
      uint64_t v7 = *(uint64_t (**)(void))(v6 + 96);
    }
    else
    {
      uint64_t v7 = *(uint64_t (**)(void))(v6 + 136);
    }
    return v7();
  }
  else if (v1 == 9)
  {
    return google::protobuf::internal::StringSpaceUsedExcludingSelfLong((unint64_t)*this) + 24;
  }
  else
  {
    return 0;
  }
}

void sub_100116148(google::protobuf::internal::ExtensionFinder *a1)
{
  google::protobuf::internal::ExtensionFinder::~ExtensionFinder(a1);
  operator delete();
}

void sub_100116180(uint64_t a1, uint64_t a2, google::protobuf::internal::ExtensionSet::Extension *this)
{
  if (*((unsigned char *)this + 9))
  {
    if ((int)google::protobuf::internal::ExtensionSet::Extension::GetSize(this) <= 0) {
      return;
    }
  }
  else if (*((unsigned char *)this + 10))
  {
    return;
  }
  uint64_t v6 = *((void *)this + 2);
  uint64_t v7 = **(void ****)(a1 + 16);
  if (!v6)
  {
    uint64_t ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(*(std::mutex ***)(a1 + 8), *(const google::protobuf::Descriptor **)a1, a2);
    unint64_t v12 = (unint64_t)v7[2];
    uint64_t v13 = (uint64_t *)v7[1];
    if ((unint64_t)v13 < v12)
    {
      uint64_t *v13 = ExtensionByNumber;
      uint64_t v10 = v13 + 1;
      goto LABEL_32;
    }
    uint64_t v19 = ((char *)v13 - (unsigned char *)*v7) >> 3;
    if (!((unint64_t)(v19 + 1) >> 61))
    {
      uint64_t v20 = v12 - (void)*v7;
      uint64_t v21 = v20 >> 2;
      if (v20 >> 2 <= (unint64_t)(v19 + 1)) {
        uint64_t v21 = v19 + 1;
      }
      if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v22 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v22 = v21;
      }
      if (v22) {
        char v23 = (char *)sub_1000B4170((uint64_t)(v7 + 2), v22);
      }
      else {
        char v23 = 0;
      }
      char v29 = (uint64_t *)&v23[8 * v19];
      unint64_t v30 = &v23[8 * v22];
      *char v29 = ExtensionByNumber;
      uint64_t v10 = v29 + 1;
      uint64_t v31 = (char *)*v7;
      int v26 = (char *)v7[1];
      if (v26 != *v7)
      {
        do
        {
          uint64_t v32 = *((void *)v26 - 1);
          v26 -= 8;
          *--char v29 = v32;
        }
        while (v26 != v31);
        int v26 = (char *)*v7;
      }
      std::once_flag::_State_type *v7 = v29;
      v7[1] = v10;
      std::string v7[2] = v30;
      if (!v26) {
        goto LABEL_32;
      }
LABEL_31:
      operator delete(v26);
      goto LABEL_32;
    }
LABEL_40:
    sub_100078F84();
  }
  unint64_t v8 = (unint64_t)v7[2];
  uint64_t v9 = v7[1];
  if ((unint64_t)v9 >= v8)
  {
    uint64_t v14 = ((char *)v9 - (unsigned char *)*v7) >> 3;
    if (!((unint64_t)(v14 + 1) >> 61))
    {
      uint64_t v15 = v8 - (void)*v7;
      uint64_t v16 = v15 >> 2;
      if (v15 >> 2 <= (unint64_t)(v14 + 1)) {
        uint64_t v16 = v14 + 1;
      }
      if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v17 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v17 = v16;
      }
      if (v17)
      {
        int v18 = (char *)sub_1000B4170((uint64_t)(v7 + 2), v17);
        uint64_t v6 = *((void *)this + 2);
      }
      else
      {
        int v18 = 0;
      }
      unsigned int v24 = &v18[8 * v14];
      unint64_t v25 = &v18[8 * v17];
      *(void *)unsigned int v24 = v6;
      uint64_t v10 = v24 + 8;
      char v27 = (char *)*v7;
      int v26 = (char *)v7[1];
      if (v26 != *v7)
      {
        do
        {
          uint64_t v28 = *((void *)v26 - 1);
          v26 -= 8;
          *((void *)v24 - sub_1000333D0((uint64_t *)this + 1) = v28;
          v24 -= 8;
        }
        while (v26 != v27);
        int v26 = (char *)*v7;
      }
      std::once_flag::_State_type *v7 = v24;
      v7[1] = v10;
      std::string v7[2] = v25;
      if (!v26) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    goto LABEL_40;
  }
  *uint64_t v9 = v6;
  uint64_t v10 = v9 + 1;
LABEL_32:
  v7[1] = v10;
}

google::protobuf::internal *sub_10011634C(uint64_t a1, google::protobuf::internal *this, uint64_t a3)
{
  int v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    uint64_t result = (google::protobuf::internal *)((char *)this + 1);
    goto LABEL_5;
  }
  uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    int v5 = v7;
LABEL_5:
    while (1)
    {
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result) {
        break;
      }
      long long v10 = *(_OWORD *)(a3 + 16);
      v22[0] = *(_OWORD *)a3;
      v22[1] = v10;
      uint64_t v23 = *(void *)(a3 + 32);
      uint64_t result = (google::protobuf::internal *)sub_1001164D4(result, v8, (unsigned int **)v22);
      if (!result) {
        return result;
      }
      uint64_t v11 = *(long long **)(a1 + 8);
      int v12 = result - v11;
      int v13 = v5 - v9;
      if (v5 - v9 <= 16)
      {
        __int16 v26 = 0;
        uint64_t v25 = 0;
        long long v24 = *v11;
        long long v16 = *(_OWORD *)(a3 + 16);
        v20[0] = *(_OWORD *)a3;
        v20[1] = v16;
        uint64_t v21 = *(void *)(a3 + 32);
        unint64_t v17 = sub_1001164D4((google::protobuf::internal *)((char *)&v24 + v12), (unint64_t)&v24 + v13, (unsigned int **)v20);
        uint64_t result = 0;
        if (v17)
        {
          if (v17 == (unsigned __int8 *)((char *)&v24 + v13)) {
            return (google::protobuf::internal *)(*(void *)(a1 + 8) + v13);
          }
        }
        return result;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v12;
      uint64_t result = (google::protobuf::internal *)((char *)result + v12);
    }
    unint64_t v14 = (unint64_t)result + v5;
    long long v15 = *(_OWORD *)(a3 + 16);
    v18[0] = *(_OWORD *)a3;
    v18[1] = v15;
    uint64_t v19 = *(void *)(a3 + 32);
    uint64_t result = (google::protobuf::internal *)sub_1001164D4(result, v14, (unsigned int **)v18);
    if ((google::protobuf::internal *)v14 != result) {
      return 0;
    }
  }
  return result;
}

unsigned __int8 *sub_1001164D4(google::protobuf::internal *this, unint64_t a2, unsigned int **a3)
{
  uint64_t v3 = (unsigned __int8 *)this;
  if ((unint64_t)this < a2)
  {
    do
    {
      uint64_t v6 = *v3;
      if ((char)*v3 < 0)
      {
        int v7 = v6 + (v3[1] << 7);
        uint64_t v6 = (v7 - 128);
        if ((char)v3[1] < 0)
        {
          uint64_t v3 = (unsigned __int8 *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v3, (v7 - 128));
          if (!v3) {
            return v3;
          }
          uint64_t v6 = v8;
        }
        else
        {
          v3 += 2;
        }
      }
      else
      {
        ++v3;
      }
      if (((unsigned int (*)(unsigned int *, uint64_t))a3[1])(a3[2], v6))
      {
        int v9 = *a3;
        uint64_t v10 = **a3;
        if (v10 == (*a3)[1])
        {
          unsigned int v11 = v10 + 1;
          google::protobuf::RepeatedField<int>::Reserve(*a3, v10 + 1);
          *(_DWORD *)(*((void *)v9 + 1) + 4 * v1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = v6;
        }
        else
        {
          *(_DWORD *)(*((void *)v9 + 1) + 4 * v1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = v6;
          unsigned int v11 = v10 + 1;
        }
        *int v9 = v11;
      }
      else
      {
        unsigned int v12 = *((_DWORD *)a3 + 8);
        int v13 = (unint64_t *)a3[3];
        if (*v13) {
          unint64_t v14 = (google::protobuf::Arena **)((*v13 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else {
          unint64_t v14 = sub_10003562C(v13);
        }
        google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v14, v12, v6);
      }
    }
    while ((unint64_t)v3 < a2);
  }
  return v3;
}

uint64_t *google::protobuf::Reflection::Reflection(uint64_t *a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5)
{
  *a1 = a2;
  long long v7 = *a3;
  long long v8 = a3[1];
  *(_OWORD *)(a1 + sub_1000FA614((void *)this + 5) = a3[2];
  *(_OWORD *)(a1 + 3) = v8;
  *(_OWORD *)(a1 + sub_1000333D0((uint64_t *)this + 1) = v7;
  if (!a4)
  {
    a4 = google::protobuf::DescriptorPool::internal_generated_pool((google::protobuf::DescriptorPool *)a1);
    a2 = *a1;
  }
  a1[7] = a4;
  a1[8] = a5;
  *((_DWORD *)a1 + 18) = *(_DWORD *)(a2 + 104) - 1;
  return a1;
}

unint64_t google::protobuf::Reflection::GetUnknownFields(google::protobuf::Reflection *this, const google::protobuf::Message *a2)
{
  uint64_t v2 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
  if (v2) {
    return (v2 & 0xFFFFFFFFFFFFFFFELL) + 8;
  }
  else {
    return google::protobuf::UnknownFieldSet::default_instance(this);
  }
}

google::protobuf::Arena **google::protobuf::Reflection::MutableUnknownFields(google::protobuf::Reflection *this, google::protobuf::Message *a2)
{
  uint64_t v2 = (unint64_t *)((char *)a2 + *((unsigned int *)this + 9));
  if (*v2) {
    return (google::protobuf::Arena **)((*v2 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    return sub_10003562C(v2);
  }
}

uint64_t google::protobuf::Reflection::MutableInternalMetadata(uint64_t a1, uint64_t a2)
{
  return a2 + *(unsigned int *)(a1 + 36);
}

uint64_t google::protobuf::Reflection::SpaceUsedLong(google::protobuf::Reflection *this, const google::protobuf::Message *a2)
{
  uint64_t v4 = *((unsigned int *)this + 12);
  uint64_t v5 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
  if (v5) {
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v6 = (google::protobuf::UnknownFieldSet *)google::protobuf::UnknownFieldSet::default_instance(this);
  }
  uint64_t v7 = google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelfLong(v6) + v4;
  uint64_t v8 = *((unsigned int *)this + 10);
  if (v8 != -1) {
    v7 += google::protobuf::internal::ExtensionSet::SpaceUsedExcludingSelfLong((const google::protobuf::Message *)((char *)a2 + v8));
  }
  if ((*((_DWORD *)this + 18) & 0x80000000) == 0)
  {
    uint64_t v9 = 0;
    signed int v39 = (char *)a2 + 4;
    do
    {
      uint64_t v10 = *(void *)(*(void *)this + 40);
      uint64_t v11 = v10 + 152 * v9;
      if (*(_DWORD *)(v11 + 60) == 3)
      {
        unsigned int v12 = *(std::once_flag::_State_type **)(v10 + 152 * v9 + 48);
        if (v12)
        {
          uint64_t v40 = v10 + 152 * v9;
          long long v41 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
          {
            int v43 = &v41;
            int v44 = &v40;
            char v42 = &v43;
            std::__call_once(v12, &v42, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        switch(*(_DWORD *)(v10 + 152 * v9 + 56))
        {
          case 1:
          case 3:
          case 4:
          case 6:
          case 0x10:
          case 0x12:
            uint64_t v13 = *(unsigned int *)&v39[sub_1001209E8((uint64_t)this + 8, (void *)(v10 + 152 * v9))];
            uint64_t v14 = 8 * v13;
            goto LABEL_28;
          case 2:
          case 5:
          case 7:
          case 0xD:
          case 0xE:
          case 0xF:
          case 0x11:
            uint64_t v13 = *(unsigned int *)&v39[sub_1001209E8((uint64_t)this + 8, (void *)(v10 + 152 * v9))];
            uint64_t v14 = 4 * v13;
LABEL_28:
            uint64_t v23 = v14 + 8;
            goto LABEL_29;
          case 8:
            uint64_t v13 = *(unsigned int *)&v39[sub_1001209E8((uint64_t)this + 8, (void *)(v10 + 152 * v9))];
            uint64_t v23 = v13 + 8;
LABEL_29:
            if ((int)v13 <= 0) {
              uint64_t v24 = 0;
            }
            else {
              uint64_t v24 = v23;
            }
            v7 += v24;
            break;
          case 9:
          case 0xC:
            uint64_t v28 = (char *)a2 + sub_1001209E8((uint64_t)this + 8, (void *)(v10 + 152 * v9));
            uint64_t v29 = 8 * *((int *)v28 + 3);
            unint64_t v30 = (int *)*((void *)v28 + 2);
            if (v30)
            {
              if (*v30 >= 1)
              {
                uint64_t v31 = 0;
                do
                {
                  v29 += google::protobuf::internal::StringSpaceUsedExcludingSelfLong(*(void *)&v30[2 * v31++ + 2])
                       + 24;
                  unint64_t v30 = (int *)*((void *)v28 + 2);
                }
                while (v31 < *v30);
              }
              v29 += 8;
            }
            v7 += v29;
            break;
          case 0xA:
          case 0xB:
            int v32 = sub_100100518((google::protobuf::FieldDescriptor *)(v10 + 152 * v9));
            unsigned int v33 = sub_1001209E8((uint64_t)this + 8, (void *)v11);
            uint64_t v34 = (char *)a2 + v33;
            if (v32)
            {
              uint64_t v27 = google::protobuf::internal::MapFieldBase::SpaceUsedExcludingSelfLong((const google::protobuf::Message *)((char *)a2 + v33));
              goto LABEL_47;
            }
            uint64_t v35 = 8 * *((int *)v34 + 3);
            __n128 v36 = (int *)*((void *)v34 + 2);
            if (v36)
            {
              if (*v36 >= 1)
              {
                uint64_t v37 = 0;
                do
                {
                  v35 += (*(uint64_t (**)(void))(**(void **)&v36[2 * v37 + 2] + 136))(*(void *)&v36[2 * v37 + 2]);
                  ++v37;
                  __n128 v36 = (int *)*((void *)v34 + 2);
                }
                while (v37 < *v36);
              }
              v35 += 8;
            }
            v7 += v35;
            break;
          default:
            break;
        }
      }
      else
      {
        uint64_t v15 = v10 + 152 * v9;
        uint64_t v18 = *(void *)(v15 + 88);
        unint64_t v17 = (uint64_t *)(v15 + 88);
        uint64_t v16 = v18;
        if (!v18
          || *(_DWORD *)(v16 + 24) == 1 && *(unsigned char *)(**(void **)(v16 + 32) + 65)
          || *(_DWORD *)((char *)a2
                       + *((_DWORD *)this + 11)
                       - 1431655764
                       * ((unint64_t)(v16 - *(void *)(*(void *)(v16 + 16) + 48)) >> 4)) == *(_DWORD *)(v10 + 152 * v9 + 68))
        {
          uint64_t v19 = *(std::once_flag::_State_type **)(v10 + 152 * v9 + 48);
          if (v19)
          {
            uint64_t v40 = v10 + 152 * v9;
            long long v41 = google::protobuf::FieldDescriptor::TypeOnceInit;
            if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
            {
              int v43 = &v41;
              int v44 = &v40;
              char v42 = &v43;
              std::__call_once(v19, &v42, (void (__cdecl *)(void *))sub_1000BB820);
            }
          }
          unsigned int v20 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v10 + 152 * v9 + 56)];
          if (v20 == 10)
          {
            if (*((const google::protobuf::Message **)this + 1) != a2)
            {
              uint64_t v26 = *(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, (void *)(v10 + 152 * v9)));
              if (v26)
              {
                uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)v26 + 136))(v26);
LABEL_47:
                v7 += v27;
              }
            }
          }
          else if (v20 == 9)
          {
            if ((unint64_t v21 = *(void *)((unsigned char *)a2
                                  + sub_1001209E8((uint64_t)this + 8, (void *)(v10 + 152 * v9))) & 0xFFFFFFFFFFFFFFFELL,
                  (uint64_t v22 = *v17) != 0)
              && (*(_DWORD *)(v22 + 24) != 1 || !*(unsigned char *)(**(void **)(v22 + 32) + 65))
              || v21 != (*(void *)sub_100120E48((uint64_t *)this + 1, v11) & 0xFFFFFFFFFFFFFFFELL))
            {
              v7 += google::protobuf::internal::StringSpaceUsedExcludingSelfLong(v21) + 24;
            }
          }
        }
      }
    }
    while (v9++ < *((int *)this + 18));
  }
  return v7;
}

void google::protobuf::Reflection::SwapField(google::protobuf::Reflection *this, google::protobuf::Message *a2, google::protobuf::Message *a3, const google::protobuf::FieldDescriptor *a4)
{
  uint64_t v8 = (std::once_flag::_State_type *)*((void *)a4 + 6);
  if (*((_DWORD *)a4 + 15) == 3)
  {
    if (v8)
    {
      int v95 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a4;
      std::string::size_type v96 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
      {
        __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v96;
        __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v95;
        unsigned int v97 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))__p;
        std::__call_once(v8, &v97, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    switch(*((_DWORD *)a4 + 14))
    {
      case 1:
        uint64_t v31 = (char *)this + 8;
        int v32 = (int *)((char *)a2 + sub_1001209E8((uint64_t)v31, a4));
        unsigned int v33 = sub_1001209E8((uint64_t)v31, a4);
        google::protobuf::RepeatedField<double>::Swap(v32, (int *)((char *)a3 + v33));
        return;
      case 2:
        uint64_t v34 = (char *)this + 8;
        uint64_t v35 = (int *)((char *)a2 + sub_1001209E8((uint64_t)v34, a4));
        unsigned int v36 = sub_1001209E8((uint64_t)v34, a4);
        google::protobuf::RepeatedField<float>::Swap(v35, (int *)((char *)a3 + v36));
        return;
      case 3:
      case 0x10:
      case 0x12:
        uint64_t v22 = (char *)this + 8;
        uint64_t v23 = (int *)((char *)a2 + sub_1001209E8((uint64_t)v22, a4));
        unsigned int v24 = sub_1001209E8((uint64_t)v22, a4);
        google::protobuf::RepeatedField<long long>::Swap(v23, (int *)((char *)a3 + v24));
        return;
      case 4:
      case 6:
        uint64_t v28 = (char *)this + 8;
        uint64_t v29 = (int *)((char *)a2 + sub_1001209E8((uint64_t)v28, a4));
        unsigned int v30 = sub_1001209E8((uint64_t)v28, a4);
        google::protobuf::RepeatedField<unsigned long long>::Swap(v29, (int *)((char *)a3 + v30));
        return;
      case 5:
      case 0xE:
      case 0xF:
      case 0x11:
        uint64_t v9 = (char *)this + 8;
        uint64_t v10 = (int *)((char *)a2 + sub_1001209E8((uint64_t)v9, a4));
        unsigned int v11 = sub_1001209E8((uint64_t)v9, a4);
        google::protobuf::RepeatedField<int>::Swap(v10, (int *)((char *)a3 + v11));
        return;
      case 7:
      case 0xD:
        uint64_t v25 = (char *)this + 8;
        uint64_t v26 = (int *)((char *)a2 + sub_1001209E8((uint64_t)v25, a4));
        unsigned int v27 = sub_1001209E8((uint64_t)v25, a4);
        google::protobuf::RepeatedField<unsigned int>::Swap(v26, (int *)((char *)a3 + v27));
        return;
      case 8:
        uint64_t v37 = (char *)this + 8;
        uint64_t v38 = (int *)((char *)a2 + sub_1001209E8((uint64_t)v37, a4));
        unsigned int v39 = sub_1001209E8((uint64_t)v37, a4);
        google::protobuf::RepeatedField<BOOL>::Swap(v38, (int *)((char *)a3 + v39));
        return;
      case 9:
      case 0xC:
        uint64_t v40 = (char *)this + 8;
        long long v41 = (google::protobuf::Message *)((char *)a2 + sub_1001209E8((uint64_t)v40, a4));
        char v42 = (char *)a3 + sub_1001209E8((uint64_t)v40, a4);
        if (*(void *)v42 == *(void *)v41) {
          goto LABEL_53;
        }
        sub_100120F18((uint64_t)v41, (unint64_t *)v42);
        break;
      case 0xA:
      case 0xB:
        int v43 = sub_100100518(a4);
        int v44 = (char *)this + 8;
        long long v41 = (google::protobuf::Message *)((char *)a2 + sub_1001209E8((uint64_t)v44, a4));
        char v42 = (char *)a3 + sub_1001209E8((uint64_t)v44, a4);
        if (v43)
        {
          (*(void (**)(google::protobuf::internal::RepeatedPtrFieldBase *, char *))(*(void *)v41 + 80))(v41, v42);
        }
        else if (*(void *)v42 == *(void *)v41)
        {
LABEL_53:
          uint64_t v83 = *((void *)v41 + 1);
          uint64_t v84 = *((void *)v41 + 2);
          *(_OWORD *)((char *)v41 + 8) = *(_OWORD *)(v42 + 8);
          *((void *)v42 + sub_1000333D0((uint64_t *)this + 1) = v83;
          *((void *)v42 + sub_1000FACE4((void *)this + 2) = v84;
        }
        else
        {
          sub_1001210FC(v41, v42);
        }
        break;
      default:
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 394);
        unsigned int v20 = google::protobuf::internal::LogMessage::operator<<(__p, "Unimplemented type: ");
        unint64_t v21 = (std::once_flag::_State_type *)*((void *)a4 + 6);
        if (v21)
        {
          unsigned __int8 v94 = a4;
          int v95 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v21, memory_order_acquire) != -1)
          {
            unsigned int v97 = &v95;
            unsigned int v98 = &v94;
            std::string::size_type v96 = &v97;
            std::__call_once(v21, &v96, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        goto LABEL_30;
    }
  }
  else
  {
    if (v8)
    {
      int v95 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a4;
      std::string::size_type v96 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
      {
        __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v96;
        __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v95;
        unsigned int v97 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))__p;
        std::__call_once(v8, &v97, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    switch(*((_DWORD *)a4 + 14))
    {
      case 1:
        uint64_t v47 = (char *)this + 8;
        unsigned int v48 = sub_1001209E8((uint64_t)v47, a4);
        unsigned int v49 = sub_1001209E8((uint64_t)v47, a4);
        uint64_t v50 = *(void *)((char *)a2 + v48);
        *(void *)((char *)a2 + v48) = *(void *)((char *)a3 + v49);
        *(void *)((char *)a3 + v49) = v50;
        return;
      case 2:
        char v51 = (char *)this + 8;
        unsigned int v52 = sub_1001209E8((uint64_t)v51, a4);
        unsigned int v53 = sub_1001209E8((uint64_t)v51, a4);
        int v54 = *(_DWORD *)((char *)a2 + v52);
        *(_DWORD *)((char *)a2 + v5sub_1000FACE4((void *)this + 2) = *(_DWORD *)((char *)a3 + v53);
        *(_DWORD *)((char *)a3 + v53) = v54;
        return;
      case 3:
      case 4:
      case 6:
      case 0x10:
      case 0x12:
        uint64_t v16 = (char *)this + 8;
        unsigned int v17 = sub_1001209E8((uint64_t)v16, a4);
        unsigned int v18 = sub_1001209E8((uint64_t)v16, a4);
        uint64_t v19 = *(void *)((char *)a2 + v17);
        *(void *)((char *)a2 + v17) = *(void *)((char *)a3 + v18);
        *(void *)((char *)a3 + v18) = v19;
        return;
      case 5:
      case 7:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x11:
        unsigned int v12 = (char *)this + 8;
        unsigned int v13 = sub_1001209E8((uint64_t)v12, a4);
        unsigned int v14 = sub_1001209E8((uint64_t)v12, a4);
        int v15 = *(_DWORD *)((char *)a2 + v13);
        *(_DWORD *)((char *)a2 + v13) = *(_DWORD *)((char *)a3 + v14);
        *(_DWORD *)((char *)a3 + v14) = v15;
        return;
      case 8:
        unint64_t v55 = (char *)this + 8;
        unsigned int v56 = sub_1001209E8((uint64_t)v55, a4);
        unsigned int v57 = sub_1001209E8((uint64_t)v55, a4);
        char v58 = *((unsigned char *)a2 + v56);
        *((unsigned char *)a2 + v5sub_1000FA614((void *)this + 6) = *((unsigned char *)a3 + v57);
        *((unsigned char *)a3 + v57) = v58;
        return;
      case 9:
      case 0xC:
        uint64_t v59 = *((unsigned int *)this + 9);
        uint64_t v60 = *(void *)((char *)a2 + v59);
        uint64_t v61 = (google::protobuf::Arena *)(v60 & 0xFFFFFFFFFFFFFFFELL);
        if (v60) {
          uint64_t v61 = *(google::protobuf::Arena **)v61;
        }
        uint64_t v62 = *(void *)((char *)a3 + v59);
        unint64_t v63 = (google::protobuf::Arena *)(v62 & 0xFFFFFFFFFFFFFFFELL);
        if (v62) {
          unint64_t v63 = *(google::protobuf::Arena **)v63;
        }
        uint64_t v64 = (uint64_t *)((char *)this + 8);
        int v65 = (std::string **)((char *)a2 + sub_1001209E8((uint64_t)v64, a4));
        uint64_t v66 = (std::string **)((char *)a3 + sub_1001209E8((uint64_t)v64, a4));
        uint64_t v67 = (void *)sub_100120E48(v64, (uint64_t)a4);
        int v68 = *v65;
        if (v61 == v63)
        {
          uint64_t *v65 = *v66;
          std::string::value_type *v66 = v68;
        }
        else
        {
          int v69 = (std::string *)(*v67 & 0xFFFFFFFFFFFFFFFELL);
          int v70 = *v66;
          if (v68 == v69)
          {
            if (v70 != v69)
            {
              google::protobuf::internal::ArenaStringPtr::Set(v65, v69, (unint64_t)v70 & 0xFFFFFFFFFFFFFFFELL, v61);
              std::string::value_type *v66 = v69;
            }
          }
          else if (v70 == v69)
          {
            google::protobuf::internal::ArenaStringPtr::Set(v66, v69, (unint64_t)v68 & 0xFFFFFFFFFFFFFFFELL, v63);
            uint64_t *v65 = v69;
          }
          else
          {
            unint64_t v71 = (unint64_t)v68 & 0xFFFFFFFFFFFFFFFELL;
            if (*(char *)(v71 + 23) < 0)
            {
              sub_1000BB834(__p, *(void **)v71, *(void *)(v71 + 8));
              int v70 = *v66;
            }
            else
            {
              long long v72 = *(_OWORD *)v71;
              __p[0].__r_.__value_.__r.__words[2] = *(void *)(v71 + 16);
              *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v72;
            }
            google::protobuf::internal::ArenaStringPtr::Set(v65, v69, (unint64_t)v70 & 0xFFFFFFFFFFFFFFFELL, v61);
            google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)v66, (uint64_t)v69, (__n128 *)__p, v63);
            if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p[0].__r_.__value_.__l.__data_);
            }
          }
        }
        return;
      case 0xA:
      case 0xB:
        uint64_t v73 = *((unsigned int *)this + 9);
        uint64_t v74 = *(void *)((char *)a2 + v73);
        int v75 = (void *)(v74 & 0xFFFFFFFFFFFFFFFELL);
        if (v74) {
          int v75 = (void *)*v75;
        }
        uint64_t v76 = *(void *)((char *)a3 + v73);
        uint64_t v77 = (void *)(v76 & 0xFFFFFFFFFFFFFFFELL);
        if (v76) {
          uint64_t v77 = (void *)*v77;
        }
        uint64_t v78 = sub_1001209E8((uint64_t)this + 8, a4);
        uint64_t v79 = sub_1001209E8((uint64_t)this + 8, a4);
        uint64_t v80 = *(void *)((char *)a2 + v78);
        if (v75 == v77)
        {
          *(void *)((char *)a2 + v78) = *(void *)((char *)a3 + v79);
          *(void *)((char *)a3 + v79) = v80;
          return;
        }
        uint64_t v81 = *(void *)((char *)a3 + v79);
        if (v80)
        {
          if (v81)
          {
            (*(void (**)(uint64_t))(*(void *)v80 + 152))(v80);
            google::protobuf::Reflection::Swap(v82, *(google::protobuf::Message **)((char *)a2 + v78), *(google::protobuf::Message **)((char *)a3 + v79));
            return;
          }
          uint64_t v90 = *((void *)a3 + 1);
          std::string v91 = (void *)(v90 & 0xFFFFFFFFFFFFFFFELL);
          if (v90) {
            std::string v91 = (void *)*v91;
          }
          uint64_t v92 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v80 + 32))(v80, v91);
          *(void *)((char *)a3 + v79) = v92;
          (*(void (**)(uint64_t, void))(*(void *)v92 + 112))(v92, *(void *)((char *)a2 + v78));
          uint64_t v88 = this;
          long long v89 = a2;
        }
        else
        {
          if (!v81) {
            return;
          }
          uint64_t v85 = *((void *)a2 + 1);
          uint64_t v86 = (void *)(v85 & 0xFFFFFFFFFFFFFFFELL);
          if (v85) {
            uint64_t v86 = (void *)*v86;
          }
          uint64_t v87 = (*(uint64_t (**)(void, void *))(*(void *)v81 + 32))(*(void *)((char *)a3 + v79), v86);
          *(void *)((char *)a2 + v78) = v87;
          (*(void (**)(uint64_t, void))(*(void *)v87 + 112))(v87, *(void *)((char *)a3 + v79));
          uint64_t v88 = this;
          long long v89 = a3;
        }
        google::protobuf::Reflection::ClearField(v88, v89, a4);
        break;
      default:
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 471);
        unsigned int v20 = google::protobuf::internal::LogMessage::operator<<(__p, "Unimplemented type: ");
        double v45 = (std::once_flag::_State_type *)*((void *)a4 + 6);
        if (v45)
        {
          unsigned __int8 v94 = a4;
          int v95 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v45, memory_order_acquire) != -1)
          {
            unsigned int v97 = &v95;
            unsigned int v98 = &v94;
            std::string::size_type v96 = &v97;
            std::__call_once(v45, &v96, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
LABEL_30:
        float v46 = google::protobuf::internal::LogMessage::operator<<(v20, google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a4 + 14)]);
        google::protobuf::internal::LogFinisher::operator=((int)&v97, (const char **)&v46->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
        return;
    }
  }
}

void sub_1001173D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

google::protobuf::Arena **google::protobuf::Reflection::Swap(google::protobuf::Arena **this, google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (a2 != a3)
  {
    uint64_t v5 = (unsigned int *)this;
    (*(void (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    if (v6 != v5)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v60, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 596);
      uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v60, "CHECK failed: (message1->GetReflection()) == (this): ");
      uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "First argument to Swap() (of type \"");
      uint64_t v9 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
      uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, *(const std::string::value_type **)(v9 + 8));
      unsigned int v11 = google::protobuf::internal::LogMessage::operator<<(v10, "\") is not compatible with this reflection object (which is for type \"");
      unsigned int v12 = google::protobuf::internal::LogMessage::operator<<(v11, *(const std::string::value_type **)(*(void *)v5 + 8));
      unsigned int v13 = google::protobuf::internal::LogMessage::operator<<(v12, "\").  Note that the exact same class is required; not just the same descriptor.");
      google::protobuf::internal::LogFinisher::operator=((int)&v59, (const char **)&v13->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v60[0].__r_.__value_.__l.__data_);
    }
    (*(void (**)(google::protobuf::Message *))(*(void *)a3 + 152))(a3);
    if (v14 != v5)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v60, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 604);
      int v15 = google::protobuf::internal::LogMessage::operator<<(v60, "CHECK failed: (message2->GetReflection()) == (this): ");
      uint64_t v16 = google::protobuf::internal::LogMessage::operator<<(v15, "Second argument to Swap() (of type \"");
      uint64_t v17 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a3 + 152))(a3);
      unsigned int v18 = google::protobuf::internal::LogMessage::operator<<(v16, *(const std::string::value_type **)(v17 + 8));
      uint64_t v19 = google::protobuf::internal::LogMessage::operator<<(v18, "\") is not compatible with this reflection object (which is for type \"");
      unsigned int v20 = google::protobuf::internal::LogMessage::operator<<(v19, *(const std::string::value_type **)(*(void *)v5 + 8));
      unint64_t v21 = google::protobuf::internal::LogMessage::operator<<(v20, "\").  Note that the exact same class is required; not just the same descriptor.");
      google::protobuf::internal::LogFinisher::operator=((int)&v59, (const char **)&v21->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v60[0].__r_.__value_.__l.__data_);
    }
    uint64_t v22 = v5[9];
    uint64_t v23 = *(void *)((char *)a2 + v22);
    unint64_t v24 = v23 & 0xFFFFFFFFFFFFFFFELL;
    if (v23) {
      unint64_t v24 = *(void *)(v23 & 0xFFFFFFFFFFFFFFFELL);
    }
    uint64_t v25 = *(void *)((char *)a3 + v22);
    uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFELL);
    if (v25) {
      uint64_t v26 = (void *)*v26;
    }
    if ((void *)v24 == v26)
    {
      uint64_t v30 = v5[8];
      if (v30 != -1)
      {
        uint64_t v31 = *(unsigned int *)(*(void *)v5 + 104);
        if ((int)v31 >= 1)
        {
          int v32 = 0;
          unsigned int v33 = (int *)((char *)a2 + v30);
          uint64_t v34 = (int *)((char *)a3 + v30);
          uint64_t v35 = *(void *)(*(void *)v5 + 40) + 60;
          unsigned int v36 = (int *)v35;
          do
          {
            int v37 = *v36;
            v36 += 38;
            if (v37 != 3)
            {
              uint64_t v38 = *(void *)(v35 + 28);
              if (!v38 || *(_DWORD *)(v38 + 24) == 1 && *(unsigned char *)(**(void **)(v38 + 32) + 65)) {
                ++v32;
              }
            }
            uint64_t v35 = (uint64_t)v36;
            --v31;
          }
          while (v31);
          if (v32 >= 1)
          {
            uint64_t v39 = (v32 + 31) >> 5;
            do
            {
              int v40 = *v33;
              *v33++ = *v34;
              *v34++ = v40;
              --v39;
            }
            while (v39);
          }
        }
      }
      signed int v41 = v5[18];
      if ((v41 & 0x80000000) == 0)
      {
        uint64_t v42 = 0;
        uint64_t v43 = -1;
        do
        {
          int v44 = (const google::protobuf::FieldDescriptor *)(*(void *)(*(void *)v5 + 40) + v42);
          uint64_t v45 = *((void *)v44 + 11);
          if (!v45 || *(_DWORD *)(v45 + 24) == 1 && *(unsigned char *)(**(void **)(v45 + 32) + 65))
          {
            google::protobuf::Reflection::SwapField((google::protobuf::Reflection *)v5, a2, a3, v44);
            signed int v41 = v5[18];
          }
          ++v43;
          v42 += 152;
        }
        while (v43 < v41);
      }
      uint64_t v46 = *(unsigned int *)(*(void *)v5 + 108);
      if ((int)v46 >= 1)
      {
        uint64_t v47 = 0;
        uint64_t v48 = 48 * v46;
        do
        {
          uint64_t v49 = *(void *)(*(void *)v5 + 48) + v47;
          if (*(_DWORD *)(v49 + 24) != 1 || !*(unsigned char *)(**(void **)(v49 + 32) + 65)) {
            google::protobuf::Reflection::SwapOneofField((google::protobuf::Reflection *)v5, a2, a3, (const google::protobuf::OneofDescriptor *)v49);
          }
          v47 += 48;
        }
        while (v48 != v47);
      }
      uint64_t v50 = v5[10];
      if (v50 != -1) {
        google::protobuf::internal::ExtensionSet::Swap((google::protobuf::Message *)((char *)a2 + v50), (google::protobuf::Message *)((char *)a3 + v50));
      }
      uint64_t v51 = v5[9];
      uint64_t v52 = *(void *)((char *)a2 + v51);
      if (v52)
      {
        unsigned int v53 = (google::protobuf::Arena **)((v52 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unsigned int v53 = sub_10003562C((unint64_t *)((char *)a2 + v51));
        uint64_t v51 = v5[9];
      }
      int v54 = (unint64_t *)((char *)a3 + v51);
      uint64_t v55 = *(void *)((char *)a3 + v51);
      if (v55) {
        this = (google::protobuf::Arena **)((v55 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else {
        this = sub_10003562C(v54);
      }
      unsigned int v56 = *v53;
      *unsigned int v53 = *this;
      *this = v56;
      unsigned int v57 = v53[1];
      v53[1] = this[1];
      this[1] = v57;
      char v58 = v53[2];
      v53[2] = this[2];
      this[2] = v58;
    }
    else
    {
      unsigned int v27 = (google::protobuf::Message *)(*(uint64_t (**)(google::protobuf::Message *))(*(void *)a2 + 32))(a2);
      (*(void (**)(google::protobuf::Message *, google::protobuf::Message *))(*(void *)v27 + 120))(v27, a3);
      (*(void (**)(google::protobuf::Message *, google::protobuf::Message *))(*(void *)a3 + 112))(a3, a2);
      this = (google::protobuf::Arena **)google::protobuf::Reflection::Swap((google::protobuf::Reflection *)v5, a2, v27);
      uint64_t v28 = *(void *)((char *)a2 + v5[9]);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFELL);
      if (v28)
      {
        if (!*v29) {
          return (google::protobuf::Arena **)(*(uint64_t (**)(google::protobuf::Message *))(*(void *)v27 + 8))(v27);
        }
      }
      else if (!v29)
      {
        return (google::protobuf::Arena **)(*(uint64_t (**)(google::protobuf::Message *))(*(void *)v27 + 8))(v27);
      }
    }
  }
  return this;
}

void sub_100117958(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::Reflection::ClearField(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = *(void *)this;
  if (*((void *)a3 + 10) != v6) {
    sub_1001199A8(v6, (uint64_t)a3, "ClearField", "Field does not match message type.");
  }
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t v7 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v8 = *((_DWORD *)a3 + 17);
    google::protobuf::internal::ExtensionSet::ClearExtension(v7, v8);
  }
  else
  {
    uint64_t v9 = (char *)this + 8;
    if (*((_DWORD *)a3 + 15) == 3)
    {
      uint64_t v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
      if (v10)
      {
        uint64_t v30 = a3;
        uint64_t v31 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
        {
          unsigned int v33 = &v31;
          uint64_t v34 = &v30;
          int v32 = &v33;
          std::__call_once(v10, &v32, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      switch(*((_DWORD *)a3 + 14))
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 0xD:
        case 0xE:
        case 0xF:
        case 0x10:
        case 0x11:
        case 0x12:
          *(_DWORD *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3)) = 0;
          break;
        case 9:
        case 0xC:
          unsigned int v15 = sub_1001209E8((uint64_t)this + 8, a3);
          sub_1000F9B0C((uint64_t)a2 + v15);
          break;
        case 0xA:
        case 0xB:
          int v16 = sub_100100518(a3);
          uint64_t v17 = (char *)a2 + sub_1001209E8((uint64_t)v9, a3);
          if (v16) {
            (*(void (**)(char *))(*(void *)v17 + 96))(v17);
          }
          else {
            sub_100119FD4((uint64_t)v17);
          }
          break;
        default:
          return;
      }
    }
    else
    {
      uint64_t v11 = *((void *)a3 + 11);
      if (!v11 || *(_DWORD *)(v11 + 24) == 1 && *(unsigned char *)(**(void **)(v11 + 32) + 65))
      {
        if (sub_100119A7C((uint64_t)this, (uint64_t)a2, (uint64_t)a3))
        {
          unsigned int v12 = sub_100119F6C((uint64_t)this + 8, (uint64_t)a3);
          if (v12 != -1) {
            *(_DWORD *)((char *)a2 + 4 * (v12 >> 5) + *((unsigned int *)this + 8)) &= ~(1 << v12);
          }
          unsigned int v13 = (std::once_flag::_State_type *)*((void *)a3 + 6);
          if (v13)
          {
            uint64_t v30 = a3;
            uint64_t v31 = google::protobuf::FieldDescriptor::TypeOnceInit;
            if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
            {
              unsigned int v33 = &v31;
              uint64_t v34 = &v30;
              int v32 = &v33;
              std::__call_once(v13, &v32, (void (__cdecl *)(void *))sub_1000BB820);
            }
          }
          switch(*((_DWORD *)a3 + 14))
          {
            case 1:
              uint64_t v19 = *((void *)a3 + 18);
              *(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3)) = v19;
              return;
            case 2:
              int v20 = *((_DWORD *)a3 + 36);
              *(_DWORD *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3)) = v20;
              return;
            case 3:
            case 4:
            case 6:
            case 0x10:
            case 0x12:
              uint64_t v18 = *((void *)a3 + 18);
              *(void *)((char *)a2 + sub_1001209E8((uint64_t)v9, a3)) = v18;
              return;
            case 5:
            case 7:
            case 0xD:
            case 0xF:
            case 0x11:
              int v14 = *((_DWORD *)a3 + 36);
              goto LABEL_37;
            case 8:
              char v21 = *((unsigned char *)a3 + 144);
              *((unsigned char *)a2 + sub_1001209E8((uint64_t)v9, a3)) = v21;
              return;
            case 9:
            case 0xC:
              unint64_t v22 = *(void *)sub_100120E48((uint64_t *)this + 1, (uint64_t)a3) & 0xFFFFFFFFFFFFFFFELL;
              uint64_t v23 = (char *)a2 + sub_1001209E8((uint64_t)this + 8, a3);
              uint64_t v24 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
              uint64_t v25 = (char *)(v24 & 0xFFFFFFFFFFFFFFFELL);
              if (v24) {
                uint64_t v25 = *(char **)v25;
              }
              google::protobuf::internal::ArenaStringPtr::SetAllocated(v23, v22, 0, v25);
              return;
            case 0xA:
            case 0xB:
              if (sub_100119F6C((uint64_t)this + 8, (uint64_t)a3) != -1)
              {
                unsigned int v26 = sub_1001209E8((uint64_t)this + 8, a3);
                (*(void (**)(void))(**(void **)((char *)a2 + v26) + 40))(*(void *)((char *)a2 + v26));
                return;
              }
              uint64_t v27 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
              uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFELL);
              if (v27)
              {
                if (*v28) {
                  goto LABEL_47;
                }
              }
              else if (v28)
              {
                goto LABEL_47;
              }
              uint64_t v29 = *(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
              if (v29) {
                (*(void (**)(uint64_t))(*(void *)v29 + 8))(v29);
              }
LABEL_47:
              *(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3)) = 0;
              break;
            case 0xE:
              int v14 = *(_DWORD *)(google::protobuf::FieldDescriptor::default_value_enum(a3) + 16);
LABEL_37:
              *(_DWORD *)((char *)a2 + sub_1001209E8((uint64_t)v9, a3)) = v14;
              return;
            default:
              return;
          }
        }
      }
      else if (*(_DWORD *)((char *)a2 {
                          + *((_DWORD *)this + 11)
      }
                          - 1431655764
                          * ((unint64_t)(v11 - *(void *)(*(void *)(v11 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
      {
        google::protobuf::Reflection::ClearOneof(this, a2, (const google::protobuf::OneofDescriptor *)v11);
      }
    }
  }
}

void google::protobuf::Reflection::SwapOneofField(google::protobuf::Reflection *this, google::protobuf::Message *a2, google::protobuf::Message *a3, const google::protobuf::OneofDescriptor *a4)
{
  unsigned int v8 = *((_DWORD *)this + 11) - 1431655764 * (((unint64_t)a4 - *(void *)(*((void *)a4 + 2) + 48)) >> 4);
  int v9 = *(_DWORD *)((char *)a2 + v8);
  int v10 = *(_DWORD *)((char *)a3 + v8);
  int v49 = 0;
  uint64_t v48 = 0;
  int v47 = 0;
  uint64_t v46 = 0;
  int v45 = 0;
  uint64_t v44 = 0;
  char v43 = 0;
  int v42 = 0;
  memset(&v41[48], 0, 7);
  if (v9)
  {
    uint64_t FieldByNumber = google::protobuf::Descriptor::FindFieldByNumber(*(google::protobuf::Descriptor **)this, v9);
    unsigned int v12 = *(std::once_flag::_State_type **)(FieldByNumber + 48);
    if (v12)
    {
      uint64_t v51 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))FieldByNumber;
      uint64_t v52 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        *(void *)signed int v41 = &v52;
        *(void *)&v41[8] = &v51;
        unsigned int v53 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v41;
        std::__call_once(v12, &v53, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    switch(*(_DWORD *)(FieldByNumber + 56))
    {
      case 1:
        unsigned int v13 = 0;
        uint64_t v35 = 0;
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v44 = *(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, (void *)FieldByNumber));
        break;
      case 2:
        unsigned int v13 = 0;
        uint64_t v35 = 0;
        char v14 = 0;
        unsigned int v15 = 0;
        int v45 = *(_DWORD *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, (void *)FieldByNumber));
        break;
      case 3:
      case 0x10:
      case 0x12:
        unsigned int v13 = 0;
        uint64_t v35 = 0;
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v48 = *(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, (void *)FieldByNumber));
        break;
      case 4:
      case 6:
        unsigned int v13 = 0;
        uint64_t v35 = 0;
        char v14 = 0;
        unsigned int v15 = 0;
        uint64_t v46 = *(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, (void *)FieldByNumber));
        break;
      case 5:
      case 0xF:
      case 0x11:
        unsigned int v13 = 0;
        uint64_t v35 = 0;
        char v14 = 0;
        unsigned int v15 = 0;
        int v49 = *(_DWORD *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, (void *)FieldByNumber));
        break;
      case 7:
      case 0xD:
        unsigned int v13 = 0;
        uint64_t v35 = 0;
        char v14 = 0;
        unsigned int v15 = 0;
        int v47 = *(_DWORD *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, (void *)FieldByNumber));
        break;
      case 8:
        unsigned int v13 = 0;
        uint64_t v35 = 0;
        char v14 = 0;
        unsigned int v15 = 0;
        char v43 = *((unsigned char *)a2 + sub_1001209E8((uint64_t)this + 8, (void *)FieldByNumber));
        break;
      case 9:
      case 0xC:
        google::protobuf::Reflection::GetString(this, a2, (const google::protobuf::FieldDescriptor *)FieldByNumber, (uint64_t)v41);
        unsigned int v15 = 0;
        uint64_t v35 = *(void **)&v41[8];
        unsigned int v13 = *(void **)v41;
        *(_DWORD *)&v41[48] = *(_DWORD *)&v41[16];
        *(_DWORD *)&v41[51] = *(_DWORD *)&v41[19];
        char v14 = v41[23];
        break;
      case 0xA:
      case 0xB:
        char v14 = 0;
        unsigned int v15 = (google::protobuf::Message *)google::protobuf::Reflection::ReleaseMessage(this, a2, (const google::protobuf::FieldDescriptor *)FieldByNumber, 0);
        unsigned int v13 = 0;
        uint64_t v35 = 0;
        break;
      case 0xE:
        unsigned int v13 = 0;
        uint64_t v35 = 0;
        char v14 = 0;
        unsigned int v15 = 0;
        int v42 = *(_DWORD *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, (void *)FieldByNumber));
        break;
      default:
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v41, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 522);
        char v21 = google::protobuf::internal::LogMessage::operator<<((std::string *)v41, "Unimplemented type: ");
        unint64_t v22 = *(std::once_flag::_State_type **)(FieldByNumber + 48);
        if (v22)
        {
          uint64_t v50 = FieldByNumber;
          uint64_t v51 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v22, memory_order_acquire) != -1)
          {
            unsigned int v53 = &v51;
            int v54 = &v50;
            uint64_t v52 = &v53;
            std::__call_once(v22, &v52, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        uint64_t v23 = google::protobuf::internal::LogMessage::operator<<(v21, google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByNumber + 56)]);
        google::protobuf::internal::LogFinisher::operator=((int)&v53, (const char **)&v23->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)v41);
        unsigned int v13 = 0;
        uint64_t v35 = 0;
        char v14 = 0;
        unsigned int v15 = 0;
        break;
    }
  }
  else
  {
    unsigned int v13 = 0;
    uint64_t v35 = 0;
    char v14 = 0;
    unsigned int v15 = 0;
    uint64_t FieldByNumber = 0;
  }
  if (v10)
  {
    uint64_t v16 = google::protobuf::Descriptor::FindFieldByNumber(*(google::protobuf::Descriptor **)this, v10);
    uint64_t v17 = *(std::once_flag::_State_type **)(v16 + 48);
    if (v17)
    {
      uint64_t v51 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v16;
      uint64_t v52 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
      {
        *(void *)signed int v41 = &v52;
        *(void *)&v41[8] = &v51;
        unsigned int v53 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v41;
        std::__call_once(v17, &v53, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    switch(*(_DWORD *)(v16 + 56))
    {
      case 1:
        unsigned int v28 = sub_1001209E8((uint64_t)this + 8, (void *)v16);
        sub_100118EB0((unsigned int *)this, a2, v16, (uint64_t *)((char *)a3 + v28));
        break;
      case 2:
        unsigned int v29 = sub_1001209E8((uint64_t)this + 8, (void *)v16);
        sub_100118D84((unsigned int *)this, a2, v16, (int *)((char *)a3 + v29));
        break;
      case 3:
      case 4:
      case 6:
      case 0x10:
      case 0x12:
        unsigned int v27 = sub_1001209E8((uint64_t)this + 8, (void *)v16);
        sub_100118C60((unsigned int *)this, a2, v16, (uint64_t *)((char *)a3 + v27));
        break;
      case 5:
      case 7:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x11:
        unsigned int v18 = sub_1001209E8((uint64_t)this + 8, (void *)v16);
        sub_100118B3C((unsigned int *)this, a2, v16, (int *)((char *)a3 + v18));
        break;
      case 8:
        unsigned int v30 = sub_1001209E8((uint64_t)this + 8, (void *)v16);
        sub_100118FDC((unsigned int *)this, a2, v16, (char *)a3 + v30);
        break;
      case 9:
      case 0xC:
        google::protobuf::Reflection::GetString(this, a3, (const google::protobuf::FieldDescriptor *)v16, (uint64_t)__p);
        google::protobuf::Reflection::SetString((uint64_t)this, a2, (google::protobuf::FieldDescriptor *)v16, (uint64_t)__p);
        if (v40 < 0) {
          operator delete(__p[0]);
        }
        break;
      case 0xA:
      case 0xB:
        uint64_t v31 = (google::protobuf::Message *)google::protobuf::Reflection::ReleaseMessage(this, a3, (const google::protobuf::FieldDescriptor *)v16, 0);
        google::protobuf::Reflection::SetAllocatedMessage(this, a2, v31, (const google::protobuf::FieldDescriptor *)v16);
        break;
      default:
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v41, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 553);
        uint64_t v24 = google::protobuf::internal::LogMessage::operator<<((std::string *)v41, "Unimplemented type: ");
        uint64_t v25 = *(std::once_flag::_State_type **)(v16 + 48);
        if (v25)
        {
          uint64_t v50 = v16;
          uint64_t v51 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v25, memory_order_acquire) != -1)
          {
            unsigned int v53 = &v51;
            int v54 = &v50;
            uint64_t v52 = &v53;
            std::__call_once(v25, &v52, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        unsigned int v26 = google::protobuf::internal::LogMessage::operator<<(v24, google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v16 + 56)]);
        google::protobuf::internal::LogFinisher::operator=((int)&v53, (const char **)&v26->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)v41);
        break;
    }
  }
  else
  {
    google::protobuf::Reflection::ClearOneof(this, a2, a4);
  }
  if (v9)
  {
    uint64_t v19 = *(std::once_flag::_State_type **)(FieldByNumber + 48);
    if (v19)
    {
      uint64_t v51 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))FieldByNumber;
      uint64_t v52 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
      {
        *(void *)signed int v41 = &v52;
        *(void *)&v41[8] = &v51;
        unsigned int v53 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v41;
        std::__call_once(v19, &v53, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    int v20 = &v49;
    switch(*(_DWORD *)(FieldByNumber + 56))
    {
      case 1:
        sub_100118EB0((unsigned int *)this, a3, FieldByNumber, &v44);
        break;
      case 2:
        sub_100118D84((unsigned int *)this, a3, FieldByNumber, &v45);
        break;
      case 3:
      case 0x10:
      case 0x12:
        sub_100118C60((unsigned int *)this, a3, FieldByNumber, &v48);
        break;
      case 4:
      case 6:
        sub_100118C60((unsigned int *)this, a3, FieldByNumber, &v46);
        break;
      case 5:
      case 0xF:
      case 0x11:
        goto LABEL_56;
      case 7:
      case 0xD:
        sub_100118B3C((unsigned int *)this, a3, FieldByNumber, &v47);
        break;
      case 8:
        sub_100118FDC((unsigned int *)this, a3, FieldByNumber, &v43);
        break;
      case 9:
      case 0xC:
        if (v14 < 0)
        {
          sub_1000BB834(__dst, v13, (unint64_t)v35);
        }
        else
        {
          __dst[0] = v13;
          __dst[1] = v35;
          *(_DWORD *)int v37 = *(_DWORD *)&v41[48];
          *(_DWORD *)&v37[3] = *(_DWORD *)&v41[51];
          char v38 = v14;
        }
        google::protobuf::Reflection::SetString((uint64_t)this, a3, (google::protobuf::FieldDescriptor *)FieldByNumber, (uint64_t)__dst);
        if (v38 < 0) {
          operator delete(__dst[0]);
        }
        break;
      case 0xA:
      case 0xB:
        google::protobuf::Reflection::SetAllocatedMessage(this, a3, v15, (const google::protobuf::FieldDescriptor *)FieldByNumber);
        break;
      case 0xE:
        int v20 = &v42;
LABEL_56:
        sub_100118B3C((unsigned int *)this, a3, FieldByNumber, v20);
        break;
      default:
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v41, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 585);
        int v32 = google::protobuf::internal::LogMessage::operator<<((std::string *)v41, "Unimplemented type: ");
        unsigned int v33 = *(std::once_flag::_State_type **)(FieldByNumber + 48);
        if (v33)
        {
          uint64_t v50 = FieldByNumber;
          uint64_t v51 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v33, memory_order_acquire) != -1)
          {
            unsigned int v53 = &v51;
            int v54 = &v50;
            uint64_t v52 = &v53;
            std::__call_once(v33, &v52, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        uint64_t v34 = google::protobuf::internal::LogMessage::operator<<(v32, google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByNumber + 56)]);
        google::protobuf::internal::LogFinisher::operator=((int)&v53, (const char **)&v34->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)v41);
        break;
    }
  }
  else
  {
    google::protobuf::Reflection::ClearOneof(this, a3, a4);
  }
  if (v14 < 0) {
    operator delete(v13);
  }
}

void sub_1001187AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23)
{
  google::protobuf::internal::LogMessage::~LogMessage(&a23);
  if (v24 < 0) {
    operator delete(v23);
  }
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Reflection::ReleaseMessage(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, google::protobuf::MessageFactory *a4)
{
  uint64_t v6 = google::protobuf::Reflection::UnsafeArenaReleaseMessage(this, a2, a3, a4);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
  int v9 = (void *)(v8 & 0xFFFFFFFFFFFFFFFELL);
  if (v8) {
    int v9 = (void *)*v9;
  }
  if (v9) {
    BOOL v10 = v6 == 0;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 24))(v6);
    (*(void (**)(uint64_t, uint64_t))(*(void *)v11 + 112))(v11, v7);
    return v11;
  }
  return v7;
}

void google::protobuf::Reflection::GetString(google::protobuf::Reflection *this@<X0>, const google::protobuf::Message *a2@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "GetString", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetString", "Field is repeated; the method requires a singular field.");
  }
  int v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v17 = a3;
    unsigned int v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v20[0] = &v18;
      v20[1] = &v17;
      uint64_t v19 = v20;
      std::__call_once(v9, &v19, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 9) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetString", 9);
  }
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t String = google::protobuf::internal::ExtensionSet::GetString((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), *((void *)a3 + 18));
    if ((*(char *)(String + 23) & 0x80000000) == 0)
    {
      long long v11 = *(_OWORD *)String;
      uint64_t v12 = *(void *)(String + 16);
LABEL_21:
      *(void *)(a4 + 1sub_1000FA614((void *)this + 6) = v12;
      *(_OWORD *)a4 = v11;
      return;
    }
    unsigned int v15 = *(void **)String;
    unint64_t v16 = *(void *)(String + 8);
  }
  else
  {
    uint64_t v13 = *((void *)a3 + 11);
    if (v13
      && (*(_DWORD *)(v13 + 24) != 1 || !*(unsigned char *)(**(void **)(v13 + 32) + 65))
      && *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v13 - *(void *)(*(void *)(v13 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17)
      || (unint64_t v14 = *(void *)((unsigned char *)a2 + sub_1001209E8((uint64_t)this + 8, a3)) & 0xFFFFFFFFFFFFFFFELL) == 0)
    {
      unint64_t v14 = *((void *)a3 + 18);
    }
    if ((*(char *)(v14 + 23) & 0x80000000) == 0)
    {
      long long v11 = *(_OWORD *)v14;
      uint64_t v12 = *(void *)(v14 + 16);
      goto LABEL_21;
    }
    unsigned int v15 = *(void **)v14;
    unint64_t v16 = *(void *)(v14 + 8);
  }
  sub_1000BB834((unsigned char *)a4, v15, v16);
}

uint64_t sub_100118B3C(unsigned int *a1, google::protobuf::Message *a2, uint64_t a3, int *a4)
{
  uint64_t v8 = *(void *)(a3 + 88);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(unsigned char *)(**(void **)(v8 + 32) + 65))
  {
    int v9 = *a4;
    *(_DWORD *)((char *)a2 + sub_1001209E8((uint64_t)(a1 + 2), (void *)a3)) = v9;
    uint64_t result = sub_100119F6C((uint64_t)(a1 + 2), a3);
    if (result != -1) {
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
    }
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(void *)(*(void *)(v8 + 16) + 48)) >> 4)) != *(_DWORD *)(a3 + 68))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, (const google::protobuf::OneofDescriptor *)v8);
    int v11 = *a4;
    uint64_t result = sub_1001209E8((uint64_t)(a1 + 2), (void *)a3);
    *(_DWORD *)((char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*(void *)(a3 + 88) - *(void *)(*(void *)(*(void *)(a3 + 88) + 16) + 48)) >> sub_1000E0804((uint64_t)this + 24, *((void **)this + 4)) = *(_DWORD *)(a3 + 68);
  }
  return result;
}

uint64_t sub_100118C60(unsigned int *a1, google::protobuf::Message *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *(void *)(a3 + 88);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(unsigned char *)(**(void **)(v8 + 32) + 65))
  {
    uint64_t v9 = *a4;
    *(void *)((char *)a2 + sub_1001209E8((uint64_t)(a1 + 2), (void *)a3)) = v9;
    uint64_t result = sub_100119F6C((uint64_t)(a1 + 2), a3);
    if (result != -1) {
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
    }
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(void *)(*(void *)(v8 + 16) + 48)) >> 4)) != *(_DWORD *)(a3 + 68))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, (const google::protobuf::OneofDescriptor *)v8);
    uint64_t v11 = *a4;
    uint64_t result = sub_1001209E8((uint64_t)(a1 + 2), (void *)a3);
    *(void *)((char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*(void *)(a3 + 88) - *(void *)(*(void *)(*(void *)(a3 + 88) + 16) + 48)) >> sub_1000E0804((uint64_t)this + 24, *((void **)this + 4)) = *(_DWORD *)(a3 + 68);
  }
  return result;
}

uint64_t sub_100118D84(unsigned int *a1, google::protobuf::Message *a2, uint64_t a3, int *a4)
{
  uint64_t v8 = *(void *)(a3 + 88);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(unsigned char *)(**(void **)(v8 + 32) + 65))
  {
    int v9 = *a4;
    *(_DWORD *)((char *)a2 + sub_1001209E8((uint64_t)(a1 + 2), (void *)a3)) = v9;
    uint64_t result = sub_100119F6C((uint64_t)(a1 + 2), a3);
    if (result != -1) {
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
    }
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(void *)(*(void *)(v8 + 16) + 48)) >> 4)) != *(_DWORD *)(a3 + 68))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, (const google::protobuf::OneofDescriptor *)v8);
    int v11 = *a4;
    uint64_t result = sub_1001209E8((uint64_t)(a1 + 2), (void *)a3);
    *(_DWORD *)((char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*(void *)(a3 + 88) - *(void *)(*(void *)(*(void *)(a3 + 88) + 16) + 48)) >> sub_1000E0804((uint64_t)this + 24, *((void **)this + 4)) = *(_DWORD *)(a3 + 68);
  }
  return result;
}

uint64_t sub_100118EB0(unsigned int *a1, google::protobuf::Message *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *(void *)(a3 + 88);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(unsigned char *)(**(void **)(v8 + 32) + 65))
  {
    uint64_t v9 = *a4;
    *(void *)((char *)a2 + sub_1001209E8((uint64_t)(a1 + 2), (void *)a3)) = v9;
    uint64_t result = sub_100119F6C((uint64_t)(a1 + 2), a3);
    if (result != -1) {
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
    }
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(void *)(*(void *)(v8 + 16) + 48)) >> 4)) != *(_DWORD *)(a3 + 68))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, (const google::protobuf::OneofDescriptor *)v8);
    uint64_t v11 = *a4;
    uint64_t result = sub_1001209E8((uint64_t)(a1 + 2), (void *)a3);
    *(void *)((char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*(void *)(a3 + 88) - *(void *)(*(void *)(*(void *)(a3 + 88) + 16) + 48)) >> sub_1000E0804((uint64_t)this + 24, *((void **)this + 4)) = *(_DWORD *)(a3 + 68);
  }
  return result;
}

uint64_t sub_100118FDC(unsigned int *a1, google::protobuf::Message *a2, uint64_t a3, char *a4)
{
  uint64_t v8 = *(void *)(a3 + 88);
  if (!v8 || *(_DWORD *)(v8 + 24) == 1 && *(unsigned char *)(**(void **)(v8 + 32) + 65))
  {
    char v9 = *a4;
    *((unsigned char *)a2 + sub_1001209E8((uint64_t)(a1 + 2), (void *)a3)) = v9;
    uint64_t result = sub_100119F6C((uint64_t)(a1 + 2), a3);
    if (result != -1) {
      *(_DWORD *)((char *)a2 + 4 * (result >> 5) + a1[8]) |= 1 << result;
    }
  }
  else
  {
    if (*(_DWORD *)((char *)a2
                   + a1[11]
                   - 1431655764 * ((unint64_t)(v8 - *(void *)(*(void *)(v8 + 16) + 48)) >> 4)) != *(_DWORD *)(a3 + 68))
      google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, (const google::protobuf::OneofDescriptor *)v8);
    char v11 = *a4;
    uint64_t result = sub_1001209E8((uint64_t)(a1 + 2), (void *)a3);
    *((unsigned char *)a2 + result) = v11;
    *(_DWORD *)((char *)a2
              + a1[11]
              - 1431655764
              * ((*(void *)(a3 + 88) - *(void *)(*(void *)(*(void *)(a3 + 88) + 16) + 48)) >> sub_1000E0804((uint64_t)this + 24, *((void **)this + 4)) = *(_DWORD *)(a3 + 68);
  }
  return result;
}

void google::protobuf::Reflection::SetAllocatedMessage(google::protobuf::Reflection *this, google::protobuf::Message *a2, google::protobuf::Message *a3, const google::protobuf::FieldDescriptor *a4)
{
  if (a3)
  {
    uint64_t v8 = *((void *)a3 + 1);
    char v9 = (unint64_t *)(v8 & 0xFFFFFFFFFFFFFFFELL);
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if (v8) {
      unint64_t v10 = *v9;
    }
    uint64_t v11 = *((void *)a2 + 1);
    uint64_t v12 = (char *)(v11 & 0xFFFFFFFFFFFFFFFELL);
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFELL;
    if (v11) {
      unint64_t v13 = *(void *)v12;
    }
    if (v10 != v13)
    {
      if (v8)
      {
        if (*v9) {
          goto LABEL_9;
        }
      }
      else if (v9)
      {
LABEL_9:
        unint64_t v14 = *(void (**)(void))(*google::protobuf::Reflection::MutableMessage(this, a2, a4, 0) + 112);
        v14();
        return;
      }
      if (v11)
      {
        uint64_t v12 = *(char **)v12;
        if (!v12) {
          goto LABEL_9;
        }
      }
      else if (!v12)
      {
        goto LABEL_9;
      }
      sub_1001145B8(v12, a3);
    }
  }
  google::protobuf::Reflection::UnsafeArenaSetAllocatedMessage(this, a2, a3, a4);
}

void google::protobuf::Reflection::SetString(uint64_t a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, uint64_t a4)
{
  uint64_t v8 = *(void *)a1;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "SetString", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)a1, (uint64_t)a3, "SetString", "Field is repeated; the method requires a singular field.");
  }
  char v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    unsigned int v28 = a3;
    unsigned int v29 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v31 = &v29;
      int v32 = &v28;
      unsigned int v30 = &v31;
      std::__call_once(v9, &v30, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 9) {
    sub_10011A044(*(void *)a1, (uint64_t)a3, "SetString", 9);
  }
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t v10 = *(unsigned int *)(a1 + 40);
    int v11 = *((_DWORD *)a3 + 17);
    uint64_t v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v12)
    {
      unsigned int v28 = a3;
      unsigned int v29 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        uint64_t v31 = &v29;
        int v32 = &v28;
        unsigned int v30 = &v31;
        std::__call_once(v12, &v30, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    unint64_t v13 = (google::protobuf::Message *)((char *)a2 + v10);
    char v14 = *((unsigned char *)a3 + 56);
    uint64_t v15 = *(void *)a4;
    v33[0] = *(void *)(a4 + 8);
    *(void *)((char *)v33 + 7) = *(void *)(a4 + 15);
    char v16 = *(unsigned char *)(a4 + 23);
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 1sub_1000FA614((void *)this + 6) = 0;
    *(void *)a4 = 0;
    uint64_t v17 = google::protobuf::internal::ExtensionSet::MutableString(v13, v11, v14, a3);
    unsigned int v18 = v17;
    if (*((char *)v17 + 23) < 0) {
      operator delete((void *)*v17);
    }
    uint64_t v19 = v33[0];
    *unsigned int v18 = v15;
    v18[1] = v19;
    *(uint64_t *)((char *)v18 + 1sub_1000FA614((void *)this + 5) = *(void *)((char *)v33 + 7);
    *((unsigned char *)v18 + 23) = v16;
    return;
  }
  uint64_t v20 = *((void *)a3 + 11);
  if (!v20 || *(_DWORD *)(v20 + 24) == 1 && *(unsigned char *)(**(void **)(v20 + 32) + 65))
  {
    unint64_t v21 = *(void *)sub_100120E48((uint64_t *)(a1 + 8), (uint64_t)a3) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v20 = *((void *)a3 + 11);
    if (!v20)
    {
LABEL_35:
      unsigned int v24 = sub_100119F6C(a1 + 8, (uint64_t)a3);
      if (v24 != -1) {
        *(_DWORD *)((char *)a2 + 4 * (v24 >> 5) + *(unsigned int *)(a1 + 32)) |= 1 << v24;
      }
      goto LABEL_38;
    }
  }
  else
  {
    unint64_t v21 = 0;
  }
  if ((*(_DWORD *)(v20 + 24) != 1 || !*(unsigned char *)(**(void **)(v20 + 32) + 65))
    && *(_DWORD *)((char *)a2
                 + *(_DWORD *)(a1 + 44)
                 - 1431655764 * ((unint64_t)(v20 - *(void *)(*(void *)(v20 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
  {
    google::protobuf::Reflection::ClearOneof((google::protobuf::Reflection *)a1, a2, (const google::protobuf::OneofDescriptor *)v20);
    uint64_t v22 = *((void *)a3 + 11);
    if (!v22 || *(_DWORD *)(v22 + 24) == 1 && *(unsigned char *)(**(void **)(v22 + 32) + 65))
    {
      unsigned int v23 = sub_100119F6C(a1 + 8, (uint64_t)a3);
      if (v23 != -1) {
        *(_DWORD *)((char *)a2 + 4 * (v23 >> 5) + *(unsigned int *)(a1 + 32)) |= 1 << v23;
      }
    }
    else
    {
      *(_DWORD *)((char *)a2
                + *(_DWORD *)(a1 + 44)
                - 1431655764 * ((unint64_t)(v22 - *(void *)(*(void *)(v22 + 16) + 48)) >> sub_1000E0804((uint64_t)this + 24, *((void **)this + 4)) = *((_DWORD *)a3 + 17);
    }
    *(void *)((char *)a2 + sub_1001209E8(a1 + 8, a3)) = v21;
    uint64_t v20 = *((void *)a3 + 11);
    if (!v20) {
      goto LABEL_35;
    }
  }
  if (*(_DWORD *)(v20 + 24) == 1 && *(unsigned char *)(**(void **)(v20 + 32) + 65)) {
    goto LABEL_35;
  }
  *(_DWORD *)((char *)a2
            + *(_DWORD *)(a1 + 44)
            - 1431655764 * ((unint64_t)(v20 - *(void *)(*(void *)(v20 + 16) + 48)) >> sub_1000E0804((uint64_t)this + 24, *((void **)this + 4)) = *((_DWORD *)a3 + 17);
LABEL_38:
  uint64_t v25 = (uint64_t *)((char *)a2 + sub_1001209E8(a1 + 8, a3));
  uint64_t v26 = *(void *)((char *)a2 + *(unsigned int *)(a1 + 36));
  unsigned int v27 = (google::protobuf::Arena *)(v26 & 0xFFFFFFFFFFFFFFFELL);
  if (v26) {
    unsigned int v27 = *(google::protobuf::Arena **)v27;
  }
  google::protobuf::internal::ArenaStringPtr::Set(v25, v21, (__n128 *)a4, v27);
}

void sub_1001195FC(_Unwind_Exception *exception_object)
{
  if (v2 < 0) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::Reflection::ClearOneof(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::OneofDescriptor *a3)
{
  if (*((_DWORD *)a3 + 6) != 1
    || (uint64_t v6 = (const google::protobuf::FieldDescriptor *)**((void **)a3 + 4), !*((unsigned char *)v6 + 65)))
  {
    int v7 = *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 2) + 48)) >> 4));
    if (!v7) {
      return;
    }
    uint64_t FieldByNumber = google::protobuf::Descriptor::FindFieldByNumber(*(google::protobuf::Descriptor **)this, v7);
    uint64_t v9 = FieldByNumber;
    uint64_t v10 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
    int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFELL);
    if (v10)
    {
      if (*v11) {
        goto LABEL_9;
      }
    }
    else if (v11)
    {
LABEL_9:
      *(_DWORD *)((char *)a2
                + *((_DWORD *)this + 11)
                - 1431655764 * (((unint64_t)a3 - *(void *)(*((void *)a3 + 2) + 48)) >> sub_1000E0804((uint64_t)this + 24, *((void **)this + 4)) = 0;
      return;
    }
    uint64_t v12 = *(std::once_flag::_State_type **)(FieldByNumber + 48);
    if (v12)
    {
      uint64_t v20 = v9;
      unint64_t v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        v23[0] = &v21;
        v23[1] = &v20;
        uint64_t v22 = v23;
        std::__call_once(v12, &v22, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    unsigned int v13 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v9 + 56)];
    if (v13 == 10)
    {
      uint64_t v16 = *(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, (void *)v9));
      if (v16) {
        (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
      }
    }
    else if (v13 == 9)
    {
      uint64_t v14 = *(void *)(v9 + 88);
      if (!v14 || *(_DWORD *)(v14 + 24) == 1 && *(unsigned char *)(**(void **)(v14 + 32) + 65))
      {
        unsigned int v15 = sub_100119F6C((uint64_t)this + 8, v9);
        if (v15 != -1) {
          *(_DWORD *)((char *)a2 + 4 * (v15 >> 5) + *((unsigned int *)this + 8)) |= 1 << v15;
        }
      }
      else
      {
        *(_DWORD *)((char *)a2
                  + *((_DWORD *)this + 11)
                  - 1431655764
                  * ((unint64_t)(v14 - *(void *)(*(void *)(v14 + 16) + 48)) >> sub_1000E0804((uint64_t)this + 24, *((void **)this + 4)) = *(_DWORD *)(v9 + 68);
      }
      uint64_t v17 = (uint64_t *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, (void *)v9));
      uint64_t v18 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFELL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      google::protobuf::internal::ArenaStringPtr::Destroy(v17, 0, (uint64_t)v19);
    }
    goto LABEL_9;
  }
  google::protobuf::Reflection::ClearField(this, a2, v6);
}

_DWORD *google::protobuf::Reflection::HasField(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = *(void *)this;
  if (*((void *)a3 + 10) != v6) {
    sub_1001199A8(v6, (uint64_t)a3, "HasField", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "HasField", "Field is repeated; the method requires a singular field.");
  }
  if (*((unsigned char *)a3 + 67))
  {
    int v7 = (const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v8 = *((_DWORD *)a3 + 17);
    return google::protobuf::internal::ExtensionSet::Has(v7, v8);
  }
  else
  {
    uint64_t v10 = *((void *)a3 + 11);
    if (!v10 || *(_DWORD *)(v10 + 24) == 1 && *(unsigned char *)(**(void **)(v10 + 32) + 65))
    {
      return (_DWORD *)sub_100119A7C((uint64_t)this, (uint64_t)a2, (uint64_t)a3);
    }
    else
    {
      return (_DWORD *)(*(_DWORD *)((char *)a2
                                  + *((_DWORD *)this + 11)
                                  - 1431655764
                                  * ((unint64_t)(v10 - *(void *)(*(void *)(v10 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17));
    }
  }
}

void sub_1001199A8(uint64_t a1, uint64_t a2, const std::string::value_type *a3, const std::string::value_type *a4)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 111);
  int v8 = google::protobuf::internal::LogMessage::operator<<(v17, "Protocol Buffer reflection usage error:\n  Method      : google::protobuf::Reflection::");
  uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v8, a3);
  uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, "\n  Message type: ");
  int v11 = google::protobuf::internal::LogMessage::operator<<(v10, *(const std::string::value_type **)(a1 + 8));
  uint64_t v12 = google::protobuf::internal::LogMessage::operator<<(v11, "\n  Field       : ");
  unsigned int v13 = google::protobuf::internal::LogMessage::operator<<(v12, *(const std::string::value_type **)(a2 + 8));
  uint64_t v14 = google::protobuf::internal::LogMessage::operator<<(v13, "\n  Problem     : ");
  unsigned int v15 = google::protobuf::internal::LogMessage::operator<<(v14, a4);
  google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v15->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
}

void sub_100119A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL sub_100119A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(a1 + 8);
  if (sub_100119F6C(a1 + 8, a3) != -1)
  {
    uint64_t v7 = a2 + *(unsigned int *)(a1 + 32);
    unsigned int v8 = sub_100119F6C((uint64_t)v6, a3);
    return (*(_DWORD *)(v7 + 4 * (v8 >> 5)) >> v8) & 1;
  }
  uint64_t v10 = *(std::once_flag::_State_type **)(a3 + 48);
  if (v10)
  {
    uint64_t v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    uint64_t v19 = a3;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      v18[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v20;
      v18[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v19;
      unint64_t v21 = v18;
      std::__call_once(v10, &v21, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  unsigned int v11 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 56)];
  if (v11 == 10)
  {
    if (*v6 == a2) {
      return 0;
    }
LABEL_15:
    uint64_t v14 = *(void *)(a2 + sub_1001209E8((uint64_t)v6, (void *)a3));
LABEL_16:
    BOOL v15 = v14 == 0;
  }
  else
  {
    uint64_t v12 = *(std::once_flag::_State_type **)(a3 + 48);
    if (v12)
    {
      uint64_t v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
      uint64_t v19 = a3;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        v18[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v20;
        v18[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v19;
        unint64_t v21 = v18;
        std::__call_once(v12, &v21, (void (__cdecl *)(void *))sub_1000BB820);
      }
      unsigned int v11 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 56)];
    }
    switch(v11)
    {
      case 1u:
      case 3u:
      case 8u:
        int v13 = *(_DWORD *)(a2 + sub_1001209E8((uint64_t)v6, (void *)a3));
        break;
      case 2u:
      case 4u:
        goto LABEL_15;
      case 5u:
        BOOL v15 = *(double *)(a2 + sub_1001209E8((uint64_t)v6, (void *)a3)) == 0.0;
        return !v15;
      case 6u:
        BOOL v15 = *(float *)(a2 + sub_1001209E8((uint64_t)v6, (void *)a3)) == 0.0;
        return !v15;
      case 7u:
        int v13 = *(unsigned __int8 *)(a2 + sub_1001209E8((uint64_t)v6, (void *)a3));
        break;
      case 9u:
        unint64_t v16 = *(void *)(a2 + sub_1001209E8((uint64_t)v6, (void *)a3)) & 0xFFFFFFFFFFFFFFFELL;
        if (*(char *)(v16 + 23) < 0) {
          uint64_t v14 = *(void *)(v16 + 8);
        }
        else {
          uint64_t v14 = *(unsigned __int8 *)(v16 + 23);
        }
        goto LABEL_16;
      default:
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 2059);
        uint64_t v17 = google::protobuf::internal::LogMessage::operator<<(v18, "Reached impossible case in HasBit().");
        google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v17->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
        return 0;
    }
    BOOL v15 = v13 == 0;
  }
  return !v15;
}

void sub_100119CDC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Reflection::FieldSize(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = *(void *)this;
  if (*((void *)a3 + 10) != v6) {
    sub_1001199A8(v6, (uint64_t)a3, "FieldSize", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "FieldSize", "Field is singular; the method requires a repeated field.");
  }
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t v7 = (const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v8 = *((_DWORD *)a3 + 17);
    return (uint64_t)google::protobuf::internal::ExtensionSet::ExtensionSize(v7, v8);
  }
  else
  {
    uint64_t v10 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v10)
    {
      unint64_t v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
      BOOL v15 = a3;
      if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
      {
        v14[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v16;
        v14[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v15;
        uint64_t v17 = v14;
        std::__call_once(v10, &v17, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    switch(*((_DWORD *)a3 + 14))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        uint64_t result = *(unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
        break;
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
        int v11 = sub_100100518(a3);
        uint64_t v12 = (unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
        if (v11)
        {
          if (google::protobuf::internal::MapFieldBase::IsRepeatedFieldValid((atomic_uint *)v12)) {
            uint64_t result = *(unsigned int *)(google::protobuf::internal::MapFieldBase::GetRepeatedField((google::protobuf::internal::MapFieldBase *)v12)
          }
                                     + 8);
          else {
            uint64_t result = (*(uint64_t (**)(unsigned int *))(*(void *)v12 + 88))(v12);
          }
        }
        else
        {
          uint64_t result = v12[2];
        }
        break;
      default:
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v14, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 783);
        int v13 = google::protobuf::internal::LogMessage::operator<<(v14, "Can't get here.");
        google::protobuf::internal::LogFinisher::operator=((int)&v17, (const char **)&v13->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v14[0].__r_.__value_.__l.__data_);
        uint64_t result = 0;
        break;
    }
  }
  return result;
}

void sub_100119F2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100119F6C(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)(a1 + 24) == -1) {
    return 0xFFFFFFFFLL;
  }
  if (*(unsigned char *)(a2 + 67))
  {
    uint64_t v2 = *(void *)(a2 + 96);
    if (v2) {
      uint64_t v3 = (void *)(v2 + 80);
    }
    else {
      uint64_t v3 = (void *)(*(void *)(a2 + 40) + 128);
    }
  }
  else
  {
    uint64_t v3 = (void *)(*(void *)(a2 + 80) + 40);
  }
  return *(unsigned int *)(*(void *)(a1 + 16) + 4 * (int)(678152731 * ((unint64_t)(a2 - *v3) >> 3)));
}

uint64_t sub_100119FD4(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (uint64_t *)(*(void *)(result + 16) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 40))(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

void sub_10011A044(uint64_t a1, uint64_t a2, const std::string::value_type *a3, int a4)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 133);
  int v8 = google::protobuf::internal::LogMessage::operator<<(v19, "Protocol Buffer reflection usage error:\n  Method      : google::protobuf::Reflection::");
  uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v8, a3);
  uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, "\n  Message type: ");
  int v11 = google::protobuf::internal::LogMessage::operator<<(v10, *(const std::string::value_type **)(a1 + 8));
  uint64_t v12 = google::protobuf::internal::LogMessage::operator<<(v11, "\n  Field       : ");
  int v13 = google::protobuf::internal::LogMessage::operator<<(v12, *(const std::string::value_type **)(a2 + 8));
  uint64_t v14 = google::protobuf::internal::LogMessage::operator<<(v13, "\n  Problem     : Field is not the right type for this message:\n    Expected  : ");
  BOOL v15 = google::protobuf::internal::LogMessage::operator<<(v14, off_1001D1178[a4]);
  unint64_t v16 = google::protobuf::internal::LogMessage::operator<<(v15, "\n    Field type: ");
  uint64_t v17 = *(std::once_flag::_State_type **)(a2 + 48);
  if (v17)
  {
    uint64_t v20 = a2;
    unint64_t v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
    {
      v23[0] = &v21;
      v23[1] = &v20;
      uint64_t v22 = v23;
      std::__call_once(v17, &v22, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  uint64_t v18 = google::protobuf::internal::LogMessage::operator<<(v16, off_1001D1178[google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a2 + 56)]]);
  google::protobuf::internal::LogFinisher::operator=((int)v23, (const char **)&v18->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
}

void sub_10011A184(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Reflection::ListFieldsMayFailOnStripped(uint64_t result, const google::protobuf::Message *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a4 + 8) = *(void *)a4;
  if (*(const google::protobuf::Message **)(result + 8) != a2)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(unsigned int *)(result + 32);
    int v8 = (char *)a2 + v7;
    if (v7 == -1) {
      int v8 = 0;
    }
    uint64_t v51 = v8;
    uint64_t v9 = *(void *)(result + 24);
    sub_10011A5D4((void **)a4, *(int *)(*(void *)result + 104));
    if ((*(_DWORD *)(v6 + 72) & 0x80000000) == 0)
    {
      uint64_t v10 = 0;
      do
      {
        uint64_t v11 = *(void *)(*(void *)v6 + 40);
        uint64_t v12 = v11 + 152 * v10;
        if (*(_DWORD *)(v12 + 60) == 3)
        {
          if ((int)google::protobuf::Reflection::FieldSize((google::protobuf::Reflection *)v6, a2, (const google::protobuf::FieldDescriptor *)(v11 + 152 * v10)) >= 1)
          {
            uint64_t v14 = *(uint64_t **)(a4 + 8);
            unint64_t v13 = *(void *)(a4 + 16);
            if ((unint64_t)v14 < v13) {
              goto LABEL_44;
            }
            uint64_t v15 = ((uint64_t)v14 - *(void *)a4) >> 3;
            if ((unint64_t)(v15 + 1) >> 61) {
              goto LABEL_82;
            }
            uint64_t v16 = v13 - *(void *)a4;
            uint64_t v17 = v16 >> 2;
            if (v16 >> 2 <= (unint64_t)(v15 + 1)) {
              uint64_t v17 = v15 + 1;
            }
            if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v18 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v18 = v17;
            }
            if (v18) {
              uint64_t v19 = (char *)sub_1000B4170(a4 + 16, v18);
            }
            else {
              uint64_t v19 = 0;
            }
            int v32 = (uint64_t *)&v19[8 * v15];
            *int v32 = v12;
            uint64_t v31 = v32 + 1;
            uint64_t v34 = *(char **)a4;
            unsigned int v33 = *(char **)(a4 + 8);
            if (v33 != *(char **)a4)
            {
              do
              {
                uint64_t v35 = *((void *)v33 - 1);
                v33 -= 8;
                *--int v32 = v35;
              }
              while (v33 != v34);
              goto LABEL_68;
            }
            goto LABEL_69;
          }
        }
        else
        {
          uint64_t v20 = *(void *)(v11 + 152 * v10 + 88);
          if (!v20 || *(_DWORD *)(v20 + 24) == 1 && *(unsigned char *)(**(void **)(v20 + 32) + 65))
          {
            if (v7 == -1 || (unint64_t v21 = *(unsigned int *)(v9 + 4 * v10), v21 == -1))
            {
              if (sub_100119A7C(v6, (uint64_t)a2, v12))
              {
                uint64_t v14 = *(uint64_t **)(a4 + 8);
                unint64_t v30 = *(void *)(a4 + 16);
                if ((unint64_t)v14 < v30)
                {
LABEL_44:
                  uint64_t *v14 = v12;
                  uint64_t v31 = v14 + 1;
LABEL_71:
                  *(void *)(a4 + 8) = v31;
                  continue;
                }
                uint64_t v36 = ((uint64_t)v14 - *(void *)a4) >> 3;
                if ((unint64_t)(v36 + 1) >> 61) {
LABEL_82:
                }
                  sub_100078F84();
                uint64_t v37 = v30 - *(void *)a4;
                uint64_t v38 = v37 >> 2;
                if (v37 >> 2 <= (unint64_t)(v36 + 1)) {
                  uint64_t v38 = v36 + 1;
                }
                if ((unint64_t)v37 >= 0x7FFFFFFFFFFFFFF8) {
                  unint64_t v18 = 0x1FFFFFFFFFFFFFFFLL;
                }
                else {
                  unint64_t v18 = v38;
                }
                if (v18) {
                  uint64_t v19 = (char *)sub_1000B4170(a4 + 16, v18);
                }
                else {
                  uint64_t v19 = 0;
                }
                int v32 = (uint64_t *)&v19[8 * v36];
                *int v32 = v12;
                uint64_t v31 = v32 + 1;
                signed int v41 = *(char **)a4;
                unsigned int v33 = *(char **)(a4 + 8);
                if (v33 != *(char **)a4)
                {
                  do
                  {
                    uint64_t v42 = *((void *)v33 - 1);
                    v33 -= 8;
                    *--int v32 = v42;
                  }
                  while (v33 != v41);
                  goto LABEL_68;
                }
                goto LABEL_69;
              }
            }
            else if ((*(_DWORD *)&v51[(v21 >> 3) & 0x1FFFFFFC] >> v21))
            {
              uint64_t v14 = *(uint64_t **)(a4 + 8);
              unint64_t v22 = *(void *)(a4 + 16);
              if ((unint64_t)v14 < v22) {
                goto LABEL_44;
              }
              uint64_t v23 = ((uint64_t)v14 - *(void *)a4) >> 3;
              if ((unint64_t)(v23 + 1) >> 61) {
                goto LABEL_82;
              }
              uint64_t v24 = v22 - *(void *)a4;
              uint64_t v25 = v24 >> 2;
              if (v24 >> 2 <= (unint64_t)(v23 + 1)) {
                uint64_t v25 = v23 + 1;
              }
              if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFF8) {
                unint64_t v18 = 0x1FFFFFFFFFFFFFFFLL;
              }
              else {
                unint64_t v18 = v25;
              }
              if (v18) {
                uint64_t v19 = (char *)sub_1000B4170(a4 + 16, v18);
              }
              else {
                uint64_t v19 = 0;
              }
              int v32 = (uint64_t *)&v19[8 * v23];
              *int v32 = v12;
              uint64_t v31 = v32 + 1;
              char v43 = *(char **)a4;
              unsigned int v33 = *(char **)(a4 + 8);
              if (v33 != *(char **)a4)
              {
                do
                {
                  uint64_t v44 = *((void *)v33 - 1);
                  v33 -= 8;
                  *--int v32 = v44;
                }
                while (v33 != v43);
                goto LABEL_68;
              }
              goto LABEL_69;
            }
          }
          else if (*(_DWORD *)((char *)a2 {
                              + 4
          }
                              * (int)(-1431655765
                                    * ((unint64_t)(v20 - *(void *)(*(void *)(v20 + 16) + 48)) >> 4))
                              + *(unsigned int *)(v6 + 44)) == *(_DWORD *)(v11 + 152 * v10 + 68))
          {
            uint64_t v14 = *(uint64_t **)(a4 + 8);
            unint64_t v26 = *(void *)(a4 + 16);
            if ((unint64_t)v14 < v26) {
              goto LABEL_44;
            }
            uint64_t v27 = ((uint64_t)v14 - *(void *)a4) >> 3;
            if ((unint64_t)(v27 + 1) >> 61) {
              goto LABEL_82;
            }
            uint64_t v28 = v26 - *(void *)a4;
            uint64_t v29 = v28 >> 2;
            if (v28 >> 2 <= (unint64_t)(v27 + 1)) {
              uint64_t v29 = v27 + 1;
            }
            if ((unint64_t)v28 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v18 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v18 = v29;
            }
            if (v18) {
              uint64_t v19 = (char *)sub_1000B4170(a4 + 16, v18);
            }
            else {
              uint64_t v19 = 0;
            }
            int v32 = (uint64_t *)&v19[8 * v27];
            *int v32 = v12;
            uint64_t v31 = v32 + 1;
            uint64_t v39 = *(char **)a4;
            unsigned int v33 = *(char **)(a4 + 8);
            if (v33 != *(char **)a4)
            {
              do
              {
                uint64_t v40 = *((void *)v33 - 1);
                v33 -= 8;
                *--int v32 = v40;
              }
              while (v33 != v39);
LABEL_68:
              unsigned int v33 = *(char **)a4;
            }
LABEL_69:
            *(void *)a4 = v32;
            *(void *)(a4 + 8) = v31;
            *(void *)(a4 + 1sub_1000FA614((void *)this + 6) = &v19[8 * v18];
            if (v33) {
              operator delete(v33);
            }
            goto LABEL_71;
          }
        }
      }
      while (v10++ < *(int *)(v6 + 72));
    }
    uint64_t v46 = *(unsigned int *)(v6 + 40);
    if (v46 != -1) {
      google::protobuf::internal::ExtensionSet::AppendToList((uint64_t)a2 + v46, *(void *)v6, *(void *)(v6 + 56), a4);
    }
    uint64_t v47 = *(void *)a4;
    uint64_t v48 = *(uint64_t **)(a4 + 8);
    unint64_t v49 = 126 - 2 * __clz(((uint64_t)v48 - *(void *)a4) >> 3);
    if (v48 == *(uint64_t **)a4) {
      uint64_t v50 = 0;
    }
    else {
      uint64_t v50 = v49;
    }
    return sub_100121324(v47, v48, v50, 1);
  }
  return result;
}

void sub_10011A5D4(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 3)
  {
    if (a2 >> 61) {
      sub_100078F84();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_1000B4170(v3, a2);
    uint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    uint64_t v9 = &v6[8 * v8];
    uint64_t v11 = (char *)*a1;
    uint64_t v10 = (char *)a1[1];
    uint64_t v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        uint64_t v13 = *((void *)v10 - 1);
        v10 -= 8;
        *((void *)v12 - sub_1000333D0((uint64_t *)this + 1) = v13;
        v12 -= 8;
      }
      while (v10 != v11);
      uint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

uint64_t google::protobuf::Reflection::ListFields(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return google::protobuf::Reflection::ListFieldsMayFailOnStripped(a1, a2, 0, a3);
}

uint64_t google::protobuf::Reflection::ListFieldsOmitStripped(uint64_t a1, const google::protobuf::Message *a2, uint64_t a3)
{
  return google::protobuf::Reflection::ListFieldsMayFailOnStripped(a1, a2, 0, a3);
}

uint64_t google::protobuf::Reflection::GetInt32(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = *(void *)this;
  if (*((void *)a3 + 10) != v6) {
    sub_1001199A8(v6, (uint64_t)a3, "GetInt32", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetInt32", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v7 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v7)
  {
    uint64_t v10 = a3;
    uint64_t v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      v13[0] = &v11;
      v13[1] = &v10;
      uint64_t v12 = v13;
      std::__call_once(v7, &v12, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 1) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetInt32", 1);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetInt32((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), *((unsigned int *)a3 + 36));
  }
  uint64_t v9 = *((void *)a3 + 11);
  if (!v9
    || *(_DWORD *)(v9 + 24) == 1 && *(unsigned char *)(**(void **)(v9 + 32) + 65)
    || *(_DWORD *)((char *)a2
                 + *((_DWORD *)this + 11)
                 - 1431655764 * ((unint64_t)(v9 - *(void *)(*(void *)(v9 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
  {
    return *(unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
  }
  else
  {
    return *((unsigned int *)a3 + 36);
  }
}

uint64_t **google::protobuf::Reflection::SetInt32(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  int v13 = a4;
  uint64_t v7 = *(void *)this;
  if (*((void *)a3 + 10) != v7) {
    sub_1001199A8(v7, (uint64_t)a3, "SetInt32", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "SetInt32", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v8 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v8)
  {
    uint64_t v14 = a3;
    uint64_t v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v8, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 1) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "SetInt32", 1);
  }
  if (!*((unsigned char *)a3 + 67)) {
    return (uint64_t **)sub_100118B3C((unsigned int *)this, a2, (uint64_t)a3, &v13);
  }
  uint64_t v9 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v10 = *((_DWORD *)a3 + 17);
  uint64_t v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v11)
  {
    uint64_t v14 = a3;
    uint64_t v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v11, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  return google::protobuf::internal::ExtensionSet::SetInt32(v9, v10, *((unsigned char *)a3 + 56), v13, a3);
}

uint64_t google::protobuf::Reflection::GetRepeatedInt32(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "GetRepeatedInt32", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetRepeatedInt32", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v11 = a3;
    uint64_t v12 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v14[0] = &v12;
      v14[1] = &v11;
      int v13 = v14;
      std::__call_once(v9, &v13, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 1) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetRepeatedInt32", 1);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetRepeatedInt32((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  }
  else {
    return *(unsigned int *)(*(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3) + 8) + 4 * a4);
  }
}

void google::protobuf::Reflection::AddInt32(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "AddInt32", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "AddInt32", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v16 = a3;
    uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v19 = &v17;
      uint64_t v20 = &v16;
      unint64_t v18 = &v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 1) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "AddInt32", 1);
  }
  if (*((unsigned char *)a3 + 67))
  {
    int v10 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v11 = *((_DWORD *)a3 + 17);
    uint64_t v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v12)
    {
      uint64_t v16 = a3;
      uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        uint64_t v19 = &v17;
        uint64_t v20 = &v16;
        unint64_t v18 = &v19;
        std::__call_once(v12, &v18, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    google::protobuf::internal::ExtensionSet::AddInt32(v10, v11, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    int v13 = (unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
    uint64_t v14 = *v13;
    if (v14 == v13[1])
    {
      unsigned int v15 = v14 + 1;
      google::protobuf::RepeatedField<int>::Reserve(v13, v14 + 1);
      *(_DWORD *)(*((void *)v13 + 1) + 4 * v14) = a4;
    }
    else
    {
      *(_DWORD *)(*((void *)v13 + 1) + 4 * v14) = a4;
      unsigned int v15 = v14 + 1;
    }
    unsigned int *v13 = v15;
  }
}

uint64_t google::protobuf::Reflection::GetInt64(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = *(void *)this;
  if (*((void *)a3 + 10) != v6) {
    sub_1001199A8(v6, (uint64_t)a3, "GetInt64", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetInt64", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v7 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v7)
  {
    int v10 = a3;
    int v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      v13[0] = &v11;
      v13[1] = &v10;
      uint64_t v12 = v13;
      std::__call_once(v7, &v12, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 2) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetInt64", 2);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetInt64((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), *((void *)a3 + 18));
  }
  uint64_t v9 = *((void *)a3 + 11);
  if (!v9
    || *(_DWORD *)(v9 + 24) == 1 && *(unsigned char *)(**(void **)(v9 + 32) + 65)
    || *(_DWORD *)((char *)a2
                 + *((_DWORD *)this + 11)
                 - 1431655764 * ((unint64_t)(v9 - *(void *)(*(void *)(v9 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
  {
    return *(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
  }
  else
  {
    return *((void *)a3 + 18);
  }
}

uint64_t **google::protobuf::Reflection::SetInt64(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4)
{
  uint64_t v13 = a4;
  uint64_t v7 = *(void *)this;
  if (*((void *)a3 + 10) != v7) {
    sub_1001199A8(v7, (uint64_t)a3, "SetInt64", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "SetInt64", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v8 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v8)
  {
    uint64_t v14 = a3;
    unsigned int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v8, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 2) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "SetInt64", 2);
  }
  if (!*((unsigned char *)a3 + 67)) {
    return (uint64_t **)sub_100118C60((unsigned int *)this, a2, (uint64_t)a3, &v13);
  }
  uint64_t v9 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v10 = *((_DWORD *)a3 + 17);
  int v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v11)
  {
    uint64_t v14 = a3;
    unsigned int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v11, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  return google::protobuf::internal::ExtensionSet::SetInt64(v9, v10, *((unsigned char *)a3 + 56), (uint64_t *)v13, a3);
}

uint64_t google::protobuf::Reflection::GetRepeatedInt64(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "GetRepeatedInt64", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetRepeatedInt64", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    int v11 = a3;
    uint64_t v12 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v14[0] = &v12;
      v14[1] = &v11;
      uint64_t v13 = v14;
      std::__call_once(v9, &v13, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 2) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetRepeatedInt64", 2);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetRepeatedInt64((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  }
  else {
    return *(void *)(*(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3) + 8) + 8 * a4);
  }
}

void google::protobuf::Reflection::AddInt64(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "AddInt64", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "AddInt64", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v16 = a3;
    uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v19 = &v17;
      uint64_t v20 = &v16;
      unint64_t v18 = &v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 2) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "AddInt64", 2);
  }
  if (*((unsigned char *)a3 + 67))
  {
    int v10 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v11 = *((_DWORD *)a3 + 17);
    uint64_t v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v12)
    {
      uint64_t v16 = a3;
      uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        uint64_t v19 = &v17;
        uint64_t v20 = &v16;
        unint64_t v18 = &v19;
        std::__call_once(v12, &v18, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    google::protobuf::internal::ExtensionSet::AddInt64(v10, v11, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    uint64_t v13 = (unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
    uint64_t v14 = *v13;
    if (v14 == v13[1])
    {
      unsigned int v15 = v14 + 1;
      google::protobuf::RepeatedField<long long>::Reserve(v13, v14 + 1);
      *(void *)(*((void *)v13 + 1) + 8 * v14) = a4;
    }
    else
    {
      *(void *)(*((void *)v13 + 1) + 8 * v14) = a4;
      unsigned int v15 = v14 + 1;
    }
    unsigned int *v13 = v15;
  }
}

uint64_t google::protobuf::Reflection::GetUInt32(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = *(void *)this;
  if (*((void *)a3 + 10) != v6) {
    sub_1001199A8(v6, (uint64_t)a3, "GetUInt32", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetUInt32", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v7 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v7)
  {
    int v10 = a3;
    int v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      v13[0] = &v11;
      v13[1] = &v10;
      uint64_t v12 = v13;
      std::__call_once(v7, &v12, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 3) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetUInt32", 3);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetUInt32((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), *((unsigned int *)a3 + 36));
  }
  uint64_t v9 = *((void *)a3 + 11);
  if (!v9
    || *(_DWORD *)(v9 + 24) == 1 && *(unsigned char *)(**(void **)(v9 + 32) + 65)
    || *(_DWORD *)((char *)a2
                 + *((_DWORD *)this + 11)
                 - 1431655764 * ((unint64_t)(v9 - *(void *)(*(void *)(v9 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
  {
    return *(unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
  }
  else
  {
    return *((unsigned int *)a3 + 36);
  }
}

uint64_t **google::protobuf::Reflection::SetUInt32(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, unsigned int a4)
{
  unsigned int v13 = a4;
  uint64_t v7 = *(void *)this;
  if (*((void *)a3 + 10) != v7) {
    sub_1001199A8(v7, (uint64_t)a3, "SetUInt32", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "SetUInt32", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v8 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v8)
  {
    uint64_t v14 = a3;
    unsigned int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v8, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 3) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "SetUInt32", 3);
  }
  if (!*((unsigned char *)a3 + 67)) {
    return (uint64_t **)sub_100118B3C((unsigned int *)this, a2, (uint64_t)a3, (int *)&v13);
  }
  uint64_t v9 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v10 = *((_DWORD *)a3 + 17);
  int v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v11)
  {
    uint64_t v14 = a3;
    unsigned int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v11, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  return google::protobuf::internal::ExtensionSet::SetUInt32(v9, v10, *((unsigned char *)a3 + 56), v13, a3);
}

uint64_t google::protobuf::Reflection::GetRepeatedUInt32(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "GetRepeatedUInt32", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetRepeatedUInt32", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    int v11 = a3;
    uint64_t v12 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v14[0] = &v12;
      v14[1] = &v11;
      unsigned int v13 = v14;
      std::__call_once(v9, &v13, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 3) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetRepeatedUInt32", 3);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetRepeatedUInt32((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  }
  else {
    return *(unsigned int *)(*(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3) + 8) + 4 * a4);
  }
}

void google::protobuf::Reflection::AddUInt32(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "AddUInt32", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "AddUInt32", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v16 = a3;
    uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v19 = &v17;
      uint64_t v20 = &v16;
      unint64_t v18 = &v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 3) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "AddUInt32", 3);
  }
  if (*((unsigned char *)a3 + 67))
  {
    int v10 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v11 = *((_DWORD *)a3 + 17);
    uint64_t v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v12)
    {
      uint64_t v16 = a3;
      uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        uint64_t v19 = &v17;
        uint64_t v20 = &v16;
        unint64_t v18 = &v19;
        std::__call_once(v12, &v18, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    google::protobuf::internal::ExtensionSet::AddUInt32(v10, v11, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    unsigned int v13 = (unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
    uint64_t v14 = *v13;
    if (v14 == v13[1])
    {
      unsigned int v15 = v14 + 1;
      google::protobuf::RepeatedField<unsigned int>::Reserve(v13, v14 + 1);
      *(_DWORD *)(*((void *)v13 + 1) + 4 * v14) = a4;
    }
    else
    {
      *(_DWORD *)(*((void *)v13 + 1) + 4 * v14) = a4;
      unsigned int v15 = v14 + 1;
    }
    unsigned int *v13 = v15;
  }
}

uint64_t google::protobuf::Reflection::GetUInt64(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = *(void *)this;
  if (*((void *)a3 + 10) != v6) {
    sub_1001199A8(v6, (uint64_t)a3, "GetUInt64", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetUInt64", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v7 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v7)
  {
    int v10 = a3;
    int v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      v13[0] = &v11;
      v13[1] = &v10;
      uint64_t v12 = v13;
      std::__call_once(v7, &v12, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 4) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetUInt64", 4);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetUInt64((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), *((void *)a3 + 18));
  }
  uint64_t v9 = *((void *)a3 + 11);
  if (!v9
    || *(_DWORD *)(v9 + 24) == 1 && *(unsigned char *)(**(void **)(v9 + 32) + 65)
    || *(_DWORD *)((char *)a2
                 + *((_DWORD *)this + 11)
                 - 1431655764 * ((unint64_t)(v9 - *(void *)(*(void *)(v9 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
  {
    return *(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
  }
  else
  {
    return *((void *)a3 + 18);
  }
}

uint64_t **google::protobuf::Reflection::SetUInt64(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, unint64_t a4)
{
  unint64_t v13 = a4;
  uint64_t v7 = *(void *)this;
  if (*((void *)a3 + 10) != v7) {
    sub_1001199A8(v7, (uint64_t)a3, "SetUInt64", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "SetUInt64", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v8 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v8)
  {
    uint64_t v14 = a3;
    unsigned int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v8, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 4) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "SetUInt64", 4);
  }
  if (!*((unsigned char *)a3 + 67)) {
    return (uint64_t **)sub_100118C60((unsigned int *)this, a2, (uint64_t)a3, (uint64_t *)&v13);
  }
  uint64_t v9 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v10 = *((_DWORD *)a3 + 17);
  int v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v11)
  {
    uint64_t v14 = a3;
    unsigned int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v11, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  return google::protobuf::internal::ExtensionSet::SetUInt64(v9, v10, *((unsigned char *)a3 + 56), (uint64_t *)v13, a3);
}

uint64_t google::protobuf::Reflection::GetRepeatedUInt64(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "GetRepeatedUInt64", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetRepeatedUInt64", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    int v11 = a3;
    uint64_t v12 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v14[0] = &v12;
      v14[1] = &v11;
      unint64_t v13 = v14;
      std::__call_once(v9, &v13, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 4) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetRepeatedUInt64", 4);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetRepeatedUInt64((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  }
  else {
    return *(void *)(*(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3) + 8) + 8 * a4);
  }
}

void google::protobuf::Reflection::AddUInt64(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, uint64_t a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "AddUInt64", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "AddUInt64", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v16 = a3;
    uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v19 = &v17;
      uint64_t v20 = &v16;
      unint64_t v18 = &v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 4) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "AddUInt64", 4);
  }
  if (*((unsigned char *)a3 + 67))
  {
    int v10 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v11 = *((_DWORD *)a3 + 17);
    uint64_t v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v12)
    {
      uint64_t v16 = a3;
      uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        uint64_t v19 = &v17;
        uint64_t v20 = &v16;
        unint64_t v18 = &v19;
        std::__call_once(v12, &v18, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    google::protobuf::internal::ExtensionSet::AddUInt64(v10, v11, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    unint64_t v13 = (unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
    uint64_t v14 = *v13;
    if (v14 == v13[1])
    {
      unsigned int v15 = v14 + 1;
      google::protobuf::RepeatedField<unsigned long long>::Reserve(v13, v14 + 1);
      *(void *)(*((void *)v13 + 1) + 8 * v14) = a4;
    }
    else
    {
      *(void *)(*((void *)v13 + 1) + 8 * v14) = a4;
      unsigned int v15 = v14 + 1;
    }
    unsigned int *v13 = v15;
  }
}

float google::protobuf::Reflection::GetFloat(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = *(void *)this;
  if (*((void *)a3 + 10) != v6) {
    sub_1001199A8(v6, (uint64_t)a3, "GetFloat", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetFloat", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v7 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v7)
  {
    int v10 = a3;
    int v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      v13[0] = &v11;
      v13[1] = &v10;
      uint64_t v12 = v13;
      std::__call_once(v7, &v12, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 6) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetFloat", 6);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetFloat((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), *((float *)a3 + 36));
  }
  uint64_t v9 = *((void *)a3 + 11);
  if (!v9
    || *(_DWORD *)(v9 + 24) == 1 && *(unsigned char *)(**(void **)(v9 + 32) + 65)
    || *(_DWORD *)((char *)a2
                 + *((_DWORD *)this + 11)
                 - 1431655764 * ((unint64_t)(v9 - *(void *)(*(void *)(v9 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
  {
    return *(float *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
  }
  else
  {
    return *((float *)a3 + 36);
  }
}

uint64_t **google::protobuf::Reflection::SetFloat(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, float a4)
{
  float v13 = a4;
  uint64_t v7 = *(void *)this;
  if (*((void *)a3 + 10) != v7) {
    sub_1001199A8(v7, (uint64_t)a3, "SetFloat", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "SetFloat", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v8 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v8)
  {
    uint64_t v14 = a3;
    unsigned int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v8, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 6) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "SetFloat", 6);
  }
  if (!*((unsigned char *)a3 + 67)) {
    return (uint64_t **)sub_100118D84((unsigned int *)this, a2, (uint64_t)a3, (int *)&v13);
  }
  uint64_t v9 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v10 = *((_DWORD *)a3 + 17);
  int v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v11)
  {
    uint64_t v14 = a3;
    unsigned int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v11, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  return google::protobuf::internal::ExtensionSet::SetFloat(v9, v10, *((unsigned char *)a3 + 56), v13, a3);
}

float google::protobuf::Reflection::GetRepeatedFloat(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "GetRepeatedFloat", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetRepeatedFloat", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    int v11 = a3;
    uint64_t v12 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v14[0] = &v12;
      v14[1] = &v11;
      float v13 = v14;
      std::__call_once(v9, &v13, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 6) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetRepeatedFloat", 6);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetRepeatedFloat((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  }
  else {
    return *(float *)(*(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3) + 8) + 4 * a4);
  }
}

void google::protobuf::Reflection::AddFloat(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, float a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "AddFloat", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "AddFloat", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v16 = a3;
    uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v19 = &v17;
      uint64_t v20 = &v16;
      unint64_t v18 = &v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 6) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "AddFloat", 6);
  }
  if (*((unsigned char *)a3 + 67))
  {
    int v10 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v11 = *((_DWORD *)a3 + 17);
    uint64_t v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v12)
    {
      uint64_t v16 = a3;
      uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        uint64_t v19 = &v17;
        uint64_t v20 = &v16;
        unint64_t v18 = &v19;
        std::__call_once(v12, &v18, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    google::protobuf::internal::ExtensionSet::AddFloat(v10, v11, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    float v13 = (unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
    uint64_t v14 = *v13;
    if (v14 == v13[1])
    {
      unsigned int v15 = v14 + 1;
      google::protobuf::RepeatedField<float>::Reserve(v13, v14 + 1);
      *(float *)(*((void *)v13 + 1) + 4 * v14) = a4;
    }
    else
    {
      *(float *)(*((void *)v13 + 1) + 4 * v14) = a4;
      unsigned int v15 = v14 + 1;
    }
    unsigned int *v13 = v15;
  }
}

double google::protobuf::Reflection::GetDouble(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = *(void *)this;
  if (*((void *)a3 + 10) != v6) {
    sub_1001199A8(v6, (uint64_t)a3, "GetDouble", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetDouble", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v7 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v7)
  {
    int v10 = a3;
    int v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      v13[0] = &v11;
      v13[1] = &v10;
      uint64_t v12 = v13;
      std::__call_once(v7, &v12, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 5) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetDouble", 5);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetDouble((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), *((double *)a3 + 18));
  }
  uint64_t v9 = *((void *)a3 + 11);
  if (!v9
    || *(_DWORD *)(v9 + 24) == 1 && *(unsigned char *)(**(void **)(v9 + 32) + 65)
    || *(_DWORD *)((char *)a2
                 + *((_DWORD *)this + 11)
                 - 1431655764 * ((unint64_t)(v9 - *(void *)(*(void *)(v9 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
  {
    return *(double *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
  }
  else
  {
    return *((double *)a3 + 18);
  }
}

uint64_t **google::protobuf::Reflection::SetDouble(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, double a4)
{
  double v13 = a4;
  uint64_t v7 = *(void *)this;
  if (*((void *)a3 + 10) != v7) {
    sub_1001199A8(v7, (uint64_t)a3, "SetDouble", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "SetDouble", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v8 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v8)
  {
    uint64_t v14 = a3;
    unsigned int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v8, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 5) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "SetDouble", 5);
  }
  if (!*((unsigned char *)a3 + 67)) {
    return (uint64_t **)sub_100118EB0((unsigned int *)this, a2, (uint64_t)a3, (uint64_t *)&v13);
  }
  uint64_t v9 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v10 = *((_DWORD *)a3 + 17);
  int v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v11)
  {
    uint64_t v14 = a3;
    unsigned int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v11, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  return google::protobuf::internal::ExtensionSet::SetDouble(v9, v10, *((unsigned char *)a3 + 56), v13, a3);
}

double google::protobuf::Reflection::GetRepeatedDouble(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "GetRepeatedDouble", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetRepeatedDouble", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    int v11 = a3;
    uint64_t v12 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v14[0] = &v12;
      v14[1] = &v11;
      double v13 = v14;
      std::__call_once(v9, &v13, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 5) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetRepeatedDouble", 5);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetRepeatedDouble((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  }
  else {
    return *(double *)(*(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3) + 8) + 8 * a4);
  }
}

void google::protobuf::Reflection::AddDouble(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, double a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "AddDouble", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "AddDouble", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v16 = a3;
    uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v19 = &v17;
      uint64_t v20 = &v16;
      unint64_t v18 = &v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 5) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "AddDouble", 5);
  }
  if (*((unsigned char *)a3 + 67))
  {
    int v10 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v11 = *((_DWORD *)a3 + 17);
    uint64_t v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v12)
    {
      uint64_t v16 = a3;
      uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        uint64_t v19 = &v17;
        uint64_t v20 = &v16;
        unint64_t v18 = &v19;
        std::__call_once(v12, &v18, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    google::protobuf::internal::ExtensionSet::AddDouble(v10, v11, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    double v13 = (unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
    uint64_t v14 = *v13;
    if (v14 == v13[1])
    {
      unsigned int v15 = v14 + 1;
      google::protobuf::RepeatedField<double>::Reserve(v13, v14 + 1);
      *(double *)(*((void *)v13 + 1) + 8 * v14) = a4;
    }
    else
    {
      *(double *)(*((void *)v13 + 1) + 8 * v14) = a4;
      unsigned int v15 = v14 + 1;
    }
    unsigned int *v13 = v15;
  }
}

BOOL google::protobuf::Reflection::GetBool(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = *(void *)this;
  if (*((void *)a3 + 10) != v6) {
    sub_1001199A8(v6, (uint64_t)a3, "GetBool", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetBool", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v7 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v7)
  {
    int v11 = a3;
    uint64_t v12 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      v14[0] = &v12;
      v14[1] = &v11;
      double v13 = v14;
      std::__call_once(v7, &v13, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 7) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetBool", 7);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetBool((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), *((unsigned __int8 *)a3 + 144));
  }
  uint64_t v9 = *((void *)a3 + 11);
  if (!v9
    || *(_DWORD *)(v9 + 24) == 1 && *(unsigned char *)(**(void **)(v9 + 32) + 65)
    || *(_DWORD *)((char *)a2
                 + *((_DWORD *)this + 11)
                 - 1431655764 * ((unint64_t)(v9 - *(void *)(*(void *)(v9 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
  {
    int v10 = *((unsigned __int8 *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
  }
  else
  {
    int v10 = *((unsigned __int8 *)a3 + 144);
  }
  return v10 != 0;
}

uint64_t **google::protobuf::Reflection::SetBool(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, BOOL a4)
{
  BOOL v13 = a4;
  uint64_t v7 = *(void *)this;
  if (*((void *)a3 + 10) != v7) {
    sub_1001199A8(v7, (uint64_t)a3, "SetBool", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "SetBool", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v8 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v8)
  {
    uint64_t v14 = a3;
    unsigned int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v8, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 7) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "SetBool", 7);
  }
  if (!*((unsigned char *)a3 + 67)) {
    return (uint64_t **)sub_100118FDC((unsigned int *)this, a2, (uint64_t)a3, (char *)&v13);
  }
  uint64_t v9 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v10 = *((_DWORD *)a3 + 17);
  int v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v11)
  {
    uint64_t v14 = a3;
    unsigned int v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      uint64_t v17 = &v15;
      unint64_t v18 = &v14;
      uint64_t v16 = &v17;
      std::__call_once(v11, &v16, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  return google::protobuf::internal::ExtensionSet::SetBool(v9, v10, *((unsigned char *)a3 + 56), v13, a3);
}

uint64_t google::protobuf::Reflection::GetRepeatedBool(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "GetRepeatedBool", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetRepeatedBool", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    int v11 = a3;
    uint64_t v12 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v14[0] = &v12;
      v14[1] = &v11;
      BOOL v13 = v14;
      std::__call_once(v9, &v13, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 7) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetRepeatedBool", 7);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetRepeatedBool((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  }
  else {
    return *(unsigned char *)(*(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3) + 8) + a4) != 0;
  }
}

void google::protobuf::Reflection::AddBool(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, char a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "AddBool", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "AddBool", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v16 = a3;
    uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v19 = &v17;
      uint64_t v20 = &v16;
      unint64_t v18 = &v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 7) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "AddBool", 7);
  }
  if (*((unsigned char *)a3 + 67))
  {
    int v10 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v11 = *((_DWORD *)a3 + 17);
    uint64_t v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v12)
    {
      uint64_t v16 = a3;
      uint64_t v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        uint64_t v19 = &v17;
        uint64_t v20 = &v16;
        unint64_t v18 = &v19;
        std::__call_once(v12, &v18, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    google::protobuf::internal::ExtensionSet::AddBool(v10, v11, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    BOOL v13 = (unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
    uint64_t v14 = *v13;
    if (v14 == v13[1])
    {
      unsigned int v15 = v14 + 1;
      google::protobuf::RepeatedField<BOOL>::Reserve(v13, v14 + 1);
      *(unsigned char *)(*((void *)v13 + 1) + v14) = a4;
    }
    else
    {
      *(unsigned char *)(*((void *)v13 + 1) + v14) = a4;
      unsigned int v15 = v14 + 1;
    }
    unsigned int *v13 = v15;
  }
}

unint64_t google::protobuf::Reflection::GetStringReference(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  if (*(void *)(a3 + 80) != v6) {
    sub_1001199A8(v6, a3, "GetStringReference", "Field does not match message type.");
  }
  if (*(_DWORD *)(a3 + 60) == 3) {
    sub_1001199A8(*(void *)a1, a3, "GetStringReference", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v7 = *(std::once_flag::_State_type **)(a3 + 48);
  if (v7)
  {
    uint64_t v10 = a3;
    int v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      v13[0] = &v11;
      v13[1] = &v10;
      uint64_t v12 = v13;
      std::__call_once(v7, &v12, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 56)] != 9) {
    sub_10011A044(*(void *)a1, a3, "GetStringReference", 9);
  }
  if (*(unsigned char *)(a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetString((google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40)), *(_DWORD *)(a3 + 68), *(void *)(a3 + 144));
  }
  uint64_t v9 = *(void *)(a3 + 88);
  if (v9
    && (*(_DWORD *)(v9 + 24) != 1 || !*(unsigned char *)(**(void **)(v9 + 32) + 65))
    && *(_DWORD *)(a2
                 + *(_DWORD *)(a1 + 44)
                 - 1431655764 * ((unint64_t)(v9 - *(void *)(*(void *)(v9 + 16) + 48)) >> 4)) != *(_DWORD *)(a3 + 68))
  {
    return *(void *)(a3 + 144);
  }
  unint64_t result = *(void *)(a2 + sub_1001209E8(a1 + 8, (void *)a3)) & 0xFFFFFFFFFFFFFFFELL;
  if (!result) {
    return *(void *)(a3 + 144);
  }
  return result;
}

void *google::protobuf::Reflection::GetRepeatedString@<X0>(google::protobuf::Reflection *this@<X0>, const google::protobuf::Message *a2@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)this;
  if (*((void *)a3 + 10) != v10) {
    sub_1001199A8(v10, (uint64_t)a3, "GetRepeatedString", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetRepeatedString", "Field is singular; the method requires a repeated field.");
  }
  int v11 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v11)
  {
    unint64_t v18 = a3;
    uint64_t v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      v21[0] = &v19;
      v21[1] = &v18;
      uint64_t v20 = v21;
      std::__call_once(v11, &v20, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 9) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetRepeatedString", 9);
  }
  if (*((unsigned char *)a3 + 67))
  {
    unint64_t result = (void *)google::protobuf::internal::ExtensionSet::GetRepeatedString((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
    if ((*((char *)result + 23) & 0x80000000) == 0)
    {
      long long v13 = *(_OWORD *)result;
      uint64_t v14 = result[2];
LABEL_15:
      *(void *)(a5 + 1sub_1000FA614((void *)this + 6) = v14;
      *(_OWORD *)a5 = v13;
      return result;
    }
    uint64_t v16 = (void *)*result;
    unint64_t v17 = result[1];
  }
  else
  {
    unint64_t result = (void *)sub_1001209E8((uint64_t)this + 8, a3);
    unsigned int v15 = *(long long **)(*(void *)((char *)a2 + result + 16) + 8 * a4 + 8);
    if ((*((char *)v15 + 23) & 0x80000000) == 0)
    {
      long long v13 = *v15;
      uint64_t v14 = *((void *)v15 + 2);
      goto LABEL_15;
    }
    uint64_t v16 = *(void **)v15;
    unint64_t v17 = *((void *)v15 + 1);
  }
  return sub_1000BB834((unsigned char *)a5, v16, v17);
}

uint64_t google::protobuf::Reflection::GetRepeatedStringReference(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = *(void *)a1;
  if (*(void *)(a3 + 80) != v8) {
    sub_1001199A8(v8, a3, "GetRepeatedStringReference", "Field does not match message type.");
  }
  if (*(_DWORD *)(a3 + 60) != 3) {
    sub_1001199A8(*(void *)a1, a3, "GetRepeatedStringReference", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = *(std::once_flag::_State_type **)(a3 + 48);
  if (v9)
  {
    uint64_t v11 = a3;
    uint64_t v12 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v14[0] = &v12;
      v14[1] = &v11;
      long long v13 = v14;
      std::__call_once(v9, &v13, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a3 + 56)] != 9) {
    sub_10011A044(*(void *)a1, a3, "GetRepeatedStringReference", 9);
  }
  if (*(unsigned char *)(a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetRepeatedString((google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40)), *(_DWORD *)(a3 + 68), a4);
  }
  else {
    return *(void *)(*(void *)(a2 + sub_1001209E8(a1 + 8, (void *)a3) + 16) + 8 * a4 + 8);
  }
}

__n128 google::protobuf::Reflection::AddString(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4)
{
  uint64_t v8 = *(void *)a1;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "AddString", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)a1, (uint64_t)a3, "AddString", "Field is singular; the method requires a repeated field.");
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v29 = a3;
    unint64_t v30 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      int v32 = &v30;
      unsigned int v33 = &v29;
      uint64_t v31 = &v32;
      std::__call_once(v9, &v31, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 9) {
    sub_10011A044(*(void *)a1, (uint64_t)a3, "AddString", 9);
  }
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t v10 = *(unsigned int *)(a1 + 40);
    int v11 = *((_DWORD *)a3 + 17);
    uint64_t v12 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v12)
    {
      uint64_t v29 = a3;
      unint64_t v30 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        int v32 = &v30;
        unsigned int v33 = &v29;
        uint64_t v31 = &v32;
        std::__call_once(v12, &v31, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    long long v13 = (google::protobuf::internal::ExtensionSet *)(a2 + v10);
    char v14 = *((unsigned char *)a3 + 56);
    unsigned int v15 = *(void **)a4;
    v34[0] = *(void *)(a4 + 8);
    *(void *)((char *)v34 + 7) = *(void *)(a4 + 15);
    char v16 = *(unsigned char *)(a4 + 23);
    *(void *)(a4 + 8) = 0;
    *(void *)(a4 + 1sub_1000FA614((void *)this + 6) = 0;
    *(void *)a4 = 0;
    unint64_t v17 = (void **)google::protobuf::internal::ExtensionSet::AddString(v13, v11, v14, a3);
    uint64_t v19 = v17;
    if (*((char *)v17 + 23) < 0) {
      operator delete(*v17);
    }
    uint64_t v20 = (void *)v34[0];
    char *v19 = v15;
    v19[1] = v20;
    *(void **)((char *)v19 + 1sub_1000FA614((void *)this + 5) = *(void **)((char *)v34 + 7);
    *((unsigned char *)v19 + 23) = v16;
    return result;
  }
  unsigned int v21 = sub_1001209E8(a1 + 8, a3);
  uint64_t v22 = a2 + v21;
  uint64_t v23 = *(int **)(v22 + 16);
  if (!v23)
  {
    int v25 = *(_DWORD *)(v22 + 12);
    goto LABEL_22;
  }
  uint64_t v24 = *(int *)(v22 + 8);
  int v25 = *v23;
  if ((int)v24 >= *v23)
  {
    if (v25 != *(_DWORD *)(v22 + 12))
    {
LABEL_23:
      *uint64_t v23 = v25 + 1;
      unint64_t v26 = (void **)sub_1000BBB38(*(google::protobuf::Arena **)v22);
      uint64_t v27 = *(void *)(v22 + 16);
      uint64_t v28 = *(int *)(v22 + 8);
      *(_DWORD *)(v22 + 8) = v28 + 1;
      *(void *)(v27 + 8 * v28 + 8) = v26;
      goto LABEL_24;
    }
LABEL_22:
    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a2 + v21), v25 + 1);
    uint64_t v23 = *(int **)(v22 + 16);
    int v25 = *v23;
    goto LABEL_23;
  }
  *(_DWORD *)(v22 + 8) = v24 + 1;
  unint64_t v26 = *(void ***)&v23[2 * v24 + 2];
LABEL_24:
  if (*((char *)v26 + 23) < 0) {
    operator delete(*v26);
  }
  __n128 result = *(__n128 *)a4;
  v26[2] = *(void **)(a4 + 16);
  *(__n128 *)unint64_t v26 = result;
  *(unsigned char *)(a4 + 23) = 0;
  *(unsigned char *)a4 = 0;
  return result;
}

void sub_10011DA28(_Unwind_Exception *exception_object)
{
  if (v2 < 0) {
    operator delete(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::GetEnum(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t EnumValue = google::protobuf::Reflection::GetEnumValue(this, a2, a3);
  int64_t v5 = (google::protobuf::EnumDescriptor *)google::protobuf::FieldDescriptor::enum_type(a3);
  return google::protobuf::EnumDescriptor::FindValueByNumberCreatingIfUnknown(v5, EnumValue);
}

uint64_t google::protobuf::Reflection::GetEnumValue(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = *(void *)this;
  if (*((void *)a3 + 10) != v6) {
    sub_1001199A8(v6, (uint64_t)a3, "GetEnumValue", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetEnumValue", "Field is repeated; the method requires a singular field.");
  }
  uint64_t v7 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v7)
  {
    long long v13 = a3;
    char v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      unsigned int v15 = v16;
      std::__call_once(v7, &v15, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 8) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetEnumValue", 8);
  }
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t v8 = (const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v9 = *((_DWORD *)a3 + 17);
    uint64_t v10 = google::protobuf::FieldDescriptor::default_value_enum(a3);
    return google::protobuf::internal::ExtensionSet::GetEnum(v8, v9, *(unsigned int *)(v10 + 16));
  }
  else
  {
    uint64_t v12 = *((void *)a3 + 11);
    if (!v12
      || *(_DWORD *)(v12 + 24) == 1 && *(unsigned char *)(**(void **)(v12 + 32) + 65)
      || *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v12 - *(void *)(*(void *)(v12 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    {
      return *(unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
    }
    else
    {
      return *(unsigned int *)(google::protobuf::FieldDescriptor::default_value_enum(a3) + 16);
    }
  }
}

uint64_t **google::protobuf::Reflection::SetEnum(google::protobuf::Reflection *this, google::protobuf::Message *a2, const std::string::value_type **a3, const google::protobuf::EnumValueDescriptor *a4)
{
  uint64_t v8 = *((void *)a4 + 3);
  if (v8 != google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)a3)) {
    sub_10011DCC0(*(void *)this, a3, "SetEnum", (uint64_t)a4);
  }
  int v9 = *((_DWORD *)a4 + 4);
  return google::protobuf::Reflection::SetEnumValueInternal(this, a2, (const google::protobuf::FieldDescriptor *)a3, v9);
}

void sub_10011DCC0(uint64_t a1, const std::string::value_type **a2, const std::string::value_type *a3, uint64_t a4)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 155);
  uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v20, "Protocol Buffer reflection usage error:\n  Method      : google::protobuf::Reflection::");
  int v9 = google::protobuf::internal::LogMessage::operator<<(v8, a3);
  uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, "\n  Message type: ");
  int v11 = google::protobuf::internal::LogMessage::operator<<(v10, *(const std::string::value_type **)(a1 + 8));
  uint64_t v12 = google::protobuf::internal::LogMessage::operator<<(v11, "\n  Field       : ");
  long long v13 = google::protobuf::internal::LogMessage::operator<<(v12, a2[1]);
  char v14 = google::protobuf::internal::LogMessage::operator<<(v13, "\n  Problem     : Enum value did not match field type:\n    Expected  : ");
  uint64_t v15 = google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)a2);
  char v16 = google::protobuf::internal::LogMessage::operator<<(v14, *(const std::string::value_type **)(v15 + 8));
  unint64_t v17 = google::protobuf::internal::LogMessage::operator<<(v16, "\n    Actual    : ");
  unint64_t v18 = google::protobuf::internal::LogMessage::operator<<(v17, *(const std::string::value_type **)(a4 + 8));
  google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v18->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
}

void sub_10011DDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t **google::protobuf::Reflection::SetEnumValueInternal(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  int v9 = a4;
  if (!*((unsigned char *)a3 + 67)) {
    return (uint64_t **)sub_100118B3C((unsigned int *)this, a2, (uint64_t)a3, &v9);
  }
  int64_t v5 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
  int v6 = *((_DWORD *)a3 + 17);
  uint64_t v7 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v7)
  {
    uint64_t v10 = a3;
    int v11 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      v13[0] = &v11;
      v13[1] = &v10;
      uint64_t v12 = v13;
      std::__call_once(v7, &v12, (void (__cdecl *)(void *))sub_1000BB820);
    }
    a4 = v9;
  }
  return google::protobuf::internal::ExtensionSet::SetEnum(v5, v6, *((unsigned char *)a3 + 56), a4, a3);
}

void google::protobuf::Reflection::SetEnumValue(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, signed int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "SetEnumValue", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "SetEnumValue", "Field is repeated; the method requires a singular field.");
  }
  int v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    long long v13 = a3;
    char v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      uint64_t v15 = v16;
      std::__call_once(v9, &v15, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 8) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "SetEnumValue", 8);
  }
  if (*(_DWORD *)(*((void *)a3 + 5) + 60) == 3
    || (uint64_t v10 = (google::protobuf::EnumDescriptor *)google::protobuf::FieldDescriptor::enum_type(a3),
        google::protobuf::EnumDescriptor::FindValueByNumber(v10, a4)))
  {
    google::protobuf::Reflection::SetEnumValueInternal(this, a2, a3, a4);
  }
  else
  {
    int v11 = (unint64_t *)((char *)a2 + *((unsigned int *)this + 9));
    if (*v11) {
      uint64_t v12 = (google::protobuf::Arena **)((*v11 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      uint64_t v12 = sub_10003562C(v11);
    }
    google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v12, *((_DWORD *)a3 + 17), a4);
  }
}

uint64_t google::protobuf::Reflection::GetRepeatedEnum(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  Repeateduint64_t EnumValue = google::protobuf::Reflection::GetRepeatedEnumValue(this, a2, a3, a4);
  int v6 = (google::protobuf::EnumDescriptor *)google::protobuf::FieldDescriptor::enum_type(a3);
  return google::protobuf::EnumDescriptor::FindValueByNumberCreatingIfUnknown(v6, RepeatedEnumValue);
}

uint64_t google::protobuf::Reflection::GetRepeatedEnumValue(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "GetRepeatedEnumValue", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetRepeatedEnumValue", "Field is singular; the method requires a repeated field.");
  }
  int v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    int v11 = a3;
    uint64_t v12 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v14[0] = &v12;
      v14[1] = &v11;
      long long v13 = v14;
      std::__call_once(v9, &v13, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 8) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetRepeatedEnumValue", 8);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetRepeatedEnum((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  }
  else {
    return *(unsigned int *)(*(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3) + 8) + 4 * a4);
  }
}

void google::protobuf::Reflection::AddEnum(uint64_t *a1, google::protobuf::Message *a2, const std::string::value_type **this, uint64_t a4)
{
  uint64_t v8 = *(void *)(a4 + 24);
  if (v8 != google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)this)) {
    sub_10011DCC0(*a1, this, "AddEnum", a4);
  }
  int v9 = *(_DWORD *)(a4 + 16);
  google::protobuf::Reflection::AddEnumValueInternal((google::protobuf::Reflection *)a1, a2, (const google::protobuf::FieldDescriptor *)this, v9);
}

void google::protobuf::Reflection::AddEnumValueInternal(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  if (*((unsigned char *)a3 + 67))
  {
    int v6 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v7 = *((_DWORD *)a3 + 17);
    uint64_t v8 = (std::once_flag::_State_type *)*((void *)a3 + 6);
    if (v8)
    {
      uint64_t v12 = a3;
      long long v13 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
      {
        v15[0] = &v13;
        v15[1] = &v12;
        char v14 = v15;
        std::__call_once(v8, &v14, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    google::protobuf::internal::ExtensionSet::AddEnum(v6, v7, *((unsigned char *)a3 + 56), *(unsigned char *)(*((void *)a3 + 15) + 76), a4, a3);
  }
  else
  {
    int v9 = (unsigned int *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
    uint64_t v10 = *v9;
    if (v10 == v9[1])
    {
      unsigned int v11 = v10 + 1;
      google::protobuf::RepeatedField<int>::Reserve(v9, v10 + 1);
      *(_DWORD *)(*((void *)v9 + 1) + 4 * v1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = a4;
    }
    else
    {
      *(_DWORD *)(*((void *)v9 + 1) + 4 * v1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = a4;
      unsigned int v11 = v10 + 1;
    }
    *int v9 = v11;
  }
}

void google::protobuf::Reflection::AddEnumValue(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, signed int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "AddEnum", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "AddEnum", "Field is singular; the method requires a repeated field.");
  }
  int v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    long long v13 = a3;
    char v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      uint64_t v15 = v16;
      std::__call_once(v9, &v15, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 8) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "AddEnum", 8);
  }
  if (*(_DWORD *)(*((void *)a3 + 5) + 60) == 3
    || (uint64_t v10 = (google::protobuf::EnumDescriptor *)google::protobuf::FieldDescriptor::enum_type(a3),
        google::protobuf::EnumDescriptor::FindValueByNumber(v10, a4)))
  {
    google::protobuf::Reflection::AddEnumValueInternal(this, a2, a3, a4);
  }
  else
  {
    unsigned int v11 = (unint64_t *)((char *)a2 + *((unsigned int *)this + 9));
    if (*v11) {
      uint64_t v12 = (google::protobuf::Arena **)((*v11 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else {
      uint64_t v12 = sub_10003562C(v11);
    }
    google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v12, *((_DWORD *)a3 + 17), a4);
  }
}

unint64_t google::protobuf::Reflection::GetDefaultMessageInstance(google::protobuf::Reflection *this, atomic_ullong *a2)
{
  uint64_t v4 = *((void *)this + 8);
  if (v4 == google::protobuf::MessageFactory::generated_factory(this))
  {
    unint64_t result = atomic_load_explicit(a2 + 18, memory_order_acquire);
    if (!result)
    {
      uint64_t v10 = *((void *)this + 8);
      uint64_t v11 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
      unint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v10 + 16))(v10, v11);
      atomic_store(result, (unint64_t *)a2 + 18);
    }
  }
  else if (*((unsigned char *)a2 + 67) {
         || (atomic_ullong v5 = a2[15], *(unsigned char *)(v5 + 79))
  }
         || *(unsigned char *)(v5 + 77)
         || (atomic_ullong v12 = a2[11]) != 0 && (*(_DWORD *)(v12 + 24) != 1 || !*(unsigned char *)(**(void **)(v12 + 32) + 65))
         || (unint64_t result = *(void *)sub_100120E48((uint64_t *)this + 1, (uint64_t)a2)) == 0)
  {
    uint64_t v6 = *((void *)this + 8);
    uint64_t v7 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a2);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)v6 + 16);
    return v8(v6, v7);
  }
  return result;
}

uint64_t google::protobuf::Reflection::GetMessage(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, google::protobuf::MessageFactory *a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "GetMessage", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetMessage", "Field is repeated; the method requires a singular field.");
  }
  int v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v15 = a3;
    char v16 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v18[0] = &v16;
      v18[1] = &v15;
      unint64_t v17 = v18;
      std::__call_once(v9, &v17, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 10) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetMessage", 10);
  }
  if (!a4) {
    a4 = (google::protobuf::MessageFactory *)*((void *)this + 8);
  }
  if (*((unsigned char *)a3 + 67))
  {
    uint64_t v10 = (const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v11 = *((_DWORD *)a3 + 17);
    uint64_t v12 = google::protobuf::FieldDescriptor::message_type(a3);
    return google::protobuf::internal::ExtensionSet::GetMessage(v10, v11, v12, (uint64_t)a4);
  }
  else
  {
    uint64_t v14 = *((void *)a3 + 11);
    if (v14
      && (*(_DWORD *)(v14 + 24) != 1 || !*(unsigned char *)(**(void **)(v14 + 32) + 65))
      && *(_DWORD *)((char *)a2
                   + *((_DWORD *)this + 11)
                   - 1431655764
                   * ((unint64_t)(v14 - *(void *)(*(void *)(v14 + 16) + 48)) >> 4)) != *((_DWORD *)a3 + 17))
    {
      return google::protobuf::Reflection::GetDefaultMessageInstance(this, (atomic_ullong *)a3);
    }
    uint64_t result = *(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
    if (!result) {
      return google::protobuf::Reflection::GetDefaultMessageInstance(this, (atomic_ullong *)a3);
    }
  }
  return result;
}

uint64_t *google::protobuf::Reflection::MutableMessage(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, google::protobuf::MessageFactory *a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "MutableMessage", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "MutableMessage", "Field is repeated; the method requires a singular field.");
  }
  int v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v23 = a3;
    uint64_t v24 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v26[0] = &v24;
      v26[1] = &v23;
      int v25 = v26;
      std::__call_once(v9, &v25, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 10) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "MutableMessage", 10);
  }
  if (!a4) {
    a4 = (google::protobuf::MessageFactory *)*((void *)this + 8);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::MutableMessage((google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), a3, a4);
  }
  unsigned int v11 = sub_1001209E8((uint64_t)this + 8, a3);
  uint64_t v12 = *((void *)a3 + 11);
  if (!v12 || *(_DWORD *)(v12 + 24) == 1 && *(unsigned char *)(**(void **)(v12 + 32) + 65))
  {
    unsigned int v13 = sub_100119F6C((uint64_t)this + 8, (uint64_t)a3);
    if (v13 != -1) {
      *(_DWORD *)((char *)a2 + 4 * (v13 >> 5) + *((unsigned int *)this + 8)) |= 1 << v13;
    }
LABEL_20:
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t result = (uint64_t *)*v14;
    if (*v14) {
      return result;
    }
    goto LABEL_31;
  }
  if (*(_DWORD *)((char *)a2
                 + *((_DWORD *)this + 11)
                 - 1431655764 * ((unint64_t)(v12 - *(void *)(*(void *)(v12 + 16) + 48)) >> 4)) == *((_DWORD *)a3 + 17))
    goto LABEL_20;
  google::protobuf::Reflection::ClearOneof(this, a2, (const google::protobuf::OneofDescriptor *)v12);
  uint64_t v15 = *((void *)a3 + 11);
  if (!v15 || *(_DWORD *)(v15 + 24) == 1 && *(unsigned char *)(**(void **)(v15 + 32) + 65))
  {
    unsigned int v16 = sub_100119F6C((uint64_t)this + 8, (uint64_t)a3);
    if (v16 != -1) {
      *(_DWORD *)((char *)a2 + 4 * (v16 >> 5) + *((unsigned int *)this + 8)) |= 1 << v16;
    }
  }
  else
  {
    *(_DWORD *)((char *)a2
              + *((_DWORD *)this + 11)
              - 1431655764 * ((unint64_t)(v15 - *(void *)(*(void *)(v15 + 16) + 48)) >> sub_1000E0804((uint64_t)this + 24, *((void **)this + 4)) = *((_DWORD *)a3 + 17);
  }
  uint64_t v14 = (uint64_t *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
  unint64_t DefaultMessageInstance = google::protobuf::Reflection::GetDefaultMessageInstance(this, (atomic_ullong *)a3);
  uint64_t v18 = *((void *)a2 + 1);
  char v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFELL);
  if (v18) {
    char v19 = (void *)*v19;
  }
  uint64_t result = (uint64_t *)(*(uint64_t (**)(unint64_t, void *))(*(void *)DefaultMessageInstance + 32))(DefaultMessageInstance, v19);
  uint64_t *v14 = (uint64_t)result;
  if (!result)
  {
LABEL_31:
    unint64_t v20 = google::protobuf::Reflection::GetDefaultMessageInstance(this, (atomic_ullong *)a3);
    uint64_t v21 = *((void *)a2 + 1);
    uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFELL);
    if (v21) {
      uint64_t v22 = (void *)*v22;
    }
    uint64_t result = (uint64_t *)(*(uint64_t (**)(unint64_t, void *))(*(void *)v20 + 32))(v20, v22);
    uint64_t *v14 = (uint64_t)result;
  }
  return result;
}

void google::protobuf::Reflection::UnsafeArenaSetAllocatedMessage(google::protobuf::Reflection *this, google::protobuf::Message *a2, google::protobuf::Message *a3, const google::protobuf::FieldDescriptor *a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a4 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a4, "SetAllocatedMessage", "Field does not match message type.");
  }
  if (*((_DWORD *)a4 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a4, "SetAllocatedMessage", "Field is repeated; the method requires a singular field.");
  }
  int v9 = (std::once_flag::_State_type *)*((void *)a4 + 6);
  if (v9)
  {
    uint64_t v23 = a4;
    uint64_t v24 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      unint64_t v26 = &v24;
      uint64_t v27 = &v23;
      int v25 = &v26;
      std::__call_once(v9, &v25, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a4 + 14)] != 10) {
    sub_10011A044(*(void *)this, (uint64_t)a4, "SetAllocatedMessage", 10);
  }
  if (*((unsigned char *)a4 + 67))
  {
    uint64_t v10 = (google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10));
    int v11 = *((_DWORD *)a4 + 17);
    uint64_t v12 = (std::once_flag::_State_type *)*((void *)a4 + 6);
    if (v12)
    {
      uint64_t v23 = a4;
      uint64_t v24 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        unint64_t v26 = &v24;
        uint64_t v27 = &v23;
        int v25 = &v26;
        std::__call_once(v12, &v25, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    google::protobuf::internal::ExtensionSet::UnsafeArenaSetAllocatedMessage(v10, v11, *((unsigned char *)a4 + 56), a4, a3);
    return;
  }
  uint64_t v13 = *((void *)a4 + 11);
  if (!v13 || *(_DWORD *)(v13 + 24) == 1 && *(unsigned char *)(**(void **)(v13 + 32) + 65))
  {
    unsigned int v14 = sub_100119F6C((uint64_t)this + 8, (uint64_t)a4);
    if (a3)
    {
      if (v14 == -1) {
        goto LABEL_26;
      }
      uint64_t v15 = (char *)a2 + *((unsigned int *)this + 8);
      unsigned int v16 = v14 >> 5;
      int v17 = *(_DWORD *)&v15[4 * (v14 >> 5)] | (1 << v14);
    }
    else
    {
      if (v14 == -1) {
        goto LABEL_26;
      }
      uint64_t v15 = (char *)a2 + *((unsigned int *)this + 8);
      unsigned int v16 = v14 >> 5;
      int v17 = *(_DWORD *)&v15[4 * (v14 >> 5)] & ~(1 << v14);
    }
    *(_DWORD *)&v15[4 * v16] = v17;
LABEL_26:
    unsigned int v18 = sub_1001209E8((uint64_t)this + 8, a4);
    uint64_t v19 = v18;
    uint64_t v20 = *(void *)((char *)a2 + *((unsigned int *)this + 9));
    uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFELL);
    if (v20)
    {
      if (!*v21)
      {
LABEL_28:
        uint64_t v22 = *(void *)((char *)a2 + v18);
        if (v22) {
          (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
        }
      }
    }
    else if (!v21)
    {
      goto LABEL_28;
    }
    *(void *)((char *)a2 + v19) = a3;
    return;
  }
  google::protobuf::Reflection::ClearOneof(this, a2, (const google::protobuf::OneofDescriptor *)v13);
  if (a3)
  {
    *(void *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, asub_1000E0804((uint64_t)this + 24, *((void **)this + 4)) = a3;
    *(_DWORD *)((char *)a2
              + *((_DWORD *)this + 11)
              - 1431655764
              * ((*((void *)a4 + 11) - *(void *)(*(void *)(*((void *)a4 + 11) + 16) + 48)) >> sub_1000E0804((uint64_t)this + 24, *((void **)this + 4)) = *((_DWORD *)a4 + 17);
  }
}

uint64_t google::protobuf::Reflection::UnsafeArenaReleaseMessage(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, google::protobuf::MessageFactory *a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "ReleaseMessage", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) == 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "ReleaseMessage", "Field is repeated; the method requires a singular field.");
  }
  int v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    unsigned int v16 = a3;
    int v17 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v19[0] = &v17;
      v19[1] = &v16;
      unsigned int v18 = v19;
      std::__call_once(v9, &v18, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 10) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "ReleaseMessage", 10);
  }
  if (!a4) {
    a4 = (google::protobuf::MessageFactory *)*((void *)this + 8);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::UnsafeArenaReleaseMessage((google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), a3, a4);
  }
  if (*((_DWORD *)a3 + 15) != 3)
  {
    uint64_t v11 = *((void *)a3 + 11);
    if (!v11 || *(_DWORD *)(v11 + 24) == 1 && *(unsigned char *)(**(void **)(v11 + 32) + 65))
    {
      unsigned int v12 = sub_100119F6C((uint64_t)this + 8, (uint64_t)a3);
      if (v12 != -1) {
        *(_DWORD *)((char *)a2 + 4 * (v12 >> 5) + *((unsigned int *)this + 8)) &= ~(1 << v12);
      }
    }
  }
  uint64_t v13 = *((void *)a3 + 11);
  if (v13 && (*(_DWORD *)(v13 + 24) != 1 || !*(unsigned char *)(**(void **)(v13 + 32) + 65)))
  {
    uint64_t v14 = *((_DWORD *)this + 11)
        - 1431655764 * ((unint64_t)(v13 - *(void *)(*(void *)(v13 + 16) + 48)) >> 4);
    if (*(_DWORD *)((char *)a2 + v14) != *((_DWORD *)a3 + 17)) {
      return 0;
    }
    *(_DWORD *)((char *)a2 + v14) = 0;
  }
  unsigned int v15 = sub_1001209E8((uint64_t)this + 8, a3);
  uint64_t result = *(void *)((char *)a2 + v15);
  *(void *)((char *)a2 + v1sub_1000FA614((void *)this + 5) = 0;
  return result;
}

uint64_t google::protobuf::Reflection::GetRepeatedMessage(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "GetRepeatedMessage", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "GetRepeatedMessage", "Field is singular; the method requires a repeated field.");
  }
  int v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v13 = a3;
    uint64_t v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      unsigned int v15 = v16;
      std::__call_once(v9, &v15, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 10) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "GetRepeatedMessage", 10);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::GetRepeatedMessage((const google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  }
  int v11 = sub_100100518(a3);
  RepeatedField = (const google::protobuf::Message *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
  if (v11) {
    RepeatedField = (google::protobuf::internal::MapFieldBase *)google::protobuf::internal::MapFieldBase::GetRepeatedField(RepeatedField);
  }
  return *(void *)(*((void *)RepeatedField + 2) + 8 * a4 + 8);
}

uint64_t google::protobuf::Reflection::MutableRepeatedMessage(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, int a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "MutableRepeatedMessage", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "MutableRepeatedMessage", "Field is singular; the method requires a repeated field.");
  }
  int v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v13 = a3;
    uint64_t v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v16[0] = &v14;
      v16[1] = &v13;
      unsigned int v15 = v16;
      std::__call_once(v9, &v15, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 10) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "MutableRepeatedMessage", 10);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::MutableRepeatedMessage((google::protobuf::Message *)((char *)a2 + *((unsigned int *)this + 10)), *((_DWORD *)a3 + 17), a4);
  }
  int v11 = sub_100100518(a3);
  unsigned int v12 = (google::protobuf::Message *)((char *)a2 + sub_1001209E8((uint64_t)this + 8, a3));
  if (v11) {
    unsigned int v12 = (google::protobuf::internal::MapFieldBase *)google::protobuf::internal::MapFieldBase::MutableRepeatedField(v12);
  }
  return *(void *)(*((void *)v12 + 2) + 8 * a4 + 8);
}

uint64_t google::protobuf::Reflection::AddMessage(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3, google::protobuf::MessageFactory *a4)
{
  uint64_t v8 = *(void *)this;
  if (*((void *)a3 + 10) != v8) {
    sub_1001199A8(v8, (uint64_t)a3, "AddMessage", "Field does not match message type.");
  }
  if (*((_DWORD *)a3 + 15) != 3) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "AddMessage", "Field is singular; the method requires a repeated field.");
  }
  int v9 = (std::once_flag::_State_type *)*((void *)a3 + 6);
  if (v9)
  {
    uint64_t v22 = a3;
    uint64_t v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v25[0] = &v23;
      v25[1] = &v22;
      uint64_t v24 = v25;
      std::__call_once(v9, &v24, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a3 + 14)] != 10) {
    sub_10011A044(*(void *)this, (uint64_t)a3, "AddMessage", 10);
  }
  if (!a4) {
    a4 = (google::protobuf::MessageFactory *)*((void *)this + 8);
  }
  if (*((unsigned char *)a3 + 67)) {
    return google::protobuf::internal::ExtensionSet::AddMessage((google::protobuf::Arena **)((char *)a2 + *((unsigned int *)this + 10)), a3, a4);
  }
  int v11 = sub_100100518(a3);
  unsigned int v12 = sub_1001209E8((uint64_t)this + 8, a3);
  uint64_t v13 = (char *)a2 + v12;
  if (v11) {
    uint64_t v13 = (char *)google::protobuf::internal::MapFieldBase::MutableRepeatedField((google::protobuf::Message *)((char *)a2 + v12));
  }
  uint64_t v14 = *((void *)v13 + 2);
  int v15 = *((_DWORD *)v13 + 2);
  if (!v14
    || v15 >= *(_DWORD *)v14
    || (v16 = v15, ++v15, *((_DWORD *)v13 + 2) = v15, (uint64_t v10 = *(void *)(v14 + 8 * v16 + 8)) == 0))
  {
    if (v15)
    {
      uint64_t v17 = *(void *)(v14 + 8);
    }
    else
    {
      uint64_t v18 = google::protobuf::FieldDescriptor::message_type(a3);
      uint64_t v17 = (*(uint64_t (**)(google::protobuf::MessageFactory *, uint64_t))(*(void *)a4 + 16))(a4, v18);
    }
    uint64_t v19 = *((void *)a2 + 1);
    uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFELL);
    if (v19) {
      uint64_t v20 = (void *)*v20;
    }
    uint64_t v10 = (*(uint64_t (**)(uint64_t, void *))(*(void *)v17 + 32))(v17, v20);
    sub_100109B10((unsigned int *)v13, v10);
  }
  return v10;
}

uint64_t *google::protobuf::Reflection::MutableRawRepeatedField(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *this, int a4, uint64_t a5, uint64_t a6)
{
  if (*((_DWORD *)this + 15) != 3) {
    sub_1001199A8(*(void *)a1, (uint64_t)this, "\"MutableRawRepeatedField\"", "Field is singular; the method requires a repeated field.");
  }
  int v11 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v11)
  {
    uint64_t v24 = this;
    int v25 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      v23[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
      v23[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v24;
      unint64_t v26 = v23;
      std::__call_once(v11, &v26, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  unsigned int v12 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 14)];
  if (v12 == a4) {
    goto LABEL_13;
  }
  uint64_t v13 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v13)
  {
    uint64_t v24 = this;
    int v25 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
    {
      v23[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
      v23[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v24;
      unint64_t v26 = v23;
      std::__call_once(v13, &v26, (void (__cdecl *)(void *))sub_1000BB820);
    }
    unsigned int v12 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 14)];
  }
  if (a4 == 1 && v12 == 8)
  {
LABEL_13:
    if (!a6) {
      goto LABEL_18;
    }
  }
  else
  {
    sub_10011A044(*(void *)a1, (uint64_t)this, "MutableRawRepeatedField", a4);
    if (!a6) {
      goto LABEL_18;
    }
  }
  if (google::protobuf::FieldDescriptor::message_type(this) != a6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v23, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 1789);
    uint64_t v14 = google::protobuf::internal::LogMessage::operator<<(v23, "CHECK failed: (field->message_type()) == (desc): ");
    int v15 = google::protobuf::internal::LogMessage::operator<<(v14, "wrong submessage type");
    google::protobuf::internal::LogFinisher::operator=((int)&v26, (const char **)&v15->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v23[0].__r_.__value_.__l.__data_);
  }
LABEL_18:
  if (*((unsigned char *)this + 67))
  {
    uint64_t v16 = (google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40));
    int v17 = *((_DWORD *)this + 17);
    uint64_t v18 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v18)
    {
      uint64_t v24 = this;
      int v25 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v18, memory_order_acquire) != -1)
      {
        v23[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v25;
        v23[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v24;
        unint64_t v26 = v23;
        std::__call_once(v18, &v26, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    int v19 = *((unsigned __int8 *)this + 56);
    char is_packed = google::protobuf::FieldDescriptor::is_packed(this);
    return google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(v16, v17, v19, is_packed, this);
  }
  else
  {
    int v22 = sub_100100518(this);
    uint64_t result = (uint64_t *)(a2 + sub_100120AD0(a1 + 8, (uint64_t)this));
    if (v22) {
      return (uint64_t *)google::protobuf::internal::MapFieldBase::MutableRepeatedField((google::protobuf::internal::MapFieldBase *)result);
    }
  }
  return result;
}

void sub_10011F6B8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::Reflection::GetRawRepeatedField(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *this, int a4, int a5, uint64_t a6)
{
  if (*((_DWORD *)this + 15) != 3) {
    sub_1001199A8(*(void *)a1, (uint64_t)this, "\"GetRawRepeatedField\"", "Field is singular; the method requires a repeated field.");
  }
  unsigned int v12 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v12)
  {
    int v25 = this;
    unint64_t v26 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
    {
      v24[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v26;
      v24[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v25;
      uint64_t v27 = v24;
      std::__call_once(v12, &v27, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 14)] != a4) {
    sub_10011A044(*(void *)a1, (uint64_t)this, "GetRawRepeatedField", a4);
  }
  if ((a5 & 0x80000000) == 0 && *(_DWORD *)(*((void *)this + 15) + 72) != a5)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 1813);
    uint64_t v13 = google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (field->options().ctype()) == (ctype): ");
    uint64_t v14 = google::protobuf::internal::LogMessage::operator<<(v13, "subtype mismatch");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v14->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  if (a6 && google::protobuf::FieldDescriptor::message_type(this) != a6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v24, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 1815);
    int v15 = google::protobuf::internal::LogMessage::operator<<(v24, "CHECK failed: (field->message_type()) == (desc): ");
    uint64_t v16 = google::protobuf::internal::LogMessage::operator<<(v15, "wrong submessage type");
    google::protobuf::internal::LogFinisher::operator=((int)&v27, (const char **)&v16->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v24[0].__r_.__value_.__l.__data_);
  }
  if (*((unsigned char *)this + 67))
  {
    int v17 = (google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40));
    int v18 = *((_DWORD *)this + 17);
    int v19 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v19)
    {
      int v25 = this;
      unint64_t v26 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
      {
        v24[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v26;
        v24[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v25;
        uint64_t v27 = v24;
        std::__call_once(v19, &v27, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    int v20 = *((unsigned __int8 *)this + 56);
    char is_packed = google::protobuf::FieldDescriptor::is_packed(this);
    return google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(v17, v18, v20, is_packed, this);
  }
  else
  {
    int v23 = sub_100100518(this);
    uint64_t result = (uint64_t *)(a2 + sub_100120AD0(a1 + 8, (uint64_t)this));
    if (v23) {
      return (uint64_t *)google::protobuf::internal::MapFieldBase::GetRepeatedField((google::protobuf::internal::MapFieldBase *)result);
    }
  }
  return result;
}

void sub_10011F92C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Reflection::GetOneofFieldDescriptor(google::protobuf::Reflection *a1, const google::protobuf::Message *a2, uint64_t a3)
{
  if (*(_DWORD *)(a3 + 24) == 1 && (uint64_t v3 = **(void **)(a3 + 32), *(unsigned char *)(v3 + 65)))
  {
    if (google::protobuf::Reflection::HasField(a1, a2, **(const google::protobuf::FieldDescriptor ***)(a3 + 32)))return v3; {
    else
    }
      return 0;
  }
  else
  {
    int v5 = *(_DWORD *)((char *)a2
                   + *((_DWORD *)a1 + 11)
                   - 1431655764 * ((unint64_t)(a3 - *(void *)(*(void *)(a3 + 16) + 48)) >> 4));
    if (v5)
    {
      uint64_t v6 = *(google::protobuf::Descriptor **)a1;
      return google::protobuf::Descriptor::FindFieldByNumber(v6, v5);
    }
    else
    {
      return 0;
    }
  }
}

uint64_t google::protobuf::Reflection::LookupMapValue(uint64_t *a1, uint64_t a2, google::protobuf::FieldDescriptor *this, uint64_t a4, uint64_t a5)
{
  if ((sub_100100518(this) & 1) == 0) {
    sub_1001199A8(*a1, (uint64_t)this, "\"LookupMapValue\"", "Field is not a map field.");
  }
  uint64_t v10 = google::protobuf::FieldDescriptor::message_type(this);
  sub_1000BBA84(__p, "value");
  uint64_t FieldByName = google::protobuf::Descriptor::FindFieldByName(v10, (uint64_t *)__p, v11);
  uint64_t v13 = *(std::once_flag::_State_type **)(FieldByName + 48);
  if (v13)
  {
    uint64_t v18 = FieldByName;
    int v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
    {
      v21[0] = &v19;
      v21[1] = &v18;
      int v20 = v21;
      std::__call_once(v13, &v20, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  *(_DWORD *)(a5 + 8) = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByName + 56)];
  if (v17 < 0) {
    operator delete(__p[0]);
  }
  unsigned int v14 = sub_1001209E8((uint64_t)(a1 + 1), this);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 + v14) + 32))(a2 + v14, a4, a5);
}

void sub_10011FB30(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::Reflection::MapBegin@<X0>(google::protobuf::Reflection *this@<X0>, google::protobuf::Message *a2@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, uint64_t a4@<X8>)
{
  if ((sub_100100518(a3) & 1) == 0) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "\"MapBegin\"", "Field is not a map field.");
  }
  sub_10012073C(a4, a2, a3);
  unsigned int v8 = sub_1001209E8((uint64_t)this + 8, a3);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)((char *)a2 + v8) + 56))((char *)a2 + v8, a4);
}

void sub_10011FBF0(_Unwind_Exception *a1)
{
  sub_100120978(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Reflection::MapEnd@<X0>(google::protobuf::Reflection *this@<X0>, google::protobuf::Message *a2@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, uint64_t a4@<X8>)
{
  if ((sub_100100518(a3) & 1) == 0) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "\"MapEnd\"", "Field is not a map field.");
  }
  sub_10012073C(a4, a2, a3);
  unsigned int v8 = sub_1001209E8((uint64_t)this + 8, a3);
  return (*(uint64_t (**)(char *, uint64_t))(*(void *)((char *)a2 + v8) + 64))((char *)a2 + v8, a4);
}

void sub_10011FCA8(_Unwind_Exception *a1)
{
  sub_100120978(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Reflection::FindKnownExtensionByNumber(std::mutex ***this, uint64_t a2)
{
  if (*((_DWORD *)this + 10) == -1) {
    return 0;
  }
  else {
    return google::protobuf::DescriptorPool::FindExtensionByNumber(this[7], (const google::protobuf::Descriptor *)*this, a2);
  }
}

BOOL google::protobuf::Reflection::SupportsUnknownEnumValues(google::protobuf::Reflection *this)
{
  return *(_DWORD *)(*(void *)(*(void *)this + 16) + 60) == 3;
}

_DWORD *google::protobuf::Reflection::HasOneof(google::protobuf::Reflection *a1, const google::protobuf::Message *a2, uint64_t a3)
{
  if (*(_DWORD *)(a3 + 24) == 1 && *(unsigned char *)(**(void **)(a3 + 32) + 65)) {
    return google::protobuf::Reflection::HasField(a1, a2, **(const google::protobuf::FieldDescriptor ***)(a3 + 32));
  }
  else {
    return (_DWORD *)(*(_DWORD *)((char *)a2
  }
                                + *((_DWORD *)a1 + 11)
                                - 1431655764
                                * ((unint64_t)(a3 - *(void *)(*(void *)(a3 + 16) + 48)) >> 4)) != 0);
}

uint64_t *google::protobuf::Reflection::GetRepeatedFieldInternal<int>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 1, a5, 0);
}

uint64_t *google::protobuf::Reflection::MutableRepeatedFieldInternal<int>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 1, a5, 0);
}

uint64_t *google::protobuf::Reflection::GetRepeatedFieldInternal<long long>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 2, a5, 0);
}

uint64_t *google::protobuf::Reflection::MutableRepeatedFieldInternal<long long>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 2, a5, 0);
}

uint64_t *google::protobuf::Reflection::GetRepeatedFieldInternal<unsigned int>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 3, a5, 0);
}

uint64_t *google::protobuf::Reflection::MutableRepeatedFieldInternal<unsigned int>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 3, a5, 0);
}

uint64_t *google::protobuf::Reflection::GetRepeatedFieldInternal<unsigned long long>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 4, a5, 0);
}

uint64_t *google::protobuf::Reflection::MutableRepeatedFieldInternal<unsigned long long>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 4, a5, 0);
}

uint64_t *google::protobuf::Reflection::GetRepeatedFieldInternal<float>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 6, a5, 0);
}

uint64_t *google::protobuf::Reflection::MutableRepeatedFieldInternal<float>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 6, a5, 0);
}

uint64_t *google::protobuf::Reflection::GetRepeatedFieldInternal<double>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 5, a5, 0);
}

uint64_t *google::protobuf::Reflection::MutableRepeatedFieldInternal<double>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 5, a5, 0);
}

uint64_t *google::protobuf::Reflection::GetRepeatedFieldInternal<BOOL>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 7, a5, 0);
}

uint64_t *google::protobuf::Reflection::MutableRepeatedFieldInternal<BOOL>(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *a3, uint64_t a4, uint64_t a5)
{
  return google::protobuf::Reflection::MutableRawRepeatedField(a1, a2, a3, 7, a5, 0);
}

uint64_t google::protobuf::Reflection::GetMessageFactory(google::protobuf::Reflection *this)
{
  return *((void *)this + 8);
}

uint64_t *google::protobuf::Reflection::RepeatedFieldData(uint64_t a1, uint64_t a2, google::protobuf::FieldDescriptor *this, int a4, uint64_t a5)
{
  if (*((_DWORD *)this + 15) != 3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 2281);
    uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: field->is_repeated(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v29, (const char **)&v10->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v26[0].__r_.__value_.__l.__data_);
  }
  int v11 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v11)
  {
    uint64_t v27 = this;
    uint64_t v28 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      v26[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v28;
      v26[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v27;
      uint64_t v29 = v26;
      std::__call_once(v11, &v29, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  unsigned int v12 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 14)];
  if (v12 == a4) {
    goto LABEL_13;
  }
  uint64_t v13 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v13)
  {
    uint64_t v27 = this;
    uint64_t v28 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
    {
      v26[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v28;
      v26[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v27;
      uint64_t v29 = v26;
      std::__call_once(v13, &v29, (void (__cdecl *)(void *))sub_1000BB820);
    }
    unsigned int v12 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 14)];
  }
  if (a4 == 1 && v12 == 8)
  {
LABEL_13:
    if (!a5) {
      goto LABEL_16;
    }
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 2284);
    uint64_t v21 = google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: field->cpp_type() == cpp_type || (field->cpp_type() == FieldDescriptor::CPPTYPE_ENUM && cpp_type == FieldDescriptor::CPPTYPE_INT32): ");
    int v22 = google::protobuf::internal::LogMessage::operator<<(v21, "The type parameter T in RepeatedFieldRef<T> API doesn't match ");
    int v23 = google::protobuf::internal::LogMessage::operator<<(v22, "the actual field type (for enums T should be the generated enum ");
    uint64_t v24 = google::protobuf::internal::LogMessage::operator<<(v23, "type or int32).");
    google::protobuf::internal::LogFinisher::operator=((int)&v25, (const char **)&v24->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v26[0].__r_.__value_.__l.__data_);
    if (!a5) {
      goto LABEL_16;
    }
  }
  if (google::protobuf::FieldDescriptor::message_type(this) != a5)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v26, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 2289);
    unsigned int v14 = google::protobuf::internal::LogMessage::operator<<(v26, "CHECK failed: (message_type) == (field->message_type()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v29, (const char **)&v14->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v26[0].__r_.__value_.__l.__data_);
  }
LABEL_16:
  if (!*((unsigned char *)this + 67)) {
    return (uint64_t *)(a2 + sub_100120AD0(a1 + 8, (uint64_t)this));
  }
  int v15 = (google::protobuf::internal::ExtensionSet *)(a2 + *(unsigned int *)(a1 + 40));
  int v16 = *((_DWORD *)this + 17);
  char v17 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v17)
  {
    uint64_t v27 = this;
    uint64_t v28 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
    {
      v26[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v28;
      v26[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v27;
      uint64_t v29 = v26;
      std::__call_once(v17, &v29, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  int v18 = *((unsigned __int8 *)this + 56);
  char is_packed = google::protobuf::FieldDescriptor::is_packed(this);
  return google::protobuf::internal::ExtensionSet::MutableRawRepeatedField(v15, v16, v18, is_packed, this);
}

void sub_1001200B4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Reflection::MutableMapData(google::protobuf::Reflection *this, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  if ((sub_100100518(a3) & 1) == 0) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "\"GetMapData\"", "Field is not a map field.");
  }
  return (uint64_t)a2 + sub_1001209E8((uint64_t)this + 8, a3);
}

uint64_t google::protobuf::Reflection::GetMapData(google::protobuf::Reflection *this, const google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  if ((sub_100100518(a3) & 1) == 0) {
    sub_1001199A8(*(void *)this, (uint64_t)a3, "\"GetMapData\"", "Field is not a map field.");
  }
  return (uint64_t)a2 + sub_1001209E8((uint64_t)this + 8, a3);
}

void google::protobuf::internal::AssignDescriptors(uint64_t a1, char a2)
{
  uint64_t v4 = a1;
  char v3 = a2;
  if ((a2 & 1) == 0) {
    char v3 = *(unsigned char *)(a1 + 1);
  }
  int v2 = *(std::once_flag::_State_type **)(a1 + 32);
  if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
  {
    v6[0] = sub_100120228;
    v6[1] = &v4;
    std::string v6[2] = &v3;
    int v5 = v6;
    std::__call_once(v2, &v5, (void (__cdecl *)(void *))sub_100121D88);
  }
}

void sub_100120228(std::string::size_type a1, int a2)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBC78, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001EBC78))
  {
    __cxa_atexit((void (*)(void *))std::mutex::~mutex, &stru_1001EAC68, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1001EBC78);
  }
  std::mutex::lock(&stru_1001EAC68);
  google::protobuf::internal::AddDescriptors(a1);
  std::mutex::unlock(&stru_1001EAC68);
  if (a2)
  {
    uint64_t v5 = *(unsigned int *)(a1 + 60);
    if ((int)v5 >= 1)
    {
      uint64_t v6 = 0;
      uint64_t v7 = 8 * v5;
      do
      {
        uint64_t v4 = *(google::protobuf::DescriptorPool **)(*(void *)(a1 + 48) + v6);
        if (v4) {
          uint64_t v4 = (google::protobuf::DescriptorPool *)google::protobuf::internal::AssignDescriptors(v4, 1);
        }
        v6 += 8;
      }
      while (v7 != v6);
    }
  }
  uint64_t v8 = google::protobuf::DescriptorPool::internal_generated_pool(v4);
  sub_1000BBA84(&__p, *(char **)(a1 + 16));
  FileByName = (google::protobuf::MessageFactory *)google::protobuf::DescriptorPool::FindFileByName(v8, (uint64_t *)&__p, v9);
  int v11 = FileByName;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if (v11) {
      goto LABEL_13;
    }
  }
  else if (FileByName)
  {
    goto LABEL_13;
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)&__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_reflection.cc", 2452);
  unsigned int v12 = google::protobuf::internal::LogMessage::operator<<(&__p, "CHECK failed: file != nullptr: ");
  google::protobuf::internal::LogFinisher::operator=((int)&v39, (const char **)&v12->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&__p.__r_.__value_.__l.__data_);
LABEL_13:
  uint64_t v13 = google::protobuf::MessageFactory::generated_factory(FileByName);
  std::string::size_type v14 = *(void *)(a1 + 104);
  uint64_t v16 = *(void *)(a1 + 80);
  std::string::size_type v15 = *(void *)(a1 + 88);
  __p.__r_.__value_.__r.__words[0] = v13;
  __p.__r_.__value_.__l.__size_ = v15;
  __p.__r_.__value_.__r.__words[2] = v14;
  long long v41 = *(_OWORD *)(a1 + 64);
  uint64_t v42 = v16;
  if (*((int *)v11 + 11) >= 1) {
    sub_100120B9C((uint64_t)&__p, *((void *)v11 + 13));
  }
  uint64_t v17 = *((unsigned int *)v11 + 12);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = 0;
    int v19 = (void *)__p.__r_.__value_.__r.__words[2];
    uint64_t v20 = 80 * v17;
    do
    {
      void *v19 = *((void *)v11 + 14) + v18;
      int v19 = (void *)(__p.__r_.__value_.__r.__words[2] + 8);
      __p.__r_.__value_.__r.__words[2] += 8;
      v18 += 80;
    }
    while (v20 != v18);
  }
  if (*(unsigned char *)(*((void *)v11 + 17) + 155))
  {
    uint64_t v21 = *((unsigned int *)v11 + 13);
    if ((int)v21 >= 1)
    {
      for (uint64_t i = 0; i != v21; ++i)
        *(void *)(*(void *)(a1 + 112) + 8 * i) = *((void *)v11 + 15) + 48 * i;
    }
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBC88, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001EBC88))
  {
    operator new();
  }
  uint64_t v23 = qword_1001EBC80;
  uint64_t v24 = *(void *)(a1 + 88);
  std::string::size_type size = __p.__r_.__value_.__l.__size_;
  std::mutex::lock((std::mutex *)qword_1001EBC80);
  unint64_t v26 = *(void **)(v23 + 72);
  unint64_t v27 = *(void *)(v23 + 80);
  if ((unint64_t)v26 >= v27)
  {
    uint64_t v29 = *(void *)(v23 + 64);
    uint64_t v30 = ((uint64_t)v26 - v29) >> 4;
    unint64_t v31 = v30 + 1;
    if ((unint64_t)(v30 + 1) >> 60) {
      sub_100078F84();
    }
    uint64_t v32 = v27 - v29;
    if (v32 >> 3 > v31) {
      unint64_t v31 = v32 >> 3;
    }
    if ((unint64_t)v32 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v33 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v33 = v31;
    }
    if (v33) {
      uint64_t v34 = (char *)sub_10007902C(v23 + 80, v33);
    }
    else {
      uint64_t v34 = 0;
    }
    uint64_t v35 = &v34[16 * v30];
    uint64_t v36 = &v34[16 * v33];
    *(void *)uint64_t v35 = v24;
    *((void *)v35 + sub_1000333D0((uint64_t *)this + 1) = size;
    uint64_t v28 = v35 + 16;
    uint64_t v38 = *(char **)(v23 + 64);
    uint64_t v37 = *(char **)(v23 + 72);
    if (v37 != v38)
    {
      do
      {
        *((_OWORD *)v35 - sub_1000333D0((uint64_t *)this + 1) = *((_OWORD *)v37 - 1);
        v35 -= 16;
        v37 -= 16;
      }
      while (v37 != v38);
      uint64_t v37 = *(char **)(v23 + 64);
    }
    *(void *)(v23 + 64) = v35;
    *(void *)(v23 + 7sub_1000FACE4((void *)this + 2) = v28;
    *(void *)(v23 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = v36;
    if (v37) {
      operator delete(v37);
    }
  }
  else
  {
    *unint64_t v26 = v24;
    v26[1] = size;
    uint64_t v28 = v26 + 2;
  }
  *(void *)(v23 + 7sub_1000FACE4((void *)this + 2) = v28;
  std::mutex::unlock((std::mutex *)v23);
}

void sub_1001205D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
}

void google::protobuf::internal::AddDescriptors(std::string::size_type a1)
{
  if (!*(unsigned char *)a1)
  {
    *(unsigned char *)a1 = 1;
    if (*(int *)(a1 + 56) >= 1)
    {
      uint64_t v2 = 0;
      do
      {
        char v3 = *(atomic_uint **)(*(void *)(a1 + 40) + 8 * v2);
        if (atomic_load_explicit(v3, memory_order_acquire)) {
          google::protobuf::internal::InitSCCImpl(v3);
        }
        ++v2;
      }
      while (v2 < *(int *)(a1 + 56));
    }
    uint64_t v4 = *(unsigned int *)(a1 + 60);
    if ((int)v4 >= 1)
    {
      uint64_t v5 = 0;
      uint64_t v6 = 8 * v4;
      do
      {
        if (*(void *)(*(void *)(a1 + 48) + v5)) {
          google::protobuf::internal::AddDescriptors();
        }
        v5 += 8;
      }
      while (v6 != v5);
    }
    google::protobuf::DescriptorPool::InternalAddGeneratedFile(*(google::protobuf::DescriptorPool **)(a1 + 8), (const void *)*(unsigned int *)(a1 + 24));
    google::protobuf::MessageFactory::InternalRegisterGeneratedFile(a1);
  }
}

void google::protobuf::internal::RegisterFileLevelMetadata(uint64_t a1)
{
  google::protobuf::internal::AssignDescriptors(a1, 0);
  uint64_t v3 = *(unsigned int *)(a1 + 96);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = *(void *)(a1 + 88) + 8;
    do
    {
      google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(*(const std::string::value_type ***)(v4 - 8), *(const google::protobuf::Descriptor **)(*(void *)v4 + 8), v2);
      v4 += 16;
      --v3;
    }
    while (v3);
  }
}

uint64_t sub_10012073C(uint64_t a1, google::protobuf::Message *a2, const google::protobuf::FieldDescriptor *a3)
{
  uint64_t v6 = a1 + 16;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = 0;
  (*(void (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  *(void *)(a1 + 8) = google::protobuf::Reflection::MutableMapData(v7, a2, a3);
  uint64_t v8 = google::protobuf::FieldDescriptor::message_type(a3);
  sub_1000BBA84(__p, "key");
  uint64_t FieldByName = google::protobuf::Descriptor::FindFieldByName(v8, (uint64_t *)__p, v9);
  int v11 = *(std::once_flag::_State_type **)(FieldByName + 48);
  if (v11)
  {
    uint64_t v19 = FieldByName;
    uint64_t v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      int v22 = &v20;
      uint64_t v23 = &v19;
      uint64_t v21 = &v22;
      std::__call_once(v11, &v21, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  sub_1001120AC(v6, google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByName + 56)]);
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  uint64_t v12 = google::protobuf::FieldDescriptor::message_type(a3);
  sub_1000BBA84(__p, "value");
  uint64_t v14 = google::protobuf::Descriptor::FindFieldByName(v12, (uint64_t *)__p, v13);
  std::string::size_type v15 = *(std::once_flag::_State_type **)(v14 + 48);
  if (v15)
  {
    uint64_t v19 = v14;
    uint64_t v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
    {
      int v22 = &v20;
      uint64_t v23 = &v19;
      uint64_t v21 = &v22;
      std::__call_once(v15, &v21, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  *(_DWORD *)(a1 + 5sub_1000FA614((void *)this + 6) = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v14 + 56)];
  if (v18 < 0) {
    operator delete(__p[0]);
  }
  (*(void (**)(void, uint64_t))(**(void **)(a1 + 8) + 128))(*(void *)(a1 + 8), a1);
  return a1;
}

void sub_10012092C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (*(_DWORD *)(v15 + 40) == 9 && *(char *)(v15 + 39) < 0) {
    operator delete(*v14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100120978(uint64_t a1)
{
  if (*(_DWORD *)(a1 + 40) == 9 && *(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

uint64_t sub_1001209E8(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[11];
  if (!v2 || *(_DWORD *)(v2 + 24) == 1 && *(unsigned char *)(**(void **)(v2 + 32) + 65))
  {
    return sub_100120AD0(a1, (uint64_t)a2);
  }
  else
  {
    int v4 = *(_DWORD *)(*(void *)(a1 + 8)
                   + 4
                   * (int)(*(_DWORD *)(a2[10] + 104)
                         - 1431655765 * ((unint64_t)(v2 - *(void *)(*(void *)(v2 + 16) + 48)) >> 4)));
    uint64_t v5 = (std::once_flag::_State_type *)a2[6];
    if (v5)
    {
      uint64_t v6 = a2;
      uint64_t v7 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v5, memory_order_acquire) != -1)
      {
        v9[0] = &v7;
        v9[1] = &v6;
        uint64_t v8 = v9;
        std::__call_once(v5, &v8, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    return v4 & 0x7FFFFFFF;
  }
}

uint64_t sub_100120AD0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 67))
  {
    uint64_t v2 = *(void *)(a2 + 96);
    if (v2) {
      uint64_t v3 = (void *)(v2 + 80);
    }
    else {
      uint64_t v3 = (void *)(*(void *)(a2 + 40) + 128);
    }
  }
  else
  {
    uint64_t v3 = (void *)(*(void *)(a2 + 80) + 40);
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) + 4 * (int)(678152731 * ((unint64_t)(a2 - *v3) >> 3)));
  uint64_t v5 = *(std::once_flag::_State_type **)(a2 + 48);
  if (v5)
  {
    uint64_t v7 = a2;
    uint64_t v8 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v5, memory_order_acquire) != -1)
    {
      v10[0] = &v8;
      v10[1] = &v7;
      int v9 = v10;
      std::__call_once(v5, &v9, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  return v4 & 0x7FFFFFFF;
}

void sub_100120B9C(uint64_t a1, uint64_t a2)
{
  if (*(int *)(a2 + 116) >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    do
    {
      sub_100120B9C(a1, *(void *)(a2 + 56) + v4);
      ++v5;
      v4 += 144;
    }
    while (v5 < *(int *)(a2 + 116));
  }
  **(void **)(a1 + 8) = a2;
  operator new();
}

void sub_100120D68()
{
}

std::mutex *sub_100120D8C(std::mutex *this)
{
  if (this)
  {
    uint64_t v1 = this;
    sig = (unint64_t *)this[1].__m_.__sig;
    uint64_t v3 = *(unint64_t **)this[1].__m_.__opaque;
    if (sig != v3)
    {
      do
      {
        for (unint64_t i = *sig; i < sig[1]; i += 16)
        {
          if (*(void *)(i + 8)) {
            operator delete();
          }
        }
        sig += 2;
      }
      while (sig != v3);
      sig = (unint64_t *)this[1].__m_.__sig;
    }
    if (sig)
    {
      *(void *)this[1].__m_.__opaque = sig;
      operator delete(sig);
    }
    std::mutex::~mutex(v1);
    operator delete();
  }
  return this;
}

uint64_t sub_100120E48(uint64_t *a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 67))
  {
    uint64_t v2 = *(void *)(a2 + 96);
    if (v2) {
      uint64_t v3 = (void *)(v2 + 80);
    }
    else {
      uint64_t v3 = (void *)(*(void *)(a2 + 40) + 128);
    }
  }
  else
  {
    uint64_t v3 = (void *)(*(void *)(a2 + 80) + 40);
  }
  uint64_t v4 = *a1;
  int v5 = *(_DWORD *)(a1[1] + 4 * (int)(678152731 * ((unint64_t)(a2 - *v3) >> 3)));
  uint64_t v6 = *(std::once_flag::_State_type **)(a2 + 48);
  if (v6)
  {
    uint64_t v8 = a2;
    int v9 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v6, memory_order_acquire) != -1)
    {
      v11[0] = &v9;
      v11[1] = &v8;
      uint64_t v10 = v11;
      std::__call_once(v6, &v10, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  return v4 + (v5 & 0x7FFFFFFF);
}

void sub_100120F18(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  v17.__r_.__value_.__r.__words[2] = 0;
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v4;
  unsigned int v5 = *(_DWORD *)(a1 + 8);
  if (v5)
  {
    uint64_t v6 = (std::string **)(*(void *)(a1 + 16) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v17, v5);
    sub_10012104C(&v17, (std::string **)v7, v6, v5, *(_DWORD *)v17.__r_.__value_.__r.__words[2] - LODWORD(v17.__r_.__value_.__r.__words[1]));
    signed int v8 = LODWORD(v17.__r_.__value_.__r.__words[1]) + v5;
    LODWORD(v17.__r_.__value_.__r.__words[1]) = v8;
    if (*(_DWORD *)v17.__r_.__value_.__r.__words[2] < v8) {
      *(_DWORD *)v17.__r_.__value_.__r.__words[2] = v8;
    }
  }
  sub_1000F9B0C(a1);
  uint64_t v10 = a2 + 1;
  unsigned int v9 = *((_DWORD *)a2 + 2);
  if (v9)
  {
    int v11 = (std::string **)(a2[2] + 8);
    uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)a1, v9);
    sub_10012104C((std::string *)a1, (std::string **)v12, v11, v9, **(_DWORD **)(a1 + 16) - *(_DWORD *)(a1 + 8));
    signed int v13 = *(_DWORD *)(a1 + 8) + v9;
    *(_DWORD *)(a1 + 8) = v13;
    uint64_t v14 = *(signed int **)(a1 + 16);
    if (*v14 < v13) {
      signed int *v14 = v13;
    }
  }
  std::string::size_type v15 = *v10;
  std::string::size_type v16 = v10[1];
  *(_OWORD *)uint64_t v10 = *(_OWORD *)&v17.__r_.__value_.__r.__words[1];
  v17.__r_.__value_.__l.__size_ = v15;
  v17.__r_.__value_.__r.__words[2] = v16;
  sub_1000F9C98(&v17);
}

std::string *sub_10012104C(std::string *result, std::string **a2, std::string **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = (google::protobuf::Arena **)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    int v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      signed int v13 = v14;
      std::string::size_type v15 = *v12++;
      uint64_t result = google::protobuf::internal::GenericTypeHandler<std::string>::Merge(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    char v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      int v22 = (std::string *)sub_1000BBB38(v18);
      uint64_t result = google::protobuf::internal::GenericTypeHandler<std::string>::Merge(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void sub_1001210FC(google::protobuf::internal::RepeatedPtrFieldBase *this, void *a2)
{
  uint64_t v4 = *a2;
  long long v21 = 0uLL;
  uint64_t v20 = v4;
  unsigned int v5 = *((_DWORD *)this + 2);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(*((void *)this + 2) + 8);
    uint64_t v7 = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v20, v5);
    sub_100121270((uint64_t)&v20, v7, v6, v5, **((_DWORD **)&v21 + 1) - v21);
    int v8 = v21 + v5;
    LODWORD(v2sub_1000333D0((uint64_t *)this + 1) = v8;
    if (**((_DWORD **)&v21 + 1) < v8) {
      **((_DWORD **)&v21 + sub_1000333D0((uint64_t *)this + 1) = v8;
    }
    uint64_t v9 = *((unsigned int *)this + 2);
    if ((int)v9 >= 1)
    {
      uint64_t v10 = (uint64_t *)(*((void *)this + 2) + 8);
      do
      {
        uint64_t v11 = *v10++;
        (*(void (**)(uint64_t))(*(void *)v11 + 40))(v11);
        --v9;
      }
      while (v9);
      *((_DWORD *)this + sub_1000FACE4((void *)this + 2) = 0;
    }
  }
  signed int v13 = a2 + 1;
  unsigned int v12 = *((_DWORD *)a2 + 2);
  if (v12)
  {
    uint64_t v14 = (uint64_t *)(a2[2] + 8);
    std::string::size_type v15 = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v12);
    sub_100121270((uint64_t)this, v15, v14, v12, **((_DWORD **)this + 2) - *((_DWORD *)this + 2));
    signed int v16 = *((_DWORD *)this + 2) + v12;
    *((_DWORD *)this + sub_1000FACE4((void *)this + 2) = v16;
    int v17 = (signed int *)*((void *)this + 2);
    if (*v17 < v16) {
      signed int *v17 = v16;
    }
  }
  uint64_t v18 = *v13;
  uint64_t v19 = v13[1];
  *(_OWORD *)signed int v13 = v21;
  *(void *)&long long v21 = v18;
  *((void *)&v21 + sub_1000333D0((uint64_t *)this + 1) = v19;
  sub_100101C14(&v20);
}

uint64_t sub_100121270(uint64_t a1, uint64_t *a2, uint64_t *a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v9 = a4;
  }
  else {
    uint64_t v9 = a5;
  }
  if ((int)v9 >= 1)
  {
    uint64_t v10 = a3;
    uint64_t v11 = a2;
    do
    {
      uint64_t v13 = *v10++;
      uint64_t v12 = v13;
      uint64_t v14 = *v11++;
      uint64_t result = sub_1001145D4(v12, v14);
      --v9;
    }
    while (v9);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = &a3[a5];
    uint64_t v19 = &a2[a5];
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::NewFromPrototype(v20);
      uint64_t result = sub_1001145D4(v20, v21);
      *v19++ = v21;
      --v17;
    }
    while (v17);
  }
  return result;
}

uint64_t sub_100121324(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t v9 = (uint64_t *)result;
  while (2)
  {
    uint64_t v10 = v9;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v9 = v10;
          uint64_t v11 = (char *)a2 - (char *)v10;
          unint64_t v12 = a2 - v10;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0uLL:
              case 1uLL:
                return result;
              case 2uLL:
                uint64_t v40 = *(a2 - 1);
                uint64_t v41 = *v10;
                if (*(_DWORD *)(v40 + 68) < *(_DWORD *)(*v10 + 68))
                {
                  uint64_t *v10 = v40;
                  *(a2 - sub_1000333D0((uint64_t *)this + 1) = v41;
                }
                break;
              case 3uLL:
                uint64_t result = (uint64_t)sub_100121A5C(v10, v10 + 1, a2 - 1);
                break;
              case 4uLL:
                uint64_t result = (uint64_t)sub_100121CF0(v10, v10 + 1, v10 + 2, a2 - 1);
                break;
              case 5uLL:
                uint64_t v42 = v10 + 1;
                char v43 = v10 + 2;
                uint64_t v44 = v10 + 3;
                uint64_t result = (uint64_t)sub_100121CF0(v10, v10 + 1, v10 + 2, v10 + 3);
                uint64_t v45 = *(a2 - 1);
                uint64_t v46 = v10[3];
                if (*(_DWORD *)(v45 + 68) < *(_DWORD *)(v46 + 68))
                {
                  uint64_t *v44 = v45;
                  *(a2 - sub_1000333D0((uint64_t *)this + 1) = v46;
                  uint64_t v47 = *v44;
                  uint64_t v48 = *v43;
                  int v49 = *(_DWORD *)(*v44 + 68);
                  if (v49 < *(_DWORD *)(*v43 + 68))
                  {
                    *char v43 = v47;
                    uint64_t *v44 = v48;
                    uint64_t v50 = *v42;
                    if (v49 < *(_DWORD *)(*v42 + 68))
                    {
                      v10[1] = v47;
                      void v10[2] = v50;
                      uint64_t v51 = *v10;
                      if (v49 < *(_DWORD *)(*v10 + 68))
                      {
                        uint64_t *v10 = v47;
                        v10[1] = v51;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            uint64_t v52 = v10 + 1;
            BOOL v54 = v10 == a2 || v52 == a2;
            if (a4)
            {
              if (!v54)
              {
                uint64_t v55 = 0;
                unsigned int v56 = v10;
                do
                {
                  uint64_t v58 = *v56;
                  uint64_t v57 = v56[1];
                  unsigned int v56 = v52;
                  int v59 = *(_DWORD *)(v57 + 68);
                  if (v59 < *(_DWORD *)(v58 + 68))
                  {
                    uint64_t v60 = v55;
                    while (1)
                    {
                      *(uint64_t *)((char *)v10 + v60 + 8) = v58;
                      if (!v60) {
                        break;
                      }
                      uint64_t v58 = *(uint64_t *)((char *)v10 + v60 - 8);
                      v60 -= 8;
                      if (v59 >= *(_DWORD *)(v58 + 68))
                      {
                        uint64_t v61 = (uint64_t *)((char *)v10 + v60 + 8);
                        goto LABEL_85;
                      }
                    }
                    uint64_t v61 = v10;
LABEL_85:
                    uint64_t *v61 = v57;
                  }
                  uint64_t v52 = v56 + 1;
                  v55 += 8;
                }
                while (v56 + 1 != a2);
              }
            }
            else if (!v54)
            {
              do
              {
                uint64_t v92 = *v9;
                uint64_t v91 = v9[1];
                uint64_t v9 = v52;
                int v93 = *(_DWORD *)(v91 + 68);
                if (v93 < *(_DWORD *)(v92 + 68))
                {
                  do
                  {
                    *uint64_t v52 = v92;
                    uint64_t v92 = *(v52 - 2);
                    --v52;
                  }
                  while (v93 < *(_DWORD *)(v92 + 68));
                  *uint64_t v52 = v91;
                }
                uint64_t v52 = v9 + 1;
              }
              while (v9 + 1 != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v10 != a2)
            {
              int64_t v62 = (v12 - 2) >> 1;
              int64_t v63 = v62;
              do
              {
                int64_t v64 = v63;
                if (v62 >= v63)
                {
                  uint64_t v65 = (2 * v63) | 1;
                  uint64_t v66 = &v10[v65];
                  uint64_t v67 = *v66;
                  if (2 * v64 + 2 < (uint64_t)v12)
                  {
                    uint64_t result = *(unsigned int *)(v67 + 68);
                    if ((int)result < *(_DWORD *)(v66[1] + 68))
                    {
                      uint64_t v67 = v66[1];
                      ++v66;
                      uint64_t v65 = 2 * v64 + 2;
                    }
                  }
                  int v68 = &v10[v64];
                  uint64_t v69 = *v68;
                  int v70 = *(_DWORD *)(*v68 + 68);
                  if (*(_DWORD *)(v67 + 68) >= v70)
                  {
                    do
                    {
                      unint64_t v71 = v66;
                      *int v68 = v67;
                      if (v62 < v65) {
                        break;
                      }
                      uint64_t result = (2 * v65) | 1;
                      uint64_t v66 = &v10[result];
                      uint64_t v72 = 2 * v65 + 2;
                      uint64_t v67 = *v66;
                      if (v72 < (uint64_t)v12 && *(_DWORD *)(v67 + 68) < *(_DWORD *)(v66[1] + 68))
                      {
                        uint64_t v67 = v66[1];
                        ++v66;
                        uint64_t result = v72;
                      }
                      int v68 = v71;
                      uint64_t v65 = result;
                    }
                    while (*(_DWORD *)(v67 + 68) >= v70);
                    *unint64_t v71 = v69;
                  }
                }
                int64_t v63 = v64 - 1;
              }
              while (v64);
              uint64_t v73 = (unint64_t)v11 >> 3;
              do
              {
                uint64_t v74 = 0;
                uint64_t v75 = *v10;
                uint64_t v76 = v10;
                do
                {
                  uint64_t v77 = &v76[v74];
                  uint64_t v80 = v77[1];
                  uint64_t v78 = v77 + 1;
                  uint64_t v79 = v80;
                  uint64_t v81 = (2 * v74) | 1;
                  uint64_t v82 = 2 * v74 + 2;
                  if (v82 < v73)
                  {
                    uint64_t result = *(unsigned int *)(v79 + 68);
                    if ((int)result < *(_DWORD *)(v78[1] + 68))
                    {
                      uint64_t v79 = v78[1];
                      ++v78;
                      uint64_t v81 = v82;
                    }
                  }
                  uint64_t *v76 = v79;
                  uint64_t v76 = v78;
                  uint64_t v74 = v81;
                }
                while (v81 <= (uint64_t)((unint64_t)(v73 - 2) >> 1));
                if (v78 == --a2)
                {
                  *uint64_t v78 = v75;
                }
                else
                {
                  *uint64_t v78 = *a2;
                  *a2 = v75;
                  uint64_t v83 = (char *)v78 - (char *)v10 + 8;
                  if (v83 >= 9)
                  {
                    unint64_t v84 = (((unint64_t)v83 >> 3) - 2) >> 1;
                    uint64_t v85 = &v10[v84];
                    uint64_t v86 = *v85;
                    uint64_t v87 = *v78;
                    int v88 = *(_DWORD *)(*v78 + 68);
                    if (*(_DWORD *)(*v85 + 68) < v88)
                    {
                      do
                      {
                        long long v89 = v85;
                        *uint64_t v78 = v86;
                        if (!v84) {
                          break;
                        }
                        unint64_t v84 = (v84 - 1) >> 1;
                        uint64_t v85 = &v10[v84];
                        uint64_t v86 = *v85;
                        uint64_t v78 = v89;
                      }
                      while (*(_DWORD *)(*v85 + 68) < v88);
                      *long long v89 = v87;
                    }
                  }
                }
              }
              while (v73-- > 2);
            }
            return result;
          }
          unint64_t v13 = v12 >> 1;
          uint64_t v14 = &v10[v12 >> 1];
          if ((unint64_t)v11 >= 0x401)
          {
            sub_100121A5C(v9, &v9[v12 >> 1], a2 - 1);
            sub_100121A5C(v9 + 1, v14 - 1, a2 - 2);
            sub_100121A5C(v9 + 2, &v9[v13 + 1], a2 - 3);
            uint64_t result = (uint64_t)sub_100121A5C(v14 - 1, v14, &v9[v13 + 1]);
            uint64_t v15 = *v9;
            *uint64_t v9 = *v14;
            uint64_t *v14 = v15;
          }
          else
          {
            uint64_t result = (uint64_t)sub_100121A5C(&v9[v12 >> 1], v9, a2 - 1);
          }
          --a3;
          uint64_t v16 = *v9;
          if (a4) {
            break;
          }
          int v17 = *(_DWORD *)(v16 + 68);
          if (*(_DWORD *)(*(v9 - 1) + 68) < v17) {
            goto LABEL_13;
          }
          if (v17 >= *(_DWORD *)(*(a2 - 1) + 68))
          {
            uint64_t v32 = v9 + 1;
            do
            {
              uint64_t v10 = v32;
              if (v32 >= a2) {
                break;
              }
              ++v32;
            }
            while (v17 >= *(_DWORD *)(*v10 + 68));
          }
          else
          {
            uint64_t v10 = v9;
            do
            {
              uint64_t v31 = v10[1];
              ++v10;
            }
            while (v17 >= *(_DWORD *)(v31 + 68));
          }
          unint64_t v33 = a2;
          if (v10 < a2)
          {
            unint64_t v33 = a2;
            do
              uint64_t v34 = *--v33;
            while (v17 < *(_DWORD *)(v34 + 68));
          }
          if (v10 < v33)
          {
            uint64_t v35 = *v10;
            uint64_t v36 = *v33;
            do
            {
              uint64_t *v10 = v36;
              uint64_t *v33 = v35;
              do
              {
                uint64_t v37 = v10[1];
                ++v10;
                uint64_t v35 = v37;
              }
              while (v17 >= *(_DWORD *)(v37 + 68));
              do
              {
                uint64_t v38 = *--v33;
                uint64_t v36 = v38;
              }
              while (v17 < *(_DWORD *)(v38 + 68));
            }
            while (v10 < v33);
          }
          char v39 = v10 - 1;
          BOOL v4 = v10 - 1 >= v9;
          BOOL v5 = v10 - 1 == v9;
          if (v10 - 1 != v9) {
            *uint64_t v9 = *v39;
          }
          a4 = 0;
          uint64_t *v39 = v16;
        }
        int v17 = *(_DWORD *)(v16 + 68);
LABEL_13:
        uint64_t v18 = 0;
        do
          uint64_t v19 = v9[++v18];
        while (*(_DWORD *)(v19 + 68) < v17);
        uint64_t v20 = &v9[v18];
        uint64_t v21 = a2;
        if (v18 == 1)
        {
          uint64_t v21 = a2;
          do
          {
            if (v20 >= v21) {
              break;
            }
            uint64_t v23 = *--v21;
          }
          while (*(_DWORD *)(v23 + 68) >= v17);
        }
        else
        {
          do
            uint64_t v22 = *--v21;
          while (*(_DWORD *)(v22 + 68) >= v17);
        }
        if (v20 >= v21)
        {
          uint64_t v29 = v20 - 1;
        }
        else
        {
          uint64_t v24 = *v21;
          char v25 = &v9[v18];
          unint64_t v26 = v21;
          do
          {
            *char v25 = v24;
            *unint64_t v26 = v19;
            do
            {
              uint64_t v27 = v25[1];
              ++v25;
              uint64_t v19 = v27;
            }
            while (*(_DWORD *)(v27 + 68) < v17);
            do
            {
              uint64_t v28 = *--v26;
              uint64_t v24 = v28;
            }
            while (*(_DWORD *)(v28 + 68) >= v17);
          }
          while (v25 < v26);
          uint64_t v29 = v25 - 1;
        }
        if (v29 != v9) {
          *uint64_t v9 = *v29;
        }
        *uint64_t v29 = v16;
        if (v20 >= v21) {
          break;
        }
LABEL_34:
        uint64_t result = sub_100121324(v9, v29, a3, a4 & 1);
        a4 = 0;
        uint64_t v10 = v29 + 1;
      }
      BOOL v30 = sub_100121AE4(v9, v29);
      uint64_t v10 = v29 + 1;
      uint64_t result = sub_100121AE4(v29 + 1, a2);
      if (result) {
        break;
      }
      if (!v30) {
        goto LABEL_34;
      }
    }
    a2 = v29;
    if (!v30) {
      continue;
    }
    return result;
  }
}

uint64_t *sub_100121A5C(uint64_t *result, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *result;
  int v5 = *(_DWORD *)(*a2 + 68);
  int v6 = *(_DWORD *)(*result + 68);
  uint64_t v7 = *a3;
  int v8 = *(_DWORD *)(*a3 + 68);
  if (v5 >= v6)
  {
    if (v8 < v5)
    {
      *a2 = v7;
      *a3 = v3;
      uint64_t v9 = *result;
      if (*(_DWORD *)(*a2 + 68) < *(_DWORD *)(*result + 68))
      {
        *uint64_t result = *a2;
        *a2 = v9;
      }
    }
  }
  else
  {
    if (v8 >= v5)
    {
      *uint64_t result = v3;
      *a2 = v4;
      if (*(_DWORD *)(*a3 + 68) >= v6) {
        return result;
      }
      *a2 = *a3;
    }
    else
    {
      *uint64_t result = v7;
    }
    *a3 = v4;
  }
  return result;
}

BOOL sub_100121AE4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(a2 - 1);
      uint64_t v7 = *a1;
      if (*(_DWORD *)(v6 + 68) < *(_DWORD *)(*a1 + 68))
      {
        *a1 = v6;
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7;
      }
      return result;
    case 3:
      sub_100121A5C(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      sub_100121CF0(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      uint64_t v18 = a1 + 1;
      uint64_t v19 = a1 + 2;
      uint64_t v20 = a1 + 3;
      sub_100121CF0(a1, a1 + 1, a1 + 2, a1 + 3);
      uint64_t v21 = *(a2 - 1);
      uint64_t v22 = a1[3];
      if (*(_DWORD *)(v21 + 68) < *(_DWORD *)(v22 + 68))
      {
        *uint64_t v20 = v21;
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v22;
        uint64_t v23 = *v20;
        uint64_t v24 = *v19;
        int v25 = *(_DWORD *)(*v20 + 68);
        if (v25 < *(_DWORD *)(*v19 + 68))
        {
          uint64_t *v19 = v23;
          *uint64_t v20 = v24;
          uint64_t v26 = *v18;
          if (v25 < *(_DWORD *)(*v18 + 68))
          {
            a1[1] = v23;
            a1[2] = v26;
            uint64_t v27 = *a1;
            if (v25 < *(_DWORD *)(*a1 + 68))
            {
              *a1 = v23;
              a1[1] = v27;
            }
          }
        }
      }
      return 1;
    default:
      int v8 = a1 + 2;
      sub_100121A5C(a1, a1 + 1, a1 + 2);
      uint64_t v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    uint64_t v12 = *v9;
    uint64_t v13 = *v8;
    int v14 = *(_DWORD *)(*v9 + 68);
    if (v14 < *(_DWORD *)(*v8 + 68))
    {
      uint64_t v15 = v11;
      while (1)
      {
        *(uint64_t *)((char *)a1 + v1sub_1000FA614((void *)this + 5) = v13;
        uint64_t v16 = v15 - 8;
        if (v15 == 8) {
          break;
        }
        uint64_t v13 = *(uint64_t *)((char *)a1 + v15 - 16);
        v15 -= 8;
        if (v14 >= *(_DWORD *)(v13 + 68))
        {
          int v17 = (uint64_t *)((char *)a1 + v16);
          goto LABEL_13;
        }
      }
      int v17 = a1;
LABEL_13:
      uint64_t *v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    int v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

uint64_t *sub_100121CF0(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  BOOL result = sub_100121A5C(a1, a2, a3);
  uint64_t v9 = *a3;
  if (*(_DWORD *)(*a4 + 68) < *(_DWORD *)(*a3 + 68))
  {
    *a3 = *a4;
    *a4 = v9;
    uint64_t v10 = *a2;
    if (*(_DWORD *)(*a3 + 68) < *(_DWORD *)(*a2 + 68))
    {
      *a2 = *a3;
      *a3 = v10;
      uint64_t v11 = *a1;
      if (*(_DWORD *)(*a2 + 68) < *(_DWORD *)(*a1 + 68))
      {
        *a1 = *a2;
        *a2 = v11;
      }
    }
  }
  return result;
}

uint64_t sub_100121D88(uint64_t a1)
{
  return (**(uint64_t (***)(void, void))a1)(**(void **)(*(void *)a1 + 8), **(unsigned __int8 **)(*(void *)a1 + 16));
}

void sub_100121DA0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wrappers.pb.cc", a4);
  google::protobuf::_BoolValue_default_instance_ = (uint64_t)off_1001D1690;
  *(void *)algn_1001EDD58 = 0;
  dword_1001EDD64 = 0;
  byte_1001EDD60 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_BoolValue_default_instance_, v4);
}

void sub_100121E1C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wrappers.pb.cc", a4);
  google::protobuf::_BytesValue_default_instance_ = (uint64_t)off_1001D17F0;
  unk_1001EDD90 = 0;
  dword_1001EDDA0 = 0;
  if (atomic_load_explicit(scc_info_BytesValue_google_2fprotobuf_2fwrappers_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_BytesValue_google_2fprotobuf_2fwrappers_2eproto);
  }
  qword_1001EDD98 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_BytesValue_default_instance_, v4);
}

void sub_100121ECC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wrappers.pb.cc", a4);
  qword_1001EDCB0 = 0;
  unk_1001EDCB8 = 0;
  google::protobuf::_DoubleValue_default_instance_ = (uint64_t)off_1001D1270;
  dword_1001EDCC0 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_DoubleValue_default_instance_, v4);
}

void sub_100121F48(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wrappers.pb.cc", a4);
  qword_1001EDCD0 = 0;
  unk_1001EDCD8 = 0;
  google::protobuf::_FloatValue_default_instance_ = (uint64_t)off_1001D1320;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FloatValue_default_instance_, v4);
}

void sub_100121FC0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wrappers.pb.cc", a4);
  google::protobuf::_Int32Value_default_instance_ = (uint64_t)off_1001D1530;
  *(void *)algn_1001EDD28 = 0;
  qword_1001EDD30 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Int32Value_default_instance_, v4);
}

void sub_100122038(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wrappers.pb.cc", a4);
  qword_1001EDCE8 = 0;
  unk_1001EDCF0 = 0;
  google::protobuf::_Int64Value_default_instance_ = (uint64_t)off_1001D13D0;
  dword_1001EDCF8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Int64Value_default_instance_, v4);
}

void sub_1001220B4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wrappers.pb.cc", a4);
  google::protobuf::_StringValue_default_instance_ = (uint64_t)off_1001D1740;
  unk_1001EDD70 = 0;
  dword_1001EDD80 = 0;
  if (atomic_load_explicit(scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto);
  }
  qword_1001EDD78 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_StringValue_default_instance_, v4);
}

void sub_100122164(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wrappers.pb.cc", a4);
  google::protobuf::_UInt32Value_default_instance_ = (uint64_t)off_1001D15E0;
  unk_1001EDD40 = 0;
  qword_1001EDD48 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_UInt32Value_default_instance_, v4);
}

void sub_1001221DC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wrappers.pb.cc", a4);
  qword_1001EDD08 = 0;
  unk_1001EDD10 = 0;
  google::protobuf::_UInt64Value_default_instance_ = (uint64_t)off_1001D1480;
  dword_1001EDD18 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_UInt64Value_default_instance_, v4);
}

void google::protobuf::DoubleValue::~DoubleValue(google::protobuf::DoubleValue *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t google::protobuf::DoubleValue::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

unint64_t *google::protobuf::DoubleValue::Clear(google::protobuf::DoubleValue *this)
{
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (unint64_t *)((char *)this + 8);
  result[1] = 0;
  if (v2) {
    return (unint64_t *)sub_100035820(result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::DoubleValue::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v14 = a2;
  if ((sub_1000355B8(a3, &v14, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = (google::protobuf::internal *)((char *)v14 + 1);
      unsigned int v7 = *(unsigned __int8 *)v14;
      if ((*(char *)v14 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v14, (const char *)(v8 - 128));
      int v14 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v6 = TagFallback;
      unsigned int v7 = v12;
LABEL_7:
      if (v7 == 9)
      {
        *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = *(void *)v6;
        int v14 = (google::protobuf::internal *)((char *)v6 + 8);
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fempty_2eproto, 0) = v7 - 1;
          return v14;
        }
        if (*v5)
        {
          uint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
          uint64_t v6 = v14;
        }
        int v14 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
        if (!v14) {
          return 0;
        }
      }
      if (sub_1000355B8(a3, &v14, *(_DWORD *)(a3 + 92))) {
        return v14;
      }
    }
    uint64_t v6 = (google::protobuf::internal *)((char *)v14 + 2);
LABEL_6:
    int v14 = v6;
    goto LABEL_7;
  }
  return v14;
}

const google::protobuf::UnknownFieldSet *google::protobuf::DoubleValue::_InternalSerialize(google::protobuf::DoubleValue *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  double v6 = *((double *)this + 2);
  if (v6 != 0.0)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      double v6 = *((double *)this + 2);
    }
    *a2 = 9;
    *(double *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v6;
    a2 += 9;
  }
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::DoubleValue::ByteSizeLong(google::protobuf::DoubleValue *this)
{
  if (*((double *)this + 2) == 0.0) {
    uint64_t v1 = 0;
  }
  else {
    uint64_t v1 = 9;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::DoubleValue *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v1, (_DWORD *)this + 6);
  }
  *((_DWORD *)this + sub_1000FA614((void *)this + 6) = v1;
  return (char *)v1;
}

void google::protobuf::DoubleValue::MergeFrom(google::protobuf::DoubleValue *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    double v6 = v4;
    uint64_t v7 = *((void *)v4 + 1);
    if (v7) {
      sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8));
    }
    double v8 = v6[2];
    if (v8 != 0.0) {
      *((double *)this + sub_1000FACE4((void *)this + 2) = v8;
    }
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::DoubleValue::CopyFrom(google::protobuf::DoubleValue *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    int v5 = (unint64_t *)((char *)this + 8);
    v5[1] = 0;
    if (v6) {
      sub_100035820(v5);
    }
    google::protobuf::DoubleValue::MergeFrom(this, lpsrc);
  }
}

uint64_t google::protobuf::DoubleValue::IsInitialized(google::protobuf::DoubleValue *this)
{
  return 1;
}

uint64_t google::protobuf::DoubleValue::GetMetadata(google::protobuf::DoubleValue *this)
{
  return *off_1001EADD8;
}

void google::protobuf::FloatValue::~FloatValue(google::protobuf::FloatValue *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t google::protobuf::FloatValue::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::FloatValue::Clear(google::protobuf::FloatValue *this)
{
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_1000FACE4((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::FloatValue::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v14 = a2;
  if ((sub_1000355B8(a3, &v14, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v14 + 1);
      unsigned int v7 = *(unsigned __int8 *)v14;
      if ((*(char *)v14 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v14, (const char *)(v8 - 128));
      int v14 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v12;
LABEL_7:
      if (v7 == 13)
      {
        *(_DWORD *)(a1 + 1sub_1000FA614((void *)this + 6) = *(_DWORD *)v6;
        int v14 = (google::protobuf::internal *)((char *)v6 + 4);
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = v7 - 1;
          return v14;
        }
        if (*v5)
        {
          uint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
          char v6 = v14;
        }
        int v14 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
        if (!v14) {
          return 0;
        }
      }
      if (sub_1000355B8(a3, &v14, *(_DWORD *)(a3 + 92))) {
        return v14;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v14 + 2);
LABEL_6:
    int v14 = v6;
    goto LABEL_7;
  }
  return v14;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FloatValue::_InternalSerialize(google::protobuf::FloatValue *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  float v6 = *((float *)this + 4);
  if (v6 != 0.0)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      float v6 = *((float *)this + 4);
    }
    *a2 = 13;
    *(float *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v6;
    a2 += 5;
  }
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::FloatValue::ByteSizeLong(google::protobuf::FloatValue *this)
{
  if (*((float *)this + 4) == 0.0) {
    uint64_t v1 = 0;
  }
  else {
    uint64_t v1 = 5;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FloatValue *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v1, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v1;
  return (char *)v1;
}

void google::protobuf::FloatValue::MergeFrom(google::protobuf::FloatValue *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    float v6 = v4;
    uint64_t v7 = *((void *)v4 + 1);
    if (v7) {
      sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8));
    }
    float v8 = v6[4];
    if (v8 != 0.0) {
      *((float *)this + 4) = v8;
    }
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::FloatValue::CopyFrom(google::protobuf::FloatValue *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    int v5 = (char *)this + 8;
    *((_DWORD *)v5 + sub_1000FACE4((void *)this + 2) = 0;
    if (v6) {
      sub_100035820((unint64_t *)v5);
    }
    google::protobuf::FloatValue::MergeFrom(this, lpsrc);
  }
}

uint64_t google::protobuf::FloatValue::IsInitialized(google::protobuf::FloatValue *this)
{
  return 1;
}

uint64_t google::protobuf::FloatValue::GetMetadata(google::protobuf::FloatValue *this)
{
  return off_1001EADD8[2];
}

void google::protobuf::Int64Value::~Int64Value(google::protobuf::Int64Value *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t google::protobuf::Int64Value::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

unint64_t *google::protobuf::Int64Value::Clear(google::protobuf::Int64Value *this)
{
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (unint64_t *)((char *)this + 8);
  result[1] = 0;
  if (v2) {
    return (unint64_t *)sub_100035820(result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Int64Value::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v19 = a2;
  if ((sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v19 + 1);
      unsigned int v7 = *(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, (const char *)(v8 - 128));
      uint64_t v19 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v15;
LABEL_7:
      if (v7 == 8)
      {
        uint64_t v11 = (google::protobuf::internal *)((char *)v6 + 1);
        unint64_t v12 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v13 = *(char *)v11;
        unint64_t v12 = v12 + (v13 << 7) - 128;
        if ((v13 & 0x80000000) == 0)
        {
          uint64_t v11 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_19:
          uint64_t v19 = v11;
          *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = v12;
          goto LABEL_20;
        }
        uint64_t v16 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v6, v12);
        uint64_t v19 = v16;
        *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = v17;
        if (!v16) {
          return 0;
        }
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = v7 - 1;
          return v19;
        }
        if (*v5)
        {
          uint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
          char v6 = v19;
        }
        uint64_t v19 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
        if (!v19) {
          return 0;
        }
      }
LABEL_20:
      if (sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92))) {
        return v19;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_6:
    uint64_t v19 = v6;
    goto LABEL_7;
  }
  return v19;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Int64Value::_InternalSerialize(google::protobuf::Int64Value *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v6 = *((void *)this + 2);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unint64_t v6 = *((void *)this + 2);
    }
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unint64_t v8 = v7 >> 7;
          ++a2;
          unint64_t v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  uint64_t v10 = *((void *)this + 1);
  if ((v10 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::Int64Value::ByteSizeLong(google::protobuf::Int64Value *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)(v2 + 1);
  }
  else {
    uint64_t v3 = 0;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Int64Value *)((char *)this + 8), v3, (_DWORD *)this + 6);
  }
  *((_DWORD *)this + sub_1000FA614((void *)this + 6) = v3;
  return (char *)v3;
}

void google::protobuf::Int64Value::MergeFrom(google::protobuf::Int64Value *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    unint64_t v6 = v4;
    uint64_t v7 = v4[1];
    if (v7) {
      sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8));
    }
    uint64_t v8 = v6[2];
    if (v8) {
      *((void *)this + sub_1000FACE4((void *)this + 2) = v8;
    }
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::Int64Value::CopyFrom(google::protobuf::Int64Value *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    int v5 = (unint64_t *)((char *)this + 8);
    v5[1] = 0;
    if (v6) {
      sub_100035820(v5);
    }
    google::protobuf::Int64Value::MergeFrom(this, lpsrc);
  }
}

uint64_t google::protobuf::Int64Value::IsInitialized(google::protobuf::Int64Value *this)
{
  return 1;
}

uint64_t google::protobuf::Int64Value::GetMetadata(google::protobuf::Int64Value *this)
{
  return off_1001EADD8[4];
}

void google::protobuf::UInt64Value::~UInt64Value(google::protobuf::UInt64Value *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t google::protobuf::UInt64Value::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

unint64_t *google::protobuf::UInt64Value::Clear(google::protobuf::UInt64Value *this)
{
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (unint64_t *)((char *)this + 8);
  result[1] = 0;
  if (v2) {
    return (unint64_t *)sub_100035820(result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::UInt64Value::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v19 = a2;
  if ((sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v19 + 1);
      unsigned int v7 = *(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, (const char *)(v8 - 128));
      uint64_t v19 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v15;
LABEL_7:
      if (v7 == 8)
      {
        uint64_t v11 = (google::protobuf::internal *)((char *)v6 + 1);
        unint64_t v12 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v13 = *(char *)v11;
        unint64_t v12 = v12 + (v13 << 7) - 128;
        if ((v13 & 0x80000000) == 0)
        {
          uint64_t v11 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_19:
          uint64_t v19 = v11;
          *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = v12;
          goto LABEL_20;
        }
        uint64_t v16 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v6, v12);
        uint64_t v19 = v16;
        *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = v17;
        if (!v16) {
          return 0;
        }
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = v7 - 1;
          return v19;
        }
        if (*v5)
        {
          uint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
          char v6 = v19;
        }
        uint64_t v19 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
        if (!v19) {
          return 0;
        }
      }
LABEL_20:
      if (sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92))) {
        return v19;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_6:
    uint64_t v19 = v6;
    goto LABEL_7;
  }
  return v19;
}

const google::protobuf::UnknownFieldSet *google::protobuf::UInt64Value::_InternalSerialize(google::protobuf::UInt64Value *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v6 = *((void *)this + 2);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unint64_t v6 = *((void *)this + 2);
    }
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unint64_t v8 = v7 >> 7;
          ++a2;
          unint64_t v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  uint64_t v10 = *((void *)this + 1);
  if ((v10 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::UInt64Value::ByteSizeLong(google::protobuf::UInt64Value *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)(v2 + 1);
  }
  else {
    uint64_t v3 = 0;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UInt64Value *)((char *)this + 8), v3, (_DWORD *)this + 6);
  }
  *((_DWORD *)this + sub_1000FA614((void *)this + 6) = v3;
  return (char *)v3;
}

void google::protobuf::UInt64Value::MergeFrom(google::protobuf::UInt64Value *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    unint64_t v6 = v4;
    uint64_t v7 = v4[1];
    if (v7) {
      sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8));
    }
    uint64_t v8 = v6[2];
    if (v8) {
      *((void *)this + sub_1000FACE4((void *)this + 2) = v8;
    }
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::UInt64Value::CopyFrom(google::protobuf::UInt64Value *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    int v5 = (unint64_t *)((char *)this + 8);
    v5[1] = 0;
    if (v6) {
      sub_100035820(v5);
    }
    google::protobuf::UInt64Value::MergeFrom(this, lpsrc);
  }
}

uint64_t google::protobuf::UInt64Value::IsInitialized(google::protobuf::UInt64Value *this)
{
  return 1;
}

uint64_t google::protobuf::UInt64Value::GetMetadata(google::protobuf::UInt64Value *this)
{
  return off_1001EADD8[6];
}

void google::protobuf::Int32Value::~Int32Value(google::protobuf::Int32Value *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t google::protobuf::Int32Value::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::Int32Value::Clear(google::protobuf::Int32Value *this)
{
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_1000FACE4((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Int32Value::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v19 = a2;
  if ((sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v19 + 1);
      unsigned int v7 = *(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, (const char *)(v8 - 128));
      uint64_t v19 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v15;
LABEL_7:
      if (v7 == 8)
      {
        unint64_t v12 = (google::protobuf::internal *)((char *)v6 + 1);
        LODWORD(v1sub_1000333D0((uint64_t *)this + 1) = *(unsigned __int8 *)v6;
        if ((v11 & 0x80) == 0) {
          goto LABEL_19;
        }
        int v13 = *(char *)v12;
        unint64_t v11 = v11 + (v13 << 7) - 128;
        if ((v13 & 0x80000000) == 0)
        {
          unint64_t v12 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_19:
          uint64_t v19 = v12;
          *(_DWORD *)(a1 + 1sub_1000FA614((void *)this + 6) = v11;
          goto LABEL_20;
        }
        uint64_t v16 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v6, v11);
        uint64_t v19 = v16;
        *(_DWORD *)(a1 + 1sub_1000FA614((void *)this + 6) = v17;
        if (!v16) {
          return 0;
        }
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = v7 - 1;
          return v19;
        }
        if (*v5)
        {
          uint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
          char v6 = v19;
        }
        uint64_t v19 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
        if (!v19) {
          return 0;
        }
      }
LABEL_20:
      if (sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92))) {
        return v19;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_6:
    uint64_t v19 = v6;
    goto LABEL_7;
  }
  return v19;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Int32Value::_InternalSerialize(google::protobuf::Int32Value *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unsigned int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unsigned int v6 = *((_DWORD *)this + 4);
    }
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unint64_t v7 = (unint64_t)(int)v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unint64_t v8 = v7 >> 7;
          ++a2;
          unint64_t v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  uint64_t v10 = *((void *)this + 1);
  if ((v10 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::Int32Value::ByteSizeLong(google::protobuf::Int32Value *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    if (v1 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Int32Value *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v2;
  return (char *)v2;
}

void google::protobuf::Int32Value::MergeFrom(google::protobuf::Int32Value *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    unsigned int v6 = v4;
    uint64_t v7 = v4[1];
    if (v7) {
      sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8));
    }
    int v8 = *((_DWORD *)v6 + 4);
    if (v8) {
      *((_DWORD *)this + 4) = v8;
    }
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::Int32Value::CopyFrom(google::protobuf::Int32Value *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    int v5 = (char *)this + 8;
    *((_DWORD *)v5 + sub_1000FACE4((void *)this + 2) = 0;
    if (v6) {
      sub_100035820((unint64_t *)v5);
    }
    google::protobuf::Int32Value::MergeFrom(this, lpsrc);
  }
}

uint64_t google::protobuf::Int32Value::IsInitialized(google::protobuf::Int32Value *this)
{
  return 1;
}

uint64_t google::protobuf::Int32Value::GetMetadata(google::protobuf::Int32Value *this)
{
  return off_1001EADD8[8];
}

void google::protobuf::UInt32Value::~UInt32Value(google::protobuf::UInt32Value *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t google::protobuf::UInt32Value::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::UInt32Value::Clear(google::protobuf::UInt32Value *this)
{
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_1000FACE4((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::UInt32Value::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v19 = a2;
  if ((sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v19 + 1);
      unsigned int v7 = *(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, (const char *)(v8 - 128));
      uint64_t v19 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v15;
LABEL_7:
      if (v7 == 8)
      {
        unint64_t v11 = (google::protobuf::internal *)((char *)v6 + 1);
        LODWORD(v1sub_1000FACE4((void *)this + 2) = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v13 = *(char *)v11;
        unint64_t v12 = (const char *)(v12 + (v13 << 7) - 128);
        if ((v13 & 0x80000000) == 0)
        {
          unint64_t v11 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_19:
          uint64_t v19 = v11;
          *(_DWORD *)(a1 + 1sub_1000FA614((void *)this + 6) = v12;
          goto LABEL_20;
        }
        uint64_t v16 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v6, v12);
        uint64_t v19 = v16;
        *(_DWORD *)(a1 + 1sub_1000FA614((void *)this + 6) = v17;
        if (!v16) {
          return 0;
        }
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = v7 - 1;
          return v19;
        }
        if (*v5)
        {
          uint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
          char v6 = v19;
        }
        uint64_t v19 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
        if (!v19) {
          return 0;
        }
      }
LABEL_20:
      if (sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92))) {
        return v19;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_6:
    uint64_t v19 = v6;
    goto LABEL_7;
  }
  return v19;
}

const google::protobuf::UnknownFieldSet *google::protobuf::UInt32Value::_InternalSerialize(google::protobuf::UInt32Value *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unsigned int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unsigned int v6 = *((_DWORD *)this + 4);
    }
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unsigned int v8 = v7 >> 7;
          ++a2;
          unsigned int v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  uint64_t v10 = *((void *)this + 1);
  if ((v10 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::UInt32Value::ByteSizeLong(google::protobuf::UInt32Value *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1) {
    char v2 = (const google::protobuf::UnknownFieldSet *)(((9 * (__clz(v1 | 1) ^ 0x1F) + 73) >> 6) + 1);
  }
  else {
    char v2 = 0;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UInt32Value *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v2;
  return (char *)v2;
}

void google::protobuf::UInt32Value::MergeFrom(google::protobuf::UInt32Value *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    unsigned int v6 = v4;
    uint64_t v7 = v4[1];
    if (v7) {
      sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8));
    }
    int v8 = *((_DWORD *)v6 + 4);
    if (v8) {
      *((_DWORD *)this + 4) = v8;
    }
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::UInt32Value::CopyFrom(google::protobuf::UInt32Value *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    int v5 = (char *)this + 8;
    *((_DWORD *)v5 + sub_1000FACE4((void *)this + 2) = 0;
    if (v6) {
      sub_100035820((unint64_t *)v5);
    }
    google::protobuf::UInt32Value::MergeFrom(this, lpsrc);
  }
}

uint64_t google::protobuf::UInt32Value::IsInitialized(google::protobuf::UInt32Value *this)
{
  return 1;
}

uint64_t google::protobuf::UInt32Value::GetMetadata(google::protobuf::UInt32Value *this)
{
  return off_1001EADD8[10];
}

void google::protobuf::BoolValue::~BoolValue(google::protobuf::BoolValue *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t google::protobuf::BoolValue::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::BoolValue::Clear(google::protobuf::BoolValue *this)
{
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((unsigned char *)result + 8) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::BoolValue::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v19 = a2;
  if ((sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v19 + 1);
      unsigned int v7 = *(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, (const char *)(v8 - 128));
      uint64_t v19 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v15;
LABEL_7:
      if (v7 == 8)
      {
        unint64_t v11 = (google::protobuf::internal *)((char *)v6 + 1);
        unint64_t v12 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v13 = *(char *)v11;
        unint64_t v12 = v12 + (v13 << 7) - 128;
        if ((v13 & 0x80000000) == 0)
        {
          unint64_t v11 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_19:
          uint64_t v19 = v11;
          *(unsigned char *)(a1 + 1sub_1000FA614((void *)this + 6) = v12 != 0;
          goto LABEL_20;
        }
        uint64_t v16 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v6, v12);
        uint64_t v19 = v16;
        *(unsigned char *)(a1 + 1sub_1000FA614((void *)this + 6) = v17 != 0;
        if (!v16) {
          return 0;
        }
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = v7 - 1;
          return v19;
        }
        if (*v5)
        {
          uint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
          char v6 = v19;
        }
        uint64_t v19 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
        if (!v19) {
          return 0;
        }
      }
LABEL_20:
      if (sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92))) {
        return v19;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_6:
    uint64_t v19 = v6;
    goto LABEL_7;
  }
  return v19;
}

const google::protobuf::UnknownFieldSet *google::protobuf::BoolValue::_InternalSerialize(google::protobuf::BoolValue *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unsigned __int8 v6 = *((unsigned char *)this + 16);
    }
    else
    {
      unsigned __int8 v6 = 1;
    }
    *a2 = 8;
    a2[1] = v6;
    a2 += 2;
  }
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::BoolValue::ByteSizeLong(google::protobuf::BoolValue *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 16);
  char v2 = (const google::protobuf::UnknownFieldSet *)(2 * v1);
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::BoolValue *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + sub_1000FA614((void *)this + 5) = v2;
  return (char *)(2 * v1);
}

void google::protobuf::BoolValue::MergeFrom(google::protobuf::BoolValue *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    unsigned __int8 v6 = v4;
    uint64_t v7 = v4[1];
    if (v7) {
      sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8));
    }
    if (*((unsigned char *)v6 + 16)) {
      *((unsigned char *)this + 1sub_1000FA614((void *)this + 6) = 1;
    }
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::BoolValue::CopyFrom(google::protobuf::BoolValue *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    int v5 = (unint64_t *)((char *)this + 8);
    *((unsigned char *)v5 + 8) = 0;
    if (v6) {
      sub_100035820(v5);
    }
    google::protobuf::BoolValue::MergeFrom(this, lpsrc);
  }
}

uint64_t google::protobuf::BoolValue::IsInitialized(google::protobuf::BoolValue *this)
{
  return 1;
}

uint64_t google::protobuf::BoolValue::GetMetadata(google::protobuf::BoolValue *this)
{
  return off_1001EADD8[12];
}

void google::protobuf::StringValue::~StringValue(google::protobuf::StringValue *this)
{
  uint64_t v1 = *((void *)this + 2);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  google::protobuf::StringValue::~StringValue(this);
  operator delete();
}

uint64_t google::protobuf::StringValue::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::StringValue::Clear(google::protobuf::StringValue *this)
{
  BOOL result = (google::protobuf::Arena **)google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 2);
  char v4 = *((unsigned char *)this + 8);
  uint64_t v3 = (unint64_t *)((char *)this + 8);
  if (v4)
  {
    return sub_100035820(v3);
  }
  return result;
}

google::protobuf::internal *google::protobuf::StringValue::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v18 = a2;
  char v4 = (unint64_t *)(a1 + 8);
  int v5 = (uint64_t **)(a1 + 16);
  while (1)
  {
    if (sub_1000355B8(a3, &v18, *(_DWORD *)(a3 + 92))) {
      return v18;
    }
    TagFallbacint k = (google::protobuf::internal *)((char *)v18 + 1);
    unsigned int v7 = *(unsigned __int8 *)v18;
    if ((*(char *)v18 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v8 = v7 + (*(unsigned __int8 *)TagFallback << 7);
    unsigned int v7 = v8 - 128;
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v18 + 2);
LABEL_6:
      uint64_t v18 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v18, (const char *)(v8 - 128));
    uint64_t v18 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
    unsigned int v7 = v16;
LABEL_7:
    if (v7 != 10) {
      break;
    }
    unint64_t v12 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      unint64_t v12 = *(google::protobuf::Arena **)v12;
    }
    int v13 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v5, v12);
    uint64_t v18 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v13, (std::string::value_type *)v18, a3);
    sub_1000BB974(v19, (uint64_t *)v13, v14);
    BOOL v15 = google::protobuf::internal::VerifyUTF8(v19[0], (const char *)v19[1], (google::protobuf::internal *)"google.protobuf.StringValue.value");
    if (v18) {
      int v11 = 2;
    }
    else {
      int v11 = 4;
    }
    if (!v15) {
      return 0;
    }
LABEL_22:
    if (v11 != 2) {
      return 0;
    }
  }
  if (v7) {
    BOOL v9 = (v7 & 7) == 4;
  }
  else {
    BOOL v9 = 1;
  }
  if (!v9)
  {
    if (*v4)
    {
      uint64_t v10 = (google::protobuf::Arena **)((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else
    {
      uint64_t v10 = sub_10003562C(v4);
      TagFallbacint k = v18;
    }
    uint64_t v18 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, TagFallback);
    if (!v18) {
      return 0;
    }
    int v11 = 2;
    goto LABEL_22;
  }
  *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = v7 - 1;
  return TagFallback;
}

const google::protobuf::UnknownFieldSet *google::protobuf::StringValue::_InternalSerialize(google::protobuf::StringValue *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v7 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    unsigned int v8 = *(const char **)(v7 + 8);
    if (!v8) {
      goto LABEL_7;
    }
    unint64_t v7 = *(void *)v7;
    goto LABEL_6;
  }
  unsigned int v8 = (const char *)*(unsigned __int8 *)(v7 + 23);
  if (*(unsigned char *)(v7 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v7, v8, 1, (google::protobuf::internal *)"google.protobuf.StringValue.value");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 1, (const void **)(*((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_7:
  uint64_t v9 = *((void *)this + 1);
  if ((v9 & 1) == 0) {
    return a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v9 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::StringValue::ByteSizeLong(google::protobuf::StringValue *this)
{
  unint64_t v1 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    char v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  char v4 = (const google::protobuf::UnknownFieldSet *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::StringValue *)((char *)this + 8), v4, (_DWORD *)this + 6);
  }
  *((_DWORD *)this + sub_1000FA614((void *)this + 6) = v4;
  return (char *)v4;
}

void google::protobuf::StringValue::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::StringValue::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::StringValue::MergeFrom(std::string *this, const google::protobuf::StringValue *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unint64_t v6 = *((void *)a2 + 2) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      return this;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    return this;
  }
  unint64_t v7 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    unint64_t v7 = *(google::protobuf::Arena **)v7;
  }
  return google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3->__r_.__value_.__r.__words[2], v6, v7);
}

void google::protobuf::StringValue::CopyFrom(google::protobuf::StringValue *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::StringValue::Clear(this);
    google::protobuf::StringValue::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::StringValue::IsInitialized(google::protobuf::StringValue *this)
{
  return 1;
}

uint64_t google::protobuf::StringValue::GetMetadata(google::protobuf::StringValue *this)
{
  return off_1001EADD8[14];
}

void google::protobuf::BytesValue::~BytesValue(google::protobuf::BytesValue *this)
{
  uint64_t v1 = *((void *)this + 2);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  google::protobuf::BytesValue::~BytesValue(this);
  operator delete();
}

uint64_t google::protobuf::BytesValue::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::BytesValue::Clear(google::protobuf::BytesValue *this)
{
  BOOL result = (google::protobuf::Arena **)google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 2);
  char v4 = *((unsigned char *)this + 8);
  uint64_t v3 = (unint64_t *)((char *)this + 8);
  if (v4)
  {
    return sub_100035820(v3);
  }
  return result;
}

google::protobuf::internal *google::protobuf::BytesValue::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v18 = a2;
  if ((sub_1000355B8(a3, &v18, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (unint64_t *)(a1 + 8);
    unint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      unint64_t v7 = (google::protobuf::internal *)((char *)v18 + 1);
      unsigned int v8 = *(unsigned __int8 *)v18;
      if ((*(char *)v18 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v18, (const char *)(v9 - 128));
      uint64_t v18 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unint64_t v7 = TagFallback;
      unsigned int v8 = v16;
LABEL_7:
      if (v8 == 10)
      {
        int v13 = (google::protobuf::Arena *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
        if (*v5) {
          int v13 = *(google::protobuf::Arena **)v13;
        }
        int v14 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v6, v13);
        unint64_t v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v14, (std::string::value_type *)v18, a3);
      }
      else
      {
        if (v8) {
          BOOL v10 = (v8 & 7) == 4;
        }
        else {
          BOOL v10 = 1;
        }
        if (v10)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = v8 - 1;
          return v18;
        }
        if (*v5)
        {
          int v11 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          int v11 = sub_10003562C(v5);
          unint64_t v7 = v18;
        }
        unint64_t v12 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v11, v7);
      }
      uint64_t v18 = v12;
      if (!v12) {
        return 0;
      }
      if (sub_1000355B8(a3, &v18, *(_DWORD *)(a3 + 92))) {
        return v18;
      }
    }
    unint64_t v7 = (google::protobuf::internal *)((char *)v18 + 2);
LABEL_6:
    uint64_t v18 = v7;
    goto LABEL_7;
  }
  return v18;
}

const google::protobuf::UnknownFieldSet *google::protobuf::BytesValue::_InternalSerialize(google::protobuf::BytesValue *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  unint64_t v6 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(v6 + 23)) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  if (*(void *)(v6 + 8)) {
LABEL_3:
  }
    char v4 = sub_100034480(a3, 1, (const void **)v6, a2);
LABEL_4:
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *google::protobuf::BytesValue::ByteSizeLong(google::protobuf::BytesValue *this)
{
  unint64_t v1 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    char v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  char v4 = (const google::protobuf::UnknownFieldSet *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::BytesValue *)((char *)this + 8), v4, (_DWORD *)this + 6);
  }
  *((_DWORD *)this + sub_1000FA614((void *)this + 6) = v4;
  return (char *)v4;
}

void google::protobuf::BytesValue::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::BytesValue::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::BytesValue::MergeFrom(std::string *this, const google::protobuf::BytesValue *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unint64_t v6 = *((void *)a2 + 2) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      return this;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    return this;
  }
  uint64_t v7 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    uint64_t v7 = *(google::protobuf::Arena **)v7;
  }
  return google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3->__r_.__value_.__r.__words[2], v6, v7);
}

void google::protobuf::BytesValue::CopyFrom(google::protobuf::BytesValue *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::BytesValue::Clear(this);
    google::protobuf::BytesValue::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::BytesValue::IsInitialized(google::protobuf::BytesValue *this)
{
  return 1;
}

uint64_t google::protobuf::BytesValue::GetMetadata(google::protobuf::BytesValue *this)
{
  return off_1001EADD8[16];
}

void *sub_100124B6C(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_1001250C0(this, 1);
  *BOOL result = off_1001D1270;
  result[1] = this;
  *((_DWORD *)result + sub_1000FA614((void *)this + 6) = 0;
  result[2] = 0;
  return result;
}

void *sub_100124BE0(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100125198(this, 1);
  *BOOL result = off_1001D1320;
  result[1] = this;
  result[2] = 0;
  return result;
}

void *sub_100124C50(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100125270(this, 1);
  *BOOL result = off_1001D13D0;
  result[1] = this;
  *((_DWORD *)result + sub_1000FA614((void *)this + 6) = 0;
  result[2] = 0;
  return result;
}

void *sub_100124CC4(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100125348(this, 1);
  *BOOL result = off_1001D1480;
  result[1] = this;
  *((_DWORD *)result + sub_1000FA614((void *)this + 6) = 0;
  result[2] = 0;
  return result;
}

void *sub_100124D38(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100125420(this, 1);
  *BOOL result = off_1001D1530;
  result[1] = this;
  result[2] = 0;
  return result;
}

void *sub_100124DA8(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_1001254F8(this, 1);
  *BOOL result = off_1001D15E0;
  result[1] = this;
  result[2] = 0;
  return result;
}

void *sub_100124E18(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_1001255D0(this, 1);
  *BOOL result = off_1001D1690;
  result[1] = this;
  *((_DWORD *)result + sub_1000FA614((void *)this + 5) = 0;
  *((unsigned char *)result + 1sub_1000FA614((void *)this + 6) = 0;
  return result;
}

void *sub_100124E8C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1001256A8(a1);
}

void sub_100124F34()
{
}

void *sub_100124F5C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1001257E0(a1);
}

void sub_100125004()
{
}

uint64_t sub_100125028()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DoubleValue>(0);
}

uint64_t sub_100125030(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DoubleValue>(a2);
}

uint64_t sub_100125038(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_100125040()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FloatValue>(0);
}

uint64_t sub_100125048(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FloatValue>(a2);
}

uint64_t sub_100125050()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Int64Value>(0);
}

uint64_t sub_100125058(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Int64Value>(a2);
}

uint64_t sub_100125060()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UInt64Value>(0);
}

uint64_t sub_100125068(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UInt64Value>(a2);
}

uint64_t sub_100125070()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Int32Value>(0);
}

uint64_t sub_100125078(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Int32Value>(a2);
}

uint64_t sub_100125080()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UInt32Value>(0);
}

uint64_t sub_100125088(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::UInt32Value>(a2);
}

uint64_t sub_100125090()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::BoolValue>(0);
}

uint64_t sub_100125098(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::BoolValue>(a2);
}

uint64_t sub_1001250A0()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::StringValue>(0);
}

uint64_t sub_1001250A8(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::StringValue>(a2);
}

uint64_t sub_1001250B0()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::BytesValue>(0);
}

uint64_t sub_1001250B8(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::BytesValue>(a2);
}

void *sub_1001250C0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_100125178);
}

uint64_t *sub_100125178(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100125198(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x18uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))sub_100125250);
}

uint64_t *sub_100125250(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100125270(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_100125328);
}

uint64_t *sub_100125328(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100125348(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_100125400);
}

uint64_t *sub_100125400(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100125420(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x18uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))sub_1001254D8);
}

uint64_t *sub_1001254D8(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_1001254F8(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x18uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))sub_1001255B0);
}

uint64_t *sub_1001255B0(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_1001255D0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x18uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))sub_100125688);
}

uint64_t *sub_100125688(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_1001256A8(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_100125724(a1, 1);
  void *v2 = off_1001D1740;
  v2[1] = a1;
  *((_DWORD *)v2 + sub_1000FA614((void *)this + 6) = 0;
  if (atomic_load_explicit(scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_StringValue_google_2fprotobuf_2fwrappers_2eproto);
  }
  v2[2] = &google::protobuf::internal::fixed_address_empty_string;
  return v2;
}

void *sub_100125724(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))google::protobuf::StringValue::~StringValue);
}

void *sub_1001257E0(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_10012585C(a1, 1);
  void *v2 = off_1001D17F0;
  v2[1] = a1;
  *((_DWORD *)v2 + sub_1000FA614((void *)this + 6) = 0;
  if (atomic_load_explicit(scc_info_BytesValue_google_2fprotobuf_2fwrappers_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_BytesValue_google_2fprotobuf_2fwrappers_2eproto);
  }
  v2[2] = &google::protobuf::internal::fixed_address_empty_string;
  return v2;
}

void *sub_10012585C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))google::protobuf::BytesValue::~BytesValue);
}

void sub_100125918()
{
}

void sub_100125924(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/any.pb.cc", a4);
  google::protobuf::Any::Any((uint64_t)&google::protobuf::_Any_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Any_default_instance_, v4);
}

uint64_t google::protobuf::Any::Any(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D1988;
  *(void *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 3sub_1000FACE4((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = a1 + 16;
  *(void *)(a1 + 48) = a1 + 24;
  if (atomic_load_explicit(scc_info_Any_google_2fprotobuf_2fany_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Any_google_2fprotobuf_2fany_2eproto);
  }
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 24) = &google::protobuf::internal::fixed_address_empty_string;
  return a1;
}

void google::protobuf::Any::~Any(google::protobuf::Any *this)
{
  uint64_t v1 = *((void *)this + 2);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  google::protobuf::Any::~Any(this);
  operator delete();
}

uint64_t google::protobuf::Any::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 3sub_1000FACE4((void *)this + 2) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::Any::Clear(google::protobuf::Any *this)
{
  google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 2);
  BOOL result = (google::protobuf::Arena **)google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 3);
  char v4 = *((unsigned char *)this + 8);
  uint64_t v3 = (unint64_t *)((char *)this + 8);
  if (v4)
  {
    return sub_100035820(v3);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Any::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v23 = a2;
  char v4 = (unint64_t *)(a1 + 8);
  uint64_t v5 = (uint64_t **)(a1 + 24);
  unint64_t v6 = (uint64_t **)(a1 + 16);
  while (1)
  {
    if (sub_1000355B8(a3, &v23, *(_DWORD *)(a3 + 92))) {
      return v23;
    }
    TagFallbacint k = (google::protobuf::internal *)((char *)v23 + 1);
    unsigned int v8 = *(unsigned __int8 *)v23;
    if ((*(char *)v23 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v9 = v8 + (*(unsigned __int8 *)TagFallback << 7);
    unsigned int v8 = v9 - 128;
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v23 + 2);
LABEL_6:
      uint64_t v23 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v23, (const char *)(v9 - 128));
    uint64_t v23 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
    unsigned int v8 = v21;
LABEL_7:
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    uint64_t v17 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      uint64_t v17 = *(google::protobuf::Arena **)v17;
    }
    uint64_t v18 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v6, v17);
    uint64_t v23 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v18, (std::string::value_type *)v23, a3);
    sub_1000BB974(v24, (uint64_t *)v18, v19);
    BOOL v20 = google::protobuf::internal::VerifyUTF8(v24[0], (const char *)v24[1], (google::protobuf::internal *)"google.protobuf.Any.type_url");
    if (v23) {
      int v16 = 2;
    }
    else {
      int v16 = 4;
    }
    if (!v20) {
      return 0;
    }
LABEL_31:
    if (v16 != 2) {
      return 0;
    }
  }
  if (v8 == 18)
  {
    int v14 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      int v14 = *(google::protobuf::Arena **)v14;
    }
    BOOL v15 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v5, v14);
    int v13 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v15, (std::string::value_type *)v23, a3);
    goto LABEL_23;
  }
LABEL_12:
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v4)
    {
      unint64_t v12 = (google::protobuf::Arena **)((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else
    {
      unint64_t v12 = sub_10003562C(v4);
      TagFallbacint k = v23;
    }
    int v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, TagFallback);
LABEL_23:
    uint64_t v23 = v13;
    if (!v13) {
      return 0;
    }
    int v16 = 2;
    goto LABEL_31;
  }
  *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fwrappers_2eproto, 0) = v8 - 1;
  return TagFallback;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Any::_InternalSerialize(google::protobuf::Any *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v7 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    unsigned int v8 = *(const char **)(v7 + 8);
    if (!v8) {
      goto LABEL_7;
    }
    unint64_t v7 = *(void *)v7;
    goto LABEL_6;
  }
  unsigned int v8 = (const char *)*(unsigned __int8 *)(v7 + 23);
  if (*(unsigned char *)(v7 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v7, v8, 1, (google::protobuf::internal *)"google.protobuf.Any.type_url");
    a2 = sub_100034480(a3, 1, (const void **)(*((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
LABEL_7:
  unint64_t v9 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v9 + 23) & 0x80000000) == 0)
  {
    if (!*(unsigned char *)(v9 + 23)) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (*(void *)(v9 + 8)) {
LABEL_9:
  }
    a2 = sub_100034480(a3, 2, (const void **)v9, a2);
LABEL_10:
  uint64_t v10 = *((void *)this + 1);
  if ((v10 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::Any::ByteSizeLong(google::protobuf::Any *this)
{
  unint64_t v1 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    char v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  char v4 = (const google::protobuf::UnknownFieldSet *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  unint64_t v5 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  if (*(char *)(v5 + 23) < 0)
  {
    if (!*(void *)(v5 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v5 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  char v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4 + v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_13:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Any *)((char *)this + 8), v4, (_DWORD *)this + 8);
  }
  *((_DWORD *)this + 8) = v4;
  return (char *)v4;
}

void google::protobuf::Any::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::Any::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::Any::MergeFrom(std::string *this, const google::protobuf::Any *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unint64_t v6 = *((void *)a2 + 2) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_10;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_10;
  }
  uint64_t v7 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    uint64_t v7 = *(google::protobuf::Arena **)v7;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3->__r_.__value_.__r.__words[2], v6, v7);
LABEL_10:
  unint64_t v8 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      return this;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    return this;
  }
  unint64_t v9 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    unint64_t v9 = *(google::protobuf::Arena **)v9;
  }
  return google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1], v8, v9);
}

void google::protobuf::Any::CopyFrom(google::protobuf::Any *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::Any::Clear(this);
    google::protobuf::Any::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::Any::IsInitialized(google::protobuf::Any *this)
{
  return 1;
}

uint64_t google::protobuf::Any::GetMetadata(google::protobuf::Any *this)
{
  return *off_1001EAE68;
}

void *sub_100126128(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1001261C0(a1, 1);
  google::protobuf::Any::Any((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10012618C()
{
}

uint64_t sub_1001261B0()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Any>(0);
}

uint64_t sub_1001261B8(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Any>(a2);
}

void *sub_1001261C0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))google::protobuf::Any::~Any);
}

void sub_10012627C()
{
}

BOOL google::protobuf::internal::GetAnyFieldDescriptors(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = (google::protobuf::Descriptor *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 152))(a1);
  unint64_t v6 = (void *)*((void *)v5 + 1);
  size_t v7 = strlen("google.protobuf.Any");
  if (*((char *)v6 + 23) < 0)
  {
    if (v7 == v6[1])
    {
      if (v7 == -1) {
        goto LABEL_20;
      }
      unint64_t v6 = (void *)*v6;
      goto LABEL_8;
    }
    return 0;
  }
  if (v7 != *((unsigned __int8 *)v6 + 23)) {
    return 0;
  }
  if (v7 == -1) {
LABEL_20:
  }
    sub_1000D97B8();
LABEL_8:
  if (memcmp(v6, "google.protobuf.Any", v7)) {
    return 0;
  }
  *a2 = google::protobuf::Descriptor::FindFieldByNumber(v5, 1);
  *a3 = google::protobuf::Descriptor::FindFieldByNumber(v5, 2);
  uint64_t v9 = *a2;
  if (!v9) {
    return 0;
  }
  uint64_t v10 = *(std::once_flag::_State_type **)(v9 + 48);
  if (v10)
  {
    uint64_t v13 = v9;
    int v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
    {
      int v16 = &v14;
      uint64_t v17 = &v13;
      BOOL v15 = &v16;
      std::__call_once(v10, &v15, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (*(_DWORD *)(v9 + 56) != 9) {
    return 0;
  }
  uint64_t v11 = *a3;
  if (!v11) {
    return 0;
  }
  unint64_t v12 = *(std::once_flag::_State_type **)(v11 + 48);
  if (v12)
  {
    uint64_t v13 = v11;
    int v14 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
    {
      int v16 = &v14;
      uint64_t v17 = &v13;
      BOOL v15 = &v16;
      std::__call_once(v12, &v15, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  return *(_DWORD *)(v11 + 56) == 12;
}

void *google::protobuf::internal::ArenaImpl::thread_cache(google::protobuf::internal::ArenaImpl *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBD48, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001EBD48))
  {
    operator new();
  }
  unint64_t v1 = (pthread_key_t *)qword_1001EBD40;
  return sub_100126530(v1);
}

void sub_1001264F8()
{
}

void *sub_100126530(pthread_key_t *a1)
{
  unint64_t v1 = pthread_getspecific(*a1);
  if (!v1) {
    operator new();
  }
  return v1;
}

void sub_1001265A0(void *a1)
{
}

void *google::protobuf::internal::ArenaImpl::NewBuffer(google::protobuf::internal::ArenaImpl *this, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = *((void *)this + 4);
  if (a2 == -1)
  {
    if (v5) {
      unint64_t v7 = *(void *)v5;
    }
    else {
      unint64_t v7 = 256;
    }
  }
  else
  {
    if (v5) {
      unint64_t v6 = *(void *)(v5 + 8);
    }
    else {
      unint64_t v6 = 0x2000;
    }
    if (v6 >= 2 * a2) {
      unint64_t v7 = 2 * a2;
    }
    else {
      unint64_t v7 = v6;
    }
  }
  if (a3 >= 0xFFFFFFFFFFFFFFE8)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/arena.cc", 245);
    unint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v12, "CHECK failed: (min_bytes) <= (std::numeric_limits<size_t>::max() - kBlockHeaderSize): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
    uint64_t v5 = *((void *)this + 4);
  }
  if (v7 <= a3 + 24) {
    size_t v9 = a3 + 24;
  }
  else {
    size_t v9 = v7;
  }
  if (v5) {
    BOOL result = (void *)(*(uint64_t (**)(size_t))(v5 + 16))(v9);
  }
  else {
    BOOL result = operator new(v9);
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)this + 2, v9, memory_order_relaxed);
  return result;
}

void sub_1001266B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::internal::SerialArena::AddCleanupFallback(google::protobuf::internal::SerialArena *this, void *a2, void (*a3)(void *))
{
  BOOL result = (void *)*((void *)this + 3);
  do
  {
    if (result)
    {
      if ((unint64_t)(2 * *result) >= 0x40) {
        uint64_t v7 = 64;
      }
      else {
        uint64_t v7 = 2 * *result;
      }
    }
    else
    {
      uint64_t v7 = 8;
    }
    unint64_t v8 = (16 * (_WORD)v7 + 23) & 0xFF0;
    size_t v9 = (void *)*((void *)this + 5);
    if (*((void *)this + 6) - (void)v9 < v8)
    {
      BOOL result = google::protobuf::internal::SerialArena::AllocateAlignedFallback(this, v8);
      uint64_t v10 = (void *)*((void *)this + 3);
    }
    else
    {
      *((void *)this + sub_1000FA614((void *)this + 5) = (char *)v9 + v8;
      uint64_t v10 = result;
      BOOL result = v9;
    }
    *BOOL result = v7;
    result[1] = v10;
    *((void *)this + 3) = result;
    *((void *)this + 7) = result + 2;
    *((void *)this + 8) = &result[2 * v7 + 2];
  }
  while (!(16 * v7));
  result[2] = a2;
  result[3] = a3;
  *((void *)this + 7) = result + 4;
  return result;
}

void *google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(google::protobuf::internal::ArenaImpl *this, unint64_t a2, void (*a3)(void *))
{
  uint64_t v7 = 0;
  if (sub_100126808((atomic_ullong *)this, (unint64_t *)&v7)) {
    return sub_100126870(v7, a2, a3);
  }
  else {
    return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback(this, a2, a3);
  }
}

uint64_t sub_100126808(atomic_ullong *a1, unint64_t *a2)
{
  char v4 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)a1);
  if (*((void *)v4 + 1) == a1[3])
  {
    unint64_t explicit = *((void *)v4 + 2);
LABEL_3:
    *a2 = explicit;
    return 1;
  }
  uint64_t v7 = google::protobuf::internal::ArenaImpl::thread_cache(v4);
  unint64_t explicit = atomic_load_explicit(a1 + 1, memory_order_acquire);
  if (explicit && *(void **)(explicit + 8) == v7) {
    goto LABEL_3;
  }
  return 0;
}

void *sub_100126870(google::protobuf::internal::SerialArena *this, unint64_t a2, void (*a3)(void *))
{
  AlignedFallbacint k = (void *)*((void *)this + 5);
  if (*((void *)this + 6) - (void)AlignedFallback < a2) {
    AlignedFallbacint k = google::protobuf::internal::SerialArena::AllocateAlignedFallback(this, a2);
  }
  else {
    *((void *)this + sub_1000FA614((void *)this + 5) = (char *)AlignedFallback + a2;
  }
  unint64_t v6 = (void *)*((void *)this + 7);
  if (v6 == *((void **)this + 8))
  {
    google::protobuf::internal::SerialArena::AddCleanupFallback(this, AlignedFallback, a3);
  }
  else
  {
    void *v6 = AlignedFallback;
    v6[1] = a3;
    *((void *)this + 7) = v6 + 2;
  }
  return AlignedFallback;
}

void *google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanupFallback(google::protobuf::internal::ArenaImpl *this, unint64_t a2, void (*a3)(void *))
{
  unint64_t v6 = google::protobuf::internal::ArenaImpl::thread_cache(this);
  SerialArenaFallbacint k = google::protobuf::internal::ArenaImpl::GetSerialArenaFallback((atomic_ullong *)this, v6);
  return sub_100126870((google::protobuf::internal::SerialArena *)SerialArenaFallback, a2, a3);
}

char *google::protobuf::internal::ArenaImpl::AddCleanup(google::protobuf::internal::ArenaImpl *this, void *a2, void (*a3)(void *))
{
  unint64_t v8 = 0;
  if (!sub_100126808((atomic_ullong *)this, (unint64_t *)&v8)) {
    return google::protobuf::internal::ArenaImpl::AddCleanupFallback(this, a2, a3);
  }
  BOOL result = (char *)v8;
  uint64_t v7 = (void *)*((void *)v8 + 7);
  if (v7 == *((void **)v8 + 8)) {
    return (char *)google::protobuf::internal::SerialArena::AddCleanupFallback(v8, a2, a3);
  }
  void *v7 = a2;
  v7[1] = a3;
  *((void *)result + 7) = v7 + 2;
  return result;
}

char *google::protobuf::internal::ArenaImpl::AddCleanupFallback(google::protobuf::internal::ArenaImpl *this, void *a2, void (*a3)(void *))
{
  unint64_t v6 = google::protobuf::internal::ArenaImpl::thread_cache(this);
  BOOL result = google::protobuf::internal::ArenaImpl::GetSerialArenaFallback((atomic_ullong *)this, v6);
  unint64_t v8 = (void *)*((void *)result + 7);
  if (v8 == *((void **)result + 8))
  {
    return (char *)google::protobuf::internal::SerialArena::AddCleanupFallback((google::protobuf::internal::SerialArena *)result, a2, a3);
  }
  else
  {
    *unint64_t v8 = a2;
    v8[1] = a3;
    *((void *)result + 7) = v8 + 2;
  }
  return result;
}

void *google::protobuf::internal::ArenaImpl::AllocateAlignedFallback(google::protobuf::internal::ArenaImpl *this, unint64_t a2)
{
  char v4 = google::protobuf::internal::ArenaImpl::thread_cache(this);
  SerialArenaFallbacint k = google::protobuf::internal::ArenaImpl::GetSerialArenaFallback((atomic_ullong *)this, v4);
  uint64_t v6 = *((void *)SerialArenaFallback + 5);
  if (*((void *)SerialArenaFallback + 6) - v6 < a2)
  {
    return google::protobuf::internal::SerialArena::AllocateAlignedFallback((google::protobuf::internal::SerialArena *)SerialArenaFallback, a2);
  }
  else
  {
    *((void *)SerialArenaFallback + sub_1000FA614((void *)this + 5) = v6 + a2;
    return (void *)v6;
  }
}

char *google::protobuf::internal::ArenaImpl::GetSerialArenaFallback(atomic_ullong *this, void *a2)
{
  uint64_t v3 = this;
  unint64_t explicit = (char *)atomic_load_explicit(this, memory_order_acquire);
  if (explicit)
  {
    while (*((void **)explicit + 1) != a2)
    {
      unint64_t explicit = (char *)*((void *)explicit + 4);
      if (!explicit) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    this = (atomic_ullong *)google::protobuf::internal::ArenaImpl::NewBuffer((google::protobuf::internal::ArenaImpl *)this, -1, 0x48uLL);
    this[3] = (atomic_ullong)v3;
    unint64_t explicit = (char *)(this + 3);
    this[2] = v5;
    *(_OWORD *)this = xmmword_100182CD0;
    this[4] = (atomic_ullong)a2;
    this[5] = (atomic_ullong)this;
    this[8] = (atomic_ullong)(this + 12);
    this[9] = (atomic_ullong)this + v5;
    this[6] = 0;
    this[10] = 0;
    this[11] = 0;
    atomic_ullong v6 = *v3;
    this[7] = *v3;
    atomic_ullong v7 = v6;
    atomic_compare_exchange_strong_explicit(v3, (unint64_t *)&v7, (unint64_t)(this + 3), memory_order_release, memory_order_relaxed);
    if (v7 != v6)
    {
      atomic_ullong v8 = v7;
      do
      {
        this[7] = v7;
        atomic_compare_exchange_strong_explicit(v3, (unint64_t *)&v8, (unint64_t)explicit, memory_order_release, memory_order_relaxed);
        BOOL v9 = v8 == v7;
        atomic_ullong v7 = v8;
      }
      while (!v9);
    }
  }
  uint64_t v10 = (google::protobuf::internal::ArenaImpl *)google::protobuf::internal::ArenaImpl::thread_cache((google::protobuf::internal::ArenaImpl *)this);
  *((void *)v10 + sub_1000FACE4((void *)this + 2) = explicit;
  atomic_ullong v11 = v3[3];
  *((void *)google::protobuf::internal::ArenaImpl::thread_cache(v10) + sub_1000333D0((uint64_t *)this + 1) = v11;
  atomic_store((unint64_t)explicit, (unint64_t *)v3 + 1);
  return explicit;
}

void *google::protobuf::internal::SerialArena::AllocateAlignedFallback(google::protobuf::internal::SerialArena *this, unint64_t a2)
{
  char v4 = (void *)*((void *)this + 2);
  uint64_t v5 = v4[2];
  atomic_ullong v8 = (char *)this + 40;
  BOOL result = (void *)*((void *)this + 5);
  atomic_ullong v7 = (char *)*((void *)v8 + 1);
  do
  {
    v4[1] = (char *)result + v5 - (void)v7;
    BOOL v9 = google::protobuf::internal::ArenaImpl::NewBuffer(*(google::protobuf::internal::ArenaImpl **)this, v5, a2);
    *BOOL v9 = v4;
    v9[1] = 24;
    void v9[2] = v5;
    *((void *)this + sub_1000FACE4((void *)this + 2) = v9;
    BOOL result = v9 + 3;
    atomic_ullong v7 = (char *)v9 + v5;
    *((void *)this + sub_1000FA614((void *)this + 5) = v9 + 3;
    *((void *)this + sub_1000FA614((void *)this + 6) = (char *)v9 + v5;
    char v4 = v9;
  }
  while (v5 - 24 < a2);
  *((void *)this + sub_1000FA614((void *)this + 5) = (char *)result + a2;
  return result;
}

void *sub_100126C24(google::protobuf::internal::ArenaImpl *a1, unint64_t a2)
{
  uint64_t v5 = 0;
  if (!sub_100126808((atomic_ullong *)a1, (unint64_t *)&v5)) {
    return google::protobuf::internal::ArenaImpl::AllocateAlignedFallback(a1, a2);
  }
  BOOL result = (void *)*((void *)v5 + 5);
  if (*((void *)v5 + 6) - (void)result < a2) {
    return google::protobuf::internal::SerialArena::AllocateAlignedFallback(v5, a2);
  }
  *((void *)v5 + sub_1000FA614((void *)this + 5) = (char *)result + a2;
  return result;
}

uint64_t google::protobuf::internal::ThreadLocalStorage<google::protobuf::internal::ArenaImpl::ThreadCache>::Delete(uint64_t result)
{
  if (result) {
    operator delete();
  }
  return result;
}

uint64_t google::protobuf::internal::DestroyMessage(google::protobuf::internal *this, const void *a2)
{
  return (**(uint64_t (***)(google::protobuf::internal *))this)(this);
}

void google::protobuf::internal::DestroyString(void **this, const void *a2)
{
  if (*((char *)this + 23) < 0) {
    operator delete(*this);
  }
}

void google::protobuf::internal::InitProtobufDefaultsSlow(google::protobuf::internal *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBD50, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001EBD50))
  {
    google::protobuf::internal::fixed_address_empty_string = 0;
    qword_1001EDDE8 = 0;
    unk_1001EDDF0 = 0;
    google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyString, (void (*)(const void *))&google::protobuf::internal::fixed_address_empty_string, v1);
    atomic_store(1u, google::protobuf::internal::init_protobuf_defaults_state);
    __cxa_guard_release(&qword_1001EBD50);
  }
}

void sub_100126D84(_Unwind_Exception *a1)
{
}

uint64_t google::protobuf::internal::StringSpaceUsedExcludingSelfLong(unint64_t a1)
{
  if (*(char *)(a1 + 23) < 0 && (*(void *)a1 >= a1 ? (BOOL v1 = *(void *)a1 >= a1 + 24) : (BOOL v1 = 1), v1)) {
    return (*(void *)(a1 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
  }
  else {
    return 0;
  }
}

void google::protobuf::internal::InitSCCImpl(_DWORD *a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBD58, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001EBD58))
  {
    __cxa_atexit((void (*)(void *))std::mutex::~mutex, &stru_1001EAE88, (void *)&_mh_execute_header);
    __cxa_guard_release(&qword_1001EBD58);
  }
  uint64_t v2 = (google::protobuf::internal *)pthread_self();
  uint64_t v3 = (uint64_t)v2;
  if (qword_1001EBD60)
  {
    if (v2 && v2 == (google::protobuf::internal *)qword_1001EBD60) {
      goto LABEL_5;
    }
  }
  else if (!v2)
  {
LABEL_5:
    if (*a1 != 1)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/generated_message_util.cc", 785);
      char v4 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: (scc->visit_status.load(std::memory_order_relaxed)) == (SCCInfoBase::kRunning): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    }
    return;
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)google::protobuf::internal::init_protobuf_defaults_state, memory_order_acquire) & 1) == 0)google::protobuf::internal::InitProtobufDefaultsSlow(v2); {
  std::mutex::lock(&stru_1001EAE88);
  }
  qword_1001EBD60 = v3;
  sub_100126F3C(a1);
  qword_1001EBD60 = 0;
  std::mutex::unlock(&stru_1001EAE88);
}

void sub_100126F20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

_DWORD *sub_100126F3C(_DWORD *result)
{
  if (*result == -1)
  {
    BOOL v1 = (uint64_t (**)(void))result;
    *BOOL result = 1;
    uint64_t v2 = result + 6;
    int v3 = result[1];
    if (v3 >= 1)
    {
      for (uint64_t i = 0; i < v3; ++i)
      {
        if (*(void *)&v2[2 * i])
        {
          sub_100126F3C();
          int v3 = *((_DWORD *)v1 + 1);
        }
      }
    }
    uint64_t v5 = v3;
    int v6 = *((_DWORD *)v1 + 2);
    if (v6 >= 1)
    {
      uint64_t v7 = 0;
      atomic_ullong v8 = &v2[2 * v5];
      do
      {
        if (**(void **)&v8[2 * v7])
        {
          sub_100126F3C();
          int v6 = *((_DWORD *)v1 + 2);
        }
        ++v7;
      }
      while (v7 < v6);
    }
    BOOL result = (_DWORD *)v1[2]();
    atomic_store(0, (unsigned int *)v1);
  }
  return result;
}

unsigned __int8 *sub_100126FEC(google::protobuf::io::EpsCopyOutputStream *a1, void *a2, uint64_t a3, unsigned __int8 *__dst)
{
  if (*((unsigned char *)a1 + 57))
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteAliasedRaw(a1, a2, a3, __dst);
  }
  else if (*(void *)a1 - (void)__dst < (int)a3)
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a1, (char *)a2, a3, __dst);
  }
  else
  {
    uint64_t v6 = (int)a3;
    memcpy(__dst, a2, (int)a3);
    return &__dst[v6];
  }
}

void google::protobuf::Message::MergeFrom(google::protobuf::Message *this, const google::protobuf::Message *a2)
{
  uint64_t v4 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)this + 152))(this);
  if ((*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2) != v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/message.cc", 83);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (from.GetDescriptor()) == (descriptor): ");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, ": Tried to merge from a message with a different type.  to: ");
    atomic_ullong v8 = google::protobuf::internal::LogMessage::operator<<(v7, *(const std::string::value_type **)(v4 + 8));
    BOOL v9 = google::protobuf::internal::LogMessage::operator<<(v8, ", from: ");
    uint64_t v10 = (*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    atomic_ullong v11 = google::protobuf::internal::LogMessage::operator<<(v9, *(const std::string::value_type **)(v10 + 8));
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v11->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::ReflectionOps::Merge(a2, this, v5);
}

void sub_1001271A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Message::CheckTypeAndMergeFrom(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 120))();
}

void google::protobuf::Message::CopyFrom(google::protobuf::Message *this, const google::protobuf::Message *a2)
{
  uint64_t v4 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)this + 152))(this);
  if ((*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2) != v4)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/message.cc", 99);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: (from.GetDescriptor()) == (descriptor): ");
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, ": Tried to copy from a message with a different type. to: ");
    atomic_ullong v8 = google::protobuf::internal::LogMessage::operator<<(v7, *(const std::string::value_type **)(v4 + 8));
    BOOL v9 = google::protobuf::internal::LogMessage::operator<<(v8, ", from: ");
    uint64_t v10 = (*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    atomic_ullong v11 = google::protobuf::internal::LogMessage::operator<<(v9, *(const std::string::value_type **)(v10 + 8));
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v11->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::ReflectionOps::Copy(a2, this, v5);
}

void sub_10012730C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void *google::protobuf::Message::GetTypeName@<X0>(google::protobuf::Message *this@<X0>, uint64_t a2@<X8>)
{
  BOOL result = (void *)(*(uint64_t (**)(google::protobuf::Message *))(*(void *)this + 152))(this);
  uint64_t v4 = (long long *)result[1];
  if (*((char *)v4 + 23) < 0)
  {
    uint64_t v6 = *(void **)v4;
    unint64_t v7 = *((void *)v4 + 1);
    return sub_1000BB834((unsigned char *)a2, v6, v7);
  }
  else
  {
    long long v5 = *v4;
    *(void *)(a2 + 1sub_1000FA614((void *)this + 6) = *((void *)v4 + 2);
    *(_OWORD *)a2 = v5;
  }
  return result;
}

void google::protobuf::Message::FindInitializationErrors(const google::protobuf::Message *a1, uint64_t *a2)
{
  sub_1000BBA84(__p, "");
  google::protobuf::internal::ReflectionOps::FindInitializationErrors(a1, (const void **)__p, a2);
  if (v5 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10012740C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::Message::InitializationErrorString(google::protobuf::Message *this@<X0>, std::string *a2@<X8>)
{
  memset(v3, 0, sizeof(v3));
  google::protobuf::Message::FindInitializationErrors(this, (uint64_t *)v3);
  sub_1000D8D7C(", ", v3, a2);
  uint64_t v4 = v3;
  sub_1000D9860((void ***)&v4);
}

void sub_100127490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000D9860((void ***)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Message::ByteSizeLong(google::protobuf::Message *this, const google::protobuf::Message *a2)
{
  uint64_t v3 = google::protobuf::internal::WireFormat::ByteSize(this, a2);
  (*(void (**)(google::protobuf::Message *, uint64_t))(*(void *)this + 144))(this, v3);
  return v3;
}

void google::protobuf::Message::SetCachedSize(google::protobuf::Message *this)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/message.cc", 156);
  uint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v7, "Message class \"");
  uint64_t v3 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)this + 152))(this);
  uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v2, *(const std::string::value_type **)(v3 + 8));
  char v5 = google::protobuf::internal::LogMessage::operator<<(v4, "\" implements neither SetCachedSize() nor ByteSize().  Must implement one or the other.");
  google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
}

void sub_1001275B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::Message::SpaceUsedLong(google::protobuf::Message *this)
{
  (*(void (**)(google::protobuf::Message *))(*(void *)this + 152))(this);
  return google::protobuf::Reflection::SpaceUsedLong(v2, this);
}

uint64_t sub_100127630()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBD70, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001EBD70))
  {
    operator new();
  }
  return qword_1001EBD68;
}

void sub_100127714(_Unwind_Exception *a1)
{
}

void google::protobuf::MessageFactory::InternalRegisterGeneratedFile(std::string::size_type a1)
{
  uint64_t v2 = sub_100127630() + 8;
  sub_1000D7924(&v7, *(char **)(a1 + 16));
  *(_OWORD *)&v6[0].__r_.__value_.__l.__data_ = v7;
  v6[0].__r_.__value_.__r.__words[2] = a1;
  sub_1000DC650(v2, &v6[0].__r_.__value_.__l.__data_, (uint64_t)v6);
  if ((v3 & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/message.cc", 211);
    uint64_t v4 = google::protobuf::internal::LogMessage::operator<<(v6, "File is already registered: ");
    char v5 = google::protobuf::internal::LogMessage::operator<<(v4, *(const std::string::value_type **)(a1 + 16));
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
  }
}

void sub_1001277CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
}

void google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(const std::string::value_type **this, const google::protobuf::Descriptor *a2, const google::protobuf::Message *a3)
{
  uint64_t v5 = sub_100127630();
  v10[0].__r_.__value_.__r.__words[0] = (std::string::size_type)this;
  v10[0].__r_.__value_.__l.__size_ = (std::string::size_type)a2;
  sub_1001282BC(v5 + 112, v10, v10);
  if ((v6 & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/message.cc", 226);
    long long v7 = google::protobuf::internal::LogMessage::operator<<(v10, "Type is already registered: ");
    atomic_ullong v8 = google::protobuf::internal::LogMessage::operator<<(v7, this[1]);
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
}

void sub_100127870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t *google::protobuf::Reflection::RepeatedFieldAccessor(google::protobuf::Reflection *this, const google::protobuf::FieldDescriptor *a2)
{
  if (*((_DWORD *)a2 + 15) != 3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/message.cc", 298);
    char v3 = google::protobuf::internal::LogMessage::operator<<(v20, "CHECK failed: field->is_repeated(): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v23, (const char **)&v3->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
  uint64_t v4 = (std::once_flag::_State_type *)*((void *)a2 + 6);
  if (v4)
  {
    unsigned int v21 = a2;
    uint64_t v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v4, memory_order_acquire) != -1)
    {
      v20[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v22;
      v20[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v21;
      uint64_t v23 = v20;
      std::__call_once(v4, &v23, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  int v5 = *((_DWORD *)a2 + 14);
  switch(v5)
  {
    case 1:
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBDD0, memory_order_acquire) & 1) == 0)
      {
        int v15 = __cxa_guard_acquire(&qword_1001EBDD0);
        uint64_t v10 = &qword_1001EBDC8;
        if (!v15) {
          return v10;
        }
        atomic_ullong v11 = &qword_1001EBDC8;
        qword_1001EBDC8 = (uint64_t)off_1001D1EF0;
        char v12 = &qword_1001EBDD0;
        goto LABEL_53;
      }
      return &qword_1001EBDC8;
    case 2:
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBDC0, memory_order_acquire) & 1) == 0)
      {
        int v16 = __cxa_guard_acquire(&qword_1001EBDC0);
        uint64_t v10 = &qword_1001EBDB8;
        if (!v16) {
          return v10;
        }
        atomic_ullong v11 = &qword_1001EBDB8;
        qword_1001EBDB8 = (uint64_t)off_1001D1E20;
        char v12 = &qword_1001EBDC0;
        goto LABEL_53;
      }
      return &qword_1001EBDB8;
    case 3:
    case 16:
    case 18:
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBDA0, memory_order_acquire) & 1) == 0)
      {
        int v9 = __cxa_guard_acquire(&qword_1001EBDA0);
        uint64_t v10 = &qword_1001EBD98;
        if (!v9) {
          return v10;
        }
        atomic_ullong v11 = &qword_1001EBD98;
        qword_1001EBD98 = (uint64_t)off_1001D1C80;
        char v12 = &qword_1001EBDA0;
        goto LABEL_53;
      }
      return &qword_1001EBD98;
    case 4:
    case 6:
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBDB0, memory_order_acquire) & 1) == 0)
      {
        int v14 = __cxa_guard_acquire(&qword_1001EBDB0);
        uint64_t v10 = &qword_1001EBDA8;
        if (!v14) {
          return v10;
        }
        atomic_ullong v11 = &qword_1001EBDA8;
        qword_1001EBDA8 = (uint64_t)off_1001D1D50;
        char v12 = &qword_1001EBDB0;
        goto LABEL_53;
      }
      return &qword_1001EBDA8;
    case 5:
    case 14:
    case 15:
    case 17:
      sub_100127E10();
      return &qword_1001EBD78;
    case 7:
    case 13:
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBD90, memory_order_acquire) & 1) == 0)
      {
        int v13 = __cxa_guard_acquire(&qword_1001EBD90);
        uint64_t v10 = &qword_1001EBD88;
        if (!v13) {
          return v10;
        }
        atomic_ullong v11 = &qword_1001EBD88;
        qword_1001EBD88 = (uint64_t)off_1001D1BB0;
        char v12 = &qword_1001EBD90;
        goto LABEL_53;
      }
      return &qword_1001EBD88;
    case 8:
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBDE0, memory_order_acquire) & 1) == 0)
      {
        int v17 = __cxa_guard_acquire(&qword_1001EBDE0);
        uint64_t v10 = &qword_1001EBDD8;
        if (!v17) {
          return v10;
        }
        atomic_ullong v11 = &qword_1001EBDD8;
        qword_1001EBDD8 = (uint64_t)off_1001D1FC0;
        char v12 = &qword_1001EBDE0;
        goto LABEL_53;
      }
      return &qword_1001EBDD8;
    case 9:
    case 12:
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBDF0, memory_order_acquire) & 1) == 0)
      {
        int v18 = __cxa_guard_acquire(&qword_1001EBDF0);
        uint64_t v10 = &qword_1001EBDE8;
        if (!v18) {
          return v10;
        }
        atomic_ullong v11 = &qword_1001EBDE8;
        qword_1001EBDE8 = (uint64_t)off_1001D2090;
        char v12 = &qword_1001EBDF0;
        goto LABEL_53;
      }
      return &qword_1001EBDE8;
    case 10:
    case 11:
      atomic_ullong v8 = (std::once_flag::_State_type *)*((void *)a2 + 6);
      if (v8)
      {
        unsigned int v21 = a2;
        uint64_t v22 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
        {
          v20[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v22;
          v20[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v21;
          uint64_t v23 = v20;
          std::__call_once(v8, &v23, (void (__cdecl *)(void *))sub_1000BB820);
        }
        int v5 = *((_DWORD *)a2 + 14);
      }
      if (v5 == 11 && google::protobuf::FieldDescriptor::is_map_message_type(a2))
      {
        if (atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBE00, memory_order_acquire)) {
          return &qword_1001EBDF8;
        }
        atomic_ullong v11 = &qword_1001EBDF8;
        if (!__cxa_guard_acquire(&qword_1001EBE00)) {
          return v11;
        }
        qword_1001EBDF8 = (uint64_t)off_1001D2168;
        __cxa_atexit((void (*)(void *))nullsub_3, &qword_1001EBDF8, (void *)&_mh_execute_header);
        char v12 = &qword_1001EBE00;
LABEL_53:
        __cxa_guard_release(v12);
        return v11;
      }
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBE10, memory_order_acquire) & 1) == 0)
      {
        int v19 = __cxa_guard_acquire(&qword_1001EBE10);
        uint64_t v10 = &qword_1001EBE08;
        if (!v19) {
          return v10;
        }
        atomic_ullong v11 = &qword_1001EBE08;
        qword_1001EBE08 = (uint64_t)off_1001D2238;
        char v12 = &qword_1001EBE10;
        goto LABEL_53;
      }
      return &qword_1001EBE08;
    default:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/message.cc", 326);
      long long v7 = google::protobuf::internal::LogMessage::operator<<(v20, "Should not reach here.");
      google::protobuf::internal::LogFinisher::operator=((int)&v23, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
      return 0;
  }
}

void sub_100127DC8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_100127E10()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBD80, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001EBD80))
  {
    qword_1001EBD78 = (uint64_t)off_1001D1AB8;
    __cxa_guard_release(&qword_1001EBD80);
  }
}

uint64_t google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::NewFromPrototype(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 32))();
}

unint64_t google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::GetArena(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  unint64_t result = v1 & 0xFFFFFFFFFFFFFFFELL;
  if (v1) {
    return *(void *)result;
  }
  return result;
}

uint64_t google::protobuf::internal::GenericTypeHandler<google::protobuf::Message>::GetMaybeArenaPointer(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_100127ECC(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_100127EF8(uint64_t a1)
{
  *(void *)a1 = off_1001D1A78;
  uint64_t v2 = a1 + 8;
  sub_1000D9B88(a1 + 112);
  std::mutex::~mutex((std::mutex *)(a1 + 48));
  sub_1000D9B88(v2);
  return a1;
}

void sub_100127F54(uint64_t a1)
{
  *(void *)a1 = off_1001D1A78;
  uint64_t v2 = a1 + 8;
  sub_1000D9B88(a1 + 112);
  std::mutex::~mutex((std::mutex *)(a1 + 48));
  sub_1000D9B88(v2);
  operator delete();
}

uint64_t sub_100127FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a2;
  char v3 = (std::mutex *)(a1 + 48);
  std::mutex::lock((std::mutex *)(a1 + 48));
  uint64_t v4 = (void *)(a1 + 112);
  int v5 = sub_1001281D0((void *)(a1 + 112), &v23);
  if (v5)
  {
    uint64_t v6 = v5[3];
    std::mutex::unlock(v3);
    if (v6) {
      return v6;
    }
  }
  else
  {
    std::mutex::unlock(v3);
  }
  uint64_t v8 = *(void *)(*(void *)(v23 + 16) + 16);
  if (v8 != google::protobuf::DescriptorPool::generated_pool(v7)) {
    return 0;
  }
  int v9 = (void *)(a1 + 8);
  uint64_t v10 = **(char ***)(v23 + 16);
  if (v10[23] < 0) {
    uint64_t v10 = *(char **)v10;
  }
  sub_1000D7924(v22, v10);
  atomic_ullong v11 = sub_1000DAB80(v9, &v22[0].__r_.__value_.__l.__data_);
  if (!v11 || (uint64_t v12 = v11[4]) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/message.cc", 246);
    int v18 = google::protobuf::internal::LogMessage::operator<<(v22, "File appears to be in generated pool but wasn't registered: ");
    int v19 = google::protobuf::internal::LogMessage::operator<<(v18, **(const std::string::value_type ***)(v23 + 16));
    google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v19->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
    return 0;
  }
  std::mutex::lock(v3);
  int v13 = sub_1001281D0(v4, &v23);
  if (!v13 || (uint64_t v6 = v13[3]) == 0)
  {
    google::protobuf::internal::RegisterFileLevelMetadata(v12);
    int v14 = sub_1001281D0(v4, &v23);
    if (!v14 || (uint64_t v6 = v14[3]) == 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v22, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/message.cc", 264);
      int v15 = google::protobuf::internal::LogMessage::operator<<(v22, "Type appears to be in generated pool but wasn't ");
      int v16 = google::protobuf::internal::LogMessage::operator<<(v15, "registered: ");
      int v17 = google::protobuf::internal::LogMessage::operator<<(v16, *(const std::string::value_type **)(v23 + 8));
      google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v17->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v22[0].__r_.__value_.__l.__data_);
      uint64_t v6 = 0;
    }
  }
  std::mutex::unlock(v3);
  return v6;
}

void sub_10012818C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  std::mutex::unlock(v2);
  _Unwind_Resume(a1);
}

void *sub_1001281D0(void *a1, void *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v4 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v3 >> 47) ^ v3);
  unint64_t v5 = 0x9DDFEA08EB382D69 * (v4 ^ (v4 >> 47));
  uint8x8_t v6 = (uint8x8_t)vcnt_s8(v2);
  v6.i16[0] = vaddlv_u8(v6);
  if (v6.u32[0] > 1uLL)
  {
    unint64_t v7 = v5;
    if (v5 >= *(void *)&v2) {
      unint64_t v7 = v5 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v7 = v5 & (*(void *)&v2 - 1);
  }
  uint64_t v8 = *(void **)(*a1 + 8 * v7);
  if (!v8) {
    return 0;
  }
  unint64_t result = (void *)*v8;
  if (*v8)
  {
    do
    {
      unint64_t v10 = result[1];
      if (v10 == v5)
      {
        if (result[2] == *a2) {
          return result;
        }
      }
      else
      {
        if (v6.u32[0] > 1uLL)
        {
          if (v10 >= *(void *)&v2) {
            v10 %= *(void *)&v2;
          }
        }
        else
        {
          v10 &= *(void *)&v2 - 1;
        }
        if (v10 != v7) {
          return 0;
        }
      }
      unint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

void *sub_1001282BC(uint64_t a1, void *a2, _OWORD *a3)
{
  unint64_t v6 = 0x9DDFEA08EB382D69 * ((8 * *a2 + 8) ^ HIDWORD(*a2));
  unint64_t v7 = 0x9DDFEA08EB382D69 * (HIDWORD(*a2) ^ (v6 >> 47) ^ v6);
  unint64_t v8 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = 0x9DDFEA08EB382D69 * (v7 ^ (v7 >> 47));
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
    }
    else
    {
      unint64_t v3 = v8 & (v9 - 1);
    }
    atomic_ullong v11 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (void *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == *a2) {
            return i;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t i = operator new(0x20uLL);
  void *i = 0;
  i[1] = v8;
  *((_OWORD *)i + sub_1000333D0((uint64_t *)this + 1) = *a3;
  float v14 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v15 = *(float *)(a1 + 32);
  if (!v9 || (float)(v15 * (float)v9) < v14)
  {
    BOOL v16 = 1;
    if (v9 >= 3) {
      BOOL v16 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v17 = v16 | (2 * v9);
    unint64_t v18 = vcvtps_u32_f32(v14 / v15);
    if (v17 <= v18) {
      size_t v19 = v18;
    }
    else {
      size_t v19 = v17;
    }
    sub_1000D98B4(a1, v19);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v20 = *(void *)a1;
  char v21 = *(void **)(*(void *)a1 + 8 * v3);
  if (v21)
  {
    void *i = *v21;
LABEL_38:
    *char v21 = i;
    goto LABEL_39;
  }
  void *i = *(void *)(a1 + 16);
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = i;
  *(void *)(v20 + 8 * v3) = a1 + 16;
  if (*i)
  {
    unint64_t v22 = *(void *)(*i + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v22 >= v9) {
        v22 %= v9;
      }
    }
    else
    {
      v22 &= v9 - 1;
    }
    char v21 = (void *)(*(void *)a1 + 8 * v22);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return i;
}

void sub_1001284FC(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

BOOL sub_100128510(uint64_t a1, _DWORD *a2)
{
  return *a2 == 0;
}

uint64_t sub_100128520(uint64_t a1, unsigned int *a2)
{
  return *a2;
}

uint64_t sub_100128528(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + 4 * a3, a4);
}

void sub_100128558(uint64_t a1, _DWORD *a2)
{
  *a2 = 0;
}

uint64_t sub_100128560(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
  *(_DWORD *)(*(void *)(a2 + 8) + 4 * a3) = result;
  return result;
}

void sub_1001285B4(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  int v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<int>::Reserve(a2, v6 + 1);
    *(_DWORD *)(*((void *)a2 + 1) + 4 * vsub_1000FA614((void *)this + 6) = v5;
  }
  else
  {
    *(_DWORD *)(*((void *)a2 + 1) + 4 * vsub_1000FA614((void *)this + 6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

void sub_100128640(uint64_t a1, _DWORD *a2)
{
}

void sub_100128650(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  int v5 = *(_DWORD *)(v4 + 4 * a3);
  *(_DWORD *)(v4 + 4 * a3) = *(_DWORD *)(v4 + 4 * a4);
  *(_DWORD *)(v4 + 4 * a4) = v5;
}

void sub_100128668(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/reflection_internal.h", 279);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<int>::Swap(a2, a4);
}

void sub_1001286E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001286FC(uint64_t a1)
{
  return (*(int (**)(uint64_t))(*(void *)a1 + 8))(a1);
}

uint64_t sub_100128738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t sub_100128740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3 + 1;
}

BOOL sub_100128748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a3 == a4;
}

uint64_t sub_100128754(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 16))();
}

uint64_t sub_100128778(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100128780(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + 4 * a3, a4);
}

uint64_t sub_1001287B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
  *(_DWORD *)(*(void *)(a2 + 8) + 4 * a3) = result;
  return result;
}

void sub_100128804(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  int v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<unsigned int>::Reserve(a2, v6 + 1);
    *(_DWORD *)(*((void *)a2 + 1) + 4 * vsub_1000FA614((void *)this + 6) = v5;
  }
  else
  {
    *(_DWORD *)(*((void *)a2 + 1) + 4 * vsub_1000FA614((void *)this + 6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

void sub_100128890(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/reflection_internal.h", 279);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<unsigned int>::Swap(a2, a4);
}

void sub_10012890C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100128924(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + 8 * a3, a4);
}

uint64_t sub_100128954(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
  *(void *)(*(void *)(a2 + 8) + 8 * a3) = result;
  return result;
}

void sub_1001289A8(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  uint64_t v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<long long>::Reserve(a2, v6 + 1);
    *(void *)(*((void *)a2 + 1) + 8 * vsub_1000FA614((void *)this + 6) = v5;
  }
  else
  {
    *(void *)(*((void *)a2 + 1) + 8 * vsub_1000FA614((void *)this + 6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

void sub_100128A34(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(v4 + 8 * a3);
  *(void *)(v4 + 8 * a3) = *(void *)(v4 + 8 * a4);
  *(void *)(v4 + 8 * a4) = v5;
}

void sub_100128A4C(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/reflection_internal.h", 279);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<long long>::Swap(a2, a4);
}

void sub_100128AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100128AE0(uint64_t a1, uint64_t a2)
{
  return *(void *)a2;
}

uint64_t sub_100128AE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + 8 * a3, a4);
}

uint64_t sub_100128B18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
  *(void *)(*(void *)(a2 + 8) + 8 * a3) = result;
  return result;
}

void sub_100128B6C(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  uint64_t v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<unsigned long long>::Reserve(a2, v6 + 1);
    *(void *)(*((void *)a2 + 1) + 8 * vsub_1000FA614((void *)this + 6) = v5;
  }
  else
  {
    *(void *)(*((void *)a2 + 1) + 8 * vsub_1000FA614((void *)this + 6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

void sub_100128BF8(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/reflection_internal.h", 279);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<unsigned long long>::Swap(a2, a4);
}

void sub_100128C74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100128C8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + 4 * a3, a4);
}

void sub_100128CBC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(float *)(*(void *)(a2 + 8) + 4 * a3) = (*(float (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
}

void sub_100128D10(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  float v4 = (*(float (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  float v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<float>::Reserve(a2, v6 + 1);
    *(float *)(*((void *)a2 + 1) + 4 * vsub_1000FA614((void *)this + 6) = v5;
  }
  else
  {
    *(float *)(*((void *)a2 + 1) + 4 * vsub_1000FA614((void *)this + 6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

float sub_100128DA4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  float result = *(float *)(v4 + 4 * a3);
  *(_DWORD *)(v4 + 4 * a3) = *(_DWORD *)(v4 + 4 * a4);
  *(float *)(v4 + 4 * a4) = result;
  return result;
}

void sub_100128DBC(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/reflection_internal.h", 279);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<float>::Swap(a2, a4);
}

void sub_100128E38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

float sub_100128E50(uint64_t a1, uint64_t a2)
{
  return *(float *)a2;
}

uint64_t sub_100128E58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + 8 * a3, a4);
}

void sub_100128E88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(double *)(*(void *)(a2 + 8) + 8 * a3) = (*(double (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
}

void sub_100128EDC(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  double v4 = (*(double (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  double v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<double>::Reserve(a2, v6 + 1);
    *(double *)(*((void *)a2 + 1) + 8 * vsub_1000FA614((void *)this + 6) = v5;
  }
  else
  {
    *(double *)(*((void *)a2 + 1) + 8 * vsub_1000FA614((void *)this + 6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

double sub_100128F70(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  double result = *(double *)(v4 + 8 * a3);
  *(void *)(v4 + 8 * a3) = *(void *)(v4 + 8 * a4);
  *(double *)(v4 + 8 * a4) = result;
  return result;
}

void sub_100128F88(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/reflection_internal.h", 279);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<double>::Swap(a2, a4);
}

void sub_100129004(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

double sub_10012901C(uint64_t a1, uint64_t a2)
{
  return *(double *)a2;
}

uint64_t sub_100129024(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)a1 + 136))(a1, *(void *)(a2 + 8) + a3, a4);
}

uint64_t sub_100129054(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a4);
  *(unsigned char *)(*(void *)(a2 + 8) + a3) = result;
  return result;
}

void sub_1001290A8(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  char v4 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  char v5 = v4;
  uint64_t v6 = *a2;
  if (v6 == a2[1])
  {
    unsigned int v7 = v6 + 1;
    google::protobuf::RepeatedField<BOOL>::Reserve(a2, v6 + 1);
    *(unsigned char *)(*((void *)a2 + 1) + vsub_1000FA614((void *)this + 6) = v5;
  }
  else
  {
    *(unsigned char *)(*((void *)a2 + 1) + vsub_1000FA614((void *)this + 6) = v4;
    unsigned int v7 = v6 + 1;
  }
  *a2 = v7;
}

void sub_100129134(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(v4 + a3);
  *(unsigned char *)(v4 + a3) = *(unsigned char *)(v4 + a4);
  *(unsigned char *)(v4 + a4) = v5;
}

void sub_10012914C(uint64_t a1, int *a2, uint64_t a3, int *a4)
{
  if (a1 != a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/reflection_internal.h", 279);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v8, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v7, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
  }
  google::protobuf::RepeatedField<BOOL>::Swap(a2, a4);
}

void sub_1001291C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001291E0(uint64_t a1, unsigned __int8 *a2)
{
  return *a2;
}

BOOL sub_1001291E8(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)(a2 + 8) == 0;
}

uint64_t sub_1001291F8(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + 8);
}

uint64_t sub_100129200(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)a1 + 144))(a1, *(void *)(*(void *)(a2 + 16) + 8 * a3 + 8), a4);
}

uint64_t sub_100129234(uint64_t a1, uint64_t a2)
{
  return sub_1000F9B0C(a2);
}

uint64_t sub_10012923C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)a1 + 136))(a1, a4, *(void *)(*(void *)(a2 + 16) + 8 * a3 + 8));
}

unsigned int *sub_100129270(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, a3, v6);
  return sub_1001295AC(a2, v6);
}

void sub_100129314(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(int *)(a2 + 8) - 1;
  *(_DWORD *)(a2 + 8) = v3;
  uint64_t v4 = *(void *)(v2 + 8 * v3 + 8);
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)uint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
  }
  else
  {
    *(unsigned char *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 23) = 0;
  }
}

void sub_100129350(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4 = *(void *)(a2 + 16) + 8;
  uint64_t v5 = *(void *)(v4 + 8 * a3);
  *(void *)(v4 + 8 * a3) = *(void *)(v4 + 8 * a4);
  *(void *)(v4 + 8 * a4) = v5;
}

__n128 sub_10012936C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3)
  {
    if (a2 != (unint64_t *)a4)
    {
      if (*(void *)a4 == *a2)
      {
        unint64_t v14 = a2[1];
        unint64_t v15 = a2[2];
        __n128 result = *(__n128 *)(a4 + 8);
        *(__n128 *)(a2 + sub_1000333D0((uint64_t *)this + 1) = result;
        *(void *)(a4 + 8) = v14;
        *(void *)(a4 + 1sub_1000FA614((void *)this + 6) = v15;
      }
      else
      {
        sub_10012997C((uint64_t)a2, (unint64_t *)a4);
      }
    }
  }
  else
  {
    uint64_t v18 = 0;
    long long v19 = 0uLL;
    if (&v18 != (uint64_t *)a2)
    {
      if (*a2)
      {
        sub_10012997C((uint64_t)&v18, a2);
      }
      else
      {
        long long v19 = *(_OWORD *)(a2 + 1);
        a2[1] = 0;
        a2[2] = 0;
      }
    }
    int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a3 + 8))(a3, a4);
    if (v9 >= 1)
    {
      uint64_t v10 = 0;
      do
      {
        sub_1001298D0(a3, a4, v10, (uint64_t)__p);
        sub_100129820(a1, (uint64_t)a2, (uint64_t)__p);
        if (v17 < 0) {
          operator delete(__p[0]);
        }
        uint64_t v10 = (v10 + 1);
      }
      while (v9 != v10);
    }
    uint64_t v11 = *((unsigned int *)a2 + 2);
    (*(void (**)(uint64_t, uint64_t))(*(void *)a3 + 24))(a3, a4);
    if ((int)v11 >= 1)
    {
      uint64_t v12 = 0;
      uint64_t v13 = 8 * v11;
      do
      {
        sub_100129820(a3, a4, *(void *)(*((void *)&v19 + 1) + v12 + 8));
        v12 += 8;
      }
      while (v13 != v12);
    }
    sub_1000F9C98(&v18);
  }
  return result;
}

void sub_100129534(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15)
{
}

void sub_100129570()
{
}

std::string *sub_1001295A4(int a1, const std::string *a2, std::string *this)
{
  return std::string::operator=(this, a2);
}

unsigned int *sub_1001295AC(unsigned int *result, uint64_t a2)
{
  if (*(void *)result) {
    return sub_10012960C(result, a2, 0, *(char **)result);
  }
  uint64_t v2 = (int *)*((void *)result + 2);
  if (!v2) {
    return sub_10012960C(result, a2, 0, *(char **)result);
  }
  uint64_t v3 = *v2;
  if ((int)v3 >= (int)result[3]) {
    return sub_10012960C(result, a2, 0, *(char **)result);
  }
  uint64_t v4 = v2 + 2;
  uint64_t v5 = (int)result[2];
  if ((int)v5 < (int)v3) {
    *(void *)&v4[2 * v3] = *(void *)&v4[2 * v5];
  }
  *(void *)&v4[2 * v5] = a2;
  result[2] = v5 + 1;
  ++**((_DWORD **)result + 2);
  return result;
}

unsigned int *sub_10012960C(unsigned int *a1, uint64_t a2, char *a3, char *a4)
{
  if (!a3 && a4)
  {
    sub_1001296BC(a4, (void *)a2);
LABEL_9:
    char v7 = (std::string *)a2;
    goto LABEL_10;
  }
  if (a4 == a3) {
    goto LABEL_9;
  }
  char v7 = (std::string *)sub_1000BBB38((google::protobuf::Arena *)a4);
  std::string::operator=(v7, (const std::string *)a2);
  if (!a3)
  {
    if (*(char *)(a2 + 23) < 0) {
      operator delete(*(void **)a2);
    }
    operator delete();
  }
LABEL_10:
  return sub_1001296D8(a1, (uint64_t)v7);
}

char *sub_1001296BC(char *result, void *a2)
{
  if (a2) {
    return google::protobuf::internal::ArenaImpl::AddCleanup((google::protobuf::internal::ArenaImpl *)result, a2, (void (*)(void *))sub_1001297C4);
  }
  return result;
}

unsigned int *sub_1001296D8(unsigned int *this, uint64_t a2)
{
  uint64_t v3 = this;
  uint64_t v4 = (int *)*((void *)this + 2);
  if (!v4)
  {
    int v5 = this[3];
    goto LABEL_13;
  }
  int v5 = this[2];
  unsigned int v6 = this[3];
  if (v5 == v6)
  {
LABEL_13:
    this = google::protobuf::internal::RepeatedPtrFieldBase::Reserve(this, v5 + 1);
    goto LABEL_14;
  }
  uint64_t v7 = *v4;
  if (v7 != v6)
  {
    if (v5 >= (int)v7)
    {
      int v10 = v7 + 1;
      goto LABEL_15;
    }
    *(void *)&v4[2 * v7 + 2] = *(void *)&v4[2 * v5 + 2];
LABEL_14:
    uint64_t v4 = (int *)*((void *)v3 + 2);
    int v10 = *v4 + 1;
LABEL_15:
    *uint64_t v4 = v10;
    goto LABEL_16;
  }
  uint64_t v8 = *(void *)&v4[2 * v5 + 2];
  if (v8) {
    BOOL v9 = *(void *)this == 0;
  }
  else {
    BOOL v9 = 0;
  }
  if (v9)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    operator delete();
  }
LABEL_16:
  uint64_t v11 = (int)v3[2];
  v3[2] = v11 + 1;
  *(void *)&v4[2 * v11 + 2] = a2;
  return this;
}

uint64_t sub_1001297C4(uint64_t result)
{
  if (result)
  {
    if (*(char *)(result + 23) < 0) {
      operator delete(*(void **)result);
    }
    operator delete();
  }
  return result;
}

void sub_100129820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0)
  {
    sub_1000BB834(__p, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)a3;
    uint64_t v6 = *(void *)(a3 + 16);
  }
  (*(void (**)(uint64_t, uint64_t, void **))(*(void *)a1 + 40))(a1, a2, __p);
  if (SHIBYTE(v6) < 0) {
    operator delete(__p[0]);
  }
}

void sub_1001298B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001298D0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  __p[1] = 0;
  uint64_t v8 = 0;
  __p[0] = 0;
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void **))(*(void *)a1 + 16))(a1, a2, a3, __p);
  if (*(char *)(v5 + 23) < 0)
  {
    sub_1000BB834((unsigned char *)a4, *(void **)v5, *(void *)(v5 + 8));
  }
  else
  {
    long long v6 = *(_OWORD *)v5;
    *(void *)(a4 + 1sub_1000FA614((void *)this + 6) = *(void *)(v5 + 16);
    *(_OWORD *)a4 = v6;
  }
  if (SHIBYTE(v8) < 0) {
    operator delete(__p[0]);
  }
}

void sub_100129960(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10012997C(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  v17.__r_.__value_.__r.__words[2] = 0;
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v4;
  unsigned int v5 = *(_DWORD *)(a1 + 8);
  if (v5)
  {
    long long v6 = (const std::string **)(*(void *)(a1 + 16) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v17, v5);
    sub_1000F9F28(&v17, (std::string **)v7, v6, v5, *(_DWORD *)v17.__r_.__value_.__r.__words[2] - LODWORD(v17.__r_.__value_.__r.__words[1]));
    signed int v8 = LODWORD(v17.__r_.__value_.__r.__words[1]) + v5;
    LODWORD(v17.__r_.__value_.__r.__words[1]) = v8;
    if (*(_DWORD *)v17.__r_.__value_.__r.__words[2] < v8) {
      *(_DWORD *)v17.__r_.__value_.__r.__words[2] = v8;
    }
  }
  sub_1000F9B0C(a1);
  int v10 = a2 + 1;
  unsigned int v9 = *((_DWORD *)a2 + 2);
  if (v9)
  {
    uint64_t v11 = (const std::string **)(a2[2] + 8);
    uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)a1, v9);
    sub_1000F9F28((std::string *)a1, (std::string **)v12, v11, v9, **(_DWORD **)(a1 + 16) - *(_DWORD *)(a1 + 8));
    signed int v13 = *(_DWORD *)(a1 + 8) + v9;
    *(_DWORD *)(a1 + 8) = v13;
    unint64_t v14 = *(signed int **)(a1 + 16);
    if (*v14 < v13) {
      signed int *v14 = v13;
    }
  }
  std::string::size_type v15 = *v10;
  std::string::size_type v16 = v10[1];
  *(_OWORD *)int v10 = *(_OWORD *)&v17.__r_.__value_.__r.__words[1];
  v17.__r_.__value_.__l.__size_ = v15;
  v17.__r_.__value_.__r.__words[2] = v16;
  sub_1000F9C98(&v17);
}

BOOL sub_100129AB0(int a1, google::protobuf::internal::MapFieldBase *this)
{
  return *(_DWORD *)(google::protobuf::internal::MapFieldBase::GetRepeatedField(this) + 8) == 0;
}

uint64_t sub_100129AD8(int a1, google::protobuf::internal::MapFieldBase *this)
{
  return *(unsigned int *)(google::protobuf::internal::MapFieldBase::GetRepeatedField(this) + 8);
}

uint64_t sub_100129AF8(int a1, google::protobuf::internal::MapFieldBase *this, int a3)
{
  return *(void *)(*(void *)(google::protobuf::internal::MapFieldBase::GetRepeatedField(this) + 16) + 8 * a3 + 8);
}

uint64_t sub_100129B2C(int a1, google::protobuf::internal::MapFieldBase *this)
{
  uint64_t result = google::protobuf::internal::MapFieldBase::MutableRepeatedField(this);
  uint64_t v3 = *(unsigned int *)(result + 8);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = result;
    unsigned int v5 = (uint64_t *)(*(void *)(result + 16) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
      --v3;
    }
    while (v3);
    *(_DWORD *)(v4 + 8) = 0;
  }
  return result;
}

uint64_t sub_100129BA4(int a1, google::protobuf::internal::MapFieldBase *this, int a3)
{
  uint64_t v3 = *(uint64_t (**)(void))(**(void **)(*(void *)(google::protobuf::internal::MapFieldBase::MutableRepeatedField(this)
                                                     + 16)
                                         + 8 * a3
                                         + 8)
                           + 112);
  return v3();
}

unsigned int *sub_100129C10(uint64_t a1, google::protobuf::internal::MapFieldBase *a2, uint64_t a3)
{
  unsigned int v5 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a3 + 24))(a3);
  (*(void (**)(void *, uint64_t))(*(void *)v5 + 112))(v5, a3);
  uint64_t v6 = google::protobuf::internal::MapFieldBase::MutableRepeatedField(a2);
  return sub_100114440(v6, v5);
}

uint64_t sub_100129CAC(int a1, google::protobuf::internal::MapFieldBase *this)
{
  uint64_t v2 = google::protobuf::internal::MapFieldBase::MutableRepeatedField(this);
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *(int *)(v2 + 8) - 1;
  *(_DWORD *)(v2 + 8) = v4;
  unsigned int v5 = *(uint64_t (**)(void))(**(void **)(v3 + 8 * v4 + 8) + 40);
  return v5();
}

uint64_t sub_100129D10(int a1, google::protobuf::internal::MapFieldBase *this, int a3, int a4)
{
  uint64_t result = google::protobuf::internal::MapFieldBase::MutableRepeatedField(this);
  uint64_t v7 = *(void *)(result + 16) + 8;
  uint64_t v8 = *(void *)(v7 + 8 * a3);
  *(void *)(v7 + 8 * a3) = *(void *)(v7 + 8 * a4);
  *(void *)(v7 + 8 * a4) = v8;
  return result;
}

__n128 sub_100129D54(uint64_t a1, google::protobuf::internal::MapFieldBase *this, uint64_t a3, google::protobuf::internal::MapFieldBase *a4)
{
  if (a1 != a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/reflection_internal.h", 235);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  uint64_t v7 = (void *)google::protobuf::internal::MapFieldBase::MutableRepeatedField(this);
  uint64_t v8 = google::protobuf::internal::MapFieldBase::MutableRepeatedField(a4);
  if (v7 != (void *)v8)
  {
    if (*(void *)v8 == *v7)
    {
      uint64_t v10 = v7[1];
      uint64_t v11 = v7[2];
      __n128 result = *(__n128 *)(v8 + 8);
      *(__n128 *)(v7 + sub_1000333D0((uint64_t *)this + 1) = result;
      *(void *)(v8 + 8) = v10;
      *(void *)(v8 + 1sub_1000FA614((void *)this + 6) = v11;
    }
    else
    {
      sub_100129E8C((google::protobuf::internal::RepeatedPtrFieldBase *)v7, (void *)v8);
    }
  }
  return result;
}

void sub_100129E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_100129E28()
{
}

uint64_t sub_100129E3C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a2 + 24))(a2);
}

uint64_t sub_100129E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a3 + 112))(a3);
}

void sub_100129E8C(google::protobuf::internal::RepeatedPtrFieldBase *this, void *a2)
{
  uint64_t v4 = *a2;
  long long v21 = 0uLL;
  uint64_t v20 = v4;
  unsigned int v5 = *((_DWORD *)this + 2);
  if (v5)
  {
    uint64_t v6 = (uint64_t *)(*((void *)this + 2) + 8);
    uint64_t v7 = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v20, v5);
    sub_10012A000((uint64_t)&v20, v7, v6, v5, **((_DWORD **)&v21 + 1) - v21);
    int v8 = v21 + v5;
    LODWORD(v2sub_1000333D0((uint64_t *)this + 1) = v8;
    if (**((_DWORD **)&v21 + 1) < v8) {
      **((_DWORD **)&v21 + sub_1000333D0((uint64_t *)this + 1) = v8;
    }
    uint64_t v9 = *((unsigned int *)this + 2);
    if ((int)v9 >= 1)
    {
      uint64_t v10 = (uint64_t *)(*((void *)this + 2) + 8);
      do
      {
        uint64_t v11 = *v10++;
        (*(void (**)(uint64_t))(*(void *)v11 + 40))(v11);
        --v9;
      }
      while (v9);
      *((_DWORD *)this + sub_1000FACE4((void *)this + 2) = 0;
    }
  }
  signed int v13 = a2 + 1;
  unsigned int v12 = *((_DWORD *)a2 + 2);
  if (v12)
  {
    unint64_t v14 = (uint64_t *)(a2[2] + 8);
    std::string::size_type v15 = (uint64_t *)google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(this, v12);
    sub_10012A000((uint64_t)this, v15, v14, v12, **((_DWORD **)this + 2) - *((_DWORD *)this + 2));
    signed int v16 = *((_DWORD *)this + 2) + v12;
    *((_DWORD *)this + sub_1000FACE4((void *)this + 2) = v16;
    std::string v17 = (signed int *)*((void *)this + 2);
    if (*v17 < v16) {
      signed int *v17 = v16;
    }
  }
  uint64_t v18 = *v13;
  uint64_t v19 = v13[1];
  *(_OWORD *)signed int v13 = v21;
  *(void *)&long long v21 = v18;
  *((void *)&v21 + sub_1000333D0((uint64_t *)this + 1) = v19;
  sub_100101C14(&v20);
}

uint64_t sub_10012A000(uint64_t result, uint64_t *a2, uint64_t *a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (uint64_t *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    uint64_t v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      uint64_t v13 = v14;
      uint64_t v15 = *v12++;
      __n128 result = sub_1001145D4(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v21 + 32))(v21, v18);
      __n128 result = sub_1001145D4(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

uint64_t sub_10012A0D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)a1 + 144))(a1, *(void *)(*(void *)(a2 + 16) + 8 * a3 + 8), a4);
}

uint64_t sub_10012A108(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(unsigned int *)(a2 + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a2 + 16) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 40))(v5);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a2 + 8) = 0;
  }
  return result;
}

uint64_t sub_10012A178(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)a1 + 136))(a1, a4, *(void *)(*(void *)(a2 + 16) + 8 * a3 + 8));
}

unsigned int *sub_10012A1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 128))(a1, a3);
  (*(void (**)(uint64_t, uint64_t, void *))(*(void *)a1 + 136))(a1, a3, v6);
  return sub_100114440(a2, v6);
}

uint64_t sub_10012A250(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(int *)(a2 + 8) - 1;
  *(_DWORD *)(a2 + 8) = v3;
  return (*(uint64_t (**)(void))(**(void **)(v2 + 8 * v3 + 8) + 40))();
}

__n128 sub_10012A28C(uint64_t a1, google::protobuf::internal::RepeatedPtrFieldBase *this, uint64_t a3, uint64_t a4)
{
  if (a1 != a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/reflection_internal.h", 343);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: this == other_mutator: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  if (this != (google::protobuf::internal::RepeatedPtrFieldBase *)a4)
  {
    if (*(void *)a4 == *(void *)this)
    {
      uint64_t v8 = *((void *)this + 1);
      uint64_t v9 = *((void *)this + 2);
      __n128 result = *(__n128 *)(a4 + 8);
      *(__n128 *)((char *)this + 8) = result;
      *(void *)(a4 + 8) = v8;
      *(void *)(a4 + 1sub_1000FA614((void *)this + 6) = v9;
    }
    else
    {
      sub_100129E8C(this, (void *)a4);
    }
  }
  return result;
}

void sub_10012A334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_10012A34C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/timestamp.pb.cc", a4);
  qword_1001EDE08 = 0;
  unk_1001EDE10 = 0;
  google::protobuf::_Timestamp_default_instance_ = (uint64_t)off_1001D2320;
  qword_1001EDE18 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Timestamp_default_instance_, v4);
}

void google::protobuf::Timestamp::~Timestamp(google::protobuf::Timestamp *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t google::protobuf::Timestamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::Timestamp::Clear(google::protobuf::Timestamp *this)
{
  char v2 = *((unsigned char *)this + 8);
  __n128 result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + 4) = 0;
  result[1] = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Timestamp::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v25 = a2;
  if ((sub_1000355B8(a3, &v25, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = (google::protobuf::internal *)((char *)v25 + 1);
      unsigned int v8 = *(unsigned __int8 *)v25;
      if ((*(char *)v25 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v25, (const char *)(v9 - 128));
      int v25 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v7 = TagFallback;
      unsigned int v8 = v20;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 16) {
          goto LABEL_13;
        }
        uint64_t v14 = (google::protobuf::internal *)((char *)v7 + 1);
        LODWORD(v13) = *(unsigned __int8 *)v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_25;
        }
        int v15 = *(char *)v14;
        unint64_t v13 = v13 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          uint64_t v14 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_25:
          int v25 = v14;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_30;
        }
        uint64_t v21 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, v13);
        int v25 = v21;
        *(_DWORD *)(a1 + 24) = v22;
        if (!v21) {
          return 0;
        }
      }
      else
      {
        if (v8 >> 3 != 1 || v8 != 8)
        {
LABEL_13:
          if (v8) {
            BOOL v11 = (v8 & 7) == 4;
          }
          else {
            BOOL v11 = 1;
          }
          if (v11)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fany_2eproto, 0) = v8 - 1;
            return v25;
          }
          if (*v6)
          {
            unsigned int v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v12 = sub_10003562C((unint64_t *)(a1 + 8));
            uint64_t v7 = v25;
          }
          int v25 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
          if (!v25) {
            return 0;
          }
          goto LABEL_30;
        }
        BOOL v16 = (google::protobuf::internal *)((char *)v7 + 1);
        unint64_t v17 = *(unsigned __int8 *)v7;
        if ((*(char *)v7 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v18 = *(char *)v16;
        unint64_t v17 = v17 + (v18 << 7) - 128;
        if ((v18 & 0x80000000) == 0)
        {
          BOOL v16 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_29:
          int v25 = v16;
          *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = v17;
          goto LABEL_30;
        }
        uint64_t v23 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, v17);
        int v25 = v23;
        *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = v24;
        if (!v23) {
          return 0;
        }
      }
LABEL_30:
      if (sub_1000355B8(a3, &v25, *(_DWORD *)(a3 + 92))) {
        return v25;
      }
    }
    uint64_t v7 = (google::protobuf::internal *)((char *)v25 + 2);
LABEL_7:
    int v25 = v7;
    goto LABEL_8;
  }
  return v25;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Timestamp::_InternalSerialize(google::protobuf::Timestamp *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v6 = *((void *)this + 2);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unint64_t v6 = *((void *)this + 2);
    }
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unint64_t v8 = v7 >> 7;
          ++a2;
          unint64_t v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  unsigned int v10 = *((_DWORD *)this + 6);
  if (v10)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unsigned int v10 = *((_DWORD *)this + 6);
    }
    *a2 = 16;
    if (v10 > 0x7F)
    {
      a2[1] = v10 | 0x80;
      unint64_t v11 = (unint64_t)(int)v10 >> 7;
      if (v10 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
          unint64_t v12 = v11 >> 7;
          ++a2;
          unint64_t v13 = v11 >> 14;
          v11 >>= 7;
        }
        while (v13);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v12;
      }
      else
      {
        a2[2] = v11;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v10;
      a2 += 2;
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::Timestamp::ByteSizeLong(google::protobuf::Timestamp *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)(v2 + 1);
  }
  else {
    uint64_t v3 = 0;
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v5);
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Timestamp *)((char *)this + 8), v3, (_DWORD *)this + 7);
  }
  *((_DWORD *)this + 7) = v3;
  return (char *)v3;
}

void google::protobuf::Timestamp::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::Timestamp::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **google::protobuf::Timestamp::MergeFrom(void **this, const google::protobuf::Timestamp *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  uint64_t v5 = (void *)*((void *)a2 + 2);
  if (v5) {
    v3[2] = v5;
  }
  int v6 = *((_DWORD *)a2 + 6);
  if (v6) {
    *((_DWORD *)v3 + sub_1000FA614((void *)this + 6) = v6;
  }
  return this;
}

void google::protobuf::Timestamp::CopyFrom(google::protobuf::Timestamp *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    uint64_t v5 = (char *)this + 8;
    *((_DWORD *)v5 + 4) = 0;
    *((void *)v5 + sub_1000333D0((uint64_t *)this + 1) = 0;
    if (v6) {
      sub_100035820((unint64_t *)v5);
    }
    google::protobuf::Timestamp::MergeFrom((void **)this, lpsrc);
  }
}

uint64_t google::protobuf::Timestamp::IsInitialized(google::protobuf::Timestamp *this)
{
  return 1;
}

uint64_t google::protobuf::Timestamp::GetMetadata(google::protobuf::Timestamp *this)
{
  return *off_1001EAF38;
}

void *sub_10012A9BC(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  __n128 result = sub_10012AA40(this, 1);
  *__n128 result = off_1001D2320;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_10012AA28()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Timestamp>(0);
}

uint64_t sub_10012AA30(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Timestamp>(a2);
}

uint64_t sub_10012AA38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

void *sub_10012AA40(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_10012AAF8);
}

uint64_t *sub_10012AAF8(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void sub_10012AB18()
{
}

uint64_t google::protobuf::internal::MergeFromImpl<false>(char *__src, int64_t __n, google::protobuf::MessageLite *a3, char a4)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v13 = 0x7FFFFFFF00000000;
  int v14 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
  unsigned int v15 = 0x80000000;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  char v6 = sub_100109DF0((uint64_t)v9, __src, __n);
  if ((*(uint64_t (**)(google::protobuf::MessageLite *, char *, unsigned char *))(*(void *)a3 + 88))(a3, v6, v9)) {
    BOOL v7 = v13 == 0;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    if ((a4 & 2) != 0
      || ((*(uint64_t (**)(google::protobuf::MessageLite *))(*(void *)a3 + 48))(a3) & 1) != 0)
    {
      return 1;
    }
    google::protobuf::MessageLite::LogInitializationErrorMessage(a3);
  }
  return 0;
}

{
  return google::protobuf::internal::MergeFromImpl<false>(__src, __n, a3, a4);
}

void google::protobuf::MessageLite::LogInitializationErrorMessage(google::protobuf::MessageLite *this)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v8, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/message_lite.cc", 133);
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "Can't ");
  std::string::append(&__p, "parse");
  std::string::append(&__p, " message of type \"");
  (*(void (**)(std::string::value_type **__return_ptr, google::protobuf::MessageLite *))(*(void *)this
                                                                                                  + 16))(&v9, this);
  if ((v11 & 0x80u) == 0) {
    uint64_t v2 = (const std::string::value_type *)&v9;
  }
  else {
    uint64_t v2 = v9;
  }
  if ((v11 & 0x80u) == 0) {
    std::string::size_type v3 = v11;
  }
  else {
    std::string::size_type v3 = v10;
  }
  std::string::append(&__p, v2, v3);
  if ((char)v11 < 0) {
    operator delete(v9);
  }
  std::string::append(&__p, "\" because it is missing required fields: ");
  (*(void (**)(std::string::value_type **__return_ptr, google::protobuf::MessageLite *))(*(void *)this
                                                                                                  + 56))(&v9, this);
  if ((v11 & 0x80u) == 0) {
    uint64_t v4 = (const std::string::value_type *)&v9;
  }
  else {
    uint64_t v4 = v9;
  }
  if ((v11 & 0x80u) == 0) {
    std::string::size_type v5 = v11;
  }
  else {
    std::string::size_type v5 = v10;
  }
  std::string::append(&__p, v4, v5);
  if ((char)v11 < 0) {
    operator delete(v9);
  }
  char v6 = google::protobuf::internal::LogMessage::operator<<(v8, (const std::string::value_type *)&__p);
  google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v6->__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v8[0].__r_.__value_.__l.__data_);
}

void sub_10012ADB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  google::protobuf::internal::LogMessage::~LogMessage(&a15);
  _Unwind_Resume(a1);
}

uint64_t sub_10012AE08(google::protobuf::MessageLite *a1, uint64_t *a2)
{
  (*(void (**)(google::protobuf::MessageLite *))(*(void *)a1 + 40))(a1);
  sub_1000BB974(v6, a2, v4);
  return google::protobuf::internal::MergeFromImpl<false>(v6[0], (int64_t)v6[1], a1, 1);
}

uint64_t google::protobuf::MessageLite::ParseFromArray(google::protobuf::MessageLite *this, char *a2, int a3)
{
  int64_t v5 = a3;
  (*(void (**)(google::protobuf::MessageLite *))(*(void *)this + 40))(this);
  return google::protobuf::internal::MergeFromImpl<false>(a2, v5, this, 1);
}

BOOL google::protobuf::MessageLite::AppendPartialToString(uint64_t a1, std::string *a2)
{
  uint64_t v2 = a2;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
    std::string::size_type size = a2->__r_.__value_.__l.__size_;
  }
  else {
    std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  unint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 72))(a1);
  uint64_t v6 = v5;
  unint64_t v7 = v5 >> 31;
  if (v5 >> 31)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/message_lite.cc", 457);
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
    unint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v15, (const std::string::value_type *)__p);
    unint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v8, " exceeded maximum protobuf size of 2GB: ");
    std::string::size_type v10 = google::protobuf::internal::LogMessage::operator<<(v9, v6);
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v10->__r_.__value_.__l.__data_);
    if (v14 < 0) {
      operator delete(__p[0]);
    }
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  else
  {
    std::string::resize(v2, v5 + size, 0);
    if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0) {
      uint64_t v2 = (std::string *)v2->__r_.__value_.__r.__words[0];
    }
    *(_OWORD *)&v15[0].__r_.__value_.__l.__data_ = (unint64_t)v2 + size + v6;
    uint64_t v16 = 0;
    __int16 v17 = 0;
    char v18 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ & 1;
    (*(void (**)(uint64_t))(*(void *)a1 + 96))(a1);
  }
  return v7 == 0;
}

void sub_10012B0A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  google::protobuf::internal::LogMessage::~LogMessage(&a17);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::MessageLite::SerializeToString(uint64_t a1, std::string *a2)
{
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    *a2->__r_.__value_.__l.__data_ = 0;
    a2->__r_.__value_.__l.__size_ = 0;
  }
  else
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = 0;
  }
  return google::protobuf::MessageLite::AppendPartialToString(a1, a2);
}

BOOL google::protobuf::MessageLite::SerializeAsString@<W0>(google::protobuf::MessageLite *this@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 1sub_1000FA614((void *)this + 6) = 0;
  BOOL result = google::protobuf::MessageLite::AppendPartialToString((uint64_t)this, (std::string *)a2);
  if (!result)
  {
    if (*(char *)(a2 + 23) < 0)
    {
      **(unsigned char **)a2 = 0;
      *(void *)(a2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)a2 = 0;
      *(unsigned char *)(a2 + 23) = 0;
    }
  }
  return result;
}

void sub_10012B150(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::internal::GenericTypeHandler<std::string>::Merge(std::string *__str, std::string *this)
{
  return std::string::operator=(this, __str);
}

void google::protobuf::internal::OnShutdownRun(google::protobuf::internal *this, void (*a2)(const void *), const void *a3)
{
  uint64_t v5 = sub_10012B2B0();
  std::mutex::lock((std::mutex *)(v5 + 24));
  uint64_t v6 = *(void **)(v5 + 8);
  unint64_t v7 = *(void *)(v5 + 16);
  if ((unint64_t)v6 >= v7)
  {
    uint64_t v9 = ((uint64_t)v6 - *(void *)v5) >> 4;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 60) {
      sub_100078F84();
    }
    uint64_t v11 = v7 - *(void *)v5;
    if (v11 >> 3 > v10) {
      unint64_t v10 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12) {
      uint64_t v13 = (char *)sub_10007902C(v5 + 16, v12);
    }
    else {
      uint64_t v13 = 0;
    }
    char v14 = &v13[16 * v9];
    unsigned int v15 = &v13[16 * v12];
    *(void *)char v14 = this;
    *((void *)v14 + sub_1000333D0((uint64_t *)this + 1) = a2;
    unint64_t v8 = v14 + 16;
    __int16 v17 = *(char **)v5;
    uint64_t v16 = *(char **)(v5 + 8);
    if (v16 != *(char **)v5)
    {
      do
      {
        *((_OWORD *)v14 - sub_1000333D0((uint64_t *)this + 1) = *((_OWORD *)v16 - 1);
        v14 -= 16;
        v16 -= 16;
      }
      while (v16 != v17);
      uint64_t v16 = *(char **)v5;
    }
    *(void *)uint64_t v5 = v14;
    *(void *)(v5 + 8) = v8;
    *(void *)(v5 + 1sub_1000FA614((void *)this + 6) = v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    void *v6 = this;
    v6[1] = a2;
    unint64_t v8 = v6 + 2;
  }
  *(void *)(v5 + 8) = v8;
  std::mutex::unlock((std::mutex *)(v5 + 24));
}

void sub_10012B29C(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_10012B2B0()
{
  {
    operator new();
  }
  return google::protobuf::internal::ShutdownData::get(void)::data;
}

void sub_10012B344(_Unwind_Exception *a1)
{
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::EpsCopyInputStream::Next(google::protobuf::internal::EpsCopyInputStream *this)
{
  uint64_t v2 = (google::protobuf::internal::EpsCopyInputStream *)*((void *)this + 2);
  if (v2)
  {
    if (v2 == (google::protobuf::internal::EpsCopyInputStream *)((char *)this + 40))
    {
      *(_OWORD *)uint64_t v2 = *(_OWORD *)*((void *)this + 1);
      if (*((int *)this + 21) < 1)
      {
LABEL_14:
        if (*((void *)this + 9) == 2) {
          *((void *)this + 9) = *((void *)this + 1) - (void)v2;
        }
        std::string::size_type v3 = (char *)this + 56;
        *((void *)this + sub_1000333D0((uint64_t *)this + 1) = (char *)this + 56;
        *((void *)this + sub_1000FACE4((void *)this + 2) = 0;
        *((_DWORD *)this + sub_1000FA614((void *)this + 6) = 0;
      }
      else
      {
        __src = 0;
        while (1)
        {
          if (!(*(unsigned int (**)(void, void **, char *))(**((void **)this + 4) + 16))(*((void *)this + 4), &__src, (char *)this + 24))
          {
            *((_DWORD *)this + 2sub_1000333D0((uint64_t *)this + 1) = 0;
            goto LABEL_14;
          }
          size_t v4 = *((unsigned int *)this + 6);
          *((_DWORD *)this + 21) -= v4;
          if ((int)v4 >= 17) {
            break;
          }
          if ((int)v4 >= 1)
          {
            memcpy((char *)this + 56, __src, v4);
            uint64_t v5 = (void *)((char *)this + 72);
            unint64_t v6 = *((void *)this + 9);
            std::string::size_type v3 = (char *)v2 + v4;
            *((void *)this + sub_1000333D0((uint64_t *)this + 1) = (char *)v2 + v4;
            *((void *)this + sub_1000FACE4((void *)this + 2) = v2;
            if (v6 < 2) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
        uint64_t v5 = (void *)((char *)this + 72);
        unint64_t v7 = *((void *)this + 9);
        std::string::size_type v3 = (char *)this + 56;
        unint64_t v8 = __src;
        *(_OWORD *)((char *)this + 5sub_1000FA614((void *)this + 6) = *(_OWORD *)__src;
        *((void *)this + sub_1000333D0((uint64_t *)this + 1) = (char *)this + 56;
        *((void *)this + sub_1000FACE4((void *)this + 2) = v8;
        if (v7 <= 1) {
          goto LABEL_19;
        }
LABEL_18:
        void *v5 = 1;
      }
    }
    else
    {
      std::string::size_type v3 = (char *)v2 + *((int *)this + 6) - 16;
      *((void *)this + sub_1000333D0((uint64_t *)this + 1) = v3;
      *((void *)this + sub_1000FACE4((void *)this + 2) = (char *)this + 40;
      if (*((void *)this + 9) == 1) {
        *((void *)this + 9) = 2;
      }
    }
LABEL_19:
    int v9 = *((_DWORD *)this + 7) + v2 - v3;
    *((_DWORD *)this + 7) = v9;
    *(void *)this = &v3[v9 & (v9 >> 31)];
  }
  else
  {
    *(void *)this = *((void *)this + 1);
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftimestamp_2eproto, 0) = 1;
  }
  return v2;
}

_OWORD *sub_10012B4F4(uint64_t a1, int a2, int a3)
{
  std::string::size_type v3 = *(_OWORD **)(a1 + 16);
  if (v3)
  {
    if (v3 == (_OWORD *)(a1 + 40))
    {
      *std::string::size_type v3 = *(_OWORD *)*(void *)(a1 + 8);
      if (*(int *)(a1 + 84) < 1)
      {
LABEL_40:
        if (*(void *)(a1 + 72) == 2) {
          *(void *)(a1 + 7sub_1000FACE4((void *)this + 2) = *(void *)(a1 + 8) - (void)v3;
        }
        *(void *)(a1 + 8) = a1 + 56;
        *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = 0;
        *(_DWORD *)(a1 + 24) = 0;
      }
      else
      {
        int v5 = a3;
        if ((a3 & 0x80000000) == 0 && a2 <= 15)
        {
          unint64_t v6 = a1 + 56;
          unint64_t v7 = (unsigned __int8 *)v3 + a2;
          unint64_t v8 = v7;
          while (2)
          {
            int v9 = (char)*v8++;
            int v10 = v9;
            if (v9 < 0)
            {
              int v10 = v10 + (*v8 << 7) - 128;
              if ((char)*v8 < 0)
              {
                unint64_t v8 = v7 + 3;
                uint64_t v14 = -21;
                while (1)
                {
                  v10 += (*(v8 - 1) - 1) << (v14 + 35);
                  if (((char)*(v8 - 1) & 0x80000000) == 0) {
                    break;
                  }
                  ++v8;
                  v14 += 7;
                  if (!v14) {
                    goto LABEL_33;
                  }
                }
              }
              else
              {
                unint64_t v8 = v7 + 2;
              }
            }
            if ((unint64_t)v8 <= v6)
            {
              if (!v10) {
                goto LABEL_40;
              }
              switch(v10 & 7)
              {
                case 0:
                  __src = 0;
                  unint64_t v8 = sub_10012C3C0((char *)v8, &__src);
                  if (!v8) {
                    break;
                  }
                  goto LABEL_32;
                case 1:
                  v8 += 8;
                  goto LABEL_32;
                case 2:
                  uint64_t v11 = (const char *)*v8;
                  if ((char)*v8 < 0)
                  {
                    SizeFallbacint k = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)v8, v11);
                    if (!SizeFallback) {
                      break;
                    }
                  }
                  else
                  {
                    SizeFallbacint k = (char *)(v8 + 1);
                  }
                  if ((uint64_t)(v6 - (void)SizeFallback) < (int)v11) {
                    break;
                  }
                  unint64_t v8 = (unsigned __int8 *)&SizeFallback[(int)v11];
LABEL_32:
                  unint64_t v7 = v8;
                  if ((unint64_t)v8 >= v6) {
                    break;
                  }
                  continue;
                case 3:
                  ++v5;
                  goto LABEL_32;
                case 4:
                  BOOL v13 = __OFSUB__(v5--, 1);
                  if (v5 < 0 != v13) {
                    goto LABEL_40;
                  }
                  goto LABEL_32;
                case 5:
                  v8 += 4;
                  goto LABEL_32;
                default:
                  goto LABEL_33;
              }
            }
            break;
          }
        }
LABEL_33:
        __src = 0;
        while (1)
        {
          if (!(*(unsigned int (**)(void, void **, uint64_t))(**(void **)(a1 + 32) + 16))(*(void *)(a1 + 32), &__src, a1 + 24))
          {
            *(_DWORD *)(a1 + 84) = 0;
            goto LABEL_40;
          }
          size_t v15 = *(unsigned int *)(a1 + 24);
          *(_DWORD *)(a1 + 84) -= v15;
          if ((int)v15 >= 17) {
            break;
          }
          if ((int)v15 >= 1)
          {
            memcpy((void *)(a1 + 56), __src, v15);
            unint64_t v17 = *(void *)(a1 + 72);
            uint64_t v16 = (void *)(a1 + 72);
            *(v16 - 8) = (char *)v3 + v15;
            *(v16 - 7) = v3;
            if (v17 < 2) {
              return v3;
            }
            goto LABEL_44;
          }
        }
        unint64_t v18 = *(void *)(a1 + 72);
        uint64_t v16 = (void *)(a1 + 72);
        uint64_t v19 = __src;
        *((_OWORD *)v16 - sub_1000333D0((uint64_t *)this + 1) = *(_OWORD *)__src;
        *(v16 - 8) = v16 - 2;
        *(v16 - 7) = v19;
        if (v18 <= 1) {
          return v3;
        }
LABEL_44:
        void *v16 = 1;
      }
    }
    else
    {
      *(void *)(a1 + 8) = (char *)v3 + *(int *)(a1 + 24) - 16;
      *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = a1 + 40;
      if (*(void *)(a1 + 72) == 1) {
        *(void *)(a1 + 7sub_1000FACE4((void *)this + 2) = 2;
      }
    }
  }
  return v3;
}

uint64_t google::protobuf::internal::EpsCopyInputStream::DoneFallback(google::protobuf::internal::EpsCopyInputStream *this, int a2, int a3)
{
  if (*((_DWORD *)this + 7) < a2) {
    return 0;
  }
  int v4 = a2;
  while (1)
  {
    unint64_t v6 = sub_10012B4F4((uint64_t)this, v4, a3);
    if (!v6) {
      break;
    }
    uint64_t v7 = *((void *)this + 1);
    int v8 = *((_DWORD *)this + 7) + v6 - v7;
    *((_DWORD *)this + 7) = v8;
    uint64_t result = (uint64_t)v6 + v4;
    int v4 = result - v7;
    if ((int)result - (int)v7 < 0)
    {
      *(void *)this = v7 + (v8 & (v8 >> 31));
      return result;
    }
  }
  if (v4) {
    return 0;
  }
  uint64_t result = *((void *)this + 1);
  *(void *)this = result;
  *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftimestamp_2eproto, 0) = 1;
  return result;
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::EpsCopyInputStream::SkipFallback(google::protobuf::internal::EpsCopyInputStream *this, const char *a2, int a3)
{
  int v5 = *((_DWORD *)this + 2) - a2 + 16;
  while (*((void *)this + 2) && *((int *)this + 7) >= 17)
  {
    uint64_t result = google::protobuf::internal::EpsCopyInputStream::Next(this);
    if (!result) {
      return result;
    }
    a3 -= v5;
    int v5 = *((_DWORD *)this + 2) - result;
    if (a3 <= v5) {
      return (google::protobuf::internal::EpsCopyInputStream *)((char *)result + a3 + 16);
    }
  }
  return 0;
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::EpsCopyInputStream::ReadStringFallback(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  int v5 = a3;
  unint64_t v6 = __s;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    *this->__r_.__value_.__l.__data_ = 0;
    this->__r_.__value_.__l.__size_ = 0;
  }
  else
  {
    this->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&this->__r_.__value_.__s + 23) = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8 - (uint64_t)__s + *(int *)(a1 + 28) >= a3)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type size = this->__r_.__value_.__l.__size_;
    }
    else {
      std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
    if (a3 >= 50000000) {
      int v10 = 50000000;
    }
    else {
      int v10 = a3;
    }
    std::string::reserve(this, size + v10);
    uint64_t v8 = *(void *)(a1 + 8);
  }
  int v11 = v8 - v6 + 16;
  while (*(void *)(a1 + 16))
  {
    std::string::append(this, v6, v11);
    if (*(int *)(a1 + 28) < 17) {
      break;
    }
    uint64_t result = google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
    if (!result) {
      return result;
    }
    v5 -= v11;
    unint64_t v6 = (char *)result + 16;
    int v11 = *(_DWORD *)(a1 + 8) - result;
    if (v5 <= v11)
    {
      std::string::append(this, v6, v5);
      return (google::protobuf::internal::EpsCopyInputStream *)&v6[v5];
    }
  }
  return 0;
}

google::protobuf::internal::EpsCopyInputStream *google::protobuf::internal::EpsCopyInputStream::AppendStringFallback(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  int v5 = a3;
  unint64_t v6 = __s;
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8 - (uint64_t)__s + *(int *)(a1 + 28) >= a3)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type size = this->__r_.__value_.__l.__size_;
    }
    else {
      std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
    if (a3 >= 50000000) {
      int v10 = 50000000;
    }
    else {
      int v10 = a3;
    }
    std::string::reserve(this, size + v10);
    uint64_t v8 = *(void *)(a1 + 8);
  }
  int v11 = v8 - v6 + 16;
  while (*(void *)(a1 + 16))
  {
    std::string::append(this, v6, v11);
    if (*(int *)(a1 + 28) < 17) {
      break;
    }
    uint64_t result = google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
    if (!result) {
      return result;
    }
    v5 -= v11;
    unint64_t v6 = (char *)result + 16;
    int v11 = *(_DWORD *)(a1 + 8) - result;
    if (v5 <= v11)
    {
      std::string::append(this, v6, v5);
      return (google::protobuf::internal::EpsCopyInputStream *)&v6[v5];
    }
  }
  return 0;
}

char *google::protobuf::internal::ParseContext::ParseMessage(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    unint64_t v6 = result;
  }
  else
  {
    unint64_t v6 = (char *)this + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = (char *)(*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)a2 + 88))(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

uint64_t google::protobuf::internal::VarintParseSlow32(google::protobuf::internal *this, const char *a2)
{
  uint64_t result = (uint64_t)this + 3;
  uint64_t v4 = -21;
  while (1)
  {
    LODWORD(asub_1000FACE4((void *)this + 2) = ((*(unsigned __int8 *)(result - 1) - 1) << (v4 + 35)) + a2;
    if ((*(char *)(result - 1) & 0x80000000) == 0) {
      break;
    }
    ++result;
    v4 += 7;
    if (!v4)
    {
      while (*((char *)this + v4 + 5) < 0)
      {
        uint64_t result = 0;
        if (++v4 == 5) {
          return result;
        }
      }
      return (uint64_t)this + v4 + 6;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::VarintParseSlow64(google::protobuf::internal *this, unint64_t a2)
{
  a2 = a2;
  uint64_t result = (uint64_t)this + 3;
  uint64_t v4 = (char *)this + 2;
  uint64_t v5 = 14;
  while (1)
  {
    int v6 = *v4++;
    a2 += (v6 - 1) << v5;
    if ((v6 & 0x80000000) == 0) {
      break;
    }
    ++result;
    v5 += 7;
    if (v5 == 70) {
      return 0;
    }
  }
  return result;
}

uint64_t google::protobuf::internal::ReadTagFallback(google::protobuf::internal *this, const char *a2)
{
  uint64_t result = (uint64_t)this + 3;
  uint64_t v4 = (char *)this + 2;
  uint64_t v5 = -21;
  while (1)
  {
    int v6 = *v4++;
    LODWORD(asub_1000FACE4((void *)this + 2) = ((v6 - 1) << (v5 + 35)) + a2;
    if ((v6 & 0x80000000) == 0) {
      break;
    }
    ++result;
    v5 += 7;
    if (!v5) {
      return 0;
    }
  }
  return result;
}

char *google::protobuf::internal::ReadSizeFallback(google::protobuf::internal *this, const char *a2)
{
  uint64_t result = (char *)this + 2;
  uint64_t v4 = -21;
  while (1)
  {
    LODWORD(asub_1000FACE4((void *)this + 2) = ((*(result - 1) - 1) << (v4 + 28)) + a2;
    if ((*(result - 1) & 0x80000000) == 0) {
      break;
    }
    ++result;
    v4 += 7;
    if (!v4)
    {
      unsigned int v5 = *((unsigned __int8 *)this + 4);
      int v6 = (char *)this + 5;
      if (a2 + (v5 << 28) - 0x10000000 > 0x7FFFFFEF) {
        int v6 = 0;
      }
      if (v5 <= 7) {
        return v6;
      }
      else {
        return 0;
      }
    }
  }
  return result;
}

BOOL google::protobuf::internal::VerifyUTF8(google::protobuf::internal *a1, const char *a2, google::protobuf::internal *a3)
{
  BOOL IsStructurallyValidUTF8 = google::protobuf::internal::IsStructurallyValidUTF8(a1, a2);
  if (!IsStructurallyValidUTF8) {
    google::protobuf::internal::PrintUTF8ErrorLog(a3, "parsing", 0);
  }
  return IsStructurallyValidUTF8;
}

char *google::protobuf::internal::InlineGreedyStringParser(std::string *this, std::string::value_type *a2, uint64_t a3)
{
  int v5 = *a2;
  if (*a2 < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)a2, (const char *)*a2);
    if (!result) {
      return result;
    }
    int v6 = result;
    int v5 = v8;
  }
  else
  {
    int v6 = a2 + 1;
  }
  return (char *)sub_100109C74(a3, v6, v5, this);
}

unsigned __int8 *google::protobuf::internal::PackedInt32Parser(unsigned int *a1, google::protobuf::internal *a2, uint64_t a3)
{
  return sub_10012C434(a3, a2, a1);
}

unsigned __int8 *google::protobuf::internal::PackedUInt32Parser(unsigned int *a1, google::protobuf::internal *a2, uint64_t a3)
{
  return sub_10012C62C(a3, a2, a1);
}

unsigned __int8 *google::protobuf::internal::PackedInt64Parser(unsigned int *a1, google::protobuf::internal *a2, uint64_t a3)
{
  return sub_10012C824(a3, a2, a1);
}

unsigned __int8 *google::protobuf::internal::PackedUInt64Parser(unsigned int *a1, google::protobuf::internal *a2, uint64_t a3)
{
  return sub_10012CA1C(a3, a2, a1);
}

unsigned __int8 *google::protobuf::internal::PackedSInt32Parser(unsigned int *a1, google::protobuf::internal *a2, uint64_t a3)
{
  return sub_10012CC14(a3, a2, a1);
}

unsigned __int8 *google::protobuf::internal::PackedSInt64Parser(unsigned int *a1, google::protobuf::internal *a2, uint64_t a3)
{
  return sub_10012CE18(a3, a2, a1);
}

unsigned __int8 *google::protobuf::internal::PackedEnumParser(unsigned int *a1, google::protobuf::internal *a2, uint64_t a3)
{
  return sub_10012C434(a3, a2, a1);
}

unsigned __int8 *google::protobuf::internal::PackedBoolParser(unsigned int *a1, google::protobuf::internal *a2, uint64_t a3)
{
  return sub_10012D01C(a3, a2, a1);
}

char *sub_10012BE64(unsigned int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    int v6 = result;
    int v5 = v8;
  }
  else
  {
    int v6 = (char *)this + 1;
  }
  return (char *)sub_10012D21C(a3, v6, v5, a1);
}

char *sub_10012BEE0(unsigned int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    int v6 = result;
    int v5 = v8;
  }
  else
  {
    int v6 = (char *)this + 1;
  }
  return (char *)sub_10012D324(a3, v6, v5, a1);
}

char *sub_10012BF5C(unsigned int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    int v6 = result;
    int v5 = v8;
  }
  else
  {
    int v6 = (char *)this + 1;
  }
  return (char *)sub_10012D42C(a3, v6, v5, a1);
}

char *sub_10012BFD8(unsigned int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    int v6 = result;
    int v5 = v8;
  }
  else
  {
    int v6 = (char *)this + 1;
  }
  return (char *)sub_10012D534(a3, v6, v5, a1);
}

char *sub_10012C054(unsigned int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    int v6 = result;
    int v5 = v8;
  }
  else
  {
    int v6 = (char *)this + 1;
  }
  return (char *)sub_10012D63C(a3, v6, v5, a1);
}

char *sub_10012C0D0(unsigned int *a1, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
    if (!result) {
      return result;
    }
    int v6 = result;
    int v5 = v8;
  }
  else
  {
    int v6 = (char *)this + 1;
  }
  return (char *)sub_10012D744(a3, v6, v5, a1);
}

google::protobuf::internal *sub_10012C148(int a1, char *a2, uint64_t a3)
{
  int v10 = a2;
  while (1)
  {
    if (sub_1000355B8(a3, &v10, *(_DWORD *)(a3 + 92))) {
      return (google::protobuf::internal *)v10;
    }
    int v5 = (google::protobuf::internal *)(v10 + 1);
    int v6 = *v10;
    if (*v10 < 0)
    {
      int v6 = v6 + (*(unsigned __int8 *)v5 << 7) - 128;
      if (*(char *)v5 < 0)
      {
        int v5 = (google::protobuf::internal *)(v10 + 3);
        uint64_t v8 = -21;
        while (1)
        {
          v6 += (*((unsigned __int8 *)v5 - 1) - 1) << (v8 + 35);
          if ((*((char *)v5 - 1) & 0x80000000) == 0) {
            break;
          }
          int v5 = (google::protobuf::internal *)((char *)v5 + 1);
          v8 += 7;
          if (!v8) {
            return 0;
          }
        }
      }
      else
      {
        int v5 = (google::protobuf::internal *)(v10 + 2);
      }
    }
    int v10 = (char *)v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    int v10 = (char *)sub_10012C260(v6, a1, v5);
    if (!v10) {
      return 0;
    }
  }
  *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftimestamp_2eproto, 0) = v6 - 1;
  return v5;
}

unsigned __int8 *google::protobuf::internal::UnknownFieldParse(unsigned int a1, std::string *a2, google::protobuf::internal *a3, google::protobuf::internal::EpsCopyInputStream *a4)
{
  int v5 = a2;
  return sub_10012C260(a1, &v5, a3, a4);
}

unsigned __int8 *sub_10012C260(unint64_t a1, std::string **a2, google::protobuf::internal *this, google::protobuf::internal::EpsCopyInputStream *a4)
{
  unint64_t v4 = a1 >> 3;
  if (!(a1 >> 3)) {
    return 0;
  }
  int v5 = (unsigned __int8 *)this;
  switch(a1 & 7)
  {
    case 0uLL:
      v11[0].__r_.__value_.__r.__words[0] = 0;
      int v5 = sub_10012C3C0((char *)this, v11);
      if (v5) {
        sub_10012D84C(a2, v4, v11[0].__r_.__value_.__r.__words[0]);
      }
      return v5;
    case 1uLL:
      int v5 = (unsigned __int8 *)this + 8;
      sub_10012D914((std::string *)a2, v4, *(void *)this);
      return v5;
    case 2uLL:
      uint64_t v8 = sub_10012D9D0(a2, v4, (std::string::value_type *)this, a4);
      goto LABEL_10;
    case 3uLL:
      uint64_t v8 = sub_10012DB3C(a2, v4, (char *)this, (int32x2_t *)a4);
LABEL_10:
      int v5 = (unsigned __int8 *)v8;
      break;
    case 4uLL:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/parse_context.h", 758);
      uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v11, "Can't happen");
      google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v7->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
      break;
    case 5uLL:
      int v5 = (unsigned __int8 *)this + 4;
      sub_10012DC34((std::string *)a2, v4, *(_DWORD *)this);
      break;
    default:
      return 0;
  }
  return v5;
}

void sub_10012C390(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_10012C3C0(char *a1, void *a2)
{
  uint64_t v2 = *a1;
  if (*a1 < 0)
  {
    int v4 = a1[1];
    uint64_t v5 = (v2 + (v4 << 7) - 128);
    if ((v4 & 0x80) != 0)
    {
      uint64_t result = (unsigned __int8 *)(a1 + 3);
      uint64_t v6 = 14;
      while (1)
      {
        v5 += (*(result - 1) - 1) << v6;
        if (((char)*(result - 1) & 0x80000000) == 0) {
          break;
        }
        ++result;
        v6 += 7;
        if (v6 == 70)
        {
          uint64_t result = 0;
          uint64_t v5 = 0;
          break;
        }
      }
      *a2 = v5;
    }
    else
    {
      *a2 = v5;
      return (unsigned __int8 *)(a1 + 2);
    }
  }
  else
  {
    *a2 = v2;
    return (unsigned __int8 *)(a1 + 1);
  }
  return result;
}

unsigned __int8 *sub_10012C434(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    uint64_t result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_10012C584(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_10012C584(result, v8, a3);
      if (!result) {
        return result;
      }
      char v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    uint64_t v14 = sub_10012C584((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_10012C584(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  for (uint64_t i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    uint64_t v10 = 0;
    uint64_t i = sub_10012C3C0((char *)i, &v10);
    if (!i) {
      break;
    }
    int v6 = v10;
    uint64_t v7 = *a3;
    if (v7 == a3[1])
    {
      unsigned int v8 = v7 + 1;
      google::protobuf::RepeatedField<int>::Reserve(a3, v7 + 1);
      *(_DWORD *)(*((void *)a3 + 1) + 4 * v7) = v6;
    }
    else
    {
      *(_DWORD *)(*((void *)a3 + 1) + 4 * v7) = v10;
      unsigned int v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *sub_10012C62C(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    uint64_t result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_10012C77C(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_10012C77C(result, v8, a3);
      if (!result) {
        return result;
      }
      uint64_t v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    uint64_t v14 = sub_10012C77C((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_10012C77C(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  for (uint64_t i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    uint64_t v10 = 0;
    uint64_t i = sub_10012C3C0((char *)i, &v10);
    if (!i) {
      break;
    }
    int v6 = v10;
    uint64_t v7 = *a3;
    if (v7 == a3[1])
    {
      unsigned int v8 = v7 + 1;
      google::protobuf::RepeatedField<unsigned int>::Reserve(a3, v7 + 1);
      *(_DWORD *)(*((void *)a3 + 1) + 4 * v7) = v6;
    }
    else
    {
      *(_DWORD *)(*((void *)a3 + 1) + 4 * v7) = v10;
      unsigned int v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *sub_10012C824(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    uint64_t result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_10012C974(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_10012C974(result, v8, a3);
      if (!result) {
        return result;
      }
      uint64_t v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    uint64_t v14 = sub_10012C974((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_10012C974(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  for (uint64_t i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    uint64_t v10 = 0;
    uint64_t i = sub_10012C3C0((char *)i, &v10);
    if (!i) {
      break;
    }
    uint64_t v6 = v10;
    uint64_t v7 = *a3;
    if (v7 == a3[1])
    {
      unsigned int v8 = v7 + 1;
      google::protobuf::RepeatedField<long long>::Reserve(a3, v7 + 1);
      *(void *)(*((void *)a3 + 1) + 8 * v7) = v6;
    }
    else
    {
      *(void *)(*((void *)a3 + 1) + 8 * v7) = v10;
      unsigned int v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *sub_10012CA1C(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    uint64_t result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_10012CB6C(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_10012CB6C(result, v8, a3);
      if (!result) {
        return result;
      }
      uint64_t v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    uint64_t v14 = sub_10012CB6C((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_10012CB6C(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  for (uint64_t i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    uint64_t v10 = 0;
    uint64_t i = sub_10012C3C0((char *)i, &v10);
    if (!i) {
      break;
    }
    uint64_t v6 = v10;
    uint64_t v7 = *a3;
    if (v7 == a3[1])
    {
      unsigned int v8 = v7 + 1;
      google::protobuf::RepeatedField<unsigned long long>::Reserve(a3, v7 + 1);
      *(void *)(*((void *)a3 + 1) + 8 * v7) = v6;
    }
    else
    {
      *(void *)(*((void *)a3 + 1) + 8 * v7) = v10;
      unsigned int v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *sub_10012CC14(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    uint64_t result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_10012CD64(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_10012CD64(result, v8, a3);
      if (!result) {
        return result;
      }
      uint64_t v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    uint64_t v14 = sub_10012CD64((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_10012CD64(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  for (uint64_t i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    uint64_t v10 = 0;
    uint64_t i = sub_10012C3C0((char *)i, &v10);
    if (!i) {
      break;
    }
    int v6 = -(v10 & 1) ^ (v10 >> 1);
    uint64_t v7 = *a3;
    if (v7 == a3[1])
    {
      unsigned int v8 = v7 + 1;
      google::protobuf::RepeatedField<int>::Reserve(a3, v7 + 1);
      *(_DWORD *)(*((void *)a3 + 1) + 4 * v7) = v6;
    }
    else
    {
      *(_DWORD *)(*((void *)a3 + 1) + 4 * v7) = v6;
      unsigned int v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *sub_10012CE18(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    uint64_t result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_10012CF68(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_10012CF68(result, v8, a3);
      if (!result) {
        return result;
      }
      uint64_t v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    uint64_t v14 = sub_10012CF68((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_10012CF68(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  for (uint64_t i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    unint64_t v10 = 0;
    uint64_t i = sub_10012C3C0((char *)i, &v10);
    if (!i) {
      break;
    }
    unint64_t v6 = -(uint64_t)(v10 & 1) ^ (v10 >> 1);
    uint64_t v7 = *a3;
    if (v7 == a3[1])
    {
      unsigned int v8 = v7 + 1;
      google::protobuf::RepeatedField<long long>::Reserve(a3, v7 + 1);
      *(void *)(*((void *)a3 + 1) + 8 * v7) = v6;
    }
    else
    {
      *(void *)(*((void *)a3 + 1) + 8 * v7) = v6;
      unsigned int v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *sub_10012D01C(uint64_t a1, google::protobuf::internal *this, unsigned int *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    uint64_t result = (unsigned __int8 *)this + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_10012D16C(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_10012D16C(result, v8, a3);
      if (!result) {
        return result;
      }
      unint64_t v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    uint64_t v14 = sub_10012D16C((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_10012D16C(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  for (uint64_t i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    uint64_t v10 = 0;
    uint64_t i = sub_10012C3C0((char *)i, &v10);
    if (!i) {
      break;
    }
    BOOL v6 = v10 != 0;
    uint64_t v7 = *a3;
    if (v7 == a3[1])
    {
      unsigned int v8 = v7 + 1;
      google::protobuf::RepeatedField<BOOL>::Reserve(a3, v7 + 1);
      *(unsigned char *)(*((void *)a3 + 1) + v7) = v6;
    }
    else
    {
      *(unsigned char *)(*((void *)a3 + 1) + v7) = v6;
      unsigned int v8 = v7 + 1;
    }
  }
  return i;
}

google::protobuf::internal::EpsCopyInputStream *sub_10012D21C(google::protobuf::internal::EpsCopyInputStream *a1, char *a2, int a3, unsigned int *a4)
{
  int v5 = a3;
  BOOL v6 = a2;
  int v7 = *((_DWORD *)a1 + 2) - a2 + 16;
  if (v7 >= a3)
  {
LABEL_5:
    google::protobuf::RepeatedField<unsigned int>::Reserve(a4, *a4 + (v5 >> 2));
    uint64_t v12 = (int)*a4;
    unint64_t v13 = (void *)(*((void *)a4 + 1) + 4 * v12);
    *a4 = v12 + (v5 >> 2);
    memcpy(v13, v6, (int)(v5 & 0xFFFFFFFC));
    if (v5 == (v5 & 0xFFFFFFFC)) {
      return (google::protobuf::internal::EpsCopyInputStream *)&v6[v5 & 0xFFFFFFFC];
    }
    else {
      return 0;
    }
  }
  else
  {
    while (1)
    {
      google::protobuf::RepeatedField<unsigned int>::Reserve(a4, *a4 + (v7 >> 2));
      uint64_t v9 = (int)*a4;
      uint64_t v10 = (void *)(*((void *)a4 + 1) + 4 * v9);
      *a4 = v9 + (v7 >> 2);
      memcpy(v10, v6, (int)(v7 & 0xFFFFFFFC));
      if (*((int *)a1 + 7) < 17) {
        return 0;
      }
      uint64_t result = google::protobuf::internal::EpsCopyInputStream::Next(a1);
      if (!result) {
        return result;
      }
      v5 -= v7 & 0xFFFFFFFC;
      BOOL v6 = (char *)result - (v7 & 3) + 16;
      int v7 = *((_DWORD *)a1 + 2) - (result - (v7 & 3));
      if (v5 <= v7) {
        goto LABEL_5;
      }
    }
  }
}

google::protobuf::internal::EpsCopyInputStream *sub_10012D324(google::protobuf::internal::EpsCopyInputStream *a1, char *a2, int a3, unsigned int *a4)
{
  int v5 = a3;
  BOOL v6 = a2;
  int v7 = *((_DWORD *)a1 + 2) - a2 + 16;
  if (v7 >= a3)
  {
LABEL_5:
    google::protobuf::RepeatedField<int>::Reserve(a4, *a4 + (v5 >> 2));
    uint64_t v12 = (int)*a4;
    unint64_t v13 = (void *)(*((void *)a4 + 1) + 4 * v12);
    *a4 = v12 + (v5 >> 2);
    memcpy(v13, v6, (int)(v5 & 0xFFFFFFFC));
    if (v5 == (v5 & 0xFFFFFFFC)) {
      return (google::protobuf::internal::EpsCopyInputStream *)&v6[v5 & 0xFFFFFFFC];
    }
    else {
      return 0;
    }
  }
  else
  {
    while (1)
    {
      google::protobuf::RepeatedField<int>::Reserve(a4, *a4 + (v7 >> 2));
      uint64_t v9 = (int)*a4;
      uint64_t v10 = (void *)(*((void *)a4 + 1) + 4 * v9);
      *a4 = v9 + (v7 >> 2);
      memcpy(v10, v6, (int)(v7 & 0xFFFFFFFC));
      if (*((int *)a1 + 7) < 17) {
        return 0;
      }
      uint64_t result = google::protobuf::internal::EpsCopyInputStream::Next(a1);
      if (!result) {
        return result;
      }
      v5 -= v7 & 0xFFFFFFFC;
      BOOL v6 = (char *)result - (v7 & 3) + 16;
      int v7 = *((_DWORD *)a1 + 2) - (result - (v7 & 3));
      if (v5 <= v7) {
        goto LABEL_5;
      }
    }
  }
}

google::protobuf::internal::EpsCopyInputStream *sub_10012D42C(google::protobuf::internal::EpsCopyInputStream *a1, char *a2, int a3, unsigned int *a4)
{
  int v5 = a3;
  BOOL v6 = a2;
  int v7 = *((_DWORD *)a1 + 2) - a2 + 16;
  if (v7 >= a3)
  {
LABEL_5:
    google::protobuf::RepeatedField<unsigned long long>::Reserve(a4, *a4 + (v5 >> 3));
    uint64_t v12 = (int)*a4;
    unint64_t v13 = (void *)(*((void *)a4 + 1) + 8 * v12);
    *a4 = v12 + (v5 >> 3);
    memcpy(v13, v6, (int)(v5 & 0xFFFFFFF8));
    if (v5 == (v5 & 0xFFFFFFF8)) {
      return (google::protobuf::internal::EpsCopyInputStream *)&v6[v5 & 0xFFFFFFF8];
    }
    else {
      return 0;
    }
  }
  else
  {
    while (1)
    {
      google::protobuf::RepeatedField<unsigned long long>::Reserve(a4, *a4 + (v7 >> 3));
      uint64_t v9 = (int)*a4;
      uint64_t v10 = (void *)(*((void *)a4 + 1) + 8 * v9);
      *a4 = v9 + (v7 >> 3);
      memcpy(v10, v6, (int)(v7 & 0xFFFFFFF8));
      if (*((int *)a1 + 7) < 17) {
        return 0;
      }
      uint64_t result = google::protobuf::internal::EpsCopyInputStream::Next(a1);
      if (!result) {
        return result;
      }
      v5 -= v7 & 0xFFFFFFF8;
      BOOL v6 = (char *)result - (v7 & 7) + 16;
      int v7 = *((_DWORD *)a1 + 2) - (result - (v7 & 7));
      if (v5 <= v7) {
        goto LABEL_5;
      }
    }
  }
}

google::protobuf::internal::EpsCopyInputStream *sub_10012D534(google::protobuf::internal::EpsCopyInputStream *a1, char *a2, int a3, unsigned int *a4)
{
  int v5 = a3;
  BOOL v6 = a2;
  int v7 = *((_DWORD *)a1 + 2) - a2 + 16;
  if (v7 >= a3)
  {
LABEL_5:
    google::protobuf::RepeatedField<long long>::Reserve(a4, *a4 + (v5 >> 3));
    uint64_t v12 = (int)*a4;
    unint64_t v13 = (void *)(*((void *)a4 + 1) + 8 * v12);
    *a4 = v12 + (v5 >> 3);
    memcpy(v13, v6, (int)(v5 & 0xFFFFFFF8));
    if (v5 == (v5 & 0xFFFFFFF8)) {
      return (google::protobuf::internal::EpsCopyInputStream *)&v6[v5 & 0xFFFFFFF8];
    }
    else {
      return 0;
    }
  }
  else
  {
    while (1)
    {
      google::protobuf::RepeatedField<long long>::Reserve(a4, *a4 + (v7 >> 3));
      uint64_t v9 = (int)*a4;
      uint64_t v10 = (void *)(*((void *)a4 + 1) + 8 * v9);
      *a4 = v9 + (v7 >> 3);
      memcpy(v10, v6, (int)(v7 & 0xFFFFFFF8));
      if (*((int *)a1 + 7) < 17) {
        return 0;
      }
      uint64_t result = google::protobuf::internal::EpsCopyInputStream::Next(a1);
      if (!result) {
        return result;
      }
      v5 -= v7 & 0xFFFFFFF8;
      BOOL v6 = (char *)result - (v7 & 7) + 16;
      int v7 = *((_DWORD *)a1 + 2) - (result - (v7 & 7));
      if (v5 <= v7) {
        goto LABEL_5;
      }
    }
  }
}

google::protobuf::internal::EpsCopyInputStream *sub_10012D63C(google::protobuf::internal::EpsCopyInputStream *a1, char *a2, int a3, unsigned int *a4)
{
  int v5 = a3;
  BOOL v6 = a2;
  int v7 = *((_DWORD *)a1 + 2) - a2 + 16;
  if (v7 >= a3)
  {
LABEL_5:
    google::protobuf::RepeatedField<float>::Reserve(a4, *a4 + (v5 >> 2));
    uint64_t v12 = (int)*a4;
    unint64_t v13 = (void *)(*((void *)a4 + 1) + 4 * v12);
    *a4 = v12 + (v5 >> 2);
    memcpy(v13, v6, (int)(v5 & 0xFFFFFFFC));
    if (v5 == (v5 & 0xFFFFFFFC)) {
      return (google::protobuf::internal::EpsCopyInputStream *)&v6[v5 & 0xFFFFFFFC];
    }
    else {
      return 0;
    }
  }
  else
  {
    while (1)
    {
      google::protobuf::RepeatedField<float>::Reserve(a4, *a4 + (v7 >> 2));
      uint64_t v9 = (int)*a4;
      uint64_t v10 = (void *)(*((void *)a4 + 1) + 4 * v9);
      *a4 = v9 + (v7 >> 2);
      memcpy(v10, v6, (int)(v7 & 0xFFFFFFFC));
      if (*((int *)a1 + 7) < 17) {
        return 0;
      }
      uint64_t result = google::protobuf::internal::EpsCopyInputStream::Next(a1);
      if (!result) {
        return result;
      }
      v5 -= v7 & 0xFFFFFFFC;
      BOOL v6 = (char *)result - (v7 & 3) + 16;
      int v7 = *((_DWORD *)a1 + 2) - (result - (v7 & 3));
      if (v5 <= v7) {
        goto LABEL_5;
      }
    }
  }
}

google::protobuf::internal::EpsCopyInputStream *sub_10012D744(google::protobuf::internal::EpsCopyInputStream *a1, char *a2, int a3, unsigned int *a4)
{
  int v5 = a3;
  BOOL v6 = a2;
  int v7 = *((_DWORD *)a1 + 2) - a2 + 16;
  if (v7 >= a3)
  {
LABEL_5:
    google::protobuf::RepeatedField<double>::Reserve(a4, *a4 + (v5 >> 3));
    uint64_t v12 = (int)*a4;
    unint64_t v13 = (void *)(*((void *)a4 + 1) + 8 * v12);
    *a4 = v12 + (v5 >> 3);
    memcpy(v13, v6, (int)(v5 & 0xFFFFFFF8));
    if (v5 == (v5 & 0xFFFFFFF8)) {
      return (google::protobuf::internal::EpsCopyInputStream *)&v6[v5 & 0xFFFFFFF8];
    }
    else {
      return 0;
    }
  }
  else
  {
    while (1)
    {
      google::protobuf::RepeatedField<double>::Reserve(a4, *a4 + (v7 >> 3));
      uint64_t v9 = (int)*a4;
      uint64_t v10 = (void *)(*((void *)a4 + 1) + 8 * v9);
      *a4 = v9 + (v7 >> 3);
      memcpy(v10, v6, (int)(v7 & 0xFFFFFFF8));
      if (*((int *)a1 + 7) < 17) {
        return 0;
      }
      uint64_t result = google::protobuf::internal::EpsCopyInputStream::Next(a1);
      if (!result) {
        return result;
      }
      v5 -= v7 & 0xFFFFFFF8;
      BOOL v6 = (char *)result - (v7 & 7) + 16;
      int v7 = *((_DWORD *)a1 + 2) - (result - (v7 & 7));
      if (v5 <= v7) {
        goto LABEL_5;
      }
    }
  }
}

void sub_10012D84C(std::string **a1, int a2, unint64_t a3)
{
  std::string::size_type v3 = *a1;
  if (*a1)
  {
    unint64_t v6 = (8 * a2);
    if (v6 < 0x80)
    {
      LOBYTE(v7) = 8 * a2;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        unint64_t v7 = v6 >> 7;
        unint64_t v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    uint64_t v9 = *a1;
    if (a3 < 0x80)
    {
      LOBYTE(v1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftimestamp_2eproto, 0) = a3;
    }
    else
    {
      do
      {
        std::string::push_back(v9, a3 | 0x80);
        unint64_t v10 = a3 >> 7;
        unint64_t v11 = a3 >> 14;
        a3 >>= 7;
      }
      while (v11);
    }
    std::string::push_back(v9, v10);
  }
}

std::string *sub_10012D914(std::string *result, int a2, uint64_t a3)
{
  std::string::size_type v3 = (std::string *)result->__r_.__value_.__r.__words[0];
  if (result->__r_.__value_.__r.__words[0])
  {
    int v5 = (std::string **)result;
    unint64_t v6 = (8 * a2) | 1u;
    if (v6 < 0x80)
    {
      LOBYTE(v7) = (8 * a2) | 1;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        unint64_t v7 = v6 >> 7;
        unint64_t v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    uint64_t v9 = a3;
    return std::string::append(*v5, (const std::string::value_type *)&v9, 8uLL);
  }
  return result;
}

google::protobuf::internal::EpsCopyInputStream *sub_10012D9D0(std::string **a1, int a2, std::string::value_type *this, google::protobuf::internal::EpsCopyInputStream *a4)
{
  int v7 = *this;
  if (*this < 0)
  {
    uint64_t result = (google::protobuf::internal::EpsCopyInputStream *)google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)this, (const char *)*this);
    if (!result) {
      return result;
    }
    unint64_t v8 = (std::string::value_type *)result;
    int v7 = v10;
  }
  else
  {
    unint64_t v8 = this + 1;
  }
  unint64_t v11 = *a1;
  if (*a1)
  {
    unint64_t v12 = (8 * a2) | 2u;
    if (v12 < 0x80)
    {
      LOBYTE(v13) = v12;
    }
    else
    {
      do
      {
        std::string::push_back(v11, v12 | 0x80);
        unint64_t v13 = v12 >> 7;
        unint64_t v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
    }
    std::string::push_back(v11, v13);
    unint64_t v15 = v7;
    long long v16 = *a1;
    if (v7 < 0x80)
    {
      LOBYTE(v17) = v7;
    }
    else
    {
      do
      {
        std::string::push_back(v16, v15 | 0x80);
        unint64_t v17 = v15 >> 7;
        unint64_t v18 = v15 >> 14;
        v15 >>= 7;
      }
      while (v18);
    }
    std::string::push_back(v16, v17);
    uint64_t v19 = *a1;
    return sub_10012DCC4((uint64_t)a4, v8, v7, v19);
  }
  else if (*((void *)a4 + 1) - (void)v8 + 16 >= v7)
  {
    return (google::protobuf::internal::EpsCopyInputStream *)&v8[v7];
  }
  else
  {
    return google::protobuf::internal::EpsCopyInputStream::SkipFallback(a4, v8, v7);
  }
}

google::protobuf::internal *sub_10012DB3C(std::string **a1, int a2, char *a3, int32x2_t *a4)
{
  unint64_t v8 = *a1;
  unsigned int v9 = (8 * a2) | 3;
  if (*a1)
  {
    if (v9 < 0x80)
    {
      LOBYTE(v1sub_1000333D0((uint64_t *)this + 1) = (8 * a2) | 3;
    }
    else
    {
      unint64_t v10 = (8 * a2) | 3u;
      do
      {
        std::string::push_back(v8, v10 | 0x80);
        unint64_t v11 = v10 >> 7;
        unint64_t v12 = v10 >> 14;
        v10 >>= 7;
      }
      while (v12);
    }
    std::string::push_back(v8, v11);
  }
  unint64_t v13 = sub_10012DD30(a4, (int)a1, a3, v9);
  if (v13)
  {
    unint64_t v14 = *a1;
    if (v14)
    {
      char v15 = 8 * a2;
      unint64_t v16 = (8 * a2) | 4u;
      if (v16 < 0x80)
      {
        LOBYTE(v17) = v15 | 4;
      }
      else
      {
        do
        {
          std::string::push_back(v14, v16 | 0x80);
          unint64_t v17 = v16 >> 7;
          unint64_t v18 = v16 >> 14;
          v16 >>= 7;
        }
        while (v18);
      }
      std::string::push_back(v14, v17);
    }
  }
  return v13;
}

std::string *sub_10012DC34(std::string *result, int a2, int a3)
{
  std::string::size_type v3 = (std::string *)result->__r_.__value_.__r.__words[0];
  if (result->__r_.__value_.__r.__words[0])
  {
    int v5 = (std::string **)result;
    unint64_t v6 = (8 * a2) | 5u;
    if (v6 < 0x80)
    {
      LOBYTE(v7) = (8 * a2) | 5;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        unint64_t v7 = v6 >> 7;
        unint64_t v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    *(_DWORD *)__s = a3;
    return std::string::append(*v5, __s, 4uLL);
  }
  return result;
}

google::protobuf::internal::EpsCopyInputStream *sub_10012DCC4(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  if (*(void *)(a1 + 8) - (void)__s + 16 >= a3)
  {
    uint64_t v6 = a3;
    std::string::append(this, __s, a3);
    return (google::protobuf::internal::EpsCopyInputStream *)&__s[v6];
  }
  else
  {
    return google::protobuf::internal::EpsCopyInputStream::AppendStringFallback(a1, __s, a3, this);
  }
}

google::protobuf::internal *sub_10012DD30(int32x2_t *a1, int a2, char *a3, int a4)
{
  int v4 = a1[11].i32[0];
  BOOL v5 = __OFSUB__(v4--, 1);
  a1[11].i32[0] = v4;
  if (v4 < 0 != v5) {
    return 0;
  }
  ++a1[11].i32[1];
  uint64_t result = sub_10012C148(a2, a3, (uint64_t)a1);
  a1[11] = vadd_s32(a1[11], (int32x2_t)0xFFFFFFFF00000001);
  __int32 v9 = a1[10].i32[0];
  a1[10].i32[0] = 0;
  if (v9 != a4) {
    return 0;
  }
  return result;
}

void google::protobuf::internal::ReflectionOps::Copy(google::protobuf::internal::ReflectionOps *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (this != a2)
  {
    google::protobuf::internal::ReflectionOps::Clear(a2, a2);
    google::protobuf::internal::ReflectionOps::Merge(this, a2, v6);
  }
}

void google::protobuf::internal::ReflectionOps::Clear(google::protobuf::internal::ReflectionOps *this, google::protobuf::Message *a2)
{
  uint64_t v3 = (google::protobuf::Reflection *)sub_10012E860((uint64_t)this);
  std::string __p = 0;
  unint64_t v8 = 0;
  uint64_t v9 = 0;
  google::protobuf::Reflection::ListFieldsOmitStripped((uint64_t)v3, this, (uint64_t)&__p);
  int v4 = (const google::protobuf::FieldDescriptor **)__p;
  BOOL v5 = v8;
  while (v4 != v5)
    google::protobuf::Reflection::ClearField(v3, this, *v4++);
  uint64_t v6 = google::protobuf::Reflection::MutableUnknownFields(v3, this);
  if (*v6 != v6[1]) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)v6);
  }
  if (__p)
  {
    unint64_t v8 = (const google::protobuf::FieldDescriptor **)__p;
    operator delete(__p);
  }
}

void sub_10012DE98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::ReflectionOps::Merge(google::protobuf::internal::ReflectionOps *this, const google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  if (this == a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v66, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/reflection_ops.cc", 71);
    BOOL v5 = google::protobuf::internal::LogMessage::operator<<(v66, "CHECK failed: (&from) != (to): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v70, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v66[0].__r_.__value_.__l.__data_);
  }
  uint64_t v6 = (*(uint64_t (**)(google::protobuf::internal::ReflectionOps *))(*(void *)this + 152))(this);
  if ((*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2) != v6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v66, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/reflection_ops.cc", 74);
    unint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v66, "CHECK failed: (to->GetDescriptor()) == (descriptor): ");
    unint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "Tried to merge messages of different types ");
    uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v8, "(merge ");
    unint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, *(const std::string::value_type **)(v6 + 8));
    unint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v10, " to ");
    uint64_t v12 = (*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    unint64_t v13 = google::protobuf::internal::LogMessage::operator<<(v11, *(const std::string::value_type **)(v12 + 8));
    unint64_t v14 = google::protobuf::internal::LogMessage::operator<<(v13, ")");
    google::protobuf::internal::LogFinisher::operator=((int)&v70, (const char **)&v14->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v66[0].__r_.__value_.__l.__data_);
  }
  char v15 = (google::protobuf::Reflection *)sub_10012E860((uint64_t)this);
  unint64_t v16 = (google::protobuf::Reflection *)sub_10012E860((uint64_t)a2);
  MessageFactory = (google::protobuf::MessageFactory *)google::protobuf::Reflection::GetMessageFactory(v15);
  uint64_t v18 = google::protobuf::MessageFactory::generated_factory(MessageFactory);
  uint64_t v19 = (google::protobuf::MessageFactory *)google::protobuf::Reflection::GetMessageFactory(v16);
  uint64_t v20 = google::protobuf::MessageFactory::generated_factory(v19);
  memset(v66, 0, 24);
  google::protobuf::Reflection::ListFieldsOmitStripped((uint64_t)v15, this, (uint64_t)v66);
  std::string::size_type size = v66[0].__r_.__value_.__l.__size_;
  std::string::size_type v21 = v66[0].__r_.__value_.__r.__words[0];
  if (v66[0].__r_.__value_.__r.__words[0] != v66[0].__r_.__value_.__l.__size_)
  {
    int v60 = (MessageFactory != (google::protobuf::MessageFactory *)v18) ^ (v19 == (google::protobuf::MessageFactory *)v20);
    do
    {
      uint64_t v22 = *(void *)v21;
      if (*(_DWORD *)(*(void *)v21 + 60) == 3)
      {
        if (!v60) {
          goto LABEL_22;
        }
        uint64_t v23 = *(std::once_flag::_State_type **)(v22 + 48);
        if (v23)
        {
          uint64_t v67 = *(void *)v21;
          int v68 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v23, memory_order_acquire) != -1)
          {
            int v70 = &v68;
            unint64_t v71 = &v67;
            uint64_t v69 = &v70;
            std::__call_once(v23, &v69, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        if (*(_DWORD *)(v22 + 56) == 11
          && google::protobuf::FieldDescriptor::is_map_message_type((google::protobuf::FieldDescriptor *)v22)
          && (MapData = (atomic_uint *)google::protobuf::Reflection::GetMapData(v15, this, (const google::protobuf::FieldDescriptor *)v22), int v25 = (atomic_uint *)google::protobuf::Reflection::MutableMapData(v16, a2, (const google::protobuf::FieldDescriptor *)v22), google::protobuf::internal::MapFieldBase::IsMapValid(v25))&& google::protobuf::internal::MapFieldBase::IsMapValid(MapData))
        {
          (*(void (**)(atomic_uint *, atomic_uint *))(*(void *)v25 + 72))(v25, MapData);
        }
        else
        {
LABEL_22:
          int v28 = google::protobuf::Reflection::FieldSize(v15, this, (const google::protobuf::FieldDescriptor *)v22);
          if (v28 >= 1)
          {
            for (int i = 0; i != v28; ++i)
            {
              BOOL v30 = *(std::once_flag::_State_type **)(v22 + 48);
              if (v30)
              {
                uint64_t v67 = v22;
                int v68 = google::protobuf::FieldDescriptor::TypeOnceInit;
                if (atomic_load_explicit((atomic_ullong *volatile)v30, memory_order_acquire) != -1)
                {
                  int v70 = &v68;
                  unint64_t v71 = &v67;
                  uint64_t v69 = &v70;
                  std::__call_once(v30, &v69, (void (__cdecl *)(void *))sub_1000BB820);
                }
              }
              switch(*(_DWORD *)(v22 + 56))
              {
                case 1:
                  double RepeatedDouble = google::protobuf::Reflection::GetRepeatedDouble(v15, this, (const google::protobuf::FieldDescriptor *)v22, i);
                  google::protobuf::Reflection::AddDouble(v16, a2, (const google::protobuf::FieldDescriptor *)v22, RepeatedDouble);
                  break;
                case 2:
                  float RepeatedFloat = google::protobuf::Reflection::GetRepeatedFloat(v15, this, (const google::protobuf::FieldDescriptor *)v22, i);
                  google::protobuf::Reflection::AddFloat(v16, a2, (const google::protobuf::FieldDescriptor *)v22, RepeatedFloat);
                  break;
                case 3:
                case 0x10:
                case 0x12:
                  uint64_t RepeatedInt64 = google::protobuf::Reflection::GetRepeatedInt64(v15, this, (const google::protobuf::FieldDescriptor *)v22, i);
                  google::protobuf::Reflection::AddInt64(v16, a2, (const google::protobuf::FieldDescriptor *)v22, RepeatedInt64);
                  break;
                case 4:
                case 6:
                  Repeatedunint64_t UInt64 = google::protobuf::Reflection::GetRepeatedUInt64(v15, this, (const google::protobuf::FieldDescriptor *)v22, i);
                  google::protobuf::Reflection::AddUInt64(v16, a2, (const google::protobuf::FieldDescriptor *)v22, RepeatedUInt64);
                  break;
                case 5:
                case 0xF:
                case 0x11:
                  Repeatedint Int32 = google::protobuf::Reflection::GetRepeatedInt32(v15, this, (const google::protobuf::FieldDescriptor *)v22, i);
                  google::protobuf::Reflection::AddInt32(v16, a2, (const google::protobuf::FieldDescriptor *)v22, RepeatedInt32);
                  break;
                case 7:
                case 0xD:
                  RepeatedUint Int32 = google::protobuf::Reflection::GetRepeatedUInt32(v15, this, (const google::protobuf::FieldDescriptor *)v22, i);
                  google::protobuf::Reflection::AddUInt32(v16, a2, (const google::protobuf::FieldDescriptor *)v22, RepeatedUInt32);
                  break;
                case 8:
                  RepeatedBOOL Bool = google::protobuf::Reflection::GetRepeatedBool(v15, this, (const google::protobuf::FieldDescriptor *)v22, i);
                  google::protobuf::Reflection::AddBool(v16, a2, (const google::protobuf::FieldDescriptor *)v22, RepeatedBool);
                  break;
                case 9:
                case 0xC:
                  google::protobuf::Reflection::GetRepeatedString(v15, this, (const google::protobuf::FieldDescriptor *)v22, i, (uint64_t)__p);
                  google::protobuf::Reflection::AddString((uint64_t)v16, (uint64_t)a2, (google::protobuf::FieldDescriptor *)v22, (uint64_t)__p);
                  if (v65 < 0) {
                    operator delete(__p[0]);
                  }
                  break;
                case 0xA:
                case 0xB:
                  Repeateduint64_t Message = google::protobuf::Reflection::GetRepeatedMessage(v15, this, (const google::protobuf::FieldDescriptor *)v22, i);
                  uint64_t v40 = RepeatedMessage;
                  if (v15 == v16)
                  {
                    (*(void (**)(uint64_t))(*(void *)RepeatedMessage + 152))(RepeatedMessage);
                    uint64_t v41 = (google::protobuf::MessageFactory *)google::protobuf::Reflection::GetMessageFactory(v43);
                    uint64_t v42 = v15;
                  }
                  else
                  {
                    uint64_t v41 = 0;
                    uint64_t v42 = v16;
                  }
                  uint64_t v44 = google::protobuf::Reflection::AddMessage(v42, a2, (const google::protobuf::FieldDescriptor *)v22, v41);
                  (*(void (**)(uint64_t, uint64_t))(*(void *)v44 + 120))(v44, v40);
                  break;
                case 0xE:
                  RepeatedEnuint m = google::protobuf::Reflection::GetRepeatedEnum(v15, this, (const google::protobuf::FieldDescriptor *)v22, i);
                  google::protobuf::Reflection::AddEnum((uint64_t *)v16, a2, (const std::string::value_type **)v22, RepeatedEnum);
                  break;
                default:
                  continue;
              }
            }
          }
        }
      }
      else
      {
        uint64_t v26 = *(std::once_flag::_State_type **)(v22 + 48);
        if (v26)
        {
          uint64_t v67 = *(void *)v21;
          int v68 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v26, memory_order_acquire) != -1)
          {
            int v70 = &v68;
            unint64_t v71 = &v67;
            uint64_t v69 = &v70;
            std::__call_once(v26, &v69, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        switch(*(_DWORD *)(v22 + 56))
        {
          case 1:
            double Double = google::protobuf::Reflection::GetDouble(v15, this, (const google::protobuf::FieldDescriptor *)v22);
            google::protobuf::Reflection::SetDouble(v16, a2, (const google::protobuf::FieldDescriptor *)v22, Double);
            break;
          case 2:
            float Float = google::protobuf::Reflection::GetFloat(v15, this, (const google::protobuf::FieldDescriptor *)v22);
            google::protobuf::Reflection::SetFloat(v16, a2, (const google::protobuf::FieldDescriptor *)v22, Float);
            break;
          case 3:
          case 0x10:
          case 0x12:
            uint64_t Int64 = google::protobuf::Reflection::GetInt64(v15, this, (const google::protobuf::FieldDescriptor *)v22);
            google::protobuf::Reflection::SetInt64(v16, a2, (const google::protobuf::FieldDescriptor *)v22, Int64);
            break;
          case 4:
          case 6:
            unint64_t UInt64 = google::protobuf::Reflection::GetUInt64(v15, this, (const google::protobuf::FieldDescriptor *)v22);
            google::protobuf::Reflection::SetUInt64(v16, a2, (const google::protobuf::FieldDescriptor *)v22, UInt64);
            break;
          case 5:
          case 0xF:
          case 0x11:
            int Int32 = google::protobuf::Reflection::GetInt32(v15, this, (const google::protobuf::FieldDescriptor *)v22);
            google::protobuf::Reflection::SetInt32(v16, a2, (const google::protobuf::FieldDescriptor *)v22, Int32);
            break;
          case 7:
          case 0xD:
            Uint Int32 = google::protobuf::Reflection::GetUInt32(v15, this, (const google::protobuf::FieldDescriptor *)v22);
            google::protobuf::Reflection::SetUInt32(v16, a2, (const google::protobuf::FieldDescriptor *)v22, UInt32);
            break;
          case 8:
            BOOL Bool = google::protobuf::Reflection::GetBool(v15, this, (const google::protobuf::FieldDescriptor *)v22);
            google::protobuf::Reflection::SetBool(v16, a2, (const google::protobuf::FieldDescriptor *)v22, Bool);
            break;
          case 9:
          case 0xC:
            google::protobuf::Reflection::GetString(v15, this, (const google::protobuf::FieldDescriptor *)v22, (uint64_t)v62);
            google::protobuf::Reflection::SetString((uint64_t)v16, a2, (google::protobuf::FieldDescriptor *)v22, (uint64_t)v62);
            if (v63 < 0) {
              operator delete(v62[0]);
            }
            break;
          case 0xA:
          case 0xB:
            uint64_t Message = google::protobuf::Reflection::GetMessage(v15, this, (const google::protobuf::FieldDescriptor *)v22, 0);
            uint64_t v53 = Message;
            if (v15 == v16)
            {
              (*(void (**)(uint64_t))(*(void *)Message + 152))(Message);
              BOOL v54 = (google::protobuf::MessageFactory *)google::protobuf::Reflection::GetMessageFactory(v56);
              uint64_t v55 = v15;
            }
            else
            {
              BOOL v54 = 0;
              uint64_t v55 = v16;
            }
            uint64_t v57 = google::protobuf::Reflection::MutableMessage(v55, a2, (const google::protobuf::FieldDescriptor *)v22, v54);
            (*(void (**)(uint64_t *, uint64_t))(*v57 + 120))(v57, v53);
            break;
          case 0xE:
            Enuint m = (const google::protobuf::EnumValueDescriptor *)google::protobuf::Reflection::GetEnum(v15, this, (const google::protobuf::FieldDescriptor *)v22);
            google::protobuf::Reflection::SetEnum(v16, a2, (const std::string::value_type **)v22, Enum);
            break;
          default:
            break;
        }
      }
      v21 += 8;
    }
    while (v21 != size);
  }
  uint64_t v58 = (void **)google::protobuf::Reflection::MutableUnknownFields(v16, a2);
  unint64_t UnknownFields = (const google::protobuf::UnknownFieldSet *)google::protobuf::Reflection::GetUnknownFields(v15, this);
  google::protobuf::UnknownFieldSet::MergeFrom(v58, UnknownFields);
  if (v66[0].__r_.__value_.__r.__words[0])
  {
    v66[0].__r_.__value_.__l.__size_ = v66[0].__r_.__value_.__r.__words[0];
    operator delete(v66[0].__r_.__value_.__l.__data_);
  }
}

void sub_10012E790(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24)
{
}

uint64_t sub_10012E860(uint64_t a1)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 152))(a1);
  uint64_t v3 = v2;
  if (!v2)
  {
    uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 152))(a1);
    if (v4)
    {
      BOOL v5 = *(long long **)v4;
      if (*(char *)(*(void *)v4 + 23) < 0)
      {
        sub_1000BB834(&__dst, *(void **)v5, *((void *)v5 + 1));
      }
      else
      {
        long long v6 = *v5;
        uint64_t v14 = *((void *)v5 + 2);
        long long __dst = v6;
      }
    }
    else
    {
      sub_1000BBA84(&__dst, "unknown");
    }
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v12, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/reflection_ops.cc", 59);
    unint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v12, "Message does not support reflection (type ");
    unint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, (const std::string::value_type *)&__dst);
    uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v8, ").");
    google::protobuf::internal::LogFinisher::operator=((int)&v11, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v12[0].__r_.__value_.__l.__data_);
    if (SHIBYTE(v14) < 0) {
      operator delete((void *)__dst);
    }
  }
  return v3;
}

void sub_10012E984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  if (*(char *)(v3 - 25) < 0) {
    operator delete(*(void **)(v3 - 48));
  }
  _Unwind_Resume(a1);
}

uint64_t sub_10012E9B4(uint64_t a1)
{
  uint64_t v2 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v2)
  {
    uint64_t v4 = a1;
    BOOL v5 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v7[0] = &v5;
      v7[1] = &v4;
      long long v6 = v7;
      std::__call_once(v2, &v6, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  return google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(a1 + 56)];
}

uint64_t google::protobuf::internal::ReflectionOps::IsInitialized(google::protobuf::internal::ReflectionOps *this, const google::protobuf::Message *a2)
{
  uint64_t v3 = (*(uint64_t (**)(google::protobuf::internal::ReflectionOps *, const google::protobuf::Message *))(*(void *)this + 152))(this, a2);
  uint64_t v4 = (google::protobuf::Reflection *)sub_10012E860((uint64_t)this);
  int v5 = *(_DWORD *)(v3 + 104);
  if (v5 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = 152 * v5;
    do
    {
      unint64_t v8 = (const google::protobuf::FieldDescriptor *)(*(void *)(v3 + 40) + v6);
      if (*((_DWORD *)v8 + 15) == 2 && !google::protobuf::Reflection::HasField(v4, this, v8)) {
        return 0;
      }
      v6 += 152;
    }
    while (v7 != v6);
  }
  int v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  google::protobuf::Reflection::ListFieldsOmitStripped((uint64_t)v4, this, (uint64_t)&v25);
  uint64_t v9 = v25;
  unint64_t v10 = v26;
  if (v25 == v26)
  {
    uint64_t v23 = 1;
    if (v25) {
      goto LABEL_42;
    }
    return v23;
  }
  while (1)
  {
    uint64_t v11 = *(void *)v9;
    uint64_t v12 = *(std::once_flag::_State_type **)(*(void *)v9 + 48);
    if (v12)
    {
      uint64_t v28 = *(void *)v9;
      uint64_t v29 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        uint64_t v31 = &v29;
        uint64_t v32 = &v28;
        v30[0] = &v31;
        std::__call_once(v12, v30, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    uint64_t v13 = *(unsigned int *)(v11 + 56);
    if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[v13] != 10) {
      goto LABEL_33;
    }
    uint64_t v14 = *(std::once_flag::_State_type **)(v11 + 48);
    if (v14)
    {
      uint64_t v28 = v11;
      uint64_t v29 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v14, memory_order_acquire) != -1)
      {
        uint64_t v31 = &v29;
        uint64_t v32 = &v28;
        v30[0] = &v31;
        std::__call_once(v14, v30, (void (__cdecl *)(void *))sub_1000BB820);
      }
      LODWORD(v13) = *(_DWORD *)(v11 + 56);
    }
    if (v13 == 11
      && google::protobuf::FieldDescriptor::is_map_message_type((google::protobuf::FieldDescriptor *)v11))
    {
      uint64_t v15 = *(void *)(google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v11) + 40);
      unint64_t v16 = *(std::once_flag::_State_type **)(v15 + 200);
      if (v16)
      {
        uint64_t v28 = v15 + 152;
        uint64_t v29 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v16, memory_order_acquire) != -1)
        {
          uint64_t v31 = &v29;
          uint64_t v32 = &v28;
          v30[0] = &v31;
          std::__call_once(v16, v30, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v15 + 208)] != 10) {
        goto LABEL_33;
      }
      MapData = (atomic_uint *)google::protobuf::Reflection::GetMapData(v4, this, (const google::protobuf::FieldDescriptor *)v11);
      if (google::protobuf::internal::MapFieldBase::IsMapValid(MapData))
      {
        sub_10012073C((uint64_t)&v31, this, (const google::protobuf::FieldDescriptor *)v11);
        sub_10012073C((uint64_t)v30, this, (const google::protobuf::FieldDescriptor *)v11);
        (*(void (**)(atomic_uint *, uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *)))(*(void *)MapData + 56))(MapData, &v31);
        (*(void (**)(atomic_uint *, void *))(*(void *)MapData + 64))(MapData, v30);
        while (1)
        {
          if ((*(uint64_t (**)(uint64_t *, uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *), void *))(*v32 + 48))(v32, &v31, v30))
          {
            sub_100120978((uint64_t)v30);
            sub_100120978((uint64_t)&v31);
            goto LABEL_33;
          }
          uint64_t v18 = sub_100110420((uint64_t)&v33);
          if (((*(uint64_t (**)(uint64_t))(*(void *)v18 + 48))(v18) & 1) == 0) {
            break;
          }
          (*(void (**)(uint64_t *, uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *)))(*v32 + 152))(v32, &v31);
        }
        sub_100120978((uint64_t)v30);
        sub_100120978((uint64_t)&v31);
        goto LABEL_40;
      }
    }
    if (*(_DWORD *)(v11 + 60) == 3) {
      break;
    }
    uint64_t Message = google::protobuf::Reflection::GetMessage(v4, this, (const google::protobuf::FieldDescriptor *)v11, 0);
    if (((*(uint64_t (**)(uint64_t))(*(void *)Message + 48))(Message) & 1) == 0) {
      goto LABEL_40;
    }
LABEL_33:
    v9 += 8;
    if (v9 == v10)
    {
      uint64_t v23 = 1;
      goto LABEL_41;
    }
  }
  int v19 = google::protobuf::Reflection::FieldSize(v4, this, (const google::protobuf::FieldDescriptor *)v11);
  if (v19 < 1) {
    goto LABEL_33;
  }
  int v20 = 0;
  while (1)
  {
    Repeateduint64_t Message = google::protobuf::Reflection::GetRepeatedMessage(v4, this, (const google::protobuf::FieldDescriptor *)v11, v20);
    if (((*(uint64_t (**)(uint64_t))(*(void *)RepeatedMessage + 48))(RepeatedMessage) & 1) == 0) {
      break;
    }
    if (v19 == ++v20) {
      goto LABEL_33;
    }
  }
LABEL_40:
  uint64_t v23 = 0;
LABEL_41:
  uint64_t v9 = v25;
  if (v25)
  {
LABEL_42:
    uint64_t v26 = v9;
    operator delete(v9);
  }
  return v23;
}

void sub_10012EEE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ReflectionOps::DiscardUnknownFields(google::protobuf::internal::ReflectionOps *this, google::protobuf::Message *a2)
{
  uint64_t v3 = (google::protobuf::Reflection *)sub_10012E860((uint64_t)this);
  uint64_t v4 = google::protobuf::Reflection::MutableUnknownFields(v3, this);
  if (*v4 != v4[1]) {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)v4);
  }
  int v19 = 0;
  int v20 = 0;
  uint64_t v21 = 0;
  google::protobuf::Reflection::ListFields((uint64_t)v3, (uint64_t)this, (uint64_t)&v19);
  int v5 = v19;
  uint64_t v6 = v20;
  if (v19 != v20)
  {
    do
    {
      uint64_t v7 = *(void *)v5;
      unint64_t v8 = *(std::once_flag::_State_type **)(*(void *)v5 + 48);
      if (v8)
      {
        uint64_t v22 = *(void *)v5;
        uint64_t v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
        {
          int v25 = &v23;
          uint64_t v26 = (google::protobuf::internal::MapFieldBase *)&v22;
          v24[0] = &v25;
          std::__call_once(v8, v24, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      uint64_t v9 = *(unsigned int *)(v7 + 56);
      if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[v9] == 10)
      {
        unint64_t v10 = *(std::once_flag::_State_type **)(v7 + 48);
        if (v10)
        {
          uint64_t v22 = v7;
          uint64_t v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v10, memory_order_acquire) != -1)
          {
            int v25 = &v23;
            uint64_t v26 = (google::protobuf::internal::MapFieldBase *)&v22;
            v24[0] = &v25;
            std::__call_once(v10, v24, (void (__cdecl *)(void *))sub_1000BB820);
          }
          LODWORD(v9) = *(_DWORD *)(v7 + 56);
        }
        if (v9 != 11
          || !google::protobuf::FieldDescriptor::is_map_message_type((google::protobuf::FieldDescriptor *)v7))
        {
          goto LABEL_22;
        }
        uint64_t v11 = *(void *)(google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)v7) + 40);
        uint64_t v12 = *(std::once_flag::_State_type **)(v11 + 200);
        if (v12)
        {
          uint64_t v22 = v11 + 152;
          uint64_t v23 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
          {
            int v25 = &v23;
            uint64_t v26 = (google::protobuf::internal::MapFieldBase *)&v22;
            v24[0] = &v25;
            std::__call_once(v12, v24, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(v11 + 208)] == 10)
        {
          uint64_t v13 = (atomic_uint *)google::protobuf::Reflection::MutableMapData(v3, this, (const google::protobuf::FieldDescriptor *)v7);
          if (google::protobuf::internal::MapFieldBase::IsMapValid(v13))
          {
            sub_10012073C((uint64_t)&v25, this, (const google::protobuf::FieldDescriptor *)v7);
            sub_10012073C((uint64_t)v24, this, (const google::protobuf::FieldDescriptor *)v7);
            (*(void (**)(atomic_uint *, uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *)))(*(void *)v13 + 56))(v13, &v25);
            (*(void (**)(atomic_uint *, void *))(*(void *)v13 + 64))(v13, v24);
            while (((*(uint64_t (**)(google::protobuf::internal::MapFieldBase *, uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *), void *))(*(void *)v26 + 48))(v26, &v25, v24) & 1) == 0)
            {
              google::protobuf::internal::MapFieldBase::SetMapDirty((uint64_t)v26);
              uint64_t v14 = sub_100110328((uint64_t)&v27);
              (*(void (**)(uint64_t))(*(void *)v14 + 128))(v14);
              (*(void (**)(google::protobuf::internal::MapFieldBase *, uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *)))(*(void *)v26 + 152))(v26, &v25);
            }
            sub_100120978((uint64_t)v24);
            sub_100120978((uint64_t)&v25);
          }
        }
        else
        {
LABEL_22:
          if (*(_DWORD *)(v7 + 60) == 3)
          {
            int v15 = google::protobuf::Reflection::FieldSize(v3, this, (const google::protobuf::FieldDescriptor *)v7);
            if (v15 >= 1)
            {
              int v16 = 0;
              do
              {
                uint64_t v17 = google::protobuf::Reflection::MutableRepeatedMessage(v3, this, (const google::protobuf::FieldDescriptor *)v7, v16);
                (*(void (**)(uint64_t))(*(void *)v17 + 128))(v17);
                ++v16;
              }
              while (v15 != v16);
            }
          }
          else
          {
            uint64_t v18 = google::protobuf::Reflection::MutableMessage(v3, this, (const google::protobuf::FieldDescriptor *)v7, 0);
            (*(void (**)(uint64_t *))(*v18 + 128))(v18);
          }
        }
      }
      v5 += 8;
    }
    while (v5 != v6);
    int v5 = v19;
  }
  if (v5)
  {
    int v20 = v5;
    operator delete(v5);
  }
}

void sub_10012F350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::internal::ReflectionOps::FindInitializationErrors(const google::protobuf::Message *a1, const void **a2, uint64_t *a3)
{
  uint64_t v6 = (*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a1 + 152))(a1);
  uint64_t v7 = (google::protobuf::Reflection *)sub_10012E860((uint64_t)a1);
  int v8 = *(_DWORD *)(v6 + 104);
  if (v8 >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 152 * v8;
    do
    {
      uint64_t v11 = (const google::protobuf::FieldDescriptor *)(*(void *)(v6 + 40) + v9);
      if (*((_DWORD *)v11 + 15) == 2 && (google::protobuf::Reflection::HasField(v7, a1, v11) & 1) == 0)
      {
        sub_1000FDCC4(a2, *(const void ***)(*(void *)(v6 + 40) + v9), (uint64_t)&__p);
        unint64_t v13 = a3[1];
        unint64_t v12 = a3[2];
        if (v13 >= v12)
        {
          unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v13 - *a3) >> 3);
          unint64_t v16 = v15 + 1;
          if (v15 + 1 > 0xAAAAAAAAAAAAAAALL) {
            sub_100078F84();
          }
          unint64_t v17 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v12 - *a3) >> 3);
          if (2 * v17 > v16) {
            unint64_t v16 = 2 * v17;
          }
          if (v17 >= 0x555555555555555) {
            unint64_t v18 = 0xAAAAAAAAAAAAAAALL;
          }
          else {
            unint64_t v18 = v16;
          }
          uint64_t v37 = a3 + 2;
          if (v18) {
            int v19 = (unsigned int **)sub_1000D8B84((uint64_t)(a3 + 2), v18);
          }
          else {
            int v19 = 0;
          }
          int v20 = &v19[3 * v15];
          uint64_t v33 = v19;
          uint64_t v34 = v20;
          uint64_t v36 = (char *)&v19[3 * v18];
          long long v21 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          std::string v20[2] = (unsigned int *)__p.__r_.__value_.__r.__words[2];
          *(_OWORD *)int v20 = v21;
          memset(&__p, 0, sizeof(__p));
          uint64_t v35 = (char *)(v20 + 3);
          sub_1000D8B0C(a3, &v33);
          uint64_t v22 = a3[1];
          sub_1000D8CEC((uint64_t)&v33);
          int v23 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
          a3[1] = v22;
          if (v23 < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          long long v14 = *(_OWORD *)&__p.__r_.__value_.__l.__data_;
          *(void *)(v13 + 1sub_1000FA614((void *)this + 6) = *((void *)&__p.__r_.__value_.__l + 2);
          *(_OWORD *)unint64_t v13 = v14;
          a3[1] = v13 + 24;
        }
      }
      v9 += 152;
    }
    while (v10 != v9);
  }
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  google::protobuf::Reflection::ListFieldsOmitStripped(v7, a1, &v33);
  uint64_t v24 = v33;
  int v25 = v34;
  if (v33 != v34)
  {
    do
    {
      uint64_t v26 = *v24;
      uint64_t v27 = (std::once_flag::_State_type *)*((void *)*v24 + 6);
      if (v27)
      {
        uint64_t v38 = *v24;
        char v39 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v27, memory_order_acquire) != -1)
        {
          __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v39;
          __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v38;
          p_p = &__p;
          std::__call_once(v27, &p_p, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[v26[14]] == 10)
      {
        if (v26[15] == 3)
        {
          int v28 = google::protobuf::Reflection::FieldSize(v7, a1, (const google::protobuf::FieldDescriptor *)v26);
          if (v28 >= 1)
          {
            uint64_t v29 = 0;
            do
            {
              Repeateduint64_t Message = google::protobuf::Reflection::GetRepeatedMessage(v7, a1, (const google::protobuf::FieldDescriptor *)v26, (int)v29);
              sub_10012F784((uint64_t)a2, (const std::string::value_type **)v26, v29, &__p);
              google::protobuf::internal::ReflectionOps::FindInitializationErrors(RepeatedMessage, &__p, a3);
              if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(__p.__r_.__value_.__l.__data_);
              }
              uint64_t v29 = (google::protobuf *)(v29 + 1);
            }
            while (v28 != v29);
          }
        }
        else
        {
          uint64_t Message = google::protobuf::Reflection::GetMessage(v7, a1, (const google::protobuf::FieldDescriptor *)v26, 0);
          sub_10012F784((uint64_t)a2, (const std::string::value_type **)v26, (google::protobuf *)0xFFFFFFFFLL, &__p);
          google::protobuf::internal::ReflectionOps::FindInitializationErrors(Message, &__p, a3);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
      }
      ++v24;
    }
    while (v24 != v25);
    uint64_t v24 = v33;
  }
  if (v24)
  {
    uint64_t v34 = v24;
    operator delete(v24);
  }
}

void sub_10012F70C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_10012F784@<X0>(uint64_t a1@<X0>, const std::string::value_type **a2@<X1>, google::protobuf *a3@<X2>, std::string *a4@<X8>)
{
  if (*(char *)(a1 + 23) < 0)
  {
    sub_1000BB834(a4, *(void **)a1, *(void *)(a1 + 8));
  }
  else
  {
    *(_OWORD *)&a4->__r_.__value_.__l.__data_ = *(_OWORD *)a1;
    a4->__r_.__value_.__r.__words[2] = *(void *)(a1 + 16);
  }
  if (*((unsigned char *)a2 + 67))
  {
    std::string::append(a4, "(");
    uint64_t v7 = a2[1];
    int v8 = v7[23];
    if (v8 >= 0) {
      uint64_t v9 = a2[1];
    }
    else {
      uint64_t v9 = *(const std::string::value_type **)v7;
    }
    if (v8 >= 0) {
      std::string::size_type v10 = *((unsigned __int8 *)v7 + 23);
    }
    else {
      std::string::size_type v10 = *((void *)v7 + 1);
    }
    std::string::append(a4, v9, v10);
    std::string::append(a4, ")");
  }
  else
  {
    int v11 = (*a2)[23];
    if (v11 >= 0) {
      unint64_t v12 = *a2;
    }
    else {
      unint64_t v12 = *(const std::string::value_type **)*a2;
    }
    if (v11 >= 0) {
      std::string::size_type v13 = *((unsigned __int8 *)*a2 + 23);
    }
    else {
      std::string::size_type v13 = *((void *)*a2 + 1);
    }
    std::string::append(a4, v12, v13);
  }
  if (a3 != -1)
  {
    std::string::append(a4, "[");
    __src = v22;
    size_t v21 = google::protobuf::FastInt32ToBufferLeft(a3, v22, v14) - v22;
    sub_1000BB9D8(__p, v22, v21);
    if ((v19 & 0x80u) == 0) {
      unint64_t v15 = __p;
    }
    else {
      unint64_t v15 = (void **)__p[0];
    }
    if ((v19 & 0x80u) == 0) {
      std::string::size_type v16 = v19;
    }
    else {
      std::string::size_type v16 = (std::string::size_type)__p[1];
    }
    std::string::append(a4, (const std::string::value_type *)v15, v16);
    if ((char)v19 < 0) {
      operator delete(__p[0]);
    }
    std::string::append(a4, "]");
  }
  return std::string::append(a4, ".");
}

void sub_10012F91C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v14 + 23) < 0) {
    operator delete(*(void **)v14);
  }
  _Unwind_Resume(exception_object);
}

google::protobuf::Arena **google::protobuf::internal::GenericSwap(google::protobuf::internal *this, google::protobuf::Message *a2, google::protobuf::Message *a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  uint64_t v6 = (void *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    uint64_t v6 = (void *)*v6;
  }
  uint64_t v7 = (*(uint64_t (**)(google::protobuf::Message *, void *, google::protobuf::Message *))(*(void *)a2 + 32))(a2, v6, a3);
  int v8 = (google::protobuf::Message *)v7;
  if (v6) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v7;
  }
  (*(void (**)(uint64_t, google::protobuf::internal *))(*(void *)v7 + 64))(v7, this);
  (*(void (**)(google::protobuf::internal *))(*(void *)this + 40))(this);
  (*(void (**)(google::protobuf::internal *, google::protobuf::Message *))(*(void *)this + 64))(this, a2);
  (*(void (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  uint64_t result = google::protobuf::Reflection::Swap(v10, v8, a2);
  if (v9)
  {
    unint64_t v12 = *(uint64_t (**)(uint64_t))(*(void *)v9 + 8);
    return (google::protobuf::Arena **)v12(v9);
  }
  return result;
}

void sub_10012FAC8(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_10016B2EC(v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<BOOL>::Reserve(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    uint64_t v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = (void *)((char *)v4 - 8);
  }
  uint64_t v4 = (google::protobuf::Arena *)*((void *)v4 - 1);
  if (a2 < 4)
  {
LABEL_6:
    unsigned int v6 = 4;
    goto LABEL_13;
  }
  if (v2 > 0x3FFFFFFF)
  {
    unsigned int v6 = 0x7FFFFFFF;
    goto LABEL_13;
  }
LABEL_10:
  int v7 = 2 * v2;
  if (v7 <= a2) {
    unsigned int v6 = a2;
  }
  else {
    unsigned int v6 = v7;
  }
LABEL_13:
  if (v4) {
    int v8 = (void *)sub_100036A08(v4, v6 + 8);
  }
  else {
    int v8 = operator new(v6 + 8);
  }
  *int v8 = v4;
  uint64_t v9 = v8 + 1;
  a1[1] = v6;
  *((void *)a1 + sub_1000333D0((uint64_t *)this + 1) = v9;
  size_t v10 = *a1;
  if ((int)v10 >= 1) {
    memcpy(v9, v5 + 1, v10);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

{
  google::protobuf::RepeatedField<BOOL>::Reserve(a1, a2);
}

uint64_t google::protobuf::RepeatedField<BOOL>::RepeatedField(uint64_t a1, int *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  int v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<BOOL>::Reserve((unsigned int *)a1, v4);
    uint64_t v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), *a2);
  }
  return a1;
}

{
  return google::protobuf::RepeatedField<BOOL>::RepeatedField(a1, a2);
}

void google::protobuf::RepeatedField<BOOL>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    uint64_t v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<BOOL>::Reserve((unsigned int *)__dst, *a1);
        size_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<BOOL>::Reserve((unsigned int *)a1, *a2);
        int v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v1sub_1000333D0((uint64_t *)this + 1) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        size_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

{
  google::protobuf::RepeatedField<BOOL>::Swap(a1, a2);
}

void sub_10012FD68(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
{
  if (a10 >= 1) {
    sub_10016B310(v10);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<int>::Reserve(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    int v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else
  {
    int v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = (void *)((char *)v4 - 8);
  }
  int v4 = (google::protobuf::Arena *)*((void *)v4 - 1);
  if (a2 < 4)
  {
LABEL_6:
    unsigned int v6 = 4;
    goto LABEL_13;
  }
  if (v2 > 0x3FFFFFFF)
  {
    unsigned int v6 = 0x7FFFFFFF;
    goto LABEL_13;
  }
LABEL_10:
  int v7 = 2 * v2;
  if (v7 <= a2) {
    unsigned int v6 = a2;
  }
  else {
    unsigned int v6 = v7;
  }
LABEL_13:
  uint64_t v8 = 4 * v6;
  if (v4) {
    unint64_t v9 = (void *)sub_100036A08(v4, v8 + 8);
  }
  else {
    unint64_t v9 = operator new(v8 + 8);
  }
  *unint64_t v9 = v4;
  size_t v10 = v9 + 1;
  a1[1] = v6;
  *((void *)a1 + sub_1000333D0((uint64_t *)this + 1) = v10;
  uint64_t v11 = *a1;
  if ((int)v11 >= 1) {
    memcpy(v10, v5 + 1, 4 * v11);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

{
  google::protobuf::RepeatedField<int>::Reserve(a1, a2);
}

uint64_t google::protobuf::RepeatedField<int>::RepeatedField(uint64_t a1, int *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  int v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a1, v4);
    uint64_t v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), 4 * *a2);
  }
  return a1;
}

{
  return google::protobuf::RepeatedField<int>::RepeatedField(a1, a2);
}

void google::protobuf::RepeatedField<int>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    uint64_t v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)__dst, *a1);
        uint64_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 4 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a1, *a2);
        uint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 4 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v1sub_1000333D0((uint64_t *)this + 1) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        size_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

{
  google::protobuf::RepeatedField<int>::Swap(a1, a2);
}

void sub_100130020(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
{
  if (a10 >= 1) {
    sub_10016B310(v10);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<unsigned int>::Reserve(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    int v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else
  {
    int v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = (void *)((char *)v4 - 8);
  }
  int v4 = (google::protobuf::Arena *)*((void *)v4 - 1);
  if (a2 < 4)
  {
LABEL_6:
    unsigned int v6 = 4;
    goto LABEL_13;
  }
  if (v2 > 0x3FFFFFFF)
  {
    unsigned int v6 = 0x7FFFFFFF;
    goto LABEL_13;
  }
LABEL_10:
  int v7 = 2 * v2;
  if (v7 <= a2) {
    unsigned int v6 = a2;
  }
  else {
    unsigned int v6 = v7;
  }
LABEL_13:
  uint64_t v8 = 4 * v6;
  if (v4) {
    unint64_t v9 = (void *)sub_100036A08(v4, v8 + 8);
  }
  else {
    unint64_t v9 = operator new(v8 + 8);
  }
  *unint64_t v9 = v4;
  size_t v10 = v9 + 1;
  a1[1] = v6;
  *((void *)a1 + sub_1000333D0((uint64_t *)this + 1) = v10;
  uint64_t v11 = *a1;
  if ((int)v11 >= 1) {
    memcpy(v10, v5 + 1, 4 * v11);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

{
  google::protobuf::RepeatedField<unsigned int>::Reserve(a1, a2);
}

uint64_t google::protobuf::RepeatedField<unsigned int>::RepeatedField(uint64_t a1, int *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  int v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)a1, v4);
    uint64_t v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), 4 * *a2);
  }
  return a1;
}

{
  return google::protobuf::RepeatedField<unsigned int>::RepeatedField(a1, a2);
}

void google::protobuf::RepeatedField<unsigned int>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    uint64_t v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)__dst, *a1);
        uint64_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 4 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)a1, *a2);
        uint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 4 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v1sub_1000333D0((uint64_t *)this + 1) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        size_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

{
  google::protobuf::RepeatedField<unsigned int>::Swap(a1, a2);
}

void sub_1001302D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
{
  if (a10 >= 1) {
    sub_10016B310(v10);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<long long>::Reserve(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    int v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else
  {
    int v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = (void *)((char *)v4 - 8);
  }
  int v4 = (google::protobuf::Arena *)*((void *)v4 - 1);
  if (a2 < 4)
  {
LABEL_6:
    unsigned int v6 = 4;
    goto LABEL_13;
  }
  if (v2 > 0x3FFFFFFF)
  {
    unsigned int v6 = 0x7FFFFFFF;
    goto LABEL_13;
  }
LABEL_10:
  int v7 = 2 * v2;
  if (v7 <= a2) {
    unsigned int v6 = a2;
  }
  else {
    unsigned int v6 = v7;
  }
LABEL_13:
  uint64_t v8 = 8 * v6;
  if (v4) {
    unint64_t v9 = (void *)sub_100036A08(v4, v8 + 8);
  }
  else {
    unint64_t v9 = operator new(v8 + 8);
  }
  *unint64_t v9 = v4;
  size_t v10 = v9 + 1;
  a1[1] = v6;
  *((void *)a1 + sub_1000333D0((uint64_t *)this + 1) = v10;
  uint64_t v11 = *a1;
  if ((int)v11 >= 1) {
    memcpy(v10, v5 + 1, 8 * v11);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

{
  google::protobuf::RepeatedField<long long>::Reserve(a1, a2);
}

uint64_t google::protobuf::RepeatedField<long long>::RepeatedField(uint64_t a1, int *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  int v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)a1, v4);
    uint64_t v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), 8 * *a2);
  }
  return a1;
}

{
  return google::protobuf::RepeatedField<long long>::RepeatedField(a1, a2);
}

void google::protobuf::RepeatedField<long long>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    uint64_t v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)__dst, *a1);
        uint64_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 8 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<long long>::Reserve((unsigned int *)a1, *a2);
        uint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 8 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v1sub_1000333D0((uint64_t *)this + 1) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        size_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

{
  google::protobuf::RepeatedField<long long>::Swap(a1, a2);
}

void sub_100130590(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
{
  if (a10 >= 1) {
    sub_10016B310(v10);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<unsigned long long>::Reserve(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    int v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else
  {
    int v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = (void *)((char *)v4 - 8);
  }
  int v4 = (google::protobuf::Arena *)*((void *)v4 - 1);
  if (a2 < 4)
  {
LABEL_6:
    unsigned int v6 = 4;
    goto LABEL_13;
  }
  if (v2 > 0x3FFFFFFF)
  {
    unsigned int v6 = 0x7FFFFFFF;
    goto LABEL_13;
  }
LABEL_10:
  int v7 = 2 * v2;
  if (v7 <= a2) {
    unsigned int v6 = a2;
  }
  else {
    unsigned int v6 = v7;
  }
LABEL_13:
  uint64_t v8 = 8 * v6;
  if (v4) {
    unint64_t v9 = (void *)sub_100036A08(v4, v8 + 8);
  }
  else {
    unint64_t v9 = operator new(v8 + 8);
  }
  *unint64_t v9 = v4;
  size_t v10 = v9 + 1;
  a1[1] = v6;
  *((void *)a1 + sub_1000333D0((uint64_t *)this + 1) = v10;
  uint64_t v11 = *a1;
  if ((int)v11 >= 1) {
    memcpy(v10, v5 + 1, 8 * v11);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

{
  google::protobuf::RepeatedField<unsigned long long>::Reserve(a1, a2);
}

uint64_t google::protobuf::RepeatedField<unsigned long long>::RepeatedField(uint64_t a1, int *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  int v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)a1, v4);
    uint64_t v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), 8 * *a2);
  }
  return a1;
}

{
  return google::protobuf::RepeatedField<unsigned long long>::RepeatedField(a1, a2);
}

void google::protobuf::RepeatedField<unsigned long long>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    uint64_t v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)__dst, *a1);
        uint64_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 8 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)a1, *a2);
        uint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 8 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v1sub_1000333D0((uint64_t *)this + 1) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        size_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

{
  google::protobuf::RepeatedField<unsigned long long>::Swap(a1, a2);
}

void sub_100130848(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
{
  if (a10 >= 1) {
    sub_10016B310(v10);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<float>::Reserve(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    int v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else
  {
    int v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = (void *)((char *)v4 - 8);
  }
  int v4 = (google::protobuf::Arena *)*((void *)v4 - 1);
  if (a2 < 4)
  {
LABEL_6:
    unsigned int v6 = 4;
    goto LABEL_13;
  }
  if (v2 > 0x3FFFFFFF)
  {
    unsigned int v6 = 0x7FFFFFFF;
    goto LABEL_13;
  }
LABEL_10:
  int v7 = 2 * v2;
  if (v7 <= a2) {
    unsigned int v6 = a2;
  }
  else {
    unsigned int v6 = v7;
  }
LABEL_13:
  uint64_t v8 = 4 * v6;
  if (v4) {
    unint64_t v9 = (void *)sub_100036A08(v4, v8 + 8);
  }
  else {
    unint64_t v9 = operator new(v8 + 8);
  }
  *unint64_t v9 = v4;
  size_t v10 = v9 + 1;
  a1[1] = v6;
  *((void *)a1 + sub_1000333D0((uint64_t *)this + 1) = v10;
  uint64_t v11 = *a1;
  if ((int)v11 >= 1) {
    memcpy(v10, v5 + 1, 4 * v11);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

{
  google::protobuf::RepeatedField<float>::Reserve(a1, a2);
}

uint64_t google::protobuf::RepeatedField<float>::RepeatedField(uint64_t a1, int *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  int v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<float>::Reserve((unsigned int *)a1, v4);
    uint64_t v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), 4 * *a2);
  }
  return a1;
}

{
  return google::protobuf::RepeatedField<float>::RepeatedField(a1, a2);
}

void google::protobuf::RepeatedField<float>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    uint64_t v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<float>::Reserve((unsigned int *)__dst, *a1);
        uint64_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 4 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<float>::Reserve((unsigned int *)a1, *a2);
        uint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 4 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v1sub_1000333D0((uint64_t *)this + 1) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        size_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

{
  google::protobuf::RepeatedField<float>::Swap(a1, a2);
}

void sub_100130B00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
{
  if (a10 >= 1) {
    sub_10016B310(v10);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::RepeatedField<double>::Reserve(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    int v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else
  {
    int v4 = (google::protobuf::Arena *)*((void *)a1 + 1);
    uint64_t v5 = (void *)((char *)v4 - 8);
  }
  int v4 = (google::protobuf::Arena *)*((void *)v4 - 1);
  if (a2 < 4)
  {
LABEL_6:
    unsigned int v6 = 4;
    goto LABEL_13;
  }
  if (v2 > 0x3FFFFFFF)
  {
    unsigned int v6 = 0x7FFFFFFF;
    goto LABEL_13;
  }
LABEL_10:
  int v7 = 2 * v2;
  if (v7 <= a2) {
    unsigned int v6 = a2;
  }
  else {
    unsigned int v6 = v7;
  }
LABEL_13:
  uint64_t v8 = 8 * v6;
  if (v4) {
    unint64_t v9 = (void *)sub_100036A08(v4, v8 + 8);
  }
  else {
    unint64_t v9 = operator new(v8 + 8);
  }
  *unint64_t v9 = v4;
  size_t v10 = v9 + 1;
  a1[1] = v6;
  *((void *)a1 + sub_1000333D0((uint64_t *)this + 1) = v10;
  uint64_t v11 = *a1;
  if ((int)v11 >= 1) {
    memcpy(v10, v5 + 1, 8 * v11);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

{
  google::protobuf::RepeatedField<double>::Reserve(a1, a2);
}

uint64_t google::protobuf::RepeatedField<double>::RepeatedField(uint64_t a1, int *a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  int v4 = *a2;
  if (v4)
  {
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)a1, v4);
    uint64_t v5 = *(void **)(a1 + 8);
    *(_DWORD *)a1 += *a2;
    memcpy(v5, *((const void **)a2 + 1), 8 * *a2);
  }
  return a1;
}

{
  return google::protobuf::RepeatedField<double>::RepeatedField(a1, a2);
}

void google::protobuf::RepeatedField<double>::Swap(int *a1, int *a2)
{
  if (a1 != a2)
  {
    int v4 = (void **)(a1 + 2);
    if (a1[1]) {
      int v4 = (void **)((char *)*v4 - 8);
    }
    uint64_t v5 = *v4;
    unsigned int v6 = (void *)*((void *)a2 + 1);
    if (a2[1]) {
      unsigned int v6 = (void *)*(v6 - 1);
    }
    if (v5 == v6)
    {
      uint64_t v12 = *(void *)a1;
      uint64_t v13 = *((void *)a1 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(void *)a2 = v12;
      *((void *)a2 + sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      __dst[0] = 0;
      __dst[1] = v6;
      if (*a1)
      {
        google::protobuf::RepeatedField<double>::Reserve((unsigned int *)__dst, *a1);
        uint64_t v7 = *a1;
        LODWORD(__dst[0]) += v7;
        memcpy(__dst[1], *((const void **)a1 + 1), 8 * v7);
      }
      *a1 = 0;
      if (*a2)
      {
        google::protobuf::RepeatedField<double>::Reserve((unsigned int *)a1, *a2);
        uint64_t v8 = (void *)*((void *)a1 + 1);
        *a1 += *a2;
        memcpy(v8, *((const void **)a2 + 1), 8 * *a2);
      }
      if (__dst == (void **)a2)
      {
        LODWORD(v1sub_1000333D0((uint64_t *)this + 1) = HIDWORD(__dst[0]);
      }
      else
      {
        unint64_t v9 = *(void *)a2;
        size_t v10 = (void *)*((void *)a2 + 1);
        *(_OWORD *)a2 = *(_OWORD *)__dst;
        __dst[0] = (void *)v9;
        __dst[1] = v10;
        unint64_t v11 = HIDWORD(v9);
      }
      if ((int)v11 >= 1 && !*((void *)__dst[1] - 1)) {
        operator delete((char *)__dst[1] - 8);
      }
    }
  }
}

{
  google::protobuf::RepeatedField<double>::Swap(a1, a2);
}

void sub_100130DB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10)
{
  if (a10 >= 1) {
    sub_10016B310(v10);
  }
  _Unwind_Resume(exception_object);
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::Reserve(unsigned int *this, int a2)
{
  unsigned int v2 = this[2];
  BOOL v3 = __OFSUB__(a2, v2);
  int v4 = a2 - v2;
  if (!((v4 < 0) ^ v3 | (v4 == 0))) {
    return google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)this, v4);
  }
  return this;
}

unsigned int *google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend(google::protobuf::internal::RepeatedPtrFieldBase *this, int a2)
{
  int v2 = *((_DWORD *)this + 2);
  int v3 = *((_DWORD *)this + 3);
  int v4 = v2 + a2;
  uint64_t v5 = (unsigned int *)*((void *)this + 2);
  if (v3 < v2 + a2)
  {
    uint64_t v7 = *(void *)this;
    int v8 = 2 * v3;
    if (2 * v3 <= v4) {
      int v8 = v4;
    }
    if (v8 <= 4) {
      unsigned int v9 = 4;
    }
    else {
      unsigned int v9 = v8;
    }
    uint64_t v10 = 8 * v9;
    if (v7) {
      unint64_t v11 = (unsigned int *)sub_100036A08(*(google::protobuf::Arena **)this, v10 + 8);
    }
    else {
      unint64_t v11 = (unsigned int *)operator new(v10 + 8);
    }
    *((void *)this + sub_1000FACE4((void *)this + 2) = v11;
    *((_DWORD *)this + 3) = v9;
    if (v5 && (uint64_t v12 = *v5, (int)v12 >= 1))
    {
      memcpy(v11 + 2, v5 + 2, 8 * v12);
      unint64_t v11 = (unsigned int *)*((void *)this + 2);
      unsigned int *v11 = *v5;
      if (!v7) {
        goto LABEL_15;
      }
    }
    else
    {
      unsigned int *v11 = 0;
      if (!v7)
      {
LABEL_15:
        operator delete(v5);
        unint64_t v11 = (unsigned int *)*((void *)this + 2);
      }
    }
    int v2 = *((_DWORD *)this + 2);
    uint64_t v5 = v11;
  }
  return &v5[2 * v2 + 2];
}

__n128 sub_100130EC4(google::protobuf::Arena *a1, __n128 *a2)
{
  if (!a1) {
    operator new();
  }
  int v3 = (__n128 *)sub_1000BBB7C(a1, 0);
  __n128 result = *a2;
  v3[1].n128_u64[0] = a2[1].n128_u64[0];
  *int v3 = result;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  a2->n128_u64[0] = 0;
  return result;
}

uint64_t sub_100130F24(void *a1)
{
  return *a1 - 8;
}

void sub_100130F30(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/field_mask.pb.cc", a4);
  google::protobuf::FieldMask::FieldMask((uint64_t)&google::protobuf::_FieldMask_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_FieldMask_default_instance_, v4);
}

uint64_t google::protobuf::FieldMask::FieldMask(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D2418;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_1000FACE4((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftimestamp_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FieldMask_google_2fprotobuf_2ffield_5fmask_2eproto);
  }
  return a1;
}

void sub_100131010(_Unwind_Exception *a1)
{
  sub_1000F9C98(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::FieldMask::~FieldMask(google::protobuf::FieldMask *this)
{
}

{
  uint64_t vars8;

  google::protobuf::FieldMask::~FieldMask(this);
  operator delete();
}

uint64_t google::protobuf::FieldMask::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftimestamp_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::FieldMask::Clear(google::protobuf::FieldMask *this)
{
  __n128 result = (google::protobuf::Arena **)sub_1000F9B0C((uint64_t)this + 16);
  char v4 = *((unsigned char *)this + 8);
  int v3 = (unint64_t *)((char *)this + 8);
  if (v4)
  {
    return sub_100035820(v3);
  }
  return result;
}

google::protobuf::internal *google::protobuf::FieldMask::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v23 = a2;
  if ((sub_1000355B8(a3, &v23, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v6 = (google::protobuf::internal *)((char *)v23 + 1);
      unsigned int v7 = *(unsigned __int8 *)v23;
      if ((*(char *)v23 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v23, (const char *)(v8 - 128));
      int v23 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unsigned int v6 = TagFallback;
      unsigned int v7 = v21;
LABEL_7:
      if (v7 == 10)
      {
        unint64_t v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          uint64_t v12 = (char *)v11 + 1;
          int v23 = (google::protobuf::internal *)((char *)v11 + 1);
          uint64_t v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              uint64_t v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            int *v13 = v15 + 1;
            std::string::size_type v16 = (std::string *)sub_1000BBB38(*(google::protobuf::Arena **)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            uint64_t v12 = (std::string::value_type *)v23;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          std::string::size_type v16 = *(std::string **)&v13[2 * v14 + 2];
LABEL_24:
          int v23 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v16, v12, a3);
          sub_1000BB974(v24, (uint64_t *)v16, v19);
          if (!google::protobuf::internal::VerifyUTF8(v24[0], (const char *)v24[1], (google::protobuf::internal *)"google.protobuf.FieldMask.paths"))return 0; {
          unint64_t v11 = v23;
          }
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *(unsigned char *)v23 != 10) {
            goto LABEL_28;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftimestamp_2eproto, 0) = v7 - 1;
        return v23;
      }
      if (*v5)
      {
        uint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        uint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
        unsigned int v6 = v23;
      }
      int v23 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v23) {
        return 0;
      }
LABEL_28:
      if (sub_1000355B8(a3, &v23, *(_DWORD *)(a3 + 92))) {
        return v23;
      }
    }
    unsigned int v6 = (google::protobuf::internal *)((char *)v23 + 2);
LABEL_6:
    int v23 = v6;
    goto LABEL_7;
  }
  return v23;
}

const google::protobuf::UnknownFieldSet *google::protobuf::FieldMask::_InternalSerialize(google::protobuf::FieldMask *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v7 = *((unsigned int *)this + 6);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      uint64_t v10 = *(void *)(*((void *)this + 4) + v8 + 8);
      if (*(char *)(v10 + 23) < 0)
      {
        uint64_t v12 = *(google::protobuf::internal **)v10;
        unint64_t v11 = *(const char **)(v10 + 8);
      }
      else
      {
        unint64_t v11 = (const char *)*(unsigned __int8 *)(v10 + 23);
        uint64_t v12 = *(google::protobuf::internal **)(*((void *)this + 4) + v8 + 8);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, v11, 1, (google::protobuf::internal *)"google.protobuf.FieldMask.paths");
      a2 = (google::protobuf::UnknownFieldSet *)sub_1000E4244(a3, 1, v10, (unsigned __int8 *)a2);
      v8 += 8;
    }
    while (v9 != v8);
  }
  uint64_t v13 = *((void *)this + 1);
  if ((v13 & 1) == 0) {
    return a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v13 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::FieldMask::ByteSizeLong(google::protobuf::FieldMask *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  if ((int)v1 < 1)
  {
    int v3 = (const google::protobuf::UnknownFieldSet *)*((unsigned int *)this + 6);
  }
  else
  {
    int v2 = (uint64_t *)(*((void *)this + 4) + 8);
    int v3 = (const google::protobuf::UnknownFieldSet *)*((unsigned int *)this + 6);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      int v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6));
      --v1;
    }
    while (v1);
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::FieldMask *)((char *)this + 8), v3, (_DWORD *)this + 10);
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftimestamp_2eproto, 0) = v3;
  return (char *)v3;
}

void google::protobuf::FieldMask::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::FieldMask::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::FieldMask::MergeFrom(std::string *this, const google::protobuf::FieldMask *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (const std::string **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], v5);
    this = sub_1000F9F28((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  return this;
}

void google::protobuf::FieldMask::CopyFrom(google::protobuf::FieldMask *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::FieldMask::Clear(this);
    google::protobuf::FieldMask::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::FieldMask::IsInitialized(google::protobuf::FieldMask *this)
{
  return 1;
}

uint64_t google::protobuf::FieldMask::GetMetadata(google::protobuf::FieldMask *this)
{
  return *off_1001EAFD8;
}

void *sub_10013165C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1001316F4(a1, 1);
  google::protobuf::FieldMask::FieldMask((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1001316C0()
{
}

uint64_t sub_1001316E4()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldMask>(0);
}

uint64_t sub_1001316EC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldMask>(a2);
}

void *sub_1001316F4(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))google::protobuf::FieldMask::~FieldMask);
}

void sub_1001317B0()
{
}

std::string *google::protobuf::StripWhitespace(std::string *this)
{
  uint64_t v1 = this;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
    std::string::size_type size = this->__r_.__value_.__l.__size_;
  }
  else {
    LODWORD(size) = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  if ((int)size < 1)
  {
    if (size) {
      return this;
    }
    goto LABEL_24;
  }
  std::string::size_type v3 = 0;
  while (1)
  {
    this = (std::string *)std::string::at(v1, v3);
    int v4 = this->__r_.__value_.__s.__data_[0];
    if ((v4 - 9) >= 5 && v4 != 32) {
      break;
    }
    if (size == ++v3) {
      goto LABEL_24;
    }
  }
  if (size == v3)
  {
LABEL_24:
    if (SHIBYTE(v1->__r_.__value_.__r.__words[2]) < 0)
    {
      *v1->__r_.__value_.__l.__data_ = 0;
      v1->__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      v1->__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&v1->__r_.__value_.__s + 23) = 0;
    }
    return this;
  }
  if (v3)
  {
    this = std::string::erase(v1, 0, v3);
    LODWORD(size) = size - v3;
  }
  uint64_t v5 = (size - 1);
  if ((int)size >= 1)
  {
    uint64_t v6 = 0;
    while (1)
    {
      this = (std::string *)std::string::at(v1, v5 + v6);
      int v7 = this->__r_.__value_.__s.__data_[0];
      if ((v7 - 9) >= 5 && v7 != 32) {
        break;
      }
      --v6;
      if (v5 + v6 + 1 <= 0) {
        return this;
      }
    }
    if (v6)
    {
      return std::string::erase(v1, (v5 + v6 + 1), 0xFFFFFFFFFFFFFFFFLL);
    }
  }
  return this;
}

void google::protobuf::SplitStringUsing(unsigned __int8 *__src, uint64_t a2, char *__s, uint64_t *a4)
{
  v34[0] = __src;
  v34[1] = a2;
  int v7 = *__s;
  if (*__s && !__s[1])
  {
    if (a2)
    {
      int v23 = __src;
      uint64_t v24 = (char *)&__src[a2];
      int v25 = (char *)&__src[a2];
      do
      {
        if (*v23 == v7)
        {
          uint64_t v26 = v23 + 1;
        }
        else
        {
          uint64_t v27 = (char *)(v23 + 1);
          while (v27 != v24)
          {
            int v28 = *v27++;
            if (v28 == v7)
            {
              uint64_t v26 = (unsigned __int8 *)(v27 - 1);
              goto LABEL_27;
            }
          }
          uint64_t v26 = (unsigned __int8 *)v25;
LABEL_27:
          sub_1000BB9D8(__p, v23, v26 - v23);
          BOOL v30 = a4;
          sub_1001336B0(&v30, (long long *)__p);
          if (v33 < 0) {
            operator delete(__p[0]);
          }
        }
        int v23 = v26;
      }
      while (v26 != (unsigned __int8 *)v24);
    }
  }
  else
  {
    size_t v8 = strlen(__s);
    uint64_t v10 = v8;
    if ((v8 & 0x8000000000000000) != 0) {
      google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v8, "size_t to int conversion", v9);
    }
    uint64_t first_not_of = google::protobuf::StringPiece::find_first_not_of(v34, (unsigned __int8 *)__s, v10, 0);
    if (first_not_of != -1)
    {
      uint64_t v12 = first_not_of;
      while (1)
      {
        size_t v13 = strlen(__s);
        uint64_t v15 = v13;
        if ((v13 & 0x8000000000000000) != 0) {
          google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v13, "size_t to int conversion", v14);
        }
        uint64_t first_of = google::protobuf::StringPiece::find_first_of((google::protobuf::StringPiece *)v34, (unsigned __int8 *)__s, v15, v12);
        if (first_of == -1) {
          break;
        }
        uint64_t v17 = first_of;
        BOOL v30 = (uint64_t *)google::protobuf::StringPiece::substr((google::protobuf::StringPiece *)v34, v12);
        uint64_t v31 = v18;
        sub_1000D7AF4((uint64_t)&v30, __p);
        uint64_t v29 = a4;
        sub_1001336B0(&v29, (long long *)__p);
        if (v33 < 0) {
          operator delete(__p[0]);
        }
        size_t v19 = strlen(__s);
        uint64_t v21 = v19;
        if ((v19 & 0x8000000000000000) != 0) {
          google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v19, "size_t to int conversion", v20);
        }
        uint64_t v12 = google::protobuf::StringPiece::find_first_not_of(v34, (unsigned __int8 *)__s, v21, v17);
        if (v12 == -1) {
          return;
        }
      }
      BOOL v30 = (uint64_t *)google::protobuf::StringPiece::substr((google::protobuf::StringPiece *)v34, v12);
      uint64_t v31 = v22;
      sub_1000D7AF4((uint64_t)&v30, __p);
      uint64_t v29 = a4;
      sub_1001336B0(&v29, (long long *)__p);
      if (v33 < 0) {
        operator delete(__p[0]);
      }
    }
  }
}

void sub_100131B20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::UnescapeCEscapeSequences(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2)
  {
    for (int i = a1; *i && *i != 92; ++i)
      ;
    a1 = i;
  }
  else
  {
    int i = a2;
  }
  while (1)
  {
    int v3 = *a1;
    if (v3 != 92)
    {
      if (!*a1) {
        goto LABEL_57;
      }
      goto LABEL_55;
    }
    int v4 = a1 + 1;
    int v3 = (char)a1[1];
    if (v3 <= 62) {
      break;
    }
    if (v3 > 97)
    {
      switch(a1[1])
      {
        case 'n':
          LOBYTE(v3) = 10;
          goto LABEL_54;
        case 'o':
        case 'p':
        case 'q':
        case 's':
        case 'u':
        case 'w':
          goto LABEL_56;
        case 'r':
          LOBYTE(v3) = 13;
          goto LABEL_54;
        case 't':
          LOBYTE(v3) = 9;
          goto LABEL_54;
        case 'v':
          LOBYTE(v3) = 11;
          goto LABEL_54;
        case 'x':
          goto LABEL_28;
        default:
          if (v3 == 102)
          {
            LOBYTE(v3) = 12;
          }
          else
          {
            if (v3 != 98) {
              goto LABEL_56;
            }
            LOBYTE(v3) = 8;
          }
          break;
      }
      goto LABEL_54;
    }
    if (v3 > 91)
    {
      if (v3 != 92)
      {
        if (v3 != 97) {
          goto LABEL_56;
        }
        LOBYTE(v3) = 7;
      }
LABEL_54:
      a1 = v4;
LABEL_55:
      *i++ = v3;
      int v4 = a1;
      goto LABEL_56;
    }
    if (v3 == 63) {
      goto LABEL_54;
    }
    if (v3 != 88) {
      goto LABEL_56;
    }
LABEL_28:
    if ((a1[2] - 48) < 0xAu || (unsigned int v11 = a1[2] - 65, v11 <= 0x25) && ((1 << v11) & 0x3F0000003FLL) != 0)
    {
      LOBYTE(v3) = 0;
      uint64_t v12 = a1 + 1;
      while (1)
      {
        unsigned __int8 v14 = *++v12;
        unsigned __int8 v13 = v14;
        if ((v14 - 48) >= 0xAu
          && (v13 - 65 > 0x25 || ((1 << (v13 - 65)) & 0x3F0000003FLL) == 0))
        {
          break;
        }
        unsigned int v16 = v13;
        char v17 = v13 + 9;
        if (v16 <= 0x39) {
          char v17 = v16;
        }
        int v4 = v12;
        LOBYTE(v3) = v17 & 0xF | (16 * v3);
      }
      goto LABEL_54;
    }
LABEL_56:
    a1 = v4 + 1;
  }
  if (v3 > 47)
  {
    if ((v3 - 48) >= 8) {
      goto LABEL_56;
    }
    LOBYTE(v3) = v3 - 48;
    unsigned __int8 v6 = a1[2];
    uint64_t v5 = a1 + 2;
    char v7 = v6 + 8 * v3 - 48;
    if ((v6 & 0xF8) == 0x30)
    {
      int v4 = v5;
      LOBYTE(v3) = v7;
    }
    unsigned __int8 v8 = v4[1];
    int v9 = v8 & 0xF8;
    char v10 = v8 + 8 * v3 - 48;
    if (v9 == 48) {
      a1 = v4 + 1;
    }
    else {
      a1 = v4;
    }
    if (v9 == 48) {
      LOBYTE(v3) = v10;
    }
    goto LABEL_55;
  }
  if (v3 == 34 || v3 == 39) {
    goto LABEL_54;
  }
  if (a1[1]) {
    goto LABEL_56;
  }
LABEL_57:
  unsigned __int8 *i = 0;
  return (i - a2);
}

void google::protobuf::UnescapeCEscapeString()
{
}

void sub_100131E38()
{
}

uint64_t google::protobuf::CEscapeInternal(google::protobuf *this, const char *a2, uint64_t a3, char *a4, int a5, char a6)
{
  int v6 = (int)a4;
  if ((int)a2 >= 1)
  {
    char v9 = a5;
    char v10 = (unsigned __int8 *)this;
    char v11 = 0;
    LODWORD(v1sub_1000F9C98((void *)this + 2) = 0;
    if (a5) {
      unsigned __int8 v13 = "\\x%02x";
    }
    else {
      unsigned __int8 v13 = "\\%03o";
    }
    unsigned __int8 v14 = (unsigned __int8 *)this + (int)a2;
    while (1)
    {
      if (v6 - (int)v12 < 2) {
        return 0xFFFFFFFFLL;
      }
      int v15 = (char)*v10;
      if (v15 > 33)
      {
        switch(v15)
        {
          case '""':
            char v11 = 0;
            *(_WORD *)(a3 + (int)v1sub_1000F9C98((void *)this + 2) = 8796;
            goto LABEL_20;
          case '\'':
            char v11 = 0;
            *(_WORD *)(a3 + (int)v1sub_1000F9C98((void *)this + 2) = 10076;
            goto LABEL_20;
          case '\\':
            char v11 = 0;
            *(_WORD *)(a3 + (int)v1sub_1000F9C98((void *)this + 2) = 23644;
            goto LABEL_20;
        }
      }
      else
      {
        switch(v15)
        {
          case 9:
            char v11 = 0;
            *(_WORD *)(a3 + (int)v1sub_1000F9C98((void *)this + 2) = 29788;
            goto LABEL_20;
          case 10:
            char v11 = 0;
            *(_WORD *)(a3 + (int)v1sub_1000F9C98((void *)this + 2) = 28252;
            goto LABEL_20;
          case 13:
            char v11 = 0;
            *(_WORD *)(a3 + (int)v1sub_1000F9C98((void *)this + 2) = 29276;
LABEL_20:
            uint64_t v12 = (v12 + 2);
            goto LABEL_21;
        }
      }
      if (v15 < 0 && (a6 & 1) != 0
        || (v15 - 32) <= 0x5E
        && ((v11 & 1) == 0
         || (v15 - 48) >= 0xA
         && (*v10 - 65 > 0x25 || ((1 << (v15 - 65)) & 0x3F0000003FLL) == 0)))
      {
        char v11 = 0;
        *(unsigned char *)(a3 + (int)v1sub_1000F9C98((void *)this + 2) = v15;
        uint64_t v12 = (v12 + 1);
      }
      else
      {
        if ((v6 - v12) < 4) {
          return 0xFFFFFFFFLL;
        }
        sprintf((char *)(a3 + (int)v12), v13, *v10);
        uint64_t v12 = (v12 + 4);
        char v11 = v9;
      }
LABEL_21:
      if (++v10 >= v14) {
        goto LABEL_34;
      }
    }
  }
  uint64_t v12 = 0;
LABEL_34:
  if ((int)v12 >= v6) {
    return 0xFFFFFFFFLL;
  }
  *(unsigned char *)(a3 + (int)v1sub_1000F9C98((void *)this + 2) = 0;
  return v12;
}

void google::protobuf::CEscapeAndAppend(std::string::value_type *__s, int64_t __n, std::string *this)
{
  int v3 = this;
  uint64_t v4 = __n;
  uint64_t v5 = __s;
  if (__n < 1)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    char v7 = __s;
    int64_t v8 = __n;
    do
    {
      int v9 = *v7++;
      v6 += byte_100183675[v9];
      --v8;
    }
    while (v8);
  }
  if (v6 == __n)
  {
    std::string::append(this, __s, __n);
    return;
  }
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
    std::string::size_type size = this->__r_.__value_.__l.__size_;
  }
  else {
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
  }
  std::string::resize(this, size + v6, 0);
  if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0) {
    int v3 = (std::string *)v3->__r_.__value_.__r.__words[0];
  }
  if (v4 >= 1)
  {
    char v11 = (char *)v3 + size;
    do
    {
      int v13 = *v5++;
      unsigned int v12 = v13;
      if (v13 > 33)
      {
        switch(v12)
        {
          case '""':
            *(_WORD *)char v11 = 8796;
            v11 += 2;
            break;
          case '\'':
            *(_WORD *)char v11 = 10076;
            v11 += 2;
            break;
          case '\\':
            *(_WORD *)char v11 = 23644;
            v11 += 2;
            break;
          default:
LABEL_30:
            if (v12 - 32 >= 0x5F)
            {
              unsigned char *v11 = 92;
              v11[1] = (v12 >> 6) | 0x30;
              std::string v11[2] = (v12 >> 3) & 7 | 0x30;
              unint64_t v11[3] = v12 & 7 | 0x30;
              v11 += 4;
            }
            else
            {
              *v11++ = v12;
            }
            break;
        }
      }
      else
      {
        switch(v12)
        {
          case 9u:
            *(_WORD *)char v11 = 29788;
            v11 += 2;
            break;
          case 0xAu:
            *(_WORD *)char v11 = 28252;
            v11 += 2;
            break;
          case 0xDu:
            *(_WORD *)char v11 = 29276;
            v11 += 2;
            break;
          default:
            goto LABEL_30;
        }
      }
      --v4;
    }
    while (v4);
  }
}

void google::protobuf::CEscape(uint64_t *a1@<X0>, const char *a2@<X2>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  sub_1000BB974(v4, a1, a2);
  google::protobuf::CEscapeAndAppend(v4[0], (int64_t)v4[1], a3);
}

void sub_100132234(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::strings::Utf8SafeCEscape()
{
}

void sub_100132324()
{
}

unsigned char *google::protobuf::FastInt64ToBuffer(unint64_t this, unsigned char *a2, char *a3)
{
  unint64_t v3 = this;
  a2[21] = 0;
  if ((this & 0x8000000000000000) != 0)
  {
    if (this < 0xFFFFFFFFFFFFFFF7)
    {
      unint64_t v7 = -10 - this;
      __n128 result = a2 + 19;
      a2[20] = (v7 % 0xA) | 0x30;
      unint64_t v8 = v7 / 0xA + 1;
      do
      {
        *result-- = (v8 % 0xA) | 0x30;
        BOOL v9 = v8 > 9;
        v8 /= 0xAuLL;
      }
      while (v9);
    }
    else
    {
      char v6 = 48 - this;
      __n128 result = a2 + 19;
      a2[20] = v6;
    }
    *__n128 result = 45;
  }
  else
  {
    __n128 result = a2 + 21;
    do
    {
      *--__n128 result = (v3 % 0xA) | 0x30;
      BOOL v5 = v3 >= 0xA;
      v3 /= 0xAuLL;
    }
    while (v5);
  }
  return result;
}

unsigned char *google::protobuf::FastInt32ToBuffer(google::protobuf *this, unsigned char *a2, char *a3)
{
  unsigned int v3 = this;
  a2[11] = 0;
  if ((this & 0x80000000) != 0)
  {
    if (this < 0xFFFFFFF7)
    {
      unsigned int v7 = -10 - this;
      unsigned int v8 = (-10 - (int)this) / 0xAu;
      __n128 result = a2 + 9;
      a2[10] = (v7 % 0xA) | 0x30;
      unsigned int v9 = v8 + 1;
      do
      {
        *result-- = (v9 % 0xA) | 0x30;
        BOOL v10 = v9 > 9;
        v9 /= 0xAu;
      }
      while (v10);
    }
    else
    {
      char v6 = 48 - (_BYTE)this;
      __n128 result = a2 + 9;
      a2[10] = v6;
    }
    *__n128 result = 45;
  }
  else
  {
    __n128 result = a2 + 11;
    do
    {
      *--__n128 result = (v3 % 0xA) | 0x30;
      BOOL v5 = v3 >= 0xA;
      v3 /= 0xAu;
    }
    while (v5);
  }
  return result;
}

unsigned char *google::protobuf::FastUInt32ToBufferLeft(google::protobuf *this, unsigned char *a2, char *a3)
{
  if (this >= 0x3B9ACA00)
  {
    unint64_t v3 = this / 0x5F5E100uLL;
    *(_WORD *)a2 = word_1001835AD[v3];
    a2 += 2;
    goto LABEL_3;
  }
  if (this > 0x63)
  {
    if (this >> 4 <= 0x270)
    {
      if (this <= 0x3E7)
      {
        LODWORD(vsub_1000FA614((void *)this + 6) = (unsigned __int16)this / 0x64u;
        *a2++ = v6 + 48;
        goto LABEL_9;
      }
LABEL_8:
      unint64_t v6 = this / 0x64uLL;
      *(_WORD *)a2 = word_1001835AD[v6];
      a2 += 2;
LABEL_9:
      LODWORD(this) = this - 100 * v6;
      goto LABEL_10;
    }
    if (this < 0xF4240)
    {
      if (this >> 5 <= 0xC34)
      {
        LODWORD(vsub_1000FA614((void *)this + 5) = this / 0x2710;
        *a2++ = this / 0x2710 + 48;
        goto LABEL_7;
      }
LABEL_6:
      unint64_t v5 = this / 0x2710uLL;
      *(_WORD *)a2 = word_1001835AD[v5];
      a2 += 2;
LABEL_7:
      LODWORD(this) = this - 10000 * v5;
      goto LABEL_8;
    }
    if (this < 0x5F5E100)
    {
      if (this <= 0x98967F)
      {
        LODWORD(v4) = this / 0xF4240;
        *a2++ = this / 0xF4240 + 48;
        goto LABEL_5;
      }
LABEL_4:
      unint64_t v4 = this / 0xF4240uLL;
      *(_WORD *)a2 = word_1001835AD[v4];
      a2 += 2;
LABEL_5:
      LODWORD(this) = this - 1000000 * v4;
      goto LABEL_6;
    }
    LODWORD(v3) = this / 0x5F5E100;
    *a2++ = this / 0x5F5E100 + 48;
LABEL_3:
    LODWORD(this) = this - 100000000 * v3;
    goto LABEL_4;
  }
  if (this <= 9)
  {
    *a2 = (_BYTE)this + 48;
    unsigned int v7 = a2 + 1;
    goto LABEL_11;
  }
LABEL_10:
  *(_WORD *)a2 = word_1001835AD[this];
  unsigned int v7 = a2 + 2;
LABEL_11:
  unsigned char *v7 = 0;
  return v7;
}

unsigned char *google::protobuf::FastInt32ToBufferLeft(google::protobuf *this, unsigned char *a2, char *a3)
{
  if ((this & 0x80000000) != 0)
  {
    *a2++ = 45;
    this = (google::protobuf *)-(int)this;
  }
  return google::protobuf::FastUInt32ToBufferLeft(this, a2, a3);
}

unsigned char *google::protobuf::FastUInt64ToBufferLeft(google::protobuf *this, unsigned char *a2, char *a3)
{
  int v3 = (int)this;
  if ((unint64_t)this >> 32)
  {
    unint64_t v5 = (unint64_t)this / 0x3B9ACA00;
    unint64_t v6 = (_WORD *)google::protobuf::FastUInt64ToBufferLeft((google::protobuf *)((unint64_t)this / 0x3B9ACA00), (unint64_t)a2, a3);
    unsigned int v7 = v3 - 1000000000 * v5;
    _WORD *v6 = word_1001835AD[v7 / 0x989680uLL];
    v7 %= 0x989680u;
    v6[1] = word_1001835AD[v7 / 0x186A0uLL];
    v7 %= 0x186A0u;
    std::string v6[2] = word_1001835AD[v7 / 0x3E8uLL];
    v7 %= 0x3E8u;
    void v6[3] = word_1001835AD[v7 / 0xAuLL];
    v6[4] = (v7 % 0xA + 48);
    return (char *)v6 + 9;
  }
  else
  {
    return google::protobuf::FastUInt32ToBufferLeft(this, a2, a3);
  }
}

unsigned char *google::protobuf::FastInt64ToBufferLeft(uint64_t this, unsigned char *a2, char *a3)
{
  if (this < 0)
  {
    *a2++ = 45;
    this = -this;
  }
  return google::protobuf::FastUInt64ToBufferLeft((google::protobuf *)this, a2, a3);
}

void *google::protobuf::SimpleDtoa@<X0>(double a1@<D0>, char *a2@<X1>, void *a3@<X8>)
{
  google::protobuf::DoubleToBuffer((google::protobuf *)__s, a1, a2);
  return sub_1000BBA84(a3, __s);
}

google::protobuf *google::protobuf::DoubleToBuffer(google::protobuf *this, double a2, char *a3)
{
  if (a2 == INFINITY)
  {
    int v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((unsigned char *)this + 4) = 0;
    int v5 = 1718511917;
    goto LABEL_5;
  }
  snprintf((char *)this, 0x20uLL, "%.*g", 15, a2);
  if (google::protobuf::internal::NoLocaleStrtod(this, 0, v7) != a2) {
    snprintf((char *)this, 0x20uLL, "%.*g", 17, a2);
  }
  google::protobuf::DelocalizeRadix(this, v8);
  return this;
}

void *google::protobuf::SimpleFtoa@<X0>(float a1@<S0>, char *a2@<X1>, void *a3@<X8>)
{
  google::protobuf::FloatToBuffer((google::protobuf *)v6, a1, a2);
  return sub_1000BBA84(a3, v6);
}

google::protobuf *google::protobuf::FloatToBuffer(google::protobuf *this, float a2, char *a3)
{
  if (a2 == INFINITY)
  {
    int v5 = 6712937;
LABEL_5:
    *(_DWORD *)this = v5;
    return this;
  }
  if (a2 == -INFINITY)
  {
    *((unsigned char *)this + 4) = 0;
    int v5 = 1718511917;
    goto LABEL_5;
  }
  snprintf((char *)this, 0x18uLL, "%.*g", 6, a2);
  *(float *)unsigned int v9 = 0.0;
  if (!google::protobuf::safe_strtof(this, (float *)v9, v7) || *(float *)v9 != a2) {
    snprintf((char *)this, 0x18uLL, "%.*g", 9, a2);
  }
  google::protobuf::DelocalizeRadix(this, v8);
  return this;
}

char *google::protobuf::DelocalizeRadix(google::protobuf *this, char *a2)
{
  __n128 result = strchr((char *)this, 46);
  if (!result)
  {
    for (int i = (char *)this + 2; ; ++i)
    {
      int v5 = *((unsigned __int8 *)i - 2);
      if ((v5 - 48) >= 0xA
        && ((v5 - 43) > 0x3A || ((1 << (v5 - 43)) & 0x400000004000005) == 0))
      {
        break;
      }
    }
    if (*(i - 2))
    {
      unsigned int v8 = (unsigned __int8 *)(i - 1);
      int v7 = *((unsigned __int8 *)i - 1);
      *((unsigned char *)i - sub_1000F9C98((void *)this + 2) = 46;
      if ((v7 - 48) >= 0xA
        && ((v7 - 43) > 0x3A || ((1 << (v7 - 43)) & 0x400000004000005) == 0))
      {
        if (v7)
        {
          do
          {
            unsigned int v9 = i;
            int v10 = *(unsigned __int8 *)i;
            if ((v10 - 48) < 0xA) {
              break;
            }
            ++i;
            BOOL v11 = (v10 - 43) > 0x3A || ((1 << (v10 - 43)) & 0x400000004000005) == 0;
          }
          while (v11 && v10 != 0);
          size_t v13 = strlen(v9) + 1;
          return (char *)memmove(v8, v9, v13);
        }
      }
    }
  }
  return result;
}

double google::protobuf::internal::NoLocaleStrtod(google::protobuf::internal *this, char *a2, char **a3)
{
  size_t v19 = 0;
  double v5 = strtod((const char *)this, &v19);
  unint64_t v6 = v19;
  if (a2) {
    *(void *)a2 = v19;
  }
  if (*v6 == 46)
  {
    int v7 = snprintf(&__str, 0x10uLL, "%.1f", 1.5);
    if (__str != 49)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/stubs/strutil.cc", 2425);
      unsigned int v8 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (temp[0]) == ('1'): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v8->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
    }
    if (v23[v7 - 2] != 53)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/stubs/strutil.cc", 2426);
      unsigned int v9 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (temp[size - 1]) == ('5'): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v9->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
    }
    if (v7 >= 7)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/stubs/strutil.cc", 2427);
      int v10 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (size) <= (6): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
    }
    memset(&v18, 0, sizeof(v18));
    size_t v11 = strlen((const char *)this);
    std::string::reserve(&v18, v11 + v7 - 3);
    sub_100133490(&v18, (char *)this, v6);
    std::string::append(&v18, v23, v7 - 2);
    unsigned int v12 = v6 + 1;
    size_t v13 = &v18;
    std::string::append(&v18, v12);
    if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      size_t v13 = (std::string *)v18.__r_.__value_.__r.__words[0];
    }
    v21[0].__r_.__value_.__r.__words[0] = 0;
    double v5 = strtod((const char *)v13, &v21[0].__r_.__value_.__l.__data_);
    char v14 = HIBYTE(v18.__r_.__value_.__r.__words[2]);
    if (a2 && (int64_t)(v21[0].__r_.__value_.__r.__words[0] - (void)v13) > v19 - (char *)this)
    {
      int v15 = strlen((const char *)this);
      if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v16 = HIBYTE(v18.__r_.__value_.__r.__words[2]);
      }
      else {
        int v16 = v18.__r_.__value_.__r.__words[1];
      }
      *(void *)a2 = (char *)this + v21[0].__r_.__value_.__r.__words[0] - ((void)v13 + v16 - v15);
    }
    if (v14 < 0) {
      operator delete(v18.__r_.__value_.__l.__data_);
    }
  }
  return v5;
}

void sub_100132DCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, void *a19)
{
}

BOOL google::protobuf::safe_strtof(google::protobuf *this, float *a2, float *a3)
{
  unint64_t v6 = 0;
  *__error() = 0;
  *a2 = strtof((const char *)this, &v6);
  return *(unsigned char *)this && !*v6 && *__error() == 0;
}

uint64_t google::protobuf::safe_strto32(uint64_t a1, int *a2)
{
  if (*(char *)(a1 + 23) < 0) {
    sub_1000BB834(&__p, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    std::string __p = *(std::string *)a1;
  }
  uint64_t v3 = sub_100132F1C(&__p, a2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_100132F00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100132F1C(std::string *__str, int *a2)
{
  *a2 = 0;
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    unint64_t v4 = (std::string *)__str->__r_.__value_.__r.__words[0];
    int64_t size = __str->__r_.__value_.__l.__size_;
  }
  else
  {
    unint64_t v4 = __str;
    int64_t size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  }
  unint64_t v6 = (char *)v4 + size;
  int v7 = v4;
  if (size >= 1)
  {
    int v7 = v4;
    do
    {
      if (v7->__r_.__value_.__s.__data_[0] != 32) {
        break;
      }
      int v7 = (std::string *)((char *)v7 + 1);
    }
    while (v7 < (std::string *)v6);
  }
  uint64_t v8 = (uint64_t)v4->__r_.__value_.__r.__words + size + 1;
  do
  {
    if (v7 >= (std::string *)v6) {
      return 0;
    }
    int v9 = *--v6;
    --v8;
  }
  while (v9 == 32);
  int v10 = v7->__r_.__value_.__s.__data_[0];
  if (v10 == 45 || v10 == 43)
  {
    int v7 = (std::string *)((char *)v7 + 1);
    if (v7 >= (std::string *)(v6 + 1)) {
      return 0;
    }
  }
  size_t v11 = __str;
  if ((*((unsigned char *)&__str->__r_.__value_.__s + 23) & 0x80) != 0) {
    size_t v11 = (std::string *)__str->__r_.__value_.__r.__words[0];
  }
  std::string::basic_string(&v16, __str, (char *)v7 - (char *)v11, v8 - (void)v7, (std::allocator<char> *)&v17);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str->__r_.__value_.__l.__data_);
  }
  *char __str = v16;
  if (v10 == 45) {
    return sub_100133894((unsigned __int8 *)__str, a2);
  }
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    sub_1000BB834(__p, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
  }
  else
  {
    *(_OWORD *)std::string __p = *(_OWORD *)&__str->__r_.__value_.__l.__data_;
    std::string::size_type v15 = __str->__r_.__value_.__r.__words[2];
  }
  uint64_t v12 = sub_1001337F8((unsigned __int8 *)__p, a2);
  if (SHIBYTE(v15) < 0) {
    operator delete(__p[0]);
  }
  return v12;
}

void *google::protobuf::strings::AlphaNum::AlphaNum(void *result, unint64_t a2, char a3)
{
  uint64_t v3 = 0;
  unint64_t v4 = (1 << (4 * a3 - 4)) | a2;
  do
  {
    *((unsigned char *)result + v3 + 47) = a0123456789abcd_0[a2 & 0xF];
    a2 >>= 4;
    --v3;
    BOOL v5 = v4 > 0xF;
    v4 >>= 4;
  }
  while (v5);
  *__n128 result = (char *)result + v3 + 48;
  result[1] = -v3;
  return result;
}

void google::protobuf::StrCat(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  BOOL v5 = a3;
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a3, *(void *)(a2 + 8) + *(void *)(a1 + 8), 0);
  if ((v5->__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    BOOL v5 = (std::string *)v5->__r_.__value_.__r.__words[0];
  }
  size_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    memcpy(v5, *(const void **)a1, v6);
    BOOL v5 = (std::string *)((char *)v5 + *(void *)(a1 + 8));
  }
  size_t v7 = *(void *)(a2 + 8);
  if (v7)
  {
    uint64_t v8 = *(const void **)a2;
    memcpy(v5, v8, v7);
  }
}

void sub_10013319C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::StrCat(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, std::string *a4@<X8>)
{
  size_t v7 = a4;
  a4->__r_.__value_.__r.__words[0] = 0;
  a4->__r_.__value_.__l.__size_ = 0;
  a4->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a4, *(void *)(a2 + 8) + *(void *)(a1 + 8) + *(void *)(a3 + 8), 0);
  if ((v7->__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    size_t v7 = (std::string *)v7->__r_.__value_.__r.__words[0];
  }
  size_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    memcpy(v7, *(const void **)a1, v8);
    size_t v7 = (std::string *)((char *)v7 + *(void *)(a1 + 8));
  }
  size_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    memcpy(v7, *(const void **)a2, v9);
    size_t v7 = (std::string *)((char *)v7 + *(void *)(a2 + 8));
  }
  size_t v10 = *(void *)(a3 + 8);
  if (v10)
  {
    size_t v11 = *(const void **)a3;
    memcpy(v7, v11, v10);
  }
}

void sub_10013328C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1001332A8(char *__dst, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  size_t v8 = __dst;
  size_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    memcpy(__dst, *(const void **)a2, v9);
    v8 += *(void *)(a2 + 8);
  }
  size_t v11 = *(void *)(a3 + 8);
  if (v11)
  {
    memcpy(v8, *(const void **)a3, v11);
    v8 += *(void *)(a3 + 8);
  }
  size_t v12 = *(void *)(a4 + 8);
  if (v12)
  {
    memcpy(v8, *(const void **)a4, v12);
    v8 += *(void *)(a4 + 8);
  }
  size_t v13 = *(void *)(a5 + 8);
  if (v13)
  {
    memcpy(v8, *(const void **)a5, v13);
    v8 += *(void *)(a5 + 8);
  }
  return v8;
}

char *google::protobuf::StrCat@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = 0;
  *(void *)(a7 + 8) = 0;
  *(void *)(a7 + 1sub_1000FA614((void *)this + 6) = 0;
  std::string::resize((std::string *)a7, *(void *)(a2 + 8)+ *(void *)(a1 + 8)+ *(void *)(a3 + 8)+ *(void *)(a4 + 8)+ *(void *)(a5 + 8)+ *(void *)(a6 + 8), 0);
  if (*(char *)(a7 + 23) >= 0) {
    char v14 = (char *)a7;
  }
  else {
    char v14 = *(char **)a7;
  }
  __n128 result = sub_1001332A8(v14, a1, a2, a3, a4);
  std::string v16 = result;
  size_t v17 = *(void *)(a5 + 8);
  if (v17)
  {
    __n128 result = (char *)memcpy(result, *(const void **)a5, v17);
    v16 += *(void *)(a5 + 8);
  }
  size_t v18 = *(void *)(a6 + 8);
  if (v18)
  {
    size_t v19 = *(const void **)a6;
    return (char *)memcpy(v16, v19, v18);
  }
  return result;
}

void sub_100133468(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::StrAppend(std::string *a1, uint64_t a2)
{
  return std::string::append(a1, *(const std::string::value_type **)a2, *(void *)(a2 + 8));
}

std::string *sub_100133490(std::string *this, char *a2, char *a3)
{
  unint64_t v4 = a2;
  LODWORD(vsub_1000FA614((void *)this + 6) = SHIBYTE(this->__r_.__value_.__r.__words[2]);
  unint64_t v7 = a3 - a2;
  if ((v6 & 0x80000000) != 0)
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = this->__r_.__value_.__l.__size_;
    unint64_t v11 = this->__r_.__value_.__r.__words[2];
    std::string::size_type v9 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    size_t v10 = (std::string *)this->__r_.__value_.__r.__words[0];
    unint64_t v6 = HIBYTE(v11);
  }
  else
  {
    if (a3 == a2) {
      return this;
    }
    std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    std::string::size_type v9 = 22;
    size_t v10 = this;
  }
  if (v10 > (std::string *)v4 || (char *)&v10->__r_.__value_.__l.__data_ + size + 1 <= v4)
  {
    if (v9 - size < v7)
    {
      std::string::__grow_by(this, v9, size - v9 + v7, size, size, 0, 0);
      this->__r_.__value_.__l.__size_ = size;
      LOBYTE(vsub_1000FA614((void *)this + 6) = *((unsigned char *)&this->__r_.__value_.__s + 23);
    }
    char v14 = this;
    if ((v6 & 0x80) != 0) {
      char v14 = (std::string *)this->__r_.__value_.__r.__words[0];
    }
    for (int i = (char *)v14 + size; v4 != a3; ++i)
    {
      char v16 = *v4++;
      unsigned char *i = v16;
    }
    unsigned char *i = 0;
    std::string::size_type v17 = v7 + size;
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      this->__r_.__value_.__l.__size_ = v17;
    }
    else {
      *((unsigned char *)&this->__r_.__value_.__s + 23) = v17 & 0x7F;
    }
  }
  else
  {
    sub_100133608(__p, v4, a3, v7);
    if ((v20 & 0x80u) == 0) {
      size_t v12 = __p;
    }
    else {
      size_t v12 = (void **)__p[0];
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v13 = v20;
    }
    else {
      std::string::size_type v13 = (std::string::size_type)__p[1];
    }
    std::string::append(this, (const std::string::value_type *)v12, v13);
    if ((char)v20 < 0) {
      operator delete(__p[0]);
    }
  }
  return this;
}

void sub_1001335EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_100133608(void *result, char *a2, char *a3, unint64_t a4)
{
  unint64_t v4 = result;
  if (a4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000BB8D4();
  }
  if (a4 > 0x16)
  {
    uint64_t v8 = (a4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a4 | 7) != 0x17) {
      uint64_t v8 = a4 | 7;
    }
    uint64_t v9 = v8 + 1;
    __n128 result = operator new(v8 + 1);
    v4[1] = a4;
    std::string v4[2] = v9 | 0x8000000000000000;
    *unint64_t v4 = result;
    unint64_t v4 = result;
  }
  else
  {
    *((unsigned char *)result + 23) = a4;
  }
  while (a2 != a3)
  {
    char v10 = *a2++;
    *(unsigned char *)unint64_t v4 = v10;
    unint64_t v4 = (void *)((char *)v4 + 1);
  }
  *(unsigned char *)unint64_t v4 = 0;
  return result;
}

uint64_t **sub_1001336B0(uint64_t **a1, long long *a2)
{
  unint64_t v4 = *a1;
  unint64_t v5 = (*a1)[1];
  unint64_t v6 = *a1;
  unint64_t v9 = v6[2];
  uint64_t v7 = (uint64_t)(v6 + 2);
  unint64_t v8 = v9;
  if (v5 >= v9)
  {
    unint64_t v12 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *v4) >> 3);
    unint64_t v13 = v12 + 1;
    if (v12 + 1 > 0xAAAAAAAAAAAAAAALL) {
      sub_100078F84();
    }
    unint64_t v14 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v8 - *v4) >> 3);
    if (2 * v14 > v13) {
      unint64_t v13 = 2 * v14;
    }
    if (v14 >= 0x555555555555555) {
      unint64_t v15 = 0xAAAAAAAAAAAAAAALL;
    }
    else {
      unint64_t v15 = v13;
    }
    v20[4] = v7;
    if (v15) {
      char v16 = (char *)sub_1000D8B84(v7, v15);
    }
    else {
      char v16 = 0;
    }
    std::string::size_type v17 = &v16[24 * v12];
    v20[0] = v16;
    v20[1] = v17;
    v20[3] = &v16[24 * v15];
    long long v18 = *a2;
    *((void *)v17 + sub_1000F9C98((void *)this + 2) = *((void *)a2 + 2);
    *(_OWORD *)std::string::size_type v17 = v18;
    *((void *)a2 + sub_1000333D0((uint64_t *)this + 1) = 0;
    *((void *)a2 + sub_1000F9C98((void *)this + 2) = 0;
    *(void *)a2 = 0;
    std::string v20[2] = v17 + 24;
    sub_1000D8B0C(v4, v20);
    uint64_t v11 = v4[1];
    sub_1000D8CEC((uint64_t)v20);
  }
  else
  {
    long long v10 = *a2;
    *(void *)(v5 + 1sub_1000FA614((void *)this + 6) = *((void *)a2 + 2);
    *(_OWORD *)unint64_t v5 = v10;
    *((void *)a2 + sub_1000333D0((uint64_t *)this + 1) = 0;
    *((void *)a2 + sub_1000F9C98((void *)this + 2) = 0;
    *(void *)a2 = 0;
    uint64_t v11 = v5 + 24;
    v4[1] = v5 + 24;
  }
  v4[1] = v11;
  return a1;
}

void sub_1001337E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000D8CEC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1001337F8(unsigned __int8 *a1, int *a2)
{
  if ((char)a1[23] < 0)
  {
    uint64_t v3 = a1;
    a1 = *(unsigned __int8 **)a1;
    uint64_t v2 = *((void *)v3 + 1);
  }
  else
  {
    uint64_t v2 = a1[23];
  }
  if (v2 < 1)
  {
    int v4 = 0;
LABEL_12:
    uint64_t result = 1;
  }
  else
  {
    int v4 = 0;
    unint64_t v5 = &a1[v2];
    while (1)
    {
      int v6 = *a1;
      if ((v6 - 58) < 0xFFFFFFF6) {
        break;
      }
      if (v4 > 214748364 || (int v7 = 10 * v4, v7 > -2147483601 - v6))
      {
        uint64_t result = 0;
        int v4 = 0x7FFFFFFF;
        goto LABEL_15;
      }
      int v4 = v7 + v6 - 48;
      if (++a1 >= v5) {
        goto LABEL_12;
      }
    }
    uint64_t result = 0;
  }
LABEL_15:
  *a2 = v4;
  return result;
}

uint64_t sub_100133894(unsigned __int8 *a1, int *a2)
{
  int v2 = (char)a1[23];
  BOOL v3 = v2 < 0;
  if (v2 >= 0) {
    int v4 = a1;
  }
  else {
    int v4 = *(unsigned __int8 **)a1;
  }
  if (v3) {
    uint64_t v5 = *((void *)a1 + 1);
  }
  else {
    uint64_t v5 = a1[23];
  }
  if (v5 < 1)
  {
    int v6 = 0;
LABEL_15:
    uint64_t result = 1;
  }
  else
  {
    int v6 = 0;
    int v7 = &v4[v5];
    while (1)
    {
      int v8 = *v4;
      if ((v8 - 58) < 0xFFFFFFF6) {
        break;
      }
      if (v6 < -214748364 || (int v9 = 10 * v6, v9 < v8 + 2147483600))
      {
        uint64_t result = 0;
        int v6 = 0x80000000;
        goto LABEL_18;
      }
      int v6 = v9 - v8 + 48;
      if (++v4 >= v7) {
        goto LABEL_15;
      }
    }
    uint64_t result = 0;
  }
LABEL_18:
  *a2 = v6;
  return result;
}

void google::protobuf::strings::Substitute(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, std::string *a9@<X8>, long long a10, uint64_t a11)
{
  a9->__r_.__value_.__r.__words[0] = 0;
  a9->__r_.__value_.__l.__size_ = 0;
  a9->__r_.__value_.__r.__words[2] = 0;
  *((void *)&v11 + sub_1000333D0((uint64_t *)this + 1) = a10;
  *(void *)&long long v11 = a8;
  google::protobuf::strings::SubstituteAndAppend(a9, a1, a2, a3, a4, a5, a6, a7, v11, *((uint64_t *)&a10 + 1), a11);
}

void sub_1001339A0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::strings::SubstituteAndAppend(std::string *this, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10, uint64_t a11)
{
  uint64_t v46 = a3;
  v47[0] = a4;
  v47[1] = a5;
  uint64_t v47[2] = a6;
  v47[3] = a7;
  v47[4] = a8;
  long long v48 = a9;
  uint64_t v49 = a10;
  uint64_t v50 = a11;
  uint64_t v51 = 0;
  int v11 = *a2;
  if (!*a2) {
    return;
  }
  uint64_t v12 = a3;
  unint64_t v14 = this;
  int v15 = 0;
  LODWORD(v1sub_1000FA614((void *)this + 6) = 0;
  do
  {
    if (v11 == 36)
    {
      uint64_t v16 = (int)v16 + 1;
      int v17 = a2[v16];
      unsigned int v18 = v17 - 48;
      if ((v17 - 48) <= 9)
      {
        int v19 = *(_DWORD *)(v47[v18 - 1] + 8);
        if (v19 != -1)
        {
          v15 += v19;
          goto LABEL_9;
        }
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/stubs/substitute.cc", 84);
        uint64_t v21 = google::protobuf::internal::LogMessage::operator<<(v45, "strings::Substitute format string invalid: asked for \"$");
        uint64_t v22 = google::protobuf::internal::LogMessage::operator<<(v21, v18);
        int v23 = google::protobuf::internal::LogMessage::operator<<(v22, "\", but only ");
        uint64_t v24 = 0;
        while (*(_DWORD *)(v12 + 8) != -1)
        {
          int v25 = v24 + 1;
          uint64_t v12 = v47[v24++];
          if (!v12) {
            goto LABEL_36;
          }
        }
        int v25 = v24;
LABEL_36:
        uint64_t v36 = google::protobuf::internal::LogMessage::operator<<(v23, v25);
        uint64_t v37 = google::protobuf::internal::LogMessage::operator<<(v36, " args were given.  Full format string was: \"");
        sub_1000BBA84(v42, a2);
        google::protobuf::CEscape((uint64_t *)v42, v38, &__p);
        char v39 = google::protobuf::internal::LogMessage::operator<<(v37, (const std::string::value_type *)&__p);
        uint64_t v40 = google::protobuf::internal::LogMessage::operator<<(v39, "\".");
        google::protobuf::internal::LogFinisher::operator=((int)&v41, (const char **)&v40->__r_.__value_.__l.__data_);
LABEL_37:
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        if (v43 < 0) {
          operator delete(v42[0]);
        }
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v45[0].__r_.__value_.__l.__data_);
        return;
      }
      if (v17 != 36)
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v45, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/stubs/substitute.cc", 97);
        uint64_t v26 = google::protobuf::internal::LogMessage::operator<<(v45, "Invalid strings::Substitute() format string: \"");
        sub_1000BBA84(v42, a2);
        google::protobuf::CEscape((uint64_t *)v42, v27, &__p);
        int v28 = google::protobuf::internal::LogMessage::operator<<(v26, (const std::string::value_type *)&__p);
        uint64_t v29 = google::protobuf::internal::LogMessage::operator<<(v28, "\".");
        google::protobuf::internal::LogFinisher::operator=((int)&v41, (const char **)&v29->__r_.__value_.__l.__data_);
        goto LABEL_37;
      }
    }
    ++v15;
LABEL_9:
    uint64_t v16 = (int)v16 + 1;
    int v11 = a2[v16];
  }
  while (a2[v16]);
  if (v15)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type size = this->__r_.__value_.__l.__size_;
    }
    else {
      LODWORD(size) = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
    std::string::resize(this, v15 + (int)size, 0);
    if (SHIBYTE(v14->__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v14->__r_.__value_.__l.__size_) {
        goto LABEL_24;
      }
      unint64_t v14 = (std::string *)v14->__r_.__value_.__r.__words[0];
    }
    else if (!*((unsigned char *)&v14->__r_.__value_.__s + 23))
    {
LABEL_24:
      unint64_t v14 = 0;
    }
    int v30 = 0;
    uint64_t v31 = (char *)v14 + (int)size;
    while (2)
    {
      int v32 = a2[v30];
      if (v32 == 36)
      {
        uint64_t v33 = v30 + 1;
        int v34 = a2[v33];
        if ((v34 - 48) > 9)
        {
          if (v34 != 36) {
            goto LABEL_29;
          }
          *v31++ = 36;
        }
        else
        {
          uint64_t v35 = v47[(v34 - 48) - 1];
          memcpy(v31, *(const void **)v35, *(int *)(v35 + 8));
          v31 += *(int *)(v35 + 8);
        }
      }
      else
      {
        if (!a2[v30]) {
          return;
        }
        *v31++ = v32;
LABEL_29:
        LODWORD(v33) = v30;
      }
      int v30 = v33 + 1;
      continue;
    }
  }
}

void sub_100133CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a16 < 0) {
    operator delete(a11);
  }
  google::protobuf::internal::LogMessage::~LogMessage(&a23);
  _Unwind_Resume(a1);
}

void sub_100133D3C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/type.pb.cc", a4);
  google::protobuf::Enum::Enum((uint64_t)&google::protobuf::_Enum_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Enum_default_instance_, v4);
}

void sub_100133DAC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/type.pb.cc", a4);
  google::protobuf::EnumValue::EnumValue((uint64_t)&google::protobuf::_EnumValue_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_EnumValue_default_instance_, v4);
}

void sub_100133E1C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/type.pb.cc", a4);
  google::protobuf::Field::Field((uint64_t)&google::protobuf::_Field_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Field_default_instance_, v4);
}

void sub_100133E8C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/type.pb.cc", a4);
  google::protobuf::_Option_default_instance_ = (uint64_t)off_1001D2800;
  *(void *)algn_1001EDFB8 = 0;
  dword_1001EDFD0 = 0;
  if (atomic_load_explicit(scc_info_Option_google_2fprotobuf_2ftype_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Option_google_2fprotobuf_2ftype_2eproto);
  }
  qword_1001EDFC0 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  unk_1001EDFC8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Option_default_instance_, v4);
}

void sub_100133F3C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/type.pb.cc", a4);
  google::protobuf::Type::Type((uint64_t)&google::protobuf::_Type_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Type_default_instance_, v4);
}

uint64_t google::protobuf::Type::Type(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D2540;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = a2;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto, 0) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_1000F9C98((void *)this + 2) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 5sub_1000FA614((void *)this + 6) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 7sub_1000F9C98((void *)this + 2) = 0;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto, 0) = 0;
  *(_DWORD *)(a1 + 108) = 0;
  if (atomic_load_explicit(scc_info_Type_google_2fprotobuf_2ftype_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Type_google_2fprotobuf_2ftype_2eproto);
  }
  *(void *)(a1 + 88) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 9sub_1000FA614((void *)this + 6) = 0;
  *(_DWORD *)(a1 + 104) = 0;
  return a1;
}

void sub_10013404C(_Unwind_Exception *a1)
{
  sub_10010D434(v3);
  sub_1000F9C98(v2);
  sub_100138BE4(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::Type::~Type(google::protobuf::Type *this)
{
  uint64_t v2 = *((void *)this + 11);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if (this != (google::protobuf::Type *)&google::protobuf::_Type_default_instance_)
  {
    BOOL v3 = (google::protobuf::SourceContext *)*((void *)this + 12);
    if (v3)
    {
      google::protobuf::SourceContext::~SourceContext(v3);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_10010D434((void *)this + 8);
  sub_1000F9C98((void *)this + 5);
  sub_100138BE4((void *)this + 2);
}

{
  uint64_t vars8;

  google::protobuf::Type::~Type(this);
  operator delete();
}

uint64_t google::protobuf::Type::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 108) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::Type::Clear(google::protobuf::Type *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    BOOL v3 = (google::protobuf::Field **)(*((void *)this + 4) + 8);
    do
    {
      int v4 = *v3++;
      google::protobuf::Field::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + sub_1000FA614((void *)this + 6) = 0;
  }
  sub_1000F9B0C((uint64_t)this + 40);
  uint64_t v5 = *((unsigned int *)this + 18);
  if ((int)v5 >= 1)
  {
    int v6 = (google::protobuf::Option **)(*((void *)this + 10) + 8);
    do
    {
      int v7 = *v6++;
      google::protobuf::Option::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 18) = 0;
  }
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 11);
  uint64_t v9 = *((void *)this + 1);
  long long v10 = (void *)(v9 & 0xFFFFFFFFFFFFFFFELL);
  if (v9)
  {
    if (*v10) {
      goto LABEL_13;
    }
  }
  else if (v10)
  {
    goto LABEL_13;
  }
  uint64_t result = (google::protobuf::Arena **)*((void *)this + 12);
  if (result)
  {
    google::protobuf::SourceContext::~SourceContext((google::protobuf::SourceContext *)result);
    operator delete();
  }
LABEL_13:
  *((void *)this + 1sub_1000F9C98((void *)this + 2) = 0;
  *((_DWORD *)this + 2sub_1000FA614((void *)this + 6) = 0;
  if (v9)
  {
    return sub_100035820((unint64_t *)this + 1);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Type::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v53 = a2;
  uint64_t v5 = (unint64_t *)(a1 + 8);
  int v6 = (unsigned int *)(a1 + 64);
  int v7 = (unsigned int *)(a1 + 40);
  int v8 = (unsigned int *)(a1 + 16);
  uint64_t v9 = (uint64_t **)(a1 + 88);
  while (2)
  {
    if ((sub_1000355B8(a3, &v53, *(_DWORD *)(a3 + 92)) & 1) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v53 + 1);
      unsigned int v11 = *(unsigned __int8 *)v53;
      if (*(char *)v53 < 0)
      {
        unsigned int v12 = v11 + (*(unsigned __int8 *)TagFallback << 7);
        unsigned int v11 = v12 - 128;
        if (*(char *)TagFallback < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v53, (const char *)(v12 - 128));
          uint64_t v53 = TagFallback;
          if (!TagFallback) {
            return TagFallback;
          }
          unsigned int v11 = v51;
LABEL_7:
          switch(v11 >> 3)
          {
            case 1u:
              if (v11 != 10) {
                goto LABEL_68;
              }
              unint64_t v13 = (google::protobuf::Arena *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
              if (*v5) {
                unint64_t v13 = *(google::protobuf::Arena **)v13;
              }
              unint64_t v14 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v9, v13);
              uint64_t v53 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v14, (std::string::value_type *)v53, a3);
              sub_1000BB974(&v54, (uint64_t *)v14, v15);
              BOOL v16 = google::protobuf::internal::VerifyUTF8(v54, v55, (google::protobuf::internal *)"google.protobuf.Type.name");
              if (v53) {
                int v17 = 2;
              }
              else {
                int v17 = 4;
              }
              if (v16) {
                goto LABEL_77;
              }
              return 0;
            case 2u:
              if (v11 != 18) {
                goto LABEL_68;
              }
              unsigned int v18 = (google::protobuf::internal *)((char *)TagFallback - 1);
              while (1)
              {
                int v19 = (google::protobuf::internal *)((char *)v18 + 1);
                uint64_t v53 = (google::protobuf::internal *)((char *)v18 + 1);
                unsigned __int8 v20 = *(int **)(a1 + 32);
                if (!v20) {
                  break;
                }
                uint64_t v21 = *(int *)(a1 + 24);
                int v22 = *v20;
                if ((int)v21 >= *v20)
                {
                  if (v22 == *(_DWORD *)(a1 + 28))
                  {
LABEL_23:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8, v22 + 1);
                    unsigned __int8 v20 = *(int **)(a1 + 32);
                    int v22 = *v20;
                  }
                  *unsigned __int8 v20 = v22 + 1;
                  uint64_t v23 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Field>(*(void *)(a1 + 16));
                  uint64_t v24 = *(void *)(a1 + 32);
                  uint64_t v25 = *(int *)(a1 + 24);
                  *(_DWORD *)(a1 + 24) = v25 + 1;
                  *(void *)(v24 + 8 * v25 + 8) = v23;
                  int v19 = v53;
                  goto LABEL_25;
                }
                *(_DWORD *)(a1 + 24) = v21 + 1;
                uint64_t v23 = *(void *)&v20[2 * v21 + 2];
LABEL_25:
                unsigned int v18 = sub_10013479C(a3, v23, v19);
                uint64_t v53 = v18;
                if (!v18) {
                  return 0;
                }
                if (*(void *)a3 <= (unint64_t)v18 || *(unsigned char *)v18 != 18) {
                  goto LABEL_76;
                }
              }
              int v22 = *(_DWORD *)(a1 + 28);
              goto LABEL_23;
            case 3u:
              if (v11 != 26) {
                goto LABEL_68;
              }
              uint64_t v26 = (google::protobuf::internal *)((char *)TagFallback - 1);
              while (2)
              {
                uint64_t v27 = (char *)v26 + 1;
                uint64_t v53 = (google::protobuf::internal *)((char *)v26 + 1);
                int v28 = *(int **)(a1 + 56);
                if (!v28)
                {
                  int v30 = *(_DWORD *)(a1 + 52);
LABEL_36:
                  google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v30 + 1);
                  int v28 = *(int **)(a1 + 56);
                  int v30 = *v28;
                  goto LABEL_37;
                }
                uint64_t v29 = *(int *)(a1 + 48);
                int v30 = *v28;
                if ((int)v29 < *v28)
                {
                  *(_DWORD *)(a1 + 48) = v29 + 1;
                  uint64_t v31 = *(std::string **)&v28[2 * v29 + 2];
                  goto LABEL_38;
                }
                if (v30 == *(_DWORD *)(a1 + 52)) {
                  goto LABEL_36;
                }
LABEL_37:
                *int v28 = v30 + 1;
                uint64_t v31 = (std::string *)sub_1000BBB38(*(google::protobuf::Arena **)(a1 + 40));
                uint64_t v32 = *(void *)(a1 + 56);
                uint64_t v33 = *(int *)(a1 + 48);
                *(_DWORD *)(a1 + 48) = v33 + 1;
                *(void *)(v32 + 8 * v33 + 8) = v31;
                uint64_t v27 = (std::string::value_type *)v53;
LABEL_38:
                uint64_t v53 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v31, v27, a3);
                sub_1000BB974(&v54, (uint64_t *)v31, v34);
                if (google::protobuf::internal::VerifyUTF8(v54, v55, (google::protobuf::internal *)"google.protobuf.Type.oneofs"))
                {
                  uint64_t v26 = v53;
                  if (v53)
                  {
                    if (*(void *)a3 <= (unint64_t)v53 || *(unsigned char *)v53 != 26) {
                      goto LABEL_76;
                    }
                    continue;
                  }
                }
                return 0;
              }
            case 4u:
              if (v11 != 34) {
                goto LABEL_68;
              }
              uint64_t v35 = (google::protobuf::internal *)((char *)TagFallback - 1);
              break;
            case 5u:
              if (v11 != 42) {
                goto LABEL_68;
              }
              uint64_t v43 = *(void *)(a1 + 96);
              if (!v43)
              {
                uint64_t v44 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
                if (*v5) {
                  uint64_t v44 = (void *)*v44;
                }
                uint64_t v43 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceContext>(v44);
                *(void *)(a1 + 9sub_1000FA614((void *)this + 6) = v43;
                TagFallbacint k = v53;
              }
              uint64_t v45 = sub_10010AED0(a3, v43, TagFallback);
              goto LABEL_75;
            case 6u:
              if (v11 != 48) {
                goto LABEL_68;
              }
              uint64_t v46 = (google::protobuf::internal *)((char *)TagFallback + 1);
              LODWORD(v47) = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_66;
              }
              int v48 = *(char *)v46;
              unint64_t v47 = v47 + (v48 << 7) - 128;
              if (v48 < 0)
              {
                uint64_t v53 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v47);
                if (!v53) {
                  return 0;
                }
              }
              else
              {
                uint64_t v46 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_66:
                uint64_t v53 = v46;
              }
              *(_DWORD *)(a1 + 104) = v47;
              goto LABEL_76;
            default:
LABEL_68:
              if (v11) {
                BOOL v49 = (v11 & 7) == 4;
              }
              else {
                BOOL v49 = 1;
              }
              if (v49)
              {
                *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ffield_5fmask_2eproto, 0) = v11 - 1;
                return TagFallback;
              }
              if (*v5)
              {
                uint64_t v50 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
              }
              else
              {
                uint64_t v50 = sub_10003562C(v5);
                TagFallbacint k = v53;
              }
              uint64_t v45 = google::protobuf::internal::UnknownFieldParse(v11, (google::protobuf::UnknownFieldSet *)v50, TagFallback);
LABEL_75:
              uint64_t v53 = v45;
              if (!v45) {
                return 0;
              }
LABEL_76:
              int v17 = 2;
LABEL_77:
              if (v17 != 2) {
                return 0;
              }
              continue;
          }
          while (1)
          {
            uint64_t v36 = (google::protobuf::internal *)((char *)v35 + 1);
            uint64_t v53 = (google::protobuf::internal *)((char *)v35 + 1);
            uint64_t v37 = *(int **)(a1 + 80);
            if (!v37) {
              break;
            }
            uint64_t v38 = *(int *)(a1 + 72);
            int v39 = *v37;
            if ((int)v38 >= *v37)
            {
              if (v39 == *(_DWORD *)(a1 + 76))
              {
LABEL_50:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v39 + 1);
                uint64_t v37 = *(int **)(a1 + 80);
                int v39 = *v37;
              }
              int *v37 = v39 + 1;
              uint64_t v40 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Option>(*(void *)(a1 + 64));
              uint64_t v41 = *(void *)(a1 + 80);
              uint64_t v42 = *(int *)(a1 + 72);
              *(_DWORD *)(a1 + 7sub_1000F9C98((void *)this + 2) = v42 + 1;
              *(void *)(v41 + 8 * v42 + 8) = v40;
              uint64_t v36 = v53;
              goto LABEL_52;
            }
            *(_DWORD *)(a1 + 7sub_1000F9C98((void *)this + 2) = v38 + 1;
            uint64_t v40 = *(void *)&v37[2 * v38 + 2];
LABEL_52:
            uint64_t v35 = sub_10010AE00(a3, v40, v36);
            uint64_t v53 = v35;
            if (!v35) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v35 || *(unsigned char *)v35 != 34) {
              goto LABEL_76;
            }
          }
          int v39 = *(_DWORD *)(a1 + 76);
          goto LABEL_50;
        }
        TagFallbacint k = (google::protobuf::internal *)((char *)v53 + 2);
      }
      uint64_t v53 = TagFallback;
      goto LABEL_7;
    }
    return v53;
  }
}

google::protobuf::internal *sub_10013479C(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = google::protobuf::Field::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Type::_InternalSerialize(google::protobuf::Type *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v7 = *((void *)this + 11) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    uint64_t v8 = *(const char **)(v7 + 8);
    if (!v8) {
      goto LABEL_7;
    }
    unint64_t v7 = *(void *)v7;
    goto LABEL_6;
  }
  uint64_t v8 = (const char *)*(unsigned __int8 *)(v7 + 23);
  if (*(unsigned char *)(v7 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v7, v8, 1, (google::protobuf::internal *)"google.protobuf.Type.name");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 1, (const void **)(*((void *)this + 11) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_7:
  int v9 = *((_DWORD *)this + 6);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      }
      BOOL v11 = *(google::protobuf::Field **)(*((void *)this + 4) + 8 * i + 8);
      *(unsigned char *)a2 = 18;
      unsigned int v12 = *((_DWORD *)v11 + 23);
      if (v12 > 0x7F)
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unsigned int v14 = v12 >> 7;
        if (v12 >> 14)
        {
          unint64_t v13 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v13 - sub_1000333D0((uint64_t *)this + 1) = v14 | 0x80;
            unsigned int v15 = v14 >> 7;
            unint64_t v13 = (google::protobuf::UnknownFieldSet *)((char *)v13 + 1);
            unsigned int v16 = v14 >> 14;
            v14 >>= 7;
          }
          while (v16);
          *((unsigned char *)v13 - sub_1000333D0((uint64_t *)this + 1) = v15;
        }
        else
        {
          *((unsigned char *)a2 + sub_1000F9C98((void *)this + 2) = v14;
          unint64_t v13 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v12;
        unint64_t v13 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::Field::_InternalSerialize(v11, v13, a3, a4);
    }
  }
  uint64_t v17 = *((unsigned int *)this + 12);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = 0;
    uint64_t v19 = 8 * v17;
    do
    {
      uint64_t v20 = *(void *)(*((void *)this + 7) + v18 + 8);
      if (*(char *)(v20 + 23) < 0)
      {
        int v22 = *(google::protobuf::internal **)v20;
        uint64_t v21 = *(const char **)(v20 + 8);
      }
      else
      {
        uint64_t v21 = (const char *)*(unsigned __int8 *)(v20 + 23);
        int v22 = *(google::protobuf::internal **)(*((void *)this + 7) + v18 + 8);
      }
      google::protobuf::internal::WireFormatLite::VerifyUtf8String(v22, v21, 1, (google::protobuf::internal *)"google.protobuf.Type.oneofs");
      a2 = (google::protobuf::UnknownFieldSet *)sub_1000E4244(a3, 3, v20, (unsigned __int8 *)a2);
      v18 += 8;
    }
    while (v19 != v18);
  }
  int v23 = *((_DWORD *)this + 18);
  if (v23)
  {
    for (int j = 0; j != v23; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      }
      uint64_t v25 = *(google::protobuf::Option **)(*((void *)this + 10) + 8 * j + 8);
      *(unsigned char *)a2 = 34;
      unsigned int v26 = *((_DWORD *)v25 + 8);
      if (v26 > 0x7F)
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v26 | 0x80;
        unsigned int v28 = v26 >> 7;
        if (v26 >> 14)
        {
          uint64_t v27 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v27 - sub_1000333D0((uint64_t *)this + 1) = v28 | 0x80;
            unsigned int v29 = v28 >> 7;
            uint64_t v27 = (google::protobuf::UnknownFieldSet *)((char *)v27 + 1);
            unsigned int v30 = v28 >> 14;
            v28 >>= 7;
          }
          while (v30);
          *((unsigned char *)v27 - sub_1000333D0((uint64_t *)this + 1) = v29;
        }
        else
        {
          *((unsigned char *)a2 + sub_1000F9C98((void *)this + 2) = v28;
          uint64_t v27 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v26;
        uint64_t v27 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::Option::_InternalSerialize(v25, v27, a3, a4);
    }
  }
  if (this != (google::protobuf::Type *)&google::protobuf::_Type_default_instance_)
  {
    uint64_t v31 = (google::protobuf::SourceContext *)*((void *)this + 12);
    if (v31)
    {
      if (*(void *)a3 <= (unint64_t)a2)
      {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
        uint64_t v31 = (google::protobuf::SourceContext *)*((void *)this + 12);
      }
      *(unsigned char *)a2 = 42;
      unsigned int v32 = *((_DWORD *)v31 + 6);
      if (v32 > 0x7F)
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v32 | 0x80;
        unsigned int v34 = v32 >> 7;
        if (v32 >> 14)
        {
          uint64_t v33 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v33 - sub_1000333D0((uint64_t *)this + 1) = v34 | 0x80;
            unsigned int v35 = v34 >> 7;
            uint64_t v33 = (google::protobuf::UnknownFieldSet *)((char *)v33 + 1);
            unsigned int v36 = v34 >> 14;
            v34 >>= 7;
          }
          while (v36);
          *((unsigned char *)v33 - sub_1000333D0((uint64_t *)this + 1) = v35;
        }
        else
        {
          *((unsigned char *)a2 + sub_1000F9C98((void *)this + 2) = v34;
          uint64_t v33 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v32;
        uint64_t v33 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::SourceContext::_InternalSerialize(v31, v33, a3, a4);
    }
  }
  unsigned int v37 = *((_DWORD *)this + 26);
  if (v37)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      unsigned int v37 = *((_DWORD *)this + 26);
    }
    *(unsigned char *)a2 = 48;
    if (v37 > 0x7F)
    {
      *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v37 | 0x80;
      unint64_t v38 = (unint64_t)(int)v37 >> 7;
      if (v37 >> 14)
      {
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        do
        {
          *((unsigned char *)a2 - sub_1000333D0((uint64_t *)this + 1) = v38 | 0x80;
          unint64_t v39 = v38 >> 7;
          a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
          unint64_t v40 = v38 >> 14;
          v38 >>= 7;
        }
        while (v40);
        *((unsigned char *)a2 - sub_1000333D0((uint64_t *)this + 1) = v39;
      }
      else
      {
        *((unsigned char *)a2 + sub_1000F9C98((void *)this + 2) = v38;
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
      }
    }
    else
    {
      *((unsigned char *)a2 + sub_1000333D0((uint64_t *)this + 1) = v37;
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  uint64_t v41 = *((void *)this + 1);
  if ((v41 & 1) == 0) {
    return a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v41 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::Type::ByteSizeLong(google::protobuf::Type *this)
{
  uint64_t v2 = *((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    int v4 = (google::protobuf::Field **)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      unint64_t v7 = google::protobuf::Field::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((unsigned int *)this + 12);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    int v10 = (uint64_t *)(*((void *)this + 7) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *((int *)this + 18);
  unsigned int v15 = (const google::protobuf::UnknownFieldSet *)(v9 + v14);
  uint64_t v16 = *((void *)this + 10);
  if (v16) {
    uint64_t v17 = (google::protobuf::Option **)(v16 + 8);
  }
  else {
    uint64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = google::protobuf::Option::ByteSizeLong(v19);
      unsigned int v15 = (const google::protobuf::UnknownFieldSet *)((char *)v15
                                                      + (void)v20
                                                      + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6));
      v18 -= 8;
    }
    while (v18);
  }
  unint64_t v21 = *((void *)this + 11) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
  if (*(char *)(v21 + 23) < 0)
  {
    if (!*(void *)(v21 + 8)) {
      goto LABEL_25;
    }
  }
  else if (!*(unsigned char *)(v21 + 23))
  {
    goto LABEL_25;
  }
  uint64_t v23 = *(void *)(v21 + 8);
  if ((v22 & 0x80u) == 0) {
    uint64_t v23 = v22;
  }
  unsigned int v15 = (const google::protobuf::UnknownFieldSet *)((char *)v15 + v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_25:
  if (this != (google::protobuf::Type *)&google::protobuf::_Type_default_instance_)
  {
    uint64_t v24 = (google::protobuf::SourceContext *)*((void *)this + 12);
    if (v24)
    {
      uint64_t v25 = google::protobuf::SourceContext::ByteSizeLong(v24);
      unsigned int v15 = (const google::protobuf::UnknownFieldSet *)&v25[((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v15];
    }
  }
  int v26 = *((_DWORD *)this + 26);
  uint64_t v27 = 11;
  uint64_t v28 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v26 >= 0) {
    uint64_t v27 = v28;
  }
  unsigned int v29 = (const google::protobuf::UnknownFieldSet *)((char *)v15 + v27);
  if (v26) {
    unsigned int v30 = v29;
  }
  else {
    unsigned int v30 = v15;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Type *)((char *)this + 8), v30, (_DWORD *)this + 27);
  }
  else
  {
    *((_DWORD *)this + 27) = v30;
    return (char *)v30;
  }
}

void google::protobuf::Type::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::Type::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::Type::MergeFrom(std::string *this, const google::protobuf::Type *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    unint64_t v7 = (google::protobuf::Field **)(*((void *)a2 + 4) + 8);
    uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = sub_100138C64((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v8, v7, v6, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v9 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v6;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v9;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v9) {
      *std::string::size_type size = v9;
    }
  }
  unsigned int v11 = *((_DWORD *)a2 + 12);
  if (v11)
  {
    uint64_t v12 = (const std::string **)(*((void *)a2 + 7) + 8);
    uint64_t v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 12));
    this = sub_1000F9F28((std::string *)((char *)v3 + 40), (std::string **)v13, v12, v11, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    signed int v14 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v11;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v14;
    unsigned int v15 = (signed int *)v3[2].__r_.__value_.__l.__size_;
    if (*v15 < v14) {
      *unsigned int v15 = v14;
    }
  }
  unsigned int v16 = *((_DWORD *)a2 + 18);
  if (v16)
  {
    uint64_t v17 = (const google::protobuf::Option **)(*((void *)a2 + 10) + 8);
    uint64_t v18 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[2].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 18));
    this = sub_10010D5F4((std::string *)((char *)v3 + 64), (std::string **)v18, v17, v16, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    signed int v19 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v16;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v19;
    uint64_t v20 = (signed int *)v3[3].__r_.__value_.__l.__size_;
    if (*v20 < v19) {
      *uint64_t v20 = v19;
    }
  }
  unint64_t v21 = *((void *)a2 + 11) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v21 + 23) < 0)
  {
    if (!*(void *)(v21 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v21 + 23))
  {
    goto LABEL_19;
  }
  uint64_t v22 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    uint64_t v22 = *(google::protobuf::Arena **)v22;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[3].__r_.__value_.__r.__words[2], v21, v22);
LABEL_19:
  if (a2 != (const google::protobuf::Type *)&google::protobuf::_Type_default_instance_)
  {
    uint64_t v23 = (const google::protobuf::SourceContext *)*((void *)a2 + 12);
    if (v23)
    {
      data = (std::string *)v3[4].__r_.__value_.__l.__data_;
      if (!data)
      {
        uint64_t v25 = (void *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
        if (*p_size) {
          uint64_t v25 = (void *)*v25;
        }
        data = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceContext>(v25);
        v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
        uint64_t v23 = (const google::protobuf::SourceContext *)*((void *)a2 + 12);
      }
      if (v23) {
        int v26 = v23;
      }
      else {
        int v26 = (const google::protobuf::SourceContext *)&google::protobuf::_SourceContext_default_instance_;
      }
      this = google::protobuf::SourceContext::MergeFrom(data, v26);
    }
  }
  int v27 = *((_DWORD *)a2 + 26);
  if (v27) {
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = v27;
  }
  return this;
}

void google::protobuf::Type::CopyFrom(google::protobuf::Type *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::Type::Clear(this);
    google::protobuf::Type::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::Type::IsInitialized(google::protobuf::Type *this)
{
  return 1;
}

uint64_t google::protobuf::Type::GetMetadata(google::protobuf::Type *this)
{
  return *off_1001EB110;
}

uint64_t google::protobuf::Field::Field(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D25F0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_1000F9C98((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 9sub_1000F9C98((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_Field_google_2fprotobuf_2ftype_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Field_google_2fprotobuf_2ftype_2eproto);
  }
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 48) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 5sub_1000FA614((void *)this + 6) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 64) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 7sub_1000F9C98((void *)this + 2) = 0;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = 0;
  *(unsigned char *)(a1 + 88) = 0;
  return a1;
}

void sub_100135268(_Unwind_Exception *a1)
{
  sub_10010D434(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::Field::~Field(google::protobuf::Field *this)
{
}

{
  uint64_t vars8;

  google::protobuf::Field::~Field(this);
  operator delete();
}

void *sub_1001352C0(void *result)
{
  uint64_t v1 = result[5];
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  uint64_t v2 = result[6];
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = result[7];
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v4 = result[8];
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    operator delete();
  }
  return result;
}

uint64_t google::protobuf::Field::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 9sub_10010D434((void *)this + 2) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::Field::Clear(google::protobuf::Field *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::Option **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      google::protobuf::Option::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + sub_1000FA614((void *)this + 6) = 0;
  }
  google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 5);
  google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 6);
  google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 7);
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 8);
  char v7 = *((unsigned char *)this + 8);
  unsigned int v6 = (char *)this + 8;
  *((void *)v6 + 8) = 0;
  *((void *)v6 + 9) = 0;
  v6[80] = 0;
  if (v7)
  {
    return sub_100035820((unint64_t *)v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Field::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v5 = (unint64_t *)(a1 + 8);
  char v63 = (uint64_t **)(a1 + 64);
  int64_t v64 = a2;
  unsigned int v6 = (uint64_t **)(a1 + 56);
  char v7 = (unsigned int *)(a1 + 16);
  uint64_t v8 = (uint64_t **)(a1 + 48);
  signed int v9 = (uint64_t **)(a1 + 40);
  while (2)
  {
    if ((sub_1000355B8(a3, &v64, *(_DWORD *)(a3 + 92)) & 1) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v64 + 1);
      unsigned int v11 = *(unsigned __int8 *)v64;
      if (*(char *)v64 < 0)
      {
        unsigned int v12 = v11 + (*(unsigned __int8 *)TagFallback << 7);
        unsigned int v11 = v12 - 128;
        if (*(char *)TagFallback < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v64, (const char *)(v12 - 128));
          int64_t v64 = TagFallback;
          if (!TagFallback) {
            return TagFallback;
          }
          unsigned int v11 = v16;
LABEL_7:
          switch(v11 >> 3)
          {
            case 1u:
              if (v11 != 8) {
                goto LABEL_71;
              }
              uint64_t v13 = (google::protobuf::internal *)((char *)TagFallback + 1);
              LODWORD(v14) = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_12;
              }
              int v15 = *(char *)v13;
              unint64_t v14 = v14 + (v15 << 7) - 128;
              if ((v15 & 0x80000000) == 0)
              {
                uint64_t v13 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_12:
                int64_t v64 = v13;
LABEL_13:
                *(_DWORD *)(a1 + 7sub_10010D434((void *)this + 2) = v14;
                goto LABEL_78;
              }
              int64_t v64 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v14);
              if (v64) {
                goto LABEL_13;
              }
              return 0;
            case 2u:
              if (v11 != 16) {
                goto LABEL_71;
              }
              uint64_t v17 = (google::protobuf::internal *)((char *)TagFallback + 1);
              LODWORD(v18) = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_20;
              }
              int v19 = *(char *)v17;
              unint64_t v18 = v18 + (v19 << 7) - 128;
              if (v19 < 0)
              {
                int64_t v64 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v18);
                if (!v64) {
                  return 0;
                }
              }
              else
              {
                uint64_t v17 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_20:
                int64_t v64 = v17;
              }
              *(_DWORD *)(a1 + 7sub_1000FA614((void *)this + 6) = v18;
              goto LABEL_78;
            case 3u:
              if (v11 != 24) {
                goto LABEL_71;
              }
              unint64_t v21 = (google::protobuf::internal *)((char *)TagFallback + 1);
              LODWORD(v2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = *(unsigned __int8 *)TagFallback;
              if ((v20 & 0x80) == 0) {
                goto LABEL_26;
              }
              int v22 = *(char *)v21;
              unint64_t v20 = v20 + (v22 << 7) - 128;
              if (v22 < 0)
              {
                unsigned int v56 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v20);
                int64_t v64 = v56;
                *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v57;
                if (!v56) {
                  return 0;
                }
              }
              else
              {
                unint64_t v21 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_26:
                int64_t v64 = v21;
                *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v20;
              }
              goto LABEL_78;
            case 4u:
              if (v11 != 34) {
                goto LABEL_71;
              }
              uint64_t v23 = (google::protobuf::Arena *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
              if (*v5) {
                uint64_t v23 = *(google::protobuf::Arena **)v23;
              }
              uint64_t v24 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v9, v23);
              int64_t v64 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v24, (std::string::value_type *)v64, a3);
              sub_1000BB974(&v65, (uint64_t *)v24, v25);
              int v26 = v65;
              int v27 = v66;
              uint64_t v28 = "google.protobuf.Field.name";
              goto LABEL_66;
            case 6u:
              if (v11 != 50) {
                goto LABEL_71;
              }
              unsigned int v29 = (google::protobuf::Arena *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
              if (*v5) {
                unsigned int v29 = *(google::protobuf::Arena **)v29;
              }
              unsigned int v30 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v8, v29);
              int64_t v64 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v30, (std::string::value_type *)v64, a3);
              sub_1000BB974(&v65, (uint64_t *)v30, v31);
              int v26 = v65;
              int v27 = v66;
              uint64_t v28 = "google.protobuf.Field.type_url";
              goto LABEL_66;
            case 7u:
              if (v11 != 56) {
                goto LABEL_71;
              }
              uint64_t v33 = (google::protobuf::internal *)((char *)TagFallback + 1);
              LODWORD(v3sub_10010D434((void *)this + 2) = *(unsigned __int8 *)TagFallback;
              if ((v32 & 0x80) == 0) {
                goto LABEL_39;
              }
              int v34 = *(char *)v33;
              unint64_t v32 = v32 + (v34 << 7) - 128;
              if (v34 < 0)
              {
                uint64_t v58 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v32);
                int64_t v64 = v58;
                *(_DWORD *)(a1 + 84) = v59;
                if (!v58) {
                  return 0;
                }
              }
              else
              {
                uint64_t v33 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_39:
                int64_t v64 = v33;
                *(_DWORD *)(a1 + 84) = v32;
              }
              goto LABEL_78;
            case 8u:
              if (v11 != 64) {
                goto LABEL_71;
              }
              unsigned int v35 = (google::protobuf::internal *)((char *)TagFallback + 1);
              unint64_t v36 = *(unsigned __int8 *)TagFallback;
              if ((*(char *)TagFallback & 0x80000000) == 0) {
                goto LABEL_44;
              }
              int v37 = *(char *)v35;
              unint64_t v36 = v36 + (v37 << 7) - 128;
              if (v37 < 0)
              {
                int v60 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v36);
                int64_t v64 = v60;
                *(unsigned char *)(a1 + 88) = v61 != 0;
                if (!v60) {
                  return 0;
                }
              }
              else
              {
                unsigned int v35 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_44:
                int64_t v64 = v35;
                *(unsigned char *)(a1 + 88) = v36 != 0;
              }
              goto LABEL_78;
            case 9u:
              if (v11 != 74) {
                goto LABEL_71;
              }
              unint64_t v38 = (google::protobuf::internal *)((char *)TagFallback - 1);
              break;
            case 0xAu:
              if (v11 != 82) {
                goto LABEL_71;
              }
              uint64_t v46 = (google::protobuf::Arena *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
              if (*v5) {
                uint64_t v46 = *(google::protobuf::Arena **)v46;
              }
              unint64_t v47 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v6, v46);
              int64_t v64 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v47, (std::string::value_type *)v64, a3);
              sub_1000BB974(&v65, (uint64_t *)v47, v48);
              int v26 = v65;
              int v27 = v66;
              uint64_t v28 = "google.protobuf.Field.json_name";
              goto LABEL_66;
            case 0xBu:
              if (v11 != 90) {
                goto LABEL_71;
              }
              BOOL v49 = (google::protobuf::Arena *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
              if (*v5) {
                BOOL v49 = *(google::protobuf::Arena **)v49;
              }
              uint64_t v50 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v63, v49);
              int64_t v64 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v50, (std::string::value_type *)v64, a3);
              sub_1000BB974(&v65, (uint64_t *)v50, v51);
              int v26 = v65;
              int v27 = v66;
              uint64_t v28 = "google.protobuf.Field.default_value";
LABEL_66:
              BOOL v52 = google::protobuf::internal::VerifyUTF8(v26, v27, (google::protobuf::internal *)v28);
              if (v64) {
                int v53 = 2;
              }
              else {
                int v53 = 4;
              }
              if (!v52) {
                return 0;
              }
              goto LABEL_79;
            default:
LABEL_71:
              if (v11) {
                BOOL v54 = (v11 & 7) == 4;
              }
              else {
                BOOL v54 = 1;
              }
              if (v54)
              {
                *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v11 - 1;
                return TagFallback;
              }
              if (*v5)
              {
                uint64_t v55 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
              }
              else
              {
                uint64_t v55 = sub_10003562C(v5);
                TagFallbacint k = v64;
              }
              int64_t v64 = google::protobuf::internal::UnknownFieldParse(v11, (google::protobuf::UnknownFieldSet *)v55, TagFallback);
              if (!v64) {
                return 0;
              }
LABEL_78:
              int v53 = 2;
LABEL_79:
              if (v53 != 2) {
                return 0;
              }
              continue;
          }
          while (1)
          {
            unint64_t v39 = (google::protobuf::internal *)((char *)v38 + 1);
            int64_t v64 = (google::protobuf::internal *)((char *)v38 + 1);
            unint64_t v40 = *(int **)(a1 + 32);
            if (!v40) {
              break;
            }
            uint64_t v41 = *(int *)(a1 + 24);
            int v42 = *v40;
            if ((int)v41 >= *v40)
            {
              if (v42 == *(_DWORD *)(a1 + 28))
              {
LABEL_52:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v42 + 1);
                unint64_t v40 = *(int **)(a1 + 32);
                int v42 = *v40;
              }
              *unint64_t v40 = v42 + 1;
              uint64_t v43 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Option>(*(void *)(a1 + 16));
              uint64_t v44 = *(void *)(a1 + 32);
              uint64_t v45 = *(int *)(a1 + 24);
              *(_DWORD *)(a1 + 24) = v45 + 1;
              *(void *)(v44 + 8 * v45 + 8) = v43;
              unint64_t v39 = v64;
              goto LABEL_54;
            }
            *(_DWORD *)(a1 + 24) = v41 + 1;
            uint64_t v43 = *(void *)&v40[2 * v41 + 2];
LABEL_54:
            unint64_t v38 = sub_10010AE00(a3, v43, v39);
            int64_t v64 = v38;
            if (!v38) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v38 || *(unsigned char *)v38 != 74) {
              goto LABEL_78;
            }
          }
          int v42 = *(_DWORD *)(a1 + 28);
          goto LABEL_52;
        }
        TagFallbacint k = (google::protobuf::internal *)((char *)v64 + 2);
      }
      int64_t v64 = TagFallback;
      goto LABEL_7;
    }
    return v64;
  }
}

const google::protobuf::UnknownFieldSet *google::protobuf::Field::_InternalSerialize(google::protobuf::Field *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = (unsigned __int8 *)a2;
  unsigned int v7 = *((_DWORD *)this + 18);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      unsigned int v7 = *((_DWORD *)this + 18);
    }
    unsigned __int8 *v5 = 8;
    if (v7 > 0x7F)
    {
      v5[1] = v7 | 0x80;
      unint64_t v8 = (unint64_t)(int)v7 >> 7;
      if (v7 >> 14)
      {
        v5 += 3;
        do
        {
          *(v5 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          ++v5;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(v5 - sub_1000333D0((uint64_t *)this + 1) = v9;
      }
      else
      {
        void v5[2] = v8;
        v5 += 3;
      }
    }
    else
    {
      v5[1] = v7;
      v5 += 2;
    }
  }
  unsigned int v11 = *((_DWORD *)this + 19);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)v5)
    {
      uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unsigned int v11 = *((_DWORD *)this + 19);
    }
    unsigned __int8 *v5 = 16;
    if (v11 > 0x7F)
    {
      v5[1] = v11 | 0x80;
      unint64_t v12 = (unint64_t)(int)v11 >> 7;
      if (v11 >> 14)
      {
        v5 += 3;
        do
        {
          *(v5 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
          unint64_t v13 = v12 >> 7;
          ++v5;
          unint64_t v14 = v12 >> 14;
          v12 >>= 7;
        }
        while (v14);
        *(v5 - sub_1000333D0((uint64_t *)this + 1) = v13;
      }
      else
      {
        void v5[2] = v12;
        v5 += 3;
      }
    }
    else
    {
      v5[1] = v11;
      v5 += 2;
    }
  }
  unsigned int v15 = *((_DWORD *)this + 20);
  if (v15)
  {
    if (*(void *)a3 <= (unint64_t)v5)
    {
      uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unsigned int v15 = *((_DWORD *)this + 20);
    }
    unsigned __int8 *v5 = 24;
    if (v15 > 0x7F)
    {
      v5[1] = v15 | 0x80;
      unint64_t v16 = (unint64_t)(int)v15 >> 7;
      if (v15 >> 14)
      {
        v5 += 3;
        do
        {
          *(v5 - sub_1000333D0((uint64_t *)this + 1) = v16 | 0x80;
          unint64_t v17 = v16 >> 7;
          ++v5;
          unint64_t v18 = v16 >> 14;
          v16 >>= 7;
        }
        while (v18);
        *(v5 - sub_1000333D0((uint64_t *)this + 1) = v17;
      }
      else
      {
        void v5[2] = v16;
        v5 += 3;
      }
    }
    else
    {
      v5[1] = v15;
      v5 += 2;
    }
  }
  unint64_t v19 = *((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v19 + 23) < 0)
  {
    unint64_t v20 = *(const char **)(v19 + 8);
    if (!v20) {
      goto LABEL_37;
    }
    unint64_t v19 = *(void *)v19;
    goto LABEL_36;
  }
  unint64_t v20 = (const char *)*(unsigned __int8 *)(v19 + 23);
  if (*(unsigned char *)(v19 + 23))
  {
LABEL_36:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v19, v20, 1, (google::protobuf::internal *)"google.protobuf.Field.name");
    uint64_t v5 = sub_100034480(a3, 4, (const void **)(*((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL), v5);
  }
LABEL_37:
  unint64_t v21 = *((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v21 + 23) < 0)
  {
    int v22 = *(const char **)(v21 + 8);
    if (!v22) {
      goto LABEL_43;
    }
    unint64_t v21 = *(void *)v21;
    goto LABEL_42;
  }
  int v22 = (const char *)*(unsigned __int8 *)(v21 + 23);
  if (*(unsigned char *)(v21 + 23))
  {
LABEL_42:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v21, v22, 1, (google::protobuf::internal *)"google.protobuf.Field.type_url");
    uint64_t v5 = sub_100034480(a3, 6, (const void **)(*((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL), v5);
  }
LABEL_43:
  unsigned int v23 = *((_DWORD *)this + 21);
  if (v23)
  {
    if (*(void *)a3 <= (unint64_t)v5)
    {
      uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      unsigned int v23 = *((_DWORD *)this + 21);
    }
    unsigned __int8 *v5 = 56;
    if (v23 > 0x7F)
    {
      v5[1] = v23 | 0x80;
      unint64_t v24 = (unint64_t)(int)v23 >> 7;
      if (v23 >> 14)
      {
        v5 += 3;
        do
        {
          *(v5 - sub_1000333D0((uint64_t *)this + 1) = v24 | 0x80;
          unint64_t v25 = v24 >> 7;
          ++v5;
          unint64_t v26 = v24 >> 14;
          v24 >>= 7;
        }
        while (v26);
        *(v5 - sub_1000333D0((uint64_t *)this + 1) = v25;
      }
      else
      {
        void v5[2] = v24;
        v5 += 3;
      }
    }
    else
    {
      v5[1] = v23;
      v5 += 2;
    }
  }
  if (*((unsigned char *)this + 88))
  {
    if (*(void *)a3 <= (unint64_t)v5)
    {
      uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      char v27 = *((unsigned char *)this + 88);
    }
    else
    {
      char v27 = 1;
    }
    unsigned __int8 *v5 = 64;
    v5[1] = v27;
    v5 += 2;
  }
  int v28 = *((_DWORD *)this + 6);
  if (v28)
  {
    for (int i = 0; i != v28; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v5) {
        uint64_t v5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v5);
      }
      unsigned int v30 = *(google::protobuf::Option **)(*((void *)this + 4) + 8 * i + 8);
      unsigned __int8 *v5 = 74;
      unsigned int v31 = *((_DWORD *)v30 + 8);
      if (v31 > 0x7F)
      {
        v5[1] = v31 | 0x80;
        unsigned int v33 = v31 >> 7;
        if (v31 >> 14)
        {
          unint64_t v32 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
          do
          {
            *((unsigned char *)v32 - sub_1000333D0((uint64_t *)this + 1) = v33 | 0x80;
            unsigned int v34 = v33 >> 7;
            unint64_t v32 = (google::protobuf::UnknownFieldSet *)((char *)v32 + 1);
            unsigned int v35 = v33 >> 14;
            v33 >>= 7;
          }
          while (v35);
          *((unsigned char *)v32 - sub_1000333D0((uint64_t *)this + 1) = v34;
        }
        else
        {
          void v5[2] = v33;
          unint64_t v32 = (google::protobuf::UnknownFieldSet *)(v5 + 3);
        }
      }
      else
      {
        v5[1] = v31;
        unint64_t v32 = (google::protobuf::UnknownFieldSet *)(v5 + 2);
      }
      uint64_t v5 = (unsigned __int8 *)google::protobuf::Option::_InternalSerialize(v30, v32, a3, a4);
    }
  }
  unint64_t v36 = *((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v36 + 23) < 0)
  {
    int v37 = *(const char **)(v36 + 8);
    if (!v37) {
      goto LABEL_75;
    }
    unint64_t v36 = *(void *)v36;
    goto LABEL_74;
  }
  int v37 = (const char *)*(unsigned __int8 *)(v36 + 23);
  if (*(unsigned char *)(v36 + 23))
  {
LABEL_74:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v36, v37, 1, (google::protobuf::internal *)"google.protobuf.Field.json_name");
    uint64_t v5 = sub_100034480(a3, 10, (const void **)(*((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL), v5);
  }
LABEL_75:
  unint64_t v38 = *((void *)this + 8) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v38 + 23) < 0)
  {
    unint64_t v39 = *(const char **)(v38 + 8);
    if (!v39) {
      goto LABEL_81;
    }
    unint64_t v38 = *(void *)v38;
    goto LABEL_80;
  }
  unint64_t v39 = (const char *)*(unsigned __int8 *)(v38 + 23);
  if (*(unsigned char *)(v38 + 23))
  {
LABEL_80:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v38, v39, 1, (google::protobuf::internal *)"google.protobuf.Field.default_value");
    uint64_t v5 = sub_100034480(a3, 11, (const void **)(*((void *)this + 8) & 0xFFFFFFFFFFFFFFFELL), v5);
  }
LABEL_81:
  uint64_t v40 = *((void *)this + 1);
  if ((v40 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v40 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v5, a3, a4);
}

char *google::protobuf::Field::ByteSizeLong(google::protobuf::Field *this)
{
  uint64_t v2 = *((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (google::protobuf::Option **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      unsigned int v6 = *v4++;
      unsigned int v7 = google::protobuf::Option::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  unint64_t v8 = *((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_14;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_14;
  }
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  unint64_t v11 = *((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_19;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_19;
  }
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_19:
  unint64_t v14 = *((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  if (*(char *)(v14 + 23) < 0)
  {
    if (!*(void *)(v14 + 8)) {
      goto LABEL_24;
    }
  }
  else if (!*(unsigned char *)(v14 + 23))
  {
    goto LABEL_24;
  }
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_24:
  unint64_t v17 = *((void *)this + 8) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  if (*(char *)(v17 + 23) < 0)
  {
    if (!*(void *)(v17 + 8)) {
      goto LABEL_29;
    }
  }
  else if (!*(unsigned char *)(v17 + 23))
  {
    goto LABEL_29;
  }
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_29:
  int v20 = *((_DWORD *)this + 18);
  if (v20)
  {
    if (v20 < 0) {
      uint64_t v21 = 11;
    }
    else {
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v21;
  }
  int v22 = *((_DWORD *)this + 19);
  if (v22)
  {
    if (v22 < 0) {
      uint64_t v23 = 11;
    }
    else {
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v23;
  }
  int v24 = *((_DWORD *)this + 20);
  if (v24)
  {
    if (v24 < 0) {
      uint64_t v25 = 11;
    }
    else {
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v25;
  }
  int v26 = *((_DWORD *)this + 21);
  if (v26)
  {
    if (v26 < 0) {
      uint64_t v27 = 11;
    }
    else {
      uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v27;
  }
  if (*((unsigned char *)this + 88)) {
    int v28 = (const google::protobuf::UnknownFieldSet *)(v2 + 2);
  }
  else {
    int v28 = (const google::protobuf::UnknownFieldSet *)v2;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Field *)((char *)this + 8), v28, (_DWORD *)this + 23);
  }
  else
  {
    *((_DWORD *)this + 23) = v28;
    return (char *)v28;
  }
}

void google::protobuf::Field::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::Field::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::Field::MergeFrom(std::string *this, const google::protobuf::Field *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    unsigned int v7 = (const google::protobuf::Option **)(*((void *)a2 + 4) + 8);
    unint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = sub_10010D5F4((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v8, v7, v6, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v9 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v6;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v9;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v9) {
      *std::string::size_type size = v9;
    }
  }
  unint64_t v11 = *((void *)a2 + 5) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v12 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    uint64_t v12 = *(google::protobuf::Arena **)v12;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1].__r_.__value_.__r.__words[2], v11, v12);
LABEL_13:
  unint64_t v13 = *((void *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v13 + 23) < 0)
  {
    if (!*(void *)(v13 + 8)) {
      goto LABEL_20;
    }
  }
  else if (!*(unsigned char *)(v13 + 23))
  {
    goto LABEL_20;
  }
  unint64_t v14 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    unint64_t v14 = *(google::protobuf::Arena **)v14;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[2], v13, v14);
LABEL_20:
  unint64_t v15 = *((void *)a2 + 7) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_27;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_27;
  }
  uint64_t v16 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    uint64_t v16 = *(google::protobuf::Arena **)v16;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[2].__r_.__value_.__l.__size_, v15, v16);
LABEL_27:
  unint64_t v17 = *((void *)a2 + 8) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v17 + 23) < 0)
  {
    if (!*(void *)(v17 + 8)) {
      goto LABEL_34;
    }
  }
  else if (!*(unsigned char *)(v17 + 23))
  {
    goto LABEL_34;
  }
  uint64_t v18 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    uint64_t v18 = *(google::protobuf::Arena **)v18;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v18);
LABEL_34:
  int v19 = *((_DWORD *)a2 + 18);
  if (v19) {
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v19;
  }
  int v20 = *((_DWORD *)a2 + 19);
  if (v20) {
    HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = v20;
  }
  int v21 = *((_DWORD *)a2 + 20);
  if (v21) {
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v21;
  }
  int v22 = *((_DWORD *)a2 + 21);
  if (v22) {
    HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = v22;
  }
  if (*((unsigned char *)a2 + 88)) {
    v3[3].__r_.__value_.__s.__data_[16] = 1;
  }
  return this;
}

void google::protobuf::Field::CopyFrom(google::protobuf::Field *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::Field::Clear(this);
    google::protobuf::Field::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::Field::IsInitialized(google::protobuf::Field *this)
{
  return 1;
}

uint64_t google::protobuf::Field::GetMetadata(google::protobuf::Field *this)
{
  return off_1001EB110[2];
}

uint64_t google::protobuf::Enum::Enum(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 1sub_1000FA614((void *)this + 6) = a2;
  *(void *)a1 = off_1001D26A0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_10010D434((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 5sub_1000FA614((void *)this + 6) = 0;
  *(_DWORD *)(a1 + 84) = 0;
  if (atomic_load_explicit(scc_info_Enum_google_2fprotobuf_2ftype_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Enum_google_2fprotobuf_2ftype_2eproto);
  }
  *(void *)(a1 + 64) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 7sub_10010D434((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = 0;
  return a1;
}

void sub_10013661C(_Unwind_Exception *a1)
{
  sub_10010D434(v2);
  sub_100138D24(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::Enum::~Enum(google::protobuf::Enum *this)
{
  uint64_t v2 = *((void *)this + 8);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if (this != (google::protobuf::Enum *)&google::protobuf::_Enum_default_instance_)
  {
    uint64_t v3 = (google::protobuf::SourceContext *)*((void *)this + 9);
    if (v3)
    {
      google::protobuf::SourceContext::~SourceContext(v3);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_10010D434((void *)this + 5);
  sub_100138D24((void *)this + 2);
}

{
  uint64_t vars8;

  google::protobuf::Enum::~Enum(this);
  operator delete();
}

uint64_t google::protobuf::Enum::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 84) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::Enum::Clear(google::protobuf::Enum *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::EnumValue **)(*((void *)this + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      google::protobuf::EnumValue::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + sub_1000FA614((void *)this + 6) = 0;
  }
  uint64_t v5 = *((unsigned int *)this + 12);
  if ((int)v5 >= 1)
  {
    unsigned int v6 = (google::protobuf::Option **)(*((void *)this + 7) + 8);
    do
    {
      unsigned int v7 = *v6++;
      google::protobuf::Option::Clear(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)this + 1sub_10010D434((void *)this + 2) = 0;
  }
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 8);
  uint64_t v9 = *((void *)this + 1);
  uint64_t v10 = (void *)(v9 & 0xFFFFFFFFFFFFFFFELL);
  if (v9)
  {
    if (*v10) {
      goto LABEL_13;
    }
  }
  else if (v10)
  {
    goto LABEL_13;
  }
  uint64_t result = (google::protobuf::Arena **)*((void *)this + 9);
  if (result)
  {
    google::protobuf::SourceContext::~SourceContext((google::protobuf::SourceContext *)result);
    operator delete();
  }
LABEL_13:
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = 0;
  if (v9)
  {
    return sub_100035820((unint64_t *)this + 1);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Enum::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v43 = a2;
  uint64_t v5 = (unint64_t *)(a1 + 8);
  unsigned int v6 = (unsigned int *)(a1 + 40);
  unsigned int v7 = (unsigned int *)(a1 + 16);
  unint64_t v8 = (uint64_t **)(a1 + 64);
  while (2)
  {
    if (sub_1000355B8(a3, &v43, *(_DWORD *)(a3 + 92))) {
      return v43;
    }
    TagFallbacint k = (google::protobuf::internal *)((char *)v43 + 1);
    unsigned int v10 = *(unsigned __int8 *)v43;
    if ((*(char *)v43 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v11 = v10 + (*(unsigned __int8 *)TagFallback << 7);
    unsigned int v10 = v11 - 128;
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallbacint k = (google::protobuf::internal *)((char *)v43 + 2);
LABEL_6:
      uint64_t v43 = TagFallback;
      goto LABEL_7;
    }
    TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v43, (const char *)(v11 - 128));
    uint64_t v43 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
    unsigned int v10 = v41;
LABEL_7:
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_54;
        }
        uint64_t v12 = (google::protobuf::Arena *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
        if (*v5) {
          uint64_t v12 = *(google::protobuf::Arena **)v12;
        }
        unint64_t v13 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v8, v12);
        uint64_t v43 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v13, (std::string::value_type *)v43, a3);
        sub_1000BB974(v44, (uint64_t *)v13, v14);
        BOOL v15 = google::protobuf::internal::VerifyUTF8(v44[0], (const char *)v44[1], (google::protobuf::internal *)"google.protobuf.Enum.name");
        if (v43) {
          int v16 = 2;
        }
        else {
          int v16 = 4;
        }
        if (v15) {
          goto LABEL_63;
        }
        return 0;
      case 2u:
        if (v10 != 18) {
          goto LABEL_54;
        }
        unint64_t v17 = (google::protobuf::internal *)((char *)TagFallback - 1);
        while (1)
        {
          uint64_t v18 = (google::protobuf::internal *)((char *)v17 + 1);
          uint64_t v43 = (google::protobuf::internal *)((char *)v17 + 1);
          int v19 = *(int **)(a1 + 32);
          if (!v19) {
            break;
          }
          uint64_t v20 = *(int *)(a1 + 24);
          int v21 = *v19;
          if ((int)v20 >= *v19)
          {
            if (v21 == *(_DWORD *)(a1 + 28))
            {
LABEL_23:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7, v21 + 1);
              int v19 = *(int **)(a1 + 32);
              int v21 = *v19;
            }
            int *v19 = v21 + 1;
            uint64_t v22 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValue>(*(void *)(a1 + 16));
            uint64_t v23 = *(void *)(a1 + 32);
            uint64_t v24 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v24 + 1;
            *(void *)(v23 + 8 * v24 + 8) = v22;
            uint64_t v18 = v43;
            goto LABEL_25;
          }
          *(_DWORD *)(a1 + 24) = v20 + 1;
          uint64_t v22 = *(void *)&v19[2 * v20 + 2];
LABEL_25:
          unint64_t v17 = sub_100136C50(a3, v22, v18);
          uint64_t v43 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *(unsigned char *)v17 != 18) {
            goto LABEL_62;
          }
        }
        int v21 = *(_DWORD *)(a1 + 28);
        goto LABEL_23;
      case 3u:
        if (v10 != 26) {
          goto LABEL_54;
        }
        uint64_t v25 = (google::protobuf::internal *)((char *)TagFallback - 1);
        while (1)
        {
          int v26 = (google::protobuf::internal *)((char *)v25 + 1);
          uint64_t v43 = (google::protobuf::internal *)((char *)v25 + 1);
          uint64_t v27 = *(int **)(a1 + 56);
          if (!v27) {
            break;
          }
          uint64_t v28 = *(int *)(a1 + 48);
          int v29 = *v27;
          if ((int)v28 >= *v27)
          {
            if (v29 == *(_DWORD *)(a1 + 52))
            {
LABEL_36:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6, v29 + 1);
              uint64_t v27 = *(int **)(a1 + 56);
              int v29 = *v27;
            }
            int *v27 = v29 + 1;
            uint64_t v30 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Option>(*(void *)(a1 + 40));
            uint64_t v31 = *(void *)(a1 + 56);
            uint64_t v32 = *(int *)(a1 + 48);
            *(_DWORD *)(a1 + 48) = v32 + 1;
            *(void *)(v31 + 8 * v32 + 8) = v30;
            int v26 = v43;
            goto LABEL_38;
          }
          *(_DWORD *)(a1 + 48) = v28 + 1;
          uint64_t v30 = *(void *)&v27[2 * v28 + 2];
LABEL_38:
          uint64_t v25 = sub_10010AE00(a3, v30, v26);
          uint64_t v43 = v25;
          if (!v25) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *(unsigned char *)v25 != 26) {
            goto LABEL_62;
          }
        }
        int v29 = *(_DWORD *)(a1 + 52);
        goto LABEL_36;
      case 4u:
        if (v10 != 34) {
          goto LABEL_54;
        }
        uint64_t v33 = *(void *)(a1 + 72);
        if (!v33)
        {
          unsigned int v34 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
          if (*v5) {
            unsigned int v34 = (void *)*v34;
          }
          uint64_t v33 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceContext>(v34);
          *(void *)(a1 + 7sub_10010D434((void *)this + 2) = v33;
          TagFallbacint k = v43;
        }
        unsigned int v35 = sub_10010AED0(a3, v33, TagFallback);
        goto LABEL_61;
      case 5u:
        if (v10 != 40) {
          goto LABEL_54;
        }
        unint64_t v36 = (google::protobuf::internal *)((char *)TagFallback + 1);
        LODWORD(v37) = *(unsigned __int8 *)TagFallback;
        if ((*(char *)TagFallback & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v38 = *(char *)v36;
        unint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v43 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v37);
          if (!v43) {
            return 0;
          }
        }
        else
        {
          unint64_t v36 = (google::protobuf::internal *)((char *)TagFallback + 2);
LABEL_52:
          uint64_t v43 = v36;
        }
        *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v37;
        goto LABEL_62;
      default:
LABEL_54:
        if (v10) {
          BOOL v39 = (v10 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (v39)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v10 - 1;
          return TagFallback;
        }
        if (*v5)
        {
          uint64_t v40 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v40 = sub_10003562C(v5);
          TagFallbacint k = v43;
        }
        unsigned int v35 = google::protobuf::internal::UnknownFieldParse(v10, (google::protobuf::UnknownFieldSet *)v40, TagFallback);
LABEL_61:
        uint64_t v43 = v35;
        if (v35)
        {
LABEL_62:
          int v16 = 2;
LABEL_63:
          if (v16 != 2) {
            return 0;
          }
          continue;
        }
        return 0;
    }
  }
}