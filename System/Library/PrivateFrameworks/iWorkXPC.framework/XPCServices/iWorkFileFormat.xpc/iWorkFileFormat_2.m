google::protobuf::internal *sub_100136C50(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  const char *v5;
  google::protobuf::internal *v6;
  google::protobuf::internal *result;
  uint64_t v8;
  int v9;
  int v10;
  BOOL v11;
  int v12;

  v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    v6 = result;
  }
  else
  {
    v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  v8 = *(void *)(a1 + 8);
  v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  result = google::protobuf::EnumValue::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Enum::_InternalSerialize(google::protobuf::Enum *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v7 = *((void *)this + 8) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    v8 = *(const char **)(v7 + 8);
    if (!v8) {
      goto LABEL_7;
    }
    unint64_t v7 = *(void *)v7;
    goto LABEL_6;
  }
  v8 = (const char *)*(unsigned __int8 *)(v7 + 23);
  if (*(unsigned char *)(v7 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v7, v8, 1, (google::protobuf::internal *)"google.protobuf.Enum.name");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 1, (const void **)(*((void *)this + 8) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_7:
  int v9 = *((_DWORD *)this + 6);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      }
      v11 = *(google::protobuf::EnumValue **)(*((void *)this + 4) + 8 * i + 8);
      *(unsigned char *)a2 = 18;
      unsigned int v12 = *((_DWORD *)v11 + 13);
      if (v12 > 0x7F)
      {
        *((unsigned char *)a2 + 1) = v12 | 0x80;
        unsigned int v14 = v12 >> 7;
        if (v12 >> 14)
        {
          v13 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v13 - 1) = v14 | 0x80;
            unsigned int v15 = v14 >> 7;
            v13 = (google::protobuf::UnknownFieldSet *)((char *)v13 + 1);
            unsigned int v16 = v14 >> 14;
            v14 >>= 7;
          }
          while (v16);
          *((unsigned char *)v13 - 1) = v15;
        }
        else
        {
          *((unsigned char *)a2 + 2) = v14;
          v13 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + 1) = v12;
        v13 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::EnumValue::_InternalSerialize(v11, v13, a3, a4);
    }
  }
  int v17 = *((_DWORD *)this + 12);
  if (v17)
  {
    for (int j = 0; j != v17; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      }
      v19 = *(google::protobuf::Option **)(*((void *)this + 7) + 8 * j + 8);
      *(unsigned char *)a2 = 26;
      unsigned int v20 = *((_DWORD *)v19 + 8);
      if (v20 > 0x7F)
      {
        *((unsigned char *)a2 + 1) = v20 | 0x80;
        unsigned int v22 = v20 >> 7;
        if (v20 >> 14)
        {
          v21 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v21 - 1) = v22 | 0x80;
            unsigned int v23 = v22 >> 7;
            v21 = (google::protobuf::UnknownFieldSet *)((char *)v21 + 1);
            unsigned int v24 = v22 >> 14;
            v22 >>= 7;
          }
          while (v24);
          *((unsigned char *)v21 - 1) = v23;
        }
        else
        {
          *((unsigned char *)a2 + 2) = v22;
          v21 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + 1) = v20;
        v21 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::Option::_InternalSerialize(v19, v21, a3, a4);
    }
  }
  if (this != (google::protobuf::Enum *)&google::protobuf::_Enum_default_instance_)
  {
    v25 = (google::protobuf::SourceContext *)*((void *)this + 9);
    if (v25)
    {
      if (*(void *)a3 <= (unint64_t)a2)
      {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
        v25 = (google::protobuf::SourceContext *)*((void *)this + 9);
      }
      *(unsigned char *)a2 = 34;
      unsigned int v26 = *((_DWORD *)v25 + 6);
      if (v26 > 0x7F)
      {
        *((unsigned char *)a2 + 1) = v26 | 0x80;
        unsigned int v28 = v26 >> 7;
        if (v26 >> 14)
        {
          v27 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v27 - 1) = v28 | 0x80;
            unsigned int v29 = v28 >> 7;
            v27 = (google::protobuf::UnknownFieldSet *)((char *)v27 + 1);
            unsigned int v30 = v28 >> 14;
            v28 >>= 7;
          }
          while (v30);
          *((unsigned char *)v27 - 1) = v29;
        }
        else
        {
          *((unsigned char *)a2 + 2) = v28;
          v27 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + 1) = v26;
        v27 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::SourceContext::_InternalSerialize(v25, v27, a3, a4);
    }
  }
  unsigned int v31 = *((_DWORD *)this + 20);
  if (v31)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      unsigned int v31 = *((_DWORD *)this + 20);
    }
    *(unsigned char *)a2 = 40;
    if (v31 > 0x7F)
    {
      *((unsigned char *)a2 + 1) = v31 | 0x80;
      unint64_t v32 = (unint64_t)(int)v31 >> 7;
      if (v31 >> 14)
      {
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        do
        {
          *((unsigned char *)a2 - 1) = v32 | 0x80;
          unint64_t v33 = v32 >> 7;
          a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
          unint64_t v34 = v32 >> 14;
          v32 >>= 7;
        }
        while (v34);
        *((unsigned char *)a2 - 1) = v33;
      }
      else
      {
        *((unsigned char *)a2 + 2) = v32;
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
      }
    }
    else
    {
      *((unsigned char *)a2 + 1) = v31;
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  uint64_t v35 = *((void *)this + 1);
  if ((v35 & 1) == 0) {
    return a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v35 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::Enum::ByteSizeLong(google::protobuf::Enum *this)
{
  uint64_t v2 = *((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    v4 = (google::protobuf::EnumValue **)(v3 + 8);
  }
  else {
    v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      v6 = *v4++;
      unint64_t v7 = google::protobuf::EnumValue::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 12);
  int v9 = (const google::protobuf::UnknownFieldSet *)(v2 + v8);
  uint64_t v10 = *((void *)this + 7);
  if (v10) {
    v11 = (google::protobuf::Option **)(v10 + 8);
  }
  else {
    v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      v13 = *v11++;
      unsigned int v14 = google::protobuf::Option::ByteSizeLong(v13);
      int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v9
                                                     + (void)v14
                                                     + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6));
      v12 -= 8;
    }
    while (v12);
  }
  unint64_t v15 = *((void *)this + 8) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  if (*(char *)(v15 + 23) < 0)
  {
    if (!*(void *)(v15 + 8)) {
      goto LABEL_20;
    }
  }
  else if (!*(unsigned char *)(v15 + 23))
  {
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v9 + v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_20:
  if (this != (google::protobuf::Enum *)&google::protobuf::_Enum_default_instance_)
  {
    v18 = (google::protobuf::SourceContext *)*((void *)this + 9);
    if (v18)
    {
      v19 = google::protobuf::SourceContext::ByteSizeLong(v18);
      int v9 = (const google::protobuf::UnknownFieldSet *)&v19[((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6)
                                                         + 1
                                                         + (void)v9];
    }
  }
  int v20 = *((_DWORD *)this + 20);
  uint64_t v21 = 11;
  uint64_t v22 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v20 >= 0) {
    uint64_t v21 = v22;
  }
  unsigned int v23 = (const google::protobuf::UnknownFieldSet *)((char *)v9 + v21);
  if (v20) {
    unsigned int v24 = v23;
  }
  else {
    unsigned int v24 = v9;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Enum *)((char *)this + 8), v24, (_DWORD *)this + 21);
  }
  else
  {
    *((_DWORD *)this + 21) = v24;
    return (char *)v24;
  }
}

void google::protobuf::Enum::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::Enum::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::Enum::MergeFrom(std::string *this, const google::protobuf::Enum *a2)
{
  uint64_t v3 = this;
  p_size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    unint64_t v7 = (google::protobuf::EnumValue **)(*((void *)a2 + 4) + 8);
    uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = sub_100138DA4((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v8, v7, v6, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v9 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v6;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v9;
    size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v9) {
      signed int *size = v9;
    }
  }
  unsigned int v11 = *((_DWORD *)a2 + 12);
  if (v11)
  {
    uint64_t v12 = (const google::protobuf::Option **)(*((void *)a2 + 7) + 8);
    v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1].__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 12));
    this = sub_10010D5F4((std::string *)((char *)v3 + 40), (std::string **)v13, v12, v11, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    signed int v14 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v11;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v14;
    unint64_t v15 = (signed int *)v3[2].__r_.__value_.__l.__size_;
    if (*v15 < v14) {
      *unint64_t v15 = v14;
    }
  }
  unint64_t v16 = *((void *)a2 + 8) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    if (!*(void *)(v16 + 8)) {
      goto LABEL_16;
    }
  }
  else if (!*(unsigned char *)(v16 + 23))
  {
    goto LABEL_16;
  }
  uint64_t v17 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    uint64_t v17 = *(google::protobuf::Arena **)v17;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[2].__r_.__value_.__r.__words[2], v16, v17);
LABEL_16:
  if (a2 != (const google::protobuf::Enum *)&google::protobuf::_Enum_default_instance_)
  {
    v18 = (const google::protobuf::SourceContext *)*((void *)a2 + 9);
    if (v18)
    {
      data = (std::string *)v3[3].__r_.__value_.__l.__data_;
      if (!data)
      {
        int v20 = (void *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
        if (*p_size) {
          int v20 = (void *)*v20;
        }
        data = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceContext>(v20);
        v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
        v18 = (const google::protobuf::SourceContext *)*((void *)a2 + 9);
      }
      if (v18) {
        uint64_t v21 = v18;
      }
      else {
        uint64_t v21 = (const google::protobuf::SourceContext *)&google::protobuf::_SourceContext_default_instance_;
      }
      this = google::protobuf::SourceContext::MergeFrom(data, v21);
    }
  }
  int v22 = *((_DWORD *)a2 + 20);
  if (v22) {
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v22;
  }
  return this;
}

void google::protobuf::Enum::CopyFrom(google::protobuf::Enum *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::Enum::Clear(this);
    google::protobuf::Enum::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::Enum::IsInitialized(google::protobuf::Enum *this)
{
  return 1;
}

uint64_t google::protobuf::Enum::GetMetadata(google::protobuf::Enum *this)
{
  return off_1001EB110[4];
}

uint64_t google::protobuf::EnumValue::EnumValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D2750;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 52) = 0;
  if (atomic_load_explicit(scc_info_EnumValue_google_2fprotobuf_2ftype_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EnumValue_google_2fprotobuf_2ftype_2eproto);
  }
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_1001375DC(_Unwind_Exception *a1)
{
  sub_10010D434(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValue::~EnumValue(google::protobuf::EnumValue *this)
{
  uint64_t v2 = *((void *)this + 5);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_10010D434((void *)this + 2);
}

{
  uint64_t vars8;

  google::protobuf::EnumValue::~EnumValue(this);
  operator delete();
}

uint64_t google::protobuf::EnumValue::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::EnumValue::Clear(google::protobuf::EnumValue *this)
{
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::Option **)(*((void *)this + 4) + 8);
    do
    {
      v4 = *v3++;
      google::protobuf::Option::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 6) = 0;
  }
  result = (google::protobuf::Arena **)google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 5);
  char v7 = *((unsigned char *)this + 8);
  unsigned int v6 = (char *)this + 8;
  *((_DWORD *)v6 + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = 0;
  if (v7)
  {
    return sub_100035820((unint64_t *)v6);
  }
  return result;
}

google::protobuf::internal *google::protobuf::EnumValue::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v5 = (unsigned int *)(a1 + 16);
  unsigned int v6 = (unint64_t *)(a1 + 8);
  char v7 = (uint64_t **)(a1 + 40);
  while (1)
  {
    if (sub_1000355B8(a3, &v35, *(_DWORD *)(a3 + 92))) {
      return v35;
    }
    TagFallback = (google::protobuf::internal *)((char *)v35 + 1);
    unsigned int v9 = *(unsigned __int8 *)v35;
    if ((*(char *)v35 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v10 = v9 + (*(unsigned __int8 *)TagFallback << 7);
    unsigned int v9 = v10 - 128;
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v35 + 2);
LABEL_6:
      uint64_t v35 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v35, (const char *)(v10 - 128));
    uint64_t v35 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
    unsigned int v9 = v31;
LABEL_7:
    unsigned int v11 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26)
      {
LABEL_13:
        if (v9) {
          BOOL v13 = (v9 & 7) == 4;
        }
        else {
          BOOL v13 = 1;
        }
        if (v13)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v9 - 1;
          return TagFallback;
        }
        if (*v6)
        {
          signed int v14 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          signed int v14 = sub_10003562C(v6);
          TagFallback = v35;
        }
        uint64_t v35 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v14, TagFallback);
        if (!v35) {
          return 0;
        }
        goto LABEL_39;
      }
      unint64_t v15 = (google::protobuf::internal *)((char *)TagFallback - 1);
      while (1)
      {
        unint64_t v16 = (google::protobuf::internal *)((char *)v15 + 1);
        uint64_t v35 = (google::protobuf::internal *)((char *)v15 + 1);
        uint64_t v17 = *(int **)(a1 + 32);
        if (!v17) {
          break;
        }
        uint64_t v18 = *(int *)(a1 + 24);
        int v19 = *v17;
        if ((int)v18 >= *v17)
        {
          if (v19 == *(_DWORD *)(a1 + 28))
          {
LABEL_28:
            google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5, v19 + 1);
            uint64_t v17 = *(int **)(a1 + 32);
            int v19 = *v17;
          }
          *uint64_t v17 = v19 + 1;
          uint64_t v20 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Option>(*(void *)(a1 + 16));
          uint64_t v21 = *(void *)(a1 + 32);
          uint64_t v22 = *(int *)(a1 + 24);
          *(_DWORD *)(a1 + 24) = v22 + 1;
          *(void *)(v21 + 8 * v22 + 8) = v20;
          unint64_t v16 = v35;
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 24) = v18 + 1;
        uint64_t v20 = *(void *)&v17[2 * v18 + 2];
LABEL_30:
        unint64_t v15 = sub_10010AE00(a3, v20, v16);
        uint64_t v35 = v15;
        if (!v15) {
          return 0;
        }
        if (*(void *)a3 <= (unint64_t)v15 || *(unsigned char *)v15 != 26) {
          goto LABEL_39;
        }
      }
      int v19 = *(_DWORD *)(a1 + 28);
      goto LABEL_28;
    }
    if (v11 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    unsigned int v24 = (google::protobuf::internal *)((char *)TagFallback + 1);
    LODWORD(v23) = *(unsigned __int8 *)TagFallback;
    if ((v23 & 0x80) != 0)
    {
      int v25 = *(char *)v24;
      unint64_t v23 = v23 + (v25 << 7) - 128;
      if (v25 < 0)
      {
        unint64_t v32 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(TagFallback, v23);
        uint64_t v35 = v32;
        *(_DWORD *)(a1 + 48) = v33;
        if (!v32) {
          return 0;
        }
        goto LABEL_39;
      }
      unsigned int v24 = (google::protobuf::internal *)((char *)TagFallback + 2);
    }
    uint64_t v35 = v24;
    *(_DWORD *)(a1 + 48) = v23;
LABEL_39:
    int v26 = 2;
LABEL_46:
    if (v26 != 2) {
      return 0;
    }
  }
  if (v11 != 1 || v9 != 10) {
    goto LABEL_13;
  }
  v27 = (google::protobuf::Arena *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
  if (*v6) {
    v27 = *(google::protobuf::Arena **)v27;
  }
  unsigned int v28 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v7, v27);
  uint64_t v35 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v28, (std::string::value_type *)v35, a3);
  sub_1000BB974(v36, (uint64_t *)v28, v29);
  BOOL v30 = google::protobuf::internal::VerifyUTF8(v36[0], (const char *)v36[1], (google::protobuf::internal *)"google.protobuf.EnumValue.name");
  if (v35) {
    int v26 = 2;
  }
  else {
    int v26 = 4;
  }
  if (v30) {
    goto LABEL_46;
  }
  return 0;
}

const google::protobuf::UnknownFieldSet *google::protobuf::EnumValue::_InternalSerialize(google::protobuf::EnumValue *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v7 = *((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    uint64_t v8 = *(const char **)(v7 + 8);
    if (!v8) {
      goto LABEL_7;
    }
    unint64_t v7 = *(void *)v7;
    goto LABEL_6;
  }
  uint64_t v8 = (const char *)*(unsigned __int8 *)(v7 + 23);
  if (*(unsigned char *)(v7 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v7, v8, 1, (google::protobuf::internal *)"google.protobuf.EnumValue.name");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 1, (const void **)(*((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_7:
  unsigned int v9 = *((_DWORD *)this + 12);
  if (v9)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      unsigned int v9 = *((_DWORD *)this + 12);
    }
    *(unsigned char *)a2 = 16;
    if (v9 > 0x7F)
    {
      *((unsigned char *)a2 + 1) = v9 | 0x80;
      unint64_t v10 = (unint64_t)(int)v9 >> 7;
      if (v9 >> 14)
      {
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        do
        {
          *((unsigned char *)a2 - 1) = v10 | 0x80;
          unint64_t v11 = v10 >> 7;
          a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
          unint64_t v12 = v10 >> 14;
          v10 >>= 7;
        }
        while (v12);
        *((unsigned char *)a2 - 1) = v11;
      }
      else
      {
        *((unsigned char *)a2 + 2) = v10;
        a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
      }
    }
    else
    {
      *((unsigned char *)a2 + 1) = v9;
      a2 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
    }
  }
  int v13 = *((_DWORD *)this + 6);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      }
      unint64_t v15 = *(google::protobuf::Option **)(*((void *)this + 4) + 8 * i + 8);
      *(unsigned char *)a2 = 26;
      unsigned int v16 = *((_DWORD *)v15 + 8);
      if (v16 > 0x7F)
      {
        *((unsigned char *)a2 + 1) = v16 | 0x80;
        unsigned int v18 = v16 >> 7;
        if (v16 >> 14)
        {
          uint64_t v17 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
          do
          {
            *((unsigned char *)v17 - 1) = v18 | 0x80;
            unsigned int v19 = v18 >> 7;
            uint64_t v17 = (google::protobuf::UnknownFieldSet *)((char *)v17 + 1);
            unsigned int v20 = v18 >> 14;
            v18 >>= 7;
          }
          while (v20);
          *((unsigned char *)v17 - 1) = v19;
        }
        else
        {
          *((unsigned char *)a2 + 2) = v18;
          uint64_t v17 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 3);
        }
      }
      else
      {
        *((unsigned char *)a2 + 1) = v16;
        uint64_t v17 = (google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
      }
      a2 = google::protobuf::Option::_InternalSerialize(v15, v17, a3, a4);
    }
  }
  uint64_t v21 = *((void *)this + 1);
  if ((v21 & 1) == 0) {
    return a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v21 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::EnumValue::ByteSizeLong(google::protobuf::EnumValue *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    v4 = (google::protobuf::Option **)(v3 + 8);
  }
  else {
    v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      unsigned int v6 = *v4++;
      unint64_t v7 = google::protobuf::Option::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  unint64_t v8 = *((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_14;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_14;
  }
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_14:
  int v11 = *((_DWORD *)this + 12);
  if (v11)
  {
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v12);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::EnumValue *)((char *)this + 8), v2, (_DWORD *)this + 13);
  }
  else
  {
    *((_DWORD *)this + 13) = v2;
    return (char *)v2;
  }
}

void google::protobuf::EnumValue::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::EnumValue::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::EnumValue::MergeFrom(std::string *this, const google::protobuf::EnumValue *a2)
{
  uint64_t v3 = this;
  p_size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    unint64_t v7 = (const google::protobuf::Option **)(*((void *)a2 + 4) + 8);
    unint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], *((_DWORD *)a2 + 6));
    this = sub_10010D5F4((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v8, v7, v6, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v9 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v6;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v9;
    size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v9) {
      signed int *size = v9;
    }
  }
  unint64_t v11 = *((void *)a2 + 5) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v11 + 23) < 0)
  {
    if (!*(void *)(v11 + 8)) {
      goto LABEL_13;
    }
  }
  else if (!*(unsigned char *)(v11 + 23))
  {
    goto LABEL_13;
  }
  uint64_t v12 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    uint64_t v12 = *(google::protobuf::Arena **)v12;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1].__r_.__value_.__r.__words[2], v11, v12);
LABEL_13:
  int v13 = *((_DWORD *)a2 + 12);
  if (v13) {
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v13;
  }
  return this;
}

void google::protobuf::EnumValue::CopyFrom(google::protobuf::EnumValue *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::EnumValue::Clear(this);
    google::protobuf::EnumValue::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::EnumValue::IsInitialized(google::protobuf::EnumValue *this)
{
  return 1;
}

uint64_t google::protobuf::EnumValue::GetMetadata(google::protobuf::EnumValue *this)
{
  return off_1001EB110[6];
}

void google::protobuf::Option::~Option(google::protobuf::Option *this)
{
  uint64_t v2 = *((void *)this + 2);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if (this != (google::protobuf::Option *)&google::protobuf::_Option_default_instance_)
  {
    uint64_t v3 = (google::protobuf::Any *)*((void *)this + 3);
    if (v3)
    {
      google::protobuf::Any::~Any(v3);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  google::protobuf::Option::~Option(this);
  operator delete();
}

uint64_t google::protobuf::Option::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::Option::Clear(google::protobuf::Option *this)
{
  result = (google::protobuf::Arena **)google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 2);
  uint64_t v3 = *((void *)this + 1);
  v4 = (void *)(v3 & 0xFFFFFFFFFFFFFFFELL);
  if (v3)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  result = (google::protobuf::Arena **)*((void *)this + 3);
  if (result)
  {
    google::protobuf::Any::~Any((google::protobuf::Any *)result);
    operator delete();
  }
LABEL_5:
  *((void *)this + 3) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)this + 1);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Option::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unint64_t v23 = a2;
  uint64_t v5 = (unint64_t *)(a1 + 8);
  unsigned int v6 = (uint64_t **)(a1 + 16);
  while (1)
  {
    if (sub_1000355B8(a3, &v23, *(_DWORD *)(a3 + 92))) {
      return v23;
    }
    TagFallback = (google::protobuf::internal *)((char *)v23 + 1);
    unsigned int v8 = *(unsigned __int8 *)v23;
    if ((*(char *)v23 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v9 = v8 + (*(unsigned __int8 *)TagFallback << 7);
    unsigned int v8 = v9 - 128;
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v23 + 2);
LABEL_6:
      unint64_t v23 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v23, (const char *)(v9 - 128));
    unint64_t v23 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
    unsigned int v8 = v21;
LABEL_7:
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    uint64_t v17 = (google::protobuf::Arena *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
    if (*v5) {
      uint64_t v17 = *(google::protobuf::Arena **)v17;
    }
    unsigned int v18 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v6, v17);
    unint64_t v23 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v18, (std::string::value_type *)v23, a3);
    sub_1000BB974(v24, (uint64_t *)v18, v19);
    BOOL v20 = google::protobuf::internal::VerifyUTF8(v24[0], (const char *)v24[1], (google::protobuf::internal *)"google.protobuf.Option.name");
    if (v23) {
      int v16 = 2;
    }
    else {
      int v16 = 4;
    }
    if (!v20) {
      return 0;
    }
LABEL_33:
    if (v16 != 2) {
      return 0;
    }
  }
  if (v8 == 18)
  {
    uint64_t v14 = *(void *)(a1 + 24);
    if (!v14)
    {
      unint64_t v15 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
      if (*v5) {
        unint64_t v15 = (void *)*v15;
      }
      uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Any>(v15);
      *(void *)(a1 + 24) = v14;
      TagFallback = v23;
    }
    int v13 = sub_100138318(a3, v14, TagFallback);
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v5)
    {
      uint64_t v12 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else
    {
      uint64_t v12 = sub_10003562C(v5);
      TagFallback = v23;
    }
    int v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, TagFallback);
LABEL_25:
    unint64_t v23 = v13;
    if (!v13) {
      return 0;
    }
    int v16 = 2;
    goto LABEL_33;
  }
  *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v8 - 1;
  return TagFallback;
}

google::protobuf::internal *sub_100138318(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    unsigned int v6 = result;
  }
  else
  {
    unsigned int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  result = google::protobuf::Any::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Option::_InternalSerialize(google::protobuf::Option *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v7 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    uint64_t v8 = (const char *)*(unsigned __int8 *)(v7 + 23);
    if (!*(unsigned char *)(v7 + 23)) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v8 = *(const char **)(v7 + 8);
  if (v8)
  {
    unint64_t v7 = *(void *)v7;
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v7, v8, 1, (google::protobuf::internal *)"google.protobuf.Option.name");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 1, (const void **)(*((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_7:
  if (this != (google::protobuf::Option *)&google::protobuf::_Option_default_instance_)
  {
    int v9 = (google::protobuf::Any *)*((void *)this + 3);
    if (v9)
    {
      if (*(void *)a3 <= (unint64_t)a2)
      {
        a2 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
        int v9 = (google::protobuf::Any *)*((void *)this + 3);
      }
      *(unsigned char *)a2 = 18;
      unsigned int v10 = *((_DWORD *)v9 + 8);
      if (v10 > 0x7F)
      {
        *((unsigned char *)a2 + 1) = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          BOOL v11 = (unsigned __int8 *)a2 + 3;
          do
          {
            *(v11 - 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - 1) = v13;
        }
        else
        {
          *((unsigned char *)a2 + 2) = v12;
          BOOL v11 = (unsigned __int8 *)a2 + 3;
        }
      }
      else
      {
        *((unsigned char *)a2 + 1) = v10;
        BOOL v11 = (unsigned __int8 *)a2 + 2;
      }
      a2 = google::protobuf::Any::_InternalSerialize(v9, v11, a3, a4);
    }
  }
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::Option::ByteSizeLong(google::protobuf::Option *this)
{
  unint64_t v2 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  if (*(char *)(v2 + 23) < 0)
  {
    if (*(void *)(v2 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v5 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v2 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  if (this != (google::protobuf::Option *)&google::protobuf::_Option_default_instance_)
  {
    unsigned int v6 = (google::protobuf::Any *)*((void *)this + 3);
    if (v6)
    {
      unint64_t v7 = google::protobuf::Any::ByteSizeLong(v6);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)&v7[(void)v5
                                                        + 1
                                                        + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6)];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Option *)((char *)this + 8), v5, (_DWORD *)this + 8);
  }
  else
  {
    *((_DWORD *)this + 8) = v5;
    return (char *)v5;
  }
}

void google::protobuf::Option::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::Option::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::Option::MergeFrom(std::string *this, const google::protobuf::Option *a2)
{
  uint64_t v3 = this;
  p_size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unint64_t v6 = *((void *)a2 + 2) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      goto LABEL_10;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    goto LABEL_10;
  }
  unint64_t v7 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    unint64_t v7 = *(google::protobuf::Arena **)v7;
  }
  this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3->__r_.__value_.__r.__words[2], v6, v7);
LABEL_10:
  if (a2 != (const google::protobuf::Option *)&google::protobuf::_Option_default_instance_)
  {
    uint64_t v8 = (const google::protobuf::Any *)*((void *)a2 + 3);
    if (v8)
    {
      data = (std::string *)v3[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        unsigned int v10 = (void *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
        if (*p_size) {
          unsigned int v10 = (void *)*v10;
        }
        data = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Any>(v10);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
        uint64_t v8 = (const google::protobuf::Any *)*((void *)a2 + 3);
      }
      if (v8) {
        BOOL v11 = v8;
      }
      else {
        BOOL v11 = (const google::protobuf::Any *)&google::protobuf::_Any_default_instance_;
      }
      return google::protobuf::Any::MergeFrom(data, v11);
    }
  }
  return this;
}

void google::protobuf::Option::CopyFrom(google::protobuf::Option *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::Option::Clear(this);
    google::protobuf::Option::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::Option::IsInitialized(google::protobuf::Option *this)
{
  return 1;
}

uint64_t google::protobuf::Option::GetMetadata(google::protobuf::Option *this)
{
  return off_1001EB110[8];
}

void *sub_100138878(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100138E64(a1, 1);
  google::protobuf::Type::Type((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1001388DC()
{
}

void *sub_100138904(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100138F20(a1, 1);
  google::protobuf::Field::Field((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_100138968()
{
}

void *sub_100138990(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100138FDC(a1, 1);
  google::protobuf::Enum::Enum((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1001389F4()
{
}

void *sub_100138A1C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100139098(a1, 1);
  google::protobuf::EnumValue::EnumValue((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_100138A80()
{
}

void *sub_100138AA8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_100139154(a1);
}

void sub_100138B50()
{
}

uint64_t sub_100138B74()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Type>(0);
}

uint64_t sub_100138B7C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Type>(a2);
}

uint64_t sub_100138B84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 108);
}

uint64_t sub_100138B8C()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Field>(0);
}

uint64_t sub_100138B94(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Field>(a2);
}

uint64_t sub_100138B9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_100138BA4()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Enum>(0);
}

uint64_t sub_100138BAC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Enum>(a2);
}

uint64_t sub_100138BB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_100138BBC()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValue>(0);
}

uint64_t sub_100138BC4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValue>(a2);
}

uint64_t sub_100138BCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_100138BD4()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Option>(0);
}

uint64_t sub_100138BDC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Option>(a2);
}

void sub_100138BE4(void *a1)
{
  uint64_t v2 = (google::protobuf::Field **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::Field::~Field(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::Field **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_100138C64(std::string *result, std::string **a2, google::protobuf::Field **a3, unsigned int a4, unsigned int a5)
{
  int v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    BOOL v11 = a3;
    unsigned int v12 = a2;
    do
    {
      unsigned int v14 = *v11++;
      unsigned int v13 = v14;
      uint64_t v15 = *v12++;
      result = sub_100138D14(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    unsigned int v19 = &a3[a5];
    BOOL v20 = &a2[a5];
    do
    {
      unsigned int v21 = *v19++;
      uint64_t v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Field>(v18);
      result = sub_100138D14(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *sub_100138D14(google::protobuf::Field *a1, std::string *this)
{
  return google::protobuf::Field::MergeFrom(this, a1);
}

void sub_100138D24(void *a1)
{
  uint64_t v2 = (google::protobuf::EnumValue **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::EnumValue::~EnumValue(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (google::protobuf::EnumValue **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_100138DA4(std::string *result, std::string **a2, google::protobuf::EnumValue **a3, unsigned int a4, unsigned int a5)
{
  int v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    BOOL v11 = a3;
    unsigned int v12 = a2;
    do
    {
      unsigned int v14 = *v11++;
      unsigned int v13 = v14;
      uint64_t v15 = *v12++;
      result = sub_100138E54(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    unsigned int v19 = &a3[a5];
    BOOL v20 = &a2[a5];
    do
    {
      unsigned int v21 = *v19++;
      uint64_t v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValue>(v18);
      result = sub_100138E54(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *sub_100138E54(google::protobuf::EnumValue *a1, std::string *this)
{
  return google::protobuf::EnumValue::MergeFrom(this, a1);
}

void *sub_100138E64(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x70uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x70uLL, (void (*)(void *))google::protobuf::Type::~Type);
}

void *sub_100138F20(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x60uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x60uLL, (void (*)(void *))google::protobuf::Field::~Field);
}

void *sub_100138FDC(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x58uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x58uLL, (void (*)(void *))google::protobuf::Enum::~Enum);
}

void *sub_100139098(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))google::protobuf::EnumValue::~EnumValue);
}

void *sub_100139154(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_1001391D0(a1, 1);
  *uint64_t v2 = off_1001D2800;
  v2[1] = a1;
  *((_DWORD *)v2 + 8) = 0;
  if (atomic_load_explicit(scc_info_Option_google_2fprotobuf_2ftype_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Option_google_2fprotobuf_2ftype_2eproto);
  }
  v2[2] = &google::protobuf::internal::fixed_address_empty_string;
  v2[3] = 0;
  return v2;
}

void *sub_1001391D0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))google::protobuf::Option::~Option);
}

void sub_10013928C()
{
}

BOOL google::protobuf::TextFormat::Printer::PrintToString(google::protobuf::TextFormat::Printer *a1, const google::protobuf::Message *a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) < 0)
  {
    **(unsigned char **)a3 = 0;
    *(void *)(a3 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a3 = 0;
    *(unsigned char *)(a3 + 23) = 0;
  }
  google::protobuf::io::StringOutputStream::StringOutputStream(v6, a3);
  return google::protobuf::TextFormat::Printer::Print(a1, a2, (google::protobuf::io::ZeroCopyOutputStream *)v6);
}

void google::protobuf::Message::ShortDebugString(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  google::protobuf::TextFormat::Printer::Printer((google::protobuf::TextFormat::Printer *)v2);
}

void sub_100139404(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000D8948((uint64_t)va);
  if (*(char *)(v2 + 23) < 0) {
    operator delete(*(void **)v2);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::SetUseUtf8StringEscaping(google::protobuf::TextFormat::Printer *this)
{
}

void google::protobuf::TextFormat::ParseInfoTree::RecordLocation(uint64_t **a1, unint64_t a2, uint64_t a3)
{
  unint64_t v19 = a2;
  BOOL v20 = &v19;
  uint64_t v4 = sub_1001426F0(a1, &v19, (uint64_t)&unk_1001840CB, (uint64_t **)&v20);
  uint64_t v5 = (void *)v4[6];
  unint64_t v6 = v4[7];
  if ((unint64_t)v5 >= v6)
  {
    uint64_t v8 = v4[5];
    uint64_t v9 = ((uint64_t)v5 - v8) >> 3;
    if ((unint64_t)(v9 + 1) >> 61) {
      sub_100078F84();
    }
    uint64_t v10 = v6 - v8;
    uint64_t v11 = v10 >> 2;
    if (v10 >> 2 <= (unint64_t)(v9 + 1)) {
      uint64_t v11 = v9 + 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    if (v12) {
      unsigned int v13 = (char *)sub_1000B4170((uint64_t)(v4 + 7), v12);
    }
    else {
      unsigned int v13 = 0;
    }
    unsigned int v14 = &v13[8 * v9];
    uint64_t v15 = &v13[8 * v12];
    *(void *)unsigned int v14 = a3;
    unint64_t v7 = v14 + 8;
    int v17 = (char *)v4[5];
    BOOL v16 = (char *)v4[6];
    if (v16 != v17)
    {
      do
      {
        uint64_t v18 = *((void *)v16 - 1);
        v16 -= 8;
        *((void *)v14 - 1) = v18;
        v14 -= 8;
      }
      while (v16 != v17);
      BOOL v16 = (char *)v4[5];
    }
    v4[5] = (uint64_t)v14;
    v4[6] = (uint64_t)v7;
    v4[7] = (uint64_t)v15;
    if (v16) {
      operator delete(v16);
    }
  }
  else
  {
    *uint64_t v5 = a3;
    unint64_t v7 = v5 + 1;
  }
  v4[6] = (uint64_t)v7;
}

void google::protobuf::TextFormat::ParseInfoTree::CreateNested(uint64_t **this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = &v2;
  sub_1001426F0(this + 3, (unint64_t *)&v2, (uint64_t)&unk_1001840CB, (uint64_t **)&v3);
  operator new();
}

uint64_t google::protobuf::TextFormat::Finder::FindExtensionByNumber(google::protobuf::TextFormat::Finder *this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  return google::protobuf::DescriptorPool::FindExtensionByNumber(*(std::mutex ***)(*((void *)a2 + 2) + 16), a2, a3);
}

uint64_t sub_10013977C(uint64_t a1, const void **a2, uint64_t *a3)
{
  size_t v6 = strlen("type.googleapis.com/");
  size_t v7 = v6;
  size_t v8 = *((unsigned __int8 *)a2 + 23);
  if (*((char *)a2 + 23) < 0)
  {
    if ((const void *)v6 != a2[1])
    {
      size_t v10 = strlen("type.googleprod.com/");
      size_t v8 = (size_t)a2[1];
      goto LABEL_15;
    }
    if (v6 == -1) {
      goto LABEL_23;
    }
    uint64_t v9 = (const void **)*a2;
  }
  else
  {
    if (v6 != v8)
    {
      size_t v10 = strlen("type.googleprod.com/");
      goto LABEL_12;
    }
    uint64_t v9 = a2;
    if (v7 == -1) {
LABEL_23:
    }
      sub_1000D97B8();
  }
  if (!memcmp(v9, "type.googleapis.com/", v7)) {
    goto LABEL_20;
  }
  size_t v10 = strlen("type.googleprod.com/");
  if ((v8 & 0x80) != 0)
  {
    size_t v8 = (size_t)a2[1];
LABEL_15:
    if (v10 != v8) {
      return 0;
    }
    if (v8 == -1) {
      sub_1000D97B8();
    }
    a2 = (const void **)*a2;
    goto LABEL_18;
  }
LABEL_12:
  if (v10 != v8) {
    return 0;
  }
LABEL_18:
  if (memcmp(a2, "type.googleprod.com/", v8)) {
    return 0;
  }
LABEL_20:
  uint64_t v12 = *(void *)(*(void *)((*(uint64_t (**)(uint64_t))(*(void *)a1 + 152))(a1) + 16) + 16);
  return google::protobuf::DescriptorPool::FindMessageTypeByName(v12, a3, v13);
}

uint64_t google::protobuf::TextFormat::Finder::FindExtensionFactory(google::protobuf::TextFormat::Finder *this, const google::protobuf::FieldDescriptor *a2)
{
  return 0;
}

double google::protobuf::TextFormat::Parser::Parser(google::protobuf::TextFormat::Parser *this)
{
  double result = 0.0;
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 0x7FFFFFFF;
  return result;
}

uint64_t google::protobuf::TextFormat::Parser::Parse(uint64_t a1, uint64_t a2, google::protobuf::Message *a3)
{
  (*(void (**)(google::protobuf::Message *))(*(void *)a3 + 40))(a3);
  BOOL v6 = *(unsigned char *)(a1 + 31) == 0;
  uint64_t v7 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a3 + 152))(a3);
  sub_10013DA60((uint64_t)v11, v7, a2, *(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), v6, *(unsigned char *)(a1 + 25), *(unsigned char *)(a1 + 26), *(_DWORD *)(a1 + 27), BYTE1(*(_DWORD *)(a1 + 27)), BYTE2(*(_DWORD *)(a1 + 27)), HIBYTE(*(_DWORD *)(a1 + 27)), *(unsigned char *)(a1 + 24), *(_DWORD *)(a1 + 32));
  uint64_t v9 = google::protobuf::TextFormat::Parser::MergeUsingImpl(a1, v8, a3, (uint64_t)v11);
  google::protobuf::io::Tokenizer::~Tokenizer((google::protobuf::io::Tokenizer *)&v13);
  google::protobuf::io::ErrorCollector::~ErrorCollector((google::protobuf::io::ErrorCollector *)&v12);
  return v9;
}

void sub_100139A20(_Unwind_Exception *a1)
{
  google::protobuf::io::Tokenizer::~Tokenizer((google::protobuf::io::Tokenizer *)(v1 + 40));
  google::protobuf::io::ErrorCollector::~ErrorCollector((google::protobuf::io::ErrorCollector *)(v1 + 24));
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::TextFormat::Parser::MergeUsingImpl(uint64_t a1, uint64_t a2, google::protobuf::Message *a3, uint64_t a4)
{
  while (*(_DWORD *)(a4 + 40) != 1)
  {
    if ((sub_10013DD34(a4, a3) & 1) == 0) {
      return 0;
    }
  }
  if (*(unsigned char *)(a4 + 244)) {
    return 0;
  }
  if (!*(unsigned char *)(a1 + 24)
    && ((*(uint64_t (**)(google::protobuf::Message *))(*(void *)a3 + 48))(a3) & 1) == 0)
  {
    memset(v13, 0, sizeof(v13));
    google::protobuf::Message::FindInitializationErrors(a3, (uint64_t *)v13);
    sub_1000D8D7C(", ", v13, &v10);
    uint64_t v8 = std::string::insert(&v10, 0, "Message missing required fields: ");
    long long v9 = *(_OWORD *)&v8->__r_.__value_.__l.__data_;
    std::string::size_type v12 = v8->__r_.__value_.__r.__words[2];
    *(_OWORD *)__p = v9;
    v8->__r_.__value_.__l.__size_ = 0;
    v8->__r_.__value_.__r.__words[2] = 0;
    v8->__r_.__value_.__r.__words[0] = 0;
    sub_100139DE0((uint64_t *)a4, -1, 0, (const std::string::value_type *)__p);
    if (SHIBYTE(v12) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v10.__r_.__value_.__l.__data_);
    }
    __p[0] = v13;
    sub_1000D9860((void ***)__p);
    return 0;
  }
  return 1;
}

void sub_100139B78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, char *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,char a22)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  __p = &a22;
  sub_1000D9860((void ***)&__p);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::TextFormat::Parser::ParseFromString(char **a1, uint64_t a2, char *a3)
{
  sub_1000BB974(v11, (uint64_t *)a2, a3);
  uint64_t result = sub_100139C50(v11[0], v11[1], *a1);
  if (result)
  {
    int v7 = *(char *)(a2 + 23);
    if (v7 >= 0) {
      uint64_t v8 = (const void *)a2;
    }
    else {
      uint64_t v8 = *(const void **)a2;
    }
    if (v7 >= 0) {
      int v9 = *(unsigned __int8 *)(a2 + 23);
    }
    else {
      int v9 = *(_DWORD *)(a2 + 8);
    }
    google::protobuf::io::ArrayInputStream::ArrayInputStream((uint64_t)v10, v8, v9, -1);
    return google::protobuf::TextFormat::Parser::Parse((uint64_t)a1, (uint64_t)v10, (google::protobuf::Message *)a3);
  }
  return result;
}

BOOL sub_100139C50(int a1, uint64_t this, char *a3)
{
  if (this >= 0x80000000)
  {
    v16[0] = "Input size too large: ";
    v16[1] = 22;
    v14[0] = v15;
    v14[1] = google::protobuf::FastInt64ToBufferLeft(this, v15, a3) - v15;
    v13[0] = " bytes";
    v13[1] = 6;
    v12[0] = " > ";
    v12[1] = 3;
    v10[0] = v11;
    v10[1] = google::protobuf::FastInt32ToBufferLeft((google::protobuf *)0x7FFFFFFF, v11, v5) - v11;
    v9[0] = " bytes.";
    v9[1] = 7;
    google::protobuf::StrCat((uint64_t)v16, (uint64_t)v14, (uint64_t)v13, (uint64_t)v12, (uint64_t)v10, (uint64_t)v9, (uint64_t)__p);
    (*(void (**)(char *, uint64_t, void, void **))(*(void *)a3 + 16))(a3, 0xFFFFFFFFLL, 0, __p);
    if (v8 < 0) {
      operator delete(__p[0]);
    }
  }
  return this < 0x80000000;
}

void sub_100139DBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100139DE0(uint64_t *a1, int a2, int a3, const std::string::value_type *a4)
{
  *((unsigned char *)a1 + 244) = 1;
  uint64_t v8 = *a1;
  if (v8)
  {
    int v9 = *(void (**)(void))(*(void *)v8 + 16);
    v9();
  }
  else
  {
    if (a2 < 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/text_format.cc", 323);
      uint64_t v18 = google::protobuf::internal::LogMessage::operator<<(v20, "Error parsing text-format ");
      uint64_t v15 = google::protobuf::internal::LogMessage::operator<<(v18, *(const std::string::value_type **)(a1[27] + 8));
    }
    else
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/text_format.cc", 319);
      std::string v10 = google::protobuf::internal::LogMessage::operator<<(v20, "Error parsing text-format ");
      uint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v10, *(const std::string::value_type **)(a1[27] + 8));
      std::string::size_type v12 = google::protobuf::internal::LogMessage::operator<<(v11, ": ");
      uint64_t v13 = google::protobuf::internal::LogMessage::operator<<(v12, a2 + 1);
      unsigned int v14 = google::protobuf::internal::LogMessage::operator<<(v13, ":");
      uint64_t v15 = google::protobuf::internal::LogMessage::operator<<(v14, a3 + 1);
    }
    BOOL v16 = google::protobuf::internal::LogMessage::operator<<(v15, ": ");
    int v17 = google::protobuf::internal::LogMessage::operator<<(v16, a4);
    google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v17->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
}

void sub_100139F4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintBool(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, const char *, uint64_t))(*(void *)a3 + 40);
  if (a2) {
    return v3(a3, "true", 4);
  }
  else {
    return v3(a3, "false", 5);
  }
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt32(int a1, google::protobuf *this, char *a3)
{
  __src = v10;
  size_t v9 = google::protobuf::FastInt32ToBufferLeft(this, v10, a3) - v10;
  sub_1000BB9D8(__p, v10, v9);
  if ((v7 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    unint64_t v5 = v7;
  }
  else {
    unint64_t v5 = (unint64_t)__p[1];
  }
  (*(void (**)(char *, void **, unint64_t))(*(void *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10013A0A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt32(int a1, google::protobuf *this, char *a3)
{
  __src = v10;
  size_t v9 = google::protobuf::FastUInt32ToBufferLeft(this, v10, a3) - v10;
  sub_1000BB9D8(__p, v10, v9);
  if ((v7 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    unint64_t v5 = v7;
  }
  else {
    unint64_t v5 = (unint64_t)__p[1];
  }
  (*(void (**)(char *, void **, unint64_t))(*(void *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10013A1A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintInt64(int a1, google::protobuf *this, char *a3)
{
  __src = v10;
  size_t v9 = google::protobuf::FastInt64ToBufferLeft((uint64_t)this, v10, a3) - v10;
  sub_1000BB9D8(__p, v10, v9);
  if ((v7 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    unint64_t v5 = v7;
  }
  else {
    unint64_t v5 = (unint64_t)__p[1];
  }
  (*(void (**)(char *, void **, unint64_t))(*(void *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10013A2A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintUInt64(int a1, google::protobuf *this, char *a3)
{
  __src = v10;
  size_t v9 = google::protobuf::FastUInt64ToBufferLeft(this, v10, a3) - v10;
  sub_1000BB9D8(__p, v10, v9);
  if ((v7 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    unint64_t v5 = v7;
  }
  else {
    unint64_t v5 = (unint64_t)__p[1];
  }
  (*(void (**)(char *, void **, unint64_t))(*(void *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10013A3AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintFloat(float a1, uint64_t a2, char *a3)
{
  google::protobuf::SimpleFtoa(a1, a3, __p);
  if ((v7 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    unint64_t v5 = v7;
  }
  else {
    unint64_t v5 = (unint64_t)__p[1];
  }
  (*(void (**)(char *, void **, unint64_t))(*(void *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10013A470(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::PrintDouble(double a1, uint64_t a2, char *a3)
{
  google::protobuf::SimpleDtoa(a1, a3, __p);
  if ((v7 & 0x80u) == 0) {
    uint64_t v4 = __p;
  }
  else {
    uint64_t v4 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    unint64_t v5 = v7;
  }
  else {
    unint64_t v5 = (unint64_t)__p[1];
  }
  (*(void (**)(char *, void **, unint64_t))(*(void *)a3 + 40))(a3, v4, v5);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10013A52C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintString(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)a3 + 40))(a3, "\"", 1);
  google::protobuf::CEscape(a2, v5, &__p);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  (*(void (**)(uint64_t, std::string *, std::string::size_type))(*(void *)a3 + 40))(a3, p_p, size);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t))(*(void *)a3 + 40))(a3, "\"", 1);
}

void sub_10013A644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintEnum(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  int v4 = *((char *)a3 + 23);
  if (v4 >= 0) {
    unint64_t v5 = a3;
  }
  else {
    unint64_t v5 = (uint64_t *)*a3;
  }
  if (v4 >= 0) {
    uint64_t v6 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    uint64_t v6 = a3[1];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a4 + 40))(a4, v5, v6);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName(int a1, int a2, int a3, std::once_flag::_State_type **this, uint64_t a5)
{
  if (*((unsigned char *)this + 67))
  {
    (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)a5 + 40))(a5, "[", 1);
    uint64_t v7 = google::protobuf::FieldDescriptor::PrintableNameForExtension((google::protobuf::FieldDescriptor *)this);
    int v8 = *(char *)(v7 + 23);
    if (v8 >= 0) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = *(void *)v7;
    }
    if (v8 >= 0) {
      uint64_t v10 = *(unsigned __int8 *)(v7 + 23);
    }
    else {
      uint64_t v10 = *(void *)(v7 + 8);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)a5 + 40))(a5, v9, v10);
    uint64_t v11 = *(uint64_t (**)(uint64_t, const char *, uint64_t))(*(void *)a5 + 40);
    return v11(a5, "]", 1);
  }
  else
  {
    uint64_t v13 = this[6];
    if (v13)
    {
      uint64_t v18 = (google::protobuf::FieldDescriptor *)this;
      char v19 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
      {
        v21[0] = &v19;
        v21[1] = &v18;
        BOOL v20 = v21;
        std::__call_once(v13, &v20, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    if (*((_DWORD *)this + 14) == 10) {
      unsigned int v14 = *(std::once_flag::_State_type **)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)this);
    }
    else {
      unsigned int v14 = *this;
    }
    int v15 = *((char *)v14 + 23);
    if (v15 >= 0) {
      std::once_flag::_State_type v16 = (std::once_flag::_State_type)v14;
    }
    else {
      std::once_flag::_State_type v16 = *v14;
    }
    if (v15 >= 0) {
      std::once_flag::_State_type v17 = *((unsigned __int8 *)v14 + 23);
    }
    else {
      std::once_flag::_State_type v17 = v14[1];
    }
    return (*(uint64_t (**)(uint64_t, std::once_flag::_State_type, std::once_flag::_State_type))(*(void *)a5 + 40))(a5, v16, v17);
  }
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintMessageStart(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  if (a5) {
    uint64_t v6 = " { ";
  }
  else {
    uint64_t v6 = " {\n";
  }
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t))(*(void *)a6 + 40))(a6, v6, 3);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintMessageEnd(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  if (a5) {
    uint64_t v6 = "} ";
  }
  else {
    uint64_t v6 = "}\n";
  }
  return (*(uint64_t (**)(uint64_t, const char *, uint64_t))(*(void *)a6 + 40))(a6, v6, 2);
}

void google::protobuf::TextFormat::FastFieldValuePrinter::~FastFieldValuePrinter(google::protobuf::TextFormat::FastFieldValuePrinter *this)
{
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintBytes(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 72))();
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintFieldName(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 104))(a1, a2, a5, a6, a7);
}

uint64_t google::protobuf::TextFormat::FastFieldValuePrinter::PrintMessageContent()
{
  return 0;
}

void google::protobuf::TextFormat::Printer::Printer(google::protobuf::TextFormat::Printer *this)
{
  *((void *)this + 5) = 0;
  *((void *)this + 4) = (char *)this + 40;
  *((void *)this + 6) = 0;
  *(void *)this = 0;
  *((_WORD *)this + 4) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 7) = (char *)this + 64;
  *((void *)this + 9) = 0;
  *((void *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = 0;
  google::protobuf::TextFormat::Printer::SetUseUtf8StringEscaping(this);
}

void sub_10013A9B0(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;
  sub_1000D8A04(v4, *(void **)(v1 + 64));
  sub_1000D8A88(v2, *(void **)(v1 + 40));
  uint64_t v6 = *(void *)(v1 + 24);
  *(void *)(v1 + 24) = 0;
  if (v6) {
    sub_10016B330(v6);
  }
  _Unwind_Resume(a1);
}

BOOL google::protobuf::TextFormat::Printer::Print(google::protobuf::TextFormat::Printer *this, const google::protobuf::Message *a2, google::protobuf::io::ZeroCopyOutputStream *a3)
{
  int v3 = *(_DWORD *)this;
  v6[0] = off_1001D2AE8;
  v6[1] = a3;
  void v6[2] = 0;
  int v7 = 0;
  __int16 v8 = 1;
  int v9 = v3;
  int v10 = v3;
  google::protobuf::TextFormat::Printer::Print((uint64_t)this, a2, (char *)v6);
  BOOL v4 = HIBYTE(v8) == 0;
  sub_100142670((uint64_t)v6);
  return v4;
}

void sub_10013AA64(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100142670((uint64_t)va);
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::Print(uint64_t a1, const google::protobuf::Message *a2, char *a3)
{
  (*(void (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  if (v6)
  {
    int v7 = v6;
    unint64_t v8 = (*(uint64_t (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    unint64_t v9 = v8;
    int v10 = *(void **)(a1 + 64);
    if (v10)
    {
      uint64_t v11 = a1 + 64;
      do
      {
        unint64_t v12 = v10[4];
        BOOL v13 = v12 >= v8;
        if (v12 >= v8) {
          unsigned int v14 = v10;
        }
        else {
          unsigned int v14 = v10 + 1;
        }
        if (v13) {
          uint64_t v11 = (uint64_t)v10;
        }
        int v10 = (void *)*v14;
      }
      while (*v14);
      if (v11 != a1 + 64 && *(void *)(v11 + 32) <= v8)
      {
        v36 = *(void (**)(void))(**(void **)(v11 + 40) + 16);
        v36();
        return;
      }
    }
    int v15 = *(void **)(v8 + 8);
    size_t v16 = strlen("google.protobuf.Any");
    if (*((char *)v15 + 23) < 0)
    {
      if (v16 != v15[1]) {
        goto LABEL_33;
      }
      if (v16 == -1) {
        goto LABEL_61;
      }
      int v15 = (void *)*v15;
    }
    else
    {
      if (v16 != *((unsigned __int8 *)v15 + 23)) {
        goto LABEL_33;
      }
      if (v16 == -1) {
LABEL_61:
      }
        sub_1000D97B8();
    }
    if (!memcmp(v15, "google.protobuf.Any", v16)
      && *(unsigned char *)(a1 + 9)
      && (google::protobuf::TextFormat::Printer::PrintAny(a1, a2, (uint64_t)a3) & 1) != 0)
    {
      return;
    }
LABEL_33:
    v37 = 0;
    v38 = 0;
    v39 = 0;
    if (*(unsigned char *)(*(void *)(v9 + 32) + 75))
    {
      uint64_t v20 = *(void *)(v9 + 40);
      unsigned int v21 = (char *)operator new(8uLL);
      *(void *)unsigned int v21 = v20;
      v38 = v21 + 8;
      v39 = v21 + 8;
      v37 = v21;
      uint64_t v22 = *(void *)(v9 + 40);
      unint64_t v23 = sub_1000B4170((uint64_t)&v39, 2uLL);
      v23[1] = v22 + 152;
      unsigned int v24 = (char *)(v23 + 1);
      int v26 = (char *)&v23[v25];
      v27 = v23 + 2;
      unsigned int v28 = (char *)v37;
      unsigned int v29 = v38;
      if (v38 != v37)
      {
        do
        {
          uint64_t v30 = *((void *)v29 - 1);
          v29 -= 8;
          *((void *)v24 - 1) = v30;
          v24 -= 8;
        }
        while (v29 != v28);
        unsigned int v28 = (char *)v37;
      }
      v37 = v24;
      v38 = (char *)v27;
      v39 = v26;
      if (v28) {
        operator delete(v28);
      }
      v38 = (char *)v27;
    }
    else
    {
      google::protobuf::Reflection::ListFieldsOmitStripped(v7, a2, &v37);
      (*(void (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
    }
    unsigned int v31 = (google::protobuf::FieldDescriptor **)v37;
    if (*(unsigned char *)(a1 + 8))
    {
      unint64_t v32 = 126 - 2 * __clz((v38 - (unsigned char *)v37) >> 3);
      if (v38 == v37) {
        uint64_t v33 = 0;
      }
      else {
        uint64_t v33 = v32;
      }
      sub_1001429C4((uint64_t)v37, (uint64_t *)v38, v33, 1);
      unsigned int v31 = (google::protobuf::FieldDescriptor **)v37;
    }
    unint64_t v34 = v38;
    while (v31 != (google::protobuf::FieldDescriptor **)v34)
      google::protobuf::TextFormat::Printer::PrintField(a1, a2, v7, *v31++, (uint64_t)a3);
    if (!*(unsigned char *)(a1 + 7))
    {
      UnknownFields = (uint64_t *)google::protobuf::Reflection::GetUnknownFields(v7, a2);
      google::protobuf::TextFormat::Printer::PrintUnknownFields(a1, UnknownFields, a3, 10);
    }
    char v19 = v37;
    if (v37)
    {
      v38 = (char *)v37;
      goto LABEL_53;
    }
    return;
  }
  v43 = 0;
  v44 = 0;
  uint64_t v45 = 0;
  google::protobuf::MessageLite::SerializeAsString(a2, (uint64_t)&__p);
  if ((v42 & 0x80u) == 0) {
    p_p = &__p;
  }
  else {
    p_p = __p;
  }
  if ((v42 & 0x80u) == 0) {
    int v18 = v42;
  }
  else {
    int v18 = v41;
  }
  google::protobuf::io::ArrayInputStream::ArrayInputStream((uint64_t)&v37, p_p, v18, -1);
  google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream((google::protobuf::UnknownFieldSet *)&v43, (char *)&v37);
  if ((char)v42 < 0) {
    operator delete(__p);
  }
  google::protobuf::TextFormat::Printer::PrintUnknownFields(a1, (uint64_t *)&v43, a3, 10);
  char v19 = v43;
  if (v43 != v44)
  {
    google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)&v43);
    char v19 = v43;
  }
  if (v19)
  {
    v44 = v19;
LABEL_53:
    operator delete(v19);
  }
}

void sub_10013AE40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::Printer::PrintUnknownFields(uint64_t a1, uint64_t *a2, char *a3, int a4)
{
  uint64_t v4 = *a2;
  if ((int)((unint64_t)(a2[1] - *a2) >> 4) >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    unsigned int v44 = a4 - 1;
    do
    {
      uint64_t v11 = (google::protobuf *)*(unsigned int *)(v4 + v9);
      __src = &v54;
      size_t v53 = google::protobuf::FastInt32ToBufferLeft(v11, &v54, a3) - (unsigned char *)&v54;
      sub_1000BB9D8(&__dst, __src, v53);
      switch(*(_DWORD *)(v4 + v9 + 4))
      {
        case 0:
          if ((v51 & 0x80u) == 0) {
            p_dst = &__dst;
          }
          else {
            p_dst = __dst;
          }
          if ((v51 & 0x80u) == 0) {
            uint64_t v13 = v51;
          }
          else {
            uint64_t v13 = v50;
          }
          (*(void (**)(char *, void *, uint64_t))(*(void *)a3 + 40))(a3, p_dst, v13);
          (*(void (**)(char *, const char *, uint64_t))(*(void *)a3 + 40))(a3, ": ", 2);
          unsigned int v14 = *(google::protobuf **)(v4 + v9 + 8);
          __src = &v54;
          size_t v53 = google::protobuf::FastUInt64ToBufferLeft(v14, &v54, v15) - (unsigned char *)&v54;
          sub_1000BB9D8(&__p, __src, v53);
          if (v48 >= 0) {
            p_p = &__p;
          }
          else {
            p_p = __p;
          }
          if (v48 >= 0) {
            std::once_flag::_State_type v17 = (void *)HIBYTE(v48);
          }
          else {
            std::once_flag::_State_type v17 = v47;
          }
          goto LABEL_40;
        case 1:
          if ((v51 & 0x80u) == 0) {
            int v18 = &__dst;
          }
          else {
            int v18 = __dst;
          }
          if ((v51 & 0x80u) == 0) {
            uint64_t v19 = v51;
          }
          else {
            uint64_t v19 = v50;
          }
          (*(void (**)(char *, void *, uint64_t))(*(void *)a3 + 40))(a3, v18, v19);
          (*(void (**)(char *, const char *, uint64_t))(*(void *)a3 + 40))(a3, ": 0x", 4);
          google::protobuf::strings::AlphaNum::AlphaNum(&__src, *(unsigned int *)(v4 + v9 + 8), 8);
          sub_1000BB9D8(&__p, __src, v53);
          if (v48 >= 0) {
            p_p = &__p;
          }
          else {
            p_p = __p;
          }
          if (v48 >= 0) {
            std::once_flag::_State_type v17 = (void *)HIBYTE(v48);
          }
          else {
            std::once_flag::_State_type v17 = v47;
          }
          goto LABEL_40;
        case 2:
          if ((v51 & 0x80u) == 0) {
            uint64_t v20 = &__dst;
          }
          else {
            uint64_t v20 = __dst;
          }
          if ((v51 & 0x80u) == 0) {
            uint64_t v21 = v51;
          }
          else {
            uint64_t v21 = v50;
          }
          (*(void (**)(char *, void *, uint64_t))(*(void *)a3 + 40))(a3, v20, v21);
          (*(void (**)(char *, const char *, uint64_t))(*(void *)a3 + 40))(a3, ": 0x", 4);
          google::protobuf::strings::AlphaNum::AlphaNum(&__src, *(void *)(v4 + v9 + 8), 16);
          sub_1000BB9D8(&__p, __src, v53);
          if (v48 >= 0) {
            p_p = &__p;
          }
          else {
            p_p = __p;
          }
          if (v48 >= 0) {
            std::once_flag::_State_type v17 = (void *)HIBYTE(v48);
          }
          else {
            std::once_flag::_State_type v17 = v47;
          }
LABEL_40:
          (*(void (**)(char *, void *, void *))(*(void *)a3 + 40))(a3, p_p, v17);
          if (SHIBYTE(v48) < 0) {
            operator delete(__p);
          }
          uint64_t v22 = (void (**)(char *, const char *, uint64_t))(*(void *)a3 + 40);
          if (*(unsigned char *)(a1 + 4)) {
            unint64_t v23 = " ";
          }
          else {
            unint64_t v23 = "\n";
          }
          uint64_t v24 = 1;
          goto LABEL_92;
        case 3:
          if ((v51 & 0x80u) == 0) {
            uint64_t v25 = &__dst;
          }
          else {
            uint64_t v25 = __dst;
          }
          if ((v51 & 0x80u) == 0) {
            uint64_t v26 = v51;
          }
          else {
            uint64_t v26 = v50;
          }
          (*(void (**)(char *, void *, uint64_t))(*(void *)a3 + 40))(a3, v25, v26);
          uint64_t v28 = *(void *)(v4 + v9 + 8);
          if (*(char *)(v28 + 23) < 0)
          {
            uint64_t v30 = *(void **)v28;
            uint64_t v29 = *(void *)(v28 + 8);
          }
          else
          {
            LODWORD(v29) = *(unsigned __int8 *)(v28 + 23);
            uint64_t v30 = (void *)v28;
          }
          __src = v30;
          size_t v53 = (size_t)v30 + (int)v29;
          uint64_t v54 = 0;
          uint64_t v56 = 0;
          __int16 v57 = 0;
          int v55 = v29;
          int v58 = v29;
          uint64_t v59 = 0x7FFFFFFF00000000;
          uint64_t v62 = 0;
          uint64_t v63 = 0;
          int v60 = a4;
          int v61 = a4;
          v47 = 0;
          uint64_t v48 = 0;
          std::string __p = 0;
          if (*(char *)(v28 + 23) < 0) {
            uint64_t v34 = *(void *)(v28 + 8);
          }
          else {
            uint64_t v34 = *(unsigned __int8 *)(v28 + 23);
          }
          if (a4 >= 1
            && v34
            && google::protobuf::UnknownFieldSet::ParseFromCodedStream((google::protobuf::UnknownFieldSet *)&__p, (char **)&__src, v27))
          {
            v36 = *(void (**)(char *, const char *, uint64_t))(*(void *)a3 + 40);
            if (*(unsigned char *)(a1 + 4))
            {
              v36(a3, " { ", 3);
            }
            else
            {
              v36(a3, " {\n", 3);
              (*(void (**)(char *))(*(void *)a3 + 16))(a3);
            }
            google::protobuf::TextFormat::Printer::PrintUnknownFields(a1, &__p, a3, v44);
            uint64_t v43 = *(void *)a3;
            if (*(unsigned char *)(a1 + 4))
            {
              v40 = (void (**)(char *, const char *, uint64_t))(v43 + 40);
              int v41 = "} ";
            }
            else
            {
              (*(void (**)(char *))(v43 + 24))(a3);
              v40 = (void (**)(char *, const char *, uint64_t))(*(void *)a3 + 40);
              int v41 = "}\n";
            }
          }
          else
          {
            (*(void (**)(char *, const char *, uint64_t))(*(void *)a3 + 40))(a3, ": \"", 3);
            google::protobuf::CEscape((uint64_t *)v28, v37, &v45);
            if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              v38 = &v45;
            }
            else {
              v38 = (std::string *)v45.__r_.__value_.__r.__words[0];
            }
            if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type size = HIBYTE(v45.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type size = v45.__r_.__value_.__l.__size_;
            }
            (*(void (**)(char *, std::string *, std::string::size_type))(*(void *)a3 + 40))(a3, v38, size);
            if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v45.__r_.__value_.__l.__data_);
            }
            v40 = (void (**)(char *, const char *, uint64_t))(*(void *)a3 + 40);
            if (*(unsigned char *)(a1 + 4)) {
              int v41 = "\" ";
            }
            else {
              int v41 = "\"\n";
            }
          }
          (*v40)(a3, v41, 2);
          unsigned __int8 v42 = __p;
          if (__p != v47)
          {
            google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)&__p);
            unsigned __int8 v42 = __p;
          }
          if (v42)
          {
            v47 = v42;
            operator delete(v42);
          }
          google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)&__src);
          break;
        case 4:
          if ((v51 & 0x80u) == 0) {
            unsigned int v31 = &__dst;
          }
          else {
            unsigned int v31 = __dst;
          }
          if ((v51 & 0x80u) == 0) {
            uint64_t v32 = v51;
          }
          else {
            uint64_t v32 = v50;
          }
          (*(void (**)(char *, void *, uint64_t))(*(void *)a3 + 40))(a3, v31, v32);
          uint64_t v33 = *(void (**)(char *, const char *, uint64_t))(*(void *)a3 + 40);
          if (*(unsigned char *)(a1 + 4))
          {
            v33(a3, " { ", 3);
          }
          else
          {
            v33(a3, " {\n", 3);
            (*(void (**)(char *))(*(void *)a3 + 16))(a3);
          }
          google::protobuf::TextFormat::Printer::PrintUnknownFields(a1, *(void *)(v4 + v9 + 8), a3, v44);
          uint64_t v35 = *(void *)a3;
          if (*(unsigned char *)(a1 + 4))
          {
            uint64_t v22 = (void (**)(char *, const char *, uint64_t))(v35 + 40);
            unint64_t v23 = "} ";
          }
          else
          {
            (*(void (**)(char *))(v35 + 24))(a3);
            uint64_t v22 = (void (**)(char *, const char *, uint64_t))(*(void *)a3 + 40);
            unint64_t v23 = "}\n";
          }
          uint64_t v24 = 2;
LABEL_92:
          (*v22)(a3, v23, v24);
          break;
        default:
          break;
      }
      if ((char)v51 < 0) {
        operator delete(__dst);
      }
      ++v10;
      uint64_t v4 = *a2;
      v9 += 16;
    }
    while (v10 < (int)((unint64_t)(a2[1] - *a2) >> 4));
  }
}

void sub_10013B77C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,char a30)
{
  if (a2) {
    sub_1001265A0(exception_object);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Printer::PrintAny(uint64_t a1, const google::protobuf::Message *a2, uint64_t a3)
{
  uint64_t v43 = 0;
  unsigned int v44 = 0;
  if (!google::protobuf::internal::GetAnyFieldDescriptors((uint64_t)a2, (uint64_t *)&v44, (uint64_t *)&v43)) {
    return 0;
  }
  (*(void (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  int v7 = v6;
  google::protobuf::Reflection::GetString(v6, a2, v44, (uint64_t)v41);
  v39[0] = 0;
  v39[1] = 0;
  uint64_t v40 = 0;
  v37[0] = 0;
  v37[1] = 0;
  uint64_t v38 = 0;
  sub_1000BB974(v36, (uint64_t *)v41, v8);
  if (google::protobuf::internal::ParseAnyTypeUrl(v36[0], v36[1], (uint64_t)v39, (uint64_t)v37))
  {
    uint64_t v9 = *(void *)(a1 + 80);
    if (v9) {
      uint64_t v10 = (*(uint64_t (**)(uint64_t, const google::protobuf::Message *, void **, void **))(*(void *)v9 + 32))(v9, a2, v39, v37);
    }
    else {
      uint64_t v10 = sub_10013977C((uint64_t)a2, (const void **)v39, (uint64_t *)v37);
    }
    unint64_t v12 = (const google::protobuf::Descriptor *)v10;
    if (v10)
    {
      uint64_t v13 = (google::protobuf::DynamicMessageFactory *)google::protobuf::DynamicMessageFactory::DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)v45);
      uint64_t Prototype = google::protobuf::DynamicMessageFactory::GetPrototype(v13, v12);
      uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)Prototype + 24))(Prototype);
      google::protobuf::Reflection::GetString(v7, a2, v43, (uint64_t)__p);
      uint64_t v11 = google::protobuf::MessageLite::ParseFromString(v15, __p);
      if (v11)
      {
        (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)a3 + 40))(a3, "[", 1);
        if ((v42 & 0x80u) == 0) {
          size_t v16 = v41;
        }
        else {
          size_t v16 = (void **)v41[0];
        }
        if ((v42 & 0x80u) == 0) {
          unint64_t v17 = v42;
        }
        else {
          unint64_t v17 = (unint64_t)v41[1];
        }
        (*(void (**)(uint64_t, void **, unint64_t))(*(void *)a3 + 40))(a3, v16, v17);
        (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)a3 + 40))(a3, "]", 1);
        int v18 = *(void **)(a1 + 40);
        if (!v18) {
          goto LABEL_26;
        }
        uint64_t v19 = (void *)(a1 + 40);
        do
        {
          unint64_t v20 = v18[4];
          BOOL v21 = v20 >= (unint64_t)v43;
          if (v20 >= (unint64_t)v43) {
            uint64_t v22 = v18;
          }
          else {
            uint64_t v22 = v18 + 1;
          }
          if (v21) {
            uint64_t v19 = v18;
          }
          int v18 = (void *)*v22;
        }
        while (*v22);
        if (v19 != (void *)(a1 + 40) && v19[4] <= (unint64_t)v43) {
          unint64_t v23 = v19 + 5;
        }
        else {
LABEL_26:
        }
          unint64_t v23 = (void *)(a1 + 24);
        uint64_t v24 = *v23;
        (*(void (**)(void, const google::protobuf::Message *, uint64_t, void, void, uint64_t))(*(void *)*v23 + 112))(*v23, a2, 0xFFFFFFFFLL, 0, *(unsigned __int8 *)(a1 + 4), a3);
        (*(void (**)(uint64_t))(*(void *)a3 + 16))(a3);
        google::protobuf::TextFormat::Printer::Print(a1, v15, a3);
        (*(void (**)(uint64_t))(*(void *)a3 + 24))(a3);
        (*(void (**)(uint64_t, const google::protobuf::Message *, uint64_t, void, void, uint64_t))(*(void *)v24 + 128))(v24, a2, 0xFFFFFFFFLL, 0, *(unsigned __int8 *)(a1 + 4), a3);
      }
      else
      {
        google::protobuf::internal::LogMessage::LogMessage((uint64_t)v33, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/text_format.cc", 2001);
        uint64_t v29 = google::protobuf::internal::LogMessage::operator<<(v33, (const std::string::value_type *)v41);
        uint64_t v30 = google::protobuf::internal::LogMessage::operator<<(v29, ": failed to parse contents");
        google::protobuf::internal::LogFinisher::operator=((int)&v32, (const char **)&v30->__r_.__value_.__l.__data_);
        google::protobuf::internal::LogMessage::~LogMessage((void **)&v33[0].__r_.__value_.__l.__data_);
      }
      if (v35 < 0) {
        operator delete(__p[0]);
      }
      if (v15) {
        (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
      }
      google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)v45);
      goto LABEL_36;
    }
    uint64_t v25 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)v45, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/text_format.cc", 1992);
    uint64_t v26 = google::protobuf::internal::LogMessage::operator<<(v25, "Can't print proto content: proto type ");
    v27 = google::protobuf::internal::LogMessage::operator<<(v26, (const std::string::value_type *)v41);
    uint64_t v28 = google::protobuf::internal::LogMessage::operator<<(v27, " not found");
    google::protobuf::internal::LogFinisher::operator=((int)v33, (const char **)&v28->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage(v45);
  }
  uint64_t v11 = 0;
LABEL_36:
  if (SHIBYTE(v38) < 0) {
    operator delete(v37[0]);
  }
  if (SHIBYTE(v40) < 0) {
    operator delete(v39[0]);
  }
  if ((char)v42 < 0) {
    operator delete(v41[0]);
  }
  return v11;
}

void sub_10013BCCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  google::protobuf::internal::LogMessage::~LogMessage(&a10);
  if (a21 < 0) {
    operator delete(__p);
  }
  if (v41) {
    (*(void (**)(uint64_t))(*(void *)v41 + 8))(v41);
  }
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)(v43 - 168));
  if (a29 < 0) {
    operator delete(a24);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(*(void **)(v42 + 24));
  }
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::PrintField(uint64_t a1, google::protobuf::Message *a2, google::protobuf::Reflection *a3, google::protobuf::FieldDescriptor *a4, uint64_t a5)
{
  if (!*(unsigned char *)(a1 + 6) || *((_DWORD *)a4 + 15) != 3) {
    goto LABEL_12;
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)a4 + 6);
  if (v9)
  {
    v39 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a4;
    uint64_t v40 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      uint64_t v42 = &v40;
      uint64_t v43 = &v39;
      std::string __p = &v42;
      std::__call_once(v9, &__p, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  unsigned int v10 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a4 + 14)];
  if (v10 == 9) {
    goto LABEL_12;
  }
  uint64_t v11 = (std::once_flag::_State_type *)*((void *)a4 + 6);
  if (v11)
  {
    v39 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a4;
    uint64_t v40 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v11, memory_order_acquire) != -1)
    {
      uint64_t v42 = &v40;
      uint64_t v43 = &v39;
      std::string __p = &v42;
      std::__call_once(v11, &__p, (void (__cdecl *)(void *))sub_1000BB820);
    }
    unsigned int v10 = google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a4 + 14)];
  }
  if (v10 != 10)
  {
    google::protobuf::TextFormat::Printer::PrintShortRepeatedField(a1, a2, a3, a4, a5);
  }
  else
  {
LABEL_12:
    if (*((_DWORD *)a4 + 15) == 3) {
      uint64_t v12 = google::protobuf::Reflection::FieldSize(a3, a2, a4);
    }
    else {
      uint64_t v12 = (google::protobuf::Reflection::HasField(a3, a2, a4) & 1) != 0
    }
         || *(unsigned char *)(*(void *)(*((void *)a4 + 10) + 32) + 75);
    google::protobuf::DynamicMessageFactory::DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&v42);
    std::string __p = 0;
    char v35 = 0;
    uint64_t v36 = 0;
    uint64_t v13 = (std::once_flag::_State_type *)*((void *)a4 + 6);
    if (v13)
    {
      v37 = a4;
      uint64_t v38 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
      {
        uint64_t v40 = &v38;
        uint64_t v41 = &v37;
        v39 = &v40;
        std::__call_once(v13, &v39, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    if (*((_DWORD *)a4 + 14) == 11 && google::protobuf::FieldDescriptor::is_map_message_type(a4))
    {
      LOBYTE(v32) = google::protobuf::internal::MapFieldPrinterHelper::SortMap(a2, a3, a4, (uint64_t)&v42, (google::protobuf::Message ***)&__p);
      HIDWORD(v32) = 1;
    }
    else
    {
      uint64_t v32 = 0;
    }
    if ((int)v12 >= 1)
    {
      uint64_t v14 = 0;
      uint64_t v15 = (void *)(a1 + 40);
      while (1)
      {
        if (*((_DWORD *)a4 + 15) == 3) {
          uint64_t v16 = v14;
        }
        else {
          uint64_t v16 = 0xFFFFFFFFLL;
        }
        google::protobuf::TextFormat::Printer::PrintFieldName(a1, (uint64_t)a2, (char *)v16, v12, (uint64_t)a3, (unint64_t)a4, a5);
        unint64_t v17 = (std::once_flag::_State_type *)*((void *)a4 + 6);
        if (v17)
        {
          v37 = a4;
          uint64_t v38 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
          {
            uint64_t v40 = &v38;
            uint64_t v41 = &v37;
            v39 = &v40;
            std::__call_once(v17, &v39, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)a4 + 14)] == 10) {
          break;
        }
        (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)a5 + 40))(a5, ": ", 2);
        google::protobuf::TextFormat::Printer::PrintFieldValue(a1, a2, a3, a4, v16);
        if (*(unsigned char *)(a1 + 4)) {
          uint64_t v28 = " ";
        }
        else {
          uint64_t v28 = "\n";
        }
        (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)a5 + 40))(a5, v28, 1);
LABEL_59:
        if (++v14 == v12) {
          goto LABEL_60;
        }
      }
      int v18 = (void *)*v15;
      uint64_t v19 = (uint64_t *)(a1 + 24);
      if (*v15)
      {
        unint64_t v20 = (void *)(a1 + 40);
        do
        {
          unint64_t v21 = v18[4];
          BOOL v22 = v21 >= (unint64_t)a4;
          if (v21 >= (unint64_t)a4) {
            unint64_t v23 = v18;
          }
          else {
            unint64_t v23 = v18 + 1;
          }
          if (v22) {
            unint64_t v20 = v18;
          }
          int v18 = (void *)*v23;
        }
        while (*v23);
        uint64_t v19 = (uint64_t *)(a1 + 24);
        if (v20 != v15)
        {
          unint64_t v24 = v20[4];
          uint64_t v25 = v20 + 5;
          if (v24 <= (unint64_t)a4) {
            uint64_t v19 = v25;
          }
          else {
            uint64_t v19 = (uint64_t *)(a1 + 24);
          }
        }
      }
      uint64_t v26 = *v19;
      if (*((_DWORD *)a4 + 15) == 3)
      {
        if (HIDWORD(v32))
        {
          uint64_t v27 = *((void *)__p + v14);
LABEL_56:
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(*(void *)v26 + 112))(v26, v27, v16, v12, *(unsigned __int8 *)(a1 + 4), a5);
          (*(void (**)(uint64_t))(*(void *)a5 + 16))(a5);
          if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(*(void *)v26 + 120))(v26, v27, v16, v12, *(unsigned __int8 *)(a1 + 4), a5) & 1) == 0)google::protobuf::TextFormat::Printer::Print(a1, v27, a5); {
          (*(void (**)(uint64_t))(*(void *)a5 + 24))(a5);
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t))(*(void *)v26 + 128))(v26, v27, v16, v12, *(unsigned __int8 *)(a1 + 4), a5);
          goto LABEL_59;
        }
        uint64_t RepeatedMessage = google::protobuf::Reflection::GetRepeatedMessage(a3, a2, a4, v14);
      }
      else
      {
        uint64_t RepeatedMessage = google::protobuf::Reflection::GetMessage(a3, a2, a4, 0);
      }
      uint64_t v27 = RepeatedMessage;
      goto LABEL_56;
    }
LABEL_60:
    uint64_t v30 = __p;
    if (v32)
    {
      unsigned int v31 = v35;
      if (__p != v35)
      {
        do
        {
          if (*v30) {
            (*(void (**)(void))(*(void *)*v30 + 8))(*v30);
          }
          ++v30;
        }
        while (v30 != v31);
        uint64_t v30 = __p;
      }
    }
    if (v30)
    {
      char v35 = v30;
      operator delete(v30);
    }
    google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&v42);
  }
}

void sub_10013C39C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  if (__p) {
    operator delete(__p);
  }
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&a21);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::TextFormat::Printer::PrintFieldValueToString(int *a1, google::protobuf::Message *a2, google::protobuf::FieldDescriptor *a3, int a4, uint64_t a5)
{
  if (*(char *)(a5 + 23) < 0)
  {
    **(unsigned char **)a5 = 0;
    *(void *)(a5 + 8) = 0;
  }
  else
  {
    *(unsigned char *)a5 = 0;
    *(unsigned char *)(a5 + 23) = 0;
  }
  google::protobuf::io::StringOutputStream::StringOutputStream(v17, a5);
  int v9 = *a1;
  v12[0] = off_1001D2AE8;
  v12[1] = v17;
  v12[2] = 0;
  int v13 = 0;
  __int16 v14 = 1;
  int v15 = v9;
  int v16 = v9;
  (*(void (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  google::protobuf::TextFormat::Printer::PrintFieldValue((uint64_t)a1, a2, v10, a3, a4, (char *)v12);
  return sub_100142670((uint64_t)v12);
}

void sub_10013C4C8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100142670((uint64_t)va);
  _Unwind_Resume(a1);
}

void google::protobuf::TextFormat::Printer::PrintFieldValue(uint64_t a1, google::protobuf::Message *a2, google::protobuf::Reflection *this, google::protobuf::FieldDescriptor *a4, int a5, char *a6)
{
  uint64_t v12 = *(void **)(a1 + 40);
  if (!v12) {
    goto LABEL_12;
  }
  uint64_t v13 = a1 + 40;
  do
  {
    unint64_t v14 = v12[4];
    BOOL v15 = v14 >= (unint64_t)a4;
    if (v14 >= (unint64_t)a4) {
      int v16 = v12;
    }
    else {
      int v16 = v12 + 1;
    }
    if (v15) {
      uint64_t v13 = (uint64_t)v12;
    }
    uint64_t v12 = (void *)*v16;
  }
  while (*v16);
  if (v13 != a1 + 40 && *(void *)(v13 + 32) <= (unint64_t)a4) {
    unint64_t v17 = (uint64_t **)(v13 + 40);
  }
  else {
LABEL_12:
  }
    unint64_t v17 = (uint64_t **)(a1 + 24);
  int v18 = *v17;
  uint64_t v19 = (std::once_flag::_State_type *)*((void *)a4 + 6);
  if (v19)
  {
    v44.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    *(void *)v52 = a4;
    if (atomic_load_explicit((atomic_ullong *volatile)v19, memory_order_acquire) != -1)
    {
      __src = &v44;
      uint64_t v50 = v52;
      std::string __p = &__src;
      std::__call_once(v19, &__p, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  switch(*((_DWORD *)a4 + 14))
  {
    case 1:
      if (*((_DWORD *)a4 + 15) == 3) {
        v24.n128_f64[0] = google::protobuf::Reflection::GetRepeatedDouble(this, a2, a4, a5);
      }
      else {
        v24.n128_f64[0] = google::protobuf::Reflection::GetDouble(this, a2, a4);
      }
      (*(void (**)(uint64_t *, char *, __n128))(*v18 + 64))(v18, a6, v24);
      break;
    case 2:
      if (*((_DWORD *)a4 + 15) == 3) {
        v25.n128_f32[0] = google::protobuf::Reflection::GetRepeatedFloat(this, a2, a4, a5);
      }
      else {
        v25.n128_f32[0] = google::protobuf::Reflection::GetFloat(this, a2, a4);
      }
      (*(void (**)(uint64_t *, char *, __n128))(*v18 + 56))(v18, a6, v25);
      break;
    case 3:
    case 0x10:
    case 0x12:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedInt64 = google::protobuf::Reflection::GetRepeatedInt64(this, a2, a4, a5);
      }
      else {
        uint64_t RepeatedInt64 = google::protobuf::Reflection::GetInt64(this, a2, a4);
      }
      (*(void (**)(uint64_t *, uint64_t, char *))(*v18 + 40))(v18, RepeatedInt64, a6);
      break;
    case 4:
    case 6:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedUInt64 = google::protobuf::Reflection::GetRepeatedUInt64(this, a2, a4, a5);
      }
      else {
        uint64_t RepeatedUInt64 = google::protobuf::Reflection::GetUInt64(this, a2, a4);
      }
      (*(void (**)(uint64_t *, uint64_t, char *))(*v18 + 48))(v18, RepeatedUInt64, a6);
      break;
    case 5:
    case 0xF:
    case 0x11:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedInt32 = google::protobuf::Reflection::GetRepeatedInt32(this, a2, a4, a5);
      }
      else {
        uint64_t RepeatedInt32 = google::protobuf::Reflection::GetInt32(this, a2, a4);
      }
      (*(void (**)(uint64_t *, uint64_t, char *))(*v18 + 24))(v18, RepeatedInt32, a6);
      break;
    case 7:
    case 0xD:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedUInt32 = google::protobuf::Reflection::GetRepeatedUInt32(this, a2, a4, a5);
      }
      else {
        uint64_t RepeatedUInt32 = google::protobuf::Reflection::GetUInt32(this, a2, a4);
      }
      (*(void (**)(uint64_t *, uint64_t, char *))(*v18 + 32))(v18, RepeatedUInt32, a6);
      break;
    case 8:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedBool = google::protobuf::Reflection::GetRepeatedBool(this, a2, a4, a5);
      }
      else {
        uint64_t RepeatedBool = google::protobuf::Reflection::GetBool(this, a2, a4);
      }
      (*(void (**)(uint64_t *, uint64_t, char *))(*v18 + 16))(v18, RepeatedBool, a6);
      break;
    case 9:
    case 0xC:
      __src = 0;
      uint64_t v50 = 0;
      v51[0] = 0;
      if (*((_DWORD *)a4 + 15) == 3) {
        unint64_t RepeatedStringReference = google::protobuf::Reflection::GetRepeatedStringReference((uint64_t)this, (uint64_t)a2, (uint64_t)a4, a5);
      }
      else {
        unint64_t RepeatedStringReference = google::protobuf::Reflection::GetStringReference((uint64_t)this, (uint64_t)a2, (uint64_t)a4);
      }
      p_p = (void **)RepeatedStringReference;
      std::string __p = 0;
      long long v46 = 0uLL;
      int64_t v35 = *(void *)(a1 + 16);
      if (v35 >= 1)
      {
        unint64_t v36 = *(char *)(RepeatedStringReference + 23) < 0
            ? *(void *)(RepeatedStringReference + 8)
            : *(unsigned __int8 *)(RepeatedStringReference + 23);
        if (v35 < v36)
        {
          std::string::basic_string(&v44, (const std::string *)RepeatedStringReference, 0, v35, (std::allocator<char> *)&v48);
          uint64_t v38 = std::string::append(&v44, "...<truncated>...");
          v39 = (void *)v38->__r_.__value_.__r.__words[0];
          *(void *)v52 = v38->__r_.__value_.__l.__size_;
          *(void *)&v52[7] = *(std::string::size_type *)((char *)&v38->__r_.__value_.__r.__words[1] + 7);
          char v40 = HIBYTE(v38->__r_.__value_.__r.__words[2]);
          v38->__r_.__value_.__l.__size_ = 0;
          v38->__r_.__value_.__r.__words[2] = 0;
          v38->__r_.__value_.__r.__words[0] = 0;
          *(void *)((char *)&v46 + 7) = *(void *)&v52[7];
          std::string __p = v39;
          *(void *)&long long v46 = *(void *)v52;
          HIBYTE(v46) = v40;
          if (SHIBYTE(v44.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v44.__r_.__value_.__l.__data_);
          }
          p_p = &__p;
        }
      }
      uint64_t v41 = (std::once_flag::_State_type *)*((void *)a4 + 6);
      if (v41)
      {
        v47 = a4;
        uint64_t v48 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v41, memory_order_acquire) != -1)
        {
          v44.__r_.__value_.__r.__words[0] = (std::string::size_type)&v48;
          v44.__r_.__value_.__l.__size_ = (std::string::size_type)&v47;
          *(void *)v52 = &v44;
          std::__call_once(v41, v52, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      uint64_t v42 = *v18;
      if (*((_DWORD *)a4 + 14) == 9) {
        uint64_t v43 = (void (**)(uint64_t *, void **, char *))(v42 + 72);
      }
      else {
        uint64_t v43 = (void (**)(uint64_t *, void **, char *))(v42 + 80);
      }
      (*v43)(v18, p_p, a6);
      if (SHIBYTE(v46) < 0) {
        operator delete(__p);
      }
      if (SHIBYTE(v51[0]) < 0)
      {
        v37 = __src;
        goto LABEL_78;
      }
      break;
    case 0xA:
    case 0xB:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedMessage = (const google::protobuf::Message *)google::protobuf::Reflection::GetRepeatedMessage(this, a2, a4, a5);
      }
      else {
        uint64_t RepeatedMessage = (const google::protobuf::Message *)google::protobuf::Reflection::GetMessage(this, a2, a4, 0);
      }
      google::protobuf::TextFormat::Printer::Print(a1, RepeatedMessage, a6);
      break;
    case 0xE:
      if (*((_DWORD *)a4 + 15) == 3) {
        uint64_t RepeatedEnumValue = google::protobuf::Reflection::GetRepeatedEnumValue(this, a2, a4, a5);
      }
      else {
        uint64_t RepeatedEnumValue = google::protobuf::Reflection::GetEnumValue(this, a2, a4);
      }
      uint64_t v30 = (google::protobuf *)RepeatedEnumValue;
      unsigned int v31 = (google::protobuf::EnumDescriptor *)google::protobuf::FieldDescriptor::enum_type(a4);
      ValueByNumber = (void *)google::protobuf::EnumDescriptor::FindValueByNumber(v31, v30);
      if (ValueByNumber)
      {
        (*(void (**)(uint64_t *, google::protobuf *, void, char *))(*v18 + 88))(v18, v30, *ValueByNumber, a6);
      }
      else
      {
        __src = v51;
        uint64_t v50 = (unsigned char *)(google::protobuf::FastInt32ToBufferLeft(v30, v51, v33) - (unsigned char *)v51);
        sub_1000BB9D8(&__p, __src, (size_t)v50);
        (*(void (**)(uint64_t *, google::protobuf *, void **, char *))(*v18 + 88))(v18, v30, &__p, a6);
        if (SHIBYTE(v46) < 0)
        {
          v37 = __p;
LABEL_78:
          operator delete(v37);
        }
      }
      break;
    default:
      return;
  }
}

void sub_10013CC10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,void *a24,uint64_t a25,int a26,__int16 a27,char a28,char a29)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a29 < 0) {
    operator delete(a24);
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::MapFieldPrinterHelper::SortMap(google::protobuf::Message *a1, google::protobuf::Reflection *this, const google::protobuf::FieldDescriptor *a3, uint64_t a4, google::protobuf::Message ***a5)
{
  MapData = (atomic_uint *)google::protobuf::Reflection::GetMapData(this, a1, a3);
  BOOL IsRepeatedFieldValid = google::protobuf::internal::MapFieldBase::IsRepeatedFieldValid(MapData);
  if (IsRepeatedFieldValid)
  {
    RawRepeatedField = google::protobuf::Reflection::GetRawRepeatedField((uint64_t)this, (uint64_t)a1, a3, 10, -1, 0);
    if (*((int *)RawRepeatedField + 2) >= 1)
    {
      uint64_t v12 = RawRepeatedField;
      uint64_t v13 = 0;
      unint64_t v14 = a5 + 2;
      BOOL v15 = a5[1];
      do
      {
        int v16 = *(google::protobuf::Message **)(v12[2] + 8 * v13 + 8);
        if ((unint64_t)v15 >= *v14)
        {
          uint64_t v17 = v15 - *a5;
          if ((unint64_t)(v17 + 1) >> 61) {
            sub_100078F84();
          }
          uint64_t v18 = *v14 - (void)*a5;
          uint64_t v19 = v18 >> 2;
          if (v18 >> 2 <= (unint64_t)(v17 + 1)) {
            uint64_t v19 = v17 + 1;
          }
          if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v20 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v20 = v19;
          }
          if (v20) {
            unint64_t v21 = (char *)sub_1000B4170((uint64_t)(a5 + 2), v20);
          }
          else {
            unint64_t v21 = 0;
          }
          BOOL v22 = &v21[8 * v17];
          *(void *)BOOL v22 = v16;
          BOOL v15 = (google::protobuf::Message **)(v22 + 8);
          __n128 v24 = *a5;
          unint64_t v23 = a5[1];
          if (v23 != *a5)
          {
            do
            {
              uint64_t v25 = (uint64_t)*--v23;
              *((void *)v22 - 1) = v25;
              v22 -= 8;
            }
            while (v23 != v24);
            unint64_t v23 = *a5;
          }
          *a5 = (google::protobuf::Message **)v22;
          a5[1] = v15;
          a5[2] = (google::protobuf::Message **)&v21[8 * v20];
          if (v23) {
            operator delete(v23);
          }
        }
        else
        {
          *v15++ = v16;
        }
        a5[1] = v15;
        ++v13;
      }
      while (v13 < *((int *)v12 + 2));
    }
  }
  else
  {
    uint64_t v26 = google::protobuf::FieldDescriptor::message_type(a3);
    uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a4 + 16))(a4, v26);
    google::protobuf::Reflection::MapBegin(this, a1, a3, (uint64_t)&v51);
    while (1)
    {
      google::protobuf::Reflection::MapEnd(this, a1, a3, (uint64_t)v50);
      int v28 = (*(uint64_t (**)(uint64_t, const google::protobuf::FieldDescriptor **, unsigned char *))(*(void *)v52 + 48))(v52, &v51, v50);
      sub_100120978((uint64_t)v50);
      if (v28) {
        break;
      }
      uint64_t v29 = (google::protobuf::Message *)(*(uint64_t (**)(uint64_t))(*(void *)v27 + 24))(v27);
      google::protobuf::internal::MapFieldPrinterHelper::CopyKey(v53, v29, *(void *)(v26 + 40));
      google::protobuf::internal::MapFieldPrinterHelper::CopyValue(&v54, v29, *(void *)(v26 + 40) + 152);
      unsigned int v31 = a5[1];
      unint64_t v30 = (unint64_t)a5[2];
      if ((unint64_t)v31 >= v30)
      {
        uint64_t v33 = v31 - *a5;
        if ((unint64_t)(v33 + 1) >> 61) {
          sub_100078F84();
        }
        uint64_t v34 = v30 - (void)*a5;
        uint64_t v35 = v34 >> 2;
        if (v34 >> 2 <= (unint64_t)(v33 + 1)) {
          uint64_t v35 = v33 + 1;
        }
        if ((unint64_t)v34 >= 0x7FFFFFFFFFFFFFF8) {
          unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v36 = v35;
        }
        if (v36) {
          v37 = (char *)sub_1000B4170((uint64_t)(a5 + 2), v36);
        }
        else {
          v37 = 0;
        }
        uint64_t v38 = (google::protobuf::Message **)&v37[8 * v33];
        std::string *v38 = v29;
        uint64_t v32 = v38 + 1;
        char v40 = *a5;
        v39 = (char *)a5[1];
        if (v39 != (char *)*a5)
        {
          do
          {
            uint64_t v41 = (google::protobuf::Message *)*((void *)v39 - 1);
            v39 -= 8;
            *--uint64_t v38 = v41;
          }
          while (v39 != (char *)v40);
          v39 = (char *)*a5;
        }
        *a5 = v38;
        a5[1] = v32;
        a5[2] = (google::protobuf::Message **)&v37[8 * v36];
        if (v39) {
          operator delete(v39);
        }
      }
      else
      {
        *unsigned int v31 = v29;
        uint64_t v32 = v31 + 1;
      }
      a5[1] = v32;
      (*(void (**)(uint64_t, const google::protobuf::FieldDescriptor **))(*(void *)v52 + 152))(v52, &v51);
    }
    sub_100120978((uint64_t)&v51);
  }
  uint64_t v42 = google::protobuf::FieldDescriptor::message_type(a3);
  uint64_t v43 = *a5;
  std::string v44 = a5[1];
  unsigned __int8 v51 = *(const google::protobuf::FieldDescriptor **)(v42 + 40);
  if ((char *)v44 - (char *)v43 < 1025)
  {
    std::string v45 = 0;
    uint64_t v47 = 0;
  }
  else
  {
    std::string v45 = (const google::protobuf::Message **)sub_10014358C(v44 - v43);
    uint64_t v47 = v46;
  }
  sub_1001435F0(v43, v44, &v51, v44 - v43, v45, v47);
  if (v45) {
    operator delete(v45);
  }
  return !IsRepeatedFieldValid;
}

void sub_10013D0A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19)
{
  if (v19) {
    operator delete(v19);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::MapFieldPrinterHelper::CopyKey(unsigned int *a1, google::protobuf::Message *a2, uint64_t a3)
{
  (*(void (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  int v7 = v6;
  unint64_t v8 = *(std::once_flag::_State_type **)(a3 + 48);
  if (v8)
  {
    uint64_t v20 = a3;
    unint64_t v21 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      v19[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v21;
      v19[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v20;
      BOOL v22 = v19;
      std::__call_once(v8, &v22, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  switch(*(_DWORD *)(a3 + 56))
  {
    case 1:
    case 2:
    case 0xA:
    case 0xB:
    case 0xE:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v19, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/text_format.cc", 2186);
      int v9 = google::protobuf::internal::LogMessage::operator<<(v19, "Not supported.");
      google::protobuf::internal::LogFinisher::operator=((int)&v22, (const char **)&v9->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v19[0].__r_.__value_.__l.__data_);
      break;
    case 3:
    case 0x10:
    case 0x12:
      uint64_t v13 = sub_100110D5C((uint64_t)a1);
      google::protobuf::Reflection::SetInt64(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v13);
      break;
    case 4:
    case 6:
      unint64_t v11 = sub_100110F4C((uint64_t)a1);
      google::protobuf::Reflection::SetUInt64(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v11);
      break;
    case 5:
    case 0xF:
    case 0x11:
      int v12 = sub_100110E54(a1);
      google::protobuf::Reflection::SetInt32(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v12);
      break;
    case 7:
    case 0xD:
      unsigned int v10 = sub_100111044(a1);
      google::protobuf::Reflection::SetUInt32(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v10);
      break;
    case 8:
      char v14 = sub_10011113C((unsigned __int8 *)a1);
      google::protobuf::Reflection::SetBool(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v14);
      break;
    case 9:
    case 0xC:
      uint64_t v15 = sub_100110C64((uint64_t)a1);
      if (*(char *)(v15 + 23) < 0)
      {
        sub_1000BB834(__p, *(void **)v15, *(void *)(v15 + 8));
      }
      else
      {
        long long v16 = *(_OWORD *)v15;
        uint64_t v18 = *(void *)(v15 + 16);
        *(_OWORD *)std::string __p = v16;
      }
      google::protobuf::Reflection::SetString((uint64_t)v7, a2, (google::protobuf::FieldDescriptor *)a3, (uint64_t)__p);
      if (SHIBYTE(v18) < 0) {
        operator delete(__p[0]);
      }
      break;
    default:
      return;
  }
}

void sub_10013D314(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::internal::MapFieldPrinterHelper::CopyValue(unsigned int **a1, google::protobuf::Message *a2, uint64_t a3)
{
  (*(void (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  int v7 = v6;
  unint64_t v8 = *(std::once_flag::_State_type **)(a3 + 48);
  if (v8)
  {
    uint64_t v24 = a3;
    uint64_t v25 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      v27[0] = &v25;
      v27[1] = &v24;
      uint64_t v26 = v27;
      std::__call_once(v8, &v26, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  switch(*(_DWORD *)(a3 + 56))
  {
    case 1:
      double v13 = sub_10010FC38((uint64_t)a1);
      google::protobuf::Reflection::SetDouble(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v13);
      break;
    case 2:
      float v14 = sub_10010FA34((uint64_t)a1);
      google::protobuf::Reflection::SetFloat(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v14);
      break;
    case 3:
    case 0x10:
    case 0x12:
      uint64_t v10 = sub_10010F438((uint64_t)a1);
      google::protobuf::Reflection::SetInt64(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v10);
      break;
    case 4:
    case 6:
      unint64_t v12 = sub_10010F830((uint64_t)a1);
      google::protobuf::Reflection::SetUInt64(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v12);
      break;
    case 5:
    case 0xF:
    case 0x11:
      int v9 = sub_10010F23C(a1);
      google::protobuf::Reflection::SetInt32(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v9);
      break;
    case 7:
    case 0xD:
      unsigned int v11 = sub_10010F634(a1);
      google::protobuf::Reflection::SetUInt32(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v11);
      break;
    case 8:
      char v15 = sub_10010FE34((unsigned __int8 **)a1);
      google::protobuf::Reflection::SetBool(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v15);
      break;
    case 9:
    case 0xC:
      uint64_t v20 = sub_100110034((uint64_t)a1);
      if (*(char *)(v20 + 23) < 0)
      {
        sub_1000BB834(__p, *(void **)v20, *(void *)(v20 + 8));
      }
      else
      {
        long long v21 = *(_OWORD *)v20;
        uint64_t v23 = *(void *)(v20 + 16);
        *(_OWORD *)std::string __p = v21;
      }
      google::protobuf::Reflection::SetString((uint64_t)v7, a2, (google::protobuf::FieldDescriptor *)a3, (uint64_t)__p);
      if (SHIBYTE(v23) < 0) {
        operator delete(__p[0]);
      }
      break;
    case 0xA:
    case 0xB:
      uint64_t v17 = sub_100110420((uint64_t)a1);
      uint64_t v18 = (google::protobuf::Message *)(*(uint64_t (**)(uint64_t))(*(void *)v17 + 24))(v17);
      uint64_t v19 = sub_100110420((uint64_t)a1);
      (*(void (**)(google::protobuf::Message *, uint64_t))(*(void *)v18 + 112))(v18, v19);
      google::protobuf::Reflection::SetAllocatedMessage(v7, a2, v18, (const google::protobuf::FieldDescriptor *)a3);
      break;
    case 0xE:
      signed int v16 = sub_10011022C(a1);
      google::protobuf::Reflection::SetEnumValue(v7, a2, (const google::protobuf::FieldDescriptor *)a3, v16);
      break;
    default:
      return;
  }
}

void sub_10013D62C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::TextFormat::Printer::PrintShortRepeatedField(uint64_t a1, const google::protobuf::Message *a2, google::protobuf::Reflection *this, google::protobuf::FieldDescriptor *a4, uint64_t a5)
{
  uint64_t v10 = google::protobuf::Reflection::FieldSize(this, a2, a4);
  int v11 = v10;
  google::protobuf::TextFormat::Printer::PrintFieldName(a1, (uint64_t)a2, (char *)0xFFFFFFFFLL, v10, (uint64_t)this, (unint64_t)a4, a5);
  (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)a5 + 40))(a5, ": [", 3);
  if (v11 >= 1)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (i) {
        (*(void (**)(uint64_t, const char *, uint64_t))(*(void *)a5 + 40))(a5, ", ", 2);
      }
      google::protobuf::TextFormat::Printer::PrintFieldValue(a1, a2, this, a4, i);
    }
  }
  double v13 = *(uint64_t (**)(uint64_t, const char *, uint64_t))(*(void *)a5 + 40);
  if (*(unsigned char *)(a1 + 4)) {
    float v14 = "] ";
  }
  else {
    float v14 = "]\n";
  }
  return v13(a5, v14, 2);
}

void google::protobuf::TextFormat::Printer::PrintFieldName(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  if (*(unsigned char *)(a1 + 5))
  {
    unint64_t v8 = (google::protobuf *)*(unsigned int *)(a6 + 68);
    __src = v22;
    size_t v21 = google::protobuf::FastInt32ToBufferLeft(v8, v22, a3) - v22;
    sub_1000BB9D8(__p, v22, v21);
    if ((v19 & 0x80u) == 0) {
      int v9 = __p;
    }
    else {
      int v9 = (void **)__p[0];
    }
    if ((v19 & 0x80u) == 0) {
      unint64_t v10 = v19;
    }
    else {
      unint64_t v10 = (unint64_t)__p[1];
    }
    (*(void (**)(uint64_t, void **, unint64_t))(*(void *)a7 + 40))(a7, v9, v10);
    if ((char)v19 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    int v11 = *(void **)(a1 + 40);
    if (!v11) {
      goto LABEL_22;
    }
    unint64_t v12 = (void *)(a1 + 40);
    do
    {
      unint64_t v13 = v11[4];
      BOOL v14 = v13 >= a6;
      if (v13 >= a6) {
        char v15 = v11;
      }
      else {
        char v15 = v11 + 1;
      }
      if (v14) {
        unint64_t v12 = v11;
      }
      int v11 = (void *)*v15;
    }
    while (*v15);
    if (v12 != (void *)(a1 + 40) && v12[4] <= a6) {
      signed int v16 = v12 + 5;
    }
    else {
LABEL_22:
    }
      signed int v16 = (void *)(a1 + 24);
    uint64_t v17 = *(void (**)(void))(*(void *)*v16 + 96);
    v17();
  }
}

void sub_10013D978(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::TextFormat::PrintFieldValueToString()
{
  google::protobuf::TextFormat::Printer::Printer((google::protobuf::TextFormat::Printer *)v0);
}

void sub_10013DA4C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000D8948((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013DA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, char a8, char a9, char a10, char a11, char a12, char a13, char a14, int a15)
{
  *(void *)a1 = a4;
  *(void *)(a1 + 8) = a5;
  *(void *)(a1 + 16) = a6;
  *(void *)(a1 + 24) = &off_1001D29F0;
  *(void *)(a1 + 32) = a1;
  unsigned __int8 v19 = (google::protobuf::io::Tokenizer *)(a1 + 40);
  google::protobuf::io::Tokenizer::Tokenizer(a1 + 40, a3, a1 + 24);
  *(void *)(a1 + 216) = a2;
  *(_DWORD *)(a1 + 224) = a7;
  *(unsigned char *)(a1 + 228) = a8;
  *(unsigned char *)(a1 + 229) = a9;
  *(unsigned char *)(a1 + 23google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = a10;
  *(unsigned char *)(a1 + 231) = a11;
  *(unsigned char *)(a1 + 232) = a12;
  *(unsigned char *)(a1 + 233) = a14;
  *(_DWORD *)(a1 + 236) = a15;
  *(_DWORD *)(a1 + 24google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = a15;
  *(unsigned char *)(a1 + 244) = 0;
  *(unsigned char *)(a1 + 204) = 1;
  *(_DWORD *)(a1 + 208) = 1;
  if (a13) {
    *(_WORD *)(a1 + 212) = 256;
  }
  google::protobuf::io::Tokenizer::Next(v19);
  return a1;
}

void sub_10013DB40(_Unwind_Exception *a1)
{
  google::protobuf::io::Tokenizer::~Tokenizer(v2);
  google::protobuf::io::ErrorCollector::~ErrorCollector(v1);
  _Unwind_Resume(a1);
}

void sub_10013DB68(google::protobuf::io::ErrorCollector *a1)
{
  google::protobuf::io::ErrorCollector::~ErrorCollector(a1);
  operator delete();
}

void sub_10013DBA0(uint64_t a1, int a2, int a3, const std::string::value_type *a4)
{
}

void sub_10013DBA8(uint64_t a1, int a2, int a3, const std::string::value_type *a4)
{
}

void sub_10013DBB0(uint64_t *a1, int a2, int a3, const std::string::value_type *a4)
{
  uint64_t v8 = *a1;
  if (v8)
  {
    int v9 = *(void (**)(void))(*(void *)v8 + 24);
    v9();
  }
  else
  {
    if (a2 < 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/text_format.cc", 338);
      uint64_t v18 = google::protobuf::internal::LogMessage::operator<<(v20, "Warning parsing text-format ");
      char v15 = google::protobuf::internal::LogMessage::operator<<(v18, *(const std::string::value_type **)(a1[27] + 8));
    }
    else
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v20, 1, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/text_format.cc", 334);
      unint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v20, "Warning parsing text-format ");
      int v11 = google::protobuf::internal::LogMessage::operator<<(v10, *(const std::string::value_type **)(a1[27] + 8));
      unint64_t v12 = google::protobuf::internal::LogMessage::operator<<(v11, ": ");
      unint64_t v13 = google::protobuf::internal::LogMessage::operator<<(v12, a2 + 1);
      BOOL v14 = google::protobuf::internal::LogMessage::operator<<(v13, ":");
      char v15 = google::protobuf::internal::LogMessage::operator<<(v14, a3 + 1);
    }
    signed int v16 = google::protobuf::internal::LogMessage::operator<<(v15, ": ");
    uint64_t v17 = google::protobuf::internal::LogMessage::operator<<(v16, a4);
    google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v17->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v20[0].__r_.__value_.__l.__data_);
  }
}

void sub_10013DD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10013DD34(uint64_t a1, google::protobuf::Message *a2)
{
  (*(void (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  unint64_t v5 = v4;
  uint64_t v6 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  memset(&v146, 0, sizeof(v146));
  uint64_t v7 = *(void *)(a1 + 72);
  v144 = 0;
  v145 = 0;
  if (google::protobuf::internal::GetAnyFieldDescriptors((uint64_t)a2, (uint64_t *)&v145, (uint64_t *)&v144))
  {
    sub_1000BBA84(__p, "[");
    int v8 = sub_10013F478(a1, (unsigned __int8 *)__p);
    int v9 = v8;
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p[0].__r_.__value_.__l.__data_);
      if (v9)
      {
LABEL_4:
        memset(__p, 0, 24);
        memset(&v143, 0, sizeof(v143));
        if (sub_10013F524(a1, __p, &v143))
        {
          sub_1000BBA84(&v142, "]");
          char v10 = sub_10013F6C4(a1, (unsigned __int8 *)&v142);
          char v11 = v10;
          if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0)
          {
            operator delete(v142.__r_.__value_.__l.__data_);
            if (v11)
            {
LABEL_7:
              sub_1000BBA84(&v142, ":");
              sub_10013F478(a1, (unsigned __int8 *)&v142);
              if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
                operator delete(v142.__r_.__value_.__l.__data_);
              }
              memset(&v142, 0, sizeof(v142));
              uint64_t v12 = *(void *)(a1 + 8);
              if (v12) {
                unint64_t v13 = (const google::protobuf::Descriptor *)(*(uint64_t (**)(uint64_t, google::protobuf::Message *, std::string *, std::string *))(*(void *)v12 + 32))(v12, a2, &v143, __p);
              }
              else {
                unint64_t v13 = (const google::protobuf::Descriptor *)sub_10013977C((uint64_t)a2, (const void **)&v143.__r_.__value_.__l.__data_, (uint64_t *)__p);
              }
              if (v13)
              {
                if (!sub_10013F8D8(a1, v13, &v142)) {
                  goto LABEL_70;
                }
                if (*(_DWORD *)(a1 + 224) != 1
                  || (*((_DWORD *)v145 + 15) == 3
                   || (google::protobuf::Reflection::HasField(v5, a2, v145) & 1) == 0)
                  && (*((_DWORD *)v144 + 15) == 3 || !google::protobuf::Reflection::HasField(v5, a2, v144)))
                {
                  uint64_t v54 = v145;
                  sub_1000FDCC4((const void **)&v143.__r_.__value_.__l.__data_, (const void **)&__p[0].__r_.__value_.__l.__data_, (uint64_t)v137);
                  google::protobuf::Reflection::SetString((uint64_t)v5, a2, v54, (uint64_t)v137);
                  if (v138 < 0) {
                    operator delete(v137[0]);
                  }
                  int v55 = v144;
                  if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
                    sub_1000BB834(&__dst, v142.__r_.__value_.__l.__data_, v142.__r_.__value_.__l.__size_);
                  }
                  else {
                    std::string __dst = v142;
                  }
                  google::protobuf::Reflection::SetString((uint64_t)v5, a2, v55, (uint64_t)&__dst);
                  if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(__dst.__r_.__value_.__l.__data_);
                  }
                  uint64_t v25 = 1;
                  goto LABEL_271;
                }
                sub_1000BBA84(&v141, "Non-repeated Any specified multiple times.");
                sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&v141);
                if ((SHIBYTE(v141.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
                {
LABEL_70:
                  uint64_t v25 = 0;
LABEL_271:
                  if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
                    operator delete(v142.__r_.__value_.__l.__data_);
                  }
                  goto LABEL_33;
                }
                uint64_t v33 = (void *)v141.__r_.__value_.__r.__words[0];
              }
              else
              {
                std::operator+<char>();
                if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  uint64_t v34 = __p;
                }
                else {
                  uint64_t v34 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
                }
                if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                  std::string::size_type size = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
                }
                else {
                  std::string::size_type size = __p[0].__r_.__value_.__l.__size_;
                }
                unint64_t v36 = std::string::append(&v139, (const std::string::value_type *)v34, size);
                long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
                v140.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
                *(_OWORD *)&v140.__r_.__value_.__l.__data_ = v37;
                v36->__r_.__value_.__l.__size_ = 0;
                v36->__r_.__value_.__r.__words[2] = 0;
                v36->__r_.__value_.__r.__words[0] = 0;
                uint64_t v38 = std::string::append(&v140, "\" stored in google.protobuf.Any.");
                long long v39 = *(_OWORD *)&v38->__r_.__value_.__l.__data_;
                v141.__r_.__value_.__r.__words[2] = v38->__r_.__value_.__r.__words[2];
                *(_OWORD *)&v141.__r_.__value_.__l.__data_ = v39;
                v38->__r_.__value_.__l.__size_ = 0;
                v38->__r_.__value_.__r.__words[2] = 0;
                v38->__r_.__value_.__r.__words[0] = 0;
                sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&v141);
                if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v141.__r_.__value_.__l.__data_);
                }
                if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0) {
                  operator delete(v140.__r_.__value_.__l.__data_);
                }
                if ((SHIBYTE(v139.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
                  goto LABEL_70;
                }
                uint64_t v33 = (void *)v139.__r_.__value_.__r.__words[0];
              }
              operator delete(v33);
              goto LABEL_70;
            }
          }
          else if (v10)
          {
            goto LABEL_7;
          }
        }
        uint64_t v25 = 0;
LABEL_33:
        if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v143.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p[0].__r_.__value_.__l.__data_);
        }
        goto LABEL_289;
      }
    }
    else if (v8)
    {
      goto LABEL_4;
    }
  }
  sub_1000BBA84(__p, "[");
  int v14 = sub_10013F478(a1, (unsigned __int8 *)__p);
  int v15 = v14;
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p[0].__r_.__value_.__l.__data_);
    if (v15) {
      goto LABEL_14;
    }
  }
  else if (v14)
  {
LABEL_14:
    if ((sub_10013FBB8(a1, &v146) & 1) == 0) {
      goto LABEL_288;
    }
    sub_1000BBA84(__p, "]");
    char v16 = sub_10013F6C4(a1, (unsigned __int8 *)__p);
    char v17 = v16;
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p[0].__r_.__value_.__l.__data_);
      if ((v17 & 1) == 0) {
        goto LABEL_288;
      }
    }
    else if ((v16 & 1) == 0)
    {
      goto LABEL_288;
    }
    uint64_t v23 = *(void *)(a1 + 8);
    if (v23)
    {
      uint64_t ExtensionByPrintableName = (*(uint64_t (**)(uint64_t, google::protobuf::Message *, std::string *))(*(void *)v23 + 16))(v23, a2, &v146);
    }
    else
    {
      uint64_t v26 = (*(uint64_t (**)(google::protobuf::Message *))(*(void *)a2 + 152))(a2);
      uint64_t ExtensionByPrintableName = google::protobuf::DescriptorPool::FindExtensionByPrintableName(*(void *)(*(void *)(v26 + 16) + 16), v26, (uint64_t *)&v146);
    }
    uint64_t FieldByName = ExtensionByPrintableName;
    if (!ExtensionByPrintableName)
    {
      if (*(unsigned char *)(a1 + 229) || *(unsigned char *)(a1 + 230))
      {
        std::operator+<char>();
        uint64_t v27 = std::string::append(&v141, "\" which is not defined or is not an extension of \"");
        long long v28 = *(_OWORD *)&v27->__r_.__value_.__l.__data_;
        v142.__r_.__value_.__r.__words[2] = v27->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v142.__r_.__value_.__l.__data_ = v28;
        v27->__r_.__value_.__l.__size_ = 0;
        v27->__r_.__value_.__r.__words[2] = 0;
        v27->__r_.__value_.__r.__words[0] = 0;
        uint64_t v29 = *(void *)(v6 + 8);
        int v30 = *(char *)(v29 + 23);
        if (v30 >= 0) {
          unsigned int v31 = *(std::string **)(v6 + 8);
        }
        else {
          unsigned int v31 = *(std::string **)v29;
        }
        if (v30 >= 0) {
          std::string::size_type v32 = *(unsigned __int8 *)(v29 + 23);
        }
        else {
          std::string::size_type v32 = *(void *)(v29 + 8);
        }
LABEL_160:
        v75 = std::string::append(&v142, (const std::string::value_type *)v31, v32);
        long long v76 = *(_OWORD *)&v75->__r_.__value_.__l.__data_;
        v143.__r_.__value_.__r.__words[2] = v75->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v143.__r_.__value_.__l.__data_ = v76;
        v75->__r_.__value_.__l.__size_ = 0;
        v75->__r_.__value_.__r.__words[2] = 0;
        v75->__r_.__value_.__r.__words[0] = 0;
        v77 = std::string::append(&v143, "\".");
        long long v78 = *(_OWORD *)&v77->__r_.__value_.__l.__data_;
        __p[0].__r_.__value_.__r.__words[2] = v77->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v78;
        v77->__r_.__value_.__l.__size_ = 0;
        v77->__r_.__value_.__r.__words[2] = 0;
        v77->__r_.__value_.__r.__words[0] = 0;
        sub_10013DBB0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)__p);
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p[0].__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v143.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v142.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v141.__r_.__value_.__l.__data_);
        }
        BOOL v40 = 0;
LABEL_177:
        if (!*(unsigned char *)(a1 + 229) && !v40 && *(unsigned char *)(a1 + 230) == 0)
        {
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/text_format.cc", 516);
          v82 = google::protobuf::internal::LogMessage::operator<<(__p, "CHECK failed: allow_unknown_field_ || allow_unknown_extension_ || reserved_field: ");
          google::protobuf::internal::LogFinisher::operator=((int)&v143, (const char **)&v82->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
        }
        sub_1000BBA84(__p, ":");
        if (sub_10013F478(a1, (unsigned __int8 *)__p))
        {
          sub_1000BBA84(&v143, "{");
          if (sub_10013FD94(a1, (unsigned __int8 *)&v143))
          {
            int v85 = 0;
          }
          else
          {
            sub_1000BBA84(&v142, "<");
            int v85 = sub_10013FD94(a1, (unsigned __int8 *)&v142) ^ 1;
            if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v142.__r_.__value_.__l.__data_);
            }
          }
          if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v143.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          int v85 = 0;
        }
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
        {
          operator delete(__p[0].__r_.__value_.__l.__data_);
          if (v85) {
            goto LABEL_257;
          }
        }
        else if (v85)
        {
LABEL_257:
          uint64_t v115 = sub_10013FE38(a1, v83, v84);
LABEL_260:
          uint64_t v25 = v115;
          goto LABEL_289;
        }
        uint64_t v115 = sub_100140310(a1, v83, v84);
        goto LABEL_260;
      }
      std::operator+<char>();
      v120 = std::string::append(&v141, "\" is not defined or is not an extension of \"");
      long long v121 = *(_OWORD *)&v120->__r_.__value_.__l.__data_;
      v142.__r_.__value_.__r.__words[2] = v120->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v142.__r_.__value_.__l.__data_ = v121;
      v120->__r_.__value_.__l.__size_ = 0;
      v120->__r_.__value_.__r.__words[2] = 0;
      v120->__r_.__value_.__r.__words[0] = 0;
      uint64_t v122 = *(void *)(v6 + 8);
      int v123 = *(char *)(v122 + 23);
      if (v123 >= 0) {
        v118 = *(std::string **)(v6 + 8);
      }
      else {
        v118 = *(std::string **)v122;
      }
      if (v123 >= 0) {
        std::string::size_type v119 = *(unsigned __int8 *)(v122 + 23);
      }
      else {
        std::string::size_type v119 = *(void *)(v122 + 8);
      }
LABEL_279:
      v124 = std::string::append(&v142, (const std::string::value_type *)v118, v119);
      long long v125 = *(_OWORD *)&v124->__r_.__value_.__l.__data_;
      v143.__r_.__value_.__r.__words[2] = v124->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v143.__r_.__value_.__l.__data_ = v125;
      v124->__r_.__value_.__l.__size_ = 0;
      v124->__r_.__value_.__r.__words[2] = 0;
      v124->__r_.__value_.__r.__words[0] = 0;
      v126 = std::string::append(&v143, "\".");
      long long v127 = *(_OWORD *)&v126->__r_.__value_.__l.__data_;
      __p[0].__r_.__value_.__r.__words[2] = v126->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v127;
      v126->__r_.__value_.__l.__size_ = 0;
      v126->__r_.__value_.__r.__words[2] = 0;
      v126->__r_.__value_.__r.__words[0] = 0;
      sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)__p);
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v143.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v142.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v141.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_288;
      }
      v81 = (void *)v141.__r_.__value_.__r.__words[0];
      goto LABEL_287;
    }
    goto LABEL_170;
  }
  if (!sub_10013FCC0(a1, &v146)) {
    goto LABEL_288;
  }
  LODWORD(v139.__r_.__value_.__l.__data_) = 0;
  if (*(unsigned char *)(a1 + 232) && google::protobuf::safe_strto32((uint64_t)&v146, (int *)&v139))
  {
    if (google::protobuf::Descriptor::FindExtensionRangeContainingNumber((google::protobuf::Descriptor *)v6, (int)v139.__r_.__value_.__l.__data_))
    {
      uint64_t v19 = *(void *)(a1 + 8);
      if (v19) {
        uint64_t ExtensionByNumber = (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)v19 + 24))(v19, v6, LODWORD(v139.__r_.__value_.__l.__data_));
      }
      else {
        uint64_t ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(*(google::protobuf::DescriptorPool **)(*(void *)(v6 + 16) + 16), (const google::protobuf::Descriptor *)v6, (int)v139.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      if (google::protobuf::Descriptor::FindReservedRangeContainingNumber((google::protobuf::Descriptor *)v6, (int)v139.__r_.__value_.__l.__data_))
      {
        BOOL v40 = 1;
        goto LABEL_177;
      }
      uint64_t ExtensionByNumber = google::protobuf::Descriptor::FindFieldByNumber((google::protobuf::Descriptor *)v6, (int)v139.__r_.__value_.__l.__data_);
    }
    uint64_t FieldByName = ExtensionByNumber;
    BOOL v40 = 0;
  }
  else
  {
    uint64_t FieldByName = google::protobuf::Descriptor::FindFieldByName(v6, (uint64_t *)&v146, v18);
    if (FieldByName) {
      goto LABEL_90;
    }
    if (SHIBYTE(v146.__r_.__value_.__r.__words[2]) < 0) {
      sub_1000BB834(__p, v146.__r_.__value_.__l.__data_, v146.__r_.__value_.__l.__size_);
    }
    else {
      __p[0] = v146;
    }
    uint64_t v41 = (std::string *)((char *)__p + HIBYTE(__p[0].__r_.__value_.__r.__words[2]));
    if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    {
      uint64_t v42 = __p;
    }
    else
    {
      uint64_t v41 = (std::string *)(__p[0].__r_.__value_.__r.__words[0] + __p[0].__r_.__value_.__l.__size_);
      uint64_t v42 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
    }
    while (v42 != v41)
    {
      int v43 = v42->__r_.__value_.__s.__data_[0];
      if ((v43 - 65) <= 0x19) {
        v42->__r_.__value_.__s.__data_[0] = v43 + 32;
      }
      uint64_t v42 = (std::string *)((char *)v42 + 1);
    }
    uint64_t v44 = google::protobuf::Descriptor::FindFieldByName(v6, (uint64_t *)__p, v21);
    uint64_t FieldByName = v44;
    if (v44)
    {
      uint64_t v46 = *(std::once_flag::_State_type **)(v44 + 48);
      if (v46)
      {
        v141.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v140.__r_.__value_.__r.__words[0] = FieldByName;
        if (atomic_load_explicit((atomic_ullong *volatile)v46, memory_order_acquire) != -1)
        {
          v143.__r_.__value_.__r.__words[0] = (std::string::size_type)&v141;
          v143.__r_.__value_.__l.__size_ = (std::string::size_type)&v140;
          v142.__r_.__value_.__r.__words[0] = (std::string::size_type)&v143;
          std::__call_once(v46, &v142, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      if (*(_DWORD *)(FieldByName + 56) != 10) {
        uint64_t FieldByName = 0;
      }
    }
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (FieldByName)
    {
LABEL_90:
      uint64_t v47 = *(std::once_flag::_State_type **)(FieldByName + 48);
      if (v47)
      {
        v142.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
        v141.__r_.__value_.__r.__words[0] = FieldByName;
        if (atomic_load_explicit((atomic_ullong *volatile)v47, memory_order_acquire) != -1)
        {
          __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v142;
          __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v141;
          v143.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
          std::__call_once(v47, &v143, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      if (*(_DWORD *)(FieldByName + 56) != 10) {
        goto LABEL_170;
      }
      uint64_t v48 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)FieldByName);
      v49 = *(const void ***)v48;
      uint64_t v50 = *(unsigned __int8 *)(*(void *)v48 + 23);
      std::string v45 = *(const char **)(*(void *)v48 + 8);
      if ((v50 & 0x80u) == 0) {
        uint64_t v51 = *(unsigned __int8 *)(*(void *)v48 + 23);
      }
      else {
        uint64_t v51 = *(void *)(*(void *)v48 + 8);
      }
      std::string::size_type v52 = HIBYTE(v146.__r_.__value_.__r.__words[2]);
      if ((v146.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v52 = v146.__r_.__value_.__l.__size_;
      }
      if (v51 == v52)
      {
        if ((v146.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          size_t v53 = &v146;
        }
        else {
          size_t v53 = (std::string *)v146.__r_.__value_.__r.__words[0];
        }
        if ((v50 & 0x80) != 0)
        {
          if (!memcmp(*v49, v53, (size_t)v45)) {
            goto LABEL_170;
          }
        }
        else
        {
          if (!*(unsigned char *)(*(void *)v48 + 23)) {
            goto LABEL_170;
          }
          while (*(unsigned __int8 *)v49 == v53->__r_.__value_.__s.__data_[0])
          {
            v49 = (const void **)((char *)v49 + 1);
            size_t v53 = (std::string *)((char *)v53 + 1);
            if (!--v50) {
              goto LABEL_170;
            }
          }
        }
      }
    }
    if (*(unsigned char *)(a1 + 228))
    {
      if (SHIBYTE(v146.__r_.__value_.__r.__words[2]) < 0) {
        sub_1000BB834(__p, v146.__r_.__value_.__l.__data_, v146.__r_.__value_.__l.__size_);
      }
      else {
        __p[0] = v146;
      }
      uint64_t v56 = (std::string *)((char *)__p + HIBYTE(__p[0].__r_.__value_.__r.__words[2]));
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      {
        __int16 v57 = __p;
      }
      else
      {
        uint64_t v56 = (std::string *)(__p[0].__r_.__value_.__r.__words[0] + __p[0].__r_.__value_.__l.__size_);
        __int16 v57 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
      }
      while (v57 != v56)
      {
        int v58 = v57->__r_.__value_.__s.__data_[0];
        if ((v58 - 65) <= 0x19) {
          v57->__r_.__value_.__s.__data_[0] = v58 + 32;
        }
        __int16 v57 = (std::string *)((char *)v57 + 1);
      }
      uint64_t FieldByName = google::protobuf::Descriptor::FindFieldByLowercaseName(v6, (uint64_t *)__p, v45);
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      if (FieldByName) {
        goto LABEL_170;
      }
    }
    unint64_t v59 = *(unsigned int *)(v6 + 136);
    if ((int)v59 < 1)
    {
      BOOL v40 = 0;
      uint64_t FieldByName = 0;
    }
    else
    {
      uint64_t v134 = v7;
      uint64_t v60 = 0;
      uint64_t v61 = *(void *)(v6 + 96);
      uint64_t v62 = HIBYTE(v146.__r_.__value_.__r.__words[2]);
      long long v63 = *(_OWORD *)&v146.__r_.__value_.__l.__data_;
      if ((v146.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v64 = HIBYTE(v146.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v64 = v146.__r_.__value_.__l.__size_;
      }
      BOOL v40 = 1;
      do
      {
        v65 = *(unsigned __int8 ***)(v61 + 8 * v60);
        v66 = (unsigned __int8 *)*((unsigned __int8 *)v65 + 23);
        int v67 = (char)v66;
        if ((char)v66 < 0) {
          v66 = v65[1];
        }
        if ((unsigned __int8 *)v64 == v66)
        {
          if (v67 >= 0) {
            v68 = *(unsigned __int8 **)(v61 + 8 * v60);
          }
          else {
            v68 = *v65;
          }
          if ((v62 & 0x80) != 0)
          {
            uint64_t v133 = v6;
            unint64_t v71 = v59;
            int v72 = memcmp((const void *)v63, v68, *((size_t *)&v63 + 1));
            unint64_t v59 = v71;
            uint64_t v6 = v133;
            if (!v72) {
              break;
            }
          }
          else
          {
            if (!v62) {
              break;
            }
            v69 = &v146;
            uint64_t v70 = v62;
            while (v69->__r_.__value_.__s.__data_[0] == *v68)
            {
              v69 = (std::string *)((char *)v69 + 1);
              ++v68;
              if (!--v70) {
                goto LABEL_147;
              }
            }
          }
        }
        BOOL v40 = ++v60 < v59;
      }
      while (v60 != v59);
LABEL_147:
      uint64_t FieldByName = 0;
      uint64_t v7 = v134;
    }
  }
  if (!v40 && !FieldByName)
  {
    if (*(unsigned char *)(a1 + 229))
    {
      std::operator+<char>();
      v73 = std::string::append(&v141, "\" has no field named \"");
      long long v74 = *(_OWORD *)&v73->__r_.__value_.__l.__data_;
      v142.__r_.__value_.__r.__words[2] = v73->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v142.__r_.__value_.__l.__data_ = v74;
      v73->__r_.__value_.__l.__size_ = 0;
      v73->__r_.__value_.__r.__words[2] = 0;
      v73->__r_.__value_.__r.__words[0] = 0;
      if ((v146.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        unsigned int v31 = &v146;
      }
      else {
        unsigned int v31 = (std::string *)v146.__r_.__value_.__r.__words[0];
      }
      if ((v146.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type v32 = HIBYTE(v146.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type v32 = v146.__r_.__value_.__l.__size_;
      }
      goto LABEL_160;
    }
    std::operator+<char>();
    v116 = std::string::append(&v141, "\" has no field named \"");
    long long v117 = *(_OWORD *)&v116->__r_.__value_.__l.__data_;
    v142.__r_.__value_.__r.__words[2] = v116->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v142.__r_.__value_.__l.__data_ = v117;
    v116->__r_.__value_.__l.__size_ = 0;
    v116->__r_.__value_.__r.__words[2] = 0;
    v116->__r_.__value_.__r.__words[0] = 0;
    if ((v146.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      v118 = &v146;
    }
    else {
      v118 = (std::string *)v146.__r_.__value_.__r.__words[0];
    }
    if ((v146.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v119 = HIBYTE(v146.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v119 = v146.__r_.__value_.__l.__size_;
    }
    goto LABEL_279;
  }
  if (!FieldByName) {
    goto LABEL_177;
  }
LABEL_170:
  if (*(_DWORD *)(a1 + 224) == 1)
  {
    if (*(_DWORD *)(FieldByName + 60) != 3
      && google::protobuf::Reflection::HasField(v5, a2, (const google::protobuf::FieldDescriptor *)FieldByName))
    {
      std::operator+<char>();
      v79 = std::string::append(&v143, "\" is specified multiple times.");
      long long v80 = *(_OWORD *)&v79->__r_.__value_.__l.__data_;
      __p[0].__r_.__value_.__r.__words[2] = v79->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v80;
      v79->__r_.__value_.__l.__size_ = 0;
      v79->__r_.__value_.__r.__words[2] = 0;
      v79->__r_.__value_.__r.__words[0] = 0;
      sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)__p);
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v143.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_288;
      }
      v81 = (void *)v143.__r_.__value_.__r.__words[0];
      goto LABEL_287;
    }
    v86 = *(const std::string::value_type ***)(FieldByName + 88);
    if (v86 && google::protobuf::Reflection::HasOneof(v5, a2, *(void *)(FieldByName + 88)))
    {
      OneofFieldDescriptor = (const std::string::value_type ***)google::protobuf::Reflection::GetOneofFieldDescriptor(v5, a2, (uint64_t)v86);
      std::operator+<char>();
      v88 = std::string::append(&v139, "\" is specified along with field \"");
      long long v89 = *(_OWORD *)&v88->__r_.__value_.__l.__data_;
      v140.__r_.__value_.__r.__words[2] = v88->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v140.__r_.__value_.__l.__data_ = v89;
      v88->__r_.__value_.__l.__size_ = 0;
      v88->__r_.__value_.__r.__words[2] = 0;
      v88->__r_.__value_.__r.__words[0] = 0;
      int v90 = *((char *)*OneofFieldDescriptor + 23);
      if (v90 >= 0) {
        v91 = (const std::string::value_type *)*OneofFieldDescriptor;
      }
      else {
        v91 = **OneofFieldDescriptor;
      }
      if (v90 >= 0) {
        std::string::size_type v92 = *((unsigned __int8 *)*OneofFieldDescriptor + 23);
      }
      else {
        std::string::size_type v92 = (std::string::size_type)(*OneofFieldDescriptor)[1];
      }
      v93 = std::string::append(&v140, v91, v92);
      long long v94 = *(_OWORD *)&v93->__r_.__value_.__l.__data_;
      v141.__r_.__value_.__r.__words[2] = v93->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v141.__r_.__value_.__l.__data_ = v94;
      v93->__r_.__value_.__l.__size_ = 0;
      v93->__r_.__value_.__r.__words[2] = 0;
      v93->__r_.__value_.__r.__words[0] = 0;
      v95 = std::string::append(&v141, "\", another member of oneof \"");
      long long v96 = *(_OWORD *)&v95->__r_.__value_.__l.__data_;
      v142.__r_.__value_.__r.__words[2] = v95->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v142.__r_.__value_.__l.__data_ = v96;
      v95->__r_.__value_.__l.__size_ = 0;
      v95->__r_.__value_.__r.__words[2] = 0;
      v95->__r_.__value_.__r.__words[0] = 0;
      int v97 = (*v86)[23];
      if (v97 >= 0) {
        v98 = *v86;
      }
      else {
        v98 = *(const std::string::value_type **)*v86;
      }
      if (v97 >= 0) {
        std::string::size_type v99 = *((unsigned __int8 *)*v86 + 23);
      }
      else {
        std::string::size_type v99 = *((void *)*v86 + 1);
      }
      v100 = std::string::append(&v142, v98, v99);
      long long v101 = *(_OWORD *)&v100->__r_.__value_.__l.__data_;
      v143.__r_.__value_.__r.__words[2] = v100->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v143.__r_.__value_.__l.__data_ = v101;
      v100->__r_.__value_.__l.__size_ = 0;
      v100->__r_.__value_.__r.__words[2] = 0;
      v100->__r_.__value_.__r.__words[0] = 0;
      v102 = std::string::append(&v143, "\".");
      long long v103 = *(_OWORD *)&v102->__r_.__value_.__l.__data_;
      __p[0].__r_.__value_.__r.__words[2] = v102->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v103;
      v102->__r_.__value_.__l.__size_ = 0;
      v102->__r_.__value_.__r.__words[2] = 0;
      v102->__r_.__value_.__r.__words[0] = 0;
      sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)__p);
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v143.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v142.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v142.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v141.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v141.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v140.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v140.__r_.__value_.__l.__data_);
      }
      if ((SHIBYTE(v139.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
        goto LABEL_288;
      }
      v81 = (void *)v139.__r_.__value_.__r.__words[0];
LABEL_287:
      operator delete(v81);
      goto LABEL_288;
    }
  }
  v104 = *(std::once_flag::_State_type **)(FieldByName + 48);
  if (v104)
  {
    v142.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v141.__r_.__value_.__r.__words[0] = FieldByName;
    if (atomic_load_explicit((atomic_ullong *volatile)v104, memory_order_acquire) != -1)
    {
      __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v142;
      __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v141;
      v143.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
      std::__call_once(v104, &v143, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByName + 56)] != 10)
  {
    sub_1000BBA84(__p, ":");
    char v109 = sub_10013F6C4(a1, (unsigned __int8 *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if ((v109 & 1) == 0) {
      goto LABEL_288;
    }
LABEL_224:
    if (*(_DWORD *)(FieldByName + 60) == 3)
    {
      sub_1000BBA84(__p, "[");
      int v110 = sub_10013F478(a1, (unsigned __int8 *)__p);
      if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      if (v110)
      {
        sub_1000BBA84(__p, "]");
        char v111 = sub_10013F478(a1, (unsigned __int8 *)__p);
        if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p[0].__r_.__value_.__l.__data_);
        }
        if ((v111 & 1) == 0)
        {
          while (1)
          {
            v112 = *(std::once_flag::_State_type **)(FieldByName + 48);
            if (v112)
            {
              v142.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
              v141.__r_.__value_.__r.__words[0] = FieldByName;
              if (atomic_load_explicit((atomic_ullong *volatile)v112, memory_order_acquire) != -1)
              {
                __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v142;
                __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v141;
                v143.__r_.__value_.__r.__words[0] = (std::string::size_type)__p;
                std::__call_once(v112, &v143, (void (__cdecl *)(void *))sub_1000BB820);
              }
            }
            if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*(unsigned int *)(FieldByName + 56)] == 10)
            {
              if ((sub_100140624(a1, a2, v5, (google::protobuf::FieldDescriptor *)FieldByName) & 1) == 0) {
                goto LABEL_288;
              }
            }
            else if (!sub_10014090C(a1, a2, v5, (google::protobuf::FieldDescriptor *)FieldByName))
            {
              goto LABEL_288;
            }
            sub_1000BBA84(__p, "]");
            char v113 = sub_10013F478(a1, (unsigned __int8 *)__p);
            if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p[0].__r_.__value_.__l.__data_);
            }
            if (v113) {
              break;
            }
            sub_1000BBA84(__p, ",");
            char v114 = sub_10013F6C4(a1, (unsigned __int8 *)__p);
            if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p[0].__r_.__value_.__l.__data_);
            }
            uint64_t v25 = 0;
            if ((v114 & 1) == 0) {
              goto LABEL_289;
            }
          }
        }
        goto LABEL_297;
      }
    }
    if (sub_10012E9B4(FieldByName) == 10)
    {
      if (sub_100140624(a1, a2, v5, (google::protobuf::FieldDescriptor *)FieldByName)) {
        goto LABEL_297;
      }
    }
    else if (sub_10014090C(a1, a2, v5, (google::protobuf::FieldDescriptor *)FieldByName))
    {
      goto LABEL_297;
    }
LABEL_288:
    uint64_t v25 = 0;
    goto LABEL_289;
  }
  sub_1000BBA84(__p, ":");
  int v105 = sub_10013F478(a1, (unsigned __int8 *)__p);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  if (!v105 || !*(unsigned char *)(*(void *)(FieldByName + 120) + 79) || *(_DWORD *)(a1 + 40) != 5) {
    goto LABEL_224;
  }
  memset(__p, 0, 24);
  BOOL v106 = sub_100140534(a1, __p);
  if (v106)
  {
    uint64_t v107 = *(void *)(a1 + 8);
    if (v107) {
      v108 = (google::protobuf::MessageFactory *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)v107 + 40))(v107, FieldByName);
    }
    else {
      v108 = 0;
    }
    v129 = google::protobuf::Reflection::MutableMessage(v5, a2, (const google::protobuf::FieldDescriptor *)FieldByName, v108);
    google::protobuf::MessageLite::ParseFromString(v129, __p);
  }
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  if (!v106) {
    goto LABEL_288;
  }
LABEL_297:
  sub_1000BBA84(__p, ";");
  if ((sub_10013F478(a1, (unsigned __int8 *)__p) & 1) == 0)
  {
    sub_1000BBA84(&v143, ",");
    sub_10013F478(a1, (unsigned __int8 *)&v143);
    if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v143.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
  if (*(unsigned char *)(*(void *)(FieldByName + 120) + 78))
  {
    std::operator+<char>();
    v130 = std::string::append(&v143, "\"");
    long long v131 = *(_OWORD *)&v130->__r_.__value_.__l.__data_;
    __p[0].__r_.__value_.__r.__words[2] = v130->__r_.__value_.__r.__words[2];
    *(_OWORD *)&__p[0].__r_.__value_.__l.__data_ = v131;
    v130->__r_.__value_.__l.__size_ = 0;
    v130->__r_.__value_.__r.__words[2] = 0;
    v130->__r_.__value_.__r.__words[0] = 0;
    sub_10013DBB0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)__p);
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v143.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v143.__r_.__value_.__l.__data_);
    }
  }
  v132 = *(uint64_t ***)(a1 + 16);
  if (v132) {
    google::protobuf::TextFormat::ParseInfoTree::RecordLocation(v132, FieldByName, v7);
  }
  uint64_t v25 = 1;
LABEL_289:
  if (SHIBYTE(v146.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v146.__r_.__value_.__l.__data_);
  }
  return v25;
}

void sub_10013F16C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,int a37,__int16 a38,char a39,char a40,void *a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,uint64_t a47,void *__p,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  if (a53 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v53 - 169) < 0) {
    operator delete(*(void **)(v53 - 192));
  }
  if (*(char *)(v53 - 137) < 0) {
    operator delete(*(void **)(v53 - 160));
  }
  if (a18 < 0) {
    operator delete(a13);
  }
  if (*(char *)(v53 - 97) < 0) {
    operator delete(*(void **)(v53 - 120));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10013F478(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 71);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 71);
  }
  else {
    uint64_t v3 = *(void *)(a1 + 56);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  uint64_t v7 = (const void **)(a1 + 48);
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0)
  {
    if (!memcmp(*v7, a2, *(void *)(a1 + 56))) {
      goto LABEL_16;
    }
    return 0;
  }
  if (*(unsigned char *)(a1 + 71))
  {
    while (*(unsigned __int8 *)v7 == *a2)
    {
      uint64_t v7 = (const void **)((char *)v7 + 1);
      ++a2;
      if (!--v2) {
        goto LABEL_16;
      }
    }
    return 0;
  }
LABEL_16:
  google::protobuf::io::Tokenizer::Next((google::protobuf::io::Tokenizer *)(a1 + 40));
  return 1;
}

uint64_t sub_10013F524(uint64_t a1, std::string *a2, std::string *this)
{
  uint64_t result = sub_10013FCC0(a1, this);
  if (result)
  {
    while (1)
    {
      sub_1000BBA84(&__p, ".");
      int v7 = sub_10013F478(a1, (unsigned __int8 *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (!v7) {
        break;
      }
      memset(&__p, 0, sizeof(__p));
      char v8 = sub_10013FCC0(a1, &__p);
      if (v8)
      {
        std::operator+<char>();
        if ((v14 & 0x80u) == 0) {
          int v9 = v13;
        }
        else {
          int v9 = (void **)v13[0];
        }
        if ((v14 & 0x80u) == 0) {
          std::string::size_type v10 = v14;
        }
        else {
          std::string::size_type v10 = (std::string::size_type)v13[1];
        }
        std::string::append(this, (const std::string::value_type *)v9, v10);
        if ((char)v14 < 0) {
          operator delete(v13[0]);
        }
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if ((v8 & 1) == 0) {
          return 0;
        }
      }
      else if ((v8 & 1) == 0)
      {
        return 0;
      }
    }
    sub_1000BBA84(&__p, "/");
    char v11 = sub_10013F6C4(a1, (unsigned __int8 *)&__p);
    char v12 = v11;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      operator delete(__p.__r_.__value_.__l.__data_);
      if (v12) {
        goto LABEL_21;
      }
    }
    else if (v11)
    {
LABEL_21:
      std::string::append(this, "/");
      return sub_10013FBB8(a1, a2);
    }
    return 0;
  }
  return result;
}

void sub_10013F684(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10013F6C4(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v3 = (const void **)(a1 + 48);
  uint64_t v4 = *(unsigned __int8 *)(a1 + 71);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = *(unsigned __int8 *)(a1 + 71);
  }
  else {
    uint64_t v5 = *(void *)(a1 + 56);
  }
  uint64_t v6 = a2[23];
  int v7 = (char)v6;
  if ((v6 & 0x80u) != 0) {
    uint64_t v6 = *((void *)a2 + 1);
  }
  if (v5 == v6)
  {
    if (v7 < 0) {
      a2 = *(unsigned __int8 **)a2;
    }
    if ((v4 & 0x80) == 0)
    {
      if (*(unsigned char *)(a1 + 71))
      {
        char v8 = (unsigned __int8 *)(a1 + 48);
        while (*v8 == *a2)
        {
          ++v8;
          ++a2;
          if (!--v4) {
            goto LABEL_31;
          }
        }
        goto LABEL_16;
      }
LABEL_31:
      google::protobuf::io::Tokenizer::Next((google::protobuf::io::Tokenizer *)(a1 + 40));
      return 1;
    }
    if (!memcmp(*v3, a2, *(void *)(a1 + 56))) {
      goto LABEL_31;
    }
  }
LABEL_16:
  std::operator+<char>();
  int v9 = std::string::append(&v19, "\", found \"");
  long long v10 = *(_OWORD *)&v9->__r_.__value_.__l.__data_;
  v20.__r_.__value_.__r.__words[2] = v9->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v20.__r_.__value_.__l.__data_ = v10;
  v9->__r_.__value_.__l.__size_ = 0;
  v9->__r_.__value_.__r.__words[2] = 0;
  v9->__r_.__value_.__r.__words[0] = 0;
  int v11 = *(char *)(a1 + 71);
  if (v11 >= 0) {
    char v12 = (const std::string::value_type *)v3;
  }
  else {
    char v12 = *(const std::string::value_type **)(a1 + 48);
  }
  if (v11 >= 0) {
    std::string::size_type v13 = *(unsigned __int8 *)(a1 + 71);
  }
  else {
    std::string::size_type v13 = *(void *)(a1 + 56);
  }
  unsigned __int8 v14 = std::string::append(&v20, v12, v13);
  long long v15 = *(_OWORD *)&v14->__r_.__value_.__l.__data_;
  v21.__r_.__value_.__r.__words[2] = v14->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v21.__r_.__value_.__l.__data_ = v15;
  v14->__r_.__value_.__l.__size_ = 0;
  v14->__r_.__value_.__r.__words[2] = 0;
  v14->__r_.__value_.__r.__words[0] = 0;
  char v16 = std::string::append(&v21, "\".");
  long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
  std::string::size_type v23 = v16->__r_.__value_.__r.__words[2];
  long long v22 = v17;
  v16->__r_.__value_.__l.__size_ = 0;
  v16->__r_.__value_.__r.__words[2] = 0;
  v16->__r_.__value_.__r.__words[0] = 0;
  sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&v22);
  if (SHIBYTE(v23) < 0) {
    operator delete((void *)v22);
  }
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_10013F874(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (*(char *)(v28 - 41) < 0) {
    operator delete(*(void **)(v28 - 64));
  }
  if (a28 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10013F8D8(uint64_t a1, const google::protobuf::Descriptor *a2, std::string *a3)
{
  google::protobuf::DynamicMessageFactory::DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)v19);
  uint64_t Prototype = google::protobuf::DynamicMessageFactory::GetPrototype((google::protobuf::DynamicMessageFactory *)v19, a2);
  if (!Prototype)
  {
    uint64_t v8 = 0;
    goto LABEL_25;
  }
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(*(void *)Prototype + 24))(Prototype);
  memset(&v18, 0, sizeof(v18));
  if ((sub_100141510(a1, &v18) & 1) == 0) {
    goto LABEL_20;
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    sub_1000BB834(&__p, v18.__r_.__value_.__l.__data_, v18.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v18;
  }
  char v9 = sub_1001415FC(a1, v7, (unsigned __int8 *)&__p);
  char v10 = v9;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(__p.__r_.__value_.__l.__data_);
    if ((v10 & 1) == 0)
    {
LABEL_20:
      uint64_t v8 = 0;
      goto LABEL_21;
    }
  }
  else if ((v9 & 1) == 0)
  {
    goto LABEL_20;
  }
  if (*(unsigned char *)(a1 + 233))
  {
    google::protobuf::MessageLite::AppendPartialToString(v7, a3);
  }
  else
  {
    if (((*(uint64_t (**)(uint64_t))(*(void *)v7 + 48))(v7) & 1) == 0)
    {
      std::operator+<char>();
      int v11 = std::string::append(&v14, "\" stored in google.protobuf.Any has missing required fields");
      long long v12 = *(_OWORD *)&v11->__r_.__value_.__l.__data_;
      std::string::size_type v16 = v11->__r_.__value_.__r.__words[2];
      *(_OWORD *)long long v15 = v12;
      v11->__r_.__value_.__l.__size_ = 0;
      v11->__r_.__value_.__r.__words[2] = 0;
      v11->__r_.__value_.__r.__words[0] = 0;
      sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)v15);
      if (SHIBYTE(v16) < 0) {
        operator delete(v15[0]);
      }
      if (SHIBYTE(v14.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v14.__r_.__value_.__l.__data_);
      }
      goto LABEL_20;
    }
    google::protobuf::MessageLite::AppendToString(v7, a3);
  }
  uint64_t v8 = 1;
LABEL_21:
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  if (v7) {
    (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
  }
LABEL_25:
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)v19);
  return v8;
}

void sub_10013FB0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (v36) {
    (*(void (**)(uint64_t))(*(void *)v36 + 8))(v36);
  }
  google::protobuf::DynamicMessageFactory::~DynamicMessageFactory((google::protobuf::DynamicMessageFactory *)&a36);
  _Unwind_Resume(a1);
}

uint64_t sub_10013FBB8(uint64_t a1, std::string *a2)
{
  uint64_t result = sub_10013FCC0(a1, a2);
  if (result)
  {
    while (1)
    {
      sub_1000BBA84(&__p, ".");
      int v5 = sub_10013F478(a1, (unsigned __int8 *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (!v5) {
        break;
      }
      memset(&__p, 0, sizeof(__p));
      char v6 = sub_10013FCC0(a1, &__p);
      if (v6)
      {
        std::string::append(a2, ".");
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        else {
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        }
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        }
        else {
          std::string::size_type size = __p.__r_.__value_.__l.__size_;
        }
        std::string::append(a2, (const std::string::value_type *)p_p, size);
      }
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(__p.__r_.__value_.__l.__data_);
        if ((v6 & 1) == 0) {
          return v5 ^ 1u;
        }
      }
      else if ((v6 & 1) == 0)
      {
        return v5 ^ 1u;
      }
    }
    return v5 ^ 1u;
  }
  return result;
}

void sub_10013FCA0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10013FCC0(uint64_t a1, std::string *this)
{
  uint64_t v4 = (google::protobuf::io::Tokenizer *)(a1 + 40);
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3 == 2) {
    goto LABEL_5;
  }
  if (*(unsigned char *)(a1 + 232) || *(unsigned char *)(a1 + 229))
  {
    if (v3 == 3)
    {
LABEL_5:
      std::string::operator=(this, (const std::string *)(a1 + 48));
      google::protobuf::io::Tokenizer::Next(v4);
      return 1;
    }
  }
  else if (v3 == 3 && *(unsigned char *)(a1 + 230) != 0)
  {
    goto LABEL_5;
  }
  std::operator+<char>();
  sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&__p);
  if (v8 < 0) {
    operator delete(__p);
  }
  return 0;
}

void sub_10013FD78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10013FD94(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *(unsigned __int8 *)(a1 + 71);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = *(unsigned __int8 *)(a1 + 71);
  }
  else {
    uint64_t v3 = *(void *)(a1 + 56);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  char v6 = (const void **)(a1 + 48);
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*v6, a2, *(void *)(a1 + 56)) == 0;
  }
  if (!*(unsigned char *)(a1 + 71)) {
    return 1;
  }
  uint64_t v7 = v2 - 1;
  do
  {
    int v9 = *(unsigned __int8 *)v6;
    char v6 = (const void **)((char *)v6 + 1);
    int v8 = v9;
    int v11 = *a2++;
    int v10 = v11;
    BOOL v13 = v7-- != 0;
    uint64_t result = v8 == v10;
  }
  while (v8 == v10 && v13);
  return result;
}

uint64_t sub_10013FE38(uint64_t a1, uint64_t a2, char *a3)
{
  int v4 = *(_DWORD *)(a1 + 240);
  *(_DWORD *)(a1 + 24google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v4 - 1;
  if (v4 > 0)
  {
    int v5 = (_DWORD *)(a1 + 40);
    if (*(_DWORD *)(a1 + 40) == 5)
    {
      do
        google::protobuf::io::Tokenizer::Next((google::protobuf::io::Tokenizer *)(a1 + 40));
      while (*v5 == 5);
      goto LABEL_33;
    }
    sub_1000BBA84(&__dst, "[");
    int v8 = sub_10013F478(a1, (unsigned __int8 *)&__dst);
    int v9 = v8;
    if ((SHIBYTE(v32) & 0x80000000) == 0)
    {
      if (v8) {
        goto LABEL_10;
      }
LABEL_29:
      sub_1000BBA84(&__dst, "-");
      int v17 = sub_10013F478(a1, (unsigned __int8 *)&__dst);
      if (SHIBYTE(v32) < 0) {
        operator delete((void *)__dst);
      }
      if ((*v5 - 3) < 2) {
        goto LABEL_32;
      }
      if (*v5 != 2)
      {
        if (*(char *)(a1 + 71) < 0)
        {
          sub_1000BB834(&__dst, *(void **)(a1 + 48), *(void *)(a1 + 56));
        }
        else
        {
          long long __dst = *(_OWORD *)(a1 + 48);
          uint64_t v32 = *(void *)(a1 + 64);
        }
LABEL_41:
        std::operator+<char>();
        sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)v28);
        if (v30 < 0) {
          operator delete(v28[0]);
        }
        ++*(_DWORD *)(a1 + 240);
        if ((SHIBYTE(v32) & 0x80000000) == 0) {
          return 0;
        }
        uint64_t v7 = (void *)__dst;
        goto LABEL_7;
      }
      if (!v17)
      {
LABEL_32:
        google::protobuf::io::Tokenizer::Next((google::protobuf::io::Tokenizer *)(a1 + 40));
LABEL_33:
        ++*(_DWORD *)(a1 + 240);
        return 1;
      }
      if (*(char *)(a1 + 71) < 0)
      {
        sub_1000BB834(&__dst, *(void **)(a1 + 48), *(void *)(a1 + 56));
      }
      else
      {
        long long __dst = *(_OWORD *)(a1 + 48);
        uint64_t v32 = *(void *)(a1 + 64);
      }
      int v18 = HIBYTE(v32);
      p_dst = (long long *)__dst;
      if (v32 >= 0) {
        std::string v20 = (char *)&__dst + HIBYTE(v32);
      }
      else {
        std::string v20 = (char *)(__dst + *((void *)&__dst + 1));
      }
      if (v32 >= 0) {
        p_dst = &__dst;
      }
      if (p_dst != (long long *)v20)
      {
        do
        {
          int v21 = *(unsigned __int8 *)p_dst;
          if ((v21 - 65) <= 0x19) {
            *(unsigned char *)p_dst = v21 + 32;
          }
          p_dst = (long long *)((char *)p_dst + 1);
        }
        while (p_dst != (long long *)v20);
        int v18 = HIBYTE(v32);
      }
      if ((v18 & 0x80) != 0)
      {
        if (*((void *)&__dst + 1) == 3)
        {
          long long v22 = (unsigned __int16 *)__dst;
LABEL_63:
          int v23 = *v22;
          int v24 = *((unsigned __int8 *)v22 + 2);
          if (v23 == 28265 && v24 == 102)
          {
LABEL_69:
            if (SHIBYTE(v32) < 0) {
              operator delete((void *)__dst);
            }
            goto LABEL_32;
          }
        }
      }
      else if (v18 == 3)
      {
        long long v22 = (unsigned __int16 *)&__dst;
        goto LABEL_63;
      }
      if (!sub_1000D3D50(&__dst, "infinity") || !sub_1000D3D50(&__dst, "nan")) {
        goto LABEL_69;
      }
      goto LABEL_41;
    }
    operator delete((void *)__dst);
    if (!v9) {
      goto LABEL_29;
    }
    while (1)
    {
LABEL_10:
      sub_1000BBA84(&__dst, "{");
      if (sub_10013FD94(a1, (unsigned __int8 *)&__dst))
      {
        int v12 = 0;
      }
      else
      {
        sub_1000BBA84(v28, "<");
        int v13 = sub_10013FD94(a1, (unsigned __int8 *)v28);
        if (v30 < 0) {
          operator delete(v28[0]);
        }
        int v12 = v13 ^ 1;
      }
      if (SHIBYTE(v32) < 0)
      {
        operator delete((void *)__dst);
        if (v12)
        {
LABEL_17:
          if ((sub_10013FE38(a1) & 1) == 0) {
            return 0;
          }
          goto LABEL_21;
        }
      }
      else if (v12)
      {
        goto LABEL_17;
      }
      uint64_t result = sub_100140310(a1, v10, v11);
      if (!result) {
        return result;
      }
LABEL_21:
      sub_1000BBA84(&__dst, "]");
      char v15 = sub_10013F478(a1, (unsigned __int8 *)&__dst);
      if (SHIBYTE(v32) < 0) {
        operator delete((void *)__dst);
      }
      if (v15) {
        goto LABEL_33;
      }
      sub_1000BBA84(&__dst, ",");
      char v16 = sub_10013F6C4(a1, (unsigned __int8 *)&__dst);
      if (SHIBYTE(v32) < 0) {
        operator delete((void *)__dst);
      }
      if ((v16 & 1) == 0) {
        return 0;
      }
    }
  }
  *(void *)&long long __dst = "Message is too deep, the parser exceeded the configured recursion limit of ";
  *((void *)&__dst + 1) = 75;
  char v6 = (google::protobuf *)*(unsigned int *)(a1 + 236);
  v28[0] = v29;
  v28[1] = (void *)(google::protobuf::FastInt32ToBufferLeft(v6, v29, a3) - v29);
  v27[0] = ".";
  v27[1] = 1;
  google::protobuf::StrCat((uint64_t)&__dst, (uint64_t)v28, (uint64_t)v27, &__p);
  sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    uint64_t v7 = (void *)__p.__r_.__value_.__r.__words[0];
LABEL_7:
    operator delete(v7);
  }
  return 0;
}

void sub_1001402A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v27 - 89) < 0) {
    operator delete(*(void **)(v27 - 112));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100140310(uint64_t a1, uint64_t a2, char *a3)
{
  int v4 = *(_DWORD *)(a1 + 240);
  *(_DWORD *)(a1 + 24google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v4 - 1;
  if (v4 <= 0)
  {
    v15[0].__r_.__value_.__r.__words[0] = (std::string::size_type)"Message is too deep, the parser exceeded the configure"
                                                                  "d recursion limit of ";
    v15[0].__r_.__value_.__l.__size_ = 75;
    uint64_t v7 = (google::protobuf *)*(unsigned int *)(a1 + 236);
    v13[0] = v14;
    v13[1] = (void *)(google::protobuf::FastInt32ToBufferLeft(v7, v14, a3) - v14);
    __p[0] = ".";
    __p[1] = (void *)1;
    google::protobuf::StrCat((uint64_t)v15, (uint64_t)v13, (uint64_t)__p, &v10);
    sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&v10);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v10.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  else
  {
    memset(v15, 0, 24);
    if (!sub_100141510(a1, v15)) {
      goto LABEL_18;
    }
    while (1)
    {
      sub_1000BBA84(v13, ">");
      if (sub_10013FD94(a1, (unsigned __int8 *)v13))
      {
        int v5 = 0;
      }
      else
      {
        sub_1000BBA84(__p, "}");
        int v6 = sub_10013FD94(a1, (unsigned __int8 *)__p);
        if (v12 < 0) {
          operator delete(__p[0]);
        }
        int v5 = v6 ^ 1;
      }
      if ((v14[7] & 0x80000000) != 0) {
        operator delete(v13[0]);
      }
      if (!v5) {
        break;
      }
      if ((sub_1001416F4(a1) & 1) == 0) {
        goto LABEL_18;
      }
    }
    if (sub_10013F6C4(a1, (unsigned __int8 *)v15))
    {
      ++*(_DWORD *)(a1 + 240);
      uint64_t v8 = 1;
    }
    else
    {
LABEL_18:
      uint64_t v8 = 0;
    }
    if (SHIBYTE(v15[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15[0].__r_.__value_.__l.__data_);
    }
  }
  return v8;
}

void sub_1001404DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100140534(uint64_t a1, std::string *this)
{
  uint64_t v3 = (google::protobuf::io::Tokenizer *)(a1 + 40);
  int v4 = *(_DWORD *)(a1 + 40);
  if (v4 == 5)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    {
      *this->__r_.__value_.__l.__data_ = 0;
      this->__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      this->__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&this->__r_.__value_.__s + 23) = 0;
    }
    if (*(_DWORD *)v3 == 5)
    {
      int v6 = (unsigned __int8 *)(a1 + 48);
      do
      {
        google::protobuf::io::Tokenizer::ParseStringAppend(v6, this);
        google::protobuf::io::Tokenizer::Next(v3);
      }
      while (*(_DWORD *)v3 == 5);
    }
  }
  else
  {
    std::operator+<char>();
    sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&__p);
    if (v9 < 0) {
      operator delete(__p);
    }
  }
  return v4 == 5;
}

void sub_100140608(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100140624(uint64_t a1, google::protobuf::Message *a2, google::protobuf::Reflection *a3, google::protobuf::FieldDescriptor *a4)
{
  int v5 = *(_DWORD *)(a1 + 240);
  *(_DWORD *)(a1 + 24google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v5 - 1;
  if (v5 > 0)
  {
    if (*(void *)(a1 + 16)) {
      google::protobuf::TextFormat::ParseInfoTree::CreateNested(*(uint64_t ***)(a1 + 16), a4);
    }
    memset(v24, 0, 24);
    if ((sub_100141510(a1, v24) & 1) == 0) {
      goto LABEL_25;
    }
    uint64_t v9 = *(void *)(a1 + 8);
    if (v9) {
      std::string v10 = (google::protobuf::MessageFactory *)(*(uint64_t (**)(uint64_t, google::protobuf::FieldDescriptor *))(*(void *)v9 + 40))(v9, a4);
    }
    else {
      std::string v10 = 0;
    }
    if (*((_DWORD *)a4 + 15) == 3)
    {
      uint64_t v13 = google::protobuf::Reflection::AddMessage(a3, a2, a4, v10);
      if (SHIBYTE(v24[0].__r_.__value_.__r.__words[2]) < 0) {
        sub_1000BB834(&__dst, v24[0].__r_.__value_.__l.__data_, v24[0].__r_.__value_.__l.__size_);
      }
      else {
        std::string __dst = v24[0];
      }
      char v15 = sub_1001415FC(a1, v13, (unsigned __int8 *)&__dst);
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
      {
        char v16 = (void *)__dst.__r_.__value_.__r.__words[0];
        goto LABEL_24;
      }
    }
    else
    {
      std::string v14 = google::protobuf::Reflection::MutableMessage(a3, a2, a4, v10);
      if (SHIBYTE(v24[0].__r_.__value_.__r.__words[2]) < 0) {
        sub_1000BB834(&v18, v24[0].__r_.__value_.__l.__data_, v24[0].__r_.__value_.__l.__size_);
      }
      else {
        std::string v18 = v24[0];
      }
      char v15 = sub_1001415FC(a1, (uint64_t)v14, (unsigned __int8 *)&v18);
      if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0)
      {
        char v16 = (void *)v18.__r_.__value_.__r.__words[0];
LABEL_24:
        operator delete(v16);
        if ((v15 & 1) == 0) {
          goto LABEL_25;
        }
        goto LABEL_22;
      }
    }
    if ((v15 & 1) == 0)
    {
LABEL_25:
      uint64_t v12 = 0;
LABEL_26:
      if (SHIBYTE(v24[0].__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v24[0].__r_.__value_.__l.__data_);
      }
      return v12;
    }
LABEL_22:
    ++*(_DWORD *)(a1 + 240);
    *(void *)(a1 + 16) = 0;
    uint64_t v12 = 1;
    goto LABEL_26;
  }
  v24[0].__r_.__value_.__r.__words[0] = (std::string::size_type)"Message is too deep, the parser exceeded the configured "
                                                                "recursion limit of ";
  v24[0].__r_.__value_.__l.__size_ = 75;
  int v11 = (google::protobuf *)*(unsigned int *)(a1 + 236);
  v22[0] = v23;
  v22[1] = google::protobuf::FastInt32ToBufferLeft(v11, v23, (char *)a3) - v23;
  v21[0] = ".";
  v21[1] = 1;
  google::protobuf::StrCat((uint64_t)v24, (uint64_t)v22, (uint64_t)v21, &__p);
  sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return 0;
}

void sub_1001408A4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v28 - 97) < 0) {
    operator delete(*(void **)(v28 - 120));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10014090C(uint64_t a1, google::protobuf::Message *a2, google::protobuf::Reflection *a3, google::protobuf::FieldDescriptor *this)
{
  int v4 = (const std::string::value_type ***)this;
  uint64_t v8 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v8)
  {
    __dst.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::TypeOnceInit;
    v56.__r_.__value_.__r.__words[0] = (std::string::size_type)this;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      v61.__r_.__value_.__r.__words[0] = (std::string::size_type)&__dst;
      v61.__r_.__value_.__l.__size_ = (std::string::size_type)&v56;
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v61;
      std::__call_once(v8, &__p, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  switch(*((_DWORD *)v4 + 14))
  {
    case 1:
      v61.__r_.__value_.__r.__words[0] = 0;
      if (!sub_100141C80(a1, (double *)&v61)) {
        goto LABEL_152;
      }
      if (*((_DWORD *)v4 + 15) == 3) {
        google::protobuf::Reflection::AddDouble(a3, a2, (const google::protobuf::FieldDescriptor *)v4, *(double *)&v61.__r_.__value_.__l.__data_);
      }
      else {
        google::protobuf::Reflection::SetDouble(a3, a2, (const google::protobuf::FieldDescriptor *)v4, *(double *)&v61.__r_.__value_.__l.__data_);
      }
      goto LABEL_151;
    case 2:
      v61.__r_.__value_.__r.__words[0] = 0;
      std::string v14 = (google::protobuf::io *)sub_100141C80(a1, (double *)&v61);
      if (!v14) {
        goto LABEL_152;
      }
      BOOL v15 = *((_DWORD *)v4 + 15) == 3;
      float v16 = google::protobuf::io::SafeDoubleToFloat(v14, *(double *)&v61.__r_.__value_.__l.__data_);
      if (v15) {
        google::protobuf::Reflection::AddFloat(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v16);
      }
      else {
        google::protobuf::Reflection::SetFloat(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v16);
      }
      goto LABEL_151;
    case 3:
    case 0x10:
    case 0x12:
      v61.__r_.__value_.__r.__words[0] = 0;
      if (!sub_100141A7C(a1, (uint64_t *)&v61, 0x7FFFFFFFFFFFFFFFLL)) {
        goto LABEL_152;
      }
      if (*((_DWORD *)v4 + 15) == 3) {
        google::protobuf::Reflection::AddInt64(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (uint64_t)v61.__r_.__value_.__l.__data_);
      }
      else {
        google::protobuf::Reflection::SetInt64(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (uint64_t)v61.__r_.__value_.__l.__data_);
      }
      goto LABEL_151;
    case 4:
    case 6:
      v61.__r_.__value_.__r.__words[0] = 0;
      if (!sub_100141B28(a1, (unint64_t *)&v61, 0xFFFFFFFFFFFFFFFFLL)) {
        goto LABEL_152;
      }
      if (*((_DWORD *)v4 + 15) == 3) {
        google::protobuf::Reflection::AddUInt64(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (uint64_t)v61.__r_.__value_.__l.__data_);
      }
      else {
        google::protobuf::Reflection::SetUInt64(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v61.__r_.__value_.__r.__words[0]);
      }
      goto LABEL_151;
    case 5:
    case 0xF:
    case 0x11:
      v61.__r_.__value_.__r.__words[0] = 0;
      if (!sub_100141A7C(a1, (uint64_t *)&v61, 0x7FFFFFFFLL)) {
        goto LABEL_152;
      }
      if (*((_DWORD *)v4 + 15) == 3) {
        google::protobuf::Reflection::AddInt32(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (int)v61.__r_.__value_.__l.__data_);
      }
      else {
        google::protobuf::Reflection::SetInt32(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (int)v61.__r_.__value_.__l.__data_);
      }
      goto LABEL_151;
    case 7:
    case 0xD:
      v61.__r_.__value_.__r.__words[0] = 0;
      if (!sub_100141B28(a1, (unint64_t *)&v61, 0xFFFFFFFFuLL)) {
        goto LABEL_152;
      }
      if (*((_DWORD *)v4 + 15) == 3) {
        google::protobuf::Reflection::AddUInt32(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (int)v61.__r_.__value_.__l.__data_);
      }
      else {
        google::protobuf::Reflection::SetUInt32(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v61.__r_.__value_.__l.__data_);
      }
      goto LABEL_151;
    case 8:
      if (*(_DWORD *)(a1 + 40) == 3)
      {
        v61.__r_.__value_.__r.__words[0] = 0;
        if (!sub_100141B28(a1, (unint64_t *)&v61, 1uLL)) {
          goto LABEL_152;
        }
        if (*((_DWORD *)v4 + 15) == 3) {
          google::protobuf::Reflection::AddBool(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v61.__r_.__value_.__r.__words[0] != 0);
        }
        else {
          google::protobuf::Reflection::SetBool(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v61.__r_.__value_.__r.__words[0] != 0);
        }
        goto LABEL_151;
      }
      memset(&v61, 0, sizeof(v61));
      if ((sub_10013FCC0(a1, &v61) & 1) == 0) {
        goto LABEL_147;
      }
      if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0)
      {
        if (v61.__r_.__value_.__l.__size_ != 4) {
          goto LABEL_90;
        }
        std::string v18 = (std::string *)v61.__r_.__value_.__r.__words[0];
      }
      else
      {
        if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) != 4) {
          goto LABEL_90;
        }
        std::string v18 = &v61;
      }
      if (LODWORD(v18->__r_.__value_.__l.__data_) == 1702195828)
      {
LABEL_92:
        int v33 = *((_DWORD *)v4 + 15);
        char v34 = 1;
LABEL_93:
        if (v33 == 3) {
          google::protobuf::Reflection::AddBool(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v34);
        }
        else {
          google::protobuf::Reflection::SetBool(a3, a2, (const google::protobuf::FieldDescriptor *)v4, v34);
        }
        char v35 = 1;
        goto LABEL_148;
      }
LABEL_90:
      if (sub_1000CA980(&v61, "True") || sub_1000CA980(&v61, "t")) {
        goto LABEL_92;
      }
      if (sub_1000CA980(&v61, "false") || sub_1000CA980(&v61, "False") || sub_1000CA980(&v61, "f"))
      {
        char v34 = 0;
        int v33 = *((_DWORD *)v4 + 15);
        goto LABEL_93;
      }
      std::operator+<char>();
      std::string v45 = std::string::append(&v55, "\". Value: \"");
      long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
      v56.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
      *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v46;
      v45->__r_.__value_.__l.__size_ = 0;
      v45->__r_.__value_.__r.__words[2] = 0;
      v45->__r_.__value_.__r.__words[0] = 0;
      if ((v61.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v47 = &v61;
      }
      else {
        uint64_t v47 = (std::string *)v61.__r_.__value_.__r.__words[0];
      }
      if ((v61.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(v61.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = v61.__r_.__value_.__l.__size_;
      }
      v49 = std::string::append(&v56, (const std::string::value_type *)v47, size);
      long long v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
      __dst.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v50;
      v49->__r_.__value_.__l.__size_ = 0;
      v49->__r_.__value_.__r.__words[2] = 0;
      v49->__r_.__value_.__r.__words[0] = 0;
      uint64_t v51 = std::string::append(&__dst, "\".");
      long long v52 = *(_OWORD *)&v51->__r_.__value_.__l.__data_;
      __p.__r_.__value_.__r.__words[2] = v51->__r_.__value_.__r.__words[2];
      *(_OWORD *)&__p.__r_.__value_.__l.__data_ = v52;
      v51->__r_.__value_.__l.__size_ = 0;
      v51->__r_.__value_.__r.__words[2] = 0;
      v51->__r_.__value_.__r.__words[0] = 0;
      sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&__p);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__dst.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v56.__r_.__value_.__l.__data_);
      }
      if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v55.__r_.__value_.__l.__data_);
      }
LABEL_147:
      char v35 = 0;
LABEL_148:
      if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(v61.__r_.__value_.__l.__data_);
      }
      if ((v35 & 1) == 0) {
        goto LABEL_152;
      }
      goto LABEL_151;
    case 9:
    case 0xC:
      memset(&v61, 0, sizeof(v61));
      BOOL v17 = sub_100140534(a1, &v61);
      if (!v17) {
        goto LABEL_101;
      }
      if (*((_DWORD *)v4 + 15) == 3)
      {
        if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
          sub_1000BB834(&v60, v61.__r_.__value_.__l.__data_, v61.__r_.__value_.__l.__size_);
        }
        else {
          std::string v60 = v61;
        }
        google::protobuf::Reflection::AddString((uint64_t)a3, (uint64_t)a2, (google::protobuf::FieldDescriptor *)v4, (uint64_t)&v60);
        if (SHIBYTE(v60.__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v32 = &v60;
LABEL_100:
          operator delete(v32->__r_.__value_.__l.__data_);
        }
      }
      else
      {
        if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
          sub_1000BB834(&v59, v61.__r_.__value_.__l.__data_, v61.__r_.__value_.__l.__size_);
        }
        else {
          std::string v59 = v61;
        }
        google::protobuf::Reflection::SetString((uint64_t)a3, a2, (google::protobuf::FieldDescriptor *)v4, (uint64_t)&v59);
        if (SHIBYTE(v59.__r_.__value_.__r.__words[2]) < 0)
        {
          uint64_t v32 = &v59;
          goto LABEL_100;
        }
      }
LABEL_101:
      if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0)
      {
        operator delete(v61.__r_.__value_.__l.__data_);
        if (v17) {
          goto LABEL_151;
        }
      }
      else if (v17)
      {
        goto LABEL_151;
      }
LABEL_152:
      LOBYTE(v4) = 0;
      return v4 & 1;
    case 0xA:
    case 0xB:
      uint64_t v9 = (std::string *)google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v61, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/text_format.cc", 834);
      std::string v10 = google::protobuf::internal::LogMessage::operator<<(v9, "Reached an unintended state: CPPTYPE_MESSAGE");
      google::protobuf::internal::LogFinisher::operator=((int)&__p, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v61.__r_.__value_.__l.__data_);
      goto LABEL_151;
    case 0xE:
      memset(&__p, 0, sizeof(__p));
      uint64_t v54 = (google::protobuf *)0x7FFFFFFFFFFFFFFFLL;
      int v11 = (google::protobuf::EnumDescriptor *)google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)v4);
      if (*(_DWORD *)(a1 + 40) == 2)
      {
        if ((sub_10013FCC0(a1, &__p) & 1) == 0) {
          goto LABEL_125;
        }
        ValueByName = (const google::protobuf::EnumValueDescriptor *)google::protobuf::EnumDescriptor::FindValueByName((uint64_t)v11, (uint64_t *)&__p, v12);
      }
      else
      {
        sub_1000BBA84(&v61, "-");
        if (sub_10013FD94(a1, (unsigned __int8 *)&v61))
        {
          if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v61.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          int v19 = *(_DWORD *)(a1 + 40);
          if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v61.__r_.__value_.__l.__data_);
          }
          if (v19 != 3)
          {
            std::operator+<char>();
            sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&v61);
            if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0)
            {
              long long v22 = (void *)v61.__r_.__value_.__r.__words[0];
LABEL_124:
              operator delete(v22);
            }
LABEL_125:
            LOBYTE(v4) = 0;
LABEL_126:
            char v21 = 1;
            goto LABEL_127;
          }
        }
        if ((sub_100141A7C(a1, (uint64_t *)&v54, 0x7FFFFFFFLL) & 1) == 0) {
          goto LABEL_125;
        }
        v61.__r_.__value_.__r.__words[0] = (std::string::size_type)&v61.__r_.__value_.__r.__words[2];
        v61.__r_.__value_.__l.__size_ = google::protobuf::FastInt64ToBufferLeft((uint64_t)v54, &v61.__r_.__value_.__s.__data_[16], v20)- (unsigned char *)&v61.__r_.__value_.__r.__words[2];
        sub_1000BB9D8(&__dst, v61.__r_.__value_.__l.__data_, v61.__r_.__value_.__l.__size_);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        std::string __p = __dst;
        ValueByName = (const google::protobuf::EnumValueDescriptor *)google::protobuf::EnumDescriptor::FindValueByNumber(v11, v54);
      }
      if (!ValueByName)
      {
        if (v54 != (google::protobuf *)0x7FFFFFFFFFFFFFFFLL
          && google::protobuf::Reflection::SupportsUnknownEnumValues(a3))
        {
          if (*((_DWORD *)v4 + 15) == 3) {
            google::protobuf::Reflection::AddEnumValue(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (signed int)v54);
          }
          else {
            google::protobuf::Reflection::SetEnumValue(a3, a2, (const google::protobuf::FieldDescriptor *)v4, (signed int)v54);
          }
LABEL_132:
          LOBYTE(v4) = 1;
          goto LABEL_126;
        }
        if (*(unsigned char *)(a1 + 231))
        {
          std::operator+<char>();
          int v23 = std::string::append(&v55, "\" for field \"");
          long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
          v56.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v24;
          v23->__r_.__value_.__l.__size_ = 0;
          v23->__r_.__value_.__r.__words[2] = 0;
          v23->__r_.__value_.__r.__words[0] = 0;
          int v25 = *((char *)*v4 + 23);
          if (v25 >= 0) {
            uint64_t v26 = (const std::string::value_type *)*v4;
          }
          else {
            uint64_t v26 = **v4;
          }
          if (v25 >= 0) {
            std::string::size_type v27 = *((unsigned __int8 *)*v4 + 23);
          }
          else {
            std::string::size_type v27 = (std::string::size_type)(*v4)[1];
          }
          uint64_t v28 = std::string::append(&v56, v26, v27);
          long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
          __dst.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
          *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v29;
          v28->__r_.__value_.__l.__size_ = 0;
          v28->__r_.__value_.__r.__words[2] = 0;
          v28->__r_.__value_.__r.__words[0] = 0;
          char v30 = std::string::append(&__dst, "\".");
          long long v31 = *(_OWORD *)&v30->__r_.__value_.__l.__data_;
          v61.__r_.__value_.__r.__words[2] = v30->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v61.__r_.__value_.__l.__data_ = v31;
          v30->__r_.__value_.__l.__size_ = 0;
          v30->__r_.__value_.__r.__words[2] = 0;
          v30->__r_.__value_.__r.__words[0] = 0;
          sub_10013DBB0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&v61);
          if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v61.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__dst.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v56.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v55.__r_.__value_.__l.__data_);
          }
          goto LABEL_132;
        }
        std::operator+<char>();
        uint64_t v36 = std::string::append(&v55, "\" for field \"");
        long long v37 = *(_OWORD *)&v36->__r_.__value_.__l.__data_;
        v56.__r_.__value_.__r.__words[2] = v36->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v56.__r_.__value_.__l.__data_ = v37;
        v36->__r_.__value_.__l.__size_ = 0;
        v36->__r_.__value_.__r.__words[2] = 0;
        v36->__r_.__value_.__r.__words[0] = 0;
        int v38 = *((char *)*v4 + 23);
        if (v38 >= 0) {
          long long v39 = (const std::string::value_type *)*v4;
        }
        else {
          long long v39 = **v4;
        }
        if (v38 >= 0) {
          std::string::size_type v40 = *((unsigned __int8 *)*v4 + 23);
        }
        else {
          std::string::size_type v40 = (std::string::size_type)(*v4)[1];
        }
        uint64_t v41 = std::string::append(&v56, v39, v40);
        long long v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
        __dst.__r_.__value_.__r.__words[2] = v41->__r_.__value_.__r.__words[2];
        *(_OWORD *)&__dst.__r_.__value_.__l.__data_ = v42;
        v41->__r_.__value_.__l.__size_ = 0;
        v41->__r_.__value_.__r.__words[2] = 0;
        v41->__r_.__value_.__r.__words[0] = 0;
        int v43 = std::string::append(&__dst, "\".");
        long long v44 = *(_OWORD *)&v43->__r_.__value_.__l.__data_;
        v61.__r_.__value_.__r.__words[2] = v43->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v61.__r_.__value_.__l.__data_ = v44;
        v43->__r_.__value_.__l.__size_ = 0;
        v43->__r_.__value_.__r.__words[2] = 0;
        v43->__r_.__value_.__r.__words[0] = 0;
        sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&v61);
        if (SHIBYTE(v61.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v61.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__dst.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v56.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v56.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v55.__r_.__value_.__r.__words[2]) < 0)
        {
          long long v22 = (void *)v55.__r_.__value_.__r.__words[0];
          goto LABEL_124;
        }
        goto LABEL_125;
      }
      if (*((_DWORD *)v4 + 15) == 3) {
        google::protobuf::Reflection::AddEnum((uint64_t *)a3, a2, (const std::string::value_type **)v4, (uint64_t)ValueByName);
      }
      else {
        google::protobuf::Reflection::SetEnum(a3, a2, (const std::string::value_type **)v4, ValueByName);
      }
      char v21 = 0;
LABEL_127:
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if ((v21 & 1) == 0) {
LABEL_151:
      }
        LOBYTE(v4) = 1;
      return v4 & 1;
    default:
      goto LABEL_151;
  }
}

void sub_100141370(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *__p,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  if (a35 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  if (*(char *)(v49 - 105) < 0) {
    operator delete(*(void **)(v49 - 128));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100141510(uint64_t a1, std::string *a2)
{
  sub_1000BBA84(__p, "<");
  char v4 = sub_10013F478(a1, (unsigned __int8 *)__p);
  char v5 = v4;
  if (v11 < 0)
  {
    operator delete(__p[0]);
    if (v5) {
      goto LABEL_3;
    }
  }
  else if (v4)
  {
LABEL_3:
    int v6 = ">";
LABEL_8:
    std::string::assign(a2, v6);
    return 1;
  }
  sub_1000BBA84(__p, "{");
  char v7 = sub_10013F6C4(a1, (unsigned __int8 *)__p);
  char v8 = v7;
  if (v11 < 0)
  {
    operator delete(__p[0]);
    if (v8) {
      goto LABEL_7;
    }
  }
  else if (v7)
  {
LABEL_7:
    int v6 = "}";
    goto LABEL_8;
  }
  return 0;
}

void sub_1001415DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001415FC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  while (1)
  {
    sub_1000BBA84(v11, ">");
    if (sub_10013FD94(a1, (unsigned __int8 *)v11))
    {
      int v6 = 0;
    }
    else
    {
      sub_1000BBA84(__p, "}");
      int v7 = sub_10013FD94(a1, (unsigned __int8 *)__p);
      if (v10 < 0) {
        operator delete(__p[0]);
      }
      int v6 = v7 ^ 1;
    }
    if (v12 < 0) {
      operator delete(v11[0]);
    }
    if (!v6) {
      break;
    }
    if ((sub_10013DD34(a1, a2) & 1) == 0) {
      return 0;
    }
  }
  return sub_10013F6C4(a1, a3);
}

void sub_1001416D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001416F4(uint64_t a1)
{
  sub_1000BBA84(&v13, "[");
  int v2 = sub_10013F478(a1, (unsigned __int8 *)&v13);
  int v3 = v2;
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v13.__r_.__value_.__l.__data_);
    if (v3) {
      goto LABEL_3;
    }
  }
  else if (v2)
  {
LABEL_3:
    if ((sub_10014193C(a1) & 1) == 0) {
      return 0;
    }
    sub_1000BBA84(&v13, "]");
    char v4 = sub_10013F6C4(a1, (unsigned __int8 *)&v13);
    if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v13.__r_.__value_.__l.__data_);
    }
    if ((v4 & 1) == 0) {
      return 0;
    }
    goto LABEL_13;
  }
  memset(&v13, 0, sizeof(v13));
  int v5 = sub_10013FCC0(a1, &v13);
  int v6 = v5;
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v13.__r_.__value_.__l.__data_);
    if (!v6) {
      return 0;
    }
  }
  else if (!v5)
  {
    return 0;
  }
LABEL_13:
  sub_1000BBA84(&v13, ":");
  if (sub_10013F478(a1, (unsigned __int8 *)&v13))
  {
    sub_1000BBA84(v11, "{");
    if (sub_10013FD94(a1, (unsigned __int8 *)v11))
    {
      int v7 = 0;
    }
    else
    {
      sub_1000BBA84(__p, "<");
      int v7 = sub_10013FD94(a1, (unsigned __int8 *)__p) ^ 1;
      if (v10 < 0) {
        operator delete(__p[0]);
      }
    }
    if (v12 < 0) {
      operator delete(v11[0]);
    }
  }
  else
  {
    int v7 = 0;
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  if (v7)
  {
    if ((sub_10013FE38(a1) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    uint64_t result = sub_100140310(a1);
    if (!result) {
      return result;
    }
  }
  sub_1000BBA84(&v13, ";");
  if ((sub_10013F478(a1, (unsigned __int8 *)&v13) & 1) == 0)
  {
    sub_1000BBA84(v11, ",");
    sub_10013F478(a1, (unsigned __int8 *)v11);
    if (v12 < 0) {
      operator delete(v11[0]);
    }
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  return 1;
}

void sub_1001418EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v18 - 17) < 0) {
    operator delete(*(void **)(v18 - 40));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10014193C(uint64_t a1)
{
  memset(&v9, 0, sizeof(v9));
  if (sub_10013FCC0(a1, &v9))
  {
    do
    {
      sub_1000BBA84(v7, ".");
      if (sub_10013F478(a1, (unsigned __int8 *)v7))
      {
        int v2 = 1;
      }
      else
      {
        sub_1000BBA84(__p, "/");
        int v2 = sub_10013F478(a1, (unsigned __int8 *)__p);
        if (v6 < 0) {
          operator delete(__p[0]);
        }
      }
      if (v8 < 0) {
        operator delete(v7[0]);
      }
    }
    while (v2 && (sub_10013FCC0(a1, &v9) & 1) != 0);
    uint64_t v3 = v2 ^ 1u;
  }
  else
  {
    uint64_t v3 = 0;
  }
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_100141A24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100141A7C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  sub_1000BBA84(__p, "-");
  unsigned int v6 = sub_10013F478(a1, (unsigned __int8 *)__p);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  __p[0] = 0;
  uint64_t result = sub_100141B28(a1, (unint64_t *)__p, a3 + v6);
  if (result)
  {
    uint64_t v8 = (uint64_t)__p[0];
    if (v6) {
      uint64_t v8 = -(uint64_t)__p[0];
    }
    *a2 = v8;
  }
  return result;
}

void sub_100141B0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100141B28(uint64_t a1, unint64_t *a2, unint64_t a3)
{
  char v4 = (google::protobuf::io::Tokenizer *)(a1 + 40);
  if (*(_DWORD *)(a1 + 40) == 3)
  {
    if (google::protobuf::io::Tokenizer::ParseInteger((unsigned __int8 *)(a1 + 48), a3, a2))
    {
      google::protobuf::io::Tokenizer::Next(v4);
      return 1;
    }
    std::operator+<char>();
    int v7 = std::string::append(&v9, ")");
    long long v8 = *(_OWORD *)&v7->__r_.__value_.__l.__data_;
    std::string::size_type v11 = v7->__r_.__value_.__r.__words[2];
    *(_OWORD *)std::string __p = v8;
    v7->__r_.__value_.__l.__size_ = 0;
    v7->__r_.__value_.__r.__words[2] = 0;
    v7->__r_.__value_.__r.__words[0] = 0;
    sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)__p);
    if (SHIBYTE(v11) < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
    {
      unsigned int v6 = (void *)v9.__r_.__value_.__r.__words[0];
      goto LABEL_10;
    }
  }
  else
  {
    std::operator+<char>();
    sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)__p);
    if (SHIBYTE(v11) < 0)
    {
      unsigned int v6 = __p[0];
LABEL_10:
      operator delete(v6);
    }
  }
  return 0;
}

void sub_100141C38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100141C80(uint64_t a1, double *a2)
{
  sub_1000BBA84(__p, "-");
  int v6 = sub_10013F478(a1, (unsigned __int8 *)__p);
  if (SHIBYTE(v24) < 0) {
    operator delete(__p[0]);
  }
  int v7 = *(_DWORD *)(a1 + 40);
  if (v7 == 2)
  {
    if (*(char *)(a1 + 71) < 0)
    {
      sub_1000BB834(__p, *(void **)(a1 + 48), *(void *)(a1 + 56));
    }
    else
    {
      *(_OWORD *)std::string __p = *(_OWORD *)(a1 + 48);
      uint64_t v24 = *(void *)(a1 + 64);
    }
    int v9 = HIBYTE(v24);
    char v10 = (void **)__p[0];
    if (v24 >= 0) {
      std::string::size_type v11 = (void **)((char *)__p + HIBYTE(v24));
    }
    else {
      std::string::size_type v11 = (void **)((char *)__p[0] + (unint64_t)__p[1]);
    }
    if (v24 >= 0) {
      char v10 = __p;
    }
    if (v10 != v11)
    {
      do
      {
        int v12 = *(unsigned __int8 *)v10;
        if ((v12 - 65) <= 0x19) {
          *(unsigned char *)char v10 = v12 + 32;
        }
        char v10 = (void **)((char *)v10 + 1);
      }
      while (v10 != v11);
      int v9 = HIBYTE(v24);
    }
    if ((v9 & 0x80) == 0)
    {
      if (v9 != 3)
      {
        if (v9 != 8 || __p[0] != (void *)0x7974696E69666E69) {
          goto LABEL_47;
        }
        goto LABEL_52;
      }
      if (LOWORD(__p[0]) != 28265 || BYTE2(__p[0]) != 102)
      {
        BOOL v15 = __p;
LABEL_43:
        int v17 = *(unsigned __int16 *)v15;
        int v18 = *((unsigned __int8 *)v15 + 2);
        if (v17 != 24942 || v18 != 110)
        {
LABEL_47:
          std::operator+<char>();
          sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)&v21);
          if (v22 < 0) {
            operator delete(v21);
          }
LABEL_49:
          if (SHIBYTE(v24) < 0) {
            operator delete(__p[0]);
          }
          return 0;
        }
        uint64_t v20 = 0x7FF8000000000000;
LABEL_54:
        *(void *)a2 = v20;
        google::protobuf::io::Tokenizer::Next((google::protobuf::io::Tokenizer *)(a1 + 40));
        if (SHIBYTE(v24) < 0) {
          operator delete(__p[0]);
        }
LABEL_56:
        if (!v6) {
          return 1;
        }
LABEL_57:
        *a2 = -*a2;
        return 1;
      }
LABEL_52:
      uint64_t v20 = 0x7FF0000000000000;
      goto LABEL_54;
    }
    std::string v13 = __p[1];
    if (__p[1] == (void *)3 && *(_WORD *)__p[0] == 28265 && *((unsigned char *)__p[0] + 2) == 102) {
      goto LABEL_52;
    }
    if (__p[1] == (void *)8)
    {
      if (*(void *)__p[0] == 0x7974696E69666E69) {
        goto LABEL_52;
      }
      std::string v13 = __p[1];
    }
    if (v13 != (void *)3) {
      goto LABEL_47;
    }
    BOOL v15 = (void **)__p[0];
    goto LABEL_43;
  }
  if (v7 != 3)
  {
    if (v7 == 4)
    {
      *a2 = google::protobuf::io::Tokenizer::ParseFloat(a1 + 48, v4, v5);
      google::protobuf::io::Tokenizer::Next((google::protobuf::io::Tokenizer *)(a1 + 40));
      goto LABEL_56;
    }
    std::operator+<char>();
    sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)__p);
    goto LABEL_49;
  }
  uint64_t result = sub_100141F8C(a1, a2, 0xFFFFFFFFFFFFFFFFLL);
  if (result & v6) {
    goto LABEL_57;
  }
  return result;
}

void sub_100141F4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100141F8C(uint64_t a1, double *a2, unint64_t a3)
{
  uint64_t v4 = (google::protobuf::io::Tokenizer *)(a1 + 40);
  if (*(_DWORD *)(a1 + 40) != 3) {
    goto LABEL_16;
  }
  uint64_t v6 = a1 + 48;
  if (*(char *)(a1 + 71) < 0)
  {
    if (*(void *)(a1 + 56) <= 1uLL) {
      goto LABEL_19;
    }
    if (**(unsigned char **)v6 == 48 && (*(unsigned __int8 *)(*(void *)v6 + 1) | 0x20) == 0x78) {
      goto LABEL_16;
    }
    if (**(unsigned char **)v6 != 48 || *(char *)(*(void *)v6 + 1) < 48) {
      goto LABEL_19;
    }
    unsigned int v7 = *(unsigned __int8 *)(*(void *)v6 + 1);
LABEL_15:
    if (v7 <= 0x37) {
      goto LABEL_16;
    }
LABEL_19:
    __p[0] = 0;
    if (google::protobuf::io::Tokenizer::ParseInteger((unsigned __int8 *)(a1 + 48), a3, (unint64_t *)__p))double v11 = (double)(unint64_t)__p[0]; {
    else
    }
      double v11 = google::protobuf::io::Tokenizer::ParseFloat(a1 + 48, v9, v10);
    *a2 = v11;
    google::protobuf::io::Tokenizer::Next(v4);
    return 1;
  }
  if (*(unsigned __int8 *)(a1 + 71) < 2u || *(unsigned char *)v6 != 48) {
    goto LABEL_19;
  }
  unsigned int v7 = *(unsigned __int8 *)(a1 + 49);
  if ((v7 | 0x20) != 0x78)
  {
    if ((char)v7 <= 47) {
      goto LABEL_19;
    }
    goto LABEL_15;
  }
LABEL_16:
  std::operator+<char>();
  sub_100139DE0((uint64_t *)a1, *(_DWORD *)(a1 + 72), *(_DWORD *)(a1 + 76), (const std::string::value_type *)__p);
  if (v13 < 0) {
    operator delete(__p[0]);
  }
  return 0;
}

void sub_10014210C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100142130()
{
}

void sub_100142144(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_100142240(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100142260(uint64_t a1)
{
  sub_100142670(a1);
  operator delete();
}

uint64_t sub_100142298(uint64_t result)
{
  return result;
}

void sub_1001422A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32);
  if (v1 && v1 >= *(_DWORD *)(a1 + 36))
  {
    *(_DWORD *)(a1 + ++*(_DWORD *)(result + 32) = v1 - 1;
  }
  else
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v4, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/text_format.cc", 1268);
    int v2 = google::protobuf::internal::LogMessage::operator<<(v4, " Outdent() without matching Indent().");
    google::protobuf::internal::LogFinisher::operator=((int)&v3, (const char **)&v2->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v4[0].__r_.__value_.__l.__data_);
  }
}

void sub_100142328(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100142340(uint64_t a1)
{
  return 2 * *(int *)(a1 + 32);
}

uint64_t sub_10014234C(uint64_t a1, char *__src, size_t a3)
{
  if (*(int *)(a1 + 32) < 1)
  {
    uint64_t result = sub_100142440(a1, __src, a3);
    if (a3 && __src[a3 - 1] == 10) {
      *(unsigned char *)(a1 + 28) = 1;
    }
  }
  else
  {
    if (a3)
    {
      uint64_t v6 = 0;
      uint64_t v7 = 0;
      do
      {
        if (__src[v6] == 10)
        {
          sub_100142440(a1, &__src[v7], v6 - v7 + 1);
          ++v6;
          *(unsigned char *)(a1 + 28) = 1;
          uint64_t v7 = v6;
        }
        else
        {
          ++v6;
        }
      }
      while (v6 != a3);
    }
    else
    {
      uint64_t v7 = 0;
    }
    return sub_100142440(a1, &__src[v7], a3 - v7);
  }
  return result;
}

uint64_t sub_100142440(uint64_t result, char *__src, size_t a3)
{
  if (a3)
  {
    uint64_t v3 = result;
    if (!*(unsigned char *)(result + 29))
    {
      size_t v4 = a3;
      if (!*(unsigned char *)(result + 28)
        || (*(unsigned char *)(result + 28) = 0, uint64_t result = sub_10014255C(result), !*(unsigned char *)(v3 + 29)))
      {
        int v6 = *(_DWORD *)(v3 + 24);
        size_t v7 = v6;
        if (v6 >= v4)
        {
          uint64_t v9 = *(void **)(v3 + 16);
LABEL_12:
          uint64_t result = (uint64_t)memcpy(v9, __src, v4);
          *(void *)(v3 + 16) += v4;
          *(_DWORD *)(v3 + 24) -= v4;
        }
        else
        {
          while (1)
          {
            if (v6 >= 1)
            {
              memcpy(*(void **)(v3 + 16), __src, v7);
              uint64_t v8 = *(int *)(v3 + 24);
              __src += v8;
              v4 -= v8;
            }
            char v10 = 0;
            uint64_t result = (*(uint64_t (**)(void, void **, uint64_t))(**(void **)(v3 + 8) + 16))(*(void *)(v3 + 8), &v10, v3 + 24);
            *(unsigned char *)(v3 + 29) = result ^ 1;
            if ((result & 1) == 0) {
              break;
            }
            uint64_t v9 = v10;
            *(void *)(v3 + 16) = v10;
            int v6 = *(_DWORD *)(v3 + 24);
            size_t v7 = v6;
            if (v4 <= v6) {
              goto LABEL_12;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10014255C(uint64_t result)
{
  if (*(_DWORD *)(result + 32))
  {
    uint64_t v1 = result;
    int v2 = (*(uint64_t (**)(uint64_t))(*(void *)result + 32))(result);
    int v3 = *(_DWORD *)(v1 + 24);
    if (v3 >= v2)
    {
      size_t v4 = *(void **)(v1 + 16);
LABEL_9:
      uint64_t result = (uint64_t)memset(v4, 32, v2);
      *(void *)(v1 + 16) += v2;
      *(_DWORD *)(v1 + 24) -= v2;
    }
    else
    {
      while (1)
      {
        if (v3 >= 1)
        {
          memset(*(void **)(v1 + 16), 32, v3);
          int v3 = *(_DWORD *)(v1 + 24);
        }
        int v5 = 0;
        uint64_t result = (*(uint64_t (**)(void, void **, uint64_t))(**(void **)(v1 + 8) + 16))(*(void *)(v1 + 8), &v5, v1 + 24);
        *(unsigned char *)(v1 + 29) = result ^ 1;
        if ((result ^ 1)) {
          break;
        }
        v2 -= v3;
        size_t v4 = v5;
        *(void *)(v1 + 16) = v5;
        int v3 = *(_DWORD *)(v1 + 24);
        if (v2 <= v3) {
          goto LABEL_9;
        }
      }
    }
  }
  return result;
}

uint64_t sub_100142670(uint64_t a1)
{
  *(void *)a1 = off_1001D2AE8;
  if (!*(unsigned char *)(a1 + 29) && *(int *)(a1 + 24) >= 1) {
    (*(void (**)(void))(**(void **)(a1 + 8) + 24))(*(void *)(a1 + 8));
  }
  return a1;
}

uint64_t *sub_1001426F0(uint64_t **a1, unint64_t *a2, uint64_t a3, uint64_t **a4)
{
  size_t v7 = a1 + 1;
  int v6 = a1[1];
  if (v6)
  {
    unint64_t v8 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = (uint64_t **)v6;
        unint64_t v10 = v6[4];
        if (v8 >= v10) {
          break;
        }
        int v6 = *v9;
        size_t v7 = v9;
        if (!*v9) {
          goto LABEL_10;
        }
      }
      if (v10 >= v8) {
        break;
      }
      int v6 = v9[1];
      if (!v6)
      {
        size_t v7 = v9 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v9 = a1 + 1;
LABEL_10:
    double v11 = (uint64_t *)operator new(0x40uLL);
    uint64_t v12 = **a4;
    v11[6] = 0;
    v11[7] = 0;
    v11[4] = v12;
    v11[5] = 0;
    sub_10002751C(a1, (uint64_t)v9, v7, v11);
    return v11;
  }
  return (uint64_t *)v9;
}

void sub_1001427B4(void ***a1)
{
  uint64_t v1 = *a1;
  int v2 = (char *)**a1;
  if (v2)
  {
    size_t v4 = (char *)v1[1];
    int v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 8;
        sub_10014283C(v4, 0);
      }
      while (v4 != v2);
      int v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t *sub_10014283C(uint64_t *result, uint64_t a2)
{
  uint64_t v2 = *result;
  google::protobuf::internal *result = a2;
  if (v2)
  {
    sub_1001428AC(v2 + 24, *(char **)(v2 + 32));
    sub_10014290C(v2, *(void **)(v2 + 8));
    operator delete();
  }
  return result;
}

void sub_1001428AC(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_1001428AC(a1, *(void *)a2);
    sub_1001428AC(a1, *((void *)a2 + 1));
    size_t v4 = (void **)(a2 + 40);
    sub_1001427B4(&v4);
    operator delete(a2);
  }
}

void sub_10014290C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10014290C(a1, *a2);
    sub_10014290C(a1, a2[1]);
    size_t v4 = (void *)a2[5];
    if (v4)
    {
      a2[6] = v4;
      operator delete(v4);
    }
    operator delete(a2);
  }
}

uint64_t sub_100142970(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 8;
    sub_10014283C((uint64_t *)(i - 8), 0);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1001429C4(uint64_t result, uint64_t *a2, uint64_t a3, char a4)
{
  unint64_t v8 = (uint64_t *)result;
  while (2)
  {
    uint64_t v9 = a2;
    v98 = a2 - 1;
    unint64_t v10 = v8;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          unint64_t v8 = v10;
          uint64_t v11 = (char *)v9 - (char *)v10;
          uint64_t v12 = v11 >> 3;
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0:
              case 1:
                return result;
              case 2:
                uint64_t v39 = *(a2 - 1);
                uint64_t v40 = *v8;
                uint64_t result = sub_100143194(v39, *v8);
                if (result)
                {
                  uint64_t *v8 = v39;
                  *(a2 - 1) = v40;
                }
                break;
              case 3:
                uint64_t result = sub_100143200(v8, v8 + 1, v98);
                break;
              case 4:
                uint64_t result = sub_1001434EC(v8, v8 + 1, v8 + 2, v98);
                break;
              case 5:
                uint64_t v41 = v8 + 2;
                long long v42 = v8 + 3;
                sub_1001434EC(v8, v8 + 1, v8 + 2, v8 + 3);
                uint64_t v43 = *(a2 - 1);
                uint64_t v44 = v8[3];
                uint64_t result = sub_100143194(v43, v44);
                if (result)
                {
                  *long long v42 = v43;
                  *(a2 - 1) = v44;
                  uint64_t v45 = *v42;
                  uint64_t v46 = *v41;
                  uint64_t result = sub_100143194(*v42, *v41);
                  if (result)
                  {
                    *uint64_t v41 = v45;
                    *long long v42 = v46;
                    uint64_t v47 = v8[1];
                    uint64_t result = sub_100143194(v45, v47);
                    if (result)
                    {
                      v8[1] = v45;
                      v8[2] = v47;
                      uint64_t v48 = *v8;
                      uint64_t result = sub_100143194(v45, *v8);
                      if (result)
                      {
                        uint64_t *v8 = v45;
                        v8[1] = v48;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return result;
          }
          if (v11 <= 191)
          {
            uint64_t v49 = v8 + 1;
            BOOL v51 = v8 == v9 || v49 == v9;
            if (a4)
            {
              if (!v51)
              {
                uint64_t v52 = 0;
                uint64_t v53 = v8;
                do
                {
                  uint64_t v55 = *v53;
                  uint64_t v54 = v53[1];
                  uint64_t v53 = v49;
                  uint64_t result = sub_100143194(v54, v55);
                  if (result)
                  {
                    uint64_t v56 = v52;
                    while (1)
                    {
                      *(uint64_t *)((char *)v8 + v56 + 8) = v55;
                      if (!v56) {
                        break;
                      }
                      uint64_t v55 = *(uint64_t *)((char *)v8 + v56 - 8);
                      uint64_t result = sub_100143194(v54, v55);
                      v56 -= 8;
                      if ((result & 1) == 0)
                      {
                        __int16 v57 = (uint64_t *)((char *)v8 + v56 + 8);
                        goto LABEL_84;
                      }
                    }
                    __int16 v57 = v8;
LABEL_84:
                    *__int16 v57 = v54;
                  }
                  uint64_t v49 = v53 + 1;
                  v52 += 8;
                }
                while (v53 + 1 != a2);
              }
            }
            else if (!v51)
            {
              do
              {
                uint64_t v94 = *v8;
                uint64_t v93 = v8[1];
                unint64_t v8 = v49;
                uint64_t result = sub_100143194(v93, v94);
                if (result)
                {
                  v95 = v8;
                  do
                  {
                    uint64_t *v95 = v94;
                    uint64_t v94 = *(v95 - 2);
                    uint64_t result = sub_100143194(v93, v94);
                    --v95;
                  }
                  while ((result & 1) != 0);
                  uint64_t *v95 = v93;
                }
                uint64_t v49 = v8 + 1;
              }
              while (v8 + 1 != a2);
            }
            return result;
          }
          if (!a3)
          {
            if (v8 != v9)
            {
              int64_t v58 = (unint64_t)(v12 - 2) >> 1;
              int64_t v59 = v58;
              do
              {
                int64_t v60 = v59;
                if (v58 >= v59)
                {
                  uint64_t v61 = (2 * v59) | 1;
                  uint64_t v62 = &v8[v61];
                  uint64_t v63 = 2 * v59 + 2;
                  uint64_t v64 = *v62;
                  if (v63 < v12)
                  {
                    uint64_t v65 = v62[1];
                    BOOL v66 = sub_100143194(*v62, v65);
                    if (v66) {
                      uint64_t v64 = v65;
                    }
                    int64_t v58 = (unint64_t)(v12 - 2) >> 1;
                    if (v66)
                    {
                      ++v62;
                      uint64_t v61 = v63;
                    }
                  }
                  int v67 = &v8[v60];
                  uint64_t v68 = *v67;
                  uint64_t result = sub_100143194(v64, *v67);
                  if ((result & 1) == 0)
                  {
                    uint64_t v99 = v68;
                    int64_t v96 = v60;
                    do
                    {
                      v69 = v62;
                      *int v67 = v64;
                      if (v58 < v61) {
                        break;
                      }
                      uint64_t v70 = (2 * v61) | 1;
                      uint64_t v62 = &v8[v70];
                      uint64_t v71 = 2 * v61 + 2;
                      uint64_t v64 = *v62;
                      if (v71 < v12)
                      {
                        uint64_t v72 = v62[1];
                        BOOL v73 = sub_100143194(*v62, v72);
                        if (v73)
                        {
                          uint64_t v64 = v72;
                          ++v62;
                        }
                        int64_t v58 = (unint64_t)(v12 - 2) >> 1;
                        if (v73) {
                          uint64_t v70 = v71;
                        }
                      }
                      uint64_t result = sub_100143194(v64, v99);
                      int v67 = v69;
                      uint64_t v61 = v70;
                    }
                    while (!result);
                    uint64_t *v69 = v99;
                    int64_t v60 = v96;
                  }
                }
                int64_t v59 = v60 - 1;
              }
              while (v60);
              uint64_t v74 = (unint64_t)v11 >> 3;
              int v97 = v8;
              do
              {
                uint64_t v75 = 0;
                uint64_t v76 = *v8;
                v77 = v8;
                do
                {
                  long long v78 = &v77[v75];
                  uint64_t v81 = v78[1];
                  v79 = v78 + 1;
                  uint64_t v80 = v81;
                  uint64_t v82 = (2 * v75) | 1;
                  uint64_t v83 = 2 * v75 + 2;
                  if (v83 < v74)
                  {
                    uint64_t v84 = v79[1];
                    uint64_t result = sub_100143194(v80, v84);
                    if (result)
                    {
                      uint64_t v80 = v84;
                      ++v79;
                      uint64_t v82 = v83;
                    }
                  }
                  uint64_t *v77 = v80;
                  v77 = v79;
                  uint64_t v75 = v82;
                }
                while (v82 <= (uint64_t)((unint64_t)(v74 - 2) >> 1));
                int v85 = a2 - 1;
                BOOL v5 = v79 == --a2;
                if (v5)
                {
                  uint64_t *v79 = v76;
                }
                else
                {
                  uint64_t *v79 = *v85;
                  *int v85 = v76;
                  uint64_t v86 = (char *)v79 - (char *)v97 + 8;
                  if (v86 >= 9)
                  {
                    unint64_t v87 = (((unint64_t)v86 >> 3) - 2) >> 1;
                    v88 = &v97[v87];
                    uint64_t v89 = *v88;
                    uint64_t v90 = *v79;
                    uint64_t result = sub_100143194(*v88, *v79);
                    if (result)
                    {
                      do
                      {
                        v91 = v88;
                        uint64_t *v79 = v89;
                        if (!v87) {
                          break;
                        }
                        unint64_t v87 = (v87 - 1) >> 1;
                        v88 = &v97[v87];
                        uint64_t v89 = *v88;
                        uint64_t result = sub_100143194(*v88, v90);
                        v79 = v91;
                      }
                      while ((result & 1) != 0);
                      uint64_t *v91 = v90;
                    }
                  }
                }
                BOOL v92 = v74-- <= 2;
                unint64_t v8 = v97;
              }
              while (!v92);
            }
            return result;
          }
          unint64_t v13 = (unint64_t)v12 >> 1;
          std::string v14 = &v8[(unint64_t)v12 >> 1];
          if ((unint64_t)v11 < 0x401)
          {
            sub_100143200(v14, v8, v98);
          }
          else
          {
            sub_100143200(v8, v14, v98);
            sub_100143200(v8 + 1, v14 - 1, a2 - 2);
            sub_100143200(v8 + 2, &v8[v13 + 1], a2 - 3);
            sub_100143200(v14 - 1, v14, &v8[v13 + 1]);
            uint64_t v15 = *v8;
            uint64_t *v8 = *v14;
            *std::string v14 = v15;
          }
          --a3;
          uint64_t v16 = *v8;
          if ((a4 & 1) != 0 || sub_100143194(*(v8 - 1), *v8)) {
            break;
          }
          uint64_t result = sub_100143194(v16, *v98);
          if (result)
          {
            unint64_t v10 = v8;
            do
            {
              uint64_t v30 = v10[1];
              ++v10;
              uint64_t result = sub_100143194(v16, v30);
            }
            while ((result & 1) == 0);
          }
          else
          {
            long long v31 = v8 + 1;
            do
            {
              unint64_t v10 = v31;
              if (v31 >= v9) {
                break;
              }
              ++v31;
              uint64_t result = sub_100143194(v16, *v10);
            }
            while (!result);
          }
          uint64_t v32 = v9;
          if (v10 < v9)
          {
            uint64_t v32 = v9;
            do
            {
              uint64_t v33 = *--v32;
              uint64_t result = sub_100143194(v16, v33);
            }
            while ((result & 1) != 0);
          }
          if (v10 < v32)
          {
            uint64_t v34 = *v10;
            uint64_t v35 = *v32;
            do
            {
              *unint64_t v10 = v35;
              *uint64_t v32 = v34;
              do
              {
                uint64_t v36 = v10[1];
                ++v10;
                uint64_t v34 = v36;
              }
              while (!sub_100143194(v16, v36));
              do
              {
                uint64_t v37 = *--v32;
                uint64_t v35 = v37;
                uint64_t result = sub_100143194(v16, v37);
              }
              while ((result & 1) != 0);
            }
            while (v10 < v32);
          }
          int v38 = v10 - 1;
          BOOL v4 = v10 - 1 >= v8;
          BOOL v5 = v10 - 1 == v8;
          if (v10 - 1 != v8) {
            uint64_t *v8 = *v38;
          }
          a4 = 0;
          uint64_t *v38 = v16;
        }
        uint64_t v17 = 0;
        do
          uint64_t v18 = v8[++v17];
        while (sub_100143194(v18, v16));
        int v19 = &v8[v17];
        uint64_t v20 = v9;
        if (v17 == 1)
        {
          uint64_t v20 = v9;
          do
          {
            if (v19 >= v20) {
              break;
            }
            uint64_t v22 = *--v20;
          }
          while (!sub_100143194(v22, v16));
        }
        else
        {
          do
            uint64_t v21 = *--v20;
          while (!sub_100143194(v21, v16));
        }
        if (v19 >= v20)
        {
          uint64_t v28 = v19 - 1;
        }
        else
        {
          uint64_t v23 = *v20;
          uint64_t v24 = &v8[v17];
          int v25 = v20;
          do
          {
            *uint64_t v24 = v23;
            uint64_t *v25 = v18;
            do
            {
              uint64_t v26 = v24[1];
              ++v24;
              uint64_t v18 = v26;
            }
            while (sub_100143194(v26, v16));
            do
            {
              uint64_t v27 = *--v25;
              uint64_t v23 = v27;
            }
            while (!sub_100143194(v27, v16));
          }
          while (v24 < v25);
          uint64_t v28 = v24 - 1;
          uint64_t v9 = a2;
        }
        if (v28 != v8) {
          uint64_t *v8 = *v28;
        }
        *uint64_t v28 = v16;
        if (v19 >= v20) {
          break;
        }
LABEL_33:
        uint64_t result = sub_1001429C4(v8, v28, a3, a4 & 1);
        a4 = 0;
        unint64_t v10 = v28 + 1;
      }
      BOOL v29 = sub_1001432CC(v8, v28);
      unint64_t v10 = v28 + 1;
      uint64_t result = sub_1001432CC(v28 + 1, v9);
      if (result) {
        break;
      }
      if (!v29) {
        goto LABEL_33;
      }
    }
    a2 = v28;
    if (!v29) {
      continue;
    }
    return result;
  }
}

BOOL sub_100143194(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 67))
  {
    if (!*(unsigned char *)(a2 + 67)) {
      return 0;
    }
    int v2 = *(_DWORD *)(a1 + 68);
    int v3 = *(_DWORD *)(a2 + 68);
  }
  else
  {
    if (*(unsigned char *)(a2 + 67)) {
      return 1;
    }
    int v2 = 678152731 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 80) + 40)) >> 3);
    int v3 = 678152731 * ((unint64_t)(a2 - *(void *)(*(void *)(a2 + 80) + 40)) >> 3);
  }
  return v2 < v3;
}

BOOL sub_100143200(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  BOOL v8 = sub_100143194(*a2, *a1);
  uint64_t v9 = *a3;
  BOOL result = sub_100143194(*a3, v6);
  if (v8)
  {
    if (result)
    {
      *a1 = v9;
    }
    else
    {
      *a1 = v6;
      *a2 = v7;
      uint64_t v13 = *a3;
      BOOL result = sub_100143194(*a3, v7);
      if (!result) {
        return result;
      }
      *a2 = v13;
    }
    *a3 = v7;
  }
  else if (result)
  {
    *a2 = v9;
    *a3 = v6;
    uint64_t v11 = *a2;
    uint64_t v12 = *a1;
    BOOL result = sub_100143194(*a2, *a1);
    if (result)
    {
      *a1 = v11;
      *a2 = v12;
    }
  }
  return result;
}

BOOL sub_1001432CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = a2 - a1;
  BOOL result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v6 = *(a2 - 1);
      uint64_t v7 = *a1;
      if (sub_100143194(v6, *a1))
      {
        *a1 = v6;
        *(a2 - 1) = v7;
      }
      return 1;
    case 3:
      sub_100143200(a1, a1 + 1, a2 - 1);
      return 1;
    case 4:
      sub_1001434EC(a1, a1 + 1, a1 + 2, a2 - 1);
      return 1;
    case 5:
      uint64_t v18 = a1 + 2;
      int v19 = a1 + 3;
      sub_1001434EC(a1, a1 + 1, a1 + 2, a1 + 3);
      uint64_t v20 = *(a2 - 1);
      uint64_t v21 = a1[3];
      if (sub_100143194(v20, v21))
      {
        uint64_t *v19 = v20;
        *(a2 - 1) = v21;
        uint64_t v22 = *v19;
        uint64_t v23 = *v18;
        if (sub_100143194(*v19, *v18))
        {
          uint64_t *v18 = v22;
          uint64_t *v19 = v23;
          uint64_t v24 = a1[1];
          if (sub_100143194(v22, v24))
          {
            a1[1] = v22;
            a1[2] = v24;
            uint64_t v25 = *a1;
            if (sub_100143194(v22, *a1))
            {
              *a1 = v22;
              a1[1] = v25;
            }
          }
        }
      }
      return 1;
    default:
      BOOL v8 = a1 + 2;
      sub_100143200(a1, a1 + 1, a1 + 2);
      uint64_t v9 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      int v10 = 0;
      uint64_t v11 = 24;
      break;
  }
  while (1)
  {
    uint64_t v12 = *v9;
    uint64_t v13 = *v8;
    if (sub_100143194(*v9, v13))
    {
      uint64_t v14 = v11;
      while (1)
      {
        *(uint64_t *)((char *)a1 + v14) = v13;
        uint64_t v15 = v14 - 8;
        if (v14 == 8) {
          break;
        }
        uint64_t v13 = *(uint64_t *)((char *)a1 + v14 - 16);
        BOOL v16 = sub_100143194(v12, v13);
        uint64_t v14 = v15;
        if (!v16)
        {
          uint64_t v17 = (uint64_t *)((char *)a1 + v15);
          goto LABEL_13;
        }
      }
      uint64_t v17 = a1;
LABEL_13:
      *uint64_t v17 = v12;
      if (++v10 == 8) {
        return v9 + 1 == a2;
      }
    }
    BOOL v8 = v9;
    v11 += 8;
    if (++v9 == a2) {
      return 1;
    }
  }
}

BOOL sub_1001434EC(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  sub_100143200(a1, a2, a3);
  uint64_t v8 = *a4;
  uint64_t v9 = *a3;
  BOOL result = sub_100143194(*a4, *a3);
  if (result)
  {
    *a3 = v8;
    *a4 = v9;
    uint64_t v11 = *a3;
    uint64_t v12 = *a2;
    BOOL result = sub_100143194(*a3, *a2);
    if (result)
    {
      *a2 = v11;
      *a3 = v12;
      uint64_t v13 = *a2;
      uint64_t v14 = *a1;
      BOOL result = sub_100143194(*a2, *a1);
      if (result)
      {
        *a1 = v13;
        *a2 = v14;
      }
    }
  }
  return result;
}

void *sub_10014358C(uint64_t a1)
{
  if (a1 < 1) {
    return 0;
  }
  if (a1 >= 0xFFFFFFFFFFFFFFFLL) {
    unint64_t v1 = 0xFFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v1 = a1;
  }
  while (1)
  {
    BOOL result = operator new(8 * v1, &std::nothrow);
    if (result) {
      break;
    }
    BOOL v3 = v1 > 1;
    v1 >>= 1;
    if (!v3) {
      return 0;
    }
  }
  return result;
}

void sub_1001435F0(const google::protobuf::Message **a1, const google::protobuf::Message **a2, const google::protobuf::FieldDescriptor **a3, unint64_t a4, const google::protobuf::Message **a5, uint64_t a6)
{
  if (a4 >= 2)
  {
    if (a4 == 2)
    {
      if (sub_1001437AC(a3, *(a2 - 1), *a1))
      {
        uint64_t v9 = *a1;
        *a1 = *(a2 - 1);
        *(a2 - 1) = v9;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      unint64_t v13 = a4 >> 1;
      uint64_t v14 = &a1[a4 >> 1];
      unint64_t v15 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        sub_100143B94(a1, v14, a3, v15, (uint64_t)a5);
        sub_100143B94(&a1[a4 >> 1], a2, a3, a4 - (a4 >> 1), (uint64_t)&a5[v13]);
        sub_100143CF0(a5, &a5[v13], &a5[v13], &a5[a4], a1, a3);
      }
      else
      {
        sub_1001435F0(a1, v14, a3, v15, a5, a6);
        sub_1001435F0(&a1[a4 >> 1], a2, a3, a4 - (a4 >> 1), a5, a6);
        sub_100143DB4(a1, &a1[a4 >> 1], a2, a3, a4 >> 1, a4 - (a4 >> 1), a5, a6);
      }
    }
    else
    {
      sub_100143AC8(a1, a2, a3);
    }
  }
}

BOOL sub_1001437AC(const google::protobuf::FieldDescriptor **a1, const google::protobuf::Message *a2, const google::protobuf::Message *a3)
{
  (*(void (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  uint64_t v7 = v6;
  uint64_t v8 = *a1;
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)*a1 + 6);
  if (v9)
  {
    uint64_t v32 = *a1;
    uint64_t v33 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v33;
      __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v32;
      v30[0] = __p;
      std::__call_once(v9, v30, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  switch(*((_DWORD *)v8 + 14))
  {
    case 3:
      uint64_t Int64 = google::protobuf::Reflection::GetInt64(v7, a2, *a1);
      return Int64 < google::protobuf::Reflection::GetInt64(v7, a3, *a1);
    case 4:
    case 6:
      Uuint64_t Int64 = google::protobuf::Reflection::GetUInt64(v7, a2, *a1);
      BOOL v13 = UInt64 >= google::protobuf::Reflection::GetUInt64(v7, a3, *a1);
      goto LABEL_12;
    case 5:
      int Int32 = google::protobuf::Reflection::GetInt32(v7, a2, *a1);
      return Int32 < (int)google::protobuf::Reflection::GetInt32(v7, a3, *a1);
    case 7:
      Uint Int32 = google::protobuf::Reflection::GetUInt32(v7, a2, *a1);
      BOOL v13 = UInt32 >= google::protobuf::Reflection::GetUInt32(v7, a3, *a1);
LABEL_12:
      uint64_t v15 = !v13;
      break;
    case 8:
      BOOL Bool = google::protobuf::Reflection::GetBool(v7, a2, *a1);
      uint64_t v15 = google::protobuf::Reflection::GetBool(v7, a3, *a1) && !Bool;
      break;
    case 9:
      google::protobuf::Reflection::GetString(v7, a2, *a1, (uint64_t)__p);
      google::protobuf::Reflection::GetString(v7, a3, *a1, (uint64_t)v30);
      int v19 = (char)v31;
      uint64_t v20 = (void *)v30[0];
      char v21 = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p[0].__r_.__value_.__l.__size_;
      }
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        uint64_t v23 = __p;
      }
      else {
        uint64_t v23 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
      }
      if ((v31 & 0x80u) == 0) {
        size_t v24 = v31;
      }
      else {
        size_t v24 = v30[1];
      }
      if ((v31 & 0x80u) == 0) {
        uint64_t v25 = v30;
      }
      else {
        uint64_t v25 = (void *)v30[0];
      }
      if (v24 >= size) {
        size_t v26 = size;
      }
      else {
        size_t v26 = v24;
      }
      int v27 = memcmp(v23, v25, v26);
      if (v27) {
        uint64_t v15 = v27 < 0;
      }
      else {
        uint64_t v15 = size < v24;
      }
      if (v19 < 0)
      {
        operator delete(v20);
        char v21 = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
      }
      if (v21 < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      break;
    default:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/text_format.cc", 2116);
      uint64_t v17 = google::protobuf::internal::LogMessage::operator<<(__p, "Invalid key for map field.");
      google::protobuf::internal::LogFinisher::operator=((int)v30, (const char **)&v17->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
      uint64_t v15 = 1;
      break;
  }
  return v15;
}

void sub_100143A74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

const google::protobuf::Message **sub_100143AC8(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::FieldDescriptor **a3)
{
  if (result != a2)
  {
    uint64_t v4 = result;
    BOOL v5 = result + 1;
    if (result + 1 != a2)
    {
      uint64_t v7 = 0;
      uint64_t v8 = result;
      do
      {
        uint64_t v9 = *v8;
        uint64_t v8 = v5;
        BOOL result = (const google::protobuf::Message **)sub_1001437AC(a3, *v5, v9);
        if (result)
        {
          int v10 = *v8;
          uint64_t v11 = v7;
          while (1)
          {
            *(const google::protobuf::Message **)((char *)v4 + v11 + 8) = *(const google::protobuf::Message **)((char *)v4 + v11);
            if (!v11) {
              break;
            }
            BOOL result = (const google::protobuf::Message **)sub_1001437AC(a3, v10, *(const google::protobuf::Message **)((char *)v4 + v11 - 8));
            v11 -= 8;
            if ((result & 1) == 0)
            {
              uint64_t v12 = (const google::protobuf::Message **)((char *)v4 + v11 + 8);
              goto LABEL_10;
            }
          }
          uint64_t v12 = v4;
LABEL_10:
          *uint64_t v12 = v10;
        }
        BOOL v5 = v8 + 1;
        v7 += 8;
      }
      while (v8 + 1 != a2);
    }
  }
  return result;
}

const google::protobuf::Message **sub_100143B94(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::FieldDescriptor **a3, unint64_t a4, uint64_t a5)
{
  if (a4)
  {
    uint64_t v9 = result;
    if (a4 == 2)
    {
      BOOL result = (const google::protobuf::Message **)sub_1001437AC(a3, *(a2 - 1), *result);
      if (result)
      {
        *(void *)a5 = *(a2 - 1);
        int v10 = *v9;
      }
      else
      {
        *(void *)a5 = *v9;
        int v10 = *(a2 - 1);
      }
      *(void *)(a5 + 8) = v10;
    }
    else if (a4 == 1)
    {
      *(void *)a5 = *result;
    }
    else if ((uint64_t)a4 > 8)
    {
      sub_1001435F0(result, &result[a4 >> 1], a3, a4 >> 1, a5, a4 >> 1);
      sub_1001435F0(&v9[a4 >> 1], a2, a3, a4 - (a4 >> 1), a5 + 8 * (a4 >> 1), a4 - (a4 >> 1));
      return sub_1001440C4(v9, &v9[a4 >> 1], &v9[a4 >> 1], a2, (const google::protobuf::Message **)a5, a3);
    }
    else
    {
      return sub_100143FE8(result, a2, (const google::protobuf::Message **)a5, a3);
    }
  }
  return result;
}

const google::protobuf::Message **sub_100143CF0(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::Message **a4, const google::protobuf::Message **a5, const google::protobuf::FieldDescriptor **a6)
{
  if (result == a2)
  {
LABEL_10:
    while (a3 != a4)
    {
      BOOL v13 = *a3++;
      *a5++ = v13;
    }
  }
  else
  {
    uint64_t v11 = result;
    while (a3 != a4)
    {
      BOOL result = (const google::protobuf::Message **)sub_1001437AC(a6, *a3, *v11);
      if (result) {
        uint64_t v12 = a3;
      }
      else {
        uint64_t v12 = v11;
      }
      v11 += result ^ 1;
      a3 += result;
      *a5++ = *v12;
      if (v11 == a2) {
        goto LABEL_10;
      }
    }
    if (v11 != a2)
    {
      uint64_t v14 = 0;
      do
      {
        a5[v14] = v11[v14];
        ++v14;
      }
      while (&v11[v14] != a2);
    }
  }
  return result;
}

void sub_100143DB4(const google::protobuf::Message **a1, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4, uint64_t a5, uint64_t a6, const google::protobuf::Message **a7, uint64_t a8)
{
  if (a6)
  {
    uint64_t v9 = a6;
    do
    {
      if (v9 <= a8 || a5 <= a8)
      {
        sub_100144188(a1, a2, a3, a4, a5, v9, a7);
        return;
      }
      if (!a5) {
        return;
      }
      unint64_t v15 = 0;
      uint64_t v16 = 0;
      while (!sub_1001437AC(a4, *a2, a1[v16]))
      {
        ++v16;
        v15 -= 8;
        if (a5 == v16) {
          return;
        }
      }
      uint64_t v32 = a3;
      uint64_t v33 = a8;
      unsigned __int8 v31 = &a1[v15 / 0xFFFFFFFFFFFFFFF8];
      if (a5 - v16 >= v9)
      {
        if (a5 - 1 == v16)
        {
          uint64_t v28 = a1[v16];
          a1[v16] = *a2;
          *a2 = v28;
          return;
        }
        uint64_t v23 = (a5 - v16) / 2;
        uint64_t v22 = (const google::protobuf::Message **)((char *)&a1[v23] - v15);
        uint64_t v35 = *a4;
        int v19 = sub_100144518(a2, a3, v22, &v35);
        uint64_t v18 = v19 - a2;
      }
      else
      {
        if (v9 >= 0) {
          uint64_t v17 = v9;
        }
        else {
          uint64_t v17 = v9 + 1;
        }
        uint64_t v18 = v17 >> 1;
        int v19 = &a2[v17 >> 1];
        uint64_t v20 = sub_10014425C(&a1[v15 / 0xFFFFFFFFFFFFFFF8], a2, v19, a4);
        int64_t v21 = (char *)v20 - (char *)a1;
        uint64_t v22 = v20;
        uint64_t v23 = (uint64_t)(v21 + v15) >> 3;
      }
      uint64_t v29 = a5 - v23 - v16;
      uint64_t v30 = v22;
      uint64_t v24 = v9 - v18;
      uint64_t v25 = sub_1001442E0((char *)v22, (char *)a2, (char *)v19);
      a1 = (const google::protobuf::Message **)v25;
      if (v23 + v18 >= v9 + a5 - (v23 + v18) - v16)
      {
        int v27 = v25;
        sub_100143DB4(v25, v19, v32, a4, v29, v24, a7, v33);
        a2 = v30;
        a1 = v31;
        uint64_t v24 = v18;
        a8 = v33;
        a5 = v23;
        a3 = (const google::protobuf::Message **)v27;
      }
      else
      {
        uint64_t v26 = v18;
        a8 = v33;
        sub_100143DB4(v31, v30, v25, a4, v23, v26, a7, v33);
        a2 = v19;
        a3 = v32;
        a5 = a5 - v23 - v16;
      }
      uint64_t v9 = v24;
    }
    while (v24);
  }
}

const google::protobuf::Message **sub_100143FE8(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4)
{
  if (result != a2)
  {
    uint64_t v6 = result + 1;
    *a3 = *result;
    if (result + 1 != a2)
    {
      uint64_t v8 = 0;
      uint64_t v9 = a3;
      do
      {
        int v10 = v9;
        uint64_t v11 = *v9++;
        BOOL result = (const google::protobuf::Message **)sub_1001437AC(a4, *v6, v11);
        uint64_t v12 = v9;
        if (result)
        {
          v10[1] = *v10;
          uint64_t v12 = a3;
          if (v10 != a3)
          {
            uint64_t v13 = v8;
            while (1)
            {
              uint64_t v12 = (const google::protobuf::Message **)((char *)a3 + v13);
              BOOL result = (const google::protobuf::Message **)sub_1001437AC(a4, *v6, *(const google::protobuf::Message **)((char *)a3 + v13 - 8));
              if (!result) {
                break;
              }
              *uint64_t v12 = *(v12 - 1);
              v13 -= 8;
              if (!v13)
              {
                uint64_t v12 = a3;
                break;
              }
            }
          }
        }
        uint64_t v14 = *v6++;
        *uint64_t v12 = v14;
        v8 += 8;
      }
      while (v6 != a2);
    }
  }
  return result;
}

const google::protobuf::Message **sub_1001440C4(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::Message **a4, const google::protobuf::Message **a5, const google::protobuf::FieldDescriptor **a6)
{
  if (result == a2)
  {
LABEL_10:
    while (a3 != a4)
    {
      uint64_t v13 = *a3++;
      *a5++ = v13;
    }
  }
  else
  {
    uint64_t v11 = result;
    while (a3 != a4)
    {
      BOOL result = (const google::protobuf::Message **)sub_1001437AC(a6, *a3, *v11);
      if (result) {
        uint64_t v12 = a3;
      }
      else {
        uint64_t v12 = v11;
      }
      a3 += result;
      v11 += result ^ 1;
      *a5++ = *v12;
      if (v11 == a2) {
        goto LABEL_10;
      }
    }
    if (v11 != a2)
    {
      uint64_t v14 = 0;
      do
      {
        a5[v14] = v11[v14];
        ++v14;
      }
      while (&v11[v14] != a2);
    }
  }
  return result;
}

void sub_100144188(const google::protobuf::Message **__dst, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4, uint64_t a5, uint64_t a6, const google::protobuf::Message **__src)
{
  if (a5 <= a6)
  {
    uint64_t v12 = __src;
    if (__dst != a2)
    {
      uint64_t v12 = __src;
      uint64_t v13 = __dst;
      do
      {
        uint64_t v14 = *v13++;
        *v12++ = v14;
      }
      while (v13 != a2);
    }
    sub_1001443A4(__src, v12, a2, a3, __dst, a4);
  }
  else
  {
    uint64_t v9 = __src;
    if (a2 != a3)
    {
      uint64_t v9 = __src;
      int v10 = a2;
      do
      {
        uint64_t v11 = *v10++;
        *v9++ = v11;
      }
      while (v10 != a3);
    }
    unint64_t v15 = a4;
    sub_10014445C((uint64_t)v9, (uint64_t)v9, (uint64_t)__src, (uint64_t)__src, (uint64_t)a2, (uint64_t)a2, (uint64_t)__dst, (uint64_t)__dst, (uint64_t)a3, (uint64_t)a3, &v15);
  }
}

const google::protobuf::Message **sub_10014425C(const google::protobuf::Message **a1, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4)
{
  uint64_t v4 = a1;
  if (a2 != a1)
  {
    unint64_t v7 = a2 - a1;
    do
    {
      uint64_t v8 = &v4[v7 >> 1];
      int v10 = *v8;
      uint64_t v9 = v8 + 1;
      if (sub_1001437AC(a4, *a3, v10))
      {
        v7 >>= 1;
      }
      else
      {
        uint64_t v4 = v9;
        v7 += ~(v7 >> 1);
      }
    }
    while (v7);
  }
  return v4;
}

char *sub_1001442E0(char *__src, char *a2, char *a3)
{
  uint64_t v4 = a3;
  if (__src != a2)
  {
    if (a2 == a3)
    {
      return __src;
    }
    else if (__src + 8 == a2)
    {
      uint64_t v6 = *(void *)__src;
      int64_t v7 = a3 - a2;
      memmove(__src, a2, a3 - a2);
      uint64_t v4 = &__src[v7];
      *(void *)uint64_t v4 = v6;
    }
    else if (a2 + 8 == a3)
    {
      uint64_t v8 = *((void *)a3 - 1);
      uint64_t v4 = __src + 8;
      size_t v9 = a3 - 8 - __src;
      if (a3 - 8 != __src) {
        memmove(__src + 8, __src, v9);
      }
      *(void *)__src = v8;
    }
    else
    {
      return (char *)sub_10014459C(__src, a2, a3);
    }
  }
  return v4;
}

const google::protobuf::Message **sub_1001443A4(const google::protobuf::Message **__src, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::Message **a4, const google::protobuf::Message **__dst, const google::protobuf::FieldDescriptor **a6)
{
  if (__src != a2)
  {
    uint64_t v11 = __src;
    while (a3 != a4)
    {
      __src = (const google::protobuf::Message **)sub_1001437AC(a6, *a3, *v11);
      if (__src) {
        uint64_t v12 = a3;
      }
      else {
        uint64_t v12 = v11;
      }
      a3 += __src;
      v11 += __src ^ 1;
      *__dst++ = *v12;
      if (v11 == a2) {
        return __src;
      }
    }
    return (const google::protobuf::Message **)memmove(__dst, v11, (char *)a2 - (char *)v11);
  }
  return __src;
}

void sub_10014445C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, const google::protobuf::FieldDescriptor ***a11)
{
  if (a2 != a4)
  {
    uint64_t v14 = a2;
    unint64_t v15 = (void *)(a10 - 8);
    while (a6 != a8)
    {
      BOOL v16 = sub_1001437AC(*a11, *(const google::protobuf::Message **)(v14 - 8), *(const google::protobuf::Message **)(a6 - 8));
      if (v16) {
        uint64_t v17 = a6;
      }
      else {
        uint64_t v17 = v14;
      }
      if (v16) {
        a6 -= 8;
      }
      else {
        v14 -= 8;
      }
      *v15-- = *(void *)(v17 - 8);
      if (v14 == a4) {
        return;
      }
    }
    uint64_t v18 = 0;
    do
    {
      v15[v18] = *(void *)(v14 + v18 * 8 - 8);
      --v18;
    }
    while (v14 + v18 * 8 != a4);
  }
}

const google::protobuf::Message **sub_100144518(const google::protobuf::Message **a1, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4)
{
  uint64_t v4 = a1;
  if (a2 != a1)
  {
    unint64_t v7 = a2 - a1;
    do
    {
      uint64_t v8 = &v4[v7 >> 1];
      int v10 = *v8;
      size_t v9 = v8 + 1;
      BOOL v11 = sub_1001437AC(a4, v10, *a3);
      if (v11) {
        v7 += ~(v7 >> 1);
      }
      else {
        v7 >>= 1;
      }
      if (v11) {
        uint64_t v4 = v9;
      }
    }
    while (v7);
  }
  return v4;
}

void *sub_10014459C(void *a1, void *a2, void *a3)
{
  uint64_t v3 = a2 - a1;
  if (v3 == a3 - a2)
  {
    if (a1 != a2 && a2 != a3)
    {
      uint64_t v4 = a1 + 1;
      BOOL v5 = a2 + 1;
      do
      {
        uint64_t v6 = *(v4 - 1);
        *(v4 - 1) = *(v5 - 1);
        *(v5 - 1) = v6;
        if (v4 == a2) {
          break;
        }
        ++v4;
      }
      while (v5++ != a3);
    }
  }
  else
  {
    uint64_t v8 = a3 - a2;
    uint64_t v9 = a2 - a1;
    do
    {
      uint64_t v10 = v9;
      uint64_t v9 = v8;
      uint64_t v8 = v10 % v8;
    }
    while (v8);
    if (v9)
    {
      BOOL v11 = &a1[v9];
      do
      {
        uint64_t v13 = *--v11;
        uint64_t v12 = v13;
        uint64_t v14 = &v11[v3];
        unint64_t v15 = v11;
        do
        {
          BOOL v16 = v14;
          *unint64_t v15 = *v14;
          uint64_t v17 = &v14[v3];
          BOOL v18 = __OFSUB__(v3, a3 - v14);
          uint64_t v20 = v3 - (a3 - v14);
          char v19 = (v20 < 0) ^ v18;
          uint64_t v14 = &a1[v20];
          if (v19) {
            uint64_t v14 = v17;
          }
          unint64_t v15 = v16;
        }
        while (v14 != v11);
        *BOOL v16 = v12;
      }
      while (v11 != a1);
    }
    return &a1[a3 - a2];
  }
  return a2;
}

void google::protobuf::StringPiece::LogFatalSizeTooBig(google::protobuf::StringPiece *this, const std::string::value_type *a2, const char *a3)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/stubs/stringpiece.cc", 49);
  BOOL v5 = google::protobuf::internal::LogMessage::operator<<(v10, "size too big: ");
  uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, (uint64_t)this);
  unint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, " details: ");
  uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, a2);
  google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v8->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
}

void sub_1001446F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::StringPiece::find(google::protobuf::StringPiece *this, int a2, unint64_t a3)
{
  uint64_t v3 = *((void *)this + 1);
  if (v3 < 1 || v3 <= a3) {
    return -1;
  }
  uint64_t v6 = *(void *)this;
  unint64_t v7 = memchr((void *)(*(void *)this + a3), a2, v3 - a3);
  if (v7) {
    return (uint64_t)v7 - v6;
  }
  else {
    return -1;
  }
}

uint64_t google::protobuf::StringPiece::find_first_of(google::protobuf::StringPiece *a1, unsigned __int8 *a2, uint64_t a3, int64_t a4)
{
  uint64_t v4 = *((void *)a1 + 1);
  if (v4 < 1 || a3 < 1) {
    return -1;
  }
  if (a3 != 1)
  {
    memset(v9, 0, sizeof(v9));
    do
    {
      unsigned int v8 = *a2++;
      *((unsigned char *)v9 + v8) = 1;
      --a3;
    }
    while (a3);
    if (v4 > a4)
    {
      while (!*((unsigned char *)v9 + *(unsigned __int8 *)(*(void *)a1 + a4)))
      {
        if (v4 == ++a4) {
          return -1;
        }
      }
      return a4;
    }
    return -1;
  }
  int v6 = (char)*a2;
  return google::protobuf::StringPiece::find(a1, v6, a4);
}

uint64_t google::protobuf::StringPiece::find_first_not_of(void *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a1[1];
  if (v4 < 1) {
    return -1;
  }
  if (a3 < 1) {
    return 0;
  }
  if (a3 != 1)
  {
    memset(v7, 0, sizeof(v7));
    do
    {
      unsigned int v5 = *a2++;
      *((unsigned char *)v7 + v5) = 1;
      --a3;
    }
    while (a3);
    if (v4 > a4)
    {
      while (*((unsigned char *)v7 + *(unsigned __int8 *)(*a1 + a4)))
      {
        if (v4 == ++a4) {
          return -1;
        }
      }
      return a4;
    }
    return -1;
  }
  if (v4 <= (unint64_t)a4) {
    return -1;
  }
  while (*(unsigned __int8 *)(*a1 + a4) == *a2)
  {
    if (v4 == ++a4) {
      return -1;
    }
  }
  return a4;
}

uint64_t google::protobuf::StringPiece::find_last_of(uint64_t *a1, unsigned __int8 *a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = a1[1];
  BOOL v6 = v4 < 1;
  unint64_t v5 = v4 - 1;
  BOOL v6 = v6 || a3 < 1;
  if (v6) {
    return -1;
  }
  if (a3 == 1)
  {
    if (v5 >= a4) {
      uint64_t result = a4;
    }
    else {
      uint64_t result = v5;
    }
    uint64_t v9 = *a1;
    while (*(unsigned __int8 *)(v9 + result) != *a2)
    {
      BOOL v6 = result-- < 1;
      if (v6) {
        return -1;
      }
    }
    return result;
  }
  memset(v12, 0, sizeof(v12));
  do
  {
    unsigned int v10 = *a2++;
    *((unsigned char *)v12 + v1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = 1;
    --a3;
  }
  while (a3);
  uint64_t result = v5 >= a4 ? a4 : v5;
  if (result < 0) {
    return -1;
  }
  uint64_t v11 = *a1;
  while (!*((unsigned char *)v12 + *(unsigned __int8 *)(v11 + result)))
  {
    BOOL v6 = result-- <= 0;
    if (v6) {
      return -1;
    }
  }
  return result;
}

unint64_t google::protobuf::StringPiece::substr(google::protobuf::StringPiece *this, unint64_t a2)
{
  if (*((void *)this + 1) >= a2) {
    unint64_t v2 = a2;
  }
  else {
    unint64_t v2 = *((void *)this + 1);
  }
  return *(void *)this + v2;
}

uint64_t google::protobuf::io::Tokenizer::Tokenizer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = a3;
  *(void *)(a1 + 14google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = 0;
  *(void *)(a1 + 128) = 0;
  *(unsigned char *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = -1;
  *(unsigned char *)(a1 + 164) = 0;
  *(_DWORD *)(a1 + 168) = 0;
  *(_WORD *)(a1 + 172) = 1;
  *(void *)(a1 + ++*(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = 0;
  *(_DWORD *)a1 = 0;
  google::protobuf::io::Tokenizer::Refresh(a1);
  return a1;
}

void sub_100144B2C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 79) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::Tokenizer::Refresh(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 136))
  {
    *(unsigned char *)(this + 112) = 0;
  }
  else
  {
    unint64_t v2 = *(std::string **)(this + 152);
    if (v2)
    {
      uint64_t v3 = *(int *)(v1 + 160);
      int v4 = *(_DWORD *)(v1 + 128);
      if (v4 > (int)v3)
      {
        std::string::append(v2, (const std::string::value_type *)(*(void *)(v1 + 120) + v3), v4 - (int)v3);
        *(_DWORD *)(v1 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = 0;
      }
    }
    unint64_t v7 = 0;
    *(void *)(v1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = 0;
    *(_DWORD *)(v1 + 1++*(_DWORD *)(result + 32) = 0;
    while (1)
    {
      this = (*(uint64_t (**)(void, char **, uint64_t))(**(void **)(v1 + 96) + 16))(*(void *)(v1 + 96), &v7, v1 + 128);
      if ((this & 1) == 0) {
        break;
      }
      if (*(_DWORD *)(v1 + 128))
      {
        unint64_t v5 = v7;
        *(void *)(v1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v7;
        char v6 = *v5;
        goto LABEL_11;
      }
    }
    char v6 = 0;
    *(_DWORD *)(v1 + 128) = 0;
    *(unsigned char *)(v1 + 136) = 1;
LABEL_11:
    *(unsigned char *)(v1 + 112) = v6;
  }
  return this;
}

void google::protobuf::io::Tokenizer::~Tokenizer(google::protobuf::io::Tokenizer *this)
{
  int v2 = *((_DWORD *)this + 32);
  int v3 = *((_DWORD *)this + 33);
  if (v2 > v3) {
    (*(void (**)(void, void))(**((void **)this + 12) + 24))(*((void *)this + 12), (v2 - v3));
  }
  if (*((char *)this + 79) < 0) {
    operator delete(*((void **)this + 7));
  }
  if (*((char *)this + 31) < 0) {
    operator delete(*((void **)this + 1));
  }
}

uint64_t google::protobuf::io::Tokenizer::NextChar(uint64_t this)
{
  int v1 = *(unsigned __int8 *)(this + 112);
  if (v1 == 9)
  {
    int v2 = *(_DWORD *)(this + 144);
    if (v2 <= 0) {
      int v3 = -(-v2 & 7);
    }
    else {
      int v3 = *(_DWORD *)(this + 144) & 7;
    }
    int v4 = v2 - v3 + 8;
  }
  else
  {
    if (v1 == 10)
    {
      *(void *)(this + 14google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = (*(_DWORD *)(this + 140) + 1);
      goto LABEL_10;
    }
    int v4 = *(_DWORD *)(this + 144) + 1;
  }
  *(_DWORD *)(this + 144) = v4;
LABEL_10:
  int v5 = *(_DWORD *)(this + 128);
  uint64_t v6 = *(int *)(this + 132) + 1;
  *(_DWORD *)(this + 1++*(_DWORD *)(result + 32) = v6;
  if ((int)v6 >= v5) {
    return google::protobuf::io::Tokenizer::Refresh(this);
  }
  *(unsigned char *)(this + 112) = *(unsigned char *)(*(void *)(this + 120) + v6);
  return this;
}

void google::protobuf::io::Tokenizer::ConsumeString(google::protobuf::io::Tokenizer *this, unsigned __int8 a2)
{
  while (1)
  {
    int v4 = *((char *)this + 112);
    if (v4 == 10) {
      break;
    }
    if (v4 == 92)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v6 = *((unsigned __int8 *)this + 112);
      BOOL v7 = (v6 - 97) > 0x15 || ((1 << (v6 - 97)) & 0x2A2023) == 0;
      if (!v7
        || (v6 - 34) <= 0x3A && ((1 << (v6 - 34)) & 0x400000020000021) != 0
        || (v6 & 0xF8) == 0x30)
      {
        goto LABEL_22;
      }
      switch(v6)
      {
        case 'U':
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if (*((unsigned char *)this + 112) != 48) {
            goto LABEL_41;
          }
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if (*((unsigned char *)this + 112) != 48) {
            goto LABEL_41;
          }
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((unsigned char *)this + 112) & 0xFE) != 0x30) {
            goto LABEL_41;
          }
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((unsigned char *)this + 112) - 48) >= 0xAu)
          {
            unsigned int v9 = *((unsigned __int8 *)this + 112) - 65;
            if (v9 > 0x25 || ((1 << v9) & 0x3F0000003FLL) == 0) {
              goto LABEL_41;
            }
          }
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((unsigned char *)this + 112) - 48) >= 0xAu)
          {
            unsigned int v10 = *((unsigned __int8 *)this + 112) - 65;
            if (v10 > 0x25 || ((1 << v10) & 0x3F0000003FLL) == 0) {
              goto LABEL_41;
            }
          }
          if ((google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v11 = *((unsigned __int8 *)this + 112) - 65, v11 > 0x25) || ((1 << v11) & 0x3F0000003FLL) == 0)
            || (google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v12 = *((unsigned __int8 *)this + 112) - 65, v12 > 0x25) || ((1 << v12) & 0x3F0000003FLL) == 0)
            || (google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v13 = *((unsigned __int8 *)this + 112) - 65, v13 > 0x25) || ((1 << v13) & 0x3F0000003FLL) == 0))
          {
LABEL_41:
            sub_1000BBA84(__p, "Expected eight hex digits up to 10ffff for \\U escape sequence");
            (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
            goto LABEL_56;
          }
LABEL_22:
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          break;
        case 'u':
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((unsigned char *)this + 112) - 48) >= 0xAu
            && ((unsigned int v14 = *((unsigned __int8 *)this + 112) - 65, v14 > 0x25) || ((1 << v14) & 0x3F0000003FLL) == 0)
            || (google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v15 = *((unsigned __int8 *)this + 112) - 65, v15 > 0x25) || ((1 << v15) & 0x3F0000003FLL) == 0)
            || (google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v16 = *((unsigned __int8 *)this + 112) - 65, v16 > 0x25) || ((1 << v16) & 0x3F0000003FLL) == 0)
            || (google::protobuf::io::Tokenizer::NextChar((uint64_t)this),
                (*((unsigned char *)this + 112) - 48) >= 0xAu)
            && ((unsigned int v17 = *((unsigned __int8 *)this + 112) - 65, v17 > 0x25) || ((1 << v17) & 0x3F0000003FLL) == 0))
          {
            sub_1000BBA84(__p, "Expected four hex digits for \\u escape sequence.");
            (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
            goto LABEL_56;
          }
          goto LABEL_22;
        case 'x':
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          if ((*((unsigned char *)this + 112) - 48) < 0xAu) {
            goto LABEL_22;
          }
          unsigned int v8 = *((unsigned __int8 *)this + 112) - 65;
          if (v8 <= 0x25 && ((1 << v8) & 0x3F0000003FLL) != 0) {
            goto LABEL_22;
          }
          sub_1000BBA84(__p, "Expected hex digits for escape sequence.");
          (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
LABEL_56:
          if (v19 < 0) {
            operator delete(__p[0]);
          }
          break;
        default:
          sub_1000BBA84(__p, "Invalid escape sequence in string literal.");
          (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
          goto LABEL_56;
      }
    }
    else
    {
      if (!*((unsigned char *)this + 112))
      {
        sub_1000BBA84(__p, "Unexpected end of string.");
        (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        goto LABEL_60;
      }
      int v5 = *((unsigned __int8 *)this + 112);
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if (v5 == a2) {
        return;
      }
    }
  }
  if (*((unsigned char *)this + 173)) {
    goto LABEL_22;
  }
  sub_1000BBA84(__p, "String literals cannot cross line boundaries.");
  (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
LABEL_60:
  if (v19 < 0) {
    operator delete(__p[0]);
  }
}

void sub_10014526C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::Tokenizer::ConsumeNumber(google::protobuf::io::Tokenizer *this, int a2, int a3)
{
  if (a2)
  {
    int v4 = *((unsigned __int8 *)this + 112);
    if ((v4 | 0x20) == 0x78)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if ((*((unsigned char *)this + 112) - 48) > 9u
        && ((unsigned int v5 = *((unsigned __int8 *)this + 112) - 65, v18 = v5 > 0x25, v6 = (1 << v5) & 0x3F0000003FLL, !v18)
          ? (BOOL v7 = v6 == 0)
          : (BOOL v7 = 1),
            v7))
      {
        sub_1000BBA84(__p, "\"0x\" must be followed by hex digits.");
        (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        if (v21 < 0) {
          operator delete(__p[0]);
        }
      }
      else
      {
        do
        {
          do
            google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          while ((*((unsigned char *)this + 112) - 48) < 0xAu);
          unsigned int v8 = *((unsigned __int8 *)this + 112) - 65;
          BOOL v18 = v8 > 0x25;
          uint64_t v9 = (1 << v8) & 0x3F0000003FLL;
        }
        while (!v18 && v9 != 0);
      }
LABEL_14:
      int v11 = 0;
      goto LABEL_49;
    }
    if ((v4 - 48) <= 9)
    {
      if ((v4 & 0xF8) != 0x30) {
        goto LABEL_21;
      }
      do
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v12 = *((unsigned __int8 *)this + 112);
      }
      while ((v12 & 0xF8) == 0x30);
      if ((v12 - 48) <= 9)
      {
LABEL_21:
        sub_1000BBA84(__p, "Numbers starting with leading zero must be in octal.");
        (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
        if (v21 < 0) {
          operator delete(__p[0]);
        }
        if (*((unsigned __int8 *)this + 112) - 48 <= 9)
        {
          do
          {
            google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
            int v11 = 0;
          }
          while (*((unsigned __int8 *)this + 112) - 48 < 0xA);
          goto LABEL_49;
        }
      }
      goto LABEL_14;
    }
  }
  int v13 = *((unsigned __int8 *)this + 112);
  unsigned int v14 = v13 - 48;
  if (a3)
  {
    if (v14 <= 9)
    {
      do
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 - 48) < 0xA);
    }
  }
  else
  {
    if (v14 <= 9)
    {
      do
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 - 48) < 0xA);
    }
    if (v13 != 46)
    {
      int v11 = 0;
      goto LABEL_35;
    }
    google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    int v13 = *((unsigned __int8 *)this + 112);
    if ((v13 - 48) <= 9)
    {
      do
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        int v13 = *((unsigned __int8 *)this + 112);
      }
      while ((v13 - 48) < 0xA);
    }
  }
  int v11 = 1;
LABEL_35:
  if ((v13 | 0x20) == 0x65)
  {
    google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    int v15 = *((unsigned __int8 *)this + 112);
    if (v15 == 45 || v15 == 43) {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    if (*((unsigned __int8 *)this + 112) - 48 > 9)
    {
      sub_1000BBA84(__p, "\"e\" must be followed by exponent.");
      (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
      if (v21 < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      do
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      while (*((unsigned __int8 *)this + 112) - 48 < 0xA);
    }
    int v11 = 1;
  }
  if (*((unsigned char *)this + 164))
  {
    int v16 = *((unsigned __int8 *)this + 112);
    if (v16 == 70 || v16 == 102)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v11 = 1;
    }
  }
LABEL_49:
  int v17 = *((unsigned __int8 *)this + 112);
  BOOL v18 = v17 != 95 && (v17 & 0xFFFFFFDF) - 65 > 0x19;
  if (v18 || !*((unsigned char *)this + 172))
  {
    if (v17 != 46) {
      goto LABEL_62;
    }
    if (v11) {
      sub_1000BBA84(__p, "Already saw decimal point or exponent; can't have another one.");
    }
    else {
      sub_1000BBA84(__p, "Hex and octal numbers must be integers.");
    }
    (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  }
  else
  {
    sub_1000BBA84(__p, "Need space between number and identifier.");
    (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
  }
  if (v21 < 0) {
    operator delete(__p[0]);
  }
LABEL_62:
  if (v11) {
    return 4;
  }
  else {
    return 3;
  }
}

void sub_1001456E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::Tokenizer::ConsumeLineComment(uint64_t this, uint64_t a2)
{
  uint64_t v3 = this;
  if (a2)
  {
    *(void *)(this + 152) = a2;
    *(_DWORD *)(this + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = *(_DWORD *)(this + 132);
  }
  while (*(unsigned char *)(v3 + 112))
  {
    if (*(unsigned char *)(v3 + 112) == 10)
    {
      this = google::protobuf::io::Tokenizer::NextChar(v3);
      break;
    }
    this = google::protobuf::io::Tokenizer::NextChar(v3);
  }
  if (a2)
  {
    int v4 = *(_DWORD *)(v3 + 132);
    uint64_t v5 = *(int *)(v3 + 160);
    if (v4 != v5) {
      this = (uint64_t)std::string::append(*(std::string **)(v3 + 152), (const std::string::value_type *)(*(void *)(v3 + 120) + v5), v4 - (int)v5);
    }
    *(void *)(v3 + 152) = 0;
    *(_DWORD *)(v3 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = -1;
  }
  return this;
}

void google::protobuf::io::Tokenizer::ConsumeBlockComment(google::protobuf::io::Tokenizer *this, uint64_t a2)
{
  uint64_t v4 = *((unsigned int *)this + 35);
  uint64_t v5 = (*((_DWORD *)this + 36) - 2);
  if (a2)
  {
    *((void *)this + 19) = a2;
    *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = *((_DWORD *)this + 33);
  }
  while (1)
  {
    while (1)
    {
      unsigned int v6 = *((unsigned __int8 *)this + 112);
      if (v6 > 0x29) {
        break;
      }
      if (*((unsigned char *)this + 112))
      {
        if (v6 != 10) {
          goto LABEL_22;
        }
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (a2)
        {
          int v7 = *((_DWORD *)this + 33);
          uint64_t v8 = *((int *)this + 40);
          if (v7 != v8) {
            std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v8), v7 - (int)v8);
          }
          *((void *)this + 19) = 0;
          *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = -1;
        }
        while (1)
        {
          uint64_t v9 = *((unsigned __int8 *)this + 112);
          if (v9 > 0x2A) {
            break;
          }
          if (((1 << v9) & 0x100003A00) == 0)
          {
            if (v9 == 42)
            {
              google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
              if (*((unsigned char *)this + 112) == 47)
              {
                google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
                return;
              }
            }
            break;
          }
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        }
        if (a2)
        {
          *((void *)this + 19) = a2;
          *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = *((_DWORD *)this + 33);
        }
      }
      else
      {
LABEL_24:
        if (!v6)
        {
          sub_1000BBA84(__p, "End-of-file inside block comment.");
          (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
          if (v17 < 0) {
            operator delete(__p[0]);
          }
          uint64_t v10 = *((void *)this + 13);
          sub_1000BBA84(__p, "  Comment started here.");
          (*(void (**)(uint64_t, uint64_t, uint64_t, void **))(*(void *)v10 + 16))(v10, v4, v5, __p);
          if (v17 < 0) {
            operator delete(__p[0]);
          }
          if (a2)
          {
            int v11 = *((_DWORD *)this + 33);
            uint64_t v12 = *((int *)this + 40);
            if (v11 != v12) {
              std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v12), v11 - (int)v12);
            }
            *((void *)this + 19) = 0;
            *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = -1;
          }
          return;
        }
      }
    }
    if (v6 == 42) {
      break;
    }
    if (v6 == 47)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      unsigned int v6 = *((unsigned __int8 *)this + 112);
      if (v6 != 42) {
        goto LABEL_24;
      }
      sub_1000BBA84(__p, "\"/*\" inside block comment.  Block comments cannot be nested.");
      (*(void (**)(void, void, void, void **))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), __p);
      if (v17 < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
LABEL_22:
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
  }
  google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  unsigned int v6 = *((unsigned __int8 *)this + 112);
  if (v6 != 47) {
    goto LABEL_24;
  }
  google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  if (a2)
  {
    int v13 = *((_DWORD *)this + 33);
    uint64_t v14 = *((int *)this + 40);
    if (v13 != v14) {
      std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v14), v13 - (int)v14);
    }
    *((void *)this + 19) = 0;
    *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = -1;
    if (*(char *)(a2 + 23) < 0) {
      uint64_t v15 = *(void *)(a2 + 8);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(a2 + 23);
    }
    std::string::erase((std::string *)a2, v15 - 2, 0xFFFFFFFFFFFFFFFFLL);
  }
}

void sub_100145AA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::Tokenizer::TryConsumeCommentStart(google::protobuf::io::Tokenizer *this)
{
  int v2 = *((_DWORD *)this + 42);
  if (v2 == 1)
  {
    if (*((unsigned char *)this + 112) == 35)
    {
LABEL_8:
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      return 0;
    }
    return 3;
  }
  if (v2 || *((unsigned char *)this + 112) != 47) {
    return 3;
  }
  google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  int v3 = *((unsigned __int8 *)this + 112);
  if (v3 != 42)
  {
    if (v3 != 47)
    {
      *(_DWORD *)this = 6;
      std::string::assign((std::string *)((char *)this + 8), "/");
      int v4 = *((_DWORD *)this + 36);
      *((_DWORD *)this + 8) = *((_DWORD *)this + 35);
      *((_DWORD *)this + 9) = v4 - 1;
      *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v4;
      return 2;
    }
    goto LABEL_8;
  }
  google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
  return 1;
}

uint64_t google::protobuf::io::Tokenizer::Next(google::protobuf::io::Tokenizer *this)
{
  *((_DWORD *)this + 12) = *(_DWORD *)this;
  std::string::operator=((std::string *)((char *)this + 56), (const std::string *)((char *)this + 8));
  *((void *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = *((void *)this + 4);
  *((_DWORD *)this + 22) = *((_DWORD *)this + 10);
  if (*((unsigned char *)this + 136)) {
    goto LABEL_2;
  }
  while (1)
  {
LABEL_4:
    while (1)
    {
      int v2 = *((unsigned __int8 *)this + 112);
      if ((v2 - 9) >= 5 && v2 != 32) {
        break;
      }
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    int v3 = google::protobuf::io::Tokenizer::TryConsumeCommentStart(this);
    if (!v3)
    {
      google::protobuf::io::Tokenizer::ConsumeLineComment((uint64_t)this, 0);
      goto LABEL_20;
    }
    if (v3 != 1) {
      break;
    }
    google::protobuf::io::Tokenizer::ConsumeBlockComment(this, 0);
LABEL_20:
    if (*((unsigned char *)this + 136)) {
      goto LABEL_2;
    }
  }
  if (v3 == 2) {
    return 1;
  }
  if (*((unsigned char *)this + 136)) {
    goto LABEL_2;
  }
  uint64_t v4 = *((unsigned __int8 *)this + 112);
  if (v4 > 0x1F)
  {
    *(_DWORD *)this = 0;
    if (*((char *)this + 31) < 0)
    {
      **((unsigned char **)this + 1) = 0;
      *((void *)this + 2) = 0;
      uint64_t v4 = *((unsigned __int8 *)this + 112);
    }
    else
    {
      *((unsigned char *)this + 8) = 0;
      *((unsigned char *)this + 31) = 0;
    }
    uint64_t v7 = *((unsigned int *)this + 35);
    uint64_t v8 = *((unsigned int *)this + 36);
    *((_DWORD *)this + 8) = v7;
    *((_DWORD *)this + 9) = v8;
    *((void *)this + 19) = (char *)this + 8;
    *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = *((_DWORD *)this + 33);
    if (v4 == 95 || (v4 & 0xFFFFFFDF) - 65 <= 0x19)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      int v11 = *((unsigned __int8 *)this + 112);
      if (v11 == 95 || (v11 - 48) < 0xA || (v11 & 0xFFFFFFDF) - 65 <= 0x19)
      {
        do
        {
          google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
          int v12 = *((unsigned __int8 *)this + 112);
        }
        while (v12 == 95 || (v12 - 48) < 0xA || (v12 & 0xFFFFFFDF) - 65 < 0x1A);
      }
      int v15 = 2;
      goto LABEL_68;
    }
    if (v4 == 46)
    {
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
      if (*((unsigned __int8 *)this + 112) - 48 <= 9)
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        if (*((_DWORD *)this + 12) == 2
          && *((_DWORD *)this + 8) == *((_DWORD *)this + 20)
          && *((_DWORD *)this + 9) == *((_DWORD *)this + 22))
        {
          uint64_t v16 = *((void *)this + 13);
          uint64_t v17 = *((unsigned int *)this + 35);
          uint64_t v18 = (*((_DWORD *)this + 36) - 2);
          sub_1000BBA84(&__p, "Need space between identifier and decimal point.");
          (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)v16 + 16))(v16, v17, v18, &__p);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        uint64_t v9 = this;
        int v10 = 0;
        int v19 = 1;
        goto LABEL_57;
      }
    }
    else
    {
      if (v4 == 48)
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        uint64_t v9 = this;
        int v10 = 1;
LABEL_56:
        int v19 = 0;
LABEL_57:
        int v15 = google::protobuf::io::Tokenizer::ConsumeNumber(v9, v10, v19);
LABEL_68:
        *(_DWORD *)this = v15;
        int v23 = *((_DWORD *)this + 33);
        uint64_t v24 = *((int *)this + 40);
        if (v23 != v24) {
          std::string::append(*((std::string **)this + 19), (const std::string::value_type *)(*((void *)this + 15) + v24), v23 - (int)v24);
        }
        *((void *)this + 19) = 0;
        *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = -1;
        int v6 = *((_DWORD *)this + 36);
        uint64_t result = 1;
        goto LABEL_24;
      }
      if ((v4 - 48) <= 9)
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        uint64_t v9 = this;
        int v10 = 0;
        goto LABEL_56;
      }
      if (v4 == 39)
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        uint64_t v20 = this;
        unsigned __int8 v21 = 39;
        goto LABEL_62;
      }
      if (v4 == 34)
      {
        google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
        uint64_t v20 = this;
        unsigned __int8 v21 = 34;
LABEL_62:
        google::protobuf::io::Tokenizer::ConsumeString(v20, v21);
        int v15 = 5;
        goto LABEL_68;
      }
      if ((v4 & 0x80) != 0)
      {
        uint64_t v22 = *((void *)this + 13);
        google::protobuf::StringPrintf((google::protobuf *)"Interpreting non ascii codepoint %d.", &__p, v4);
        (*(void (**)(uint64_t, uint64_t, uint64_t, std::string *))(*(void *)v22 + 16))(v22, v7, v8, &__p);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    }
    int v15 = 6;
    goto LABEL_68;
  }
  sub_1000BBA84(&__p, "Invalid control characters encountered in text.");
  (*(void (**)(void, void, void, std::string *))(**((void **)this + 13) + 16))(*((void *)this + 13), *((unsigned int *)this + 35), *((unsigned int *)this + 36), &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  while (1)
  {
    do
      google::protobuf::io::Tokenizer::NextChar((uint64_t)this);
    while (*((unsigned __int8 *)this + 112) - 1 < 0x1F);
    if (*((unsigned char *)this + 136)) {
      break;
    }
    if (*((unsigned char *)this + 112)) {
      goto LABEL_4;
    }
  }
LABEL_2:
  *(_DWORD *)this = 1;
  if (*((char *)this + 31) < 0)
  {
    **((unsigned char **)this + 1) = 0;
    *((void *)this + 2) = 0;
  }
  else
  {
    *((unsigned char *)this + 8) = 0;
    *((unsigned char *)this + 31) = 0;
  }
  uint64_t result = 0;
  int v6 = *((_DWORD *)this + 36);
  *((_DWORD *)this + 8) = *((_DWORD *)this + 35);
  *((_DWORD *)this + 9) = v6;
LABEL_24:
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v6;
  return result;
}

void sub_100145FD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::io::Tokenizer::ParseInteger(unsigned __int8 *a1, unint64_t a2, unint64_t *a3)
{
  if ((a1[23] & 0x80u) == 0) {
    int v3 = a1;
  }
  else {
    int v3 = *(unsigned __int8 **)a1;
  }
  LODWORD(v4) = *v3;
  if (v4 == 48)
  {
    if ((v3[1] | 0x20) == 0x78)
    {
      int v5 = v3[2];
      v3 += 2;
      LOBYTE(v4) = v5;
      unsigned int v6 = 16;
      if (!v5)
      {
LABEL_9:
        unint64_t v7 = 0;
LABEL_25:
        *a3 = v7;
        return 1;
      }
    }
    else
    {
      LOBYTE(v4) = 48;
      unsigned int v6 = 8;
    }
  }
  else
  {
    unsigned int v6 = 10;
    if (!*v3) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0;
  uint64_t v8 = v3 + 1;
  while (1)
  {
    int v9 = (char)v4;
    unsigned int v10 = (v4 - 48);
    int v11 = (v9 - 65) >= 0x1A ? -1 : v9 - 55;
    int v12 = (v9 - 97) <= 0x19 ? v9 - 87 : v11;
    int v13 = v9 - 48;
    uint64_t v4 = v10 <= 9 ? v13 : v12;
    if (v4 >= v6 || a2 < v4 || v7 > (a2 - v4) / v6) {
      return 0;
    }
    unint64_t v7 = v4 + v7 * v6;
    int v14 = *v8++;
    LOBYTE(v4) = v14;
    if (!v14) {
      goto LABEL_25;
    }
  }
}

double google::protobuf::io::Tokenizer::ParseFloat(uint64_t a1, uint64_t a2, char **a3)
{
  if (*(char *)(a1 + 23) >= 0) {
    uint64_t v4 = (google::protobuf::io *)a1;
  }
  else {
    uint64_t v4 = *(google::protobuf::io **)a1;
  }
  *(void *)int v19 = 0;
  google::protobuf::io::NoLocaleStrtod(v4, v19, a3);
  double v6 = v5;
  unint64_t v7 = *(unsigned __int8 **)v19;
  int v8 = **(unsigned char **)v19;
  if ((v8 | 0x20) == 0x65)
  {
    int v9 = (unsigned __int8 *)++*(void *)v19;
    int v8 = v7[1];
    if (v8 == 45 || v8 == 43)
    {
      int v9 = v7 + 2;
      *(void *)int v19 = v7 + 2;
      int v8 = v7[2];
    }
    unint64_t v7 = v9;
  }
  if ((v8 | 0x20) == 0x66) {
    *(void *)int v19 = ++v7;
  }
  uint64_t v10 = v7 - (unsigned __int8 *)v4;
  uint64_t v11 = *(unsigned __int8 *)(a1 + 23);
  if ((v11 & 0x80u) != 0) {
    uint64_t v11 = *(void *)(a1 + 8);
  }
  if (v10 != v11 || *(unsigned char *)v4 == 45)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/tokenizer.cc", 921);
    int v12 = google::protobuf::internal::LogMessage::operator<<(v18, " Tokenizer::ParseFloat() passed text that could not have been tokenized as a float: ");
    google::protobuf::CEscape((uint64_t *)a1, v13, &__p);
    int v14 = google::protobuf::internal::LogMessage::operator<<(v12, (const std::string::value_type *)&__p);
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v14->__r_.__value_.__l.__data_);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
  }
  return v6;
}

void sub_100146214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, void *a17)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  google::protobuf::internal::LogMessage::~LogMessage(&a17);
  _Unwind_Resume(a1);
}

void google::protobuf::io::Tokenizer::ParseStringAppend(unsigned __int8 *a1, std::string *this)
{
  uint64_t v3 = a1[23];
  signed __int8 v4 = v3;
  if ((v3 & 0x80u) != 0) {
    uint64_t v3 = *((void *)a1 + 1);
  }
  if (v3)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
    {
      std::string::size_type size = this->__r_.__value_.__l.__size_;
      std::string::size_type v7 = (this->__r_.__value_.__r.__words[2] & 0x7FFFFFFFFFFFFFFFLL) - 1;
    }
    else
    {
      std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
      std::string::size_type v7 = 22;
    }
    if (size + v3 > v7)
    {
      std::string::reserve(this, size + v3);
      signed __int8 v4 = a1[23];
    }
    if (v4 >= 0) {
      uint64_t v11 = (uint64_t)a1;
    }
    else {
      uint64_t v11 = *(void *)a1;
    }
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v12 = v11;
          uint64_t v14 = v11 + 1;
          int v13 = *(unsigned __int8 *)(v11 + 1);
          if (v13 == 92) {
            break;
          }
          if (!*(unsigned char *)(v11 + 1)) {
            return;
          }
LABEL_31:
          if ((a1[23] & 0x80u) == 0) {
            uint64_t v26 = a1;
          }
          else {
            uint64_t v26 = *(unsigned __int8 **)a1;
          }
          if (v13 == *v26)
          {
            uint64_t v11 = v14;
            if (!*(unsigned char *)(v12 + 2)) {
              continue;
            }
          }
          std::string::push_back(this, v13);
          uint64_t v11 = v14;
        }
        v11 += 2;
        int v15 = *(unsigned __int8 *)(v12 + 2);
        if (!*(unsigned char *)(v12 + 2)) {
          goto LABEL_31;
        }
        if (((char)v15 & 0xFFFFFFF8) == 0x30)
        {
          std::string::value_type v16 = v15 - 48;
          char v18 = *(unsigned char *)(v12 + 3);
          uint64_t v17 = v12 + 3;
          std::string::value_type v19 = v18 + 8 * (v15 - 48) - 48;
          BOOL v20 = (v18 & 0xF8) == 48;
          if ((v18 & 0xF8) == 0x30) {
            uint64_t v21 = v17;
          }
          else {
            uint64_t v21 = v11;
          }
          if (v20) {
            std::string::value_type v16 = v19;
          }
          char v22 = *(unsigned char *)(v21 + 1);
          int v23 = v22 & 0xF8;
          std::string::value_type v24 = v22 + 8 * v16 - 48;
          if (v23 == 48) {
            uint64_t v11 = v21 + 1;
          }
          else {
            uint64_t v11 = v21;
          }
          if (v23 == 48) {
            std::string::value_type v16 = v24;
          }
          std::string::value_type v25 = v16;
          goto LABEL_64;
        }
        if (v15 == 85 || v15 == 117) {
          break;
        }
        if (v15 == 120)
        {
          int v29 = *(unsigned __int8 *)(v12 + 3);
          uint64_t v28 = v12 + 3;
          int v27 = v29;
          unsigned __int8 v30 = v29 - 48;
          unsigned __int8 v31 = v29 - 97;
          if ((v29 - 48) < 0xA || v31 < 6u)
          {
            if (v30 <= 9u)
            {
              std::string::value_type v32 = v27 - 48;
              goto LABEL_75;
            }
          }
          else if ((v27 - 65) > 5)
          {
            std::string::value_type v32 = 0;
            uint64_t v28 = v11;
            goto LABEL_75;
          }
          if ((v27 - 65) >= 0x1A) {
            char v45 = -1;
          }
          else {
            char v45 = v27 - 55;
          }
          std::string::value_type v46 = v27 - 87;
          if (v31 <= 0x19u) {
            std::string::value_type v32 = v46;
          }
          else {
            std::string::value_type v32 = v45;
          }
LABEL_75:
          int v47 = *(unsigned __int8 *)(v28 + 1);
          if ((v47 - 48) >= 0xA && (v47 - 97) >= 6u)
          {
            if ((v47 - 65) > 5) {
              goto LABEL_87;
            }
            char v48 = 16 * v32;
LABEL_81:
            unsigned int v50 = (v47 - 97);
            if ((v47 - 65) >= 0x1A) {
              char v51 = -1;
            }
            else {
              char v51 = v47 - 55;
            }
            char v49 = v47 - 87;
            if (v50 > 0x19) {
              char v49 = v51;
            }
            goto LABEL_86;
          }
          char v48 = 16 * v32;
          if ((v47 - 48) > 9u) {
            goto LABEL_81;
          }
          char v49 = v47 - 48;
LABEL_86:
          std::string::value_type v32 = v49 + v48;
          ++v28;
LABEL_87:
          std::string::push_back(this, v32);
          uint64_t v11 = v28;
        }
        else
        {
          if ((char)v15 > 97)
          {
            switch((char)v15)
            {
              case 'n':
                std::string::value_type v25 = 10;
                break;
              case 'o':
              case 'p':
              case 'q':
              case 's':
              case 'u':
                goto LABEL_102;
              case 'r':
                std::string::value_type v25 = 13;
                break;
              case 't':
                std::string::value_type v25 = 9;
                break;
              case 'v':
                std::string::value_type v25 = 11;
                break;
              default:
                if ((char)v15 == 102)
                {
                  std::string::value_type v25 = 12;
                }
                else
                {
                  if ((char)v15 != 98) {
                    goto LABEL_102;
                  }
                  std::string::value_type v25 = 8;
                }
                break;
            }
          }
          else if ((char)v15 <= 62)
          {
            if ((char)v15 != 34)
            {
              if ((char)v15 == 39)
              {
                std::string::value_type v25 = 39;
                goto LABEL_64;
              }
              goto LABEL_102;
            }
            std::string::value_type v25 = 34;
          }
          else
          {
            if ((char)v15 == 63) {
              goto LABEL_102;
            }
            if ((char)v15 != 92)
            {
              if ((char)v15 == 97)
              {
                std::string::value_type v25 = 7;
                goto LABEL_64;
              }
LABEL_102:
              std::string::value_type v25 = 63;
              goto LABEL_64;
            }
            std::string::value_type v25 = 92;
          }
LABEL_64:
          std::string::push_back(this, v25);
        }
      }
      LODWORD(__p.__r_.__value_.__l.__data_) = 0;
      int v33 = *(unsigned __int8 *)(v12 + 2);
      if (v33 == 117) {
        int v34 = 4;
      }
      else {
        int v34 = 8 * (v33 == 85);
      }
      if (!sub_100146918((unsigned char *)(v12 + 3), v34, (unsigned int *)&__p))
      {
        std::string::value_type v25 = *(unsigned char *)v11;
        goto LABEL_64;
      }
      uint64_t v41 = v34 | 3u;
      long long v42 = (unsigned char *)(v12 + v41);
      data_low = (google::protobuf *)LODWORD(__p.__r_.__value_.__l.__data_);
      if (LODWORD(__p.__r_.__value_.__l.__data_) >> 10 == 54)
      {
        if (*v42 == 92 && v42[1] == 117)
        {
          LODWORD(v54[0].__r_.__value_.__l.__data_) = 0;
          if (sub_100146918(v42 + 2, 4, (unsigned int *)v54))
          {
            if (LODWORD(v54[0].__r_.__value_.__l.__data_) >> 10 == 55)
            {
              LODWORD(data_low) = ((LODWORD(v54[0].__r_.__value_.__l.__data_) - 56320) | ((data_low << 10)
                                                                                        - 56623104))
                                + 0x10000;
              LODWORD(__p.__r_.__value_.__l.__data_) = data_low;
              v41 += 6;
            }
          }
        }
        long long v42 = (unsigned char *)(v12 + v41);
      }
      else
      {
        if (LODWORD(__p.__r_.__value_.__l.__data_) < 0x80)
        {
          std::string::size_type v44 = 1;
          goto LABEL_94;
        }
        if (LODWORD(__p.__r_.__value_.__l.__data_) <= 0x7FF)
        {
          data_low = (google::protobuf *)((4 * LODWORD(__p.__r_.__value_.__l.__data_)) & 0x1F00 | __p.__r_.__value_.__s.__data_[0] & 0x3F | 0xC080u);
          std::string::size_type v44 = 2;
          goto LABEL_94;
        }
      }
      if (!(data_low >> 16))
      {
        data_low = (google::protobuf *)((4 * data_low) & 0x3F00 | data_low & 0x3F | ((unsigned __int16)data_low >> 12 << 16) | 0xE08080u);
        std::string::size_type v44 = 3;
LABEL_94:
        LODWORD(v54[0].__r_.__value_.__l.__data_) = google::protobuf::ghtonl(data_low);
        std::string::append(this, (const std::string::value_type *)v54[0].__r_.__value_.__r.__words - v44 + 4, v44);
        goto LABEL_95;
      }
      if (data_low >> 16 <= 0x10)
      {
        data_low = (google::protobuf *)((16 * data_low) & 0x3F0000 | data_low & 0x3F | (((data_low >> 18) & 7) << 24) | (((data_low >> 6) & 0x3F) << 8) | 0xF0808080);
        std::string::size_type v44 = 4;
        goto LABEL_94;
      }
      google::protobuf::StringAppendF(this, "\\U%08x", v35, v36, v37, v38, v39, v40, (char)data_low);
LABEL_95:
      uint64_t v11 = (uint64_t)(v42 - 1);
    }
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v54, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/tokenizer.cc", 1042);
  int v8 = google::protobuf::internal::LogMessage::operator<<(v54, " Tokenizer::ParseStringAppend() passed text that could not have been tokenized as a string: ");
  google::protobuf::CEscape((uint64_t *)a1, v9, &__p);
  uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v8, (const std::string::value_type *)&__p);
  google::protobuf::internal::LogFinisher::operator=((int)&v52, (const char **)&v10->__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v54[0].__r_.__value_.__l.__data_);
}

void sub_100146794(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  google::protobuf::internal::LogMessage::~LogMessage(&a18);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::Tokenizer::IsIdentifier(uint64_t a1)
{
  uint64_t v1 = *(unsigned __int8 *)(a1 + 23);
  if ((v1 & 0x80u) != 0) {
    uint64_t v1 = *(void *)(a1 + 8);
  }
  if (!v1) {
    return 0;
  }
  int v3 = *(unsigned __int8 *)std::string::at((const std::string *)a1, 0);
  if (v3 != 95 && (v3 & 0xFFFFFFDF) - 65 > 0x19) {
    return 0;
  }
  BOOL v5 = 1;
  std::string::basic_string(&__p, (const std::string *)a1, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v18);
  std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (!size) {
    goto LABEL_31;
  }
  p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  int v8 = p_p->__r_.__value_.__s.__data_[0];
  if (v8 == 95 || (v8 - 48) < 0xA || (v8 & 0xFFFFFFDF) - 65 <= 0x19)
  {
    uint64_t v11 = 1;
    do
    {
      std::string::size_type v12 = v11;
      if (size == v11) {
        break;
      }
      int v13 = p_p->__r_.__value_.__s.__data_[v11++];
      BOOL v14 = v13 != 95 && (v13 - 48) >= 0xA;
    }
    while (!v14 || (v13 & 0xFFFFFFDF) - 65 < 0x1A);
    BOOL v5 = size <= v12;
LABEL_31:
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      goto LABEL_36;
    }
    return v5;
  }
  BOOL v5 = 0;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
LABEL_36:
  }
    operator delete(__p.__r_.__value_.__l.__data_);
  return v5;
}

uint64_t sub_100146918(unsigned char *a1, int a2, unsigned int *a3)
{
  *a3 = 0;
  if (!a2) {
    return 0;
  }
  if (a2 < 1) {
    return 1;
  }
  unsigned int v3 = 0;
  signed __int8 v4 = &a1[a2];
  do
  {
    int v5 = (char)*a1;
    BOOL v6 = *a1 != 0;
    if (!*a1) {
      break;
    }
    int v7 = 16 * v3;
    unsigned int v8 = v5 - 48;
    unsigned int v9 = v5 - 97;
    if ((v5 - 65) >= 0x1A) {
      int v10 = -1;
    }
    else {
      int v10 = v5 - 55;
    }
    unsigned int v11 = v5 - 87;
    if (v9 > 0x19) {
      unsigned int v11 = v10;
    }
    if (v8 <= 9) {
      unsigned int v11 = v8;
    }
    unsigned int v3 = v11 + v7;
    *a3 = v3;
    ++a1;
  }
  while (a1 < v4);
  return v6;
}

uint64_t google::protobuf::UnknownFieldSet::default_instance(google::protobuf::UnknownFieldSet *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBEC0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001EBEC0))
  {
    operator new();
  }
  return qword_1001EBEB8;
}

void sub_100146A30(_Unwind_Exception *a1)
{
}

uint64_t google::protobuf::UnknownFieldSet::ClearFallback(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v2 = (int)((uint64_t)(*((void *)this + 1) - *(void *)this) >> 4);
  uint64_t v3 = v2 + 1;
  uint64_t v4 = 16 * v2 - 16;
  do
  {
    uint64_t result = google::protobuf::UnknownField::Delete(*(void *)this + v4);
    --v3;
    v4 -= 16;
  }
  while (v3 > 1);
  *((void *)this + 1) = *(void *)this;
  return result;
}

uint64_t google::protobuf::UnknownField::Delete(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 4);
  if (v1 == 4)
  {
    uint64_t v3 = *(google::protobuf::UnknownFieldSet **)(this + 8);
    if (v3)
    {
      uint64_t v4 = *(void **)v3;
      if (*(void *)v3 != *((void *)v3 + 1))
      {
        google::protobuf::UnknownFieldSet::ClearFallback(v3);
        uint64_t v4 = *(void **)v3;
      }
      if (v4)
      {
        *((void *)v3 + 1) = v4;
        operator delete(v4);
      }
LABEL_12:
      operator delete();
    }
  }
  else if (v1 == 3)
  {
    uint64_t v2 = *(void *)(this + 8);
    if (v2)
    {
      if (*(char *)(v2 + 23) < 0) {
        operator delete(*(void **)v2);
      }
      goto LABEL_12;
    }
  }
  return this;
}

void **google::protobuf::UnknownFieldSet::InternalMergeFrom(void **this, const google::protobuf::UnknownFieldSet *a2)
{
  unint64_t v2 = *((void *)a2 + 1) - *(void *)a2;
  if ((int)(v2 >> 4) >= 1)
  {
    uint64_t v4 = this;
    uint64_t v5 = (v2 >> 4);
    sub_100146CC8(this, (((unsigned char *)this[1] - (unsigned char *)*this) >> 4) + v5);
    uint64_t v7 = 0;
    do
    {
      unsigned int v8 = (_OWORD *)(*(void *)a2 + 16 * v7);
      int v10 = v4[1];
      unint64_t v9 = (unint64_t)v4[2];
      if ((unint64_t)v10 >= v9)
      {
        uint64_t v12 = ((char *)v10 - (unsigned char *)*v4) >> 4;
        unint64_t v13 = v12 + 1;
        if ((unint64_t)(v12 + 1) >> 60) {
          sub_100078F84();
        }
        uint64_t v14 = v9 - (void)*v4;
        if (v14 >> 3 > v13) {
          unint64_t v13 = v14 >> 3;
        }
        if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v6 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v6 = v13;
        }
        if (v6) {
          int v15 = (char *)sub_10007902C((uint64_t)(v4 + 2), v6);
        }
        else {
          int v15 = 0;
        }
        std::string::value_type v16 = &v15[16 * v12];
        *(_OWORD *)std::string::value_type v16 = *v8;
        char v18 = (char *)*v4;
        uint64_t v17 = (char *)v4[1];
        std::string::value_type v19 = v16;
        if (v17 != *v4)
        {
          do
          {
            *((_OWORD *)v19 - 1) = *((_OWORD *)v17 - 1);
            v19 -= 16;
            v17 -= 16;
          }
          while (v17 != v18);
          uint64_t v17 = (char *)*v4;
        }
        unsigned int v11 = v16 + 16;
        void *v4 = v19;
        v4[1] = v16 + 16;
        std::string v4[2] = &v15[16 * v6];
        if (v17) {
          operator delete(v17);
        }
      }
      else
      {
        *int v10 = *v8;
        unsigned int v11 = v10 + 1;
      }
      v4[1] = v11;
      this = (void **)google::protobuf::UnknownField::DeepCopy((google::protobuf::UnknownField *)(v11 - 1), (const google::protobuf::UnknownField *)v6);
      ++v7;
    }
    while (v7 != v5);
  }
  return this;
}

void sub_100146CC8(void **a1, unint64_t a2)
{
  uint64_t v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 4)
  {
    if (a2 >> 60) {
      sub_100078F84();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    unint64_t v6 = (char *)sub_10007902C(v3, a2);
    uint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF0];
    unint64_t v9 = &v6[16 * v8];
    unsigned int v11 = (char *)*a1;
    int v10 = (char *)a1[1];
    uint64_t v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        *((_OWORD *)v12 - 1) = *((_OWORD *)v10 - 1);
        v12 -= 16;
        v10 -= 16;
      }
      while (v10 != v11);
      int v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

uint64_t google::protobuf::UnknownField::DeepCopy(uint64_t this, const google::protobuf::UnknownField *a2)
{
  int v2 = *(_DWORD *)(this + 4);
  if (v2 == 4) {
    operator new();
  }
  if (v2 == 3) {
    operator new();
  }
  return this;
}

void sub_100146E2C()
{
}

void **google::protobuf::UnknownFieldSet::MergeFrom(void **this, const google::protobuf::UnknownFieldSet *a2)
{
  unint64_t v2 = *((void *)a2 + 1) - *(void *)a2;
  if ((int)(v2 >> 4) >= 1)
  {
    uint64_t v4 = this;
    uint64_t v5 = (v2 >> 4);
    sub_100146CC8(this, (((unsigned char *)this[1] - (unsigned char *)*this) >> 4) + v5);
    uint64_t v7 = 0;
    do
    {
      uint64_t v8 = (_OWORD *)(*(void *)a2 + 16 * v7);
      int v10 = v4[1];
      unint64_t v9 = (unint64_t)v4[2];
      if ((unint64_t)v10 >= v9)
      {
        uint64_t v12 = ((char *)v10 - (unsigned char *)*v4) >> 4;
        unint64_t v13 = v12 + 1;
        if ((unint64_t)(v12 + 1) >> 60) {
          sub_100078F84();
        }
        uint64_t v14 = v9 - (void)*v4;
        if (v14 >> 3 > v13) {
          unint64_t v13 = v14 >> 3;
        }
        if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF0) {
          unint64_t v6 = 0xFFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v6 = v13;
        }
        if (v6) {
          int v15 = (char *)sub_10007902C((uint64_t)(v4 + 2), v6);
        }
        else {
          int v15 = 0;
        }
        std::string::value_type v16 = &v15[16 * v12];
        *(_OWORD *)std::string::value_type v16 = *v8;
        char v18 = (char *)*v4;
        uint64_t v17 = (char *)v4[1];
        std::string::value_type v19 = v16;
        if (v17 != *v4)
        {
          do
          {
            *((_OWORD *)v19 - 1) = *((_OWORD *)v17 - 1);
            v19 -= 16;
            v17 -= 16;
          }
          while (v17 != v18);
          uint64_t v17 = (char *)*v4;
        }
        unsigned int v11 = v16 + 16;
        unsigned char *v4 = v19;
        v4[1] = v16 + 16;
        std::string v4[2] = &v15[16 * v6];
        if (v17) {
          operator delete(v17);
        }
      }
      else
      {
        *int v10 = *v8;
        unsigned int v11 = v10 + 1;
      }
      v4[1] = v11;
      this = (void **)google::protobuf::UnknownField::DeepCopy((uint64_t)(v11 - 1), (const google::protobuf::UnknownField *)v6);
      ++v7;
    }
    while (v7 != v5);
  }
  return this;
}

void google::protobuf::UnknownFieldSet::MergeFromAndDestroy(google::protobuf::UnknownFieldSet *this, google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v3 = (char *)*((void *)this + 1);
  if (*(char **)this == v3) {
    sub_100147BBC((uint64_t)this, (__n128 *)a2);
  }
  else {
    sub_100147C10((uint64_t)this, v3, *(long long **)a2, *((long long **)a2 + 1), (uint64_t)(*((void *)a2 + 1) - *(void *)a2) >> 4);
  }
  *((void *)a2 + 1) = *(void *)a2;
}

uint64_t google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelfLong(google::protobuf::UnknownFieldSet *this)
{
  uint64_t v1 = *(void *)this;
  uint64_t v2 = *((void *)this + 1);
  if (*(void *)this != v2)
  {
    uint64_t v3 = v2 - v1 + 24;
    while (1)
    {
      int v4 = *(_DWORD *)(v1 + 4);
      if (v4 == 4) {
        break;
      }
      if (v4 == 3)
      {
        uint64_t v5 = v3 + google::protobuf::internal::StringSpaceUsedExcludingSelfLong(*(void *)(v1 + 8));
LABEL_7:
        uint64_t v3 = v5 + 24;
      }
      v1 += 16;
      if (v1 == v2) {
        return v3;
      }
    }
    uint64_t v5 = v3
       + (int)google::protobuf::UnknownFieldSet::SpaceUsedExcludingSelfLong(*(google::protobuf::UnknownFieldSet **)(v1 + 8));
    goto LABEL_7;
  }
  return 0;
}

void google::protobuf::UnknownFieldSet::AddVarint(google::protobuf::UnknownFieldSet *this, unsigned int a2, uint64_t a3)
{
  unint64_t v8 = *((void *)this + 2);
  unint64_t v6 = (char *)this + 16;
  unint64_t v7 = v8;
  unint64_t v9 = (void *)*((void *)v6 - 1);
  if ((unint64_t)v9 >= v8)
  {
    uint64_t v11 = ((uint64_t)v9 - *(void *)this) >> 4;
    unint64_t v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 60) {
      sub_100078F84();
    }
    uint64_t v13 = v7 - *(void *)this;
    if (v13 >> 3 > v12) {
      unint64_t v12 = v13 >> 3;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    if (v14) {
      int v15 = (char *)sub_10007902C((uint64_t)v6, v14);
    }
    else {
      int v15 = 0;
    }
    std::string::value_type v16 = &v15[16 * v11];
    uint64_t v17 = &v15[16 * v14];
    *(_DWORD *)std::string::value_type v16 = a2;
    *((_DWORD *)v16 + 1) = 0;
    *((void *)v16 + 1) = a3;
    int v10 = v16 + 16;
    std::string::value_type v19 = *(char **)this;
    char v18 = (char *)*((void *)this + 1);
    if (v18 != *(char **)this)
    {
      do
      {
        *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
        v16 -= 16;
        v18 -= 16;
      }
      while (v18 != v19);
      char v18 = *(char **)this;
    }
    *(void *)this = v16;
    *((void *)this + 1) = v10;
    *((void *)this + 2) = v17;
    if (v18) {
      operator delete(v18);
    }
  }
  else
  {
    *unint64_t v9 = a2;
    int v10 = v9 + 2;
    v9[1] = a3;
  }
  *((void *)this + 1) = v10;
}

void google::protobuf::UnknownFieldSet::AddFixed32(google::protobuf::UnknownFieldSet *this, int a2, int a3)
{
  unint64_t v8 = *((void *)this + 2);
  unint64_t v6 = (char *)this + 16;
  unint64_t v7 = v8;
  unint64_t v9 = (_DWORD *)*((void *)v6 - 1);
  if ((unint64_t)v9 >= v8)
  {
    uint64_t v11 = ((uint64_t)v9 - *(void *)this) >> 4;
    unint64_t v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 60) {
      sub_100078F84();
    }
    uint64_t v13 = v7 - *(void *)this;
    if (v13 >> 3 > v12) {
      unint64_t v12 = v13 >> 3;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    if (v14) {
      int v15 = (char *)sub_10007902C((uint64_t)v6, v14);
    }
    else {
      int v15 = 0;
    }
    std::string::value_type v16 = &v15[16 * v11];
    uint64_t v17 = &v15[16 * v14];
    *(_DWORD *)std::string::value_type v16 = a2;
    *((_DWORD *)v16 + 1) = 1;
    *((_DWORD *)v16 + 2) = a3;
    int v10 = v16 + 16;
    std::string::value_type v19 = *(char **)this;
    char v18 = (char *)*((void *)this + 1);
    if (v18 != *(char **)this)
    {
      do
      {
        *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
        v16 -= 16;
        v18 -= 16;
      }
      while (v18 != v19);
      char v18 = *(char **)this;
    }
    *(void *)this = v16;
    *((void *)this + 1) = v10;
    *((void *)this + 2) = v17;
    if (v18) {
      operator delete(v18);
    }
  }
  else
  {
    *unint64_t v9 = a2;
    v9[1] = 1;
    v9[2] = a3;
    int v10 = v9 + 4;
  }
  *((void *)this + 1) = v10;
}

void google::protobuf::UnknownFieldSet::AddFixed64(google::protobuf::UnknownFieldSet *this, int a2, uint64_t a3)
{
  unint64_t v8 = *((void *)this + 2);
  unint64_t v6 = (char *)this + 16;
  unint64_t v7 = v8;
  unint64_t v9 = *((void *)v6 - 1);
  if (v9 >= v8)
  {
    uint64_t v11 = (uint64_t)(v9 - *(void *)this) >> 4;
    unint64_t v12 = v11 + 1;
    if ((unint64_t)(v11 + 1) >> 60) {
      sub_100078F84();
    }
    uint64_t v13 = v7 - *(void *)this;
    if (v13 >> 3 > v12) {
      unint64_t v12 = v13 >> 3;
    }
    if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v14 = v12;
    }
    if (v14) {
      int v15 = (char *)sub_10007902C((uint64_t)v6, v14);
    }
    else {
      int v15 = 0;
    }
    std::string::value_type v16 = &v15[16 * v11];
    uint64_t v17 = &v15[16 * v14];
    *(_DWORD *)std::string::value_type v16 = a2;
    *((_DWORD *)v16 + 1) = 2;
    *((void *)v16 + 1) = a3;
    int v10 = v16 + 16;
    std::string::value_type v19 = *(char **)this;
    char v18 = (char *)*((void *)this + 1);
    if (v18 != *(char **)this)
    {
      do
      {
        *((_OWORD *)v16 - 1) = *((_OWORD *)v18 - 1);
        v16 -= 16;
        v18 -= 16;
      }
      while (v18 != v19);
      char v18 = *(char **)this;
    }
    *(void *)this = v16;
    *((void *)this + 1) = v10;
    *((void *)this + 2) = v17;
    if (v18) {
      operator delete(v18);
    }
  }
  else
  {
    *(_DWORD *)unint64_t v9 = a2;
    *(_DWORD *)(v9 + 4) = 2;
    *(void *)(v9 + 8) = a3;
    int v10 = (char *)(v9 + 16);
  }
  *((void *)this + 1) = v10;
}

void google::protobuf::UnknownFieldSet::AddLengthDelimited(google::protobuf::UnknownFieldSet *this)
{
}

void google::protobuf::UnknownFieldSet::AddGroup(google::protobuf::UnknownFieldSet *this)
{
}

uint64_t google::protobuf::UnknownFieldSet::MergeFromCodedStream(google::protobuf::UnknownFieldSet *this, char **a2, google::protobuf::UnknownFieldSet *a3)
{
  std::string __p = 0;
  unint64_t v12 = 0;
  uint64_t v13 = 0;
  if (google::protobuf::internal::WireFormat::SkipMessage(a2, (google::protobuf::io::CodedInputStream *)&__p, a3)&& *((unsigned char *)a2 + 36))
  {
    google::protobuf::UnknownFieldSet::MergeFromAndDestroy(this, (google::protobuf::UnknownFieldSet *)&__p);
    uint64_t v5 = 1;
  }
  else
  {
    uint64_t v5 = 0;
  }
  unint64_t v6 = __p;
  if (__p != v12)
  {
    uint64_t v7 = (int)((v12 - (unsigned char *)__p) >> 4);
    uint64_t v8 = v7 + 1;
    uint64_t v9 = 16 * v7 - 16;
    do
    {
      google::protobuf::UnknownField::Delete((uint64_t)__p + v9);
      --v8;
      v9 -= 16;
    }
    while (v8 > 1);
    unint64_t v6 = __p;
  }
  if (v6)
  {
    unint64_t v12 = v6;
    operator delete(v6);
  }
  return v5;
}

void sub_100147674(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000D660C((google::protobuf::UnknownFieldSet *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::UnknownFieldSet::ParseFromCodedStream(google::protobuf::UnknownFieldSet *this, char **a2, google::protobuf::UnknownFieldSet *a3)
{
  if (*(void *)this != *((void *)this + 1)) {
    google::protobuf::UnknownFieldSet::ClearFallback(this);
  }
  return google::protobuf::UnknownFieldSet::MergeFromCodedStream(this, a2, a3);
}

uint64_t google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream(google::protobuf::UnknownFieldSet *a1, char *a2)
{
  v7[0] = 0;
  v7[1] = 0;
  v7[2] = a2;
  memset(&v7[3], 0, 14);
  v7[5] = (char *)0x7FFFFFFF;
  int v8 = 0x7FFFFFFF;
  int v9 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
  int v10 = google::protobuf::io::CodedInputStream::default_recursion_limit_;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)v7);
  unsigned int v4 = google::protobuf::UnknownFieldSet::ParseFromCodedStream(a1, v7, v3);
  if (BYTE4(v7[4])) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  google::protobuf::io::CodedInputStream::~CodedInputStream((google::protobuf::io::CodedInputStream *)v7);
  return v5;
}

void sub_100147760(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t google::protobuf::UnknownFieldSet::ParseFromArray(google::protobuf::UnknownFieldSet *this, const void *a2, int a3)
{
  google::protobuf::io::ArrayInputStream::ArrayInputStream((uint64_t)v5, a2, a3, -1);
  return google::protobuf::UnknownFieldSet::ParseFromZeroCopyStream(this, v5);
}

unsigned __int8 *google::protobuf::UnknownField::InternalSerializeLengthDelimitedNoTag(google::protobuf::UnknownField *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unsigned int v4 = (char *)*((void *)this + 1);
  if (v4[23] < 0) {
    uint64_t v5 = *((void *)v4 + 1);
  }
  else {
    LODWORD(v5) = v4[23];
  }
  if (v5 > 0x7F)
  {
    *a2 = v5 | 0x80;
    unsigned int v7 = v5 >> 7;
    if (v5 >> 14)
    {
      unint64_t v6 = a2 + 2;
      do
      {
        *(v6 - 1) = v7 | 0x80;
        unsigned int v8 = v7 >> 7;
        ++v6;
        unsigned int v9 = v7 >> 14;
        v7 >>= 7;
      }
      while (v9);
      *(v6 - 1) = v8;
    }
    else
    {
      a2[1] = v7;
      unint64_t v6 = a2 + 2;
    }
  }
  else
  {
    *a2 = v5;
    unint64_t v6 = a2 + 1;
  }
  if (v4[23] < 0)
  {
    uint64_t v11 = v4;
    unsigned int v4 = *(char **)v4;
    uint64_t v10 = *((void *)v11 + 1);
  }
  else
  {
    LODWORD(v1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v4[23];
  }
  if (*(void *)a3 - (void)v6 < (int)v10)
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(a3, v4, v10, v6);
  }
  else
  {
    uint64_t v12 = (int)v10;
    memcpy(v6, v4, (int)v10);
    return &v6[v12];
  }
}

google::protobuf::internal *sub_1001478A0(int a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v9 = a2;
  while (1)
  {
    if (sub_1000355B8(a3, &v9, *(_DWORD *)(a3 + 92))) {
      return v9;
    }
    TagFallback = (google::protobuf::internal *)((char *)v9 + 1);
    LODWORD(v6) = *(unsigned __int8 *)v9;
    if ((*(char *)v9 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unint64_t v6 = (const char *)(v6 + (*(unsigned __int8 *)TagFallback << 7) - 128);
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v9 + 2);
LABEL_6:
      unsigned int v9 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v9, v6);
    unsigned int v9 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
LABEL_7:
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    unsigned int v9 = (google::protobuf::internal *)sub_10014799C((int)v6, a1, TagFallback);
    if (!v9) {
      return 0;
    }
  }
  *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = v6 - 1;
  return TagFallback;
}

google::protobuf::internal *google::protobuf::internal::UnknownFieldParse(unint64_t a1, google::protobuf::UnknownFieldSet *a2, google::protobuf::internal *a3)
{
  unsigned int v4 = a2;
  return sub_10014799C(a1, &v4, a3);
}

google::protobuf::internal *sub_10014799C(unint64_t a1, google::protobuf::UnknownFieldSet **a2, google::protobuf::internal *this)
{
  unint64_t v3 = a1 >> 3;
  if (!(a1 >> 3)) {
    return 0;
  }
  unsigned int v4 = this;
  switch(a1 & 7)
  {
    case 0uLL:
      unsigned int v7 = (google::protobuf::internal *)((char *)this + 1);
      int v6 = *(char *)this;
      uint64_t v8 = *(unsigned __int8 *)this;
      if ((v6 & 0x80000000) == 0) {
        goto LABEL_13;
      }
      int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      uint64_t v8 = (v9 - 128);
      if (*(char *)v7 < 0)
      {
        uint64_t v11 = google::protobuf::internal::VarintParseSlow64(v4, (v9 - 128));
        if (!v11) {
          return 0;
        }
        unsigned int v7 = (google::protobuf::internal *)v11;
        uint64_t v8 = v12;
      }
      else
      {
        unsigned int v7 = (google::protobuf::internal *)((char *)v4 + 2);
      }
LABEL_13:
      google::protobuf::UnknownFieldSet::AddVarint(*a2, v3, v8);
      unsigned int v4 = v7;
      break;
    case 1uLL:
      unsigned int v4 = (google::protobuf::internal *)((char *)this + 8);
      google::protobuf::UnknownFieldSet::AddFixed64(*a2, v3, *(void *)this);
      return v4;
    case 2uLL:
      sub_100147E2C(a2);
    case 3uLL:
      google::protobuf::UnknownFieldSet::AddGroup(*a2);
    case 4uLL:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/parse_context.h", 758);
      uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v15, "Can't happen");
      google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
      return v4;
    case 5uLL:
      unsigned int v4 = (google::protobuf::internal *)((char *)this + 4);
      google::protobuf::UnknownFieldSet::AddFixed32(*a2, v3, *(_DWORD *)this);
      return v4;
    default:
      return 0;
  }
  return v4;
}

void sub_100147B18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void **google::protobuf::internal::OnShutdownDelete<google::protobuf::UnknownFieldSet>(google::protobuf::UnknownFieldSet *)::{lambda(void const*)#1}::__invoke(void **this)
{
  if (this)
  {
    uint64_t v1 = this;
    uint64_t v2 = *this;
    if (v2 != v1[1])
    {
      google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)v1);
      uint64_t v2 = *v1;
    }
    if (v2)
    {
      v1[1] = v2;
      operator delete(v2);
    }
    operator delete();
  }
  return this;
}

__n128 sub_100147BBC(uint64_t a1, __n128 *a2)
{
  unsigned int v4 = *(void **)a1;
  if (v4)
  {
    *(void *)(a1 + 8) = v4;
    operator delete(v4);
    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
  }
  __n128 result = *a2;
  *(__n128 *)a1 = *a2;
  *(void *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

char *sub_100147C10(uint64_t a1, char *__src, long long *a3, long long *a4, uint64_t a5)
{
  uint64_t v5 = __src;
  if (a5 < 1) {
    return v5;
  }
  unsigned int v7 = a3;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v9 = a1 + 16;
  uint64_t v10 = v11;
  unint64_t v12 = *(void *)(v9 - 8);
  if (a5 > (uint64_t)(v11 - v12) >> 4)
  {
    uint64_t v13 = *(unsigned char **)a1;
    unint64_t v14 = a5 + ((uint64_t)(v12 - *(void *)a1) >> 4);
    if (v14 >> 60) {
      sub_100078F84();
    }
    uint64_t v15 = (__src - v13) >> 4;
    uint64_t v16 = v10 - (void)v13;
    if (v16 >> 3 > v14) {
      unint64_t v14 = v16 >> 3;
    }
    if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v17 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v17 = v14;
    }
    uint64_t v40 = v9;
    if (v17) {
      char v18 = (char *)sub_10007902C(v9, v17);
    }
    else {
      char v18 = 0;
    }
    unsigned __int8 v31 = &v18[16 * v15];
    std::string __p = v18;
    uint64_t v37 = v31;
    uint64_t v39 = &v18[16 * v17];
    uint64_t v32 = 16 * a5;
    int v33 = &v31[16 * a5];
    do
    {
      long long v34 = *v7++;
      *(_OWORD *)unsigned __int8 v31 = v34;
      v31 += 16;
      v32 -= 16;
    }
    while (v32);
    uint64_t v38 = v33;
    uint64_t v5 = (char *)sub_1000791E8((void **)a1, (uint64_t)&__p, v5);
    if (v38 != v37) {
      v38 += (v37 - v38 + 15) & 0xFFFFFFFFFFFFFFF0;
    }
    if (__p) {
      operator delete(__p);
    }
    return v5;
  }
  uint64_t v19 = (uint64_t)(v12 - (void)__src) >> 4;
  if (v19 >= a5)
  {
    BOOL v20 = &a3[a5];
    uint64_t v21 = *(char **)(v9 - 8);
LABEL_18:
    std::string::value_type v25 = &__src[16 * a5];
    uint64_t v26 = &v21[-16 * a5];
    int v27 = v21;
    if ((unint64_t)v26 < v12)
    {
      int v27 = v21;
      do
      {
        long long v28 = *(_OWORD *)v26;
        v26 += 16;
        *(_OWORD *)int v27 = v28;
        v27 += 16;
      }
      while ((unint64_t)v26 < v12);
    }
    *(void *)(a1 + 8) = v27;
    if (v21 != v25) {
      memmove(&v21[-16 * ((v21 - v25) >> 4)], __src, v21 - v25);
    }
    if (v20 != v7)
    {
      int v29 = v5;
      do
      {
        long long v30 = *v7++;
        *(_OWORD *)int v29 = v30;
        v29 += 16;
      }
      while (v7 != v20);
    }
    return v5;
  }
  BOOL v20 = &a3[v19];
  uint64_t v21 = *(char **)(v9 - 8);
  if (v20 != a4)
  {
    char v22 = v20;
    int v23 = *(_OWORD **)(v9 - 8);
    do
    {
      long long v24 = *v22++;
      *v23++ = v24;
      v21 += 16;
    }
    while (v22 != a4);
  }
  *(void *)(a1 + 8) = v21;
  if ((uint64_t)(v12 - (void)__src) >= 1) {
    goto LABEL_18;
  }
  return v5;
}

void sub_100147DF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100147E2C(google::protobuf::UnknownFieldSet **a1)
{
}

google::protobuf::internal *sub_100147EB8(int32x2_t *a1, int a2, google::protobuf::internal *a3, int a4)
{
  int v4 = a1[11].i32[0];
  BOOL v5 = __OFSUB__(v4--, 1);
  a1[11].i32[0] = v4;
  if (v4 < 0 != v5) {
    return 0;
  }
  ++a1[11].i32[1];
  __n128 result = sub_1001478A0(a2, a3, (uint64_t)a1);
  a1[11] = vadd_s32(a1[11], (int32x2_t)0xFFFFFFFF00000001);
  __int32 v9 = a1[10].i32[0];
  a1[10].i32[0] = 0;
  if (v9 != a4) {
    return 0;
  }
  return result;
}

BOOL google::protobuf::internal::WireFormat::SkipField(unsigned __int8 **this, google::protobuf::io::CodedInputStream *a2, google::protobuf::UnknownFieldSet *a3, google::protobuf::UnknownFieldSet *a4)
{
  if (a2 < 8) {
    return 0;
  }
  int v6 = (int)a2;
  uint64_t v4 = 0;
  unsigned int v9 = a2 >> 3;
  switch(a2 & 7)
  {
    case 0:
      uint64_t v10 = *this;
      if (*this >= this[1] || (char)*v10 < 0)
      {
        uint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this);
        uint64_t v4 = v18 & 1;
        if (!a3) {
          return v4;
        }
      }
      else
      {
        uint64_t Varint64Fallback = *v10;
        *this = v10 + 1;
        uint64_t v4 = 1;
        if (!a3) {
          return v4;
        }
      }
      if (v4)
      {
        google::protobuf::UnknownFieldSet::AddVarint(a3, v9, Varint64Fallback);
        return 1;
      }
      return v4;
    case 1:
      unint64_t v23 = 0;
      unint64_t v12 = *this;
      if ((int)(*((_DWORD *)this + 2) - *this) < 8)
      {
        uint64_t v4 = google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback((unint64_t **)this, &v23);
        if (!a3) {
          return v4;
        }
      }
      else
      {
        unint64_t v23 = *(void *)v12;
        *this = v12 + 8;
        uint64_t v4 = 1;
        if (!a3) {
          return v4;
        }
      }
      if (v4) {
        google::protobuf::UnknownFieldSet::AddFixed64(a3, v9, v23);
      }
      return v4;
    case 2:
      uint64_t v13 = *this;
      if (*this >= this[1])
      {
        int v14 = 0;
      }
      else
      {
        int v14 = *v13;
        if (((char)*v13 & 0x80000000) == 0)
        {
          *this = v13 + 1;
          goto LABEL_34;
        }
      }
      uint64_t Varint32Fallback = google::protobuf::io::CodedInputStream::ReadVarint32Fallback((google::protobuf::io::CodedInputStream *)this, v14);
      int v14 = Varint32Fallback;
      if (Varint32Fallback < 0) {
        return 0;
      }
LABEL_34:
      if (a3) {
        google::protobuf::UnknownFieldSet::AddLengthDelimited(a3);
      }
      if (v14 < 0) {
        return 0;
      }
      int v21 = *((_DWORD *)this + 2) - *this;
      if (v14 <= v21)
      {
        *this += v14;
      }
      else if ((google::protobuf::io::CodedInputStream::SkipFallback((google::protobuf::io::CodedInputStream *)this, v14, v21) & 1) == 0)
      {
        return 0;
      }
      return 1;
    case 3:
      int v15 = *((_DWORD *)this + 13);
      BOOL v16 = __OFSUB__(v15--, 1);
      *((_DWORD *)this + 13) = v15;
      if (v15 < 0 != v16) {
        return 0;
      }
      if (a3) {
        google::protobuf::UnknownFieldSet::AddGroup(a3);
      }
      if (!google::protobuf::internal::WireFormat::SkipMessage((google::protobuf::internal::WireFormat *)this, 0, 0))return 0; {
      int v19 = *((_DWORD *)this + 13);
      }
      if (v19 < *((_DWORD *)this + 14)) {
        *((_DWORD *)this + 13) = v19 + 1;
      }
      return *((_DWORD *)this + 8) == (v6 & 0xFFFFFFF8 | 4);
    case 5:
      unsigned int v22 = 0;
      unint64_t v17 = *this;
      if ((int)(*((_DWORD *)this + 2) - *this) < 4)
      {
        uint64_t v4 = google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((unsigned int **)this, &v22);
        if (!a3) {
          return v4;
        }
      }
      else
      {
        unsigned int v22 = *(_DWORD *)v17;
        *this = v17 + 4;
        uint64_t v4 = 1;
        if (!a3) {
          return v4;
        }
      }
      if (v4) {
        google::protobuf::UnknownFieldSet::AddFixed32(a3, v9, v22);
      }
      break;
    default:
      return v4;
  }
  return v4;
}

uint64_t google::protobuf::internal::WireFormat::SkipMessage(char **this, google::protobuf::io::CodedInputStream *a2, google::protobuf::UnknownFieldSet *a3)
{
  do
  {
    uint64_t v5 = sub_10010564C(this);
    if (v5) {
      BOOL v7 = (v5 & 7) == 4;
    }
    else {
      BOOL v7 = 1;
    }
    uint64_t v8 = v7;
  }
  while (!v7
       && google::protobuf::internal::WireFormat::SkipField((unsigned __int8 **)this, (google::protobuf::io::CodedInputStream *)v5, a2, v6));
  return v8;
}

const google::protobuf::UnknownFieldSet *google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray(google::protobuf::internal::WireFormat *this, const google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = *(void *)this;
  if ((int)((*((void *)this + 1) - *(void *)this) >> 4) >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (const google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
      }
      unsigned int v9 = (int *)(v5 + 16 * v8);
      switch(v9[1])
      {
        case 0:
          unint64_t v10 = *(void *)(v5 + 16 * v8 + 8);
          unsigned int v11 = 8 * *v9;
          if (v11 > 0x7F)
          {
            *(unsigned char *)a2 = v11 | 0x80;
            unsigned int v24 = v11 >> 7;
            if (v11 >> 14)
            {
              unint64_t v12 = (unsigned __int8 *)a2 + 2;
              do
              {
                *(v12 - 1) = v24 | 0x80;
                unsigned int v28 = v24 >> 7;
                ++v12;
                unsigned int v29 = v24 >> 14;
                v24 >>= 7;
              }
              while (v29);
              *(v12 - 1) = v28;
            }
            else
            {
              *((unsigned char *)a2 + 1) = v24;
              unint64_t v12 = (unsigned __int8 *)a2 + 2;
            }
          }
          else
          {
            *(unsigned char *)a2 = v11;
            unint64_t v12 = (unsigned __int8 *)a2 + 1;
          }
          if (v10 > 0x7F)
          {
            *unint64_t v12 = v10 | 0x80;
            unint64_t v30 = v10 >> 7;
            if (!(v10 >> 14))
            {
              v12[1] = v30;
              goto LABEL_47;
            }
            a2 = (const google::protobuf::UnknownFieldSet *)(v12 + 2);
            do
            {
              *((unsigned char *)a2 - 1) = v30 | 0x80;
              unint64_t v40 = v30 >> 7;
              a2 = (const google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
              unint64_t v41 = v30 >> 14;
              v30 >>= 7;
            }
            while (v41);
            *((unsigned char *)a2 - 1) = v40;
          }
          else
          {
            *unint64_t v12 = v10;
            a2 = (const google::protobuf::UnknownFieldSet *)(v12 + 1);
          }
          break;
        case 1:
          int v13 = *v9;
          int v14 = *(_DWORD *)(v5 + 16 * v8 + 8);
          unsigned int v15 = (8 * *v9) | 5;
          if (v15 > 0x7F)
          {
            *(unsigned char *)a2 = (8 * *(unsigned char *)v9) | 0x85;
            unsigned int v25 = (8 * v13) >> 7;
            if (v15 >> 14)
            {
              BOOL v16 = (char *)a2 + 2;
              do
              {
                *(v16 - 1) = v25 | 0x80;
                unsigned int v31 = v25 >> 7;
                ++v16;
                unsigned int v32 = v25 >> 14;
                v25 >>= 7;
              }
              while (v32);
              *(v16 - 1) = v31;
            }
            else
            {
              *((unsigned char *)a2 + 1) = v25;
              BOOL v16 = (char *)a2 + 2;
            }
          }
          else
          {
            *(unsigned char *)a2 = v15;
            BOOL v16 = (char *)a2 + 1;
          }
          *(_DWORD *)BOOL v16 = v14;
          a2 = (const google::protobuf::UnknownFieldSet *)(v16 + 4);
          break;
        case 2:
          int v17 = *v9;
          uint64_t v18 = *(void *)(v5 + 16 * v8 + 8);
          unsigned int v19 = (8 * *v9) | 1;
          if (v19 > 0x7F)
          {
            *(unsigned char *)a2 = (8 * *(unsigned char *)v9) | 0x81;
            unsigned int v26 = (8 * v17) >> 7;
            if (v19 >> 14)
            {
              BOOL v20 = (char *)a2 + 2;
              do
              {
                *(v20 - 1) = v26 | 0x80;
                unsigned int v33 = v26 >> 7;
                ++v20;
                unsigned int v34 = v26 >> 14;
                v26 >>= 7;
              }
              while (v34);
              *(v20 - 1) = v33;
            }
            else
            {
              *((unsigned char *)a2 + 1) = v26;
              BOOL v20 = (char *)a2 + 2;
            }
          }
          else
          {
            *(unsigned char *)a2 = v19;
            BOOL v20 = (char *)a2 + 1;
          }
          *(void *)BOOL v20 = v18;
          a2 = (const google::protobuf::UnknownFieldSet *)(v20 + 8);
          break;
        case 3:
          a2 = (const google::protobuf::UnknownFieldSet *)sub_1000E4244(a3, *v9, *(void *)(v5 + 16 * v8 + 8), (unsigned __int8 *)a2);
          break;
        case 4:
          int v21 = *v9;
          unsigned int v22 = (8 * *v9) | 3;
          if (v22 > 0x7F)
          {
            *(unsigned char *)a2 = (8 * *(unsigned char *)v9) | 0x83;
            unsigned int v27 = (8 * v21) >> 7;
            if (v22 >> 14)
            {
              unint64_t v23 = (const google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
              do
              {
                *((unsigned char *)v23 - 1) = v27 | 0x80;
                unsigned int v35 = v27 >> 7;
                unint64_t v23 = (const google::protobuf::UnknownFieldSet *)((char *)v23 + 1);
                unsigned int v36 = v27 >> 14;
                v27 >>= 7;
              }
              while (v36);
              *((unsigned char *)v23 - 1) = v35;
            }
            else
            {
              *((unsigned char *)a2 + 1) = v27;
              unint64_t v23 = (const google::protobuf::UnknownFieldSet *)((char *)a2 + 2);
            }
          }
          else
          {
            *(unsigned char *)a2 = v22;
            unint64_t v23 = (const google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
          }
          unint64_t v12 = (unsigned __int8 *)google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray(*(google::protobuf::internal::WireFormat **)(v5 + 16 * v8 + 8), v23, (unsigned __int8 *)a3, v23);
          if (*(void *)a3 <= (unint64_t)v12) {
            unint64_t v12 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v12);
          }
          int v37 = *v9;
          unsigned int v38 = (8 * *v9) | 4;
          if (v38 > 0x7F)
          {
            *unint64_t v12 = (8 * *(unsigned char *)v9) | 0x84;
            unsigned int v39 = (8 * v37) >> 7;
            if (v38 >> 14)
            {
              a2 = (const google::protobuf::UnknownFieldSet *)(v12 + 2);
              do
              {
                *((unsigned char *)a2 - 1) = v39 | 0x80;
                unsigned int v42 = v39 >> 7;
                a2 = (const google::protobuf::UnknownFieldSet *)((char *)a2 + 1);
                unsigned int v43 = v39 >> 14;
                v39 >>= 7;
              }
              while (v43);
              *((unsigned char *)a2 - 1) = v42;
            }
            else
            {
              v12[1] = v39;
LABEL_47:
              a2 = (const google::protobuf::UnknownFieldSet *)(v12 + 2);
            }
          }
          else
          {
            *unint64_t v12 = v38;
            a2 = (const google::protobuf::UnknownFieldSet *)(v12 + 1);
          }
          break;
        default:
          break;
      }
      ++v8;
      uint64_t v5 = *(void *)this;
    }
    while (v8 < (int)((*((void *)this + 1) - *(void *)this) >> 4));
  }
  return a2;
}

const google::protobuf::UnknownFieldSet *google::protobuf::internal::WireFormat::InternalSerializeUnknownMessageSetItemsToArray(google::protobuf::internal::WireFormat *this, const google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  uint64_t v5 = *(void *)this;
  uint64_t v4 = *((void *)this + 1);
  if ((int)((unint64_t)(v4 - *(void *)this) >> 4) >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      unsigned int v9 = (google::protobuf::UnknownField *)(v5 + 16 * v8);
      if (*((_DWORD *)v9 + 1) == 3)
      {
        if (*(void *)a3 <= (unint64_t)a2) {
          a2 = (const google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
        }
        *(_WORD *)a2 = 4107;
        unsigned int v10 = *(_DWORD *)v9;
        if (*(_DWORD *)v9 > 0x7Fu)
        {
          *((unsigned char *)a2 + 2) = v10 | 0x80;
          unsigned int v12 = v10 >> 7;
          if (v10 >> 14)
          {
            unsigned int v11 = (unsigned __int8 *)a2 + 4;
            do
            {
              *(v11 - 1) = v12 | 0x80;
              unsigned int v13 = v12 >> 7;
              ++v11;
              unsigned int v14 = v12 >> 14;
              v12 >>= 7;
            }
            while (v14);
            *(v11 - 1) = v13;
          }
          else
          {
            *((unsigned char *)a2 + 3) = v12;
            unsigned int v11 = (unsigned __int8 *)a2 + 4;
          }
        }
        else
        {
          *((unsigned char *)a2 + 2) = v10;
          unsigned int v11 = (unsigned __int8 *)a2 + 3;
        }
        unsigned __int8 *v11 = 26;
        unsigned int v15 = google::protobuf::UnknownField::InternalSerializeLengthDelimitedNoTag(v9, v11 + 1, a3);
        if (*(void *)a3 <= (unint64_t)v15) {
          unsigned int v15 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v15);
        }
        *unsigned int v15 = 12;
        a2 = (const google::protobuf::UnknownFieldSet *)(v15 + 1);
        uint64_t v5 = *(void *)this;
        uint64_t v4 = *((void *)this + 1);
      }
      ++v8;
    }
    while (v8 < (int)((unint64_t)(v4 - v5) >> 4));
  }
  return a2;
}

uint64_t google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(google::protobuf::internal::WireFormat *this, const google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v2 = *(int **)this;
  unint64_t v3 = *((void *)this + 1) - *(void *)this;
  if ((int)(v3 >> 4) >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (v3 >> 4);
    while (2)
    {
      switch(v2[1])
      {
        case 0:
          uint64_t v6 = (9 * (__clz((8 * *v2) | 1) ^ 0x1F) + 73) >> 6;
          uint64_t v7 = v4 + ((9 * (__clz(*((void *)v2 + 1) | 1) ^ 0x3F) + 73) >> 6);
          goto LABEL_12;
        case 1:
          v4 += ((9 * (__clz((8 * *v2) | 5) ^ 0x1F) + 73) >> 6) + 4;
          goto LABEL_13;
        case 2:
          v4 += ((9 * (__clz((8 * *v2) | 1) ^ 0x1F) + 73) >> 6) + 8;
          goto LABEL_13;
        case 3:
          uint64_t v8 = *((void *)v2 + 1);
          uint64_t v6 = *(unsigned __int8 *)(v8 + 23);
          if ((*(char *)(v8 + 23) & 0x80000000) == 0)
          {
            LODWORD(v9) = *(unsigned __int8 *)(v8 + 23);
            if ((v6 & 0x80) == 0) {
              goto LABEL_10;
            }
LABEL_9:
            uint64_t v6 = *(void *)(v8 + 8);
            goto LABEL_10;
          }
          uint64_t v9 = *(void *)(v8 + 8);
          if ((v6 & 0x80) != 0) {
            goto LABEL_9;
          }
LABEL_10:
          uint64_t v7 = v4 + ((9 * (__clz((8 * *v2) | 3) ^ 0x1F) + 73) >> 6) + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
LABEL_12:
          uint64_t v4 = v7 + v6;
LABEL_13:
          v2 += 4;
          if (!--v5) {
            return v4;
          }
          continue;
        case 4:
          int v10 = *v2;
          uint64_t v11 = (9 * (__clz((8 * *v2) | 3) ^ 0x1F) + 73) >> 6;
          uint64_t v12 = google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(*((google::protobuf::internal::WireFormat **)v2 + 1), a2);
          uint64_t v6 = (9 * (__clz((8 * v10) | 5) ^ 0x1F) + 73) >> 6;
          uint64_t v7 = v12 + v4 + v11;
          goto LABEL_12;
        default:
          goto LABEL_13;
      }
    }
  }
  return 0;
}

uint64_t google::protobuf::internal::WireFormat::ComputeUnknownMessageSetItemsSize(google::protobuf::internal::WireFormat *this, const google::protobuf::UnknownFieldSet *a2)
{
  uint64_t v2 = *(void *)this;
  unint64_t v3 = *((void *)this + 1) - *(void *)this;
  if ((int)(v3 >> 4) < 1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v5 = (v3 >> 4);
  uint64_t v6 = v2 + 8;
  do
  {
    if (*(_DWORD *)(v6 - 4) == 3)
    {
      if (*(char *)(*(void *)v6 + 23) < 0) {
        uint64_t v7 = *(void *)(*(void *)v6 + 8);
      }
      else {
        LODWORD(v7) = *(unsigned __int8 *)(*(void *)v6 + 23);
      }
      result += 4
              + ((9 * (__clz(*(_DWORD *)(v6 - 8) | 1) ^ 0x1F) + 73) >> 6)
              + (int)v7
              + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
    }
    v6 += 16;
    --v5;
  }
  while (v5);
  return result;
}

google::protobuf::internal *google::protobuf::internal::WireFormat::_InternalParse(google::protobuf::Message *a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  uint64_t v6 = (google::protobuf::Descriptor *)(*(uint64_t (**)(google::protobuf::Message *))(*(void *)a1 + 152))(a1);
  (*(void (**)(google::protobuf::Message *))(*(void *)a1 + 152))(a1);
  uint64_t v8 = v7;
  if (*(unsigned char *)(*((void *)v6 + 4) + 72))
  {
    v17[0] = a1;
    v17[1] = v6;
    void v17[2] = v7;
    return sub_100148B68((uint64_t)v17, a2, a3);
  }
  while ((sub_1000355B8((uint64_t)a3, &v18, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t result = (google::protobuf::internal *)((char *)v18 + 1);
    unsigned int v14 = *(unsigned __int8 *)v18;
    if ((*(char *)v18 & 0x80000000) == 0) {
      goto LABEL_17;
    }
    unsigned int v15 = v14 + (*(unsigned __int8 *)result << 7);
    unsigned int v14 = v15 - 128;
    if ((*(char *)result & 0x80000000) == 0)
    {
      uint64_t result = (google::protobuf::internal *)((char *)v18 + 2);
LABEL_17:
      uint64_t v18 = result;
      goto LABEL_18;
    }
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v18, (const char *)(v15 - 128));
    uint64_t v18 = result;
    if (!result) {
      return result;
    }
    unsigned int v14 = v13;
LABEL_18:
    if (v14) {
      BOOL v16 = (v14 & 7) == 4;
    }
    else {
      BOOL v16 = 1;
    }
    if (v16)
    {
      a3[10].i32[0] = v14 - 1;
      return result;
    }
    FieldByNumber = (google::protobuf::FieldDescriptor *)google::protobuf::Descriptor::FindFieldByNumber(v6, v14 >> 3);
    if (!FieldByNumber)
    {
      if (google::protobuf::Descriptor::FindExtensionRangeContainingNumber(v6, v14 >> 3))
      {
        uint64_t v11 = (std::mutex **)a3[12];
        if (v11) {
          uint64_t ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(v11, v6, v14 >> 3);
        }
        else {
          uint64_t ExtensionByNumber = google::protobuf::Reflection::FindKnownExtensionByNumber(v8, v14 >> 3);
        }
        FieldByNumber = (google::protobuf::FieldDescriptor *)ExtensionByNumber;
      }
      else
      {
        FieldByNumber = 0;
      }
    }
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::WireFormat::_InternalParseAndMergeField(a1, v18, a3, v14, (google::protobuf::Reflection *)v8, FieldByNumber);
    uint64_t v18 = result;
    if (!result) {
      return result;
    }
  }
  return v18;
}

google::protobuf::internal *sub_100148B68(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  unsigned int v15 = a2;
  while (1)
  {
    if (sub_1000355B8((uint64_t)a3, &v15, a3[11].i32[1])) {
      return v15;
    }
    TagFallback = (google::protobuf::internal *)((char *)v15 + 1);
    unsigned int v6 = *(unsigned __int8 *)v15;
    if ((*(char *)v15 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v7 = v6 + (*(unsigned __int8 *)TagFallback << 7);
    unsigned int v6 = v7 - 128;
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v15 + 2);
LABEL_6:
      unsigned int v15 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v15, (const char *)(v7 - 128));
    unsigned int v15 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
    unsigned int v6 = v13;
LABEL_7:
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (v6 == 11)
    {
      uint64_t v9 = sub_10014DEA8(a3, a1, TagFallback, 11);
    }
    else
    {
      if (google::protobuf::Descriptor::FindExtensionRangeContainingNumber(*(google::protobuf::Descriptor **)(a1 + 8), v6 >> 3))
      {
        int v10 = (std::mutex **)a3[12];
        if (v10) {
          uint64_t ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(v10, *(const google::protobuf::Descriptor **)(a1 + 8), v6 >> 3);
        }
        else {
          uint64_t ExtensionByNumber = google::protobuf::Reflection::FindKnownExtensionByNumber(*(std::mutex ****)(a1 + 16), v6 >> 3);
        }
        uint64_t v12 = (google::protobuf::FieldDescriptor *)ExtensionByNumber;
      }
      else
      {
        uint64_t v12 = 0;
      }
      uint64_t v9 = (google::protobuf::internal *)google::protobuf::internal::WireFormat::_InternalParseAndMergeField(*(google::protobuf::Message **)a1, v15, a3, v6, *(google::protobuf::Reflection **)(a1 + 16), v12);
    }
    unsigned int v15 = v9;
    if (!v9) {
      return 0;
    }
  }
  a3[10].i32[0] = v6 - 1;
  return TagFallback;
}

unsigned __int8 *google::protobuf::internal::WireFormat::_InternalParseAndMergeField(google::protobuf::Message *a1, google::protobuf::internal *a2, int32x2_t *a3, unint64_t a4, google::protobuf::Reflection *this, google::protobuf::FieldDescriptor *a6)
{
  uint64_t v76 = a2;
  if (a6)
  {
    int v11 = a4 & 7;
    uint64_t v12 = (std::once_flag::_State_type *)*((void *)a6 + 6);
    if (v12)
    {
      v77 = a6;
      long long v78 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v78;
        __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v77;
        v79 = __p;
        std::__call_once(v12, &v79, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    uint64_t v13 = *((unsigned int *)a6 + 14);
    if (v11 == google::protobuf::internal::WireFormatLite::kWireTypeForFieldType[v13])
    {
LABEL_6:
      unsigned int v14 = (std::once_flag::_State_type *)*((void *)a6 + 6);
      if (v14)
      {
        v77 = a6;
        long long v78 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v14, memory_order_acquire) != -1)
        {
          __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v78;
          __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v77;
          v79 = __p;
          std::__call_once(v14, &v79, (void (__cdecl *)(void *))sub_1000BB820);
        }
        LODWORD(v13) = *((_DWORD *)a6 + 14);
      }
      BOOL v15 = 0;
      int v16 = 1;
      switch((int)v13)
      {
        case 1:
          double v17 = *(double *)v76;
          uint64_t v76 = (google::protobuf::internal *)((char *)v76 + 8);
          if (*((_DWORD *)a6 + 15) == 3) {
            google::protobuf::Reflection::AddDouble(this, a1, a6, v17);
          }
          else {
            google::protobuf::Reflection::SetDouble(this, a1, a6, v17);
          }
          return (unsigned __int8 *)v76;
        case 2:
          float v27 = *(float *)v76;
          uint64_t v76 = (google::protobuf::internal *)((char *)v76 + 4);
          if (*((_DWORD *)a6 + 15) == 3) {
            google::protobuf::Reflection::AddFloat(this, a1, a6, v27);
          }
          else {
            google::protobuf::Reflection::SetFloat(this, a1, a6, v27);
          }
          return (unsigned __int8 *)v76;
        case 3:
          __p[0].__r_.__value_.__r.__words[0] = 0;
          uint64_t v76 = (google::protobuf::internal *)sub_10012C3C0((char *)v76, __p);
          if (!v76) {
            return 0;
          }
          int v28 = *((_DWORD *)a6 + 15);
          uint64_t v29 = __p[0].__r_.__value_.__r.__words[0];
          goto LABEL_71;
        case 4:
          __p[0].__r_.__value_.__r.__words[0] = 0;
          uint64_t v76 = (google::protobuf::internal *)sub_10012C3C0((char *)v76, __p);
          if (!v76) {
            return 0;
          }
          int v30 = *((_DWORD *)a6 + 15);
          std::string::size_type v31 = __p[0].__r_.__value_.__r.__words[0];
          goto LABEL_40;
        case 5:
          LODWORD(__p[0].__r_.__value_.__l.__data_) = 0;
          uint64_t v76 = (google::protobuf::internal *)sub_100149878((unsigned __int8 *)v76, __p);
          if (!v76) {
            return 0;
          }
          int v32 = *((_DWORD *)a6 + 15);
          int data = (int)__p[0].__r_.__value_.__l.__data_;
          goto LABEL_65;
        case 6:
          std::string::size_type v31 = *(void *)v76;
          uint64_t v76 = (google::protobuf::internal *)((char *)v76 + 8);
          int v30 = *((_DWORD *)a6 + 15);
LABEL_40:
          if (v30 == 3) {
            google::protobuf::Reflection::AddUInt64(this, a1, a6, v31);
          }
          else {
            google::protobuf::Reflection::SetUInt64(this, a1, a6, v31);
          }
          return (unsigned __int8 *)v76;
        case 7:
          unsigned int v34 = *(_DWORD *)v76;
          uint64_t v76 = (google::protobuf::internal *)((char *)v76 + 4);
          int v35 = *((_DWORD *)a6 + 15);
          goto LABEL_55;
        case 8:
          __p[0].__r_.__value_.__r.__words[0] = 0;
          uint64_t v76 = (google::protobuf::internal *)sub_10012C3C0((char *)v76, __p);
          if (!v76) {
            return 0;
          }
          if (*((_DWORD *)a6 + 15) == 3) {
            google::protobuf::Reflection::AddBool(this, a1, a6, __p[0].__r_.__value_.__r.__words[0] != 0);
          }
          else {
            google::protobuf::Reflection::SetBool(this, a1, a6, __p[0].__r_.__value_.__r.__words[0] != 0);
          }
          return (unsigned __int8 *)v76;
        case 9:
          int v16 = 0;
          BOOL v15 = *(_DWORD *)(*((void *)a6 + 5) + 60) == 3;
          goto LABEL_47;
        case 10:
          unsigned int v38 = (google::protobuf::MessageFactory *)a3[13];
          if (*((_DWORD *)a6 + 15) == 3) {
            unsigned int v39 = (uint64_t *)google::protobuf::Reflection::AddMessage(this, a1, a6, v38);
          }
          else {
            unsigned int v39 = google::protobuf::Reflection::MutableMessage(this, a1, a6, v38);
          }
          return (unsigned __int8 *)sub_100109CE0(a3, (uint64_t)v39, (uint64_t)v76, a4);
        case 11:
          unint64_t v40 = (google::protobuf::MessageFactory *)a3[13];
          if (*((_DWORD *)a6 + 15) == 3) {
            int v41 = google::protobuf::Reflection::AddMessage(this, a1, a6, v40);
          }
          else {
            int v41 = google::protobuf::Reflection::MutableMessage(this, a1, a6, v40);
          }
          return (unsigned __int8 *)google::protobuf::internal::ParseContext::ParseMessage((int)a3, v41, v76);
        case 12:
LABEL_47:
          int v36 = *(unsigned __int8 *)v76;
          if (*(char *)v76 < 0)
          {
            SizeFallback = google::protobuf::internal::ReadSizeFallback(v76, (const char *)*(unsigned __int8 *)v76);
            uint64_t v76 = (google::protobuf::internal *)SizeFallback;
            if (!SizeFallback) {
              return 0;
            }
            int v37 = SizeFallback;
            int v36 = v45;
          }
          else
          {
            int v37 = (char *)v76 + 1;
            uint64_t v76 = (google::protobuf::internal *)((char *)v76 + 1);
          }
          memset(__p, 0, 24);
          uint64_t v76 = sub_100109C74((uint64_t)a3, v37, v36, __p);
          if (!v76) {
            goto LABEL_93;
          }
          if (((v16 | !v15) & 1) == 0)
          {
            if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::value_type v46 = (google::protobuf::internal *)__p;
            }
            else {
              std::string::value_type v46 = (google::protobuf::internal *)__p[0].__r_.__value_.__r.__words[0];
            }
            if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              int v47 = (const char *)HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
            }
            else {
              int v47 = (const char *)LODWORD(__p[0].__r_.__value_.__r.__words[1]);
            }
            char v48 = (char *)*((void *)a6 + 1);
            if (v48[23] < 0) {
              char v48 = *(char **)v48;
            }
            if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v46, v47, 0, (google::protobuf::internal *)v48))
            {
LABEL_93:
              unsigned int v26 = 0;
              goto LABEL_129;
            }
          }
          if (*((_DWORD *)a6 + 15) == 3)
          {
            if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
              sub_1000BB834(&__dst, __p[0].__r_.__value_.__l.__data_, __p[0].__r_.__value_.__l.__size_);
            }
            else {
              std::string __dst = __p[0];
            }
            google::protobuf::Reflection::AddString((uint64_t)this, (uint64_t)a1, a6, (uint64_t)&__dst);
            if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0)
            {
              p_dst = &__dst;
LABEL_127:
              operator delete(p_dst->__r_.__value_.__l.__data_);
            }
          }
          else
          {
            if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
              sub_1000BB834(&v70, __p[0].__r_.__value_.__l.__data_, __p[0].__r_.__value_.__l.__size_);
            }
            else {
              std::string v70 = __p[0];
            }
            google::protobuf::Reflection::SetString((uint64_t)this, a1, a6, (uint64_t)&v70);
            if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0)
            {
              p_dst = &v70;
              goto LABEL_127;
            }
          }
          unsigned int v26 = v76;
LABEL_129:
          if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p[0].__r_.__value_.__l.__data_);
          }
          break;
        case 13:
          LODWORD(__p[0].__r_.__value_.__l.__data_) = 0;
          uint64_t v76 = (google::protobuf::internal *)sub_100149878((unsigned __int8 *)v76, __p);
          if (!v76) {
            return 0;
          }
          int v35 = *((_DWORD *)a6 + 15);
          unsigned int v34 = __p[0].__r_.__value_.__l.__data_;
LABEL_55:
          if (v35 == 3) {
            google::protobuf::Reflection::AddUInt32(this, a1, a6, v34);
          }
          else {
            google::protobuf::Reflection::SetUInt32(this, a1, a6, v34);
          }
          return (unsigned __int8 *)v76;
        case 14:
          LODWORD(__p[0].__r_.__value_.__l.__data_) = 0;
          uint64_t v76 = (google::protobuf::internal *)sub_100149878((unsigned __int8 *)v76, __p);
          if (!v76) {
            return 0;
          }
          if (*((_DWORD *)a6 + 15) == 3) {
            google::protobuf::Reflection::AddEnumValue(this, a1, a6, (signed int)__p[0].__r_.__value_.__l.__data_);
          }
          else {
            google::protobuf::Reflection::SetEnumValue(this, a1, a6, (signed int)__p[0].__r_.__value_.__l.__data_);
          }
          return (unsigned __int8 *)v76;
        case 15:
          int data = *(_DWORD *)v76;
          uint64_t v76 = (google::protobuf::internal *)((char *)v76 + 4);
          goto LABEL_64;
        case 16:
          uint64_t v29 = *(void *)v76;
          uint64_t v76 = (google::protobuf::internal *)((char *)v76 + 8);
          goto LABEL_70;
        case 17:
          int v42 = sub_1001498D8(&v76);
          if (!v76) {
            return 0;
          }
          int data = v42;
LABEL_64:
          int v32 = *((_DWORD *)a6 + 15);
LABEL_65:
          if (v32 == 3) {
            google::protobuf::Reflection::AddInt32(this, a1, a6, data);
          }
          else {
            google::protobuf::Reflection::SetInt32(this, a1, a6, data);
          }
          return (unsigned __int8 *)v76;
        case 18:
          unint64_t v43 = sub_100149940(&v76);
          if (!v76) {
            return 0;
          }
          uint64_t v29 = v43;
LABEL_70:
          int v28 = *((_DWORD *)a6 + 15);
LABEL_71:
          if (v28 == 3) {
            google::protobuf::Reflection::AddInt64(this, a1, a6, v29);
          }
          else {
            google::protobuf::Reflection::SetInt64(this, a1, a6, v29);
          }
          return (unsigned __int8 *)v76;
        default:
          return 0;
      }
    }
    else
    {
      if (*((_DWORD *)a6 + 15) == 3)
      {
        int v21 = (std::once_flag::_State_type *)*((void *)a6 + 6);
        if (v21)
        {
          v77 = a6;
          long long v78 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v21, memory_order_acquire) != -1)
          {
            __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v78;
            __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v77;
            v79 = __p;
            std::__call_once(v21, &v79, (void (__cdecl *)(void *))sub_1000BB820);
          }
          LODWORD(v13) = *((_DWORD *)a6 + 14);
        }
        if (v11 == 2 && (v13 - 13) <= 0xFFFFFFFB)
        {
          unsigned int v22 = (std::once_flag::_State_type *)*((void *)a6 + 6);
          if (v22)
          {
            v77 = a6;
            long long v78 = google::protobuf::FieldDescriptor::TypeOnceInit;
            if (atomic_load_explicit((atomic_ullong *volatile)v22, memory_order_acquire) != -1)
            {
              __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v78;
              __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v77;
              v79 = __p;
              std::__call_once(v22, &v79, (void (__cdecl *)(void *))sub_1000BB820);
            }
            LODWORD(v13) = *((_DWORD *)a6 + 14);
          }
          switch((int)v13)
          {
            case 1:
              char v49 = google::protobuf::Reflection::MutableRepeatedFieldInternal<double>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return (unsigned __int8 *)google::protobuf::internal::PackedDoubleParser((google::protobuf::internal *)v49, v76, (const char *)a3, v50);
            case 2:
              char v51 = google::protobuf::Reflection::MutableRepeatedFieldInternal<float>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return (unsigned __int8 *)google::protobuf::internal::PackedFloatParser((google::protobuf::internal *)v51, v76, (const char *)a3, v52);
            case 3:
              uint64_t v53 = google::protobuf::Reflection::MutableRepeatedFieldInternal<long long>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return google::protobuf::internal::PackedInt64Parser((unsigned int *)v53, v76, (uint64_t)a3);
            case 4:
              uint64_t v54 = google::protobuf::Reflection::MutableRepeatedFieldInternal<unsigned long long>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return google::protobuf::internal::PackedUInt64Parser((unsigned int *)v54, v76, (uint64_t)a3);
            case 5:
              uint64_t v55 = google::protobuf::Reflection::MutableRepeatedFieldInternal<int>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return google::protobuf::internal::PackedInt32Parser((unsigned int *)v55, v76, (uint64_t)a3);
            case 6:
              uint64_t v56 = google::protobuf::Reflection::MutableRepeatedFieldInternal<unsigned long long>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return (unsigned __int8 *)google::protobuf::internal::PackedFixed64Parser((google::protobuf::internal *)v56, v76, (const char *)a3, v57);
            case 7:
              int64_t v58 = google::protobuf::Reflection::MutableRepeatedFieldInternal<unsigned int>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return (unsigned __int8 *)google::protobuf::internal::PackedFixed32Parser((google::protobuf::internal *)v58, v76, (const char *)a3, v59);
            case 8:
              int64_t v60 = google::protobuf::Reflection::MutableRepeatedFieldInternal<BOOL>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return google::protobuf::internal::PackedBoolParser((unsigned int *)v60, v76, (uint64_t)a3);
            case 9:
            case 10:
            case 11:
            case 12:
              google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wire_format.cc", 884);
              unint64_t v23 = google::protobuf::internal::LogMessage::operator<<(__p, "Can't reach");
              google::protobuf::internal::LogFinisher::operator=((int)&v79, (const char **)&v23->__r_.__value_.__l.__data_);
              google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
              return 0;
            case 13:
              uint64_t v61 = google::protobuf::Reflection::MutableRepeatedFieldInternal<unsigned int>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return google::protobuf::internal::PackedUInt32Parser((unsigned int *)v61, v76, (uint64_t)a3);
            case 14:
              uint64_t v62 = google::protobuf::Reflection::MutableRepeatedFieldInternal<int>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              if (*(_DWORD *)(*((void *)a6 + 5) + 60) == 3) {
                return google::protobuf::internal::PackedEnumParser((unsigned int *)v62, v76, (uint64_t)a3);
              }
              *(void *)&long long v73 = v62;
              *((void *)&v73 + 1) = a6;
              uint64_t v74 = this;
              uint64_t v75 = a1;
              return (unsigned __int8 *)sub_100149710((uint64_t)a3, v76, &v73);
            case 15:
              uint64_t v63 = google::protobuf::Reflection::MutableRepeatedFieldInternal<int>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return (unsigned __int8 *)google::protobuf::internal::PackedSFixed32Parser((google::protobuf::internal *)v63, v76, (const char *)a3, v64);
            case 16:
              uint64_t v65 = google::protobuf::Reflection::MutableRepeatedFieldInternal<long long>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return (unsigned __int8 *)google::protobuf::internal::PackedSFixed64Parser((google::protobuf::internal *)v65, v76, (const char *)a3, v66);
            case 17:
              int v67 = google::protobuf::Reflection::MutableRepeatedFieldInternal<int>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return google::protobuf::internal::PackedSInt32Parser((unsigned int *)v67, v76, (uint64_t)a3);
            case 18:
              uint64_t v68 = google::protobuf::Reflection::MutableRepeatedFieldInternal<long long>((uint64_t)this, (uint64_t)a1, a6, a4, (uint64_t)this);
              return google::protobuf::internal::PackedSInt64Parser((unsigned int *)v68, v76, (uint64_t)a3);
            default:
              goto LABEL_6;
          }
        }
      }
      unsigned int v24 = google::protobuf::Reflection::MutableUnknownFields(this, a1);
      return (unsigned __int8 *)google::protobuf::internal::UnknownFieldParse(a4, (google::protobuf::UnknownFieldSet *)v24, v76);
    }
    return (unsigned __int8 *)v26;
  }
  else
  {
    unsigned int v19 = google::protobuf::Reflection::MutableUnknownFields(this, a1);
    return (unsigned __int8 *)google::protobuf::internal::UnknownFieldParse(a4, (google::protobuf::UnknownFieldSet *)v19, a2);
  }
}

void sub_100149624(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

google::protobuf::internal *sub_100149710(uint64_t a1, google::protobuf::internal *this, _OWORD *a3)
{
  int v5 = *(unsigned __int8 *)this;
  if ((*(char *)this & 0x80000000) == 0)
  {
    uint64_t result = (google::protobuf::internal *)((char *)this + 1);
    goto LABEL_5;
  }
  uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, (const char *)*(unsigned __int8 *)this);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        long long v14 = a3[1];
        unint64_t v15 = (unint64_t)result + v5;
        v19[0] = *a3;
        v19[1] = v14;
        uint64_t result = (google::protobuf::internal *)sub_100150E78(result, v15, (unsigned int **)v19);
        if ((google::protobuf::internal *)v15 != result) {
          return 0;
        }
        return result;
      }
      long long v10 = a3[1];
      v21[0] = *a3;
      v21[1] = v10;
      uint64_t result = (google::protobuf::internal *)sub_100150E78(result, v8, (unsigned int **)v21);
      if (!result) {
        return result;
      }
      int v11 = *(long long **)(a1 + 8);
      int v12 = result - v11;
      int v13 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = google::protobuf::internal::EpsCopyInputStream::Next((google::protobuf::internal::EpsCopyInputStream *)a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v12;
      uint64_t result = (google::protobuf::internal *)((char *)result + v12);
    }
    __int16 v24 = 0;
    uint64_t v23 = 0;
    long long v22 = *v11;
    long long v16 = a3[1];
    v20[0] = *a3;
    v20[1] = v16;
    double v17 = sub_100150E78((google::protobuf::internal *)((char *)&v22 + v12), (unint64_t)&v22 + v13, (unsigned int **)v20);
    if (v17) {
      BOOL v18 = v17 == (unsigned __int8 *)((char *)&v22 + v13);
    }
    else {
      BOOL v18 = 0;
    }
    if (!v18) {
      return 0;
    }
    return (google::protobuf::internal *)(*(void *)(a1 + 8) + v13);
  }
  return result;
}

uint64_t sub_100149878(unsigned __int8 *a1, _DWORD *a2)
{
  int v3 = *a1;
  if ((char)*a1 < 0)
  {
    int v5 = (const char *)(v3 + (a1[1] << 7) - 128);
    if ((char)a1[1] < 0)
    {
      uint64_t result = google::protobuf::internal::VarintParseSlow32((google::protobuf::internal *)a1, v5);
      *a2 = v6;
    }
    else
    {
      *a2 = v5;
      return (uint64_t)(a1 + 2);
    }
  }
  else
  {
    *a2 = v3;
    return (uint64_t)(a1 + 1);
  }
  return result;
}

unint64_t sub_1001498D8(google::protobuf::internal **a1)
{
  uint64_t v2 = *a1;
  int v3 = *a1;
  int v5 = *(char *)v3;
  uint64_t v4 = (google::protobuf::internal *)((char *)v3 + 1);
  LODWORD(v6) = v5;
  if (v5 < 0)
  {
    unint64_t v6 = v6 + (*(unsigned __int8 *)v4 << 7) - 128;
    if (*(char *)v4 < 0) {
      uint64_t v4 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v2, v6);
    }
    else {
      uint64_t v4 = (google::protobuf::internal *)((char *)v2 + 2);
    }
  }
  *a1 = v4;
  return -(v6 & 1) ^ (v6 >> 1);
}

unint64_t sub_100149940(google::protobuf::internal **a1)
{
  uint64_t v2 = *a1;
  int v3 = *a1;
  int v5 = *(char *)v3;
  uint64_t v4 = (google::protobuf::internal *)((char *)v3 + 1);
  unint64_t v6 = v5;
  if (v5 < 0)
  {
    unint64_t v6 = v6 + (*(unsigned __int8 *)v4 << 7) - 128;
    if (*(char *)v4 < 0) {
      uint64_t v4 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v2, v6);
    }
    else {
      uint64_t v4 = (google::protobuf::internal *)((char *)v2 + 2);
    }
  }
  *a1 = v4;
  return -(uint64_t)(v6 & 1) ^ (v6 >> 1);
}

const google::protobuf::UnknownFieldSet *google::protobuf::internal::WireFormat::_InternalSerialize(google::protobuf::internal::WireFormat *this, const google::protobuf::Message *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v5 = a2;
  uint64_t v7 = (*(uint64_t (**)(google::protobuf::internal::WireFormat *, const google::protobuf::Message *, google::protobuf::io::EpsCopyOutputStream *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)this + 152))(this, a2, a3, a4);
  (*(void (**)(google::protobuf::internal::WireFormat *))(*(void *)this + 152))(this);
  std::string __p = 0;
  std::string::size_type v31 = 0;
  int v32 = 0;
  uint64_t v29 = (google::protobuf::Reflection *)v8;
  if (*(unsigned char *)(*(void *)(v7 + 32) + 75))
  {
    if (*(int *)(v7 + 104) < 1)
    {
      long long v10 = 0;
    }
    else
    {
      long long v10 = 0;
      uint64_t v11 = 0;
      do
      {
        uint64_t v12 = *(void *)(v7 + 40) + 152 * v11;
        if (v10 >= v32)
        {
          uint64_t v13 = ((char *)v10 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v13 + 1) >> 61) {
            sub_100078F84();
          }
          unint64_t v14 = ((char *)v32 - (unsigned char *)__p) >> 2;
          if (v14 <= v13 + 1) {
            unint64_t v14 = v13 + 1;
          }
          if ((unint64_t)((char *)v32 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v15 = v14;
          }
          if (v15) {
            long long v16 = (char *)sub_1000B4170((uint64_t)&v32, v15);
          }
          else {
            long long v16 = 0;
          }
          double v17 = (uint64_t *)&v16[8 * v13];
          *double v17 = v12;
          long long v10 = v17 + 1;
          unsigned int v19 = (char *)__p;
          BOOL v18 = (char *)v31;
          if (v31 != __p)
          {
            do
            {
              uint64_t v20 = *((void *)v18 - 1);
              v18 -= 8;
              *--double v17 = v20;
            }
            while (v18 != v19);
            BOOL v18 = (char *)__p;
          }
          std::string __p = v17;
          std::string::size_type v31 = v10;
          int v32 = (uint64_t *)&v16[8 * v15];
          if (v18) {
            operator delete(v18);
          }
        }
        else
        {
          *v10++ = v12;
        }
        std::string::size_type v31 = v10;
        ++v11;
      }
      while (v11 < *(int *)(v7 + 104));
    }
  }
  else
  {
    google::protobuf::Reflection::ListFields(v8, (uint64_t)this, (uint64_t)&__p);
    long long v10 = v31;
  }
  for (uint64_t i = (google::protobuf::internal::WireFormat **)__p; i != (google::protobuf::internal::WireFormat **)v10; ++i)
    int v5 = (const google::protobuf::Message *)google::protobuf::internal::WireFormat::InternalSerializeField(*i, this, v5, a3, v9);
  if (*(unsigned char *)(*(void *)(v7 + 32) + 72))
  {
    UnknownFields = (google::protobuf::internal::WireFormat *)google::protobuf::Reflection::GetUnknownFields(v29, this);
    __int16 v24 = google::protobuf::internal::WireFormat::InternalSerializeUnknownMessageSetItemsToArray(UnknownFields, v5, a3, v23);
  }
  else
  {
    unsigned int v25 = (google::protobuf::internal::WireFormat *)google::protobuf::Reflection::GetUnknownFields(v29, this);
    __int16 v24 = google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray(v25, v5, a3, v26);
  }
  float v27 = v24;
  if (__p)
  {
    std::string::size_type v31 = (uint64_t *)__p;
    operator delete(__p);
  }
  return v27;
}

void sub_100149BF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned __int8 *google::protobuf::internal::WireFormat::InternalSerializeField(google::protobuf::internal::WireFormat *this, const google::protobuf::FieldDescriptor *a2, const google::protobuf::Message *a3, google::protobuf::io::EpsCopyOutputStream *a4, google::protobuf::io::EpsCopyOutputStream *a5)
{
  (*(void (**)(const google::protobuf::FieldDescriptor *))(*(void *)a2 + 152))(a2);
  uint64_t v11 = v10;
  if (*((unsigned char *)this + 67) && *(unsigned char *)(*(void *)(*((void *)this + 10) + 32) + 72))
  {
    uint64_t v12 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v12)
    {
      v178 = this;
      v179 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v12, memory_order_acquire) != -1)
      {
        __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v179;
        __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v178;
        v180 = __p;
        std::__call_once(v12, &v180, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 14)] == 10
      && *((_DWORD *)this + 15) != 3)
    {
      return google::protobuf::internal::WireFormat::InternalSerializeMessageSetItem(this, a2, a3, a4, v9);
    }
  }
  uint64_t v13 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v13)
  {
    v178 = this;
    v179 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
    {
      __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v179;
      __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v178;
      v180 = __p;
      std::__call_once(v13, &v180, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (*((_DWORD *)this + 14) == 11)
  {
    if (google::protobuf::FieldDescriptor::is_map_message_type(this))
    {
      MapData = (atomic_uint *)google::protobuf::Reflection::GetMapData(v11, a2, this);
      if (google::protobuf::internal::MapFieldBase::IsMapValid(MapData))
      {
        if (*((unsigned char *)a4 + 58))
        {
          sub_10014B7B4(a2, v11, this, (uint64_t *)__p);
          for (uint64_t i = (unsigned int *)__p[0].__r_.__value_.__r.__words[0];
                i != (unsigned int *)__p[0].__r_.__value_.__l.__size_;
                i += 8)
          {
            v180 = 0;
            int v181 = 0;
            google::protobuf::Reflection::LookupMapValue((uint64_t *)v11, (uint64_t)a2, this, (uint64_t)i, (uint64_t)&v180);
            a3 = (const google::protobuf::Message *)sub_10014B948(this, i, (unsigned int **)&v180, (unsigned __int8 *)a3, a4);
          }
          v180 = __p;
          sub_100150F88((void ***)&v180);
        }
        else
        {
          google::protobuf::Reflection::MapBegin(v11, a2, this, (uint64_t)__p);
          while (1)
          {
            google::protobuf::Reflection::MapEnd(v11, a2, this, (uint64_t)&v180);
            int v143 = (*(uint64_t (**)(std::string::size_type, std::string *, std::string **))(*(void *)__p[0].__r_.__value_.__l.__size_ + 48))(__p[0].__r_.__value_.__l.__size_, __p, &v180);
            sub_100120978((uint64_t)&v180);
            if (v143) {
              break;
            }
            a3 = (const google::protobuf::Message *)sub_10014B948(this, (unsigned int *)&__p[0].__r_.__value_.__r.__words[2], &v183, (unsigned __int8 *)a3, a4);
            (*(void (**)(std::string::size_type, std::string *))(*(void *)__p[0].__r_.__value_.__l.__size_
                                                                          + 152))(__p[0].__r_.__value_.__l.__size_, __p);
          }
          sub_100120978((uint64_t)__p);
        }
        return (unsigned __int8 *)a3;
      }
    }
  }
  if (*((_DWORD *)this + 15) != 3)
  {
    if (*(unsigned char *)(*(void *)(*((void *)this + 10) + 32) + 75))
    {
      BOOL v18 = 0;
      std::string::size_type size = 0;
      int v16 = 1;
      goto LABEL_31;
    }
    int v16 = google::protobuf::Reflection::HasField(v11, a2, this);
LABEL_30:
    BOOL v18 = 0;
    std::string::size_type size = 0;
    goto LABEL_31;
  }
  int v16 = google::protobuf::Reflection::FieldSize(v11, a2, this);
  if (v16 < 2) {
    goto LABEL_30;
  }
  double v17 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v17)
  {
    v178 = this;
    v179 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
    {
      __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v179;
      __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v178;
      v180 = __p;
      std::__call_once(v17, &v180, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (*((_DWORD *)this + 14) != 11
    || !google::protobuf::FieldDescriptor::is_map_message_type(this)
    || !*((unsigned char *)a4 + 58))
  {
    goto LABEL_30;
  }
  sub_10014C400((uint64_t)a2, v16, this, (void **)&__p[0].__r_.__value_.__l.__data_);
  std::string::size_type size = __p[0].__r_.__value_.__l.__size_;
  BOOL v18 = (void *)__p[0].__r_.__value_.__r.__words[0];
LABEL_31:
  v177 = v18;
  if (google::protobuf::FieldDescriptor::is_packed(this))
  {
    if (v16)
    {
      if (*(void *)a4 <= (unint64_t)a3) {
        a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, (unsigned __int8 *)a3);
      }
      long long v22 = (std::once_flag::_State_type *)*((void *)this + 6);
      if (v22)
      {
        v178 = this;
        v179 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v22, memory_order_acquire) != -1)
        {
          __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v179;
          __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v178;
          v180 = __p;
          std::__call_once(v22, &v180, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      switch(*((_DWORD *)this + 14))
      {
        case 1:
          RepeatedField = google::protobuf::Reflection::GetRepeatedFieldInternal<double>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<double>::RepeatedField((uint64_t)__p, (int *)RepeatedField);
          __int16 v24 = sub_10014D180(a4, *((_DWORD *)this + 17), (uint64_t)__p, (unsigned __int8 *)a3);
          goto LABEL_310;
        case 2:
          v144 = google::protobuf::Reflection::GetRepeatedFieldInternal<float>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<float>::RepeatedField((uint64_t)__p, (int *)v144);
          __int16 v24 = sub_10014D0C0(a4, *((_DWORD *)this + 17), (uint64_t)__p, (unsigned __int8 *)a3);
          goto LABEL_310;
        case 3:
          v145 = google::protobuf::Reflection::GetRepeatedFieldInternal<long long>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<long long>::RepeatedField((uint64_t)__p, (int *)v145);
          int v146 = *((_DWORD *)this + 17);
          unsigned int v148 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v147);
          __int16 v24 = sub_10004FB54(a4, v146, (int *)__p, v148, (unsigned __int8 *)a3, (uint64_t (*)(uint64_t))google::protobuf::io::EpsCopyOutputStream::Encode64);
          goto LABEL_310;
        case 4:
          v149 = google::protobuf::Reflection::GetRepeatedFieldInternal<unsigned long long>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<unsigned long long>::RepeatedField((uint64_t)__p, (int *)v149);
          int v150 = *((_DWORD *)this + 17);
          unsigned int v152 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v151);
          __int16 v24 = sub_10004FB54(a4, v150, (int *)__p, v152, (unsigned __int8 *)a3, (uint64_t (*)(uint64_t))google::protobuf::io::EpsCopyOutputStream::Encode64);
          goto LABEL_310;
        case 5:
        case 0xE:
          v153 = google::protobuf::Reflection::GetRepeatedFieldInternal<int>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)__p, (int *)v153);
          int v154 = *((_DWORD *)this + 17);
          unsigned int v156 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v155);
          __int16 v24 = sub_1000FABD4(a4, v154, (int *)__p, v156, (unsigned __int8 *)a3, (uint64_t (*)(uint64_t))google::protobuf::io::EpsCopyOutputStream::Encode64);
          goto LABEL_310;
        case 6:
          v157 = google::protobuf::Reflection::GetRepeatedFieldInternal<unsigned long long>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<unsigned long long>::RepeatedField((uint64_t)__p, (int *)v157);
          __int16 v24 = sub_10014D180(a4, *((_DWORD *)this + 17), (uint64_t)__p, (unsigned __int8 *)a3);
          goto LABEL_310;
        case 7:
          v158 = google::protobuf::Reflection::GetRepeatedFieldInternal<unsigned int>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<unsigned int>::RepeatedField((uint64_t)__p, (int *)v158);
          __int16 v24 = sub_10014D0C0(a4, *((_DWORD *)this + 17), (uint64_t)__p, (unsigned __int8 *)a3);
          goto LABEL_310;
        case 8:
          v159 = google::protobuf::Reflection::GetRepeatedFieldInternal<BOOL>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<BOOL>::RepeatedField((uint64_t)__p, (int *)v159);
          __int16 v24 = sub_10014D240(a4, *((_DWORD *)this + 17), (uint64_t)__p, (unsigned __int8 *)a3);
          goto LABEL_310;
        case 0xD:
          v161 = google::protobuf::Reflection::GetRepeatedFieldInternal<unsigned int>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<unsigned int>::RepeatedField((uint64_t)__p, (int *)v161);
          int v162 = *((_DWORD *)this + 17);
          unsigned int v164 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v163);
          __int16 v24 = sub_10004F9AC(a4, v162, (int *)__p, v164, (unsigned __int8 *)a3, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
          goto LABEL_310;
        case 0xF:
          v165 = google::protobuf::Reflection::GetRepeatedFieldInternal<int>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)__p, (int *)v165);
          __int16 v24 = sub_10014D0C0(a4, *((_DWORD *)this + 17), (uint64_t)__p, (unsigned __int8 *)a3);
          goto LABEL_310;
        case 0x10:
          v166 = google::protobuf::Reflection::GetRepeatedFieldInternal<long long>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<long long>::RepeatedField((uint64_t)__p, (int *)v166);
          __int16 v24 = sub_10014D180(a4, *((_DWORD *)this + 17), (uint64_t)__p, (unsigned __int8 *)a3);
          goto LABEL_310;
        case 0x11:
          v167 = google::protobuf::Reflection::GetRepeatedFieldInternal<int>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<int>::RepeatedField((uint64_t)__p, (int *)v167);
          int v168 = *((_DWORD *)this + 17);
          unsigned int v170 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v169);
          __int16 v24 = sub_10004F9AC(a4, v168, (int *)__p, v170, (unsigned __int8 *)a3, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::ZigZagEncode32);
          goto LABEL_310;
        case 0x12:
          v171 = google::protobuf::Reflection::GetRepeatedFieldInternal<long long>((uint64_t)v11, (uint64_t)a2, this, v20, v21);
          google::protobuf::RepeatedField<long long>::RepeatedField((uint64_t)__p, (int *)v171);
          int v172 = *((_DWORD *)this + 17);
          unsigned int v174 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v173);
          __int16 v24 = sub_10004FB54(a4, v172, (int *)__p, v174, (unsigned __int8 *)a3, google::protobuf::io::EpsCopyOutputStream::ZigZagEncode64);
LABEL_310:
          a3 = (const google::protobuf::Message *)v24;
          if (SHIDWORD(__p[0].__r_.__value_.__r.__words[0]) >= 1 && !*(void *)(__p[0].__r_.__value_.__l.__size_ - 8)) {
            operator delete((void *)(__p[0].__r_.__value_.__l.__size_ - 8));
          }
          break;
        default:
          google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wire_format.cc", 1319);
          v160 = google::protobuf::internal::LogMessage::operator<<(__p, "Invalid descriptor");
          google::protobuf::internal::LogFinisher::operator=((int)&v180, (const char **)&v160->__r_.__value_.__l.__data_);
          google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
          break;
      }
    }
  }
  else if (v16 >= 1)
  {
    v176 = (void *)size;
    uint64_t v25 = 0;
    uint64_t v26 = v16;
    do
    {
      if (*(void *)a4 <= (unint64_t)a3) {
        a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, (unsigned __int8 *)a3);
      }
      float v27 = (std::once_flag::_State_type *)*((void *)this + 6);
      if (v27)
      {
        v178 = this;
        v179 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v27, memory_order_acquire) != -1)
        {
          __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v179;
          __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v178;
          v180 = __p;
          std::__call_once(v27, &v180, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      switch(*((_DWORD *)this + 14))
      {
        case 1:
          if (*((_DWORD *)this + 15) == 3) {
            double RepeatedDouble = google::protobuf::Reflection::GetRepeatedDouble(v11, a2, this, v25);
          }
          else {
            double RepeatedDouble = google::protobuf::Reflection::GetDouble(v11, a2, this);
          }
          int v44 = *((_DWORD *)this + 17);
          unsigned int v45 = (8 * v44) | 1;
          if (v45 > 0x7F)
          {
            *(unsigned char *)a3 = (8 * v44) | 0x81;
            unsigned int v78 = (8 * v44) >> 7;
            if (v45 >> 14)
            {
              std::string::value_type v46 = (double *)((char *)a3 + 2);
              do
              {
                *((unsigned char *)v46 - 1) = v78 | 0x80;
                unsigned int v88 = v78 >> 7;
                std::string::value_type v46 = (double *)((char *)v46 + 1);
                unsigned int v89 = v78 >> 14;
                v78 >>= 7;
              }
              while (v89);
              *((unsigned char *)v46 - 1) = v88;
            }
            else
            {
              *((unsigned char *)a3 + 1) = v78;
              std::string::value_type v46 = (double *)((char *)a3 + 2);
            }
          }
          else
          {
            *(unsigned char *)a3 = v45;
            std::string::value_type v46 = (double *)((char *)a3 + 1);
          }
          *std::string::value_type v46 = RepeatedDouble;
          a3 = (const google::protobuf::Message *)(v46 + 1);
          break;
        case 2:
          if (*((_DWORD *)this + 15) == 3) {
            float RepeatedFloat = google::protobuf::Reflection::GetRepeatedFloat(v11, a2, this, v25);
          }
          else {
            float RepeatedFloat = google::protobuf::Reflection::GetFloat(v11, a2, this);
          }
          int v67 = *((_DWORD *)this + 17);
          unsigned int v68 = (8 * v67) | 5;
          if (v68 > 0x7F)
          {
            *(unsigned char *)a3 = (8 * v67) | 0x85;
            unsigned int v85 = (8 * v67) >> 7;
            if (v68 >> 14)
            {
              v69 = (float *)((char *)a3 + 2);
              do
              {
                *((unsigned char *)v69 - 1) = v85 | 0x80;
                unsigned int v112 = v85 >> 7;
                v69 = (float *)((char *)v69 + 1);
                unsigned int v113 = v85 >> 14;
                v85 >>= 7;
              }
              while (v113);
              *((unsigned char *)v69 - 1) = v112;
            }
            else
            {
              *((unsigned char *)a3 + 1) = v85;
              v69 = (float *)((char *)a3 + 2);
            }
          }
          else
          {
            *(unsigned char *)a3 = v68;
            v69 = (float *)((char *)a3 + 1);
          }
          float *v69 = RepeatedFloat;
          a3 = (const google::protobuf::Message *)(v69 + 1);
          break;
        case 3:
          if (*((_DWORD *)this + 15) == 3) {
            unint64_t RepeatedInt64 = google::protobuf::Reflection::GetRepeatedInt64(v11, a2, this, v25);
          }
          else {
            unint64_t RepeatedInt64 = google::protobuf::Reflection::GetInt64(v11, a2, this);
          }
          unsigned int v47 = 8 * *((_DWORD *)this + 17);
          if (v47 > 0x7F)
          {
            *(unsigned char *)a3 = v47 | 0x80;
            unsigned int v79 = v47 >> 7;
            if (v47 >> 14)
            {
              char v48 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v48 - 1) = v79 | 0x80;
                unsigned int v90 = v79 >> 7;
                ++v48;
                unsigned int v91 = v79 >> 14;
                v79 >>= 7;
              }
              while (v91);
              *(v48 - 1) = v90;
            }
            else
            {
              *((unsigned char *)a3 + 1) = v79;
              char v48 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(unsigned char *)a3 = v47;
            char v48 = (unsigned __int8 *)a3 + 1;
          }
          if (RepeatedInt64 <= 0x7F) {
            goto LABEL_190;
          }
          *char v48 = RepeatedInt64 | 0x80;
          unint64_t v92 = RepeatedInt64 >> 7;
          if (!(RepeatedInt64 >> 14)) {
            goto LABEL_240;
          }
          a3 = (const google::protobuf::Message *)(v48 + 2);
          do
          {
            *((unsigned char *)a3 - 1) = v92 | 0x80;
            unint64_t v93 = v92 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            unint64_t v94 = v92 >> 14;
            v92 >>= 7;
          }
          while (v94);
          goto LABEL_246;
        case 4:
          if (*((_DWORD *)this + 15) == 3) {
            unint64_t RepeatedInt64 = google::protobuf::Reflection::GetRepeatedUInt64(v11, a2, this, v25);
          }
          else {
            unint64_t RepeatedInt64 = google::protobuf::Reflection::GetUInt64(v11, a2, this);
          }
          unsigned int v49 = 8 * *((_DWORD *)this + 17);
          if (v49 > 0x7F)
          {
            *(unsigned char *)a3 = v49 | 0x80;
            unsigned int v80 = v49 >> 7;
            if (v49 >> 14)
            {
              char v48 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v48 - 1) = v80 | 0x80;
                unsigned int v95 = v80 >> 7;
                ++v48;
                unsigned int v96 = v80 >> 14;
                v80 >>= 7;
              }
              while (v96);
              *(v48 - 1) = v95;
            }
            else
            {
              *((unsigned char *)a3 + 1) = v80;
              char v48 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(unsigned char *)a3 = v49;
            char v48 = (unsigned __int8 *)a3 + 1;
          }
          if (RepeatedInt64 <= 0x7F) {
            goto LABEL_190;
          }
          *char v48 = RepeatedInt64 | 0x80;
          unint64_t v92 = RepeatedInt64 >> 7;
          if (!(RepeatedInt64 >> 14)) {
            goto LABEL_240;
          }
          a3 = (const google::protobuf::Message *)(v48 + 2);
          do
          {
            *((unsigned char *)a3 - 1) = v92 | 0x80;
            unint64_t v93 = v92 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            unint64_t v97 = v92 >> 14;
            v92 >>= 7;
          }
          while (v97);
          goto LABEL_246;
        case 5:
          if (*((_DWORD *)this + 15) == 3) {
            LODWORD(RepeatedInt64) = google::protobuf::Reflection::GetRepeatedInt32(v11, a2, this, v25);
          }
          else {
            LODWORD(RepeatedInt64) = google::protobuf::Reflection::GetInt32(v11, a2, this);
          }
          unsigned int v50 = 8 * *((_DWORD *)this + 17);
          if (v50 > 0x7F)
          {
            *(unsigned char *)a3 = v50 | 0x80;
            unsigned int v81 = v50 >> 7;
            if (v50 >> 14)
            {
              char v48 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v48 - 1) = v81 | 0x80;
                unsigned int v98 = v81 >> 7;
                ++v48;
                unsigned int v99 = v81 >> 14;
                v81 >>= 7;
              }
              while (v99);
              *(v48 - 1) = v98;
            }
            else
            {
              *((unsigned char *)a3 + 1) = v81;
              char v48 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(unsigned char *)a3 = v50;
            char v48 = (unsigned __int8 *)a3 + 1;
          }
          if (RepeatedInt64 <= 0x7F)
          {
LABEL_190:
            *char v48 = RepeatedInt64;
            a3 = (const google::protobuf::Message *)(v48 + 1);
            break;
          }
          *char v48 = RepeatedInt64 | 0x80;
          unint64_t v92 = (unint64_t)(int)RepeatedInt64 >> 7;
          if (!(RepeatedInt64 >> 14)) {
            goto LABEL_240;
          }
          a3 = (const google::protobuf::Message *)(v48 + 2);
          do
          {
            *((unsigned char *)a3 - 1) = v92 | 0x80;
            unint64_t v93 = v92 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            unint64_t v100 = v92 >> 14;
            v92 >>= 7;
          }
          while (v100);
          goto LABEL_246;
        case 6:
          if (*((_DWORD *)this + 15) == 3) {
            uint64_t RepeatedUInt64 = google::protobuf::Reflection::GetRepeatedUInt64(v11, a2, this, v25);
          }
          else {
            uint64_t RepeatedUInt64 = google::protobuf::Reflection::GetUInt64(v11, a2, this);
          }
          int v70 = *((_DWORD *)this + 17);
          unsigned int v61 = (8 * v70) | 1;
          if (v61 <= 0x7F) {
            goto LABEL_127;
          }
          *(unsigned char *)a3 = (8 * v70) | 0x81;
          unsigned int v62 = (8 * v70) >> 7;
          if (!(v61 >> 14)) {
            goto LABEL_159;
          }
          uint64_t v63 = (char *)a3 + 2;
          do
          {
            *(v63 - 1) = v62 | 0x80;
            unsigned int v64 = v62 >> 7;
            ++v63;
            unsigned int v114 = v62 >> 14;
            v62 >>= 7;
          }
          while (v114);
          goto LABEL_221;
        case 7:
          if (*((_DWORD *)this + 15) == 3) {
            int RepeatedUInt32 = google::protobuf::Reflection::GetRepeatedUInt32(v11, a2, this, v25);
          }
          else {
            int RepeatedUInt32 = google::protobuf::Reflection::GetUInt32(v11, a2, this);
          }
          int v71 = *((_DWORD *)this + 17);
          unsigned int v55 = (8 * v71) | 5;
          if (v55 <= 0x7F) {
            goto LABEL_130;
          }
          *(unsigned char *)a3 = (8 * v71) | 0x85;
          unsigned int v56 = (8 * v71) >> 7;
          if (!(v55 >> 14)) {
            goto LABEL_161;
          }
          __int16 v57 = (char *)a3 + 2;
          do
          {
            *(v57 - 1) = v56 | 0x80;
            unsigned int v58 = v56 >> 7;
            ++v57;
            unsigned int v115 = v56 >> 14;
            v56 >>= 7;
          }
          while (v115);
          goto LABEL_225;
        case 8:
          if (*((_DWORD *)this + 15) == 3) {
            LOBYTE(UInt++*(_DWORD *)(result + 32) = google::protobuf::Reflection::GetRepeatedBool(v11, a2, this, v25);
          }
          else {
            LOBYTE(UInt++*(_DWORD *)(result + 32) = google::protobuf::Reflection::GetBool(v11, a2, this);
          }
          unsigned int v51 = 8 * *((_DWORD *)this + 17);
          if (v51 > 0x7F)
          {
            *(unsigned char *)a3 = v51 | 0x80;
            unsigned int v82 = v51 >> 7;
            if (v51 >> 14)
            {
              char v48 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v48 - 1) = v82 | 0x80;
                unsigned int v101 = v82 >> 7;
                ++v48;
                unsigned int v102 = v82 >> 14;
                v82 >>= 7;
              }
              while (v102);
              *(v48 - 1) = v101;
            }
            else
            {
              *((unsigned char *)a3 + 1) = v82;
              char v48 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(unsigned char *)a3 = v51;
            char v48 = (unsigned __int8 *)a3 + 1;
          }
          goto LABEL_202;
        case 9:
          int v38 = *(_DWORD *)(*((void *)this + 5) + 60);
          memset(__p, 0, 24);
          if (*((_DWORD *)this + 15) == 3) {
            unint64_t RepeatedStringReference = (unsigned __int8 *)google::protobuf::Reflection::GetRepeatedStringReference((uint64_t)v11, (uint64_t)a2, (uint64_t)this, v25);
          }
          else {
            unint64_t RepeatedStringReference = (unsigned __int8 *)google::protobuf::Reflection::GetStringReference((uint64_t)v11, (uint64_t)a2, (uint64_t)this);
          }
          uint64_t v72 = (uint64_t)RepeatedStringReference;
          if (v38 == 3)
          {
            if ((char)RepeatedStringReference[23] < 0)
            {
              unint64_t RepeatedStringReference = *(unsigned __int8 **)RepeatedStringReference;
              long long v73 = *(const char **)(v72 + 8);
            }
            else
            {
              long long v73 = (const char *)RepeatedStringReference[23];
            }
            std::string v142 = (char *)*((void *)this + 1);
            if (v142[23] < 0) {
              std::string v142 = *(char **)v142;
            }
            google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)RepeatedStringReference, v73, 1, (google::protobuf::internal *)v142);
          }
          char v52 = sub_1000E4244(a4, *((_DWORD *)this + 17), v72, (unsigned __int8 *)a3);
          goto LABEL_287;
        case 0xA:
          int v31 = *((_DWORD *)this + 17);
          if (*((_DWORD *)this + 15) == 3)
          {
            if (v177 == v176) {
              uint64_t RepeatedMessage = google::protobuf::Reflection::GetRepeatedMessage(v11, a2, this, v25);
            }
            else {
              uint64_t RepeatedMessage = *((void *)v177 + v25);
            }
          }
          else
          {
            uint64_t RepeatedMessage = google::protobuf::Reflection::GetMessage(v11, a2, this, 0);
          }
          unsigned int v125 = 8 * v31;
          unsigned int v126 = (8 * v31) | 3;
          if (v126 > 0x7F)
          {
            *(unsigned char *)a3 = (8 * v31) | 0x83;
            unsigned int v128 = v125 >> 7;
            if (v126 >> 14)
            {
              long long v127 = (char *)a3 + 2;
              do
              {
                *(v127 - 1) = v128 | 0x80;
                unsigned int v129 = v128 >> 7;
                ++v127;
                unsigned int v130 = v128 >> 14;
                v128 >>= 7;
              }
              while (v130);
              *(v127 - 1) = v129;
            }
            else
            {
              *((unsigned char *)a3 + 1) = v128;
              long long v127 = (char *)a3 + 2;
            }
          }
          else
          {
            *(unsigned char *)a3 = v126;
            long long v127 = (char *)a3 + 1;
          }
          char v48 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, char *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)RepeatedMessage + 96))(RepeatedMessage, v127, a4);
          if (*(void *)a4 <= (unint64_t)v48) {
            char v48 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v48);
          }
          unsigned int v110 = v125 | 4;
          if ((v125 | 4) <= 0x7F) {
            goto LABEL_258;
          }
          *char v48 = v125 | 0x84;
          unsigned int v105 = v125 >> 7;
          if (!(v110 >> 14)) {
            goto LABEL_260;
          }
          a3 = (const google::protobuf::Message *)(v48 + 2);
          do
          {
            *((unsigned char *)a3 - 1) = v105 | 0x80;
            unsigned int v106 = v105 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            unsigned int v131 = v105 >> 14;
            v105 >>= 7;
          }
          while (v131);
          goto LABEL_264;
        case 0xB:
          int v40 = *((_DWORD *)this + 17);
          if (*((_DWORD *)this + 15) == 3)
          {
            if (v177 != v176)
            {
              uint64_t v41 = *((void *)v177 + v25);
              goto LABEL_267;
            }
            uint64_t Message = google::protobuf::Reflection::GetRepeatedMessage(v11, a2, this, v25);
          }
          else
          {
            uint64_t Message = google::protobuf::Reflection::GetMessage(v11, a2, this, 0);
          }
          uint64_t v41 = Message;
LABEL_267:
          unsigned int v132 = (8 * v40) | 2;
          if (v132 > 0x7F)
          {
            *(unsigned char *)a3 = (8 * v40) | 0x82;
            unsigned int v134 = (8 * v40) >> 7;
            if (v132 >> 14)
            {
              uint64_t v133 = (char *)a3 + 2;
              do
              {
                *(v133 - 1) = v134 | 0x80;
                unsigned int v135 = v134 >> 7;
                ++v133;
                unsigned int v136 = v134 >> 14;
                v134 >>= 7;
              }
              while (v136);
              *(v133 - 1) = v135;
            }
            else
            {
              *((unsigned char *)a3 + 1) = v134;
              uint64_t v133 = (char *)a3 + 2;
            }
          }
          else
          {
            *(unsigned char *)a3 = v132;
            uint64_t v133 = (char *)a3 + 1;
          }
          unsigned int v137 = (*(uint64_t (**)(uint64_t))(*(void *)v41 + 80))(v41);
          if (v137 > 0x7F)
          {
            *uint64_t v133 = v137 | 0x80;
            unsigned int v139 = v137 >> 7;
            if (v137 >> 14)
            {
              char v138 = v133 + 2;
              do
              {
                *(v138 - 1) = v139 | 0x80;
                unsigned int v140 = v139 >> 7;
                ++v138;
                unsigned int v141 = v139 >> 14;
                v139 >>= 7;
              }
              while (v141);
              *(v138 - 1) = v140;
            }
            else
            {
              v133[1] = v139;
              char v138 = v133 + 2;
            }
          }
          else
          {
            *uint64_t v133 = v137;
            char v138 = v133 + 1;
          }
          a3 = (const google::protobuf::Message *)(*(uint64_t (**)(uint64_t, char *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)v41 + 96))(v41, v138, a4);
          break;
        case 0xC:
          memset(__p, 0, 24);
          if (*((_DWORD *)this + 15) == 3) {
            uint64_t StringReference = google::protobuf::Reflection::GetRepeatedStringReference((uint64_t)v11, (uint64_t)a2, (uint64_t)this, v25);
          }
          else {
            uint64_t StringReference = google::protobuf::Reflection::GetStringReference((uint64_t)v11, (uint64_t)a2, (uint64_t)this);
          }
          char v52 = sub_1000E4244(a4, *((_DWORD *)this + 17), StringReference, (unsigned __int8 *)a3);
LABEL_287:
          a3 = (const google::protobuf::Message *)v52;
          if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p[0].__r_.__value_.__l.__data_);
          }
          break;
        case 0xD:
          if (*((_DWORD *)this + 15) == 3) {
            Uint Int32 = google::protobuf::Reflection::GetRepeatedUInt32(v11, a2, this, v25);
          }
          else {
            Uint Int32 = google::protobuf::Reflection::GetUInt32(v11, a2, this);
          }
          unsigned int v53 = 8 * *((_DWORD *)this + 17);
          if (v53 > 0x7F)
          {
            *(unsigned char *)a3 = v53 | 0x80;
            unsigned int v83 = v53 >> 7;
            if (v53 >> 14)
            {
              char v48 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v48 - 1) = v83 | 0x80;
                unsigned int v103 = v83 >> 7;
                ++v48;
                unsigned int v104 = v83 >> 14;
                v83 >>= 7;
              }
              while (v104);
              *(v48 - 1) = v103;
            }
            else
            {
              *((unsigned char *)a3 + 1) = v83;
              char v48 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(unsigned char *)a3 = v53;
            char v48 = (unsigned __int8 *)a3 + 1;
          }
          if (UInt32 <= 0x7F)
          {
LABEL_202:
            *char v48 = UInt32;
            a3 = (const google::protobuf::Message *)(v48 + 1);
            break;
          }
          *char v48 = UInt32 | 0x80;
          unsigned int v105 = UInt32 >> 7;
          if (!(UInt32 >> 14)) {
            goto LABEL_260;
          }
          a3 = (const google::protobuf::Message *)(v48 + 2);
          do
          {
            *((unsigned char *)a3 - 1) = v105 | 0x80;
            unsigned int v106 = v105 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            unsigned int v107 = v105 >> 14;
            v105 >>= 7;
          }
          while (v107);
          goto LABEL_264;
        case 0xE:
          if (*((_DWORD *)this + 15) == 3) {
            uint64_t RepeatedEnum = google::protobuf::Reflection::GetRepeatedEnum(v11, a2, this, v25);
          }
          else {
            uint64_t RepeatedEnum = google::protobuf::Reflection::GetEnum(v11, a2, this);
          }
          unint64_t v75 = *(int *)(RepeatedEnum + 16);
          unsigned int v76 = 8 * *((_DWORD *)this + 17);
          if (v76 > 0x7F)
          {
            *(unsigned char *)a3 = v76 | 0x80;
            unsigned int v86 = v76 >> 7;
            if (v76 >> 14)
            {
              char v48 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v48 - 1) = v86 | 0x80;
                unsigned int v116 = v86 >> 7;
                ++v48;
                unsigned int v117 = v86 >> 14;
                v86 >>= 7;
              }
              while (v117);
              *(v48 - 1) = v116;
            }
            else
            {
              *((unsigned char *)a3 + 1) = v86;
              char v48 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(unsigned char *)a3 = v76;
            char v48 = (unsigned __int8 *)a3 + 1;
          }
          if (v75 <= 0x7F)
          {
            *char v48 = v75;
            a3 = (const google::protobuf::Message *)(v48 + 1);
            break;
          }
          *char v48 = v75 | 0x80;
          unint64_t v118 = v75 >> 7;
          if (!(v75 >> 14))
          {
            v48[1] = v118;
            goto LABEL_261;
          }
          a3 = (const google::protobuf::Message *)(v48 + 2);
          do
          {
            *((unsigned char *)a3 - 1) = v118 | 0x80;
            unint64_t v122 = v118 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            unint64_t v123 = v118 >> 14;
            v118 >>= 7;
          }
          while (v123);
          *((unsigned char *)a3 - 1) = v122;
          break;
        case 0xF:
          if (*((_DWORD *)this + 15) == 3) {
            int RepeatedUInt32 = google::protobuf::Reflection::GetRepeatedInt32(v11, a2, this, v25);
          }
          else {
            int RepeatedUInt32 = google::protobuf::Reflection::GetInt32(v11, a2, this);
          }
          int v54 = *((_DWORD *)this + 17);
          unsigned int v55 = (8 * v54) | 5;
          if (v55 <= 0x7F)
          {
LABEL_130:
            *(unsigned char *)a3 = v55;
            __int16 v57 = (char *)a3 + 1;
          }
          else
          {
            *(unsigned char *)a3 = (8 * v54) | 0x85;
            unsigned int v56 = (8 * v54) >> 7;
            if (v55 >> 14)
            {
              __int16 v57 = (char *)a3 + 2;
              do
              {
                *(v57 - 1) = v56 | 0x80;
                unsigned int v58 = v56 >> 7;
                ++v57;
                unsigned int v59 = v56 >> 14;
                v56 >>= 7;
              }
              while (v59);
LABEL_225:
              *(v57 - 1) = v58;
            }
            else
            {
LABEL_161:
              *((unsigned char *)a3 + 1) = v56;
              __int16 v57 = (char *)a3 + 2;
            }
          }
          *(_DWORD *)__int16 v57 = RepeatedUInt32;
          a3 = (const google::protobuf::Message *)(v57 + 4);
          break;
        case 0x10:
          if (*((_DWORD *)this + 15) == 3) {
            uint64_t RepeatedUInt64 = google::protobuf::Reflection::GetRepeatedInt64(v11, a2, this, v25);
          }
          else {
            uint64_t RepeatedUInt64 = google::protobuf::Reflection::GetInt64(v11, a2, this);
          }
          int v60 = *((_DWORD *)this + 17);
          unsigned int v61 = (8 * v60) | 1;
          if (v61 <= 0x7F)
          {
LABEL_127:
            *(unsigned char *)a3 = v61;
            uint64_t v63 = (char *)a3 + 1;
          }
          else
          {
            *(unsigned char *)a3 = (8 * v60) | 0x81;
            unsigned int v62 = (8 * v60) >> 7;
            if (v61 >> 14)
            {
              uint64_t v63 = (char *)a3 + 2;
              do
              {
                *(v63 - 1) = v62 | 0x80;
                unsigned int v64 = v62 >> 7;
                ++v63;
                unsigned int v65 = v62 >> 14;
                v62 >>= 7;
              }
              while (v65);
LABEL_221:
              *(v63 - 1) = v64;
            }
            else
            {
LABEL_159:
              *((unsigned char *)a3 + 1) = v62;
              uint64_t v63 = (char *)a3 + 2;
            }
          }
          *(void *)uint64_t v63 = RepeatedUInt64;
          a3 = (const google::protobuf::Message *)(v63 + 8);
          break;
        case 0x11:
          if (*((_DWORD *)this + 15) == 3) {
            int RepeatedInt32 = google::protobuf::Reflection::GetRepeatedInt32(v11, a2, this, v25);
          }
          else {
            int RepeatedInt32 = google::protobuf::Reflection::GetInt32(v11, a2, this);
          }
          unsigned int v66 = 8 * *((_DWORD *)this + 17);
          if (v66 > 0x7F)
          {
            *(unsigned char *)a3 = v66 | 0x80;
            unsigned int v84 = v66 >> 7;
            if (v66 >> 14)
            {
              char v48 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v48 - 1) = v84 | 0x80;
                unsigned int v108 = v84 >> 7;
                ++v48;
                unsigned int v109 = v84 >> 14;
                v84 >>= 7;
              }
              while (v109);
              *(v48 - 1) = v108;
            }
            else
            {
              *((unsigned char *)a3 + 1) = v84;
              char v48 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(unsigned char *)a3 = v66;
            char v48 = (unsigned __int8 *)a3 + 1;
          }
          unsigned int v110 = (2 * RepeatedInt32) ^ (RepeatedInt32 >> 31);
          if (v110 <= 0x7F)
          {
LABEL_258:
            *char v48 = v110;
            a3 = (const google::protobuf::Message *)(v48 + 1);
            break;
          }
          *char v48 = v110 | 0x80;
          unsigned int v105 = v110 >> 7;
          if (!(v110 >> 14))
          {
LABEL_260:
            v48[1] = v105;
            goto LABEL_261;
          }
          a3 = (const google::protobuf::Message *)(v48 + 2);
          do
          {
            *((unsigned char *)a3 - 1) = v105 | 0x80;
            unsigned int v106 = v105 >> 7;
            a3 = (const google::protobuf::Message *)((char *)a3 + 1);
            unsigned int v111 = v105 >> 14;
            v105 >>= 7;
          }
          while (v111);
LABEL_264:
          *((unsigned char *)a3 - 1) = v106;
          break;
        case 0x12:
          if (*((_DWORD *)this + 15) == 3) {
            uint64_t Int64 = google::protobuf::Reflection::GetRepeatedInt64(v11, a2, this, v25);
          }
          else {
            uint64_t Int64 = google::protobuf::Reflection::GetInt64(v11, a2, this);
          }
          unsigned int v77 = 8 * *((_DWORD *)this + 17);
          if (v77 > 0x7F)
          {
            *(unsigned char *)a3 = v77 | 0x80;
            unsigned int v87 = v77 >> 7;
            if (v77 >> 14)
            {
              char v48 = (unsigned __int8 *)a3 + 2;
              do
              {
                *(v48 - 1) = v87 | 0x80;
                unsigned int v119 = v87 >> 7;
                ++v48;
                unsigned int v120 = v87 >> 14;
                v87 >>= 7;
              }
              while (v120);
              *(v48 - 1) = v119;
            }
            else
            {
              *((unsigned char *)a3 + 1) = v87;
              char v48 = (unsigned __int8 *)a3 + 2;
            }
          }
          else
          {
            *(unsigned char *)a3 = v77;
            char v48 = (unsigned __int8 *)a3 + 1;
          }
          unint64_t v121 = (2 * Int64) ^ (Int64 >> 63);
          if (v121 > 0x7F)
          {
            *char v48 = v121 | 0x80;
            unint64_t v92 = v121 >> 7;
            if (v121 >> 14)
            {
              a3 = (const google::protobuf::Message *)(v48 + 2);
              do
              {
                *((unsigned char *)a3 - 1) = v92 | 0x80;
                unint64_t v93 = v92 >> 7;
                a3 = (const google::protobuf::Message *)((char *)a3 + 1);
                unint64_t v124 = v92 >> 14;
                v92 >>= 7;
              }
              while (v124);
LABEL_246:
              *((unsigned char *)a3 - 1) = v93;
            }
            else
            {
LABEL_240:
              v48[1] = v92;
LABEL_261:
              a3 = (const google::protobuf::Message *)(v48 + 2);
            }
          }
          else
          {
            *char v48 = v121;
            a3 = (const google::protobuf::Message *)(v48 + 1);
          }
          break;
        default:
          break;
      }
      ++v25;
    }
    while (v25 != v26);
  }
  if (v177) {
    operator delete(v177);
  }
  return (unsigned __int8 *)a3;
}

void sub_10014B3DC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,__int16 a24,char a25,char a26)
{
  if (SHIDWORD(a21) >= 1 && !*(void *)(a22 - 8)) {
    operator delete((void *)(a22 - 8));
  }
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned __int8 *google::protobuf::internal::WireFormat::InternalSerializeMessageSetItem(google::protobuf::internal::WireFormat *this, const google::protobuf::FieldDescriptor *a2, const google::protobuf::Message *a3, google::protobuf::io::EpsCopyOutputStream *a4, google::protobuf::io::EpsCopyOutputStream *a5)
{
  (*(void (**)(const google::protobuf::FieldDescriptor *))(*(void *)a2 + 152))(a2);
  long long v10 = v9;
  if (*(void *)a4 <= (unint64_t)a3) {
    a3 = (const google::protobuf::Message *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, (unsigned __int8 *)a3);
  }
  *(unsigned char *)a3 = 11;
  unsigned int v11 = *((_DWORD *)this + 17);
  *((unsigned char *)a3 + 1) = 16;
  if (v11 > 0x7F)
  {
    *((unsigned char *)a3 + 2) = v11 | 0x80;
    unsigned int v13 = v11 >> 7;
    if (v11 >> 14)
    {
      uint64_t v12 = (char *)a3 + 4;
      do
      {
        *(v12 - 1) = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        ++v12;
        unsigned int v15 = v13 >> 14;
        v13 >>= 7;
      }
      while (v15);
      *(v12 - 1) = v14;
    }
    else
    {
      *((unsigned char *)a3 + 3) = v13;
      uint64_t v12 = (char *)a3 + 4;
    }
  }
  else
  {
    *((unsigned char *)a3 + 2) = v11;
    uint64_t v12 = (char *)a3 + 3;
  }
  uint64_t Message = google::protobuf::Reflection::GetMessage(v10, a2, this, 0);
  *uint64_t v12 = 26;
  unsigned int v17 = (*(uint64_t (**)(uint64_t))(*(void *)Message + 80))(Message);
  if (v17 > 0x7F)
  {
    v12[1] = v17 | 0x80;
    unsigned int v19 = v17 >> 7;
    if (v17 >> 14)
    {
      BOOL v18 = v12 + 3;
      do
      {
        *(v18 - 1) = v19 | 0x80;
        unsigned int v20 = v19 >> 7;
        ++v18;
        unsigned int v21 = v19 >> 14;
        v19 >>= 7;
      }
      while (v21);
      *(v18 - 1) = v20;
    }
    else
    {
      v12[2] = v19;
      BOOL v18 = v12 + 3;
    }
  }
  else
  {
    v12[1] = v17;
    BOOL v18 = v12 + 2;
  }
  long long v22 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, char *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)Message + 96))(Message, v18, a4);
  if (*(void *)a4 <= (unint64_t)v22) {
    long long v22 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a4, v22);
  }
  *long long v22 = 12;
  return v22 + 1;
}

void sub_10014B7B4(google::protobuf::Message *a1@<X0>, google::protobuf::Reflection *this@<X1>, const google::protobuf::FieldDescriptor *a3@<X2>, uint64_t *a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  google::protobuf::Reflection::MapBegin(this, a1, a3, (uint64_t)v13);
  while (1)
  {
    google::protobuf::Reflection::MapEnd(this, a1, a3, (uint64_t)v12);
    int v8 = (*(uint64_t (**)(uint64_t, unsigned char *, unsigned char *))(*(void *)v14 + 48))(v14, v13, v12);
    sub_100120978((uint64_t)v12);
    if (v8) {
      break;
    }
    sub_10014E330(a4, v15);
    (*(void (**)(uint64_t, unsigned char *))(*(void *)v14 + 152))(v14, v13);
  }
  sub_100120978((uint64_t)v13);
  int v9 = (const std::string *)a4[1];
  unint64_t v10 = 126 - 2 * __clz(((uint64_t)v9 - *a4) >> 5);
  if (v9 == (const std::string *)*a4) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v10;
  }
  sub_10014E6A0((const std::string *)*a4, v9, (uint64_t)v12, v11, 1);
}

void sub_10014B908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  sub_100150F88((void ***)va);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_10014B948(google::protobuf::FieldDescriptor *a1, unsigned int *a2, unsigned int **a3, unsigned __int8 *a4, google::protobuf::io::EpsCopyOutputStream *a5)
{
  uint64_t v10 = *(void *)(google::protobuf::FieldDescriptor::message_type(a1) + 40);
  uint64_t v11 = *(void *)(google::protobuf::FieldDescriptor::message_type(a1) + 40);
  int v12 = sub_10014D91C(v10, a2);
  unsigned int v13 = v12 + sub_10014DB90(v11 + 152, a3) + 2;
  if (*(void *)a5 <= (unint64_t)a4) {
    a4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a5, a4);
  }
  int v14 = *((_DWORD *)a1 + 17);
  unsigned int v15 = (8 * v14) | 2;
  if (v15 > 0x7F)
  {
    *a4 = (8 * v14) | 0x82;
    unsigned int v17 = (8 * v14) >> 7;
    if (v15 >> 14)
    {
      int v16 = a4 + 2;
      do
      {
        *(v16 - 1) = v17 | 0x80;
        unsigned int v18 = v17 >> 7;
        ++v16;
        unsigned int v19 = v17 >> 14;
        v17 >>= 7;
      }
      while (v19);
      *(v16 - 1) = v18;
    }
    else
    {
      a4[1] = v17;
      int v16 = a4 + 2;
    }
  }
  else
  {
    *a4 = v15;
    int v16 = a4 + 1;
  }
  if (v13 > 0x7F)
  {
    *int v16 = v13 | 0x80;
    unsigned int v21 = v13 >> 7;
    if (v13 >> 14)
    {
      unsigned int v20 = v16 + 2;
      do
      {
        *(v20 - 1) = v21 | 0x80;
        unsigned int v22 = v21 >> 7;
        ++v20;
        unsigned int v23 = v21 >> 14;
        v21 >>= 7;
      }
      while (v23);
      *(v20 - 1) = v22;
    }
    else
    {
      v16[1] = v21;
      unsigned int v20 = v16 + 2;
    }
  }
  else
  {
    *int v16 = v13;
    unsigned int v20 = v16 + 1;
  }
  if (*(void *)a5 <= (unint64_t)v20) {
    unsigned int v20 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a5, v20);
  }
  __int16 v24 = *(std::once_flag::_State_type **)(v10 + 48);
  if (v24)
  {
    uint64_t v79 = v10;
    unsigned int v80 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v24, memory_order_acquire) != -1)
    {
      v78[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v80;
      v78[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v79;
      unsigned int v81 = v78;
      std::__call_once(v24, &v81, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  switch(*(_DWORD *)(v10 + 56))
  {
    case 1:
    case 2:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xE:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v78, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wire_format.cc", 1075);
      uint64_t v25 = google::protobuf::internal::LogMessage::operator<<(v78, "Unsupported");
      google::protobuf::internal::LogFinisher::operator=((int)&v81, (const char **)&v25->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v78[0].__r_.__value_.__l.__data_);
      break;
    case 3:
      unint64_t v26 = sub_100110D5C((uint64_t)a2);
      *unsigned int v20 = 8;
      if (v26 <= 0x7F) {
        goto LABEL_35;
      }
      v20[1] = v26 | 0x80;
      unint64_t v27 = v26 >> 7;
      if (!(v26 >> 14)) {
        goto LABEL_62;
      }
      v20 += 3;
      do
      {
        *(v20 - 1) = v27 | 0x80;
        unint64_t v28 = v27 >> 7;
        ++v20;
        unint64_t v29 = v27 >> 14;
        v27 >>= 7;
      }
      while (v29);
      goto LABEL_69;
    case 4:
      unint64_t v26 = sub_100110F4C((uint64_t)a2);
      *unsigned int v20 = 8;
      if (v26 <= 0x7F) {
        goto LABEL_35;
      }
      v20[1] = v26 | 0x80;
      unint64_t v27 = v26 >> 7;
      if (!(v26 >> 14)) {
        goto LABEL_62;
      }
      v20 += 3;
      do
      {
        *(v20 - 1) = v27 | 0x80;
        unint64_t v28 = v27 >> 7;
        ++v20;
        unint64_t v30 = v27 >> 14;
        v27 >>= 7;
      }
      while (v30);
      goto LABEL_69;
    case 5:
      LODWORD(v26) = sub_100110E54(a2);
      *unsigned int v20 = 8;
      if (v26 <= 0x7F)
      {
LABEL_35:
        v20[1] = v26;
        goto LABEL_50;
      }
      v20[1] = v26 | 0x80;
      unint64_t v27 = (unint64_t)(int)v26 >> 7;
      if (!(v26 >> 14)) {
        goto LABEL_62;
      }
      v20 += 3;
      do
      {
        *(v20 - 1) = v27 | 0x80;
        unint64_t v28 = v27 >> 7;
        ++v20;
        unint64_t v39 = v27 >> 14;
        v27 >>= 7;
      }
      while (v39);
      goto LABEL_69;
    case 6:
      uint64_t v31 = sub_100110F4C((uint64_t)a2);
      goto LABEL_45;
    case 7:
      int v32 = sub_100111044(a2);
      goto LABEL_43;
    case 8:
      LOBYTE(v33) = sub_10011113C((unsigned __int8 *)a2);
      *unsigned int v20 = 8;
      goto LABEL_41;
    case 9:
      uint64_t v34 = sub_100110C64((uint64_t)a2);
      unsigned int v20 = sub_1000E4244(a5, 1, v34, v20);
      break;
    case 0xD:
      unsigned int v33 = sub_100111044(a2);
      *unsigned int v20 = 8;
      if (v33 <= 0x7F)
      {
LABEL_41:
        v20[1] = v33;
        goto LABEL_50;
      }
      v20[1] = v33 | 0x80;
      unsigned int v40 = v33 >> 7;
      if (!(v33 >> 14)) {
        goto LABEL_60;
      }
      v20 += 3;
      do
      {
        *(v20 - 1) = v40 | 0x80;
        unsigned int v41 = v40 >> 7;
        ++v20;
        unsigned int v42 = v40 >> 14;
        v40 >>= 7;
      }
      while (v42);
      goto LABEL_66;
    case 0xF:
      int v32 = sub_100110E54(a2);
LABEL_43:
      *unsigned int v20 = 13;
      *(_DWORD *)(v20 + 1) = v32;
      v20 += 5;
      break;
    case 0x10:
      uint64_t v31 = sub_100110D5C((uint64_t)a2);
LABEL_45:
      *unsigned int v20 = 9;
      *(void *)(v20 + 1) = v31;
      v20 += 9;
      break;
    case 0x11:
      int v35 = sub_100110E54(a2);
      *unsigned int v20 = 8;
      unsigned int v36 = (2 * v35) ^ (v35 >> 31);
      if (v36 <= 0x7F)
      {
        v20[1] = v36;
        goto LABEL_50;
      }
      v20[1] = v36 | 0x80;
      unsigned int v40 = v36 >> 7;
      if (!(v36 >> 14))
      {
LABEL_60:
        _OWORD v20[2] = v40;
        goto LABEL_63;
      }
      v20 += 3;
      do
      {
        *(v20 - 1) = v40 | 0x80;
        unsigned int v41 = v40 >> 7;
        ++v20;
        unsigned int v43 = v40 >> 14;
        v40 >>= 7;
      }
      while (v43);
LABEL_66:
      *(v20 - 1) = v41;
      break;
    case 0x12:
      uint64_t v37 = sub_100110D5C((uint64_t)a2);
      *unsigned int v20 = 8;
      unint64_t v38 = (2 * v37) ^ (v37 >> 63);
      if (v38 > 0x7F)
      {
        v20[1] = v38 | 0x80;
        unint64_t v27 = v38 >> 7;
        if (v38 >> 14)
        {
          v20 += 3;
          do
          {
            *(v20 - 1) = v27 | 0x80;
            unint64_t v28 = v27 >> 7;
            ++v20;
            unint64_t v44 = v27 >> 14;
            v27 >>= 7;
          }
          while (v44);
LABEL_69:
          *(v20 - 1) = v28;
        }
        else
        {
LABEL_62:
          _OWORD v20[2] = v27;
LABEL_63:
          v20 += 3;
        }
      }
      else
      {
        v20[1] = v38;
LABEL_50:
        v20 += 2;
      }
      break;
    default:
      break;
  }
  if (*(void *)a5 <= (unint64_t)v20) {
    unsigned int v20 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a5, v20);
  }
  unsigned int v45 = *(std::once_flag::_State_type **)(v11 + 200);
  if (v45)
  {
    uint64_t v79 = v11 + 152;
    unsigned int v80 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v45, memory_order_acquire) != -1)
    {
      v78[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v80;
      v78[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v79;
      unsigned int v81 = v78;
      std::__call_once(v45, &v81, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  switch(*(_DWORD *)(v11 + 208))
  {
    case 1:
      double v48 = sub_10010FC38((uint64_t)a3);
      *unsigned int v20 = 17;
      *(double *)(v20 + 1) = v48;
      goto LABEL_112;
    case 2:
      float v49 = sub_10010FA34((uint64_t)a3);
      *unsigned int v20 = 21;
      *(float *)(v20 + 1) = v49;
      goto LABEL_109;
    case 3:
      unint64_t v50 = sub_10010F438((uint64_t)a3);
      *unsigned int v20 = 16;
      if (v50 <= 0x7F) {
        goto LABEL_105;
      }
      v20[1] = v50 | 0x80;
      unint64_t v51 = v50 >> 7;
      if (!(v50 >> 14)) {
        goto LABEL_130;
      }
      v20 += 3;
      do
      {
        *(v20 - 1) = v51 | 0x80;
        unint64_t v52 = v51 >> 7;
        ++v20;
        unint64_t v53 = v51 >> 14;
        v51 >>= 7;
      }
      while (v53);
      goto LABEL_142;
    case 4:
      unint64_t v50 = sub_10010F830((uint64_t)a3);
      *unsigned int v20 = 16;
      if (v50 <= 0x7F) {
        goto LABEL_105;
      }
      v20[1] = v50 | 0x80;
      unint64_t v51 = v50 >> 7;
      if (!(v50 >> 14)) {
        goto LABEL_130;
      }
      v20 += 3;
      do
      {
        *(v20 - 1) = v51 | 0x80;
        unint64_t v52 = v51 >> 7;
        ++v20;
        unint64_t v54 = v51 >> 14;
        v51 >>= 7;
      }
      while (v54);
      goto LABEL_142;
    case 5:
      LODWORD(v5google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = sub_10010F23C(a3);
      *unsigned int v20 = 16;
      if (v50 <= 0x7F) {
        goto LABEL_105;
      }
      v20[1] = v50 | 0x80;
      unint64_t v51 = (unint64_t)(int)v50 >> 7;
      if (!(v50 >> 14)) {
        goto LABEL_130;
      }
      v20 += 3;
      do
      {
        *(v20 - 1) = v51 | 0x80;
        unint64_t v52 = v51 >> 7;
        ++v20;
        unint64_t v55 = v51 >> 14;
        v51 >>= 7;
      }
      while (v55);
      goto LABEL_142;
    case 6:
      uint64_t v56 = sub_10010F830((uint64_t)a3);
      goto LABEL_111;
    case 7:
      int v57 = sub_10010F634(a3);
      goto LABEL_108;
    case 8:
      LOBYTE(v58) = sub_10010FE34((unsigned __int8 **)a3);
      *unsigned int v20 = 16;
      goto LABEL_103;
    case 9:
    case 0xC:
      uint64_t v46 = sub_100110034((uint64_t)a3);
      return sub_1000E4244(a5, 2, v46, v20);
    case 0xA:
      uint64_t v59 = sub_100110420((uint64_t)a3);
      *unsigned int v20 = 19;
      int v60 = (unsigned __int8 *)(*(uint64_t (**)(uint64_t, unsigned __int8 *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)v59 + 96))(v59, v20 + 1, a5);
      if (*(void *)a5 <= (unint64_t)v60) {
        int v60 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a5, v60);
      }
      *int v60 = 20;
      return v60 + 1;
    case 0xB:
      uint64_t v61 = sub_100110420((uint64_t)a3);
      *unsigned int v20 = 18;
      unsigned int v62 = (*(uint64_t (**)(uint64_t))(*(void *)v61 + 80))(v61);
      if (v62 > 0x7F)
      {
        v20[1] = v62 | 0x80;
        unsigned int v68 = v62 >> 7;
        if (v62 >> 14)
        {
          uint64_t v63 = v20 + 3;
          do
          {
            *(v63 - 1) = v68 | 0x80;
            unsigned int v73 = v68 >> 7;
            ++v63;
            unsigned int v74 = v68 >> 14;
            v68 >>= 7;
          }
          while (v74);
          *(v63 - 1) = v73;
        }
        else
        {
          _OWORD v20[2] = v68;
          uint64_t v63 = v20 + 3;
        }
      }
      else
      {
        v20[1] = v62;
        uint64_t v63 = v20 + 2;
      }
      return (unsigned __int8 *)(*(uint64_t (**)(uint64_t, unsigned __int8 *, google::protobuf::io::EpsCopyOutputStream *))(*(void *)v61 + 96))(v61, v63, a5);
    case 0xD:
      unsigned int v58 = sub_10010F634(a3);
      *unsigned int v20 = 16;
      if (v58 <= 0x7F)
      {
LABEL_103:
        v20[1] = v58;
        goto LABEL_106;
      }
      v20[1] = v58 | 0x80;
      unsigned int v69 = v58 >> 7;
      if (!(v58 >> 14)) {
        goto LABEL_128;
      }
      v20 += 3;
      do
      {
        *(v20 - 1) = v69 | 0x80;
        unsigned int v70 = v69 >> 7;
        ++v20;
        unsigned int v71 = v69 >> 14;
        v69 >>= 7;
      }
      while (v71);
      goto LABEL_139;
    case 0xE:
      LODWORD(v5google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2ftype_2eproto, 0) = sub_10011022C(a3);
      *unsigned int v20 = 16;
      if (v50 <= 0x7F)
      {
LABEL_105:
        v20[1] = v50;
        goto LABEL_106;
      }
      v20[1] = v50 | 0x80;
      unint64_t v51 = (unint64_t)(int)v50 >> 7;
      if (!(v50 >> 14)) {
        goto LABEL_130;
      }
      v20 += 3;
      do
      {
        *(v20 - 1) = v51 | 0x80;
        unint64_t v52 = v51 >> 7;
        ++v20;
        unint64_t v72 = v51 >> 14;
        v51 >>= 7;
      }
      while (v72);
      goto LABEL_142;
    case 0xF:
      int v57 = sub_10010F23C(a3);
LABEL_108:
      *unsigned int v20 = 21;
      *(_DWORD *)(v20 + 1) = v57;
LABEL_109:
      v20 += 5;
      return v20;
    case 0x10:
      uint64_t v56 = sub_10010F438((uint64_t)a3);
LABEL_111:
      *unsigned int v20 = 17;
      *(void *)(v20 + 1) = v56;
LABEL_112:
      v20 += 9;
      return v20;
    case 0x11:
      int v64 = sub_10010F23C(a3);
      *unsigned int v20 = 16;
      unsigned int v65 = (2 * v64) ^ (v64 >> 31);
      if (v65 <= 0x7F)
      {
        v20[1] = v65;
        goto LABEL_106;
      }
      v20[1] = v65 | 0x80;
      unsigned int v69 = v65 >> 7;
      if (!(v65 >> 14))
      {
LABEL_128:
        _OWORD v20[2] = v69;
        goto LABEL_131;
      }
      v20 += 3;
      do
      {
        *(v20 - 1) = v69 | 0x80;
        unsigned int v70 = v69 >> 7;
        ++v20;
        unsigned int v75 = v69 >> 14;
        v69 >>= 7;
      }
      while (v75);
LABEL_139:
      *(v20 - 1) = v70;
      break;
    case 0x12:
      uint64_t v66 = sub_10010F438((uint64_t)a3);
      *unsigned int v20 = 16;
      unint64_t v67 = (2 * v66) ^ (v66 >> 63);
      if (v67 > 0x7F)
      {
        v20[1] = v67 | 0x80;
        unint64_t v51 = v67 >> 7;
        if (v67 >> 14)
        {
          v20 += 3;
          do
          {
            *(v20 - 1) = v51 | 0x80;
            unint64_t v52 = v51 >> 7;
            ++v20;
            unint64_t v76 = v51 >> 14;
            v51 >>= 7;
          }
          while (v76);
LABEL_142:
          *(v20 - 1) = v52;
        }
        else
        {
LABEL_130:
          _OWORD v20[2] = v51;
LABEL_131:
          v20 += 3;
        }
      }
      else
      {
        v20[1] = v67;
LABEL_106:
        v20 += 2;
      }
      break;
    default:
      return v20;
  }
  return v20;
}

void sub_10014C358(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_10014C400(uint64_t a1@<X0>, int a2@<W1>, google::protobuf::FieldDescriptor *a3@<X3>, void **a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
  sub_10011A5D4(a4, a2);
  sub_10014FE38((uint64_t **)&v38, a1, a3);
  uint64_t v7 = v38;
  uint64_t v8 = v39;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(*(void *)v40 + 24))(v40);
  uint64_t v34 = v7;
  uint64_t v35 = v8;
  uint64_t v36 = (*(uint64_t (**)(uint64_t, const google::protobuf::FieldDescriptor *))(*(void *)v8 + 72))(v8, v7);
  uint64_t v37 = v9;
  while (1)
  {
    v31[0] = v38;
    v31[1] = v39;
    uint64_t v32 = (*(uint64_t (**)(uint64_t))(*(void *)v39 + 80))(v39);
    uint64_t v33 = 0;
    int v10 = (*(uint64_t (**)(uint64_t, const google::protobuf::FieldDescriptor *, uint64_t, uint64_t))(*(void *)v35 + 104))(v35, v34, v36, v32);
    sub_10014FF08((uint64_t)v31);
    if (v10) {
      break;
    }
    uint64_t v11 = (*(uint64_t (**)(uint64_t, const google::protobuf::FieldDescriptor *, uint64_t, uint64_t))(*(void *)v35 + 120))(v35, v34, v36, v37);
    uint64_t v12 = v11;
    int v14 = (uint64_t *)a4[1];
    unint64_t v13 = (unint64_t)a4[2];
    if ((unint64_t)v14 >= v13)
    {
      uint64_t v16 = ((char *)v14 - (unsigned char *)*a4) >> 3;
      if ((unint64_t)(v16 + 1) >> 61) {
        sub_100078F84();
      }
      uint64_t v17 = v13 - (void)*a4;
      uint64_t v18 = v17 >> 2;
      if (v17 >> 2 <= (unint64_t)(v16 + 1)) {
        uint64_t v18 = v16 + 1;
      }
      if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v19 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v19 = v18;
      }
      if (v19) {
        unsigned int v20 = (char *)sub_1000B4170((uint64_t)(a4 + 2), v19);
      }
      else {
        unsigned int v20 = 0;
      }
      unsigned int v21 = (uint64_t *)&v20[8 * v16];
      uint64_t *v21 = v12;
      unsigned int v15 = (char *)(v21 + 1);
      unsigned int v23 = (char *)*a4;
      unsigned int v22 = (char *)a4[1];
      if (v22 != *a4)
      {
        do
        {
          uint64_t v24 = *((void *)v22 - 1);
          v22 -= 8;
          *--unsigned int v21 = v24;
        }
        while (v22 != v23);
        unsigned int v22 = (char *)*a4;
      }
      *a4 = v21;
      a4[1] = v15;
      a4[2] = &v20[8 * v19];
      if (v22) {
        operator delete(v22);
      }
    }
    else
    {
      *int v14 = v11;
      unsigned int v15 = (char *)(v14 + 1);
    }
    a4[1] = v15;
    uint64_t v36 = (*(uint64_t (**)(uint64_t, const google::protobuf::FieldDescriptor *, uint64_t))(*(void *)v35 + 96))(v35, v34, v36);
  }
  sub_10014FF08((uint64_t)&v34);
  uint64_t v25 = google::protobuf::FieldDescriptor::message_type(a3);
  unint64_t v26 = (const google::protobuf::Message **)*a4;
  unint64_t v27 = (const google::protobuf::Message **)a4[1];
  uint64_t v34 = *(const google::protobuf::FieldDescriptor **)(v25 + 40);
  if ((char *)v27 - (char *)v26 < 1025)
  {
    unint64_t v28 = 0;
    uint64_t v30 = 0;
  }
  else
  {
    unint64_t v28 = (const google::protobuf::Message **)sub_10014358C(v27 - v26);
    uint64_t v30 = v29;
  }
  sub_10014FF90(v26, v27, &v34, v27 - v26, v28, v30);
  if (v28) {
    operator delete(v28);
  }
}

void sub_10014C6C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  if (v15) {
    operator delete(v15);
  }
  uint64_t v17 = *(void **)v14;
  if (*(void *)v14)
  {
    *(void *)(v14 + 8) = v17;
    operator delete(v17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(google::protobuf::internal::WireFormat *this, const google::protobuf::FieldDescriptor *a2, const google::protobuf::Message *a3)
{
  (*(void (**)(const google::protobuf::FieldDescriptor *))(*(void *)a2 + 152))(a2);
  unint64_t v6 = v5;
  uint64_t v7 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v7)
  {
    unint64_t v50 = this;
    unint64_t v51 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      std::string __p = &v51;
      unint64_t v54 = &v50;
      v52[0] = &__p;
      std::__call_once(v7, v52, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (*((_DWORD *)this + 14) == 11)
  {
    if (google::protobuf::FieldDescriptor::is_map_message_type(this))
    {
      MapData = (atomic_uint *)google::protobuf::Reflection::GetMapData(v6, a2, this);
      if (google::protobuf::internal::MapFieldBase::IsMapValid(MapData))
      {
        sub_10012073C((uint64_t)&__p, a2, this);
        sub_10012073C((uint64_t)v52, a2, this);
        uint64_t v9 = *(void *)(google::protobuf::FieldDescriptor::message_type(this) + 40);
        uint64_t v10 = *(void *)(google::protobuf::FieldDescriptor::message_type(this) + 40);
        (*(void (**)(atomic_uint *, void **))(*(void *)MapData + 56))(MapData, &__p);
        (*(void (**)(atomic_uint *, void *))(*(void *)MapData + 64))(MapData, v52);
        uint64_t v11 = 0;
        uint64_t v12 = v10 + 152;
        while (((*((uint64_t (**)(google::protobuf::internal::WireFormat **, void **, void *))*v54 + 6))(v54, &__p, v52) & 1) == 0)
        {
          uint64_t v13 = sub_10014D91C(v9, (unsigned int *)&v55);
          uint64_t v14 = sub_10014DB90(v12, &v56);
          v11 += v13 + v14 + 2 + ((9 * (__clz((v13 + v14 + 2) | 1) ^ 0x1F) + 73) >> 6);
          (*((void (**)(google::protobuf::internal::WireFormat **, void **))*v54 + 19))(v54, &__p);
        }
        sub_100120978((uint64_t)v52);
        sub_100120978((uint64_t)&__p);
        return v11;
      }
    }
  }
  if (*((_DWORD *)this + 15) == 3)
  {
    unsigned int v15 = google::protobuf::Reflection::FieldSize(v6, a2, this);
  }
  else
  {
    if (*(unsigned char *)(*(void *)(*((void *)this + 10) + 32) + 75))
    {
      uint64_t v16 = 1;
      goto LABEL_16;
    }
    unsigned int v15 = google::protobuf::Reflection::HasField(v6, a2, this);
  }
  uint64_t v16 = v15;
LABEL_16:
  uint64_t v17 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v17)
  {
    unint64_t v50 = this;
    unint64_t v51 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v17, memory_order_acquire) != -1)
    {
      std::string __p = &v51;
      unint64_t v54 = &v50;
      v52[0] = &__p;
      std::__call_once(v17, v52, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  switch(*((_DWORD *)this + 14))
  {
    case 1:
    case 6:
    case 0x10:
      uint64_t v11 = 8 * v16;
      break;
    case 2:
    case 7:
    case 0xF:
      uint64_t v11 = 4 * v16;
      break;
    case 3:
      if (*((_DWORD *)this + 15) != 3)
      {
        uint64_t Int64 = google::protobuf::Reflection::GetInt64(v6, a2, this);
        goto LABEL_90;
      }
      if (!v16) {
        goto LABEL_87;
      }
      uint64_t v21 = 0;
      uint64_t v11 = 0;
      do
        v11 += (9 * (__clz(google::protobuf::Reflection::GetRepeatedInt64(v6, a2, this, v21++) | 1) ^ 0x3F) + 73) >> 6;
      while (v16 != v21);
      break;
    case 4:
      if (*((_DWORD *)this + 15) != 3)
      {
        uint64_t Int64 = google::protobuf::Reflection::GetUInt64(v6, a2, this);
LABEL_90:
        unint64_t v40 = Int64 | 1;
        goto LABEL_103;
      }
      if (!v16) {
        goto LABEL_87;
      }
      uint64_t v22 = 0;
      uint64_t v11 = 0;
      do
        v11 += (9 * (__clz(google::protobuf::Reflection::GetRepeatedUInt64(v6, a2, this, v22++) | 1) ^ 0x3F) + 73) >> 6;
      while (v16 != v22);
      break;
    case 5:
      if (*((_DWORD *)this + 15) != 3)
      {
        int Int32 = google::protobuf::Reflection::GetInt32(v6, a2, this);
        if ((Int32 & 0x80000000) == 0) {
          goto LABEL_96;
        }
        goto LABEL_98;
      }
      if (!v16) {
        goto LABEL_87;
      }
      uint64_t v23 = 0;
      uint64_t v11 = 0;
      do
      {
        int RepeatedInt32 = google::protobuf::Reflection::GetRepeatedInt32(v6, a2, this, v23);
        if (RepeatedInt32 < 0) {
          uint64_t v25 = 10;
        }
        else {
          uint64_t v25 = (9 * (__clz(RepeatedInt32 | 1) ^ 0x1F) + 73) >> 6;
        }
        v11 += v25;
        ++v23;
      }
      while (v16 != v23);
      break;
    case 8:
      uint64_t v11 = v16;
      break;
    case 9:
    case 0xC:
      if (!v16) {
        goto LABEL_87;
      }
      uint64_t v18 = 0;
      uint64_t v11 = 0;
      do
      {
        std::string __p = 0;
        unint64_t v54 = 0;
        uint64_t v55 = 0;
        if (*((_DWORD *)this + 15) == 3) {
          unint64_t RepeatedStringReference = google::protobuf::Reflection::GetRepeatedStringReference((uint64_t)v6, (uint64_t)a2, (uint64_t)this, v18);
        }
        else {
          unint64_t RepeatedStringReference = google::protobuf::Reflection::GetStringReference((uint64_t)v6, (uint64_t)a2, (uint64_t)this);
        }
        if (*(char *)(RepeatedStringReference + 23) >= 0) {
          uint64_t v20 = *(unsigned __int8 *)(RepeatedStringReference + 23);
        }
        else {
          uint64_t v20 = *(void *)(RepeatedStringReference + 8);
        }
        if (SHIBYTE(v55) < 0) {
          operator delete(__p);
        }
        v11 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
        ++v18;
      }
      while (v16 != v18);
      break;
    case 0xA:
      if (*((_DWORD *)this + 15) == 3)
      {
        if (!v16) {
          goto LABEL_87;
        }
        uint64_t v26 = 0;
        uint64_t v11 = 0;
        do
        {
          uint64_t RepeatedMessage = google::protobuf::Reflection::GetRepeatedMessage(v6, a2, this, v26);
          v11 += (*(uint64_t (**)(uint64_t))(*(void *)RepeatedMessage + 72))(RepeatedMessage);
          ++v26;
        }
        while (v16 != v26);
      }
      else
      {
        uint64_t Message = google::protobuf::Reflection::GetMessage(v6, a2, this, 0);
        uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)Message + 72))(Message);
      }
      break;
    case 0xB:
      if (*((_DWORD *)this + 15) == 3)
      {
        if (!v16) {
          goto LABEL_87;
        }
        uint64_t v28 = 0;
        uint64_t v11 = 0;
        do
        {
          uint64_t v29 = google::protobuf::Reflection::GetRepeatedMessage(v6, a2, this, v28);
          uint64_t v30 = (*(uint64_t (**)(uint64_t))(*(void *)v29 + 72))(v29);
          v11 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
          ++v28;
        }
        while (v16 != v28);
      }
      else
      {
        uint64_t v43 = google::protobuf::Reflection::GetMessage(v6, a2, this, 0);
        uint64_t v44 = (*(uint64_t (**)(uint64_t))(*(void *)v43 + 72))(v43);
        uint64_t v11 = v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6);
      }
      break;
    case 0xD:
      if (*((_DWORD *)this + 15) != 3)
      {
        int Int32 = google::protobuf::Reflection::GetUInt32(v6, a2, this);
LABEL_96:
        unsigned int v45 = Int32 | 1;
        goto LABEL_101;
      }
      if (!v16) {
        goto LABEL_87;
      }
      uint64_t v31 = 0;
      uint64_t v11 = 0;
      do
        v11 += (9 * (__clz(google::protobuf::Reflection::GetRepeatedUInt32(v6, a2, this, v31++) | 1) ^ 0x1F) + 73) >> 6;
      while (v16 != v31);
      break;
    case 0xE:
      if (*((_DWORD *)this + 15) == 3)
      {
        if (!v16) {
          goto LABEL_87;
        }
        uint64_t v32 = 0;
        uint64_t v11 = 0;
        do
        {
          int v33 = *(_DWORD *)(google::protobuf::Reflection::GetRepeatedEnum(v6, a2, this, v32) + 16);
          if (v33 < 0) {
            uint64_t v34 = 10;
          }
          else {
            uint64_t v34 = (9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6;
          }
          v11 += v34;
          ++v32;
        }
        while (v16 != v32);
      }
      else
      {
        int v46 = *(_DWORD *)(google::protobuf::Reflection::GetEnum(v6, a2, this) + 16);
        if ((v46 & 0x80000000) == 0) {
          goto LABEL_100;
        }
LABEL_98:
        uint64_t v11 = 10;
      }
      break;
    case 0x11:
      if (*((_DWORD *)this + 15) == 3)
      {
        if (!v16) {
          goto LABEL_87;
        }
        uint64_t v35 = 0;
        uint64_t v11 = 0;
        do
        {
          int v36 = google::protobuf::Reflection::GetRepeatedInt32(v6, a2, this, v35);
          v11 += (9 * (__clz((2 * v36) ^ (v36 >> 31) | 1) ^ 0x1F) + 73) >> 6;
          ++v35;
        }
        while (v16 != v35);
      }
      else
      {
        int v47 = google::protobuf::Reflection::GetInt32(v6, a2, this);
        int v46 = (2 * v47) ^ (v47 >> 31);
LABEL_100:
        unsigned int v45 = v46 | 1;
LABEL_101:
        uint64_t v11 = (9 * (__clz(v45) ^ 0x1F) + 73) >> 6;
      }
      break;
    case 0x12:
      if (*((_DWORD *)this + 15) == 3)
      {
        if (!v16) {
          goto LABEL_87;
        }
        uint64_t v37 = 0;
        uint64_t v11 = 0;
        do
        {
          uint64_t RepeatedInt64 = google::protobuf::Reflection::GetRepeatedInt64(v6, a2, this, v37);
          v11 += (9 * (__clz((2 * RepeatedInt64) ^ (RepeatedInt64 >> 63) | 1) ^ 0x3F) + 73) >> 6;
          ++v37;
        }
        while (v16 != v37);
      }
      else
      {
        uint64_t v48 = google::protobuf::Reflection::GetInt64(v6, a2, this);
        unint64_t v40 = (2 * v48) ^ (v48 >> 63) | 1;
LABEL_103:
        uint64_t v11 = (9 * (__clz(v40) ^ 0x3F) + 73) >> 6;
      }
      break;
    default:
LABEL_87:
      uint64_t v11 = 0;
      break;
  }
  return v11;
}

void sub_10014D028(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
}

unsigned __int8 *sub_10014D0C0(google::protobuf::io::EpsCopyOutputStream *this, int a2, uint64_t a3, unsigned __int8 *a4)
{
  if (*(void *)this <= (unint64_t)a4) {
    a4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
  }
  int v7 = 4 * *(_DWORD *)a3;
  uint64_t v8 = sub_10004FAC0((uint64_t)this, a2, v7, a4);
  uint64_t v9 = v8;
  uint64_t v10 = *(char **)(a3 + 8);
  if (*(void *)this - (void)v8 < v7)
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, v10, v7, v8);
  }
  else
  {
    memcpy(v8, v10, v7);
    return &v9[v7];
  }
}

unsigned __int8 *sub_10014D180(google::protobuf::io::EpsCopyOutputStream *this, int a2, uint64_t a3, unsigned __int8 *a4)
{
  if (*(void *)this <= (unint64_t)a4) {
    a4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
  }
  int v7 = 8 * *(_DWORD *)a3;
  uint64_t v8 = sub_10004FAC0((uint64_t)this, a2, v7, a4);
  uint64_t v9 = v8;
  uint64_t v10 = *(char **)(a3 + 8);
  if (*(void *)this - (void)v8 < v7)
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, v10, v7, v8);
  }
  else
  {
    memcpy(v8, v10, v7);
    return &v9[v7];
  }
}

unsigned __int8 *sub_10014D240(google::protobuf::io::EpsCopyOutputStream *this, int a2, uint64_t a3, unsigned __int8 *a4)
{
  if (*(void *)this <= (unint64_t)a4) {
    a4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
  }
  int v7 = *(_DWORD *)a3;
  uint64_t v8 = sub_10004FAC0((uint64_t)this, a2, *(_DWORD *)a3, a4);
  uint64_t v9 = v8;
  uint64_t v10 = *(char **)(a3 + 8);
  if (*(void *)this - (void)v8 < v7)
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, v10, v7, v8);
  }
  else
  {
    memcpy(v8, v10, v7);
    return &v9[v7];
  }
}

uint64_t google::protobuf::internal::WireFormat::ByteSize(google::protobuf::internal::WireFormat *this, const google::protobuf::Message *a2)
{
  uint64_t v3 = (*(uint64_t (**)(google::protobuf::internal::WireFormat *, const google::protobuf::Message *))(*(void *)this + 152))(this, a2);
  (*(void (**)(google::protobuf::internal::WireFormat *))(*(void *)this + 152))(this);
  unint64_t v6 = (google::protobuf::Reflection *)v4;
  std::string __p = 0;
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  if (*(unsigned char *)(*(void *)(v3 + 32) + 75))
  {
    if (*(int *)(v3 + 104) < 1)
    {
      int v7 = 0;
    }
    else
    {
      int v7 = 0;
      uint64_t v8 = 0;
      do
      {
        uint64_t v9 = *(void *)(v3 + 40) + 152 * v8;
        if (v7 >= v29)
        {
          uint64_t v10 = ((char *)v7 - (unsigned char *)__p) >> 3;
          if ((unint64_t)(v10 + 1) >> 61) {
            sub_100078F84();
          }
          unint64_t v11 = ((char *)v29 - (unsigned char *)__p) >> 2;
          if (v11 <= v10 + 1) {
            unint64_t v11 = v10 + 1;
          }
          if ((unint64_t)((char *)v29 - (unsigned char *)__p) >= 0x7FFFFFFFFFFFFFF8) {
            unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v12 = v11;
          }
          if (v12) {
            uint64_t v13 = (char *)sub_1000B4170((uint64_t)&v29, v12);
          }
          else {
            uint64_t v13 = 0;
          }
          uint64_t v14 = (uint64_t *)&v13[8 * v10];
          *uint64_t v14 = v9;
          int v7 = v14 + 1;
          uint64_t v16 = (char *)__p;
          unsigned int v15 = (char *)v28;
          if (v28 != __p)
          {
            do
            {
              uint64_t v17 = *((void *)v15 - 1);
              v15 -= 8;
              *--uint64_t v14 = v17;
            }
            while (v15 != v16);
            unsigned int v15 = (char *)__p;
          }
          std::string __p = v14;
          uint64_t v28 = v7;
          uint64_t v29 = (uint64_t *)&v13[8 * v12];
          if (v15) {
            operator delete(v15);
          }
        }
        else
        {
          *v7++ = v9;
        }
        uint64_t v28 = v7;
        ++v8;
      }
      while (v8 < *(int *)(v3 + 104));
    }
  }
  else
  {
    google::protobuf::Reflection::ListFields(v4, (uint64_t)this, (uint64_t)&__p);
    int v7 = v28;
  }
  uint64_t v18 = (google::protobuf::internal::WireFormat **)__p;
  if (__p == v7)
  {
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v19 = 0;
    do
      v19 += google::protobuf::internal::WireFormat::FieldByteSize(*v18++, this, v5);
    while (v18 != (google::protobuf::internal::WireFormat **)v7);
  }
  if (*(unsigned char *)(*(void *)(v3 + 32) + 72))
  {
    UnknownFields = (google::protobuf::internal::WireFormat *)google::protobuf::Reflection::GetUnknownFields(v6, this);
    uint64_t v22 = google::protobuf::internal::WireFormat::ComputeUnknownMessageSetItemsSize(UnknownFields, v21);
  }
  else
  {
    uint64_t v23 = (google::protobuf::internal::WireFormat *)google::protobuf::Reflection::GetUnknownFields(v6, this);
    uint64_t v22 = google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v23, v24);
  }
  uint64_t v25 = v22;
  if (__p)
  {
    uint64_t v28 = (uint64_t *)__p;
    operator delete(__p);
  }
  return v25 + v19;
}

void sub_10014D534(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::WireFormat::FieldByteSize(google::protobuf::internal::WireFormat *this, const google::protobuf::FieldDescriptor *a2, const google::protobuf::Message *a3)
{
  (*(void (**)(const google::protobuf::FieldDescriptor *))(*(void *)a2 + 152))(a2);
  int v7 = v6;
  if (*((unsigned char *)this + 67) && *(unsigned char *)(*(void *)(*((void *)this + 10) + 32) + 72))
  {
    uint64_t v8 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v8)
    {
      uint64_t v17 = this;
      uint64_t v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
      {
        uint64_t v20 = &v18;
        uint64_t v21 = &v17;
        uint64_t v19 = &v20;
        std::__call_once(v8, &v19, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    if (google::protobuf::FieldDescriptor::kTypeToCppTypeMap[*((unsigned int *)this + 14)] == 10
      && *((_DWORD *)this + 15) != 3)
    {
      return google::protobuf::internal::WireFormat::MessageSetItemByteSize(this, a2, v5);
    }
  }
  if (*((_DWORD *)this + 15) == 3)
  {
    uint64_t v9 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v9)
    {
      uint64_t v17 = this;
      uint64_t v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
      {
        uint64_t v20 = &v18;
        uint64_t v21 = &v17;
        uint64_t v19 = &v20;
        std::__call_once(v9, &v19, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    if (*((_DWORD *)this + 14) == 11
      && google::protobuf::FieldDescriptor::is_map_message_type(this)
      && (MapData = (atomic_uint *)google::protobuf::Reflection::GetMapData(v7, a2, this),
          google::protobuf::internal::MapFieldBase::IsMapValid(MapData)))
    {
      unsigned int v11 = (*(uint64_t (**)(atomic_uint *))(*(void *)MapData + 88))(MapData);
    }
    else
    {
      unsigned int v11 = google::protobuf::Reflection::FieldSize(v7, a2, this);
    }
  }
  else
  {
    if (*(unsigned char *)(*(void *)(*((void *)this + 10) + 32) + 75))
    {
      unsigned int v12 = 1;
      goto LABEL_21;
    }
    unsigned int v11 = google::protobuf::Reflection::HasField(v7, a2, this);
  }
  unsigned int v12 = v11;
LABEL_21:
  uint64_t v13 = google::protobuf::internal::WireFormat::FieldDataOnlyByteSize(this, a2, v5);
  if (google::protobuf::FieldDescriptor::is_packed(this))
  {
    if (v13) {
      return v13
    }
           + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6)
           + ((9 * (__clz((8 * *((_DWORD *)this + 17)) | 1) ^ 0x1F) + 73) >> 6);
    else {
      return 0;
    }
  }
  else
  {
    int v15 = *((_DWORD *)this + 17);
    uint64_t v16 = (std::once_flag::_State_type *)*((void *)this + 6);
    if (v16)
    {
      uint64_t v17 = this;
      uint64_t v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
      if (atomic_load_explicit((atomic_ullong *volatile)v16, memory_order_acquire) != -1)
      {
        uint64_t v20 = &v18;
        uint64_t v21 = &v17;
        uint64_t v19 = &v20;
        std::__call_once(v16, &v19, (void (__cdecl *)(void *))sub_1000BB820);
      }
    }
    return v13
         + ((unint64_t)((9 * (__clz((8 * v15) | 1) ^ 0x1F) + 73) >> 6) << (*((_DWORD *)this + 14) == 10))
         * (unint64_t)v12;
  }
}

uint64_t google::protobuf::internal::WireFormat::MessageSetItemByteSize(google::protobuf::internal::WireFormat *this, const google::protobuf::FieldDescriptor *a2, const google::protobuf::Message *a3)
{
  (*(void (**)(const google::protobuf::FieldDescriptor *))(*(void *)a2 + 152))(a2);
  uint64_t v5 = ((9 * (__clz(*((_DWORD *)this + 17) | 1) ^ 0x1F) + 73) >> 6) + 4;
  uint64_t Message = google::protobuf::Reflection::GetMessage(v6, a2, this, 0);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(*(void *)Message + 72))(Message);
  return v5 + v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
}

uint64_t sub_10014D91C(uint64_t a1, unsigned int *a2)
{
  uint64_t v4 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v4)
  {
    uint64_t v17 = a1;
    uint64_t v18 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v4, memory_order_acquire) != -1)
    {
      v16[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v18;
      v16[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v17;
      uint64_t v19 = v16;
      std::__call_once(v4, &v19, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  uint64_t result = 4;
  switch(*(_DWORD *)(a1 + 56))
  {
    case 1:
    case 2:
    case 0xA:
    case 0xB:
    case 0xC:
    case 0xE:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wire_format.cc", 1537);
      unint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v16, "Unsupported");
      google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v6->__r_.__value_.__l.__data_);
      goto LABEL_6;
    case 3:
      uint64_t v8 = sub_100110D5C((uint64_t)a2);
      goto LABEL_11;
    case 4:
      uint64_t v8 = sub_100110F4C((uint64_t)a2);
LABEL_11:
      unint64_t v9 = v8 | 1;
      goto LABEL_21;
    case 5:
      int v10 = sub_100110E54(a2);
      if ((v10 & 0x80000000) == 0) {
        goto LABEL_19;
      }
      return 10;
    case 6:
    case 0x10:
      return 8;
    case 7:
    case 0xF:
      return result;
    case 8:
      return 1;
    case 9:
      uint64_t v11 = sub_100110C64((uint64_t)a2);
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      if ((v12 & 0x80u) != 0) {
        uint64_t v12 = *(void *)(v11 + 8);
      }
      return v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
    case 0xD:
      int v10 = sub_100111044(a2);
LABEL_19:
      unsigned int v13 = v10 | 1;
      goto LABEL_23;
    case 0x11:
      int v15 = sub_100110E54(a2);
      unsigned int v13 = (2 * v15) ^ (v15 >> 31) | 1;
LABEL_23:
      uint64_t result = (9 * (__clz(v13) ^ 0x1F) + 73) >> 6;
      break;
    case 0x12:
      uint64_t v14 = sub_100110D5C((uint64_t)a2);
      unint64_t v9 = (2 * v14) ^ (v14 >> 63) | 1;
LABEL_21:
      uint64_t result = (9 * (__clz(v9) ^ 0x3F) + 73) >> 6;
      break;
    default:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v16, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wire_format.cc", 1564);
      int v7 = google::protobuf::internal::LogMessage::operator<<(v16, "Cannot get here");
      google::protobuf::internal::LogFinisher::operator=((int)&v19, (const char **)&v7->__r_.__value_.__l.__data_);
LABEL_6:
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v16[0].__r_.__value_.__l.__data_);
      uint64_t result = 0;
      break;
  }
  return result;
}

void sub_10014DB28(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_10014DB90(uint64_t a1, unsigned int **a2)
{
  uint64_t v4 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v4)
  {
    uint64_t v19 = a1;
    uint64_t v20 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v4, memory_order_acquire) != -1)
    {
      v18[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v20;
      v18[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v19;
      uint64_t v21 = v18;
      std::__call_once(v4, &v21, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  uint64_t result = 4;
  switch(*(_DWORD *)(a1 + 56))
  {
    case 1:
    case 6:
    case 0x10:
      return 8;
    case 2:
    case 7:
    case 0xF:
      return result;
    case 3:
      uint64_t v9 = sub_10010F438((uint64_t)a2);
      goto LABEL_12;
    case 4:
      uint64_t v9 = sub_10010F830((uint64_t)a2);
LABEL_12:
      unint64_t v10 = v9 | 1;
      return (9 * (__clz(v10) ^ 0x3F) + 73) >> 6;
    case 5:
      int v14 = sub_10010F23C(a2);
      if ((v14 & 0x80000000) == 0) {
        goto LABEL_24;
      }
      return 10;
    case 8:
      return 1;
    case 9:
    case 0xC:
      uint64_t v6 = sub_100110034((uint64_t)a2);
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      if ((v7 & 0x80u) != 0) {
        uint64_t v7 = *(void *)(v6 + 8);
      }
      return v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
    case 0xA:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wire_format.cc", 1572);
      uint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v18, "Unsupported");
      google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v11->__r_.__value_.__l.__data_);
      goto LABEL_15;
    case 0xB:
      uint64_t v12 = sub_100110420((uint64_t)a2);
      uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v12 + 72))(v12);
      return v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
    case 0xD:
      int v14 = sub_10010F634(a2);
      goto LABEL_24;
    case 0xE:
      int v14 = sub_10011022C(a2);
      if (v14 < 0) {
        return 10;
      }
LABEL_24:
      unsigned int v16 = v14 | 1;
      return (9 * (__clz(v16) ^ 0x1F) + 73) >> 6;
    case 0x11:
      int v15 = sub_10010F23C(a2);
      unsigned int v16 = (2 * v15) ^ (v15 >> 31) | 1;
      return (9 * (__clz(v16) ^ 0x1F) + 73) >> 6;
    case 0x12:
      uint64_t v17 = sub_10010F438((uint64_t)a2);
      unint64_t v10 = (2 * v17) ^ (v17 >> 63) | 1;
      return (9 * (__clz(v10) ^ 0x3F) + 73) >> 6;
    default:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v18, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wire_format.cc", 1604);
      uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v18, "Cannot get here");
      google::protobuf::internal::LogFinisher::operator=((int)&v21, (const char **)&v8->__r_.__value_.__l.__data_);
LABEL_15:
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v18[0].__r_.__value_.__l.__data_);
      return 0;
  }
}

void sub_10014DDF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

char *google::protobuf::internal::ComputeUnknownFieldsSize(google::protobuf::UnknownFieldSet *a1, const google::protobuf::UnknownFieldSet *a2, _DWORD *a3)
{
  if (*(void *)a1) {
    uint64_t v5 = (google::protobuf::internal::WireFormat *)((*(void *)a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    uint64_t v5 = (google::protobuf::internal::WireFormat *)google::protobuf::UnknownFieldSet::default_instance(a1);
  }
  uint64_t result = (char *)a2 + google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(v5, a2);
  *a3 = result;
  return result;
}

google::protobuf::internal *sub_10014DEA8(int32x2_t *a1, uint64_t a2, google::protobuf::internal *a3, int a4)
{
  int v4 = a1[11].i32[0];
  BOOL v5 = __OFSUB__(v4--, 1);
  a1[11].i32[0] = v4;
  if (v4 < 0 != v5) {
    return 0;
  }
  ++a1[11].i32[1];
  uint64_t result = sub_10014DF24(a2, a3, a1);
  a1[11] = vadd_s32(a1[11], (int32x2_t)0xFFFFFFFF00000001);
  __int32 v9 = a1[10].i32[0];
  a1[10].i32[0] = 0;
  if (v9 != a4) {
    return 0;
  }
  return result;
}

google::protobuf::internal *sub_10014DF24(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v44 = a2;
  BOOL v5 = (unint64_t *)google::protobuf::Reflection::MutableInternalMetadata(*(void *)(a1 + 16), *(void *)a1);
  uint64_t v6 = 0;
  char v7 = 0;
  memset(&__p, 0, sizeof(__p));
LABEL_2:
  char v8 = v7;
  while (1)
  {
    char v9 = sub_1000355B8((uint64_t)a3, &v44, a3[11].i32[1]);
    unint64_t v10 = v44;
    if (v9)
    {
      TagFallback = v44;
      goto LABEL_63;
    }
    TagFallback = (google::protobuf::internal *)((char *)v44 + 1);
    uint64_t v44 = (google::protobuf::internal *)((char *)v44 + 1);
    LODWORD(v12) = *(unsigned __int8 *)v10;
    if (v12 == 26)
    {
      if (v6)
      {
        if (google::protobuf::Descriptor::FindExtensionRangeContainingNumber(*(google::protobuf::Descriptor **)(a1 + 8), v6))
        {
          uint64_t v13 = (std::mutex **)a3[12];
          if (v13) {
            uint64_t ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(v13, *(const google::protobuf::Descriptor **)(a1 + 8), v6);
          }
          else {
            uint64_t ExtensionByNumber = google::protobuf::Reflection::FindKnownExtensionByNumber(*(std::mutex ****)(a1 + 16), v6);
          }
          int v15 = (google::protobuf::FieldDescriptor *)ExtensionByNumber;
        }
        else
        {
          int v15 = 0;
        }
        unsigned int v16 = google::protobuf::internal::WireFormat::_InternalParseAndMergeField(*(google::protobuf::Message **)a1, v44, a3, (8 * v6) | 2, *(google::protobuf::Reflection **)(a1 + 16), v15);
        uint64_t v6 = 0;
        goto LABEL_23;
      }
      int v27 = *(unsigned __int8 *)TagFallback;
      if (*(char *)TagFallback < 0)
      {
        SizeFallback = google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)((char *)v10 + 1), (const char *)*(unsigned __int8 *)TagFallback);
        uint64_t v44 = (google::protobuf::internal *)SizeFallback;
        if (SizeFallback)
        {
          int v27 = v29;
          goto LABEL_40;
        }
      }
      else
      {
        SizeFallback = (char *)v10 + 2;
        uint64_t v44 = (google::protobuf::internal *)((char *)v10 + 2);
LABEL_40:
        uint64_t v6 = 0;
        uint64_t v44 = sub_100109C74((uint64_t)a3, SizeFallback, v27, &__p);
        char v7 = 1;
        if (v44) {
          goto LABEL_2;
        }
      }
LABEL_61:
      TagFallback = 0;
      goto LABEL_63;
    }
    if (v12 == 16)
    {
      int v18 = *(unsigned __int16 *)TagFallback;
      unsigned int v19 = v18 + (char)v18;
      unsigned int v20 = v19 & (2 * (char)v18);
      uint64_t v6 = v20 >> 1;
      if ((v20 & 0x8000) != 0)
      {
        TagFallback = (google::protobuf::internal *)((char *)v10 + 3);
        uint64_t v37 = 13;
        while (1)
        {
          int v38 = *(unsigned __int16 *)TagFallback;
          unsigned int v39 = v38 + (char)v38;
          v6 += ((v39 & (2 * (char)v38)) - 2) << v37;
          if (((unsigned __int16)v39 & (unsigned __int16)(2 * (char)v38) & 0x8000) == 0) {
            break;
          }
          v37 += 14;
          TagFallback = (google::protobuf::internal *)((char *)TagFallback + 2);
          if (v37 == 69)
          {
            TagFallback = 0;
            uint64_t v44 = 0;
            goto LABEL_63;
          }
        }
        BOOL v21 = v39 >= (char)v38;
      }
      else
      {
        BOOL v21 = v19 >= (char)v18;
      }
      int v22 = !v21;
      char v7 = 0;
      if (v22) {
        uint64_t v23 = 2;
      }
      else {
        uint64_t v23 = 1;
      }
      uint64_t v44 = (google::protobuf::internal *)((char *)TagFallback + v23);
      if (v8)
      {
        uint64_t v24 = (std::mutex **)a3[12];
        if (v24) {
          Knownuint64_t ExtensionByNumber = (google::protobuf::FieldDescriptor *)google::protobuf::DescriptorPool::FindExtensionByNumber(v24, *(const google::protobuf::Descriptor **)(a1 + 8), v6);
        }
        else {
          Knownuint64_t ExtensionByNumber = (google::protobuf::FieldDescriptor *)google::protobuf::Reflection::FindKnownExtensionByNumber(*(std::mutex ****)(a1 + 16), v6);
        }
        uint64_t v30 = KnownExtensionByNumber;
        if (!KnownExtensionByNumber || !google::protobuf::FieldDescriptor::message_type(KnownExtensionByNumber))
        {
          sub_1000BB974(&v42, (uint64_t *)&__p, v26);
          if (*v5) {
            uint64_t v35 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else {
            uint64_t v35 = sub_10003562C(v5);
          }
          google::protobuf::UnknownFieldSet::AddLengthDelimited((google::protobuf::UnknownFieldSet *)v35);
        }
        uint64_t v31 = *(google::protobuf::Reflection **)(a1 + 16);
        uint64_t v32 = *(google::protobuf::Message **)a1;
        int v33 = (google::protobuf::MessageFactory *)a3[13];
        uint64_t v34 = *((_DWORD *)v30 + 15) == 3
            ? (uint64_t *)google::protobuf::Reflection::AddMessage(v31, v32, v30, v33)
            : google::protobuf::Reflection::MutableMessage(v31, v32, v30, v33);
        int v36 = v34;
        unsigned int v41 = 0;
        sub_100109D7C((uint64_t)v45, a3[11].i32[0], 0, &v41, (uint64_t *)&__p);
        long long v47 = *(_OWORD *)a3[12].i8;
        if (!(*(uint64_t (**)(uint64_t *, char *, unsigned char *))(*v36 + 88))(v36, v41, v45)) {
          goto LABEL_61;
        }
        uint64_t v6 = 0;
        char v7 = 1;
        if (v46) {
          goto LABEL_61;
        }
      }
      goto LABEL_2;
    }
    if ((v12 & 0x80) != 0)
    {
      uint64_t v12 = (const char *)(v12 + (*(unsigned __int8 *)TagFallback << 7) - 128);
      if (*(char *)TagFallback < 0) {
        TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v10, v12);
      }
      else {
        TagFallback = (google::protobuf::internal *)((char *)v10 + 2);
      }
    }
    uint64_t v44 = TagFallback;
    if (!v12 || (v12 & 7) == 4) {
      break;
    }
    unsigned int v16 = google::protobuf::internal::UnknownFieldParse(v12, 0, TagFallback, (google::protobuf::internal::EpsCopyInputStream *)a3);
LABEL_23:
    uint64_t v44 = (google::protobuf::internal *)v16;
    if (!v16) {
      goto LABEL_61;
    }
  }
  a3[10].i32[0] = v12 - 1;
LABEL_63:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return TagFallback;
}

void sub_10014E2FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10014E330(uint64_t *a1, const std::string *a2)
{
  unint64_t v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(void *)(v4 - 8);
  if (v7 >= v6)
  {
    uint64_t v9 = (uint64_t)(v7 - *a1) >> 5;
    if ((unint64_t)(v9 + 1) >> 59) {
      sub_100078F84();
    }
    uint64_t v10 = v5 - *a1;
    uint64_t v11 = v10 >> 4;
    if (v10 >> 4 <= (unint64_t)(v9 + 1)) {
      uint64_t v11 = v9 + 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v12 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v11;
    }
    uint64_t v19 = v4;
    uint64_t v13 = (char *)sub_1000DAB10(v4, v12);
    int v15 = v13;
    unsigned int v16 = &v13[32 * v9];
    uint64_t v17 = v16;
    int v18 = &v13[32 * v14];
    *((_DWORD *)v16 + 6) = 0;
    sub_10010ECBC((uint64_t)&v13[32 * v9], a2);
    v17 += 32;
    sub_10014E440(a1, &v15);
    unint64_t v8 = a1[1];
    sub_10014E604((uint64_t)&v15);
  }
  else
  {
    *(_DWORD *)(v7 + 24) = 0;
    sub_10010ECBC(v7, a2);
    unint64_t v8 = v7 + 32;
    a1[1] = v7 + 32;
  }
  a1[1] = v8;
}

void sub_10014E420(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10)
{
  *(void *)(v10 + 8) = v11;
  _Unwind_Resume(exception_object);
}

uint64_t sub_10014E440(uint64_t *a1, void *a2)
{
  uint64_t result = sub_10014E4B8((uint64_t)(a1 + 2), a1[1], (const std::string *)a1[1], *a1, (const std::string *)*a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_10014E4B8(uint64_t a1, uint64_t a2, const std::string *a3, uint64_t a4, const std::string *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  char v13 = 0;
  if (a3 == a5)
  {
    uint64_t v10 = a6;
  }
  else
  {
    uint64_t v9 = a3;
    do
    {
      uint64_t v9 = (const std::string *)((char *)v9 - 32);
      *(_DWORD *)(v7 - 8) = 0;
      sub_10010ECBC(v7 - 32, v9);
      uint64_t v7 = *((void *)&v15 + 1) - 32;
      *((void *)&v15 + 1) -= 32;
    }
    while (v9 != a5);
    uint64_t v10 = v15;
  }
  char v13 = 1;
  sub_10014E578((uint64_t)v12);
  return v10;
}

void sub_10014E564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_10014E578(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_10014E5B0(a1);
  }
  return a1;
}

void sub_10014E5B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(_DWORD *)(v1 + 24) == 9 && *(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 32;
  }
}

uint64_t sub_10014E604(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_10014E63C(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 4;
      *(void *)(a1 + 16) = v2 - 4;
      if (*((_DWORD *)v2 - 2) == 9 && *((char *)v2 - 9) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

void sub_10014E6A0(const std::string *a1, const std::string *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = (std::string *)a2;
  uint64_t v10 = (std::string *)a1;
  uint64_t v24 = (std::string *)a2;
  uint64_t v25 = (std::string *)a1;
LABEL_2:
  for (uint64_t i = 1 - a4; ; ++i)
  {
    uint64_t v12 = (char *)v9 - (char *)v10;
    unint64_t v13 = ((char *)v9 - (char *)v10) >> 5;
    if (!(!v6 & v5))
    {
      switch(v13)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          uint64_t v24 = (std::string *)((char *)v9 - 32);
          if (sub_10014E984(a3, (unsigned int *)&v9[-2].__r_.__value_.__r.__words[2], (unsigned int *)v10))sub_10014EB64((const std::string **)&v25, (const std::string **)&v24); {
          break;
          }
        case 3uLL:
          uint64_t v24 = (std::string *)((char *)v9 - 32);
          sub_10014EEB8(v10, (std::string *)((char *)v10 + 32), (std::string *)((char *)v9 - 32), a3);
          break;
        case 4uLL:
          uint64_t v24 = (std::string *)((char *)v9 - 32);
          sub_10014F690(v10, (std::string *)((char *)v10 + 32), (std::string *)((char *)v10 + 64), (std::string *)((char *)v9 - 32), a3);
          break;
        case 5uLL:
          uint64_t v24 = (std::string *)((char *)v9 - 32);
          sub_10014F748(v10, (std::string *)((char *)v10 + 32), (std::string *)((char *)v10 + 64), v10 + 4, (std::string *)((char *)v9 - 32), a3);
          break;
        default:
          JUMPOUT(0);
      }
      return;
    }
    if (v12 <= 767)
    {
      if (a5) {
        sub_10014EC30((uint64_t)v10, v9, a3);
      }
      else {
        sub_10014ED88((uint64_t)v10, v9, a3);
      }
      return;
    }
    if (i == 1) {
      break;
    }
    unint64_t v14 = v13 >> 1;
    long long v15 = (std::string *)((char *)v9 - 32);
    if ((unint64_t)v12 > 0x1000)
    {
      sub_10014EEB8(v10, (std::string *)((char *)v10 + 32 * (v13 >> 1)), v15, a3);
      unsigned int v16 = v24;
      uint64_t v17 = 32 * v14 - 32;
      sub_10014EEB8((std::string *)((char *)v25 + 32), (std::string *)((char *)v25 + v17), (std::string *)((char *)v24 - 64), a3);
      uint64_t v18 = 32 * v14 + 32;
      sub_10014EEB8((std::string *)((char *)v25 + 64), (std::string *)((char *)v25 + v18), (std::string *)&v16[-4], a3);
      sub_10014EEB8((std::string *)((char *)v25 + v17), (std::string *)((char *)v25 + 32 * v14), (std::string *)((char *)v25 + v18), a3);
      uint64_t v23 = (std::string *)((char *)v25 + 32 * v14);
      sub_10014EF90((const std::string **)&v25, &v23);
      if (a5) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_10014EEB8((std::string *)((char *)v10 + 32 * (v13 >> 1)), v10, v15, a3);
      if (a5)
      {
LABEL_13:
        uint64_t v9 = v24;
        goto LABEL_14;
      }
    }
    char v19 = sub_10014E984(a3, (unsigned int *)&v25[-2].__r_.__value_.__r.__words[2], (unsigned int *)v25);
    uint64_t v9 = v24;
    if ((v19 & 1) == 0)
    {
      uint64_t v10 = sub_10014F05C(v25, v24, a3);
LABEL_22:
      a5 = 0;
      uint64_t v25 = v10;
      a4 = -i;
      goto LABEL_2;
    }
LABEL_14:
    uint64_t v20 = sub_10014F254(v25, v9, a3);
    if ((v21 & 1) == 0) {
      goto LABEL_21;
    }
    BOOL v22 = sub_10014F43C((uint64_t)v25, (const std::string *)v20, a3);
    uint64_t v10 = (std::string *)(v20 + 32);
    if (sub_10014F43C(v20 + 32, v9, a3))
    {
      if (v22) {
        return;
      }
      uint64_t v24 = (std::string *)v20;
      uint64_t v10 = v25;
      uint64_t v9 = (std::string *)v20;
    }
    else
    {
      if (!v22)
      {
LABEL_21:
        sub_10014E6A0(v25, v20, a3, -i, a5 & 1);
        uint64_t v10 = (std::string *)(v20 + 32);
        goto LABEL_22;
      }
      uint64_t v25 = (std::string *)(v20 + 32);
    }
  }
  if (v10 != v9) {
    sub_10014F828(v10, v9, (unsigned int *)v9, a3);
  }
}

uint64_t sub_10014E984(uint64_t a1, unsigned int *a2, unsigned int *a3)
{
  switch(sub_100111CBC((uint64_t)a2))
  {
    case 1u:
      int v5 = sub_100110E54(a2);
      return v5 < (int)sub_100110E54(a3);
    case 2u:
      uint64_t v21 = sub_100110D5C((uint64_t)a2);
      return v21 < sub_100110D5C((uint64_t)a3);
    case 3u:
      unsigned int v7 = sub_100111044(a2);
      BOOL v8 = v7 >= sub_100111044(a3);
      goto LABEL_28;
    case 4u:
      unint64_t v22 = sub_100110F4C((uint64_t)a2);
      BOOL v8 = v22 >= sub_100110F4C((uint64_t)a3);
LABEL_28:
      uint64_t result = !v8;
      break;
    case 7u:
      int v23 = sub_10011113C((unsigned __int8 *)a2);
      uint64_t result = sub_10011113C((unsigned __int8 *)a3) & (v23 ^ 1);
      break;
    case 9u:
      uint64_t v11 = sub_100110C64((uint64_t)a2);
      uint64_t v12 = sub_100110C64((uint64_t)a3);
      int v13 = *(char *)(v12 + 23);
      int v14 = *(char *)(v11 + 23);
      if (v14 >= 0) {
        size_t v15 = *(unsigned __int8 *)(v11 + 23);
      }
      else {
        size_t v15 = *(void *)(v11 + 8);
      }
      if (v14 >= 0) {
        unsigned int v16 = (const void *)v11;
      }
      else {
        unsigned int v16 = *(const void **)v11;
      }
      if (v13 >= 0) {
        size_t v17 = *(unsigned __int8 *)(v12 + 23);
      }
      else {
        size_t v17 = *(void *)(v12 + 8);
      }
      if (v13 >= 0) {
        uint64_t v18 = (const void *)v12;
      }
      else {
        uint64_t v18 = *(const void **)v12;
      }
      if (v17 >= v15) {
        size_t v19 = v15;
      }
      else {
        size_t v19 = v17;
      }
      int v20 = memcmp(v16, v18, v19);
      if (v20) {
        uint64_t result = v20 < 0;
      }
      else {
        uint64_t result = v15 < v17;
      }
      break;
    default:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v25, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wire_format.cc", 1178);
      uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v25, "Invalid key for map field.");
      google::protobuf::internal::LogFinisher::operator=((int)&v24, (const char **)&v9->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v25[0].__r_.__value_.__l.__data_);
      uint64_t result = 1;
      break;
  }
  return result;
}

void sub_10014EB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_10014EB64(const std::string **a1, const std::string **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v5 = 0;
  sub_10010ECBC((uint64_t)&__p, v2);
  sub_10010ECBC((uint64_t)v2, v3);
  sub_10010ECBC((uint64_t)v3, &__p);
  if (v5 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_10014EC00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, int a16)
{
}

void sub_10014EC30(uint64_t a1, const std::string *a2, uint64_t a3)
{
  if ((const std::string *)a1 != a2)
  {
    int v5 = (unsigned int *)(a1 + 32);
    if ((const std::string *)(a1 + 32) != a2)
    {
      uint64_t v7 = 0;
      BOOL v8 = (const std::string *)a1;
      do
      {
        uint64_t v9 = (unsigned int *)v8;
        BOOL v8 = (const std::string *)v5;
        if (sub_10014E984(a3, v5, v9))
        {
          int v14 = 0;
          sub_10010ECBC((uint64_t)&__p, v8);
          uint64_t v10 = v7;
          while (1)
          {
            sub_10010ECBC(a1 + v10 + 32, (const std::string *)(a1 + v10));
            if (!v10) {
              break;
            }
            char v11 = sub_10014E984(a3, (unsigned int *)&__p, (unsigned int *)(a1 + v10 - 32));
            v10 -= 32;
            if ((v11 & 1) == 0)
            {
              uint64_t v12 = a1 + v10 + 32;
              goto LABEL_10;
            }
          }
          uint64_t v12 = a1;
LABEL_10:
          sub_10010ECBC(v12, &__p);
          if (v14 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        int v5 = (unsigned int *)&v8[1].__r_.__value_.__r.__words[1];
        v7 += 32;
      }
      while (&v8[1].__r_.__value_.__r.__words[1] != (std::string::size_type *)a2);
    }
  }
}

void sub_10014ED54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, int a16)
{
  if (a16 == 9 && a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10014ED88(uint64_t a1, const std::string *a2, uint64_t a3)
{
  if ((const std::string *)a1 != a2)
  {
    uint64_t v4 = (std::string *)a1;
    int v5 = (unsigned int *)(a1 + 32);
    if ((const std::string *)(a1 + 32) != a2)
    {
      do
      {
        uint64_t v7 = (const std::string *)v5;
        if (sub_10014E984(a3, v5, (unsigned int *)v4))
        {
          int v9 = 0;
          sub_10010ECBC((uint64_t)&__p, v7);
          do
          {
            sub_10010ECBC((uint64_t)&v4[1].__r_.__value_.__l.__size_, v4);
            uint64_t v4 = (std::string *)((char *)v4 - 32);
          }
          while ((sub_10014E984(a3, (unsigned int *)&__p, (unsigned int *)v4) & 1) != 0);
          sub_10010ECBC((uint64_t)&v4[1].__r_.__value_.__l.__size_, &__p);
          if (v9 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        int v5 = (unsigned int *)&v7[1].__r_.__value_.__r.__words[1];
        uint64_t v4 = (std::string *)v7;
      }
      while (&v7[1].__r_.__value_.__r.__words[1] != (std::string::size_type *)a2);
    }
  }
}

void sub_10014EE84(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, int a16)
{
  if (a16 == 9 && a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10014EEB8(std::string *a1, std::string *a2, std::string *a3, uint64_t a4)
{
  uint64_t v12 = a2;
  int v13 = a1;
  char v11 = a3;
  char v7 = sub_10014E984(a4, (unsigned int *)a2, (unsigned int *)a1);
  uint64_t result = sub_10014E984(a4, (unsigned int *)a3, (unsigned int *)a2);
  if ((v7 & 1) == 0)
  {
    if (!result) {
      return result;
    }
    sub_10014EB64((const std::string **)&v12, (const std::string **)&v11);
    if (!sub_10014E984(a4, (unsigned int *)v12, (unsigned int *)v13)) {
      return 1;
    }
    int v9 = &v13;
    uint64_t v10 = &v12;
    goto LABEL_9;
  }
  if (!result)
  {
    sub_10014EB64((const std::string **)&v13, (const std::string **)&v12);
    if (!sub_10014E984(a4, (unsigned int *)v11, (unsigned int *)v12)) {
      return 1;
    }
    int v9 = &v12;
    uint64_t v10 = &v11;
LABEL_9:
    sub_10014EB64((const std::string **)v9, (const std::string **)v10);
    return 2;
  }
  sub_10014EB64((const std::string **)&v13, (const std::string **)&v11);
  return 1;
}

void sub_10014EF90(const std::string **a1, const std::string **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  int v5 = 0;
  sub_10010ECBC((uint64_t)&__p, v2);
  sub_10010ECBC((uint64_t)v2, v3);
  sub_10010ECBC((uint64_t)v3, &__p);
  if (v5 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_10014F02C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, int a16)
{
}

std::string *sub_10014F05C(const std::string *a1, const std::string *a2, uint64_t a3)
{
  uint64_t v12 = (std::string *)a2;
  int v13 = (std::string *)a1;
  int v15 = 0;
  sub_10010ECBC((uint64_t)&__p, a1);
  if (sub_10014E984(a3, (unsigned int *)&__p, (unsigned int *)&a2[-2].__r_.__value_.__r.__words[2]))
  {
    char v6 = (std::string *)a1;
    do
    {
      char v6 = (std::string *)((char *)v6 + 32);
      int v13 = v6;
    }
    while ((sub_10014E984(a3, (unsigned int *)&__p, (unsigned int *)v6) & 1) == 0);
  }
  else
  {
    char v7 = (std::string *)&a1[1].__r_.__value_.__r.__words[1];
    do
    {
      char v6 = v7;
      int v13 = v7;
      if (v7 >= v12) {
        break;
      }
      int v8 = sub_10014E984(a3, (unsigned int *)&__p, (unsigned int *)v7);
      char v7 = (std::string *)((char *)v6 + 32);
    }
    while (!v8);
  }
  int v9 = v12;
  if (v6 < v12)
  {
    do
    {
      int v9 = (std::string *)((char *)v9 - 32);
      uint64_t v12 = v9;
    }
    while ((sub_10014E984(a3, (unsigned int *)&__p, (unsigned int *)v9) & 1) != 0);
    char v6 = v13;
  }
  if (v6 < v9)
  {
    do
    {
      sub_10014EB64((const std::string **)&v13, (const std::string **)&v12);
      do
        int v13 = (std::string *)((char *)v13 + 32);
      while (!sub_10014E984(a3, (unsigned int *)&__p, (unsigned int *)v13));
      do
        uint64_t v12 = (std::string *)((char *)v12 - 32);
      while ((sub_10014E984(a3, (unsigned int *)&__p, (unsigned int *)v12) & 1) != 0);
      char v6 = v13;
    }
    while (v13 < v12);
  }
  if (&v6[-2].__r_.__value_.__r.__words[2] != (std::string::size_type *)a1) {
    sub_10010ECBC((uint64_t)a1, (std::string *)((char *)v6 - 32));
  }
  sub_10010ECBC((uint64_t)&v6[-2].__r_.__value_.__r.__words[2], &__p);
  uint64_t v10 = v13;
  if (v15 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v10;
}

void sub_10014F208(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, int a18)
{
  if (a18 == 9 && a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_10014F254(const std::string *a1, const std::string *a2, uint64_t a3)
{
  int v13 = (std::string *)a2;
  int v16 = 0;
  sub_10010ECBC((uint64_t)&__p, a1);
  uint64_t v5 = 0;
  do
  {
    int v14 = (std::string *)&a1[1].__r_.__value_.__r.__words[v5 + 1];
    v5 += 4;
  }
  while ((sub_10014E984(a3, (unsigned int *)v14, (unsigned int *)&__p) & 1) != 0);
  char v6 = v13;
  if (v5 == 4)
  {
    int v9 = (std::string *)&a1[1].__r_.__value_.__r.__words[1];
    do
    {
      if (v9 >= v6) {
        break;
      }
      char v6 = (std::string *)((char *)v6 - 32);
      int v13 = v6;
    }
    while ((sub_10014E984(a3, (unsigned int *)v6, (unsigned int *)&__p) & 1) == 0);
  }
  else
  {
    char v7 = (std::string *)((char *)v13 - 32);
    do
    {
      int v13 = v7;
      int v8 = sub_10014E984(a3, (unsigned int *)v7, (unsigned int *)&__p);
      char v7 = (std::string *)((char *)v7 - 32);
    }
    while (!v8);
    int v9 = v14;
  }
  uint64_t v10 = v9;
  if (v9 < v13)
  {
    do
    {
      sub_10014EB64((const std::string **)&v14, (const std::string **)&v13);
      do
        int v14 = (std::string *)((char *)v14 + 32);
      while ((sub_10014E984(a3, (unsigned int *)v14, (unsigned int *)&__p) & 1) != 0);
      do
        int v13 = (std::string *)((char *)v13 - 32);
      while (!sub_10014E984(a3, (unsigned int *)v13, (unsigned int *)&__p));
      uint64_t v10 = v14;
    }
    while (v14 < v13);
  }
  uint64_t v11 = (uint64_t)&v10[-2].__r_.__value_.__r.__words[2];
  if (&v10[-2].__r_.__value_.__r.__words[2] != (std::string::size_type *)a1) {
    sub_10010ECBC((uint64_t)a1, (std::string *)((char *)v10 - 32));
  }
  sub_10010ECBC(v11, &__p);
  if (v16 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v11;
}

void sub_10014F3F4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, int a18)
{
}

BOOL sub_10014F43C(uint64_t a1, const std::string *a2, uint64_t a3)
{
  int v13 = a2;
  int v14 = (const std::string *)a1;
  uint64_t v6 = ((uint64_t)a2 - a1) >> 5;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      int v13 = (const std::string *)((char *)a2 - 32);
      if (sub_10014E984(a3, (unsigned int *)&a2[-2].__r_.__value_.__r.__words[2], (unsigned int *)a1)) {
        sub_10014EB64(&v14, &v13);
      }
      return 1;
    case 3:
      sub_10014EEB8((std::string *)a1, (std::string *)(a1 + 32), (std::string *)&a2[-2].__r_.__value_.__r.__words[2], a3);
      return 1;
    case 4:
      sub_10014F690((std::string *)a1, (std::string *)(a1 + 32), (std::string *)(a1 + 64), (std::string *)&a2[-2].__r_.__value_.__r.__words[2], a3);
      return 1;
    case 5:
      sub_10014F748((std::string *)a1, (std::string *)(a1 + 32), (std::string *)(a1 + 64), (std::string *)(a1 + 96), (std::string *)&a2[-2].__r_.__value_.__r.__words[2], a3);
      return 1;
    default:
      int v8 = (std::string *)(a1 + 64);
      sub_10014EEB8((std::string *)a1, (std::string *)(a1 + 32), (std::string *)(a1 + 64), a3);
      int v9 = (std::string *)(a1 + 96);
      if (v9 == a2) {
        return 1;
      }
      int v10 = 0;
      break;
  }
  do
  {
    if (sub_10014E984(a3, (unsigned int *)v9, (unsigned int *)v8))
    {
      int v16 = 0;
      sub_10010ECBC((uint64_t)&__p, v9);
      do
      {
        uint64_t v11 = (uint64_t)v8;
        sub_10010ECBC((uint64_t)&v8[1].__r_.__value_.__l.__size_, v8);
        if (v8 == v14) {
          break;
        }
        int v8 = (std::string *)((char *)v8 - 32);
      }
      while ((sub_10014E984(a3, (unsigned int *)&__p, (unsigned int *)(v11 - 32)) & 1) != 0);
      sub_10010ECBC(v11, &__p);
      uint64_t v12 = v13;
      if (v16 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      if (++v10 == 8) {
        return &v9[1].__r_.__value_.__r.__words[1] == (std::string::size_type *)v13;
      }
    }
    else
    {
      uint64_t v12 = v13;
    }
    int v8 = v9;
    int v9 = (std::string *)((char *)v9 + 32);
  }
  while (v9 != v12);
  return 1;
}

void sub_10014F644(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, int a18)
{
  if (a18 == 9 && a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10014F690(std::string *a1, std::string *a2, std::string *a3, std::string *a4, uint64_t a5)
{
  uint64_t v12 = a2;
  int v13 = a1;
  int v10 = a4;
  uint64_t v11 = a3;
  sub_10014EEB8(a1, a2, a3, a5);
  if (sub_10014E984(a5, (unsigned int *)a4, (unsigned int *)a3))
  {
    sub_10014EB64((const std::string **)&v11, &v10);
    if (sub_10014E984(a5, (unsigned int *)v11, (unsigned int *)a2))
    {
      sub_10014EB64((const std::string **)&v12, (const std::string **)&v11);
      if (sub_10014E984(a5, (unsigned int *)v12, (unsigned int *)a1)) {
        sub_10014EB64(&v13, (const std::string **)&v12);
      }
    }
  }
}

void sub_10014F748(std::string *a1, std::string *a2, std::string *a3, std::string *a4, std::string *a5, uint64_t a6)
{
  int v15 = a2;
  int v16 = a1;
  int v13 = a4;
  int v14 = a3;
  uint64_t v12 = a5;
  sub_10014F690(a1, a2, a3, a4, a6);
  if (sub_10014E984(a6, (unsigned int *)a5, (unsigned int *)a4))
  {
    sub_10014EB64((const std::string **)&v13, &v12);
    if (sub_10014E984(a6, (unsigned int *)v13, (unsigned int *)a3))
    {
      sub_10014EB64((const std::string **)&v14, (const std::string **)&v13);
      if (sub_10014E984(a6, (unsigned int *)v14, (unsigned int *)a2))
      {
        sub_10014EB64((const std::string **)&v15, (const std::string **)&v14);
        if (sub_10014E984(a6, (unsigned int *)v15, (unsigned int *)a1)) {
          sub_10014EB64(&v16, (const std::string **)&v15);
        }
      }
    }
  }
}

const std::string *sub_10014F828(const std::string *a1, const std::string *a2, unsigned int *a3, uint64_t a4)
{
  uint64_t v18 = (std::string *)a1;
  if (a1 != a2)
  {
    uint64_t v6 = a2;
    char v7 = a1;
    uint64_t v8 = (char *)a2 - (char *)a1;
    uint64_t v9 = ((char *)a2 - (char *)a1) >> 5;
    if ((char *)a2 - (char *)a1 >= 33)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      uint64_t v12 = (std::string *)((char *)a1 + 32 * v10);
      do
      {
        sub_10014F960((uint64_t)v7, a4, v9, v12);
        uint64_t v12 = (std::string *)((char *)v12 - 32);
        --v11;
      }
      while (v11);
    }
    size_t v17 = v6;
    if (v6 == (const std::string *)a3)
    {
      a3 = (unsigned int *)v6;
    }
    else
    {
      int v13 = (unsigned int *)v6;
      do
      {
        if (sub_10014E984(a4, v13, (unsigned int *)v18))
        {
          sub_10014EB64(&v17, (const std::string **)&v18);
          sub_10014F960((uint64_t)v18, a4, v9, v18);
        }
        int v13 = (unsigned int *)&v17[1].__r_.__value_.__r.__words[1];
        size_t v17 = (const std::string *)v13;
      }
      while (v13 != a3);
      char v7 = v18;
      uint64_t v8 = (char *)v6 - (char *)v18;
    }
    if (v8 >= 33)
    {
      unint64_t v14 = (unint64_t)v8 >> 5;
      do
      {
        sub_10014FB24(v7, (uint64_t)v6, a4, v14);
        uint64_t v6 = (const std::string *)((char *)v6 - 32);
      }
      while (v14-- > 2);
      return v17;
    }
  }
  return (const std::string *)a3;
}

void sub_10014F960(uint64_t a1, uint64_t a2, uint64_t a3, std::string *a4)
{
  unint64_t v4 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v5 = a4;
    uint64_t v7 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= ((uint64_t)a4 - a1) >> 5)
    {
      uint64_t v10 = ((uint64_t)a4 - a1) >> 4;
      uint64_t v11 = v10 + 1;
      uint64_t v12 = a1 + 32 * (v10 + 1);
      uint64_t v13 = v10 + 2;
      if (v10 + 2 < a3
        && sub_10014E984(a2, (unsigned int *)(a1 + 32 * (v10 + 1)), (unsigned int *)(v12 + 32)))
      {
        v12 += 32;
        uint64_t v11 = v13;
      }
      if ((sub_10014E984(a2, (unsigned int *)v12, (unsigned int *)v5) & 1) == 0)
      {
        int v17 = 0;
        sub_10010ECBC((uint64_t)&__p, v5);
        do
        {
          uint64_t v14 = v12;
          sub_10010ECBC((uint64_t)v5, (const std::string *)v12);
          if (v7 < v11) {
            break;
          }
          uint64_t v15 = (2 * v11) | 1;
          uint64_t v12 = a1 + 32 * v15;
          uint64_t v11 = 2 * v11 + 2;
          if (v11 >= a3)
          {
            uint64_t v11 = v15;
          }
          else if (sub_10014E984(a2, (unsigned int *)(a1 + 32 * v15), (unsigned int *)(v12 + 32)))
          {
            v12 += 32;
          }
          else
          {
            uint64_t v11 = v15;
          }
          uint64_t v5 = (std::string *)v14;
        }
        while (!sub_10014E984(a2, (unsigned int *)v12, (unsigned int *)&__p));
        sub_10010ECBC(v14, &__p);
        if (v17 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
    }
  }
}

void sub_10014FAF0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, int a16)
{
  if (a16 == 9 && a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_10014FB24(const std::string *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 >= 2)
  {
    int v12 = 0;
    sub_10010ECBC((uint64_t)&__p, a1);
    uint64_t v8 = sub_10014FC50((uint64_t)a1, a3, a4);
    uint64_t v9 = v8;
    uint64_t v10 = (const std::string *)(a2 - 32);
    if (v8 == v10)
    {
      sub_10010ECBC((uint64_t)v8, &__p);
    }
    else
    {
      sub_10010ECBC((uint64_t)v8, v10);
      sub_10010ECBC((uint64_t)v10, &__p);
      sub_10014FD04((uint64_t)a1, (uint64_t)&v9[1].__r_.__value_.__l.__size_, a3, ((char *)&v9[1].__r_.__value_.__r.__words[1] - (char *)a1) >> 5);
    }
    if (v12 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_10014FC20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, int a16)
{
}

const std::string *sub_10014FC50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = (const std::string *)(a1 + 32 * v6 + 32);
    uint64_t v10 = (2 * v6) | 1;
    uint64_t v11 = 2 * v6 + 2;
    if (v11 < a3
      && sub_10014E984(a2, (unsigned int *)(a1 + 32 * v6 + 32), (unsigned int *)(a1 + 32 * v6 + 64)))
    {
      uint64_t v9 = (const std::string *)((char *)v9 + 32);
      uint64_t v10 = v11;
    }
    sub_10010ECBC(a1, v9);
    a1 = (uint64_t)v9;
    uint64_t v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

void sub_10014FD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4 - 2;
  if (a4 >= 2)
  {
    unint64_t v7 = v4 >> 1;
    uint64_t v8 = (std::string *)(a1 + 32 * (v4 >> 1));
    uint64_t v9 = (const std::string *)(a2 - 32);
    if (sub_10014E984(a3, (unsigned int *)v8, (unsigned int *)(a2 - 32)))
    {
      int v12 = 0;
      sub_10010ECBC((uint64_t)&__p, v9);
      do
      {
        uint64_t v10 = (uint64_t)v8;
        sub_10010ECBC((uint64_t)v9, v8);
        if (!v7) {
          break;
        }
        unint64_t v7 = (v7 - 1) >> 1;
        uint64_t v8 = (std::string *)(a1 + 32 * v7);
        uint64_t v9 = (const std::string *)v10;
      }
      while ((sub_10014E984(a3, (unsigned int *)v8, (unsigned int *)&__p) & 1) != 0);
      sub_10010ECBC(v10, &__p);
      if (v12 == 9 && SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
  }
}

void sub_10014FE04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, int a16)
{
  if (a16 == 9 && a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t **sub_10014FE38(uint64_t **a1, uint64_t a2, google::protobuf::FieldDescriptor *a3)
{
  (*(void (**)(uint64_t))(*(void *)a2 + 152))(a2);
  unint64_t v7 = (google::protobuf::Reflection *)v6;
  *a1 = google::protobuf::Reflection::RepeatedFieldData(v6, a2, a3, 10, 0);
  a1[1] = google::protobuf::Reflection::RepeatedFieldAccessor(v7, a3);
  uint64_t MessageFactory = google::protobuf::Reflection::GetMessageFactory(v7);
  uint64_t v9 = google::protobuf::FieldDescriptor::message_type(a3);
  a1[2] = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t))(*(void *)MessageFactory + 16))(MessageFactory, v9);
  return a1;
}

uint64_t sub_10014FF08(uint64_t a1)
{
  (*(void (**)(void, void, void))(**(void **)(a1 + 8) + 112))(*(void *)(a1 + 8), *(void *)a1, *(void *)(a1 + 16));
  uint64_t v2 = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = 0;
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

void sub_10014FF90(const google::protobuf::Message **a1, const google::protobuf::Message **a2, const google::protobuf::FieldDescriptor **a3, unint64_t a4, const google::protobuf::Message **a5, uint64_t a6)
{
  if (a4 >= 2)
  {
    if (a4 == 2)
    {
      if (sub_10015014C(a3, *(a2 - 1), *a1))
      {
        uint64_t v9 = *a1;
        *a1 = *(a2 - 1);
        *(a2 - 1) = v9;
      }
    }
    else if ((uint64_t)a4 > 128)
    {
      unint64_t v13 = a4 >> 1;
      uint64_t v14 = &a1[a4 >> 1];
      unint64_t v15 = a4 >> 1;
      if ((uint64_t)a4 <= a6)
      {
        sub_100150534(a1, v14, a3, v15, (uint64_t)a5);
        sub_100150534(&a1[a4 >> 1], a2, a3, a4 - (a4 >> 1), (uint64_t)&a5[v13]);
        sub_100150690(a5, &a5[v13], &a5[v13], &a5[a4], a1, a3);
      }
      else
      {
        sub_10014FF90(a1, v14, a3, v15, a5, a6);
        sub_10014FF90(&a1[a4 >> 1], a2, a3, a4 - (a4 >> 1), a5, a6);
        sub_100150754(a1, &a1[a4 >> 1], a2, a3, a4 >> 1, a4 - (a4 >> 1), a5, a6);
      }
    }
    else
    {
      sub_100150468(a1, a2, a3);
    }
  }
}

BOOL sub_10015014C(const google::protobuf::FieldDescriptor **a1, const google::protobuf::Message *a2, const google::protobuf::Message *a3)
{
  (*(void (**)(const google::protobuf::Message *))(*(void *)a2 + 152))(a2);
  unint64_t v7 = v6;
  uint64_t v8 = *a1;
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)*a1 + 6);
  if (v9)
  {
    uint64_t v32 = *a1;
    int v33 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      __p[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v33;
      __p[0].__r_.__value_.__l.__size_ = (std::string::size_type)&v32;
      v30[0] = __p;
      std::__call_once(v9, v30, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  switch(*((_DWORD *)v8 + 14))
  {
    case 3:
      uint64_t Int64 = google::protobuf::Reflection::GetInt64(v7, a2, *a1);
      return Int64 < google::protobuf::Reflection::GetInt64(v7, a3, *a1);
    case 4:
    case 6:
      Uuint64_t Int64 = google::protobuf::Reflection::GetUInt64(v7, a2, *a1);
      BOOL v13 = UInt64 >= google::protobuf::Reflection::GetUInt64(v7, a3, *a1);
      goto LABEL_12;
    case 5:
      int Int32 = google::protobuf::Reflection::GetInt32(v7, a2, *a1);
      return Int32 < (int)google::protobuf::Reflection::GetInt32(v7, a3, *a1);
    case 7:
      Uint Int32 = google::protobuf::Reflection::GetUInt32(v7, a2, *a1);
      BOOL v13 = UInt32 >= google::protobuf::Reflection::GetUInt32(v7, a3, *a1);
LABEL_12:
      uint64_t v15 = !v13;
      break;
    case 8:
      BOOL Bool = google::protobuf::Reflection::GetBool(v7, a2, *a1);
      uint64_t v15 = google::protobuf::Reflection::GetBool(v7, a3, *a1) && !Bool;
      break;
    case 9:
      google::protobuf::Reflection::GetString(v7, a2, *a1, (uint64_t)__p);
      google::protobuf::Reflection::GetString(v7, a3, *a1, (uint64_t)v30);
      int v19 = (char)v31;
      int v20 = (void *)v30[0];
      char v21 = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p[0].__r_.__value_.__l.__size_;
      }
      if ((__p[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        int v23 = __p;
      }
      else {
        int v23 = (std::string *)__p[0].__r_.__value_.__r.__words[0];
      }
      if ((v31 & 0x80u) == 0) {
        size_t v24 = v31;
      }
      else {
        size_t v24 = v30[1];
      }
      if ((v31 & 0x80u) == 0) {
        uint64_t v25 = v30;
      }
      else {
        uint64_t v25 = (void *)v30[0];
      }
      if (v24 >= size) {
        size_t v26 = size;
      }
      else {
        size_t v26 = v24;
      }
      int v27 = memcmp(v23, v25, v26);
      if (v27) {
        uint64_t v15 = v27 < 0;
      }
      else {
        uint64_t v15 = size < v24;
      }
      if (v19 < 0)
      {
        operator delete(v20);
        char v21 = HIBYTE(__p[0].__r_.__value_.__r.__words[2]);
      }
      if (v21 < 0) {
        operator delete(__p[0].__r_.__value_.__l.__data_);
      }
      break;
    default:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)__p, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/dynamic_message.h", 224);
      int v17 = google::protobuf::internal::LogMessage::operator<<(__p, "Invalid key for map field.");
      google::protobuf::internal::LogFinisher::operator=((int)v30, (const char **)&v17->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&__p[0].__r_.__value_.__l.__data_);
      uint64_t v15 = 1;
      break;
  }
  return v15;
}

void sub_100150414(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
}

const google::protobuf::Message **sub_100150468(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::FieldDescriptor **a3)
{
  if (result != a2)
  {
    unint64_t v4 = result;
    uint64_t v5 = result + 1;
    if (result + 1 != a2)
    {
      uint64_t v7 = 0;
      uint64_t v8 = result;
      do
      {
        uint64_t v9 = *v8;
        uint64_t v8 = v5;
        BOOL result = (const google::protobuf::Message **)sub_10015014C(a3, *v5, v9);
        if (result)
        {
          uint64_t v10 = *v8;
          uint64_t v11 = v7;
          while (1)
          {
            *(const google::protobuf::Message **)((char *)v4 + v11 + 8) = *(const google::protobuf::Message **)((char *)v4 + v11);
            if (!v11) {
              break;
            }
            BOOL result = (const google::protobuf::Message **)sub_10015014C(a3, v10, *(const google::protobuf::Message **)((char *)v4 + v11 - 8));
            v11 -= 8;
            if ((result & 1) == 0)
            {
              int v12 = (const google::protobuf::Message **)((char *)v4 + v11 + 8);
              goto LABEL_10;
            }
          }
          int v12 = v4;
LABEL_10:
          *int v12 = v10;
        }
        uint64_t v5 = v8 + 1;
        v7 += 8;
      }
      while (v8 + 1 != a2);
    }
  }
  return result;
}

const google::protobuf::Message **sub_100150534(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::FieldDescriptor **a3, unint64_t a4, uint64_t a5)
{
  if (a4)
  {
    uint64_t v9 = result;
    if (a4 == 2)
    {
      BOOL result = (const google::protobuf::Message **)sub_10015014C(a3, *(a2 - 1), *result);
      if (result)
      {
        *(void *)a5 = *(a2 - 1);
        uint64_t v10 = *v9;
      }
      else
      {
        *(void *)a5 = *v9;
        uint64_t v10 = *(a2 - 1);
      }
      *(void *)(a5 + 8) = v10;
    }
    else if (a4 == 1)
    {
      *(void *)a5 = *result;
    }
    else if ((uint64_t)a4 > 8)
    {
      sub_10014FF90(result, &result[a4 >> 1], a3, a4 >> 1, a5, a4 >> 1);
      sub_10014FF90(&v9[a4 >> 1], a2, a3, a4 - (a4 >> 1), a5 + 8 * (a4 >> 1), a4 - (a4 >> 1));
      return sub_100150A64(v9, &v9[a4 >> 1], &v9[a4 >> 1], a2, (const google::protobuf::Message **)a5, a3);
    }
    else
    {
      return sub_100150988(result, a2, (const google::protobuf::Message **)a5, a3);
    }
  }
  return result;
}

const google::protobuf::Message **sub_100150690(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::Message **a4, const google::protobuf::Message **a5, const google::protobuf::FieldDescriptor **a6)
{
  if (result == a2)
  {
LABEL_10:
    while (a3 != a4)
    {
      BOOL v13 = *a3++;
      *a5++ = v13;
    }
  }
  else
  {
    uint64_t v11 = result;
    while (a3 != a4)
    {
      BOOL result = (const google::protobuf::Message **)sub_10015014C(a6, *a3, *v11);
      if (result) {
        int v12 = a3;
      }
      else {
        int v12 = v11;
      }
      v11 += result ^ 1;
      a3 += result;
      *a5++ = *v12;
      if (v11 == a2) {
        goto LABEL_10;
      }
    }
    if (v11 != a2)
    {
      uint64_t v14 = 0;
      do
      {
        a5[v14] = v11[v14];
        ++v14;
      }
      while (&v11[v14] != a2);
    }
  }
  return result;
}

void sub_100150754(const google::protobuf::Message **a1, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4, uint64_t a5, uint64_t a6, const google::protobuf::Message **a7, uint64_t a8)
{
  if (a6)
  {
    uint64_t v9 = a6;
    do
    {
      if (v9 <= a8 || a5 <= a8)
      {
        sub_100150B28(a1, a2, a3, a4, a5, v9, a7);
        return;
      }
      if (!a5) {
        return;
      }
      unint64_t v15 = 0;
      uint64_t v16 = 0;
      while (!sub_10015014C(a4, *a2, a1[v16]))
      {
        ++v16;
        v15 -= 8;
        if (a5 == v16) {
          return;
        }
      }
      uint64_t v32 = a3;
      uint64_t v33 = a8;
      unsigned __int8 v31 = &a1[v15 / 0xFFFFFFFFFFFFFFF8];
      if (a5 - v16 >= v9)
      {
        if (a5 - 1 == v16)
        {
          uint64_t v28 = a1[v16];
          a1[v16] = *a2;
          *a2 = v28;
          return;
        }
        uint64_t v23 = (a5 - v16) / 2;
        unint64_t v22 = (const google::protobuf::Message **)((char *)&a1[v23] - v15);
        uint64_t v35 = *a4;
        int v19 = sub_100150DF4(a2, a3, v22, &v35);
        uint64_t v18 = v19 - a2;
      }
      else
      {
        if (v9 >= 0) {
          uint64_t v17 = v9;
        }
        else {
          uint64_t v17 = v9 + 1;
        }
        uint64_t v18 = v17 >> 1;
        int v19 = &a2[v17 >> 1];
        int v20 = sub_100150BFC(&a1[v15 / 0xFFFFFFFFFFFFFFF8], a2, v19, a4);
        int64_t v21 = (char *)v20 - (char *)a1;
        unint64_t v22 = v20;
        uint64_t v23 = (uint64_t)(v21 + v15) >> 3;
      }
      uint64_t v29 = a5 - v23 - v16;
      uint64_t v30 = v22;
      uint64_t v24 = v9 - v18;
      uint64_t v25 = sub_1001442E0((char *)v22, (char *)a2, (char *)v19);
      a1 = (const google::protobuf::Message **)v25;
      if (v23 + v18 >= v9 + a5 - (v23 + v18) - v16)
      {
        int v27 = v25;
        sub_100150754(v25, v19, v32, a4, v29, v24, a7, v33);
        a2 = v30;
        a1 = v31;
        uint64_t v24 = v18;
        a8 = v33;
        a5 = v23;
        a3 = (const google::protobuf::Message **)v27;
      }
      else
      {
        uint64_t v26 = v18;
        a8 = v33;
        sub_100150754(v31, v30, v25, a4, v23, v26, a7, v33);
        a2 = v19;
        a3 = v32;
        a5 = a5 - v23 - v16;
      }
      uint64_t v9 = v24;
    }
    while (v24);
  }
}

const google::protobuf::Message **sub_100150988(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4)
{
  if (result != a2)
  {
    uint64_t v6 = result + 1;
    *a3 = *result;
    if (result + 1 != a2)
    {
      uint64_t v8 = 0;
      uint64_t v9 = a3;
      do
      {
        uint64_t v10 = v9;
        uint64_t v11 = *v9++;
        BOOL result = (const google::protobuf::Message **)sub_10015014C(a4, *v6, v11);
        int v12 = v9;
        if (result)
        {
          v10[1] = *v10;
          int v12 = a3;
          if (v10 != a3)
          {
            uint64_t v13 = v8;
            while (1)
            {
              int v12 = (const google::protobuf::Message **)((char *)a3 + v13);
              BOOL result = (const google::protobuf::Message **)sub_10015014C(a4, *v6, *(const google::protobuf::Message **)((char *)a3 + v13 - 8));
              if (!result) {
                break;
              }
              *int v12 = *(v12 - 1);
              v13 -= 8;
              if (!v13)
              {
                int v12 = a3;
                break;
              }
            }
          }
        }
        uint64_t v14 = *v6++;
        *int v12 = v14;
        v8 += 8;
      }
      while (v6 != a2);
    }
  }
  return result;
}

const google::protobuf::Message **sub_100150A64(const google::protobuf::Message **result, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::Message **a4, const google::protobuf::Message **a5, const google::protobuf::FieldDescriptor **a6)
{
  if (result == a2)
  {
LABEL_10:
    while (a3 != a4)
    {
      uint64_t v13 = *a3++;
      *a5++ = v13;
    }
  }
  else
  {
    uint64_t v11 = result;
    while (a3 != a4)
    {
      BOOL result = (const google::protobuf::Message **)sub_10015014C(a6, *a3, *v11);
      if (result) {
        int v12 = a3;
      }
      else {
        int v12 = v11;
      }
      a3 += result;
      v11 += result ^ 1;
      *a5++ = *v12;
      if (v11 == a2) {
        goto LABEL_10;
      }
    }
    if (v11 != a2)
    {
      uint64_t v14 = 0;
      do
      {
        a5[v14] = v11[v14];
        ++v14;
      }
      while (&v11[v14] != a2);
    }
  }
  return result;
}

void sub_100150B28(const google::protobuf::Message **__dst, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4, uint64_t a5, uint64_t a6, const google::protobuf::Message **__src)
{
  if (a5 <= a6)
  {
    int v12 = __src;
    if (__dst != a2)
    {
      int v12 = __src;
      uint64_t v13 = __dst;
      do
      {
        uint64_t v14 = *v13++;
        *v12++ = v14;
      }
      while (v13 != a2);
    }
    sub_100150C80(__src, v12, a2, a3, __dst, a4);
  }
  else
  {
    uint64_t v9 = __src;
    if (a2 != a3)
    {
      uint64_t v9 = __src;
      uint64_t v10 = a2;
      do
      {
        uint64_t v11 = *v10++;
        *v9++ = v11;
      }
      while (v10 != a3);
    }
    unint64_t v15 = a4;
    sub_100150D38((uint64_t)v9, (uint64_t)v9, (uint64_t)__src, (uint64_t)__src, (uint64_t)a2, (uint64_t)a2, (uint64_t)__dst, (uint64_t)__dst, (uint64_t)a3, (uint64_t)a3, &v15);
  }
}

const google::protobuf::Message **sub_100150BFC(const google::protobuf::Message **a1, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4)
{
  unint64_t v4 = a1;
  if (a2 != a1)
  {
    unint64_t v7 = a2 - a1;
    do
    {
      uint64_t v8 = &v4[v7 >> 1];
      uint64_t v10 = *v8;
      uint64_t v9 = v8 + 1;
      if (sub_10015014C(a4, *a3, v10))
      {
        v7 >>= 1;
      }
      else
      {
        unint64_t v4 = v9;
        v7 += ~(v7 >> 1);
      }
    }
    while (v7);
  }
  return v4;
}

const google::protobuf::Message **sub_100150C80(const google::protobuf::Message **__src, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::Message **a4, const google::protobuf::Message **__dst, const google::protobuf::FieldDescriptor **a6)
{
  if (__src != a2)
  {
    uint64_t v11 = __src;
    while (a3 != a4)
    {
      __src = (const google::protobuf::Message **)sub_10015014C(a6, *a3, *v11);
      if (__src) {
        int v12 = a3;
      }
      else {
        int v12 = v11;
      }
      a3 += __src;
      v11 += __src ^ 1;
      *__dst++ = *v12;
      if (v11 == a2) {
        return __src;
      }
    }
    return (const google::protobuf::Message **)memmove(__dst, v11, (char *)a2 - (char *)v11);
  }
  return __src;
}

void sub_100150D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, const google::protobuf::FieldDescriptor ***a11)
{
  if (a2 != a4)
  {
    uint64_t v14 = a2;
    unint64_t v15 = (void *)(a10 - 8);
    while (a6 != a8)
    {
      BOOL v16 = sub_10015014C(*a11, *(const google::protobuf::Message **)(v14 - 8), *(const google::protobuf::Message **)(a6 - 8));
      if (v16) {
        uint64_t v17 = a6;
      }
      else {
        uint64_t v17 = v14;
      }
      if (v16) {
        a6 -= 8;
      }
      else {
        v14 -= 8;
      }
      *v15-- = *(void *)(v17 - 8);
      if (v14 == a4) {
        return;
      }
    }
    uint64_t v18 = 0;
    do
    {
      v15[v18] = *(void *)(v14 + v18 * 8 - 8);
      --v18;
    }
    while (v14 + v18 * 8 != a4);
  }
}

const google::protobuf::Message **sub_100150DF4(const google::protobuf::Message **a1, const google::protobuf::Message **a2, const google::protobuf::Message **a3, const google::protobuf::FieldDescriptor **a4)
{
  unint64_t v4 = a1;
  if (a2 != a1)
  {
    unint64_t v7 = a2 - a1;
    do
    {
      uint64_t v8 = &v4[v7 >> 1];
      uint64_t v10 = *v8;
      uint64_t v9 = v8 + 1;
      BOOL v11 = sub_10015014C(a4, v10, *a3);
      if (v11) {
        v7 += ~(v7 >> 1);
      }
      else {
        v7 >>= 1;
      }
      if (v11) {
        unint64_t v4 = v9;
      }
    }
    while (v7);
  }
  return v4;
}

unsigned __int8 *sub_100150E78(google::protobuf::internal *this, unint64_t a2, unsigned int **a3)
{
  uint64_t v3 = (unsigned __int8 *)this;
  if ((unint64_t)this < a2)
  {
    do
    {
      uint64_t v6 = *v3;
      if ((char)*v3 < 0)
      {
        int v7 = v6 + (v3[1] << 7);
        uint64_t v6 = (v7 - 128);
        if ((char)v3[1] < 0)
        {
          uint64_t v3 = (unsigned __int8 *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)v3, (v7 - 128));
          if (!v3) {
            return v3;
          }
          uint64_t v6 = v8;
        }
        else
        {
          v3 += 2;
        }
      }
      else
      {
        ++v3;
      }
      uint64_t v9 = (google::protobuf::EnumDescriptor *)google::protobuf::FieldDescriptor::enum_type((google::protobuf::FieldDescriptor *)a3[1]);
      if (google::protobuf::EnumDescriptor::FindValueByNumber(v9, v6))
      {
        uint64_t v10 = *a3;
        uint64_t v11 = **a3;
        if (v11 == (*a3)[1])
        {
          unsigned int v12 = v11 + 1;
          google::protobuf::RepeatedField<int>::Reserve(*a3, v11 + 1);
          *(_DWORD *)(*((void *)v10 + 1) + 4 * v11) = v6;
        }
        else
        {
          *(_DWORD *)(*((void *)v10 + 1) + 4 * v11) = v6;
          unsigned int v12 = v11 + 1;
        }
        *uint64_t v10 = v12;
      }
      else
      {
        unsigned int v13 = a3[1][17];
        uint64_t v14 = google::protobuf::Reflection::MutableUnknownFields((google::protobuf::Reflection *)a3[2], (google::protobuf::Message *)a3[3]);
        google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v14, v13, v6);
      }
    }
    while ((unint64_t)v3 < a2);
  }
  return v3;
}

void sub_100150F88(void ***a1)
{
  uint64_t v2 = (uint64_t *)*a1;
  if (*v2)
  {
    sub_100150FDC((uint64_t)v2, *v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_100150FDC(uint64_t a1, uint64_t a2)
{
  for (uint64_t i = *(void *)(a1 + 8); i != a2; i -= 32)
  {
    if (*(_DWORD *)(i - 8) == 9 && *(char *)(i - 9) < 0) {
      operator delete(*(void **)(i - 32));
    }
  }
  *(void *)(a1 + 8) = a2;
}

uint64_t google::protobuf::io::EpsCopyOutputStream::ZigZagEncode32(google::protobuf::io::EpsCopyOutputStream *this)
{
  return (2 * this) ^ ((int)this >> 31);
}

uint64_t google::protobuf::io::EpsCopyOutputStream::ZigZagEncode64(uint64_t this)
{
  return (2 * this) ^ (this >> 63);
}

void sub_100151058(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/struct.pb.cc", a4);
  qword_1001EDFE0 = 0;
  unk_1001EDFE8 = &google::protobuf::internal::fixed_address_empty_string;
  qword_1001EDFF0 = 0;
  dword_1001EDFF8 = 0;
  qword_1001EE000 = 0;
  google::protobuf::_Struct_FieldsEntry_DoNotUse_default_instance_ = (uint64_t)off_1001D2B78;
  google::protobuf::Struct::Struct((google::protobuf::Struct *)&google::protobuf::_Struct_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Struct_default_instance_, v4);
  google::protobuf::_Value_default_instance_[0] = (uint64_t)off_1001D2CE8;
  unk_1001EE0B8 = 0;
  dword_1001EE0C8 = 0;
  if (atomic_load_explicit(scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto);
  }
  dword_1001EE0CC = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))google::protobuf::_Value_default_instance_, v5);
  google::protobuf::ListValue::ListValue((uint64_t)&google::protobuf::_ListValue_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_ListValue_default_instance_, v6);
}

std::string *sub_10015118C(std::string *result, _DWORD *a2)
{
  int v2 = a2[8];
  if (v2)
  {
    unint64_t v4 = result;
    if (v2)
    {
      std::string::size_type size = result->__r_.__value_.__l.__size_;
      uint64_t v6 = (google::protobuf::Arena *)(size & 0xFFFFFFFFFFFFFFFELL);
      if (size) {
        uint64_t v6 = *(google::protobuf::Arena **)v6;
      }
      google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)&result->__r_.__value_.__r.__words[2], v6);
      uint64_t v7 = (*(uint64_t (**)(_DWORD *))(*(void *)a2 + 160))(a2);
      std::string::size_type v8 = v4->__r_.__value_.__l.__size_;
      uint64_t v9 = (google::protobuf::Arena *)(v8 & 0xFFFFFFFFFFFFFFFELL);
      if (v8) {
        uint64_t v9 = *(google::protobuf::Arena **)v9;
      }
      BOOL result = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v4->__r_.__value_.__r.__words[2], (std::string *)&google::protobuf::internal::fixed_address_empty_string, v7, v9);
      LODWORD(v4[1].__r_.__value_.__r.__words[1]) |= 1u;
      int v2 = a2[8];
    }
    if ((v2 & 2) != 0)
    {
      std::string::size_type v10 = v4->__r_.__value_.__l.__size_;
      uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFELL);
      if (v10) {
        uint64_t v11 = (void *)*v11;
      }
      if (!v4[1].__r_.__value_.__r.__words[0]) {
        v4[1].__r_.__value_.__r.__words[0] = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Value>(v11);
      }
      unsigned int v12 = (const google::protobuf::Value *)(*(uint64_t (**)(_DWORD *))(*(void *)a2 + 168))(a2);
      BOOL result = google::protobuf::Value::MergeFrom((std::string *)v4[1].__r_.__value_.__l.__data_, v12);
      LODWORD(v4[1].__r_.__value_.__r.__words[1]) |= 2u;
    }
  }
  return result;
}

uint64_t google::protobuf::Struct_FieldsEntry_DoNotUse::GetMetadata(google::protobuf::Struct_FieldsEntry_DoNotUse *this)
{
  return *off_1001EB1A0;
}

google::protobuf::Struct *google::protobuf::Struct::Struct(google::protobuf::Struct *this, google::protobuf::Arena *a2)
{
  *(void *)this = off_1001D2C38;
  *((void *)this + 1) = a2;
  sub_100112598((uint64_t)this + 16, (char *)a2);
  *((void *)this + 2) = off_1001D3058;
  *((_OWORD *)this + 7) = xmmword_1001825C0;
  *((_OWORD *)this + 8) = xmmword_1001825C0;
  *((void *)this + 18) = &google::protobuf::internal::kGlobalEmptyTable;
  *((void *)this + 19) = a2;
  *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto);
  }
  return this;
}

void sub_100151398(_Unwind_Exception *a1)
{
  sub_1001513AC(v1);
  _Unwind_Resume(a1);
}

void sub_1001513AC(google::protobuf::internal::MapFieldBase *a1)
{
  *(void *)a1 = off_1001D3058;
  sub_100154D74((uint64_t)a1 + 96);
  google::protobuf::internal::MapFieldBase::~MapFieldBase(a1);
}

uint64_t sub_100151400(google::protobuf::internal::MapFieldBase *a1, google::protobuf::internal::MapFieldBase *a2)
{
  google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(a1);
  google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(a2);
  sub_100156234((void *)a1 + 12, (void *)a2 + 12);
  return google::protobuf::internal::MapFieldBase::SetMapDirty((uint64_t)a1);
}

void google::protobuf::Struct::~Struct(google::protobuf::Struct *this)
{
  *((void *)this + 2) = off_1001D3058;
  sub_100154D74((char *)this + 112);
  google::protobuf::internal::MapFieldBase::~MapFieldBase((google::protobuf::Struct *)((char *)this + 16));
}

{
  uint64_t vars8;

  google::protobuf::Struct::~Struct(this);
  operator delete();
}

uint64_t google::protobuf::Struct::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::Struct::Clear(google::protobuf::Struct *this)
{
  BOOL result = (google::protobuf::Arena **)sub_100151544((uint64_t)this + 16);
  char v4 = *((unsigned char *)this + 8);
  uint64_t v3 = (unint64_t *)((char *)this + 8);
  if (v4)
  {
    return sub_100035820(v3);
  }
  return result;
}

uint64_t sub_100151544(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = *(unsigned int *)(v2 + 8);
    if ((int)v3 >= 1)
    {
      char v4 = (uint64_t *)(*(void *)(v2 + 16) + 8);
      do
      {
        uint64_t v5 = *v4++;
        (*(void (**)(uint64_t))(*(void *)v5 + 40))(v5);
        --v3;
      }
      while (v3);
      *(_DWORD *)(v2 + 8) = 0;
    }
  }
  sub_100154DC8(a1 + 96);
  return google::protobuf::internal::MapFieldBase::SetMapDirty(a1);
}

google::protobuf::internal *google::protobuf::Struct::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  BOOL v16 = a2;
  if (sub_1000355B8(a3, &v16, *(_DWORD *)(a3 + 92))) {
    return v16;
  }
  uint64_t v5 = (unint64_t *)(a1 + 8);
  uint64_t v6 = a1 + 16;
  while (1)
  {
    uint64_t v7 = (google::protobuf::internal *)((char *)v16 + 1);
    unsigned int v8 = *(unsigned __int8 *)v16;
    if ((*(char *)v16 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
    unsigned int v8 = v9 - 128;
    if ((*(char *)v7 & 0x80000000) == 0)
    {
      uint64_t v7 = (google::protobuf::internal *)((char *)v16 + 2);
LABEL_6:
      BOOL v16 = v7;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v16, (const char *)(v9 - 128));
    BOOL v16 = TagFallback;
    if (!TagFallback) {
      return 0;
    }
    uint64_t v7 = TagFallback;
    unsigned int v8 = v14;
LABEL_7:
    if (v8 == 10) {
      break;
    }
    if (v8) {
      BOOL v10 = (v8 & 7) == 4;
    }
    else {
      BOOL v10 = 1;
    }
    if (v10)
    {
      *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = v8 - 1;
      return v16;
    }
    if (*v5)
    {
      uint64_t v11 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else
    {
      uint64_t v11 = sub_10003562C(v5);
      uint64_t v7 = v16;
    }
    BOOL v16 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v11, v7);
    if (!v16) {
      return 0;
    }
LABEL_20:
    if (sub_1000355B8(a3, &v16, *(_DWORD *)(a3 + 92))) {
      return v16;
    }
  }
  unsigned int v12 = (google::protobuf::internal *)((char *)v7 - 1);
  while (1)
  {
    BOOL v16 = (google::protobuf::internal *)((char *)v12 + 1);
    unsigned int v12 = sub_100151730(a3, v6, (google::protobuf::internal *)((char *)v12 + 1));
    BOOL v16 = v12;
    if (!v12) {
      return 0;
    }
    if (*(void *)a3 <= (unint64_t)v12 || *(unsigned char *)v12 != 10) {
      goto LABEL_20;
    }
  }
}

google::protobuf::internal *sub_100151730(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = sub_100156308(a2 + 96, v6, (int *)a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Struct::_InternalSerialize(google::protobuf::Struct *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v6 = (google::protobuf::Struct *)((char *)this + 16);
  google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField((google::protobuf::Struct *)((char *)this + 16));
  if (*((void *)this + 14))
  {
    if (*((unsigned char *)a3 + 58))
    {
      google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(v6);
      if (*((void *)this + 14) >= 2uLL)
      {
        google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(v6);
        operator new[]();
      }
    }
    google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(v6);
    unint64_t v8 = *((void *)this + 17);
    unint64_t v9 = *((void *)this + 15);
    if (v9 <= v8)
    {
      uint64_t v11 = 0;
    }
    else
    {
      uint64_t v10 = *((void *)this + 18);
      while (1)
      {
        uint64_t v11 = *(void *)(v10 + 8 * v8);
        if (v11) {
          break;
        }
        if (v9 == ++v8)
        {
          uint64_t v11 = 0;
          unint64_t v8 = *((void *)this + 15);
          goto LABEL_13;
        }
      }
      if (v11 == *(void *)(v10 + 8 * (v8 ^ 1))) {
        uint64_t v11 = *(void *)(*(void *)v11 + 40);
      }
    }
LABEL_13:
    v16[0] = v11;
    v16[1] = (char *)this + 112;
    std::string v16[2] = v8;
    google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(v6);
    if (v11)
    {
      do
      {
        a2 = (unsigned __int8 *)sub_100151B10(1, v11, (google::protobuf::Value *)(v11 + 24), a2, a3);
        int v12 = (google::protobuf::internal *)v16[0];
        if (*(char *)(v16[0] + 23) < 0)
        {
          int v12 = *(google::protobuf::internal **)v16[0];
          unsigned int v13 = *(const char **)(v16[0] + 8);
        }
        else
        {
          unsigned int v13 = (const char *)*(unsigned __int8 *)(v16[0] + 23);
        }
        google::protobuf::internal::WireFormatLite::VerifyUtf8String(v12, v13, 1, (google::protobuf::internal *)"google.protobuf.Struct.FieldsEntry.key");
        sub_100155D28(v16);
        google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(v6);
        uint64_t v11 = v16[0];
      }
      while (v16[0]);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if (v14) {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, v7);
  }
  return (const google::protobuf::UnknownFieldSet *)a2;
}

void sub_100151ADC()
{
}

uint64_t sub_100151B10(int a1, uint64_t a2, google::protobuf::Value *a3, unsigned __int8 *a4, google::protobuf::io::EpsCopyOutputStream *a5)
{
  if (*(void *)a5 <= (unint64_t)a4) {
    a4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a5, a4);
  }
  unsigned int v9 = (8 * a1) | 2;
  if (v9 > 0x7F)
  {
    *a4 = (8 * a1) | 0x82;
    unsigned int v11 = (8 * a1) >> 7;
    if (v9 >> 14)
    {
      uint64_t v10 = a4 + 2;
      do
      {
        *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
        unsigned int v12 = v11 >> 7;
        ++v10;
        unsigned int v13 = v11 >> 14;
        v11 >>= 7;
      }
      while (v13);
      *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
    }
    else
    {
      a4[1] = v11;
      uint64_t v10 = a4 + 2;
    }
  }
  else
  {
    *a4 = v9;
    uint64_t v10 = a4 + 1;
  }
  int v14 = *(unsigned __int8 *)(a2 + 23);
  if ((v14 & 0x80u) != 0) {
    int v14 = *(_DWORD *)(a2 + 8);
  }
  unsigned int v15 = *((_DWORD *)a3 + 6)
      + v14
      + ((9 * (__clz(*((_DWORD *)a3 + 6) | 1) ^ 0x1F) + 73) >> 6)
      + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)
      + 2;
  if (v15 > 0x7F)
  {
    *uint64_t v10 = v15 | 0x80;
    unsigned int v17 = v15 >> 7;
    if (v15 >> 14)
    {
      BOOL v16 = v10 + 2;
      do
      {
        *(v16 - sub_1000333D0((uint64_t *)this + 1) = v17 | 0x80;
        unsigned int v18 = v17 >> 7;
        ++v16;
        unsigned int v19 = v17 >> 14;
        v17 >>= 7;
      }
      while (v19);
      *(v16 - sub_1000333D0((uint64_t *)this + 1) = v18;
    }
    else
    {
      v10[1] = v17;
      BOOL v16 = v10 + 2;
    }
  }
  else
  {
    *uint64_t v10 = v15;
    BOOL v16 = v10 + 1;
  }
  if (*(void *)a5 <= (unint64_t)v16) {
    BOOL v16 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a5, v16);
  }
  int v20 = sub_1000E4244(a5, 1, a2, v16);
  if (*(void *)a5 <= (unint64_t)v20) {
    int v20 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a5, v20);
  }
  *int v20 = 18;
  unsigned int v21 = *((_DWORD *)a3 + 6);
  if (v21 > 0x7F)
  {
    v20[1] = v21 | 0x80;
    unsigned int v23 = v21 >> 7;
    if (v21 >> 14)
    {
      unint64_t v22 = (google::protobuf::UnknownFieldSet *)(v20 + 3);
      do
      {
        *((unsigned char *)v22 - sub_1000333D0((uint64_t *)this + 1) = v23 | 0x80;
        unsigned int v24 = v23 >> 7;
        unint64_t v22 = (google::protobuf::UnknownFieldSet *)((char *)v22 + 1);
        unsigned int v25 = v23 >> 14;
        v23 >>= 7;
      }
      while (v25);
      *((unsigned char *)v22 - sub_1000333D0((uint64_t *)this + 1) = v24;
    }
    else
    {
      _OWORD v20[2] = v23;
      unint64_t v22 = (google::protobuf::UnknownFieldSet *)(v20 + 3);
    }
  }
  else
  {
    v20[1] = v21;
    unint64_t v22 = (google::protobuf::UnknownFieldSet *)(v20 + 2);
  }
  return google::protobuf::Value::_InternalSerialize(a3, v22, a5);
}

char *google::protobuf::Struct::ByteSizeLong(google::protobuf::Struct *this)
{
  uint64_t v2 = (google::protobuf::Struct *)((char *)this + 16);
  google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField((google::protobuf::Struct *)((char *)this + 16));
  uint64_t v3 = (const google::protobuf::UnknownFieldSet *)*((unsigned int *)this + 28);
  google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(v2);
  unint64_t v4 = *((void *)this + 17);
  unint64_t v5 = *((void *)this + 15);
  if (v5 <= v4)
  {
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v6 = *((void *)this + 18);
    while (1)
    {
      uint64_t v7 = *(void *)(v6 + 8 * v4);
      if (v7) {
        break;
      }
      if (v5 == ++v4)
      {
        uint64_t v7 = 0;
        unint64_t v4 = *((void *)this + 15);
        goto LABEL_9;
      }
    }
    if (v7 == *(void *)(v6 + 8 * (v4 ^ 1))) {
      uint64_t v7 = *(void *)(*(void *)v7 + 40);
    }
  }
LABEL_9:
  v9[0] = v7;
  v9[1] = (char *)this + 112;
  v9[2] = v4;
  google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(v2);
  if (v7)
  {
    do
    {
      uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3
                                                     + sub_100151E40(v7, (google::protobuf::Value *)(v7 + 24)));
      sub_100155D28(v9);
      google::protobuf::internal::MapFieldBase::SyncMapWithRepeatedField(v2);
      uint64_t v7 = v9[0];
    }
    while (v9[0]);
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Struct *)((char *)this + 8), v3, (_DWORD *)this + 40);
  }
  *((_DWORD *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = v3;
  return (char *)v3;
}

uint64_t sub_100151E40(uint64_t a1, google::protobuf::Value *a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 23);
  if ((v2 & 0x80u) != 0) {
    int v2 = *(_DWORD *)(a1 + 8);
  }
  signed int v3 = v2 + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 2;
  uint64_t v4 = google::protobuf::Value::ByteSizeLong(a2);
  uint64_t v5 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + v3;
  return v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6);
}

void google::protobuf::Struct::MergeFrom(google::protobuf::Struct *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::Struct::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

uint64_t google::protobuf::Struct::MergeFrom(google::protobuf::Struct *this, const google::protobuf::Struct *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  return sub_100151400((google::protobuf::Struct *)((char *)this + 16), (const google::protobuf::Struct *)((char *)a2 + 16));
}

void google::protobuf::Struct::CopyFrom(google::protobuf::Struct *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::Struct::Clear(this);
    google::protobuf::Struct::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::Struct::IsInitialized(google::protobuf::Struct *this)
{
  return 1;
}

uint64_t *sub_100152020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a2 + 16) = v4;
  BOOL result = sub_100157808((uint64_t *)(a1 + 96), (uint64_t *)(a2 + 96));
  int v6 = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a2 + 88) = *(_DWORD *)(a1 + 88);
  *(_DWORD *)(a1 + 88) = v6;
  return result;
}

uint64_t google::protobuf::Struct::GetMetadata(google::protobuf::Struct *this)
{
  return off_1001EB1A0[2];
}

uint64_t *google::protobuf::Value::clear_kind(uint64_t *this)
{
  uint64_t v1 = this;
  int v2 = *((_DWORD *)this + 7);
  switch(v2)
  {
    case 6:
      uint64_t v6 = this[1];
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFELL);
      if (v6)
      {
        if (*v7) {
          break;
        }
      }
      else if (v7)
      {
        break;
      }
      this = (uint64_t *)this[2];
      if (!this) {
        break;
      }
      google::protobuf::ListValue::~ListValue((google::protobuf::ListValue *)this);
LABEL_15:
      operator delete();
    case 5:
      uint64_t v8 = this[1];
      unsigned int v9 = (void *)(v8 & 0xFFFFFFFFFFFFFFFELL);
      if (v8)
      {
        if (*v9) {
          break;
        }
      }
      else if (v9)
      {
        break;
      }
      this = (uint64_t *)this[2];
      if (!this) {
        break;
      }
      google::protobuf::Struct::~Struct((google::protobuf::Struct *)this);
      goto LABEL_15;
    case 3:
      signed int v3 = this + 2;
      uint64_t v4 = v1[1];
      uint64_t v5 = (void *)(v4 & 0xFFFFFFFFFFFFFFFELL);
      if (v4) {
        uint64_t v5 = (void *)*v5;
      }
      this = google::protobuf::internal::ArenaStringPtr::Destroy(v3, (uint64_t)v5);
      break;
  }
  *((_DWORD *)v1 + 7) = 0;
  return this;
}

uint64_t google::protobuf::ListValue::MergeFrom(uint64_t this, const google::protobuf::ListValue *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (uint64_t)sub_1000357D4((unint64_t *)(this + 8), (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = (google::protobuf::Value **)(*((void *)a2 + 4) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 16), v5);
    this = sub_100157B6C(v3 + 16, (google::protobuf::Value **)v7, v6, v5, **(_DWORD **)(v3 + 32) - *(_DWORD *)(v3 + 24));
    signed int v8 = *(_DWORD *)(v3 + 24) + v5;
    *(_DWORD *)(v3 + 24) = v8;
    unsigned int v9 = *(signed int **)(v3 + 32);
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  return this;
}

void google::protobuf::Value::~Value(google::protobuf::Value *this)
{
  if (*((_DWORD *)this + 7)) {
    google::protobuf::Value::clear_kind((uint64_t *)this);
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  google::protobuf::Value::~Value(this);
  operator delete();
}

uint64_t google::protobuf::Value::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

uint64_t *google::protobuf::Value::Clear(google::protobuf::Value *this)
{
  BOOL result = google::protobuf::Value::clear_kind((uint64_t *)this);
  char v4 = *((unsigned char *)this + 8);
  uint64_t v3 = (unint64_t *)((char *)this + 8);
  if (v4)
  {
    return (uint64_t *)sub_100035820(v3);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Value::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v36 = a2;
  unsigned int v5 = (unint64_t *)(a1 + 8);
  uint64_t v6 = (uint64_t **)(a1 + 16);
  while ((sub_1000355B8(a3, &v36, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    TagFallback = (char *)v36 + 1;
    unsigned int v8 = *(unsigned __int8 *)v36;
    if (*(char *)v36 < 0)
    {
      unsigned int v9 = v8 + (*TagFallback << 7);
      unsigned int v8 = v9 - 128;
      if (*TagFallback < 0)
      {
        TagFallback = (char *)google::protobuf::internal::ReadTagFallback(v36, (const char *)(v9 - 128));
        int v36 = (google::protobuf::internal *)TagFallback;
        if (!TagFallback) {
          return (google::protobuf::internal *)TagFallback;
        }
        unsigned int v8 = v28;
        goto LABEL_7;
      }
      TagFallback = (char *)v36 + 2;
    }
    int v36 = (google::protobuf::internal *)TagFallback;
LABEL_7:
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_40;
        }
        uint64_t v10 = (google::protobuf::internal *)(TagFallback + 1);
        int v11 = *TagFallback;
        if ((*TagFallback & 0x80000000) == 0) {
          goto LABEL_12;
        }
        int v12 = *(char *)v10;
        int v13 = v11 + (v12 << 7);
        int v11 = v13 - 128;
        if (v12 < 0)
        {
          int v36 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, (v13 - 128));
          if (!v36) {
            return 0;
          }
          int v11 = v33;
        }
        else
        {
          uint64_t v10 = (google::protobuf::internal *)(TagFallback + 2);
LABEL_12:
          int v36 = v10;
        }
        if (*(_DWORD *)(a1 + 28) != 1)
        {
          google::protobuf::Value::clear_kind((uint64_t *)a1);
          *(_DWORD *)(a1 + 28) = 1;
        }
        *(_DWORD *)uint64_t v6 = v11;
        goto LABEL_65;
      case 2u:
        if (v8 != 17) {
          goto LABEL_40;
        }
        int v14 = *(uint64_t **)TagFallback;
        if (*(_DWORD *)(a1 + 28) != 2)
        {
          google::protobuf::Value::clear_kind((uint64_t *)a1);
          *(_DWORD *)(a1 + 28) = 2;
          TagFallback = (char *)v36;
        }
        google::protobuf::internal::MapFieldBase *v6 = v14;
        int v36 = (google::protobuf::internal *)(TagFallback + 8);
        goto LABEL_65;
      case 3u:
        if (v8 != 26) {
          goto LABEL_40;
        }
        if (*(_DWORD *)(a1 + 28) != 3)
        {
          google::protobuf::Value::clear_kind((uint64_t *)a1);
          *(_DWORD *)(a1 + 28) = 3;
          *(void *)(a1 + 16) = &google::protobuf::internal::fixed_address_empty_string;
        }
        unsigned int v15 = (google::protobuf::Arena *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
        if (*v5) {
          unsigned int v15 = *(google::protobuf::Arena **)v15;
        }
        BOOL v16 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v6, v15);
        int v36 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v16, (std::string::value_type *)v36, a3);
        sub_1000BB974(v37, (uint64_t *)v16, v17);
        BOOL v18 = google::protobuf::internal::VerifyUTF8(v37[0], (const char *)v37[1], (google::protobuf::internal *)"google.protobuf.Value.string_value");
        if (v36) {
          int v19 = 2;
        }
        else {
          int v19 = 4;
        }
        if (!v18) {
          return 0;
        }
        goto LABEL_66;
      case 4u:
        if (v8 != 32) {
          goto LABEL_40;
        }
        int v20 = (google::protobuf::internal *)(TagFallback + 1);
        uint64_t v21 = *TagFallback;
        if (*TagFallback < 0)
        {
          int v22 = v21 + (*(unsigned __int8 *)v20 << 7);
          uint64_t v21 = (v22 - 128);
          if (*(char *)v20 < 0)
          {
            int v20 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64((google::protobuf::internal *)TagFallback, (v22 - 128));
            uint64_t v21 = v34;
          }
          else
          {
            int v20 = (google::protobuf::internal *)(TagFallback + 2);
          }
        }
        int v36 = v20;
        if (*(_DWORD *)(a1 + 28) != 4)
        {
          google::protobuf::Value::clear_kind((uint64_t *)a1);
          *(_DWORD *)(a1 + 28) = 4;
          int v20 = v36;
        }
        *(unsigned char *)uint64_t v6 = v21 != 0;
        if (v20) {
          goto LABEL_65;
        }
        return 0;
      case 5u:
        if (v8 != 42) {
          goto LABEL_40;
        }
        if (*(_DWORD *)(a1 + 28) == 5)
        {
          unsigned int v23 = *v6;
        }
        else
        {
          google::protobuf::Value::clear_kind((uint64_t *)a1);
          *(_DWORD *)(a1 + 28) = 5;
          uint64_t v29 = *(void *)(a1 + 8);
          uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFELL);
          if (v29) {
            uint64_t v30 = (void *)*v30;
          }
          unsigned int v23 = (uint64_t *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Struct>(v30);
          google::protobuf::internal::MapFieldBase *v6 = v23;
          TagFallback = (char *)v36;
        }
        int v27 = (google::protobuf::internal *)sub_100152704(a3, (google::protobuf::Struct *)v23, (google::protobuf::internal *)TagFallback);
        goto LABEL_57;
      case 6u:
        if (v8 != 50) {
          goto LABEL_40;
        }
        if (*(_DWORD *)(a1 + 28) == 6)
        {
          unsigned int v24 = *v6;
        }
        else
        {
          google::protobuf::Value::clear_kind((uint64_t *)a1);
          *(_DWORD *)(a1 + 28) = 6;
          uint64_t v31 = *(void *)(a1 + 8);
          uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFELL);
          if (v31) {
            uint64_t v32 = (void *)*v32;
          }
          unsigned int v24 = (uint64_t *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ListValue>(v32);
          google::protobuf::internal::MapFieldBase *v6 = v24;
          TagFallback = (char *)v36;
        }
        int v27 = sub_1001527D4(a3, (uint64_t)v24, (google::protobuf::internal *)TagFallback);
        goto LABEL_57;
      default:
LABEL_40:
        if (v8) {
          BOOL v25 = (v8 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (v25)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = v8 - 1;
          return (google::protobuf::internal *)TagFallback;
        }
        if (*v5)
        {
          uint64_t v26 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          uint64_t v26 = sub_10003562C(v5);
          TagFallback = (char *)v36;
        }
        int v27 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v26, (google::protobuf::internal *)TagFallback);
LABEL_57:
        int v36 = v27;
        if (!v27) {
          return 0;
        }
LABEL_65:
        int v19 = 2;
LABEL_66:
        if (v19 != 2) {
          return 0;
        }
        break;
    }
  }
  return v36;
}

char *sub_100152704(uint64_t a1, google::protobuf::Struct *a2, google::protobuf::internal *this)
{
  unsigned int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = (char *)this + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = (char *)google::protobuf::Struct::_InternalParse(a2, v6, (google::protobuf::internal::ParseContext *)a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *sub_1001527D4(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  unsigned int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = google::protobuf::ListValue::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Value::_InternalSerialize(google::protobuf::Value *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unsigned int v5 = a2;
  int v7 = *((_DWORD *)this + 7);
  if (v7 == 1)
  {
    if (*(void *)a3 > (unint64_t)a2
      || (uint64_t v34 = google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2),
          unsigned int v5 = (google::protobuf::UnknownFieldSet *)v34,
          *((_DWORD *)this + 7) == 1))
    {
      unsigned int v8 = *((_DWORD *)this + 4);
      *(unsigned char *)unsigned int v5 = 8;
      int v9 = (char *)v5 + 1;
      if (v8 > 0x7F)
      {
        unsigned int v10 = v8;
        *int v9 = v8 | 0x80;
        unint64_t v11 = (unint64_t)(int)v8 >> 7;
        if (v10 >> 14)
        {
          unsigned int v5 = (google::protobuf::UnknownFieldSet *)((char *)v5 + 3);
          do
          {
            *((unsigned char *)v5 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unint64_t v12 = v11 >> 7;
            unsigned int v5 = (google::protobuf::UnknownFieldSet *)((char *)v5 + 1);
            unint64_t v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *((unsigned char *)v5 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          *((unsigned char *)v5 + 2) = v11;
          unsigned int v5 = (google::protobuf::UnknownFieldSet *)((char *)v5 + 3);
        }
        goto LABEL_10;
      }
    }
    else
    {
      LOBYTE(v8) = 0;
      *(unsigned char *)uint64_t v34 = 8;
      int v9 = (char *)v34 + 1;
    }
    *int v9 = v8;
    unsigned int v5 = (google::protobuf::UnknownFieldSet *)(v9 + 1);
LABEL_10:
    int v7 = *((_DWORD *)this + 7);
  }
  if (v7 == 2)
  {
    if (*(void *)a3 > (unint64_t)v5
      || (v5 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)v5), uint64_t v14 = 0, *((_DWORD *)this + 7) == 2))
    {
      uint64_t v14 = *((void *)this + 2);
    }
    *(unsigned char *)unsigned int v5 = 17;
    *(void *)((char *)v5 + sub_1000333D0((uint64_t *)this + 1) = v14;
    unsigned int v5 = (google::protobuf::UnknownFieldSet *)((char *)v5 + 9);
    int v7 = *((_DWORD *)this + 7);
  }
  if (v7 == 3)
  {
    unint64_t v15 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 23) < 0)
    {
      unsigned int v17 = *(google::protobuf::internal **)v15;
      BOOL v16 = *(const char **)(v15 + 8);
    }
    else
    {
      BOOL v16 = (const char *)*(unsigned __int8 *)(v15 + 23);
      unsigned int v17 = (google::protobuf::internal *)(*((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL);
    }
    google::protobuf::internal::WireFormatLite::VerifyUtf8String(v17, v16, 1, (google::protobuf::internal *)"google.protobuf.Value.string_value");
    if (*((_DWORD *)this + 7) == 3) {
      BOOL v18 = (const void **)(*((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL);
    }
    else {
      BOOL v18 = (const void **)&google::protobuf::internal::fixed_address_empty_string;
    }
    unsigned int v5 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 3, v18, (unsigned __int8 *)v5);
    int v7 = *((_DWORD *)this + 7);
  }
  if (v7 == 4)
  {
    BOOL v19 = (*(void *)a3 > (unint64_t)v5
        || (unsigned int v5 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)v5), *((_DWORD *)this + 7) == 4))&& *((unsigned char *)this + 16) != 0;
    *(unsigned char *)unsigned int v5 = 32;
    *((unsigned char *)v5 + sub_1000333D0((uint64_t *)this + 1) = v19;
    unsigned int v5 = (google::protobuf::UnknownFieldSet *)((char *)v5 + 2);
    int v7 = *((_DWORD *)this + 7);
  }
  if (v7 == 5)
  {
    if (*(void *)a3 <= (unint64_t)v5) {
      unsigned int v5 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)v5);
    }
    int v20 = (google::protobuf::Struct *)*((void *)this + 2);
    *(unsigned char *)unsigned int v5 = 42;
    unsigned int v21 = *((_DWORD *)v20 + 40);
    if (v21 > 0x7F)
    {
      *((unsigned char *)v5 + sub_1000333D0((uint64_t *)this + 1) = v21 | 0x80;
      unsigned int v23 = v21 >> 7;
      if (v21 >> 14)
      {
        int v22 = (unsigned __int8 *)v5 + 3;
        do
        {
          *(v22 - sub_1000333D0((uint64_t *)this + 1) = v23 | 0x80;
          unsigned int v24 = v23 >> 7;
          ++v22;
          unsigned int v25 = v23 >> 14;
          v23 >>= 7;
        }
        while (v25);
        *(v22 - sub_1000333D0((uint64_t *)this + 1) = v24;
      }
      else
      {
        *((unsigned char *)v5 + 2) = v23;
        int v22 = (unsigned __int8 *)v5 + 3;
      }
    }
    else
    {
      *((unsigned char *)v5 + sub_1000333D0((uint64_t *)this + 1) = v21;
      int v22 = (unsigned __int8 *)v5 + 2;
    }
    unsigned int v5 = google::protobuf::Struct::_InternalSerialize(v20, v22, a3);
    int v7 = *((_DWORD *)this + 7);
  }
  if (v7 == 6)
  {
    if (*(void *)a3 <= (unint64_t)v5) {
      unsigned int v5 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)v5);
    }
    uint64_t v26 = (google::protobuf::ListValue *)*((void *)this + 2);
    *(unsigned char *)unsigned int v5 = 50;
    unsigned int v27 = *((_DWORD *)v26 + 10);
    if (v27 > 0x7F)
    {
      *((unsigned char *)v5 + sub_1000333D0((uint64_t *)this + 1) = v27 | 0x80;
      unsigned int v29 = v27 >> 7;
      if (v27 >> 14)
      {
        unsigned int v28 = (unsigned __int8 *)v5 + 3;
        do
        {
          *(v28 - sub_1000333D0((uint64_t *)this + 1) = v29 | 0x80;
          unsigned int v30 = v29 >> 7;
          ++v28;
          unsigned int v31 = v29 >> 14;
          v29 >>= 7;
        }
        while (v31);
        *(v28 - sub_1000333D0((uint64_t *)this + 1) = v30;
      }
      else
      {
        *((unsigned char *)v5 + 2) = v29;
        unsigned int v28 = (unsigned __int8 *)v5 + 3;
      }
    }
    else
    {
      *((unsigned char *)v5 + sub_1000333D0((uint64_t *)this + 1) = v27;
      unsigned int v28 = (unsigned __int8 *)v5 + 2;
    }
    unsigned int v5 = google::protobuf::ListValue::_InternalSerialize(v26, v28, a3, a4);
  }
  uint64_t v32 = *((void *)this + 1);
  if ((v32 & 1) == 0) {
    return v5;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v32 & 0xFFFFFFFFFFFFFFFELL) + 8), v5, a3, a4);
}

char *google::protobuf::Value::ByteSizeLong(google::protobuf::Value *this)
{
  switch(*((_DWORD *)this + 7))
  {
    case 1:
      int v2 = *((_DWORD *)this + 4);
      if (v2 < 0) {
        uint64_t v3 = 11;
      }
      else {
        uint64_t v3 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      break;
    case 2:
      uint64_t v3 = 9;
      break;
    case 3:
      unint64_t v4 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      int v7 = (char *)(v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6));
      goto LABEL_13;
    case 4:
      uint64_t v3 = 2;
      break;
    case 5:
      unsigned int v8 = google::protobuf::Struct::ByteSizeLong(*((google::protobuf::Struct **)this + 2));
      goto LABEL_12;
    case 6:
      unsigned int v8 = google::protobuf::ListValue::ByteSizeLong(*((google::protobuf::ListValue **)this + 2));
LABEL_12:
      int v7 = &v8[(9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6];
LABEL_13:
      uint64_t v3 = (uint64_t)(v7 + 1);
      break;
    default:
      uint64_t v3 = 0;
      break;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Value *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v3, (_DWORD *)this + 6);
  }
  else
  {
    *((_DWORD *)this + 6) = v3;
    return (char *)v3;
  }
}

void google::protobuf::Value::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::Value::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::Value::MergeFrom(std::string *this, const google::protobuf::Value *a2)
{
  uint64_t v3 = (uint64_t)this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  switch(*((_DWORD *)a2 + 7))
  {
    case 1:
      int v6 = *((_DWORD *)a2 + 4);
      if (*(_DWORD *)(v3 + 28) != 1)
      {
        this = (std::string *)google::protobuf::Value::clear_kind((uint64_t *)v3);
        *(_DWORD *)(v3 + 28) = 1;
      }
      *(_DWORD *)(v3 + 16) = v6;
      return this;
    case 2:
      uint64_t v7 = *((void *)a2 + 2);
      if (*(_DWORD *)(v3 + 28) != 2)
      {
        this = (std::string *)google::protobuf::Value::clear_kind((uint64_t *)v3);
        *(_DWORD *)(v3 + 28) = 2;
      }
      *(void *)(v3 + 16) = v7;
      return this;
    case 3:
      unint64_t v8 = *((void *)a2 + 2) & 0xFFFFFFFFFFFFFFFELL;
      if (*(_DWORD *)(v3 + 28) != 3)
      {
        google::protobuf::Value::clear_kind((uint64_t *)v3);
        *(_DWORD *)(v3 + 28) = 3;
        *(void *)(v3 + 16) = &google::protobuf::internal::fixed_address_empty_string;
      }
      int v9 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
      if (*p_size) {
        int v9 = *(google::protobuf::Arena **)v9;
      }
      return google::protobuf::internal::ArenaStringPtr::Set((std::string **)(v3 + 16), v8, v9);
    case 4:
      char v10 = *((unsigned char *)a2 + 16);
      if (*(_DWORD *)(v3 + 28) != 4)
      {
        this = (std::string *)google::protobuf::Value::clear_kind((uint64_t *)v3);
        *(_DWORD *)(v3 + 28) = 4;
      }
      *(unsigned char *)(v3 + 16) = v10;
      return this;
    case 5:
      if (*(_DWORD *)(v3 + 28) == 5)
      {
        uint64_t v11 = *(void *)(v3 + 16);
LABEL_27:
        unint64_t v15 = (void *)*((void *)a2 + 2);
        goto LABEL_33;
      }
      google::protobuf::Value::clear_kind((uint64_t *)v3);
      *(_DWORD *)(v3 + 28) = 5;
      uint64_t v13 = *(void *)(v3 + 8);
      uint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFELL);
      if (v13) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Struct>(v14);
      *(void *)(v3 + 16) = v11;
      if (*((_DWORD *)a2 + 7) == 5) {
        goto LABEL_27;
      }
      unint64_t v15 = &google::protobuf::_Struct_default_instance_;
LABEL_33:
      uint64_t v19 = v15[1];
      if (v19) {
        sub_1000357D4((unint64_t *)(v11 + 8), (const google::protobuf::UnknownFieldSet *)((v19 & 0xFFFFFFFFFFFFFFFELL) + 8));
      }
      return (std::string *)sub_100151400(v11 + 16, v15 + 2);
    case 6:
      if (*(_DWORD *)(v3 + 28) == 6)
      {
        uint64_t v12 = *(void *)(v3 + 16);
LABEL_31:
        BOOL v18 = (const google::protobuf::ListValue *)*((void *)a2 + 2);
        goto LABEL_39;
      }
      google::protobuf::Value::clear_kind((uint64_t *)v3);
      *(_DWORD *)(v3 + 28) = 6;
      uint64_t v16 = *(void *)(v3 + 8);
      unsigned int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFELL);
      if (v16) {
        unsigned int v17 = (void *)*v17;
      }
      uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ListValue>(v17);
      *(void *)(v3 + 16) = v12;
      if (*((_DWORD *)a2 + 7) == 6) {
        goto LABEL_31;
      }
      BOOL v18 = (const google::protobuf::ListValue *)&google::protobuf::_ListValue_default_instance_;
LABEL_39:
      return (std::string *)google::protobuf::ListValue::MergeFrom(v12, v18);
    default:
      return this;
  }
}

void google::protobuf::Value::CopyFrom(google::protobuf::Value *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::Value::Clear(this);
    google::protobuf::Value::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::Value::IsInitialized(google::protobuf::Value *this)
{
  return 1;
}

uint64_t google::protobuf::Value::GetMetadata(google::protobuf::Value *this)
{
  return off_1001EB1A0[4];
}

uint64_t google::protobuf::ListValue::ListValue(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001D2D98;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + ++*(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto);
  }
  return a1;
}

void sub_1001531B4(_Unwind_Exception *a1)
{
  sub_100157AEC(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::ListValue::~ListValue(google::protobuf::ListValue *this)
{
}

{
  uint64_t vars8;

  google::protobuf::ListValue::~ListValue(this);
  operator delete();
}

uint64_t google::protobuf::ListValue::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = a2;
  return this;
}

uint64_t *google::protobuf::ListValue::Clear(uint64_t *this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::Value **)(this[4] + 8);
    do
    {
      unint64_t v4 = *v3++;
      this = google::protobuf::Value::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return (uint64_t *)sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *google::protobuf::ListValue::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v23 = a2;
  if ((sub_1000355B8(a3, &v23, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v23 + 1);
      unsigned int v7 = *(unsigned __int8 *)v23;
      if ((*(char *)v23 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v23, (const char *)(v8 - 128));
      unsigned int v23 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v21;
LABEL_7:
      if (v7 == 10)
      {
        unint64_t v11 = (unint64_t)v6 - 1;
        while (1)
        {
          uint64_t v12 = (google::protobuf::internal *)(v11 + 1);
          unsigned int v23 = (google::protobuf::internal *)(v11 + 1);
          uint64_t v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              uint64_t v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            int *v13 = v15 + 1;
            uint64_t v17 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Value>(*(void *)(a1 + 16));
            LODWORD(v16) = v17;
            uint64_t v18 = *(void *)(a1 + 32);
            uint64_t v19 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v19 + 1;
            *(void *)(v18 + 8 * v19 + 8) = v17;
            uint64_t v12 = v23;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          unint64_t v11 = sub_1001534A4(a3, v16, v12);
          unsigned int v23 = (google::protobuf::internal *)v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = v7 - 1;
        return v23;
      }
      if (*v5)
      {
        char v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        char v10 = sub_10003562C((unint64_t *)(a1 + 8));
        char v6 = v23;
      }
      unsigned int v23 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v23) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8(a3, &v23, *(_DWORD *)(a3 + 92))) {
        return v23;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v23 + 2);
LABEL_6:
    unsigned int v23 = v6;
    goto LABEL_7;
  }
  return v23;
}

google::protobuf::internal *sub_1001534A4(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = google::protobuf::Value::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *google::protobuf::ListValue::_InternalSerialize(google::protobuf::ListValue *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v8 = *(google::protobuf::Value **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 6);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)google::protobuf::Value::_InternalSerialize(v8, (google::protobuf::UnknownFieldSet *)v10, a3);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::ListValue::ByteSizeLong(google::protobuf::ListValue *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    unint64_t v4 = (google::protobuf::Value **)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = google::protobuf::Value::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::ListValue *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void google::protobuf::ListValue::MergeFrom(google::protobuf::ListValue *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::ListValue::MergeFrom((uint64_t)this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void google::protobuf::ListValue::CopyFrom(google::protobuf::ListValue *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::ListValue::Clear((uint64_t *)this);
    google::protobuf::ListValue::MergeFrom(this, a2);
  }
}

uint64_t google::protobuf::ListValue::IsInitialized(google::protobuf::ListValue *this)
{
  return 1;
}

uint64_t google::protobuf::ListValue::GetMetadata(google::protobuf::ListValue *this)
{
  return off_1001EB1A0[6];
}

void *sub_100153888(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100157C2C(this, 1);
  result[1] = this;
  result[2] = &google::protobuf::internal::fixed_address_empty_string;
  result[3] = 0;
  *((_DWORD *)result + 8) = 0;
  result[5] = this;
  void *result = off_1001D2B78;
  return result;
}

google::protobuf::Struct *sub_10015390C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = (google::protobuf::Struct *)sub_100157D08(a1, 1);
  google::protobuf::Struct::Struct(v2, a1);
  return v2;
}

void sub_100153970()
{
}

void *sub_100153998(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_100157DC4(a1);
}

void sub_100153A38()
{
}

void *sub_100153A60(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100157EF4(a1, 1);
  google::protobuf::ListValue::ListValue((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_100153AC4()
{
}

uint64_t sub_100153AE8()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Struct>(0);
}

uint64_t sub_100153AF0(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Struct>(a2);
}

uint64_t sub_100153AF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 160);
}

uint64_t sub_100153B00()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Value>(0);
}

uint64_t sub_100153B08(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Value>(a2);
}

uint64_t sub_100153B10()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ListValue>(0);
}

uint64_t sub_100153B18(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ListValue>(a2);
}

void sub_100153B24(void *a1)
{
  sub_1001561D4(a1);
  operator delete();
}

void *sub_100153B5C@<X0>(void *a1@<X8>)
{
  return sub_1000BBA84(a1, "");
}

void sub_100153B6C()
{
}

uint64_t sub_100153BCC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Struct_FieldsEntry_DoNotUse>(a2);
}

uint64_t *sub_100153BD4(uint64_t a1)
{
  google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)(a1 + 16));
  BOOL result = *(uint64_t **)(a1 + 24);
  if (result) {
    BOOL result = google::protobuf::Value::Clear((google::protobuf::Value *)result);
  }
  *(_DWORD *)(a1 + 32) &= 0xFFFFFFFC;
  return result;
}

BOOL sub_100153C14(uint64_t a1)
{
  return *(void *)(a1 + 24) != 0;
}

uint64_t sub_100153C28(uint64_t a1)
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  int v3 = *(unsigned __int8 *)(v2 + 23);
  if ((v3 & 0x80u) != 0) {
    int v3 = *(_DWORD *)(v2 + 8);
  }
  int v4 = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6);
  uint64_t v5 = (google::protobuf::Value *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 168))(a1);
  int v6 = google::protobuf::Value::ByteSizeLong(v5);
  return (uint64_t)&v6[v4 + 2 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6)];
}

uint64_t sub_100153CE8(_DWORD *a1)
{
  int v2 = a1[8];
  if (v2)
  {
    uint64_t v6 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 160))(a1);
    int v7 = *(unsigned __int8 *)(v6 + 23);
    if ((v7 & 0x80u) != 0) {
      int v7 = *(_DWORD *)(v6 + 8);
    }
    unsigned int v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((a1[8] & 2) != 0) {
      goto LABEL_3;
    }
LABEL_7:
    unsigned int v5 = 0;
    return v5 + v3;
  }
  unsigned int v3 = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v4 = (*(uint64_t (**)(_DWORD *))(*(void *)a1 + 168))(a1);
  unsigned int v5 = *(_DWORD *)(v4 + 24) + ((9 * (__clz(*(_DWORD *)(v4 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return v5 + v3;
}

google::protobuf::internal *sub_100153DCC(uint64_t a1, google::protobuf::internal *a2, google::protobuf::internal::EpsCopyInputStream *a3)
{
  unsigned int v23 = a2;
  if ((sub_1000355B8((uint64_t)a3, &v23, *((_DWORD *)a3 + 23)) & 1) == 0)
  {
    while (1)
    {
      TagFallback = (google::protobuf::internal *)((char *)v23 + 1);
      LODWORD(v6) = *(unsigned __int8 *)v23;
      if ((*(char *)v23 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      uint64_t v6 = (const char *)(v6 + (*(unsigned __int8 *)TagFallback << 7) - 128);
      if ((*(char *)TagFallback & 0x80000000) == 0) {
        break;
      }
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v23, v6);
      unsigned int v23 = TagFallback;
      if (!TagFallback) {
        return TagFallback;
      }
LABEL_7:
      if (v6 == 10)
      {
        *(_DWORD *)(a1 + 32) |= 1u;
        uint64_t v9 = *(void *)(a1 + 8);
        int v10 = (google::protobuf::Arena *)(v9 & 0xFFFFFFFFFFFFFFFELL);
        if (v9) {
          int v10 = *(google::protobuf::Arena **)v10;
        }
        unsigned int v11 = google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 16), v10);
        int v12 = *(unsigned __int8 *)v23;
        if ((v12 & 0x80) == 0)
        {
          unsigned int v13 = (char *)v23 + 1;
          goto LABEL_29;
        }
        SizeFallback = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(v23, (const char *)*(unsigned __int8 *)v23);
        if (SizeFallback)
        {
          unsigned int v13 = (std::string::value_type *)SizeFallback;
          int v12 = v18;
LABEL_29:
          SizeFallback = sub_100109C74((uint64_t)a3, v13, v12, (std::string *)v11);
        }
        unsigned int v23 = SizeFallback;
        if (*((char *)v11 + 23) < 0)
        {
          int v20 = v11;
          unsigned int v11 = (uint64_t *)*v11;
          uint64_t v19 = (const char *)v20[1];
        }
        else
        {
          uint64_t v19 = (const char *)*((unsigned __int8 *)v11 + 23);
        }
        if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v11, v19, 0, (google::protobuf::internal *)"google.protobuf.Struct.FieldsEntry.key")|| v23 == 0)
        {
          return 0;
        }
        goto LABEL_37;
      }
      if (v6 == 18)
      {
        *(_DWORD *)(a1 + 32) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        int v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFELL);
        if (v14) {
          int v15 = (void *)*v15;
        }
        uint64_t v16 = *(void *)(a1 + 24);
        if (!v16)
        {
          uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Value>(v15);
          *(void *)(a1 + 24) = v16;
          TagFallback = v23;
        }
        uint64_t v8 = sub_1001534A4((uint64_t)a3, v16, TagFallback);
      }
      else
      {
        if (v6) {
          BOOL v7 = (v6 & 7) == 4;
        }
        else {
          BOOL v7 = 1;
        }
        if (v7)
        {
          *((_DWORD *)a3 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = v6 - 1;
          return TagFallback;
        }
        uint64_t v8 = (google::protobuf::internal *)google::protobuf::internal::UnknownFieldParse(v6, 0, TagFallback, a3);
      }
      unsigned int v23 = v8;
      if (!v8) {
        return 0;
      }
LABEL_37:
      if (sub_1000355B8((uint64_t)a3, &v23, *((_DWORD *)a3 + 23))) {
        return v23;
      }
    }
    TagFallback = (google::protobuf::internal *)((char *)v23 + 2);
LABEL_6:
    unsigned int v23 = TagFallback;
    goto LABEL_7;
  }
  return v23;
}

const google::protobuf::UnknownFieldSet *sub_100153FC0(uint64_t a1, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  BOOL v7 = sub_1000E4244(a3, 1, v6, a2);
  uint64_t v9 = (google::protobuf::Value *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 168))(a1);
  if (*(void *)a3 <= (unint64_t)v7) {
    BOOL v7 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v7);
  }
  *BOOL v7 = 18;
  unsigned int v10 = *((_DWORD *)v9 + 6);
  if (v10 > 0x7F)
  {
    v7[1] = v10 | 0x80;
    unsigned int v12 = v10 >> 7;
    if (v10 >> 14)
    {
      unsigned int v11 = (google::protobuf::UnknownFieldSet *)(v7 + 3);
      do
      {
        *((unsigned char *)v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unsigned int v13 = v12 >> 7;
        unsigned int v11 = (google::protobuf::UnknownFieldSet *)((char *)v11 + 1);
        unsigned int v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
      *((unsigned char *)v11 - sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      v7[2] = v12;
      unsigned int v11 = (google::protobuf::UnknownFieldSet *)(v7 + 3);
    }
  }
  else
  {
    v7[1] = v10;
    unsigned int v11 = (google::protobuf::UnknownFieldSet *)(v7 + 2);
  }
  return google::protobuf::Value::_InternalSerialize(v9, v11, a3, v8);
}

uint64_t sub_100154118(uint64_t a1)
{
  return google::protobuf::Message::SpaceUsedLong(*(google::protobuf::Message **)(a1 + 24)) + 56;
}

unint64_t sub_100154138(uint64_t a1)
{
  return *(void *)(a1 + 16) & 0xFFFFFFFFFFFFFFFELL;
}

uint64_t *sub_100154144(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    return *(uint64_t **)(a1 + 24);
  }
  else {
    return &google::protobuf::_Value_default_instance_;
  }
}

uint64_t sub_10015415C(uint64_t a1)
{
  *(void *)a1 = off_1001D2F98;
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned int v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2)
  {
    if (*v3) {
      return a1;
    }
  }
  else if (v3)
  {
    return a1;
  }
  sub_1001541E4((uint64_t **)(a1 + 16));
  uint64_t v4 = *(google::protobuf::Value **)(a1 + 24);
  if (v4)
  {
    google::protobuf::Value::~Value(v4);
    operator delete();
  }
  return a1;
}

uint64_t **sub_1001541E4(uint64_t **result)
{
  uint64_t v1 = *result;
  if (*result != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*((char *)v1 + 23) < 0) {
      operator delete((void *)*v1);
    }
    operator delete();
  }
  return result;
}

void sub_100154254(google::protobuf::internal::MapFieldBase *a1)
{
  *(void *)a1 = off_1001D3058;
  sub_100154D74((uint64_t)a1 + 96);
  google::protobuf::internal::MapFieldBase::~MapFieldBase(a1);
  operator delete();
}

BOOL sub_1001542BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (void *)(a1 + 96);
  uint64_t v3 = sub_100110C64(a2);
  if (*(char *)(v3 + 23) < 0)
  {
    sub_1000BB834(__p, *(void **)v3, *(void *)(v3 + 8));
  }
  else
  {
    long long v4 = *(_OWORD *)v3;
    uint64_t v8 = *(void *)(v3 + 16);
    *(_OWORD *)std::string __p = v4;
  }
  sub_100154F6C(v2, (unsigned __int8 *)__p, 0, v9);
  uint64_t v5 = v9[0];
  if (SHIBYTE(v8) < 0) {
    operator delete(__p[0]);
  }
  return v5 != 0;
}

void sub_100154344(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100154360(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 168))(a1);
  uint64_t v6 = sub_100110C64(a2);
  if (*(char *)(v6 + 23) < 0)
  {
    sub_1000BB834(__p, *(void **)v6, *(void *)(v6 + 8));
  }
  else
  {
    long long v7 = *(_OWORD *)v6;
    uint64_t v12 = *(void *)(v6 + 16);
    *(_OWORD *)std::string __p = v7;
  }
  sub_100154F6C(v5, (unsigned __int8 *)__p, 0, v13);
  uint64_t v8 = v13[0];
  uint64_t v9 = v13[0];
  if (!v13[0])
  {
    sub_100155194((uint64_t)v5, (unsigned __int8 *)__p, (uint64_t)v13);
    uint64_t v9 = v13[0];
  }
  *a3 = v9 + 24;
  if (SHIBYTE(v12) < 0) {
    operator delete(__p[0]);
  }
  return v8 == 0;
}

void sub_100154440(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_10015445C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  uint64_t v6 = sub_100110C64(a2);
  if (*(char *)(v6 + 23) < 0)
  {
    sub_1000BB834(__p, *(void **)v6, *(void *)(v6 + 8));
  }
  else
  {
    long long v7 = *(_OWORD *)v6;
    uint64_t v11 = *(void *)(v6 + 16);
    *(_OWORD *)std::string __p = v7;
  }
  sub_100154F6C(v5, (unsigned __int8 *)__p, 0, v12);
  uint64_t v8 = v12[0];
  if (v12[0]) {
    *a3 = v12[0] + 24;
  }
  if (SHIBYTE(v11) < 0) {
    operator delete(__p[0]);
  }
  return v8 != 0;
}

void sub_100154524(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100154540(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100110C64(a2);
  if (*(char *)(v3 + 23) < 0)
  {
    sub_1000BB834(__p, *(void **)v3, *(void *)(v3 + 8));
  }
  else
  {
    long long v4 = *(_OWORD *)v3;
    uint64_t v9 = *(void *)(v3 + 16);
    *(_OWORD *)std::string __p = v4;
  }
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 168))(a1);
  uint64_t v6 = sub_100155BAC(v5, (unsigned __int8 *)__p);
  if (SHIBYTE(v9) < 0) {
    operator delete(__p[0]);
  }
  return v6 != 0;
}

void sub_1001545E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100154600(uint64_t a1, void **a2)
{
  long long v4 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  unint64_t v5 = v4[3];
  unint64_t v6 = v4[1];
  if (v6 <= v5)
  {
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v7 = v4[4];
    while (1)
    {
      uint64_t v8 = *(void *)(v7 + 8 * v5);
      if (v8) {
        break;
      }
      if (v6 == ++v5)
      {
        uint64_t v8 = 0;
        unint64_t v5 = v4[1];
        goto LABEL_9;
      }
    }
    if (v8 == *(void *)(v7 + 8 * (v5 ^ 1))) {
      uint64_t v8 = *(void *)(*(void *)v8 + 40);
    }
  }
LABEL_9:
  uint64_t v9 = *a2;
  *uint64_t v9 = v8;
  v9[1] = v4;
  v9[2] = v5;
  unsigned int v10 = *(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 176);
  return v10(a1, a2);
}

uint64_t sub_1001546E0(uint64_t a1, void **a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a1);
  long long v4 = *a2;
  v4[1] = 0;
  std::string v4[2] = 0;
  void *v4 = 0;
  return result;
}

uint64_t sub_100154730(unsigned int *a1)
{
  return a1[24];
}

uint64_t sub_100154758(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = 8 * *(int *)(v2 + 12);
    long long v4 = *(int **)(v2 + 16);
    if (v4)
    {
      if (*v4 >= 1)
      {
        uint64_t v5 = 0;
        do
        {
          v3 += (*(uint64_t (**)(void))(**(void **)&v4[2 * v5 + 2] + 136))(*(void *)&v4[2 * v5 + 2]);
          ++v5;
          long long v4 = *(int **)(v2 + 16);
        }
        while (v5 < *v4);
      }
      v3 += 8;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  return sub_100155EDC(a1 + 96) + v3;
}

void *sub_100154804(void *result)
{
  uint64_t v1 = result;
  uint64_t v2 = (void *)result[2];
  if (!v2)
  {
    uint64_t v3 = (google::protobuf::Arena *)result[1];
    if (!v3) {
      operator new();
    }
    uint64_t result = sub_100112108(v3);
    uint64_t v2 = result;
    v1[2] = result;
  }
  uint64_t v4 = *((unsigned int *)v2 + 2);
  if ((int)v4 >= 1)
  {
    uint64_t v5 = (uint64_t *)(v2[2] + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t result = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v6 + 40))(v6);
      --v4;
    }
    while (v4);
    *((_DWORD *)v2 + sub_100157AEC((void *)this + 2) = 0;
  }
  unint64_t v7 = v1[15];
  unint64_t v8 = v1[13];
  if (v8 > v7)
  {
    uint64_t v9 = v1[16];
    while (1)
    {
      uint64_t v10 = *(void *)(v9 + 8 * v7);
      if (v10) {
        break;
      }
      if (v8 == ++v7) {
        return result;
      }
    }
    if (v10 == *(void *)(v9 + 8 * (v7 ^ 1)))
    {
      int v20 = *(const std::string **)(*(void *)v10 + 40);
      unsigned int v21 = v1 + 12;
      unint64_t v22 = v7;
      if (!v20) {
        return result;
      }
    }
    else
    {
      int v20 = *(const std::string **)(v9 + 8 * v7);
      unsigned int v21 = v1 + 12;
      unint64_t v22 = v7;
    }
    do
    {
      uint64_t v11 = (*(uint64_t (**)(void))(google::protobuf::_Struct_FieldsEntry_DoNotUse_default_instance_ + 32))();
      sub_100156090((unsigned int *)v2, (std::string *)v11);
      uint64_t v12 = v20;
      *(_DWORD *)(v11 + 32) |= 1u;
      uint64_t v13 = *(void *)(v11 + 8);
      unsigned int v14 = (google::protobuf::Arena *)(v13 & 0xFFFFFFFFFFFFFFFELL);
      if (v13) {
        unsigned int v14 = *(google::protobuf::Arena **)v14;
      }
      int v15 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(v11 + 16), v14);
      std::string::operator=(v15, v12);
      uint64_t v16 = v20;
      *(_DWORD *)(v11 + 32) |= 2u;
      uint64_t v17 = *(void *)(v11 + 8);
      int v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFELL);
      if (v17) {
        int v18 = (void *)*v18;
      }
      uint64_t v19 = *(google::protobuf::Value **)(v11 + 24);
      if (!v19)
      {
        uint64_t v19 = (google::protobuf::Value *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Value>(v18);
        *(void *)(v11 + 24) = v19;
      }
      if (&v16[1] != (const std::string *)v19)
      {
        google::protobuf::Value::Clear(v19);
        google::protobuf::Value::MergeFrom((std::string *)v19, (const google::protobuf::Value *)&v16[1]);
      }
      uint64_t result = sub_100155D28(&v20);
    }
    while (v20);
  }
  return result;
}

void sub_100154A08(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v13, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Binaries/iWorkXPC/install/Root/include/google/protobuf/map_field_inl.h", 336);
    uint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v13, "CHECK failed: this->MapFieldBase::repeated_field_ != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v12, (const char **)&v3->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v13[0].__r_.__value_.__l.__data_);
  }
  uint64_t v4 = a1 + 96;
  sub_100154DC8(v4);
  if (*(_DWORD *)(v2 + 8))
  {
    uint64_t v5 = *(void *)(v2 + 16);
    if (v5) {
      uint64_t v6 = v5 + 8;
    }
    else {
      uint64_t v6 = 0;
    }
    do
    {
      unint64_t v7 = (const google::protobuf::Value *)(*(uint64_t (**)(void))(**(void **)v6 + 168))();
      unint64_t v8 = (unsigned __int8 *)(*(uint64_t (**)(void))(**(void **)v6 + 160))();
      sub_100155194(v4, v8, (uint64_t)v13);
      uint64_t v9 = (std::string *)(v13[0].__r_.__value_.__r.__words[0] + 24);
      if (v7 != (const google::protobuf::Value *)(v13[0].__r_.__value_.__r.__words[0] + 24))
      {
        google::protobuf::Value::Clear((google::protobuf::Value *)(v13[0].__r_.__value_.__r.__words[0] + 24));
        google::protobuf::Value::MergeFrom(v9, v7);
      }
      v6 += 8;
      uint64_t v10 = *(void *)(v2 + 16);
      if (v10) {
        uint64_t v11 = v10 + 8;
      }
      else {
        uint64_t v11 = 0;
      }
    }
    while (v6 != v11 + 8 * *(int *)(v2 + 8));
  }
}

void sub_100154B54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100154B6C(uint64_t a1, uint64_t *a2, _DWORD *a3)
{
  uint64_t v6 = *a2;
  long long v7 = *(_OWORD *)*(void *)a3;
  *(void *)(v6 + 16) = *(void *)(*(void *)a3 + 16);
  *(_OWORD *)uint64_t v6 = v7;
  uint64_t v8 = (uint64_t)(a2 + 2);
  int v9 = sub_100111CBC((uint64_t)(a3 + 4));
  sub_1001120AC(v8, v9);
  *((_DWORD *)a2 + 14) = a3[14];
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a1 + 176);
  return v10(a1, a2);
}

uint64_t sub_100154C0C(uint64_t a1, void **a2)
{
  sub_100155D28(*a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, void **))(*(void *)a1 + 176);
  return v4(a1, a2);
}

char *sub_100154C70(google::protobuf::internal::MapFieldBase *a1)
{
  return (char *)a1 + 96;
}

char *sub_100154C98(google::protobuf::internal::MapFieldBase *a1)
{
  return (char *)a1 + 96;
}

void sub_100154CCC(uint64_t a1, long long ***a2)
{
  uint64_t v2 = **a2;
  if (v2)
  {
    uint64_t v4 = (uint64_t)(a2 + 2);
    if (*((char *)v2 + 23) < 0)
    {
      sub_1000BB834(__p, *(void **)v2, *((void *)v2 + 1));
    }
    else
    {
      long long v5 = *v2;
      uint64_t v7 = *((void *)v2 + 2);
      *(_OWORD *)std::string __p = v5;
    }
    sub_100111A60(v4, (__n128 *)__p);
    if (SHIBYTE(v7) < 0) {
      operator delete(__p[0]);
    }
    a2[6] = (long long **)v2 + 3;
  }
}

void sub_100154D58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_100154D74(uint64_t a1)
{
  if (!*(void *)(a1 + 40) && *(void *)(a1 + 8) != 1)
  {
    sub_100154DC8(a1);
    if (!*(void *)(a1 + 40)) {
      operator delete(*(void **)(a1 + 32));
    }
  }
  return a1;
}

uint64_t sub_100154DC8(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 8);
  if (v2)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = v1[4];
      long long v5 = *(uint64_t ***)(v4 + 8 * v3);
      if (v5)
      {
        if (v5 == *(uint64_t ***)(v4 + 8 * (v3 ^ 1)))
        {
          uint64_t v7 = v3 + 1;
          *(void *)(v4 + 8 * (v3 + 1)) = 0;
          *(void *)(v1[4] + 8 * v3) = 0;
          uint64_t v8 = *v5;
          do
          {
            uint64_t v9 = v8[5];
            uint64_t v10 = (uint64_t *)v8[1];
            uint64_t v11 = v8;
            if (v10)
            {
              do
              {
                char v12 = v10;
                uint64_t v10 = (uint64_t *)*v10;
              }
              while (v10);
            }
            else
            {
              do
              {
                char v12 = (uint64_t *)v11[2];
                BOOL v13 = *v12 == (void)v11;
                uint64_t v11 = v12;
              }
              while (!v13);
            }
            sub_100112478((uint64_t)v5, v8);
            sub_100154ED4((uint64_t)v1, v9);
            uint64_t v8 = v12;
          }
          while (v12 != (uint64_t *)(v5 + 1));
          uint64_t result = sub_100112410((uint64_t)v1, (uint64_t)v5);
          goto LABEL_16;
        }
        *(void *)(v4 + 8 * v3) = 0;
        do
        {
          uint64_t v6 = (uint64_t **)v5[7];
          uint64_t result = sub_100154ED4((uint64_t)v1, (uint64_t)v5);
          long long v5 = v6;
        }
        while (v6);
      }
      uint64_t v7 = v3;
LABEL_16:
      uint64_t v3 = v7 + 1;
      unint64_t v2 = v1[1];
    }
    while (v7 + 1 < v2);
  }
  void *v1 = 0;
  v1[3] = v2;
  return result;
}

uint64_t sub_100154ED4(uint64_t result, uint64_t a2)
{
  if (a2 && !*(void *)(result + 40))
  {
    sub_100154F30(a2);
    operator delete();
  }
  return result;
}

uint64_t sub_100154F30(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

unint64_t sub_100154F6C@<X0>(void *a1@<X0>, unsigned __int8 *a2@<X1>, unint64_t *a3@<X2>, void *a4@<X8>)
{
  unint64_t result = sub_1000DA310((uint64_t)a1, (uint64_t)a2);
  unint64_t v9 = (a1[1] - 1) & ((0x9E3779B97F4A7C15 * (a1[2] ^ result)) >> 32);
  uint64_t v10 = a1[4];
  uint64_t v11 = *(void *)(v10 + 8 * v9);
  if (v11)
  {
    if (v11 != *(void *)(v10 + 8 * (v9 ^ 1)))
    {
      while (1)
      {
        unint64_t result = sub_100155060((unsigned __int8 *)v11, a2);
        if (result) {
          break;
        }
        uint64_t v11 = *(void *)(v11 + 56);
        if (!v11) {
          goto LABEL_10;
        }
      }
      *a4 = v11;
      goto LABEL_12;
    }
    unint64_t v9 = v9 & 0xFFFFFFFE;
    uint64_t v12 = *(void *)(v10 + 8 * v9);
    BOOL v13 = (const void **)a2;
    unint64_t result = sub_100155104(v12, &v13);
    if (v12 + 8 != result)
    {
      if (a3) {
        *a3 = result;
      }
      *a4 = *(void *)(result + 40);
LABEL_12:
      a4[1] = a1;
      a4[2] = v9;
      goto LABEL_13;
    }
  }
LABEL_10:
  *a4 = 0;
  a4[1] = 0;
  a4[2] = 0;
LABEL_13:
  a4[3] = v9;
  return result;
}

BOOL sub_100155060(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) == 0;
  }
  if (!a1[23]) {
    return 1;
  }
  uint64_t v6 = v2 - 1;
  do
  {
    int v8 = *a1++;
    int v7 = v8;
    int v10 = *a2++;
    int v9 = v10;
    BOOL v12 = v6-- != 0;
    BOOL v13 = v7 == v9;
    BOOL v14 = v7 == v9;
  }
  while (v13 && v12);
  return v14;
}

uint64_t sub_100155104(uint64_t a1, const void ***a2)
{
  uint64_t v2 = a1 + 8;
  uint64_t v3 = *(void *)(a1 + 8);
  if (!v3) {
    return v2;
  }
  uint64_t v5 = a1 + 24;
  uint64_t v6 = a1 + 8;
  do
  {
    BOOL v7 = sub_1000D926C(v5, *(const void ***)(v3 + 32), *a2);
    int v8 = (uint64_t *)(v3 + 8);
    if (!v7)
    {
      int v8 = (uint64_t *)v3;
      uint64_t v6 = v3;
    }
    uint64_t v3 = *v8;
  }
  while (*v8);
  if (v6 == v2 || sub_1000D926C(v5, *a2, *(const void ***)(v6 + 32))) {
    return v2;
  }
  return v6;
}

double sub_100155194@<D0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  sub_100154F6C((void *)a1, a2, 0, &v15);
  if ((void)v15)
  {
    uint64_t v7 = *((void *)&v15 + 1);
    uint64_t v8 = v16;
    *(void *)a3 = v15;
    *(void *)(a3 + 8) = v7;
    *(void *)(a3 + 16) = v8;
    *(unsigned char *)(a3 + 24) = 0;
  }
  else
  {
    if (sub_100155334(a1, *(void *)a1 + 1))
    {
      sub_100154F6C((void *)a1, a2, 0, &v12);
      long long v15 = v12;
      uint64_t v9 = v14;
      uint64_t v16 = v13;
      uint64_t v17 = v14;
    }
    else
    {
      uint64_t v9 = v17;
    }
    if (!*(void *)(a1 + 40)) {
      operator new();
    }
    int v10 = sub_1001553CC(a1, 1uLL);
    sub_1001553E4(v10, *(char **)(a1 + 40), (long long *)a2);
    uint64_t v11 = *(void *)(a1 + 40);
    v10[3] = off_1001D2CE8;
    v10[4] = v11;
    *((_DWORD *)v10 + 1sub_100157AEC((void *)this + 2) = 0;
    if (atomic_load_explicit(scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto, memory_order_acquire)) {
      google::protobuf::internal::InitSCCImpl(scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto);
    }
    *((_DWORD *)v10 + 13) = 0;
    sub_100155448((uint64_t *)a1, v9, (unint64_t)v10, (unint64_t *)&v12);
    ++*(void *)a1;
    double result = *(double *)&v12;
    *(_OWORD *)a3 = v12;
    *(void *)(a3 + 16) = v13;
    *(unsigned char *)(a3 + 24) = 1;
  }
  return result;
}

void sub_100155310()
{
}

uint64_t sub_100155334(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = ((3 * v2) >> 2) & 0xFFFFFFFFFFFFFFFLL;
  if (v3 <= a2)
  {
    if (v2 <= 0x800000000000000)
    {
      size_t v6 = 2 * v2;
LABEL_16:
      sub_100155548(a1, v6);
      return 1;
    }
  }
  else if (v2 >= 9 && (12 * v2) >> 6 >= a2)
  {
    char v7 = 0;
    do
      ++v7;
    while ((((5 * a2) >> 2) + 1) << v7 < v3);
    size_t v6 = v2 >> v7 <= 8 ? 8 : v2 >> v7;
    if (v6 != v2) {
      goto LABEL_16;
    }
  }
  return 0;
}

void *sub_1001553CC(uint64_t a1, size_t __sz)
{
  unint64_t v2 = *(google::protobuf::Arena **)(a1 + 40);
  size_t v3 = __sz << 6;
  if (v2) {
    return (void *)sub_100113BEC(v2, v3);
  }
  else {
    return operator new(v3);
  }
}

char *sub_1001553E4(void *__dst, char *a2, long long *a3)
{
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000BB834(__dst, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v5 = *a3;
    __dst[2] = *((void *)a3 + 2);
    *(_OWORD *)std::string __dst = v5;
  }
  return sub_100155864(a2, __dst);
}

uint64_t *sub_100155448@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  unint64_t v4 = a3;
  unint64_t v5 = a2;
  size_t v6 = result;
  uint64_t v8 = result[4];
  uint64_t v9 = *(void *)(v8 + 8 * a2);
  if (!v9)
  {
    *(void *)(a3 + 56) = 0;
    *(void *)(v8 + 8 * asub_100157AEC((void *)this + 2) = a3;
    goto LABEL_8;
  }
  if (v9 != *(void *)(v8 + 8 * (a2 ^ 1)))
  {
    unint64_t v10 = 0;
    uint64_t v11 = *(void *)(v8 + 8 * a2);
    do
    {
      ++v10;
      uint64_t v11 = *(void *)(v11 + 56);
    }
    while (v11);
    if (v10 < 8)
    {
      *(void *)(a3 + 56) = v9;
      *(void *)(v8 + 8 * asub_100157AEC((void *)this + 2) = a3;
LABEL_11:
      *a4 = v4;
      a4[1] = (unint64_t)v6;
      a4[2] = v5;
      return result;
    }
    sub_100155880((uint64_t)result, a2);
    *(void *)(v4 + 56) = 0;
    uint64_t v14 = *(uint64_t ***)(v6[4] + 8 * v5);
    v15.n128_u64[0] = v4;
    v15.n128_u64[1] = v4;
    double result = sub_100155A90(v14, (const void ***)&v15, &v15);
    v5 &= ~1uLL;
    unint64_t v4 = result[5];
LABEL_8:
    unint64_t v12 = v6[3];
    if (v5 < v12) {
      unint64_t v12 = v5;
    }
    void v6[3] = v12;
    goto LABEL_11;
  }
  *(void *)(a3 + 56) = 0;
  uint64_t v13 = *(uint64_t ***)(v8 + 8 * a2);
  v15.n128_u64[0] = a3;
  v15.n128_u64[1] = a3;
  double result = sub_100155A90(v13, (const void ***)&v15, &v15);
  *a4 = result[5];
  a4[1] = (unint64_t)v6;
  a4[2] = v5 & 0xFFFFFFFFFFFFFFFELL;
  return result;
}

void sub_100155548(uint64_t a1, size_t a2)
{
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 == 1)
  {
    *(void *)(a1 + 24) = 8;
    *(void *)(a1 + 8) = 8;
    unint64_t v4 = sub_100113BD4(a1, 8uLL);
    _OWORD *v4 = 0u;
    v4[1] = 0u;
    std::string v4[2] = 0u;
    v4[3] = 0u;
    *(void *)(a1 + ++*(_DWORD *)(result + 32) = v4;
    *(void *)(a1 + 16) = (unint64_t)a1 >> 12;
  }
  else
  {
    size_t v6 = *(void **)(a1 + 32);
    *(void *)(a1 + 8) = a2;
    char v7 = sub_100113BD4(a1, a2);
    bzero(v7, 8 * a2);
    unint64_t v8 = *(void *)(a1 + 24);
    *(void *)(a1 + 24) = *(void *)(a1 + 8);
    *(void *)(a1 + ++*(_DWORD *)(result + 32) = v7;
    while (v8 < v3)
    {
      uint64_t v9 = v6[v8];
      if (v9)
      {
        if (v9 == v6[v8 ^ 1]) {
          sub_1001556E8((uint64_t *)a1, (uint64_t)v6, v8++);
        }
        else {
          sub_100155668((uint64_t *)a1, (uint64_t)v6, v8);
        }
      }
      ++v8;
    }
    if (!*(void *)(a1 + 40))
    {
      operator delete(v6);
    }
  }
}

uint64_t *sub_100155668(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = *(void *)(a2 + 8 * a3);
  do
  {
    unint64_t v5 = *(void *)(v4 + 56);
    unint64_t v6 = sub_1000DA310((uint64_t)a1, v4);
    double result = sub_100155448(a1, (a1[1] - 1) & ((0x9E3779B97F4A7C15 * (a1[2] ^ v6)) >> 32), v4, v8);
    unint64_t v4 = v5;
  }
  while (v5);
  return result;
}

uint64_t sub_1001556E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = *(void **)(a2 + 8 * a3);
  unint64_t v5 = (void *)*v4;
  do
  {
    unint64_t v6 = sub_1000DA310((uint64_t)a1, v5[4]);
    sub_100155448(a1, (a1[1] - 1) & ((0x9E3779B97F4A7C15 * (a1[2] ^ v6)) >> 32), v5[5], v11);
    char v7 = (void *)v5[1];
    if (v7)
    {
      do
      {
        unint64_t v8 = v7;
        char v7 = (void *)*v7;
      }
      while (v7);
    }
    else
    {
      do
      {
        unint64_t v8 = (void *)v5[2];
        BOOL v9 = *v8 == (void)v5;
        unint64_t v5 = v8;
      }
      while (!v9);
    }
    unint64_t v5 = v8;
  }
  while (v8 != v4 + 1);
  return sub_100112410((uint64_t)a1, (uint64_t)v4);
}

void *sub_1001557B0(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_1000BB834(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v3 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)std::string __dst = v3;
  }
  __dst[3] = off_1001D2CE8;
  __dst[4] = 0;
  *((_DWORD *)__dst + 1sub_100157AEC((void *)this + 2) = 0;
  if (atomic_load_explicit(scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto);
  }
  *((_DWORD *)__dst + 13) = 0;
  return __dst;
}

void sub_100155848(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

char *sub_100155864(char *result, void *a2)
{
  if (a2) {
    return google::protobuf::internal::ArenaImpl::AddCleanup((google::protobuf::internal::ArenaImpl *)result, a2, (void (*)(void *))sub_1000BBC34);
  }
  return result;
}

uint64_t sub_100155880(uint64_t a1, uint64_t a2)
{
  unint64_t v6 = *(google::protobuf::Arena **)(a1 + 40);
  unint64_t v4 = (uint64_t **)sub_100155974(v6, (uint64_t)&v7, (uint64_t *)&v6);
  sub_100155900(a1, a2, v4);
  uint64_t result = sub_100155900(a1, a2 ^ 1, v4);
  *(void *)(*(void *)(a1 + 32) + 8 * (a2 ^ 1)) = v4;
  *(void *)(*(void *)(a1 + 32) + 8 * asub_100157AEC((void *)this + 2) = v4;
  return result;
}

uint64_t sub_100155900(uint64_t a1, uint64_t a2, uint64_t **a3)
{
  unint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8 * a2);
  if (!v3) {
    return 0;
  }
  uint64_t v5 = 0;
  do
  {
    v8.n128_u64[0] = v3;
    v8.n128_u64[1] = v3;
    sub_100155A90(a3, (const void ***)&v8, &v8);
    ++v5;
    unint64_t v6 = *(void *)(v3 + 56);
    *(void *)(v3 + 56) = 0;
    unint64_t v3 = v6;
  }
  while (v6);
  return v5;
}

void *sub_100155974(google::protobuf::Arena *a1, uint64_t a2, uint64_t *a3)
{
  if (!a1) {
    operator new();
  }
  uint64_t result = sub_1001559D0(a1, 0);
  uint64_t v5 = *a3;
  result[1] = 0;
  result[2] = v5;
  result[3] = 0;
  void *result = result + 1;
  return result;
}

void *sub_1001559D0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_100155A88);
}

void sub_100155A88(uint64_t a1)
{
}

uint64_t *sub_100155A90(uint64_t **a1, const void ***a2, __n128 *a3)
{
  uint64_t v5 = (uint64_t **)sub_100155B10((uint64_t)a1, &v8, a2);
  uint64_t result = *v5;
  if (!*v5)
  {
    sub_100113FC4((uint64_t)a1, a3, (uint64_t)&v7);
    sub_100114024(a1, v8, v5, v7);
    return v7;
  }
  return result;
}

uint64_t *sub_100155B10(uint64_t a1, void *a2, const void ***a3)
{
  uint64_t v5 = (uint64_t *)(a1 + 8);
  unint64_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    uint64_t v7 = a1 + 24;
    do
    {
      while (1)
      {
        uint64_t v8 = v4;
        if (!sub_1000D926C(v7, *a3, (const void **)v4[4])) {
          break;
        }
        unint64_t v4 = (uint64_t *)*v8;
        uint64_t v5 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (!sub_1000D926C(v7, (const void **)v8[4], *a3)) {
        break;
      }
      uint64_t v5 = v8 + 1;
      unint64_t v4 = (uint64_t *)v8[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v8 = (uint64_t *)(a1 + 8);
  }
LABEL_10:
  *a2 = v8;
  return v5;
}

uint64_t sub_100155BAC(void *a1, unsigned __int8 *a2)
{
  sub_100154F6C(a1, a2, 0, &v6);
  if (!(void)v6) {
    return 0;
  }
  long long v4 = v6;
  uint64_t v5 = v7;
  sub_100155D28(&v4);
  sub_100155C24(a1, (uint64_t *)&v6);
  return 1;
}

uint64_t sub_100155C24(void *a1, uint64_t *a2)
{
  BOOL v4 = sub_100155DE4((uint64_t)a2, (unint64_t *)&v13);
  unint64_t v5 = a2[2];
  uint64_t v6 = *a2;
  uint64_t v7 = a1[4];
  uint64_t v8 = *(void *)(v7 + 8 * v5);
  if (v4)
  {
    uint64_t v9 = sub_100155E9C((uint64_t)a1, v6, *(void *)(v7 + 8 * v5));
LABEL_5:
    *(void *)(a1[4] + 8 * v5) = v9;
    goto LABEL_6;
  }
  sub_100112478(*(void *)(v7 + 8 * v5), v13);
  if (!*(void *)(v8 + 24))
  {
    sub_100112410((uint64_t)a1, v8);
    uint64_t v9 = 0;
    *(void *)(a1[4] + ((8 * v5) | 8)) = 0;
    v5 &= ~1uLL;
    goto LABEL_5;
  }
LABEL_6:
  uint64_t result = sub_100154ED4((uint64_t)a1, v6);
  --*a1;
  if (v5 == a1[3])
  {
    unint64_t v11 = a1[1];
    if (v5 < v11)
    {
      uint64_t v12 = a1[4];
      do
      {
        if (*(void *)(v12 + 8 * v5)) {
          break;
        }
        a1[3] = ++v5;
      }
      while (v11 != v5);
    }
  }
  return result;
}

void *sub_100155D28(void *a1)
{
  uint64_t v2 = *(void *)(*a1 + 56);
  if (v2) {
    goto LABEL_2;
  }
  if (sub_100155DE4((uint64_t)a1, (unint64_t *)&v11))
  {
    unint64_t v3 = a1[2] + 1;
LABEL_13:
    sub_100112640(a1, v3);
    return a1;
  }
  uint64_t v4 = a1[2];
  uint64_t v5 = *(void *)(*(void *)(a1[1] + 32) + 8 * v4);
  unint64_t v6 = (unint64_t)v11;
  uint64_t v7 = (void *)v11[1];
  if (v7)
  {
    do
    {
      uint64_t v8 = v7;
      uint64_t v7 = (void *)*v7;
    }
    while (v7);
  }
  else
  {
    do
    {
      uint64_t v8 = *(void **)(v6 + 16);
      BOOL v9 = *v8 == v6;
      unint64_t v6 = (unint64_t)v8;
    }
    while (!v9);
  }
  unint64_t v11 = v8;
  if (v8 == (void *)(v5 + 8))
  {
    unint64_t v3 = v4 + 2;
    goto LABEL_13;
  }
  uint64_t v2 = v8[5];
LABEL_2:
  *a1 = v2;
  return a1;
}

BOOL sub_100155DE4(uint64_t a1, unint64_t *a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  uint64_t v5 = *(unsigned __int8 **)a1;
  uint64_t v6 = *(void *)(a1 + 16) & (v4[1] - 1);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = v4[4];
  uint64_t v8 = *(void *)(v7 + 8 * v6);
  if ((unsigned __int8 *)v8 == v5) {
    return 1;
  }
  if (v8 && v8 != *(void *)(v7 + 8 * (v6 ^ 1)))
  {
    while (1)
    {
      uint64_t v8 = *(void *)(v8 + 56);
      if (!v8) {
        break;
      }
      if ((unsigned __int8 *)v8 == v5) {
        return 1;
      }
    }
  }
  sub_100154F6C(v4, v5, a2, &v13);
  uint64_t v9 = v14;
  *(void *)(a1 + 16) = v14;
  uint64_t v10 = *(void *)(*(void *)(a1 + 8) + 32);
  uint64_t v11 = *(void *)(v10 + 8 * v9);
  return !v11 || v11 != *(void *)(v10 + 8 * (v9 ^ 1));
}

uint64_t sub_100155E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = *(void *)(a3 + 56);
  if (v3 == a2) {
    return v4;
  }
  *(void *)(v3 + 56) = sub_100155E9C();
  return v3;
}

uint64_t sub_100155EDC(uint64_t a1)
{
  if (!*(void *)a1) {
    return 0;
  }
  uint64_t v2 = sub_100155FF0(*(void *)(a1 + 32), *(void *)(a1 + 8), *(void *)a1, 64);
  return sub_100155F2C((void *)a1) + v2;
}

uint64_t sub_100155F2C(void *a1)
{
  unint64_t v1 = a1[3];
  unint64_t v2 = a1[1];
  if (v2 <= v1) {
    return 0;
  }
  uint64_t v3 = a1[4];
  while (1)
  {
    unint64_t v4 = *(void *)(v3 + 8 * v1);
    if (v4) {
      break;
    }
    if (v2 == ++v1) {
      return 0;
    }
  }
  if (v4 != *(void *)(v3 + 8 * (v1 ^ 1)))
  {
    unint64_t v8 = *(void *)(v3 + 8 * v1);
    uint64_t v9 = a1;
    unint64_t v10 = v1;
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(*(void *)v4 + 40);
  unint64_t v8 = v4;
  uint64_t v9 = a1;
  unint64_t v10 = v1;
  if (!v4) {
    return 0;
  }
LABEL_9:
  uint64_t v5 = 0;
  do
  {
    uint64_t v6 = google::protobuf::internal::StringSpaceUsedExcludingSelfLong(v4);
    uint64_t v5 = v5 + v6 + google::protobuf::Message::SpaceUsedLong((google::protobuf::Message *)(v4 + 24)) - 32;
    sub_100155D28(&v8);
    unint64_t v4 = v8;
  }
  while (v8);
  return v5;
}

uint64_t sub_100155FF0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = a4 * a3 + 8 * a2;
  if (a2)
  {
    for (unint64_t i = 0; i < a2; i += 2)
    {
      uint64_t v7 = *(void *)(a1 + 8 * i);
      if (v7)
      {
        if (v7 == *(void *)(a1 + 8 * i + 8)) {
          result += 48 * *(void *)(v7 + 24);
        }
      }
    }
  }
  return result;
}

uint64_t sub_100156038(uint64_t a1)
{
  *(_DWORD *)(a1 + 32) |= 2u;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = (void *)(v2 & 0xFFFFFFFFFFFFFFFELL);
  if (v2) {
    uint64_t v3 = (void *)*v3;
  }
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4)
  {
    uint64_t v4 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Value>(v3);
    *(void *)(a1 + 24) = v4;
  }
  return v4;
}

unsigned int *sub_100156090(unsigned int *result, std::string *a2)
{
  std::string::size_type size = a2->__r_.__value_.__l.__size_;
  uint64_t v3 = (char *)(size & 0xFFFFFFFFFFFFFFFELL);
  unint64_t v4 = size & 0xFFFFFFFFFFFFFFFELL;
  if (size) {
    unint64_t v4 = *(void *)v3;
  }
  if (*(void *)result == v4 && (uint64_t v5 = (int *)*((void *)result + 2)) != 0 && (v6 = *v5, (int)v6 < (int)result[3]))
  {
    uint64_t v7 = v5 + 2;
    uint64_t v8 = (int)result[2];
    if ((int)v8 < (int)v6) {
      *(void *)&v7[2 * v6] = *(void *)&v7[2 * v8];
    }
    *(void *)&v7[2 * v8] = a2;
    result[2] = v8 + 1;
    ++**((_DWORD **)result + 2);
  }
  else
  {
    if (size) {
      uint64_t v3 = *(char **)v3;
    }
    return sub_100156114(result, a2, v3, *(char **)result);
  }
  return result;
}

unsigned int *sub_100156114(unsigned int *a1, std::string *a2, char *a3, char *a4)
{
  uint64_t v5 = a2;
  if (a3 || !a4)
  {
    if (a4 != a3)
    {
      uint64_t v7 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Struct_FieldsEntry_DoNotUse>(a4);
      sub_1001561C4(v5, v7);
      if (!a3) {
        (*(void (**)(std::string *))(v5->__r_.__value_.__r.__words[0] + 8))(v5);
      }
      uint64_t v5 = v7;
    }
  }
  else
  {
    sub_1001145B8(a4, a2);
  }
  return sub_100109B10(a1, (uint64_t)v5);
}

std::string *sub_1001561C4(_DWORD *a1, std::string *a2)
{
  return sub_10015118C(a2, a1);
}

uint64_t sub_1001561D4(void *a1)
{
  *a1 = off_1001D2ED8;
  sub_1000333D0(a1 + 1);
  sub_1000333D0(a1 + 5);
  return sub_10015415C((uint64_t)a1);
}

void *sub_100156234(void *result, void *a2)
{
  unint64_t v2 = a2[3];
  unint64_t v3 = a2[1];
  if (v3 > v2)
  {
    uint64_t v4 = (uint64_t)result;
    uint64_t v5 = a2[4];
    while (1)
    {
      uint64_t v6 = *(unsigned __int8 **)(v5 + 8 * v2);
      if (v6) {
        break;
      }
      if (v3 == ++v2) {
        return result;
      }
    }
    if (v6 == *(unsigned __int8 **)(v5 + 8 * (v2 ^ 1)))
    {
      uint64_t v6 = *(unsigned __int8 **)(*(void *)v6 + 40);
      uint64_t v8 = v6;
      uint64_t v9 = a2;
      unint64_t v10 = v2;
      if (!v6) {
        return result;
      }
    }
    else
    {
      uint64_t v8 = *(unsigned __int8 **)(v5 + 8 * v2);
      uint64_t v9 = a2;
      unint64_t v10 = v2;
    }
    do
    {
      sub_100155194(v4, v6, (uint64_t)&v11);
      if (v6 != (unsigned __int8 *)v11)
      {
        uint64_t v7 = v11 + 1;
        google::protobuf::Value::Clear((google::protobuf::Value *)&v11[1]);
        google::protobuf::Value::MergeFrom(v7, (const google::protobuf::Value *)(v6 + 24));
      }
      uint64_t result = sub_100155D28(&v8);
      uint64_t v6 = v8;
    }
    while (v8);
  }
  return result;
}

google::protobuf::internal *sub_100156308(uint64_t a1, google::protobuf::internal *a2, int *a3)
{
  v5[0] = a1;
  v5[1] = a1;
  memset(&v5[2], 0, 24);
  v5[6] = 0;
  unint64_t v3 = sub_100156368((uint64_t)v5, a2, a3);
  sub_100156724((uint64_t)v5);
  return v3;
}

void sub_100156354(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_100156724((uint64_t)va);
  _Unwind_Resume(a1);
}

google::protobuf::internal *sub_100156368(uint64_t a1, google::protobuf::internal *a2, int *a3)
{
  unsigned int v27 = (std::string::value_type *)a2;
  char v5 = sub_1000355B8((uint64_t)a3, &v27, a3[23]);
  uint64_t result = (google::protobuf::internal *)v27;
  if (v5)
  {
    if (!v27) {
      return result;
    }
    goto LABEL_19;
  }
  if (*v27 != 10)
  {
LABEL_19:
    uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Struct_FieldsEntry_DoNotUse>(*(void *)(*(void *)a1 + 40));
    *(void *)(a1 + 48) = v16;
LABEL_27:
    uint64_t result = sub_100153DCC(v16, (google::protobuf::internal *)v27, (google::protobuf::internal::EpsCopyInputStream *)a3);
    unsigned int v27 = (std::string::value_type *)result;
    if (result)
    {
      sub_100156668(a1);
      return (google::protobuf::internal *)v27;
    }
    return result;
  }
  uint64_t v7 = (const char *)v27[1];
  if (v27[1] < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback((google::protobuf::internal *)(v27 + 1), v7);
    if (!result) {
      return result;
    }
    uint64_t v8 = (std::string::value_type *)result;
    LODWORD(v7) = v9;
  }
  else
  {
    uint64_t v8 = v27 + 2;
  }
  uint64_t result = sub_100109C74((uint64_t)a3, v8, (int)v7, (std::string *)(a1 + 16));
  unsigned int v27 = (std::string::value_type *)result;
  if (!result) {
    return result;
  }
  if (*(char *)(a1 + 39) < 0)
  {
    uint64_t v11 = *(google::protobuf::internal **)(a1 + 16);
    unint64_t v10 = *(const char **)(a1 + 24);
  }
  else
  {
    unint64_t v10 = (const char *)*(unsigned __int8 *)(a1 + 39);
    uint64_t v11 = (google::protobuf::internal *)(a1 + 16);
  }
  if (!google::protobuf::internal::WireFormatLite::VerifyUtf8String(v11, v10, 0, (google::protobuf::internal *)"google.protobuf.Struct.FieldsEntry.key"))return 0; {
  if (sub_1000355B8((uint64_t)a3, &v27, a3[23]))
  }
  {
    if (v27)
    {
LABEL_21:
      uint64_t v17 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Struct_FieldsEntry_DoNotUse>(*(void *)(*(void *)a1 + 40));
      *(void *)(a1 + 48) = v17;
LABEL_22:
      *(_DWORD *)(v17 + 32) |= 1u;
      uint64_t v18 = *(void *)(v17 + 8);
      uint64_t v19 = (google::protobuf::Arena *)(v18 & 0xFFFFFFFFFFFFFFFELL);
      if (v18) {
        uint64_t v19 = *(google::protobuf::Arena **)v19;
      }
      int v20 = google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(v17 + 16), v19);
      unsigned int v21 = v20;
      if (*((char *)v20 + 23) < 0) {
        operator delete((void *)*v20);
      }
      long long v22 = *(_OWORD *)(a1 + 16);
      _OWORD v21[2] = *(void *)(a1 + 32);
      *(_OWORD *)unsigned int v21 = v22;
      *(unsigned char *)(a1 + 39) = 0;
      *(unsigned char *)(a1 + 16) = 0;
      uint64_t v16 = *(void *)(a1 + 48);
      goto LABEL_27;
    }
    return 0;
  }
  if (*v27 != 18) {
    goto LABEL_21;
  }
  uint64_t v12 = *(uint64_t **)(a1 + 8);
  uint64_t v13 = *v12;
  sub_100155194((uint64_t)v12, (unsigned __int8 *)(a1 + 16), (uint64_t)v28);
  uint64_t v14 = v28[0] + 24;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = v28[0] + 24;
  if (v13 == **(void **)(a1 + 8)) {
    goto LABEL_21;
  }
  unsigned int v27 = (std::string::value_type *)sub_1001534A4((uint64_t)a3, v14, (google::protobuf::internal *)(v27 + 1));
  if (!v27)
  {
    sub_100155BAC(*(void **)(a1 + 8), (unsigned __int8 *)(a1 + 16));
    return 0;
  }
  char v15 = sub_1000355B8((uint64_t)a3, &v27, a3[23]);
  uint64_t result = (google::protobuf::internal *)v27;
  if ((v15 & 1) == 0 && v27)
  {
    uint64_t v23 = google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Struct_FieldsEntry_DoNotUse>(*(void *)(*(void *)a1 + 40));
    *(void *)(a1 + 48) = v23;
    unsigned int v24 = *(google::protobuf::Message **)(a1 + 40);
    unsigned int v25 = (google::protobuf::internal *)sub_100156038(v23);
    sub_1001565BC(v24, v25, v26);
    sub_100155BAC(*(void **)(a1 + 8), (unsigned __int8 *)(a1 + 16));
    uint64_t v17 = *(void *)(a1 + 48);
    goto LABEL_22;
  }
  return result;
}

double sub_1001565BC(google::protobuf::Message *a1, google::protobuf::internal *this, google::protobuf::Message *a3)
{
  if (a1 != this)
  {
    uint64_t v5 = *((void *)this + 1);
    uint64_t v6 = (void *)(v5 & 0xFFFFFFFFFFFFFFFELL);
    if (v5) {
      uint64_t v6 = (void *)*v6;
    }
    uint64_t v7 = *((void *)a1 + 1);
    uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFELL);
    if (v7) {
      uint64_t v8 = (void *)*v8;
    }
    if (v6 == v8)
    {
      sub_100033A68((google::protobuf::Arena **)this + 1, (unint64_t *)a1 + 1);
      double result = *((double *)this + 2);
      *((void *)this + sub_100157AEC((void *)this + 2) = *((void *)a1 + 2);
      *((double *)a1 + sub_100157AEC((void *)this + 2) = result;
      int v10 = *((_DWORD *)this + 7);
      *((_DWORD *)this + 7) = *((_DWORD *)a1 + 7);
      *((_DWORD *)a1 + 7) = v10;
    }
    else
    {
      google::protobuf::internal::GenericSwap(this, a1, a3);
    }
  }
  return result;
}

double sub_100156668(uint64_t a1)
{
  unint64_t v2 = (const std::string *)(*(uint64_t (**)(void))(**(void **)(a1 + 48) + 160))(*(void *)(a1 + 48));
  std::string::operator=((std::string *)(a1 + 16), v2);
  sub_100155194(*(void *)(a1 + 8), (unsigned __int8 *)(a1 + 16), (uint64_t)v10);
  uint64_t v4 = (google::protobuf::internal *)(v10[0] + 24);
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = v10[0] + 24;
  uint64_t v5 = *(void *)(a1 + 48);
  *(_DWORD *)(v5 + 32) |= 2u;
  uint64_t v6 = *(void *)(v5 + 8);
  uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  if (v6) {
    uint64_t v7 = (void *)*v7;
  }
  uint64_t v8 = *(google::protobuf::Message **)(v5 + 24);
  if (!v8)
  {
    uint64_t v8 = (google::protobuf::Message *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Value>(v7);
    *(void *)(v5 + 24) = v8;
    uint64_t v4 = *(google::protobuf::internal **)(a1 + 40);
  }
  return sub_1001565BC(v8, v4, v3);
}

uint64_t sub_100156724(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 48);
  if (v2)
  {
    uint64_t v3 = v2[1];
    uint64_t v4 = (void *)(v3 & 0xFFFFFFFFFFFFFFFELL);
    if ((v3 & 1) == 0)
    {
      if (v4) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
    if (!*v4) {
LABEL_4:
    }
      (*(void (**)(void *))(*v2 + 8))(v2);
  }
LABEL_5:
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

uint64_t sub_1001567A0(uint64_t result, const void ***a2, uint64_t a3, uint64_t a4, char a5)
{
  int v10 = (const void ***)result;
LABEL_2:
  uint64_t v11 = a2 - 1;
  uint64_t v12 = v10;
LABEL_3:
  uint64_t v13 = 1 - a4;
  while (1)
  {
    int v10 = v12;
    uint64_t v14 = v13;
    uint64_t v15 = (char *)a2 - (char *)v12;
    unint64_t v16 = a2 - v12;
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return result;
        case 2uLL:
          double result = sub_100156B68(a3, a2 - 1, v12);
          if (result)
          {
            uint64_t v23 = *v12;
            *uint64_t v12 = *v11;
            google::protobuf::internal *v11 = v23;
          }
          break;
        case 3uLL:
          double result = sub_100156D68(v12, v12 + 1, a2 - 1, a3);
          break;
        case 4uLL:
          double result = sub_10015728C(v12, v12 + 1, v12 + 2, a2 - 1, a3);
          break;
        case 5uLL:
          double result = sub_100157340(v12, v12 + 1, v12 + 2, v12 + 3, a2 - 1, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return result;
    }
    if (v15 <= 191) {
      break;
    }
    if (v14 == 1)
    {
      if (v12 != a2)
      {
        return (uint64_t)sub_10015741C(v12, a2, a2, a3);
      }
      return result;
    }
    unint64_t v17 = v16 >> 1;
    uint64_t v18 = &v12[v16 >> 1];
    if ((unint64_t)v15 >= 0x401)
    {
      sub_100156D68(v12, &v12[v16 >> 1], a2 - 1, a3);
      sub_100156D68(v12 + 1, v18 - 1, a2 - 2, a3);
      sub_100156D68(v12 + 2, &v12[v17 + 1], a2 - 3, a3);
      sub_100156D68(v18 - 1, v18, &v12[v17 + 1], a3);
      uint64_t v19 = *v12;
      *uint64_t v12 = *v18;
      void *v18 = v19;
      if (a5) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_100156D68(&v12[v16 >> 1], v12, a2 - 1, a3);
      if (a5) {
        goto LABEL_14;
      }
    }
    if (!sub_100156B68(a3, v12 - 1, v12))
    {
      double result = (uint64_t)sub_100156E58(v12, a2, a3);
      uint64_t v12 = (const void ***)result;
      goto LABEL_19;
    }
LABEL_14:
    int v20 = sub_100156F80(v12, a2, a3);
    if ((v21 & 1) == 0) {
      goto LABEL_17;
    }
    BOOL v22 = sub_1001570B0(v12, v20, a3);
    uint64_t v12 = v20 + 1;
    double result = sub_1001570B0(v20 + 1, a2, a3);
    if (result)
    {
      a4 = -v14;
      a2 = v20;
      if (v22) {
        return result;
      }
      goto LABEL_2;
    }
    uint64_t v13 = v14 + 1;
    if (!v22)
    {
LABEL_17:
      double result = sub_1001567A0(v10, v20, a3, -v14, a5 & 1);
      uint64_t v12 = v20 + 1;
LABEL_19:
      a5 = 0;
      a4 = -v14;
      goto LABEL_3;
    }
  }
  if (a5)
  {
    return (uint64_t)sub_100156BDC(v12, a2, a3);
  }
  else
  {
    return (uint64_t)sub_100156CB0(v12, a2, a3);
  }
}

BOOL sub_100156B68(uint64_t a1, const void ***a2, const void ***a3)
{
  int v3 = *((char *)*a3 + 23);
  int v4 = *((char *)*a2 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)*a2 + 23);
  }
  else {
    size_t v5 = (size_t)(*a2)[1];
  }
  if (v4 >= 0) {
    char v6 = *a2;
  }
  else {
    char v6 = **a2;
  }
  if (v3 >= 0) {
    size_t v7 = *((unsigned __int8 *)*a3 + 23);
  }
  else {
    size_t v7 = (size_t)(*a3)[1];
  }
  if (v3 >= 0) {
    uint64_t v8 = *a3;
  }
  else {
    uint64_t v8 = **a3;
  }
  if (v7 >= v5) {
    size_t v9 = v5;
  }
  else {
    size_t v9 = v7;
  }
  int v10 = memcmp(v6, v8, v9);
  if (v10) {
    return v10 < 0;
  }
  else {
    return v5 < v7;
  }
}

const void ***sub_100156BDC(const void ***result, const void ***a2, uint64_t a3)
{
  if (result != a2)
  {
    v14[7] = v3;
    v14[8] = v4;
    char v6 = result;
    size_t v7 = result + 1;
    if (result + 1 != a2)
    {
      uint64_t v9 = 0;
      int v10 = result;
      do
      {
        uint64_t v11 = v10;
        int v10 = v7;
        double result = (const void ***)sub_100156B68(a3, v7, v11);
        if (result)
        {
          v14[0] = *v10;
          uint64_t v12 = v9;
          while (1)
          {
            *(const void ***)((char *)v6 + v12 + 8) = *(const void ***)((char *)v6 + v12);
            if (!v12) {
              break;
            }
            v12 -= 8;
            double result = (const void ***)sub_100156B68(a3, v14, (const void ***)((char *)v6 + v12));
            if ((result & 1) == 0)
            {
              uint64_t v13 = (const void ***)((char *)v6 + v12 + 8);
              goto LABEL_10;
            }
          }
          uint64_t v13 = v6;
LABEL_10:
          uint64_t *v13 = v14[0];
        }
        size_t v7 = v10 + 1;
        v9 += 8;
      }
      while (v10 + 1 != a2);
    }
  }
  return result;
}

const void ***sub_100156CB0(const void ***result, const void ***a2, uint64_t a3)
{
  if (result != a2)
  {
    v12[7] = v3;
    v12[8] = v4;
    char v6 = result;
    size_t v7 = result + 1;
    if (result + 1 != a2)
    {
      uint64_t v9 = result - 1;
      do
      {
        int v10 = v6;
        char v6 = v7;
        double result = (const void ***)sub_100156B68(a3, v7, v10);
        if (result)
        {
          v12[0] = *v6;
          uint64_t v11 = v9;
          do
          {
            void v11[2] = v11[1];
            double result = (const void ***)sub_100156B68(a3, v12, v11--);
          }
          while ((result & 1) != 0);
          void v11[2] = v12[0];
        }
        size_t v7 = v6 + 1;
        ++v9;
      }
      while (v6 + 1 != a2);
    }
  }
  return result;
}

uint64_t sub_100156D68(const void ***a1, const void ***a2, const void ***a3, uint64_t a4)
{
  BOOL v8 = sub_100156B68(a4, a2, a1);
  uint64_t result = sub_100156B68(a4, a3, a2);
  if (!v8)
  {
    if (!result) {
      return result;
    }
    uint64_t v11 = *a2;
    *a2 = *a3;
    *a3 = v11;
    if (!sub_100156B68(a4, a2, a1)) {
      return 1;
    }
    uint64_t v12 = *a1;
    *a1 = *a2;
    *a2 = v12;
    return 2;
  }
  int v10 = *a1;
  if (!result)
  {
    *a1 = *a2;
    *a2 = v10;
    if (!sub_100156B68(a4, a3, a2)) {
      return 1;
    }
    uint64_t v13 = *a2;
    *a2 = *a3;
    *a3 = v13;
    return 2;
  }
  *a1 = *a3;
  *a3 = v10;
  return 1;
}

const void ***sub_100156E58(const void ***a1, const void ***a2, uint64_t a3)
{
  int v4 = a2;
  uint64_t v11 = *a1;
  if (sub_100156B68(a3, &v11, a2 - 1))
  {
    char v6 = a1;
    do
      ++v6;
    while (!sub_100156B68(a3, &v11, v6));
  }
  else
  {
    size_t v7 = a1 + 1;
    do
    {
      char v6 = v7;
      if (v7 >= v4) {
        break;
      }
      BOOL v8 = sub_100156B68(a3, &v11, v7);
      size_t v7 = v6 + 1;
    }
    while (!v8);
  }
  if (v6 < v4)
  {
    do
      --v4;
    while (sub_100156B68(a3, &v11, v4));
  }
  while (v6 < v4)
  {
    uint64_t v9 = *v6;
    const void *v6 = *v4;
    void *v4 = v9;
    do
      ++v6;
    while (!sub_100156B68(a3, &v11, v6));
    do
      --v4;
    while (sub_100156B68(a3, &v11, v4));
  }
  if (v6 - 1 != a1) {
    *a1 = *(v6 - 1);
  }
  *(v6 - sub_1000333D0((uint64_t *)this + 1) = v11;
  return v6;
}

const void ***sub_100156F80(const void ***a1, const void ***a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v13 = *a1;
  do
    ++v6;
  while (sub_100156B68(a3, &a1[v6], &v13));
  size_t v7 = &a1[v6];
  BOOL v8 = &a1[v6 - 1];
  if (v6 == 1)
  {
    do
    {
      if (v7 >= a2) {
        break;
      }
      --a2;
    }
    while (!sub_100156B68(a3, a2, &v13));
  }
  else
  {
    do
      --a2;
    while (!sub_100156B68(a3, a2, &v13));
  }
  if (v7 < a2)
  {
    uint64_t v9 = &a1[v6];
    int v10 = a2;
    do
    {
      uint64_t v11 = *v9;
      *uint64_t v9 = *v10;
      *int v10 = v11;
      do
        ++v9;
      while (sub_100156B68(a3, v9, &v13));
      do
        --v10;
      while (!sub_100156B68(a3, v10, &v13));
    }
    while (v9 < v10);
    BOOL v8 = v9 - 1;
  }
  if (v8 != a1) {
    *a1 = *v8;
  }
  const void *v8 = v13;
  return v8;
}

BOOL sub_1001570B0(const void ***a1, const void ***a2, uint64_t a3)
{
  uint64_t v6 = a2 - a1;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      BOOL v8 = a2 - 1;
      if (sub_100156B68(a3, a2 - 1, a1))
      {
        uint64_t v9 = *a1;
        *a1 = *v8;
        const void *v8 = v9;
      }
      return 1;
    case 3:
      sub_100156D68(a1, a1 + 1, a2 - 1, a3);
      return 1;
    case 4:
      sub_10015728C(a1, a1 + 1, a1 + 2, a2 - 1, a3);
      return 1;
    case 5:
      sub_100157340(a1, a1 + 1, a1 + 2, a1 + 3, a2 - 1, a3);
      return 1;
    default:
      int v10 = a1 + 2;
      sub_100156D68(a1, a1 + 1, a1 + 2, a3);
      uint64_t v11 = a1 + 3;
      if (a1 + 3 == a2) {
        return 1;
      }
      uint64_t v12 = 0;
      int v13 = 0;
      break;
  }
  while (1)
  {
    if (sub_100156B68(a3, v11, v10))
    {
      unint64_t v17 = *v11;
      uint64_t v14 = v12;
      while (1)
      {
        uint64_t v15 = (const void ***)((char *)a1 + v14);
        *(const void ***)((char *)a1 + v14 + 24) = *(const void ***)((char *)a1 + v14 + 16);
        if (v14 == -16) {
          break;
        }
        v14 -= 8;
        if (!sub_100156B68(a3, &v17, v15 + 1))
        {
          unint64_t v16 = (const void ***)((char *)a1 + v14 + 24);
          goto LABEL_12;
        }
      }
      unint64_t v16 = a1;
LABEL_12:
      *unint64_t v16 = v17;
      if (++v13 == 8) {
        return v11 + 1 == a2;
      }
    }
    int v10 = v11;
    v12 += 8;
    if (++v11 == a2) {
      return 1;
    }
  }
}

BOOL sub_10015728C(const void ***a1, const void ***a2, const void ***a3, const void ***a4, uint64_t a5)
{
  sub_100156D68(a1, a2, a3, a5);
  BOOL result = sub_100156B68(a5, a4, a3);
  if (result)
  {
    uint64_t v11 = *a3;
    *a3 = *a4;
    *a4 = v11;
    BOOL result = sub_100156B68(a5, a3, a2);
    if (result)
    {
      uint64_t v12 = *a2;
      *a2 = *a3;
      *a3 = v12;
      BOOL result = sub_100156B68(a5, a2, a1);
      if (result)
      {
        int v13 = *a1;
        *a1 = *a2;
        *a2 = v13;
      }
    }
  }
  return result;
}

BOOL sub_100157340(const void ***a1, const void ***a2, const void ***a3, const void ***a4, const void ***a5, uint64_t a6)
{
  sub_10015728C(a1, a2, a3, a4, a6);
  BOOL result = sub_100156B68(a6, a5, a4);
  if (result)
  {
    int v13 = *a4;
    *a4 = *a5;
    *a5 = v13;
    BOOL result = sub_100156B68(a6, a4, a3);
    if (result)
    {
      uint64_t v14 = *a3;
      *a3 = *a4;
      *a4 = v14;
      BOOL result = sub_100156B68(a6, a3, a2);
      if (result)
      {
        uint64_t v15 = *a2;
        *a2 = *a3;
        *a3 = v15;
        BOOL result = sub_100156B68(a6, a2, a1);
        if (result)
        {
          unint64_t v16 = *a1;
          *a1 = *a2;
          *a2 = v16;
        }
      }
    }
  }
  return result;
}

const void ***sub_10015741C(const void ***a1, const void ***a2, const void ***a3, uint64_t a4)
{
  if (a1 != a2)
  {
    uint64_t v8 = (char *)a2 - (char *)a1;
    uint64_t v9 = a2 - a1;
    if ((char *)a2 - (char *)a1 >= 9)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      uint64_t v12 = &a1[v10];
      do
      {
        sub_100157574((BOOL)a1, a4, v9, v12--);
        --v11;
      }
      while (v11);
    }
    int v13 = a2;
    if (a2 != a3)
    {
      uint64_t v14 = a2;
      do
      {
        if (sub_100156B68(a4, v14, a1))
        {
          uint64_t v15 = *v14;
          *uint64_t v14 = *a1;
          *a1 = v15;
          sub_100157574((BOOL)a1, a4, v9, a1);
        }
        ++v14;
      }
      while (v14 != a3);
      int v13 = a3;
    }
    if (v8 >= 9)
    {
      uint64_t v16 = (unint64_t)v8 >> 3;
      unint64_t v17 = a2 - 1;
      do
      {
        uint64_t v18 = *a1;
        uint64_t v19 = (const void ***)sub_1001576AC(a1, a4, v16);
        if (v17 == v19)
        {
          google::protobuf::Arena *v19 = v18;
        }
        else
        {
          google::protobuf::Arena *v19 = *v17;
          *unint64_t v17 = v18;
          sub_10015775C((BOOL)a1, (uint64_t)(v19 + 1), a4, v19 + 1 - a1);
        }
        --v17;
      }
      while (v16-- > 2);
    }
    return v13;
  }
  return a3;
}

BOOL sub_100157574(BOOL result, uint64_t a2, uint64_t a3, const void ***a4)
{
  unint64_t v6 = a3 - 2;
  if (a3 >= 2)
  {
    v19[11] = v4;
    v19[12] = v5;
    size_t v7 = a4;
    BOOL v8 = result;
    int64_t v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= ((uint64_t)a4 - result) >> 3)
    {
      uint64_t v12 = ((uint64_t)a4 - result) >> 2;
      uint64_t v13 = v12 + 1;
      uint64_t v14 = (const void ***)(result + 8 * (v12 + 1));
      uint64_t v15 = v12 + 2;
      if (v12 + 2 < a3 && sub_100156B68(a2, (const void ***)(result + 8 * (v12 + 1)), v14 + 1))
      {
        ++v14;
        uint64_t v13 = v15;
      }
      BOOL result = sub_100156B68(a2, v14, v7);
      if (!result)
      {
        v19[0] = *v7;
        do
        {
          uint64_t v16 = v14;
          *size_t v7 = *v14;
          if (v9 < v13) {
            break;
          }
          uint64_t v17 = (2 * v13) | 1;
          uint64_t v14 = (const void ***)(v8 + 8 * v17);
          uint64_t v18 = 2 * v13 + 2;
          if (v18 < a3 && sub_100156B68(a2, (const void ***)(v8 + 8 * v17), v14 + 1))
          {
            ++v14;
            uint64_t v17 = v18;
          }
          BOOL result = sub_100156B68(a2, v14, v19);
          size_t v7 = v16;
          uint64_t v13 = v17;
        }
        while (!result);
        *uint64_t v16 = v19[0];
      }
    }
  }
  return result;
}

void *sub_1001576AC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    int64_t v9 = &a1[v6 + 1];
    uint64_t v10 = (2 * v6) | 1;
    uint64_t v11 = 2 * v6 + 2;
    if (v11 < a3 && sub_100156B68(a2, (const void ***)&a1[v6 + 1], (const void ***)&a1[v6 + 2]))
    {
      ++v9;
      uint64_t v10 = v11;
    }
    *a1 = *v9;
    a1 = v9;
    uint64_t v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

BOOL sub_10015775C(BOOL result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v6 = a4 - 2;
  if (a4 >= 2)
  {
    v13[7] = v4;
    unsigned char v13[8] = v5;
    BOOL v8 = result;
    unint64_t v9 = v6 >> 1;
    uint64_t v10 = (const void ***)(result + 8 * (v6 >> 1));
    uint64_t v11 = (const void ***)(a2 - 8);
    BOOL result = sub_100156B68(a3, v10, (const void ***)(a2 - 8));
    if (result)
    {
      v13[0] = *v11;
      do
      {
        uint64_t v12 = v10;
        google::protobuf::internal *v11 = *v10;
        if (!v9) {
          break;
        }
        unint64_t v9 = (v9 - 1) >> 1;
        uint64_t v10 = (const void ***)(v8 + 8 * v9);
        BOOL result = sub_100156B68(a3, v10, v13);
        uint64_t v11 = v12;
      }
      while (result);
      *uint64_t v12 = v13[0];
    }
  }
  return result;
}

uint64_t *sub_100157808(uint64_t *a1, uint64_t *a2)
{
  if (a1[5] == a2[5])
  {
    return sub_1001141C0(a1, a2);
  }
  else
  {
    sub_1001578AC((uint64_t)v5, a1);
    sub_100157978(a1, a2);
    sub_100157978(a2, v5);
    return (uint64_t *)sub_100154D74((uint64_t)v5);
  }
}

void sub_100157898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_1001578AC(uint64_t a1, void *a2)
{
  *(_OWORD *)a1 = xmmword_1001825C0;
  *(_OWORD *)(a1 + 16) = xmmword_1001825C0;
  *(void *)(a1 + ++*(_DWORD *)(result + 32) = &google::protobuf::internal::kGlobalEmptyTable;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = 0;
  unint64_t v3 = a2[3];
  unint64_t v4 = a2[1];
  if (v4 <= v3)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v5 = a2[4];
    while (1)
    {
      uint64_t v6 = *(void *)(v5 + 8 * v3);
      if (v6) {
        break;
      }
      if (v4 == ++v3)
      {
        uint64_t v6 = 0;
        unint64_t v3 = a2[1];
        goto LABEL_9;
      }
    }
    if (v6 == *(void *)(v5 + 8 * (v3 ^ 1))) {
      uint64_t v6 = *(void *)(*(void *)v6 + 40);
    }
  }
LABEL_9:
  *(void *)&long long v9 = v6;
  *((void *)&v9 + sub_1000333D0((uint64_t *)this + 1) = a2;
  unint64_t v10 = v3;
  memset(v8, 0, sizeof(v8));
  sub_100157A2C((void *)a1, &v9, v8);
  return a1;
}

void sub_100157964(_Unwind_Exception *a1)
{
  sub_100154D74(v1);
  _Unwind_Resume(a1);
}

void *sub_100157978(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100154DC8((uint64_t)a1);
    unint64_t v4 = a2[3];
    unint64_t v5 = a2[1];
    if (v5 <= v4)
    {
      uint64_t v7 = 0;
    }
    else
    {
      uint64_t v6 = a2[4];
      while (1)
      {
        uint64_t v7 = *(void *)(v6 + 8 * v4);
        if (v7) {
          break;
        }
        if (v5 == ++v4)
        {
          uint64_t v7 = 0;
          unint64_t v4 = a2[1];
          goto LABEL_10;
        }
      }
      if (v7 == *(void *)(v6 + 8 * (v4 ^ 1))) {
        uint64_t v7 = *(void *)(*(void *)v7 + 40);
      }
    }
LABEL_10:
    *(void *)&long long v10 = v7;
    *((void *)&v10 + sub_1000333D0((uint64_t *)this + 1) = a2;
    unint64_t v11 = v4;
    memset(v9, 0, sizeof(v9));
    sub_100157A2C(a1, &v10, v9);
  }
  return a1;
}

void *sub_100157A2C(void *result, long long *a2, void *a3)
{
  long long v8 = *a2;
  uint64_t v9 = *((void *)a2 + 2);
  unint64_t v3 = (unsigned __int8 *)v8;
  if ((void)v8 != *a3)
  {
    unint64_t v5 = result;
    do
    {
      sub_100154F6C(v5, v3, 0, v10);
      if (!v10[0])
      {
        uint64_t v6 = v8;
        sub_100155194((uint64_t)v5, (unsigned __int8 *)v8, (uint64_t)v10);
        if (v6 != v10[0])
        {
          uint64_t v7 = (std::string *)(v10[0] + 24);
          google::protobuf::Value::Clear((google::protobuf::Value *)(v10[0] + 24));
          google::protobuf::Value::MergeFrom(v7, (const google::protobuf::Value *)(v6 + 24));
        }
      }
      BOOL result = sub_100155D28(&v8);
      unint64_t v3 = (unsigned __int8 *)v8;
    }
    while ((void)v8 != *a3);
  }
  return result;
}

void sub_100157AEC(void *a1)
{
  unint64_t v2 = (google::protobuf::Value **)a1[2];
  if (v2 && !*a1)
  {
    unint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          google::protobuf::Value::~Value(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      unint64_t v2 = (google::protobuf::Value **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t sub_100157B6C(uint64_t result, google::protobuf::Value **a2, google::protobuf::Value **a3, unsigned int a4, unsigned int a5)
{
  uint64_t v9 = (uint64_t *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unint64_t v11 = a3;
    uint64_t v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      uint64_t v13 = v14;
      uint64_t v15 = *v12++;
      BOOL result = sub_100157C1C(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    int v20 = &a2[a5];
    do
    {
      char v21 = *v19++;
      BOOL v22 = (google::protobuf::Value *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Value>(v18);
      BOOL result = sub_100157C1C(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

uint64_t sub_100157C1C(google::protobuf::Value *a1, google::protobuf::Value *this)
{
  return google::protobuf::Value::MergeFrom(this, a1);
}

void *sub_100157C2C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))sub_100157CE4);
}

uint64_t sub_100157CE4(uint64_t (***a1)(void))
{
  return (**a1)(a1);
}

void *sub_100157D08(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0xA8uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0xA8uLL, (void (*)(void *))google::protobuf::Struct::~Struct);
}

void *sub_100157DC4(google::protobuf::Arena *a1)
{
  unint64_t v2 = sub_100157E38(a1, 1);
  *unint64_t v2 = off_1001D2CE8;
  v2[1] = a1;
  *((_DWORD *)v2 + 6) = 0;
  if (atomic_load_explicit(scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto);
  }
  *((_DWORD *)v2 + 7) = 0;
  return v2;
}

void *sub_100157E38(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))google::protobuf::Value::~Value);
}

void *sub_100157EF4(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))google::protobuf::ListValue::~ListValue);
}

void sub_100157FB0()
{
}

void google::protobuf::internal::PrintUTF8ErrorLog(google::protobuf::internal *this, const char *a2, const char *a3)
{
  v17[0] = 0;
  v17[1] = 0;
  uint64_t v18 = 0;
  sub_1000BBA84(&__p, "");
  if (this)
  {
    google::protobuf::StringPrintf((google::protobuf *)" '%s'", v15, this);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = v15[0];
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/wire_format_lite.cc", 577);
  unint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v15, "String field");
  uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v5, (const std::string::value_type *)&__p);
  uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v6, " contains invalid ");
  long long v8 = google::protobuf::internal::LogMessage::operator<<(v7, "UTF-8 data when ");
  uint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v8, a2);
  uint64_t v10 = google::protobuf::internal::LogMessage::operator<<(v9, " a protocol ");
  unint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v10, "buffer. Use the 'bytes' type if you intend to send raw ");
  uint64_t v12 = google::protobuf::internal::LogMessage::operator<<(v11, "bytes. ");
  uint64_t v13 = google::protobuf::internal::LogMessage::operator<<(v12, (const std::string::value_type *)v17);
  google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v13->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v18) < 0) {
    operator delete(v17[0]);
  }
}

void sub_1001580E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v22 - 17) < 0) {
    operator delete(*(void **)(v22 - 40));
  }
  _Unwind_Resume(exception_object);
}

BOOL google::protobuf::internal::WireFormatLite::VerifyUtf8String(google::protobuf::internal *a1, const char *a2, int a3, google::protobuf::internal *a4)
{
  BOOL IsStructurallyValidUTF8 = google::protobuf::internal::IsStructurallyValidUTF8(a1, a2);
  if (!IsStructurallyValidUTF8)
  {
    uint64_t v7 = "serializing";
    if (a3 != 1) {
      uint64_t v7 = 0;
    }
    if (a3) {
      long long v8 = v7;
    }
    else {
      long long v8 = "parsing";
    }
    google::protobuf::internal::PrintUTF8ErrorLog(a4, v8, 0);
  }
  return IsStructurallyValidUTF8;
}

uint64_t google::protobuf::internal::WireFormatLite::Int32Size(unsigned int *a1)
{
  uint64_t v1 = *a1;
  if ((int)v1 < 1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (int *)*((void *)a1 + 1);
  do
  {
    int v6 = *v4++;
    int v5 = v6;
    if (v6 < 0) {
      uint64_t v7 = 10;
    }
    else {
      uint64_t v7 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    }
    result += v7;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t google::protobuf::internal::WireFormatLite::UInt32Size(unsigned int *a1)
{
  uint64_t v1 = *a1;
  if ((int)v1 < 1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (int *)*((void *)a1 + 1);
  do
  {
    int v5 = *v4++;
    result += (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t google::protobuf::internal::WireFormatLite::UInt64Size(unsigned int *a1)
{
  uint64_t v1 = *a1;
  if ((int)v1 < 1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)*((void *)a1 + 1);
  do
  {
    uint64_t v5 = *v4++;
    result += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t google::protobuf::io::ZeroCopyOutputStream::WriteAliasedRaw(google::protobuf::io::ZeroCopyOutputStream *this, const void *a2)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v5, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/zero_copy_stream.cc", 47);
  unint64_t v2 = google::protobuf::internal::LogMessage::operator<<(v5, "This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.");
  google::protobuf::internal::LogFinisher::operator=((int)&v4, (const char **)&v2->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v5[0].__r_.__value_.__l.__data_);
  return 0;
}

void sub_1001582EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_100158304()
{
  return 0;
}

uint64_t sub_10015830C(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

uint64_t google::protobuf::util::Status::Status(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  v9[0] = a3;
  v9[1] = a4;
  *(_DWORD *)a1 = a2;
  *(void *)(a1 + 8) = 0;
  uint64_t v5 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  if (a2)
  {
    sub_1000D7AF4((uint64_t)v9, &v7);
    if (*(char *)(a1 + 31) < 0) {
      operator delete(*(void **)v5);
    }
    *(_OWORD *)uint64_t v5 = v7;
    *(void *)(v5 + 16) = v8;
  }
  return a1;
}

void sub_1001583B8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1001583D4()
{
  google::protobuf::util::Status::OK = 0;
  qword_1001EE110 = 0;
  unk_1001EE118 = 0;
  qword_1001EE108 = 0;
  __cxa_atexit((void (*)(void *))sub_10015830C, &google::protobuf::util::Status::OK, (void *)&_mh_execute_header);
  google::protobuf::util::Status::Status((uint64_t)&google::protobuf::util::Status::CANCELLED, 1, (uint64_t)"", 0);
  __cxa_atexit((void (*)(void *))sub_10015830C, &google::protobuf::util::Status::CANCELLED, (void *)&_mh_execute_header);
  google::protobuf::util::Status::Status((uint64_t)&google::protobuf::util::Status::UNKNOWN, 2, (uint64_t)"", 0);
  return __cxa_atexit((void (*)(void *))sub_10015830C, &google::protobuf::util::Status::UNKNOWN, (void *)&_mh_execute_header);
}

uint64_t google::protobuf::internal::ParseAnyTypeUrl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t last_of = google::protobuf::StringPiece::find_last_of(&v15, "/", 1, 0xFFFFFFFFFFFFFFFFLL);
  if (last_of == -1) {
    return 0;
  }
  unint64_t v7 = last_of + 1;
  if (last_of + 1 == v16) {
    return 0;
  }
  if (a3)
  {
    unint64_t v11 = google::protobuf::StringPiece::substr((google::protobuf::StringPiece *)&v15, 0);
    uint64_t v12 = v9;
    sub_1000D7AF4((uint64_t)&v11, &v13);
    if (*(char *)(a3 + 23) < 0) {
      operator delete(*(void **)a3);
    }
    *(_OWORD *)a3 = v13;
    *(void *)(a3 + 16) = v14;
  }
  unint64_t v11 = google::protobuf::StringPiece::substr((google::protobuf::StringPiece *)&v15, v7);
  uint64_t v12 = v10;
  sub_1000D7AF4((uint64_t)&v11, &v13);
  if (*(char *)(a4 + 23) < 0) {
    operator delete(*(void **)a4);
  }
  *(_OWORD *)a4 = v13;
  *(void *)(a4 + 16) = v14;
  return 1;
}

void *sub_1001585A0()
{
  return sub_1000D7924(qword_1001EBF38, "null");
}

std::string *google::protobuf::StringAppendV(std::string *a1, char *__format, va_list a3)
{
  uint64_t result = (std::string *)vsnprintf(__str, 0x400uLL, __format, a3);
  if ((int)result > 1023) {
    operator new[]();
  }
  if ((result & 0x80000000) == 0) {
    return std::string::append(a1, __str, result);
  }
  return result;
}

std::string *google::protobuf::StringPrintf@<X0>(google::protobuf *this@<X0>, std::string *a2@<X8>, ...)
{
  va_start(va, a2);
  a2->__r_.__value_.__r.__words[0] = 0;
  a2->__r_.__value_.__l.__size_ = 0;
  a2->__r_.__value_.__r.__words[2] = 0;
  return google::protobuf::StringAppendV(a2, (char *)this, va);
}

void sub_100158744(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::StringAppendF(std::string *a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  return google::protobuf::StringAppendV(a1, a2, &a9);
}

uint64_t google::protobuf::io::ArrayInputStream::ArrayInputStream(uint64_t this, const void *a2, int a3, int a4)
{
  *(void *)this = off_1001D3170;
  *(void *)(this + 8) = a2;
  if (a4 <= 0) {
    int v4 = a3;
  }
  else {
    int v4 = a4;
  }
  *(_DWORD *)(this + 16) = a3;
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = v4;
  *(void *)(this + 24) = 0;
  return this;
}

BOOL google::protobuf::io::ArrayInputStream::Next(google::protobuf::io::ArrayInputStream *this, const void **a2, int *a3)
{
  uint64_t v3 = *((int *)this + 6);
  int v4 = *((_DWORD *)this + 4);
  if ((int)v3 >= v4)
  {
    *((_DWORD *)this + 7) = 0;
  }
  else
  {
    int v5 = v4 - v3;
    if (v4 - (int)v3 >= *((_DWORD *)this + 5)) {
      int v5 = *((_DWORD *)this + 5);
    }
    *((_DWORD *)this + 7) = v5;
    *a2 = (const void *)(*((void *)this + 1) + v3);
    *a3 = v5;
    *((_DWORD *)this + 6) += *((_DWORD *)this + 7);
  }
  return (int)v3 < v4;
}

void google::protobuf::io::ArrayInputStream::BackUp(google::protobuf::io::ArrayInputStream *this, int a2)
{
  int v4 = *((_DWORD *)this + 7);
  if (v4 <= 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/zero_copy_stream_impl_lite.cc", 80);
    int v5 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (last_returned_size_) > (0): ");
    int v6 = google::protobuf::internal::LogMessage::operator<<(v5, "BackUp() can only be called after a successful Next().");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
    int v4 = *((_DWORD *)this + 7);
  }
  if (v4 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/zero_copy_stream_impl_lite.cc", 82);
    unint64_t v7 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) <= (last_returned_size_): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v10, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/zero_copy_stream_impl_lite.cc", 83);
    uint64_t v8 = google::protobuf::internal::LogMessage::operator<<(v10, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v9, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v10[0].__r_.__value_.__l.__data_);
  }
  *((void *)this + 3) = (*((_DWORD *)this + 6) - a2);
}

void sub_100158924(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::ArrayInputStream::Skip(google::protobuf::io::ArrayInputStream *this, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/zero_copy_stream_impl_lite.cc", 89);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  int v5 = *((_DWORD *)this + 4);
  int v6 = *((_DWORD *)this + 6);
  int v7 = v5 - v6;
  BOOL result = v5 - v6 >= a2;
  int v9 = v6 + a2;
  if (v7 >= a2) {
    int v5 = v9;
  }
  *((_DWORD *)this + 6) = v5;
  *((_DWORD *)this + 7) = 0;
  return result;
}

void sub_1001589D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::ArrayInputStream::ByteCount(google::protobuf::io::ArrayInputStream *this)
{
  return *((int *)this + 6);
}

void *google::protobuf::io::StringOutputStream::StringOutputStream(void *result, uint64_t a2)
{
  std::string *result = off_1001D31B0;
  result[1] = a2;
  return result;
}

uint64_t google::protobuf::io::StringOutputStream::Next(google::protobuf::io::StringOutputStream *this, void **a2, int *a3)
{
  uint64_t v6 = *((void *)this + 1);
  if (!v6)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/zero_copy_stream_impl_lite.cc", 142);
    int v7 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: target_ != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v7->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
    uint64_t v6 = *((void *)this + 1);
  }
  if (*(char *)(v6 + 23) < 0)
  {
    unint64_t v8 = *(void *)(v6 + 8);
    unint64_t v9 = (*(void *)(v6 + 16) & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (v8 < v9) {
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v8 = *(unsigned __int8 *)(v6 + 23);
    if (*(unsigned __int8 *)(v6 + 23) < 0x16u)
    {
      unint64_t v9 = 22;
      goto LABEL_8;
    }
  }
  unint64_t v9 = 2 * v8;
LABEL_8:
  if (v8 + 0x7FFFFFFF < v9) {
    unint64_t v9 = v8 + 0x7FFFFFFF;
  }
  if (v9 <= 0x10) {
    std::string::size_type v10 = 16;
  }
  else {
    std::string::size_type v10 = v9;
  }
  std::string::resize((std::string *)v6, v10, 0);
  unint64_t v11 = (uint64_t **)*((void *)this + 1);
  if (*((char *)v11 + 23) < 0) {
    unint64_t v11 = (uint64_t **)*v11;
  }
  *a2 = (char *)v11 + v8;
  uint64_t v12 = *((void *)this + 1);
  if (*(char *)(v12 + 23) < 0) {
    uint64_t v12 = *(void *)(v12 + 8);
  }
  else {
    LODWORD(v1sub_100157AEC((void *)this + 2) = *(unsigned __int8 *)(v12 + 23);
  }
  *a3 = v12 - v8;
  return 1;
}

void sub_100158B2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::io::StringOutputStream::BackUp(google::protobuf::io::StringOutputStream *this, int a2)
{
  if (a2 < 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/zero_copy_stream_impl_lite.cc", 169);
    int v4 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (count) >= (0): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v4->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
  }
  uint64_t v5 = *((void *)this + 1);
  if (!v5)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/zero_copy_stream_impl_lite.cc", 170);
    uint64_t v6 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: target_ != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    uint64_t v5 = *((void *)this + 1);
  }
  LODWORD(v7) = *(char *)(v5 + 23);
  if ((v7 & 0x80000000) != 0) {
    unint64_t v8 = *(void *)(v5 + 8);
  }
  else {
    unint64_t v8 = *(unsigned __int8 *)(v5 + 23);
  }
  if (v8 < a2)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v11, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/zero_copy_stream_impl_lite.cc", 171);
    unint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v11, "CHECK failed: (count) <= (target_->size()): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v10, (const char **)&v9->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v11[0].__r_.__value_.__l.__data_);
    uint64_t v5 = *((void *)this + 1);
    LOBYTE(v7) = *(unsigned char *)(v5 + 23);
  }
  if ((v7 & 0x80) != 0) {
    uint64_t v7 = *(void *)(v5 + 8);
  }
  else {
    uint64_t v7 = v7;
  }
  std::string::resize((std::string *)v5, v7 - a2, 0);
}

void sub_100158C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::StringOutputStream::ByteCount(google::protobuf::io::StringOutputStream *this)
{
  uint64_t v1 = *((void *)this + 1);
  if (!v1)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/zero_copy_stream_impl_lite.cc", 176);
    uint64_t v3 = google::protobuf::internal::LogMessage::operator<<(v6, "CHECK failed: target_ != NULL: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v3->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
    uint64_t v1 = *((void *)this + 1);
  }
  if (*(char *)(v1 + 23) < 0) {
    return *(void *)(v1 + 8);
  }
  else {
    return *(unsigned __int8 *)(v1 + 23);
  }
}

void sub_100158D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void sub_100158D3C()
{
}

void sub_100158D50()
{
}

void google::protobuf::internal::VerifyVersion(google::protobuf::internal *this, google::protobuf::internal *a2, const std::string::value_type *a3, const char *a4)
{
  if ((int)a2 > 3014000)
  {
    LODWORD(v2sub_1000333D0((uint64_t *)this + 1) = 3;
    uint64_t v22 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/stubs/common.cc";
    int v23 = 78;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program requires version ");
    google::protobuf::internal::VersionString(a2, &v18);
    if ((v20 & 0x80u) == 0) {
      uint64_t v7 = (const std::string::value_type *)&v18;
    }
    else {
      uint64_t v7 = (const std::string::value_type *)v18;
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v8 = v20;
    }
    else {
      std::string::size_type v8 = v19;
    }
    std::string::append(&v24, v7, v8);
    std::string::append(&v24, " of the Protocol Buffer runtime library, but the installed version is ");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 3, 14, 0);
    char v26 = 0;
    sub_1000BBA84(&__p, __str);
    if ((v17 & 0x80u) == 0) {
      p_p = (const std::string::value_type *)&__p;
    }
    else {
      p_p = (const std::string::value_type *)__p;
    }
    if ((v17 & 0x80u) == 0) {
      std::string::size_type v10 = v17;
    }
    else {
      std::string::size_type v10 = v16;
    }
    std::string::append(&v24, p_p, v10);
    std::string::append(&v24, ".  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish(&v21);
    if ((char)v17 < 0) {
      operator delete(__p);
    }
    if ((char)v20 < 0) {
      operator delete(v18);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
  }
  if ((int)this < 3014000)
  {
    LODWORD(v2sub_1000333D0((uint64_t *)this + 1) = 3;
    uint64_t v22 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/stubs/common.cc";
    int v23 = 89;
    memset(&v24, 0, sizeof(v24));
    std::string::append(&v24, "This program was compiled against version ");
    google::protobuf::internal::VersionString(this, &v18);
    if ((v20 & 0x80u) == 0) {
      unint64_t v11 = (const std::string::value_type *)&v18;
    }
    else {
      unint64_t v11 = (const std::string::value_type *)v18;
    }
    if ((v20 & 0x80u) == 0) {
      std::string::size_type v12 = v20;
    }
    else {
      std::string::size_type v12 = v19;
    }
    std::string::append(&v24, v11, v12);
    std::string::append(&v24, " of the Protocol Buffer runtime library, which is not compatible with the installed version (");
    snprintf(__str, 0x80uLL, "%d.%d.%d", 3, 14, 0);
    char v26 = 0;
    sub_1000BBA84(&__p, __str);
    if ((v17 & 0x80u) == 0) {
      long long v13 = (const std::string::value_type *)&__p;
    }
    else {
      long long v13 = (const std::string::value_type *)__p;
    }
    if ((v17 & 0x80u) == 0) {
      std::string::size_type v14 = v17;
    }
    else {
      std::string::size_type v14 = v16;
    }
    std::string::append(&v24, v13, v14);
    std::string::append(&v24, ").  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in \"");
    std::string::append(&v24, a3);
    std::string::append(&v24, "\".)");
    google::protobuf::internal::LogMessage::Finish(&v21);
    if ((char)v17 < 0) {
      operator delete(__p);
    }
    if ((char)v20 < 0) {
      operator delete(v18);
    }
    if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v24.__r_.__value_.__l.__data_);
    }
  }
}

void sub_100159060(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::internal::LogMessage::LogMessage(uint64_t result, int a2, uint64_t a3, int a4)
{
  *(_DWORD *)BOOL result = a2;
  *(void *)(result + 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  *(void *)(result + ++*(_DWORD *)(result + 32) = 0;
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, const std::string::value_type *a2)
{
  return a1;
}

{
  std::string *v3;
  std::string::size_type v4;
  std::string::size_type v5;

  uint64_t v3 = a1 + 1;
  int v4 = *((void *)a2 + 1);
  if (a2[23] >= 0)
  {
    char v5 = *((unsigned __int8 *)a2 + 23);
  }
  else
  {
    a2 = *(const std::string::value_type **)a2;
    char v5 = v4;
  }
  std::string::append(v3, a2, v5);
  return a1;
}

void *google::protobuf::internal::VersionString@<X0>(google::protobuf::internal *this@<X0>, void *a2@<X8>)
{
  snprintf(__str, 0x80uLL, "%d.%d.%d", (int)this / 1000000, (int)this / 1000 % 1000, (int)this % 1000);
  char __str[127] = 0;
  return sub_1000BBA84(a2, __str);
}

const char **google::protobuf::internal::LogFinisher::operator=(int a1, const char **this)
{
  return google::protobuf::internal::LogMessage::Finish(this);
}

void google::protobuf::internal::LogMessage::~LogMessage(void **this)
{
  if (*((char *)this + 47) < 0) {
    operator delete(this[3]);
  }
}

uint64_t google::protobuf::internal::DefaultLogHandler(uint64_t result, const char *a2, int a3, uint64_t a4)
{
  if ((result & 0x80000000) == 0)
  {
    if (*(char *)(a4 + 23) >= 0) {
      int v4 = (const char *)a4;
    }
    else {
      int v4 = *(const char **)a4;
    }
    fprintf(__stderrp, "[libprotobuf %s %s:%d] %s\n", off_1001D3218[result], a2, a3, v4);
    char v5 = __stderrp;
    return fflush(v5);
  }
  return result;
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, uint64_t a2)
{
  sub_1000D7AF4(a2, __p);
  if ((v7 & 0x80u) == 0) {
    uint64_t v3 = __p;
  }
  else {
    uint64_t v3 = (void **)__p[0];
  }
  if ((v7 & 0x80u) == 0) {
    std::string::size_type v4 = v7;
  }
  else {
    std::string::size_type v4 = (std::string::size_type)__p[1];
  }
  std::string::append(a1 + 1, (const std::string::value_type *)v3, v4);
  if ((char)v7 < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

{
  char __str[128];

  snprintf(__str, 0x80uLL, "%lu", a2);
  char __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

void sub_10015934C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *google::protobuf::internal::LogMessage::operator<<(std::string *a1, int a2)
{
  snprintf(__str, 0x80uLL, "%d", a2);
  char __str[127] = 0;
  std::string::append(a1 + 1, __str);
  return a1;
}

const char **google::protobuf::internal::LogMessage::Finish(const char **this)
{
  uint64_t v1 = this;
  if (*(_DWORD *)this == 3)
  {
    uint64_t v2 = 3;
  }
  else
  {
    int v3 = atomic_load((unsigned int *)&unk_1001EBF48);
    if (v3 > 0) {
      goto LABEL_6;
    }
    uint64_t v2 = *(unsigned int *)this;
  }
  this = (const char **)off_1001EB1C0(v2, v1[1], *((_DWORD *)v1 + 4), (uint64_t)(v1 + 3));
LABEL_6:
  if (*(_DWORD *)v1 == 3)
  {
    exception = __cxa_allocate_exception(0x30uLL);
    sub_100159528(exception, v1[1], *((unsigned int *)v1 + 4), v1 + 3);
  }
  return this;
}

void sub_100159514(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::ghtonl(google::protobuf *this)
{
  return bswap32(this);
}

void google::protobuf::FatalException::~FatalException(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)off_1001D3260;
  if (SHIBYTE(this[5].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }
  std::exception::~exception(this);
}

{
  uint64_t vars8;

  google::protobuf::FatalException::~FatalException(this);
  operator delete();
}

uint64_t google::protobuf::FatalException::what(google::protobuf::FatalException *this)
{
  uint64_t result = (uint64_t)this + 24;
  if (*((char *)this + 47) < 0) {
    return *(void *)result;
  }
  return result;
}

uint64_t sub_1001595EC(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  *(void *)a1 = off_1001D3260;
  *(void *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  uint64_t v5 = a1 + 24;
  if (*((char *)a4 + 23) < 0)
  {
    sub_1000BB834((unsigned char *)v5, *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v6 = *a4;
    *(void *)(v5 + 16) = *((void *)a4 + 2);
    *(_OWORD *)uint64_t v5 = v6;
  }
  return a1;
}

void sub_100159658(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

void google::protobuf::io::CodedInputStream::~CodedInputStream(google::protobuf::io::CodedInputStream *this)
{
  if (*((void *)this + 2)) {
    google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition((uint64_t)this);
  }
}

uint64_t google::protobuf::io::CodedInputStream::BackUpInputToCurrentPosition(uint64_t this)
{
  if (*(_DWORD *)(this + 28) + *(_DWORD *)(this + 44) + *(_DWORD *)(this + 8) - *(_DWORD *)this >= 1)
  {
    uint64_t v1 = this;
    this = (*(uint64_t (**)(void))(**(void **)(this + 16) + 24))(*(void *)(this + 16));
    unsigned int v2 = *(_DWORD *)(v1 + 24) - *(_DWORD *)(v1 + 44) + *(void *)v1 - *(_DWORD *)(v1 + 8);
    *(void *)(v1 + 8) = *(void *)v1;
    *(_DWORD *)(v1 + 44) = 0;
    *(void *)(v1 + 24) = v2;
  }
  return this;
}

void google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(google::protobuf::io::CodedInputStream *this)
{
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v6, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/coded_stream.cc", 193);
  unsigned int v2 = google::protobuf::internal::LogMessage::operator<<(v6, "A protocol message was rejected because it was too big (more than ");
  int v3 = google::protobuf::internal::LogMessage::operator<<(v2, *((_DWORD *)this + 12));
  std::string::size_type v4 = google::protobuf::internal::LogMessage::operator<<(v3, " bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in third_party/protobuf/src/google/protobuf/io/coded_stream.h.");
  google::protobuf::internal::LogFinisher::operator=((int)&v5, (const char **)&v4->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v6[0].__r_.__value_.__l.__data_);
}

void sub_1001597B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::io::CodedInputStream::SkipFallback(google::protobuf::io::CodedInputStream *this, int a2, int a3)
{
  if (*((int *)this + 11) < 1)
  {
    uint64_t v5 = (a2 - a3);
    *(void *)this = 0;
    *((void *)this + sub_1000333D0((uint64_t *)this + 1) = 0;
    int v6 = *((_DWORD *)this + 12);
    if (v6 >= *((_DWORD *)this + 10)) {
      int v6 = *((_DWORD *)this + 10);
    }
    int v7 = v6 - *((_DWORD *)this + 6);
    if (v7 >= (int)v5)
    {
      if ((*(uint64_t (**)(void, uint64_t))(**((void **)this + 2) + 32))(*((void *)this + 2), v5))
      {
        *((_DWORD *)this + 6) += v5;
        return 1;
      }
      else
      {
        int v8 = (*(uint64_t (**)(void))(**((void **)this + 2) + 40))(*((void *)this + 2));
        uint64_t result = 0;
        *((_DWORD *)this + 6) = v8;
      }
    }
    else
    {
      if (v7 >= 1)
      {
        *((_DWORD *)this + 6) = v6;
        (*(void (**)(void))(**((void **)this + 2) + 32))(*((void *)this + 2));
      }
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    *(void *)this += a3;
  }
  return result;
}

uint64_t google::protobuf::io::CodedInputStream::Refresh(google::protobuf::io::CodedInputStream *this)
{
  int v2 = *((_DWORD *)this + 11);
  if (v2 > 0 || *((int *)this + 7) > 0 || *((_DWORD *)this + 6) == *((_DWORD *)this + 10))
  {
    int v3 = *((_DWORD *)this + 6) - v2;
    int v4 = *((_DWORD *)this + 12);
    if (v3 >= v4 && v4 != *((_DWORD *)this + 10)) {
      google::protobuf::io::CodedInputStream::PrintTotalBytesLimitError(this);
    }
    return 0;
  }
  else
  {
    uint64_t v23 = 0;
    int v22 = 0;
    uint64_t v7 = *((void *)this + 2);
    do
    {
      uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t *, int *))(*(void *)v7 + 16))(v7, &v23, &v22);
      if (!v5)
      {
        *(void *)this = 0;
        *((void *)this + sub_1000333D0((uint64_t *)this + 1) = 0;
        return v5;
      }
      int v8 = v22;
    }
    while (!v22);
    uint64_t v9 = v23 + v22;
    *(void *)this = v23;
    *((void *)this + sub_1000333D0((uint64_t *)this + 1) = v9;
    if (v8 < 0)
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v21, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/io/coded_stream.cc", 638);
      std::string::size_type v10 = google::protobuf::internal::LogMessage::operator<<(v21, "CHECK failed: (buffer_size) >= (0): ");
      google::protobuf::internal::LogFinisher::operator=((int)&v20, (const char **)&v10->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v21[0].__r_.__value_.__l.__data_);
      int v8 = v22;
    }
    int v11 = *((_DWORD *)this + 6);
    int v12 = v11 - (v8 ^ 0x7FFFFFFF);
    if (v11 <= (v8 ^ 0x7FFFFFFF))
    {
      int v14 = v8 + v11;
      uint64_t v13 = *((void *)this + 1);
    }
    else
    {
      *((_DWORD *)this + 7) = v12;
      uint64_t v13 = *((void *)this + 1) - v12;
      *((void *)this + sub_1000333D0((uint64_t *)this + 1) = v13;
      int v14 = 0x7FFFFFFF;
    }
    *((_DWORD *)this + 6) = v14;
    int v15 = *((_DWORD *)this + 10);
    uint64_t v16 = v13 + *((int *)this + 11);
    *((void *)this + sub_1000333D0((uint64_t *)this + 1) = v16;
    int v17 = *((_DWORD *)this + 12);
    if (v17 >= v15) {
      int v17 = v15;
    }
    BOOL v18 = __OFSUB__(v14, v17);
    int v19 = v14 - v17;
    if ((v19 < 0) ^ v18 | (v19 == 0)) {
      int v19 = 0;
    }
    else {
      *((void *)this + sub_1000333D0((uint64_t *)this + 1) = v16 - v19;
    }
    *((_DWORD *)this + 1sub_1000333D0((uint64_t *)this + 1) = v19;
  }
  return v5;
}

void sub_100159A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::io::CodedInputStream::ReadRaw(google::protobuf::io::CodedInputStream *this, char *__dst, int a3)
{
  while (1)
  {
    int v6 = a3;
    uint64_t v7 = *(const void **)this;
    uint64_t v8 = *((void *)this + 1) - *(void *)this;
    BOOL v9 = __OFSUB__(a3, v8);
    a3 -= v8;
    if ((a3 < 0) ^ v9 | (a3 == 0)) {
      break;
    }
    memcpy(__dst, v7, (int)v8);
    __dst += (int)v8;
    *(void *)this += (int)v8;
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v6 <= (int)v8;
    }
  }
  memcpy(__dst, v7, v6);
  *(void *)this += v6;
  return v6 <= (int)v8;
}

BOOL google::protobuf::io::CodedInputStream::ReadString(const void **this, std::string *a2, std::string::size_type __n)
{
  if ((__n & 0x80000000) != 0) {
    return 0;
  }
  int v3 = a2;
  if (*((_DWORD *)this + 2) - *(_DWORD *)this >= (int)__n)
  {
    size_t v6 = __n;
    std::string::resize(a2, __n, 0);
    if (SHIBYTE(v3->__r_.__value_.__r.__words[2]) < 0) {
      int v3 = (std::string *)v3->__r_.__value_.__r.__words[0];
    }
    memcpy(v3, *this, v6);
    *this = (char *)*this + v6;
    return 1;
  }
  else
  {
    return google::protobuf::io::CodedInputStream::ReadStringFallback((google::protobuf::io::CodedInputStream *)this, a2, __n);
  }
}

BOOL google::protobuf::io::CodedInputStream::ReadStringFallback(google::protobuf::io::CodedInputStream *this, std::string *a2, std::string::size_type __requested_capacity)
{
  int v3 = __requested_capacity;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    if (a2->__r_.__value_.__l.__size_)
    {
      *a2->__r_.__value_.__l.__data_ = 0;
      a2->__r_.__value_.__l.__size_ = 0;
    }
  }
  else if (*((unsigned char *)&a2->__r_.__value_.__s + 23))
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = 0;
  }
  int v6 = *((_DWORD *)this + 12);
  if (v6 >= *((_DWORD *)this + 10)) {
    int v6 = *((_DWORD *)this + 10);
  }
  if (v6 != 0x7FFFFFFF)
  {
    int v7 = v6 - *((_DWORD *)this + 6) + *((_DWORD *)this + 11) + *((_DWORD *)this + 2) - *(_DWORD *)this;
    BOOL v8 = v7 < (int)__requested_capacity || (int)__requested_capacity < 1;
    if (!v8 && v7 >= 1) {
      std::string::reserve(a2, __requested_capacity);
    }
  }
  while (1)
  {
    int v10 = v3;
    int v11 = *(const std::string::value_type **)this;
    uint64_t v12 = *((void *)this + 1) - *(void *)this;
    BOOL v13 = __OFSUB__(v3, v12);
    v3 -= v12;
    if ((v3 < 0) ^ v13 | (v3 == 0)) {
      break;
    }
    if (v12)
    {
      std::string::append(a2, v11, (int)v12);
      int v11 = *(const std::string::value_type **)this;
    }
    *(void *)this = &v11[(int)v12];
    if ((google::protobuf::io::CodedInputStream::Refresh(this) & 1) == 0) {
      return v10 <= (int)v12;
    }
  }
  std::string::append(a2, v11, v10);
  *(void *)this += v10;
  return v10 <= (int)v12;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(unsigned int **this, unsigned int *a2)
{
  int v3 = *this;
  if (((*((_DWORD *)this + 2) - *this) & 0xFFFFFFFC) != 0)
  {
    *this = v3 + 1;
  }
  else
  {
    int v3 = (unsigned int *)__dst;
    BOOL result = google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)this, __dst, 4);
    if (!result) {
      return result;
    }
  }
  *a2 = *v3;
  return 1;
}

BOOL google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(unint64_t **this, unint64_t *a2)
{
  int v3 = *this;
  if (((*((_DWORD *)this + 2) - *this) & 0xFFFFFFF8) != 0)
  {
    *this = v3 + 1;
  }
  else
  {
    int v3 = (unint64_t *)v5;
    BOOL result = google::protobuf::io::CodedInputStream::ReadRaw((google::protobuf::io::CodedInputStream *)this, v5, 8);
    if (!result) {
      return result;
    }
  }
  *a2 = *v3;
  return 1;
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint64Fallback(unsigned __int8 **this)
{
  int v2 = *this;
  unint64_t v3 = (unint64_t)this[1];
  if ((int)v3 - (int)v2 <= 9 && (v3 <= (unint64_t)v2 || *(char *)(v3 - 1) < 0))
  {
    unint64_t v8 = 0;
    google::protobuf::io::CodedInputStream::ReadVarint64Slow((char **)this, &v8);
    return v8;
  }
  else
  {
    unint64_t v8 = 0;
    char v6 = sub_100159F84(v2, &v8);
    uint64_t result = 0;
    if (v6)
    {
      *this = v5;
      return v8;
    }
  }
  return result;
}

uint64_t google::protobuf::io::CodedInputStream::ReadVarint32Fallback(google::protobuf::io::CodedInputStream *this, int a2)
{
  unint64_t v3 = *(void *)this;
  unint64_t v2 = *((void *)this + 1);
  if ((int)(v2 - *(void *)this) <= 9 && (v2 <= v3 || *(char *)(v2 - 1) < 0))
  {
    uint64_t Varint64Fallback = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((unsigned __int8 **)this);
    if ((v7 & 1) == 0) {
      return -1;
    }
  }
  else
  {
    unsigned int v4 = a2 + (*(unsigned __int8 *)(v3 + 1) << 7) - 128;
    if (*(char *)(v3 + 1) < 0)
    {
      unsigned int v4 = v4 + (*(unsigned __int8 *)(v3 + 2) << 14) - 0x4000;
      if (*(char *)(v3 + 2) < 0)
      {
        unsigned int v4 = v4 + (*(unsigned __int8 *)(v3 + 3) << 21) - 0x200000;
        if (*(char *)(v3 + 3) < 0)
        {
          int v8 = *(char *)(v3 + 4);
          unsigned int v4 = v4 + (v8 << 28) - 0x10000000;
          if (v8 < 0)
          {
            uint64_t v9 = 0;
            while (*(char *)(v3 + v9 + 5) < 0)
            {
              ++v9;
              uint64_t Varint64Fallback = -1;
              if (v9 == 5) {
                return Varint64Fallback;
              }
            }
            uint64_t v5 = v3 + v9 + 6;
          }
          else
          {
            uint64_t v5 = v3 + 5;
          }
        }
        else
        {
          uint64_t v5 = v3 + 4;
        }
      }
      else
      {
        uint64_t v5 = v3 + 3;
      }
    }
    else
    {
      uint64_t v5 = v3 + 2;
    }
    *(void *)this = v5;
    return v4;
  }
  return Varint64Fallback;
}

uint64_t sub_100159F84(unsigned __int8 *a1, unint64_t *a2)
{
  uint64_t v2 = a1[1];
  if ((char)a1[1] < 0)
  {
    if ((char)a1[2] < 0)
    {
      if ((char)a1[3] < 0)
      {
        if ((char)a1[4] < 0)
        {
          if ((char)a1[5] < 0)
          {
            if ((char)a1[6] < 0)
            {
              if ((char)a1[7] < 0)
              {
                int v19 = (char)a1[8];
                if (v19 < 0)
                {
                  int v23 = (char)a1[9];
                  if (v23 < 0) {
                    return 0;
                  }
                  uint64_t v24 = 0;
                  unint64_t v3 = (unint64_t)v23 << 63;
                  unsigned int v25 = a1;
                  do
                  {
                    unsigned int v26 = *v25++;
                    v3 += (v26 - 128) << v24;
                    v24 += 7;
                  }
                  while (v24 != 63);
                }
                else
                {
                  uint64_t v20 = 0;
                  unint64_t v3 = (unint64_t)v19 << 56;
                  char v21 = a1;
                  do
                  {
                    unsigned int v22 = *v21++;
                    v3 += (v22 - 128) << v20;
                    v20 += 7;
                  }
                  while (v20 != 56);
                }
              }
              else
              {
                uint64_t v16 = 0;
                unint64_t v3 = (unint64_t)a1[7] << 49;
                int v17 = a1;
                do
                {
                  unsigned int v18 = *v17++;
                  v3 += (v18 - 128) << v16;
                  v16 += 7;
                }
                while (v16 != 49);
              }
            }
            else
            {
              uint64_t v13 = 0;
              unint64_t v3 = (unint64_t)a1[6] << 42;
              int v14 = a1;
              do
              {
                unsigned int v15 = *v14++;
                v3 += (v15 - 128) << v13;
                v13 += 7;
              }
              while (v13 != 42);
            }
          }
          else
          {
            uint64_t v10 = 0;
            unint64_t v3 = (unint64_t)a1[5] << 35;
            int v11 = a1;
            do
            {
              unsigned int v12 = *v11++;
              v3 += (v12 - 128) << v10;
              v10 += 7;
            }
            while (v10 != 35);
          }
        }
        else
        {
          uint64_t v7 = 0;
          unint64_t v3 = (unint64_t)a1[4] << 28;
          int v8 = a1;
          do
          {
            unsigned int v9 = *v8++;
            v3 += (v9 - 128) << v7;
            v7 += 7;
          }
          while (v7 != 28);
        }
      }
      else
      {
        uint64_t v4 = 0;
        unint64_t v3 = (unint64_t)a1[3] << 21;
        uint64_t v5 = a1;
        do
        {
          unsigned int v6 = *v5++;
          v3 += (v6 - 128) << v4;
          v4 += 7;
        }
        while (v4 != 21);
      }
    }
    else
    {
      unint64_t v3 = (v2 << 7) + ((unint64_t)a1[2] << 14) + *a1 - 16512;
    }
  }
  else
  {
    unint64_t v3 = *a1 + (v2 << 7) - 128;
  }
  *a2 = v3;
  return 1;
}

uint64_t google::protobuf::io::CodedInputStream::ReadTagSlow(google::protobuf::io::CodedInputStream *this)
{
  uint64_t v2 = *(char **)this;
  unint64_t v3 = *((void *)this + 1);
  if (*(void *)this != v3)
  {
LABEL_4:
    if ((unint64_t)v2 >= v3 || *v2 < 0)
    {
      uint64_t result = google::protobuf::io::CodedInputStream::ReadVarint64Fallback((unsigned __int8 **)this);
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t result = *v2;
      *(void *)this = v2 + 1;
    }
    return result;
  }
  if (google::protobuf::io::CodedInputStream::Refresh(this))
  {
    uint64_t v2 = *(char **)this;
    unint64_t v3 = *((void *)this + 1);
    goto LABEL_4;
  }
  int v6 = *((_DWORD *)this + 12);
  uint64_t result = 0;
  BOOL v7 = *((_DWORD *)this + 6) - *((_DWORD *)this + 11) < v6 || *((_DWORD *)this + 10) == v6;
  *((unsigned char *)this + 36) = v7;
  return result;
}

uint64_t google::protobuf::io::CodedInputStream::ReadTagFallback(google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  uint64_t v3 = *(void *)this;
  uint64_t v2 = *((void *)this + 1);
  int v4 = v2 - *(void *)this;
  if (v4 > 9)
  {
LABEL_4:
    if (a2)
    {
      uint64_t v5 = a2 + (*(unsigned __int8 *)(v3 + 1) << 7) - 128;
      if (*(char *)(v3 + 1) < 0)
      {
        uint64_t v5 = v5 + (*(unsigned __int8 *)(v3 + 2) << 14) - 0x4000;
        if (*(char *)(v3 + 2) < 0)
        {
          uint64_t v5 = v5 + (*(unsigned __int8 *)(v3 + 3) << 21) - 0x200000;
          if (*(char *)(v3 + 3) < 0)
          {
            int v10 = *(char *)(v3 + 4);
            uint64_t v5 = (v5 + (v10 << 28) - 0x10000000);
            if (v10 < 0)
            {
              uint64_t v11 = 0;
              while (*(char *)(v3 + v11 + 5) < 0)
              {
                a2 = 0;
                if (++v11 == 5) {
                  return a2;
                }
              }
              uint64_t v6 = v3 + v11 + 6;
            }
            else
            {
              uint64_t v6 = v3 + 5;
            }
          }
          else
          {
            uint64_t v6 = v3 + 4;
          }
        }
        else
        {
          uint64_t v6 = v3 + 3;
        }
      }
      else
      {
        uint64_t v6 = v3 + 2;
      }
      *(void *)this = v6;
      return v5;
    }
    else
    {
      *(void *)this = v3 + 1;
    }
    return a2;
  }
  if (v4 >= 1)
  {
    if ((*(char *)(v2 - 1) & 0x80000000) == 0) {
      goto LABEL_4;
    }
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  if (v4) {
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  int v8 = *((_DWORD *)this + 11);
  int v9 = *((_DWORD *)this + 6);
  if (v8 <= 0 && v9 != *((_DWORD *)this + 10)) {
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  if (v9 - v8 >= *((_DWORD *)this + 12)) {
    return google::protobuf::io::CodedInputStream::ReadTagSlow(this);
  }
  a2 = 0;
  *((unsigned char *)this + 36) = 1;
  return a2;
}

BOOL google::protobuf::io::CodedInputStream::ReadVarint64Slow(char **this, unint64_t *a2)
{
  uint64_t v4 = 0;
  unint64_t v5 = 0;
  while (1)
  {
    BOOL v6 = v4 != 10;
    if (v4 == 10) {
      break;
    }
    while (1)
    {
      BOOL v7 = *this;
      if (*this != this[1]) {
        break;
      }
      if ((google::protobuf::io::CodedInputStream::Refresh((google::protobuf::io::CodedInputStream *)this) & 1) == 0)
      {
        unint64_t v5 = 0;
        BOOL v6 = 0;
        goto LABEL_7;
      }
    }
    char v8 = *v7;
    v5 |= (unint64_t)(*v7 & 0x7F) << (7 * v4);
    *this = v7 + 1;
    ++v4;
    if ((v8 & 0x80) == 0) {
      goto LABEL_7;
    }
  }
  unint64_t v5 = 0;
LABEL_7:
  *a2 = v5;
  return v6;
}

unint64_t google::protobuf::io::EpsCopyOutputStream::Flush(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  uint64_t v4 = (_OWORD *)((char *)this + 16);
  unint64_t v5 = (char *)this + 32;
LABEL_2:
  unint64_t v7 = *(void *)this;
  BOOL v6 = (void *)*((void *)this + 1);
  if (v6)
  {
    int v8 = a2 - v7;
    if ((unint64_t)a2 <= v7)
    {
      memcpy(v6, v4, a2 - (unsigned __int8 *)v4);
      unint64_t v12 = *(void *)this;
      *((void *)this + 1) += a2 - (unsigned __int8 *)v4;
      return v12 - (void)a2;
    }
    else
    {
      if (*((void *)this + 6))
      {
        memcpy(v6, v4, v7 - (void)v4);
        int v15 = 0;
        while (1)
        {
          int v14 = 0;
          if (((*(uint64_t (**)(void, _OWORD **, int *))(**((void **)this + 6) + 16))(*((void *)this + 6), &v14, &v15) & 1) == 0)break; {
          uint64_t v9 = v15;
          }
          if (v15)
          {
            int v10 = v14;
            uint64_t v11 = *(_OWORD **)this;
            if (v15 < 17)
            {
              _OWORD *v4 = *v11;
              *(void *)this = (char *)v4 + (int)v9;
              *((void *)this + sub_1000333D0((uint64_t *)this + 1) = v10;
              int v10 = v4;
            }
            else
            {
              *int v14 = *v11;
              *(void *)this = (char *)v10 + v9 - 16;
              *((void *)this + sub_1000333D0((uint64_t *)this + 1) = 0;
            }
            a2 = (unsigned __int8 *)v10 + v8;
            if (*((unsigned char *)this + 56)) {
              return 0;
            }
            goto LABEL_2;
          }
        }
      }
      unint64_t result = 0;
      *((unsigned char *)this + 56) = 1;
      *(void *)this = v5;
    }
  }
  else
  {
    unint64_t result = v7 - (void)a2 + 16;
    *((void *)this + sub_1000333D0((uint64_t *)this + 1) = a2;
  }
  return result;
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::Trim(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  if (!*((unsigned char *)this + 56))
  {
    unint64_t v3 = google::protobuf::io::EpsCopyOutputStream::Flush(this, a2);
    if (v3) {
      (*(void (**)(void, unint64_t))(**((void **)this + 6) + 24))(*((void *)this + 6), v3);
    }
    a2 = (unsigned __int8 *)this + 16;
    *(void *)this = (char *)this + 16;
    *((void *)this + sub_1000333D0((uint64_t *)this + 1) = (char *)this + 16;
  }
  return a2;
}

uint64_t google::protobuf::io::EpsCopyOutputStream::FlushAndResetBuffer(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  if (*((unsigned char *)this + 56)) {
    return (uint64_t)this + 16;
  }
  int v3 = google::protobuf::io::EpsCopyOutputStream::Flush(this, a2);
  if (*((unsigned char *)this + 56)) {
    return (uint64_t)this + 16;
  }
  unint64_t v5 = (char *)(*((void *)this + 1) + v3 - 16);
  if (v3 > 16)
  {
    uint64_t v6 = 0;
  }
  else
  {
    unint64_t v5 = (char *)this + v3 + 16;
    uint64_t v6 = *((void *)this + 1);
  }
  if (v3 <= 16) {
    uint64_t result = (uint64_t)this + 16;
  }
  else {
    uint64_t result = *((void *)this + 1);
  }
  *(void *)this = v5;
  *((void *)this + sub_1000333D0((uint64_t *)this + 1) = v6;
  return result;
}

_OWORD *google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(google::protobuf::io::EpsCopyOutputStream *this, unsigned __int8 *a2)
{
  LODWORD(vsub_100157AEC((void *)this + 2) = a2;
  uint64_t v4 = (_OWORD *)((char *)this + 16);
  unint64_t v5 = (char *)this + 32;
  while (!*((unsigned char *)this + 56))
  {
    uint64_t v6 = *(char **)this;
    if (*((void *)this + 6))
    {
      unint64_t v7 = (void *)*((void *)this + 1);
      if (!v7)
      {
        _OWORD *v4 = *(_OWORD *)v6;
        *((void *)this + sub_1000333D0((uint64_t *)this + 1) = v6;
        goto LABEL_11;
      }
      memcpy(v7, v4, v6 - (char *)v4);
      int v14 = 0;
      while (1)
      {
        uint64_t v13 = 0;
        if (((*(uint64_t (**)(void, _OWORD **, int *))(**((void **)this + 6) + 16))(*((void *)this + 6), &v13, &v14) & 1) == 0)break; {
        uint64_t v8 = v14;
        }
        if (v14)
        {
          uint64_t v9 = v13;
          int v10 = *(char **)this;
          if (v14 >= 17)
          {
            _OWORD *v13 = *(_OWORD *)v10;
            unint64_t v11 = (unint64_t)v9 + v8 - 16;
            *(void *)this = v11;
            *((void *)this + sub_1000333D0((uint64_t *)this + 1) = 0;
            goto LABEL_13;
          }
          _OWORD *v4 = *(_OWORD *)v10;
          unint64_t v11 = (unint64_t)v4 + (int)v8;
          *(void *)this = v11;
          *((void *)this + sub_1000333D0((uint64_t *)this + 1) = v9;
          goto LABEL_12;
        }
      }
    }
    *((unsigned char *)this + 56) = 1;
LABEL_11:
    *(void *)this = v5;
    unint64_t v11 = (unint64_t)v5;
LABEL_12:
    uint64_t v9 = v4;
LABEL_13:
    unint64_t v2 = (unint64_t)v9 + (int)v2 - (int)v6;
    if (v2 < v11) {
      return (_OWORD *)v2;
    }
  }
  return v4;
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(google::protobuf::io::EpsCopyOutputStream *this, char *__src, int a3, unsigned __int8 *__dst)
{
  uint64_t v4 = __dst;
  int v5 = a3;
  int v7 = *(_DWORD *)this - __dst + 16;
  if (v7 < a3)
  {
    do
    {
      memcpy(v4, __src, v7);
      v5 -= v7;
      __src += v7;
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, &v4[v7]);
      int v7 = *(_DWORD *)this - v4 + 16;
    }
    while (v5 > v7);
  }
  memcpy(v4, __src, v5);
  return &v4[v5];
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteAliasedRaw(google::protobuf::io::EpsCopyOutputStream *this, void *__src, uint64_t a3, unsigned __int8 *__dst)
{
  uint64_t v8 = *(void *)this - (void)__dst;
  if (v8 + 16 <= (int)a3)
  {
    uint64_t v9 = google::protobuf::io::EpsCopyOutputStream::Trim(this, __dst);
    if (((*(uint64_t (**)(void, void *, uint64_t))(**((void **)this + 6) + 40))(*((void *)this + 6), __src, a3) & 1) == 0)
    {
      *((unsigned char *)this + 56) = 1;
      uint64_t v9 = (unsigned __int8 *)this + 16;
      *(void *)this = (char *)this + 32;
    }
    return v9;
  }
  if (v8 >= (int)a3)
  {
    memcpy(__dst, __src, (int)a3);
    return &__dst[(int)a3];
  }
  return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, (char *)__src, a3, __dst);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(google::protobuf::io::EpsCopyOutputStream *this, int a2, void **a3, unsigned __int8 *a4)
{
  if (*(void *)this <= (unint64_t)a4) {
    a4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
  }
  if (*((char *)a3 + 23) >= 0) {
    uint64_t v7 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    uint64_t v7 = *((unsigned int *)a3 + 2);
  }
  uint64_t v8 = sub_10004FAC0((uint64_t)this, a2, v7, a4);
  if (*((char *)a3 + 23) >= 0) {
    uint64_t v9 = a3;
  }
  else {
    uint64_t v9 = *a3;
  }
  return sub_100126FEC(this, v9, v7, v8);
}

unsigned __int8 *google::protobuf::io::EpsCopyOutputStream::WriteStringOutline(google::protobuf::io::EpsCopyOutputStream *this, int a2, uint64_t a3, unsigned __int8 *a4)
{
  if (*(void *)this <= (unint64_t)a4) {
    a4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a4);
  }
  if (*(char *)(a3 + 23) >= 0) {
    LODWORD(v7) = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    uint64_t v7 = *(void *)(a3 + 8);
  }
  uint64_t v8 = sub_10004FAC0((uint64_t)this, a2, v7, a4);
  uint64_t v9 = v8;
  if (*(char *)(a3 + 23) >= 0) {
    int v10 = (char *)a3;
  }
  else {
    int v10 = *(char **)a3;
  }
  if (*(void *)this - (void)v8 < (int)v7)
  {
    return google::protobuf::io::EpsCopyOutputStream::WriteRawFallback(this, v10, v7, v8);
  }
  else
  {
    memcpy(v8, v10, (int)v7);
    return &v9[(int)v7];
  }
}

uint64_t google::protobuf::io::CodedOutputStream::CodedOutputStream(uint64_t a1, uint64_t a2, int a3)
{
  char v6 = google::protobuf::io::CodedOutputStream::default_serialization_deterministic_ & 1;
  uint64_t v7 = a1 + 16;
  *(void *)a1 = a1 + 16;
  *(void *)(a1 + 8) = a1 + 16;
  *(void *)(a1 + 48) = a2;
  *(_WORD *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 58) = v6;
  *(void *)(a1 + 64) = a1 + 16;
  *(void *)(a1 + 7sub_100157AEC((void *)this + 2) = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 32))(a2);
  if (a3)
  {
    uint64_t v14 = 0;
    int v13 = 0;
    if ((*(unsigned int (**)(uint64_t, uint64_t *, int *))(*(void *)a2 + 16))(a2, &v14, &v13) && v13 != 0)
    {
      uint64_t v9 = v14;
      if (v13 <= 16) {
        uint64_t v10 = v7 + v13;
      }
      else {
        uint64_t v10 = v14 + v13 - 16;
      }
      if (v13 <= 16) {
        uint64_t v11 = v14;
      }
      else {
        uint64_t v11 = 0;
      }
      if (v13 <= 16) {
        uint64_t v9 = v7;
      }
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v11;
      *(void *)(a1 + 64) = v9;
    }
  }
  return a1;
}

void google::protobuf::io::CodedOutputStream::~CodedOutputStream(google::protobuf::io::CodedOutputStream *this)
{
  *((void *)this + 8) = google::protobuf::io::EpsCopyOutputStream::Trim(this, *((unsigned __int8 **)this + 8));
}

uint64_t google::protobuf::internal::UTF8GenericScan(unsigned int *a1, unsigned char *a2, int a3, _DWORD *a4)
{
  *a4 = 0;
  if (!a3) {
    return 241;
  }
  unint64_t v4 = (unint64_t)&a2[a3];
  if (a3 >= 7) {
    unint64_t v5 = v4 - 7;
  }
  else {
    unint64_t v5 = (unint64_t)a2;
  }
  uint64_t v6 = *((void *)a1 + 4) + *a1;
  uint64_t v7 = *((void *)a1 + 7);
  uint64_t v8 = a2;
  while (2)
  {
    uint64_t v9 = v8 & 7;
    if ((v8 & 7) != 0 && (unint64_t)v8 < v4)
    {
      char v10 = (_BYTE)v8 + 1;
      while (!*(unsigned char *)(v7 + *v8))
      {
        ++v8;
        uint64_t v9 = v10 & 7;
        if ((v10 & 7) != 0)
        {
          ++v10;
          if ((unint64_t)v8 < v4) {
            continue;
          }
        }
        goto LABEL_12;
      }
LABEL_20:
      uint64_t v11 = v8;
      goto LABEL_21;
    }
LABEL_12:
    if (v9 || (unint64_t)v8 >= v5) {
      goto LABEL_20;
    }
    uint64_t v11 = v8 + 4;
    while (1)
    {
      unint64_t v12 = *(v11 - 1);
      if ((((v12 - a1[6]) | (v12 + a1[7]) | (*v11 - a1[6]) | (*v11 + a1[7])) & 0x80808080) != 0) {
        break;
      }
LABEL_18:
      int v13 = v11 + 2;
      uint64_t v14 = v11 + 1;
      v11 += 2;
      if ((unint64_t)v14 >= v5)
      {
        uint64_t v11 = v13 - 1;
        goto LABEL_21;
      }
    }
    if (!(*(unsigned __int8 *)(v7 + BYTE1(v12)) | *(unsigned __int8 *)(v7 + v12) | *(unsigned __int8 *)(v7 + BYTE2(v12)) | *(unsigned __int8 *)(v7 + (v12 >> 24))))
    {
      if (*(unsigned __int8 *)(v7 + BYTE1(*v11)) | *(unsigned __int8 *)(v7 + *v11) | *(unsigned __int8 *)(v7 + BYTE2(*v11)) | *(unsigned __int8 *)(v7 + ((unint64_t)*v11 >> 24))) {
        goto LABEL_21;
      }
      goto LABEL_18;
    }
    --v11;
LABEL_21:
    if ((unint64_t)v11 < v4)
    {
      unint64_t v15 = v4 - (void)v11;
      uint64_t v16 = (char *)v11 - 1;
      uint64_t v17 = *((void *)a1 + 4) + *a1;
      uint64_t v8 = v11;
      while (1)
      {
        uint64_t v18 = *(unsigned __int8 *)(v17 + *v8);
        if (v18 > 0xEF) {
          break;
        }
        ++v8;
        uint64_t v17 = v6 + (int)(v18 << a1[4]);
        ++v16;
        if (!--v15)
        {
          LODWORD(v8) = v4;
          goto LABEL_32;
        }
      }
      if (a1[1] <= (int)v17 - (int)v6)
      {
        do
        {
          uint64_t v8 = v16;
          if (v16 <= a2) {
            break;
          }
          --v16;
        }
        while ((*v8 & 0xC0) == 0x80);
      }
      if (v18 != 253) {
        goto LABEL_42;
      }
      continue;
    }
    break;
  }
  LODWORD(v8) = v11;
  LODWORD(v17) = a1[8] + *a1;
LABEL_32:
  if (a1[1] <= (int)v17 - (int)v6)
  {
    if ((unint64_t)v11 <= v4) {
      int v19 = (_DWORD *)v4;
    }
    else {
      int v19 = v11;
    }
    uint64_t v20 = (char *)v19 - 1;
    do
    {
      uint64_t v8 = v20;
      if (v20 <= a2) {
        break;
      }
      --v20;
    }
    while ((*v8 & 0xC0) == 0x80);
    uint64_t v18 = 240;
  }
  else
  {
    uint64_t v18 = 241;
  }
LABEL_42:
  *a4 = v8 - a2;
  return v18;
}

uint64_t google::protobuf::internal::UTF8GenericScanFastAscii(unsigned int *a1, char *a2, int a3, _DWORD *a4)
{
  *a4 = 0;
  if (!a3) {
    return 241;
  }
  uint64_t v8 = &a2[a3];
  if (a3 >= 7) {
    unint64_t v9 = (unint64_t)(v8 - 7);
  }
  else {
    unint64_t v9 = (unint64_t)a2;
  }
  int v15 = 0;
  char v10 = a2;
  do
  {
    uint64_t v11 = v10 & 7;
    if ((v10 & 7) != 0 && v10 < v8)
    {
      char v12 = (_BYTE)v10 + 1;
      while ((*v10 & 0x80000000) == 0)
      {
        ++v10;
        uint64_t v11 = v12 & 7;
        if ((v12 & 7) != 0)
        {
          ++v12;
          if (v10 < v8) {
            continue;
          }
        }
        goto LABEL_12;
      }
    }
    else
    {
LABEL_12:
      if (!v11)
      {
        while ((unint64_t)v10 < v9 && ((*((_DWORD *)v10 + 1) | *(_DWORD *)v10) & 0x80808080) == 0)
          v10 += 8;
      }
    }
    if (v10 < v8)
    {
      int64_t v13 = v8 - v10;
      while ((*v10 & 0x80000000) == 0)
      {
        ++v10;
        if (!--v13)
        {
          char v10 = v8;
          break;
        }
      }
    }
    uint64_t result = google::protobuf::internal::UTF8GenericScan(a1, &a2[(int)v10 - (int)a2], a3 - ((int)v10 - (int)a2), &v15);
    v10 += v15;
  }
  while (result == 253);
  *a4 = v10 - a2;
  return result;
}

BOOL google::protobuf::internal::IsStructurallyValidUTF8(google::protobuf::internal *this, const char *a2)
{
  int v2 = (int)a2;
  int v4 = 0;
  google::protobuf::internal::UTF8GenericScanFastAscii(dword_1001D3278, (char *)this, (int)a2, &v4);
  return v4 == v2;
}

void sub_10015AF20(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/duration.pb.cc", a4);
  qword_1001EE170 = 0;
  unk_1001EE178 = 0;
  google::protobuf::_Duration_default_instance_ = (uint64_t)off_1001D32D8;
  qword_1001EE180 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_Duration_default_instance_, v4);
}

void google::protobuf::Duration::~Duration(google::protobuf::Duration *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t google::protobuf::Duration::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::Duration::Clear(google::protobuf::Duration *this)
{
  char v2 = *((unsigned char *)this + 8);
  uint64_t result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + 4) = 0;
  result[1] = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *google::protobuf::Duration::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v25 = a2;
  if ((sub_1000355B8(a3, &v25, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = (google::protobuf::internal *)((char *)v25 + 1);
      unsigned int v8 = *(unsigned __int8 *)v25;
      if ((*(char *)v25 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v25, (const char *)(v9 - 128));
      unsigned int v25 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v7 = TagFallback;
      unsigned int v8 = v20;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 16) {
          goto LABEL_13;
        }
        uint64_t v14 = (google::protobuf::internal *)((char *)v7 + 1);
        LODWORD(v13) = *(unsigned __int8 *)v7;
        if ((v13 & 0x80) == 0) {
          goto LABEL_25;
        }
        int v15 = *(char *)v14;
        unint64_t v13 = v13 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          uint64_t v14 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_25:
          unsigned int v25 = v14;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_30;
        }
        char v21 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, v13);
        unsigned int v25 = v21;
        *(_DWORD *)(a1 + 24) = v22;
        if (!v21) {
          return 0;
        }
      }
      else
      {
        if (v8 >> 3 != 1 || v8 != 8)
        {
LABEL_13:
          if (v8) {
            BOOL v11 = (v8 & 7) == 4;
          }
          else {
            BOOL v11 = 1;
          }
          if (v11)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fstruct_2eproto, 0) = v8 - 1;
            return v25;
          }
          if (*v6)
          {
            char v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            char v12 = sub_10003562C((unint64_t *)(a1 + 8));
            uint64_t v7 = v25;
          }
          unsigned int v25 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
          if (!v25) {
            return 0;
          }
          goto LABEL_30;
        }
        uint64_t v16 = (google::protobuf::internal *)((char *)v7 + 1);
        unint64_t v17 = *(unsigned __int8 *)v7;
        if ((*(char *)v7 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v18 = *(char *)v16;
        unint64_t v17 = v17 + (v18 << 7) - 128;
        if ((v18 & 0x80000000) == 0)
        {
          uint64_t v16 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_29:
          unsigned int v25 = v16;
          *(void *)(a1 + 16) = v17;
          goto LABEL_30;
        }
        int v23 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, v17);
        unsigned int v25 = v23;
        *(void *)(a1 + 16) = v24;
        if (!v23) {
          return 0;
        }
      }
LABEL_30:
      if (sub_1000355B8(a3, &v25, *(_DWORD *)(a3 + 92))) {
        return v25;
      }
    }
    uint64_t v7 = (google::protobuf::internal *)((char *)v25 + 2);
LABEL_7:
    unsigned int v25 = v7;
    goto LABEL_8;
  }
  return v25;
}

const google::protobuf::UnknownFieldSet *google::protobuf::Duration::_InternalSerialize(google::protobuf::Duration *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v6 = *((void *)this + 2);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unint64_t v6 = *((void *)this + 2);
    }
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unint64_t v8 = v7 >> 7;
          ++a2;
          unint64_t v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  unsigned int v10 = *((_DWORD *)this + 6);
  if (v10)
  {
    if (*(void *)a3 <= (unint64_t)a2)
    {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      unsigned int v10 = *((_DWORD *)this + 6);
    }
    *a2 = 16;
    if (v10 > 0x7F)
    {
      a2[1] = v10 | 0x80;
      unint64_t v11 = (unint64_t)(int)v10 >> 7;
      if (v10 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
          unint64_t v12 = v11 >> 7;
          ++a2;
          unint64_t v13 = v11 >> 14;
          v11 >>= 7;
        }
        while (v13);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v12;
      }
      else
      {
        a2[2] = v11;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v10;
      a2 += 2;
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *google::protobuf::Duration::ByteSizeLong(google::protobuf::Duration *this)
{
  uint64_t v1 = *((void *)this + 2);
  unint64_t v2 = (9 * (__clz(v1 | 1) ^ 0x3F) + 73) >> 6;
  if (v1) {
    int v3 = (const google::protobuf::UnknownFieldSet *)(v2 + 1);
  }
  else {
    int v3 = 0;
  }
  int v4 = *((_DWORD *)this + 6);
  if (v4)
  {
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    int v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3 + v5);
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::Duration *)((char *)this + 8), v3, (_DWORD *)this + 7);
  }
  *((_DWORD *)this + 7) = v3;
  return (char *)v3;
}

void google::protobuf::Duration::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::Duration::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **google::protobuf::Duration::MergeFrom(void **this, const google::protobuf::Duration *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  uint64_t v5 = (void *)*((void *)a2 + 2);
  if (v5) {
    v3[2] = v5;
  }
  int v6 = *((_DWORD *)a2 + 6);
  if (v6) {
    *((_DWORD *)v3 + 6) = v6;
  }
  return this;
}

void google::protobuf::Duration::CopyFrom(google::protobuf::Duration *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    uint64_t v5 = (char *)this + 8;
    *((_DWORD *)v5 + 4) = 0;
    *((void *)v5 + sub_1000333D0((uint64_t *)this + 1) = 0;
    if (v6) {
      sub_100035820((unint64_t *)v5);
    }
    google::protobuf::Duration::MergeFrom((void **)this, lpsrc);
  }
}

uint64_t google::protobuf::Duration::IsInitialized(google::protobuf::Duration *this)
{
  return 1;
}

uint64_t google::protobuf::Duration::GetMetadata(google::protobuf::Duration *this)
{
  return *off_1001EB240;
}

void *sub_10015B590(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  uint64_t result = sub_10015B60C(this, 1);
  void *result = off_1001D32D8;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_10015B5FC()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Duration>(0);
}

uint64_t sub_10015B604(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::Duration>(a2);
}

void *sub_10015B60C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_10015B6C4);
}

uint64_t *sub_10015B6C4(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void sub_10015B6E4()
{
}

void snappy::ByteArraySource::~ByteArraySource(snappy::ByteArraySource *this)
{
}

uint64_t snappy::ByteArraySource::Available(snappy::ByteArraySource *this)
{
  return *((void *)this + 2);
}

uint64_t snappy::ByteArraySource::Peek(snappy::ByteArraySource *this, unint64_t *a2)
{
  int v3 = (char *)this + 8;
  uint64_t result = *((void *)this + 1);
  *a2 = *((void *)v3 + 1);
  return result;
}

uint64_t snappy::ByteArraySource::Skip(uint64_t this, uint64_t a2)
{
  uint64_t v2 = *(void *)(this + 16) - a2;
  *(void *)(this + 8) += a2;
  *(void *)(this + 16) = v2;
  return this;
}

void snappy::UncheckedByteArraySink::~UncheckedByteArraySink(snappy::UncheckedByteArraySink *this)
{
}

char *snappy::UncheckedByteArraySink::Append(snappy::UncheckedByteArraySink *this, char *a2, size_t __n)
{
  uint64_t result = (char *)*((void *)this + 1);
  if (result != a2)
  {
    uint64_t result = (char *)memcpy(result, a2, __n);
    a2 = (char *)*((void *)this + 1);
  }
  *((void *)this + sub_1000333D0((uint64_t *)this + 1) = &a2[__n];
  return result;
}

uint64_t snappy::UncheckedByteArraySink::GetAppendBuffer(snappy::UncheckedByteArraySink *this, unint64_t a2, char *a3)
{
  return *((void *)this + 1);
}

char *snappy::UncheckedByteArraySink::AppendAndTakeOwnership(snappy::UncheckedByteArraySink *this, char *__src, size_t __n, uint64_t (*a4)(void *, char *, size_t), void *a5)
{
  char v6 = __src;
  uint64_t result = (char *)*((void *)this + 1);
  if (result != __src)
  {
    memcpy(result, __src, __n);
    uint64_t result = (char *)a4(a5, v6, __n);
    char v6 = (char *)*((void *)this + 1);
  }
  *((void *)this + sub_1000333D0((uint64_t *)this + 1) = &v6[__n];
  return result;
}

uint64_t snappy::UncheckedByteArraySink::GetAppendBufferVariable(snappy::UncheckedByteArraySink *this, unint64_t a2, unint64_t a3, char *a4, unint64_t a5, unint64_t *a6)
{
  *a6 = a3;
  return *((void *)this + 1);
}

void sub_10015B818(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/source_context.pb.cc", a4);
  google::protobuf::_SourceContext_default_instance_ = (uint64_t)off_1001D3478;
  unk_1001EE190 = 0;
  dword_1001EE1A0 = 0;
  if (atomic_load_explicit(scc_info_SourceContext_google_2fprotobuf_2fsource_5fcontext_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SourceContext_google_2fprotobuf_2fsource_5fcontext_2eproto);
  }
  qword_1001EE198 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&google::protobuf::_SourceContext_default_instance_, v4);
}

void google::protobuf::SourceContext::~SourceContext(google::protobuf::SourceContext *this)
{
  uint64_t v1 = *((void *)this + 2);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  google::protobuf::SourceContext::~SourceContext(this);
  operator delete();
}

uint64_t google::protobuf::SourceContext::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

google::protobuf::Arena **google::protobuf::SourceContext::Clear(google::protobuf::SourceContext *this)
{
  uint64_t result = (google::protobuf::Arena **)google::protobuf::internal::ArenaStringPtr::ClearToEmpty((void *)this + 2);
  char v4 = *((unsigned char *)this + 8);
  int v3 = (unint64_t *)((char *)this + 8);
  if (v4)
  {
    return sub_100035820(v3);
  }
  return result;
}

google::protobuf::internal *google::protobuf::SourceContext::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v18 = a2;
  char v4 = (unint64_t *)(a1 + 8);
  uint64_t v5 = (uint64_t **)(a1 + 16);
  while (1)
  {
    if (sub_1000355B8(a3, &v18, *(_DWORD *)(a3 + 92))) {
      return v18;
    }
    TagFallback = (google::protobuf::internal *)((char *)v18 + 1);
    unsigned int v7 = *(unsigned __int8 *)v18;
    if ((*(char *)v18 & 0x80000000) == 0) {
      goto LABEL_6;
    }
    unsigned int v8 = v7 + (*(unsigned __int8 *)TagFallback << 7);
    unsigned int v7 = v8 - 128;
    if ((*(char *)TagFallback & 0x80000000) == 0)
    {
      TagFallback = (google::protobuf::internal *)((char *)v18 + 2);
LABEL_6:
      int v18 = TagFallback;
      goto LABEL_7;
    }
    TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v18, (const char *)(v8 - 128));
    int v18 = TagFallback;
    if (!TagFallback) {
      return TagFallback;
    }
    unsigned int v7 = v16;
LABEL_7:
    if (v7 != 10) {
      break;
    }
    unint64_t v12 = (google::protobuf::Arena *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      unint64_t v12 = *(google::protobuf::Arena **)v12;
    }
    unint64_t v13 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v5, v12);
    int v18 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v13, (std::string::value_type *)v18, a3);
    sub_1000BB974(v19, (uint64_t *)v13, v14);
    BOOL v15 = google::protobuf::internal::VerifyUTF8(v19[0], (const char *)v19[1], (google::protobuf::internal *)"google.protobuf.SourceContext.file_name");
    if (v18) {
      int v11 = 2;
    }
    else {
      int v11 = 4;
    }
    if (!v15) {
      return 0;
    }
LABEL_22:
    if (v11 != 2) {
      return 0;
    }
  }
  if (v7) {
    BOOL v9 = (v7 & 7) == 4;
  }
  else {
    BOOL v9 = 1;
  }
  if (!v9)
  {
    if (*v4)
    {
      unsigned int v10 = (google::protobuf::Arena **)((*v4 & 0xFFFFFFFFFFFFFFFELL) + 8);
    }
    else
    {
      unsigned int v10 = sub_10003562C(v4);
      TagFallback = v18;
    }
    int v18 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, TagFallback);
    if (!v18) {
      return 0;
    }
    int v11 = 2;
    goto LABEL_22;
  }
  *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fduration_2eproto, 0) = v7 - 1;
  return TagFallback;
}

const google::protobuf::UnknownFieldSet *google::protobuf::SourceContext::_InternalSerialize(google::protobuf::SourceContext *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  unint64_t v7 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    unsigned int v8 = *(const char **)(v7 + 8);
    if (!v8) {
      goto LABEL_7;
    }
    unint64_t v7 = *(void *)v7;
    goto LABEL_6;
  }
  unsigned int v8 = (const char *)*(unsigned __int8 *)(v7 + 23);
  if (*(unsigned char *)(v7 + 23))
  {
LABEL_6:
    google::protobuf::internal::WireFormatLite::VerifyUtf8String((google::protobuf::internal *)v7, v8, 1, (google::protobuf::internal *)"google.protobuf.SourceContext.file_name");
    a2 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 1, (const void **)(*((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)a2);
  }
LABEL_7:
  uint64_t v9 = *((void *)this + 1);
  if ((v9 & 1) == 0) {
    return a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v9 & 0xFFFFFFFFFFFFFFFELL) + 8), a2, a3, a4);
}

char *google::protobuf::SourceContext::ByteSizeLong(google::protobuf::SourceContext *this)
{
  unint64_t v1 = *((void *)this + 2) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v2 = *(unsigned __int8 *)(v1 + 23);
  if (*(char *)(v1 + 23) < 0)
  {
    if (*(void *)(v1 + 8)) {
      goto LABEL_3;
    }
LABEL_7:
    char v4 = 0;
    goto LABEL_8;
  }
  if (!*(unsigned char *)(v1 + 23)) {
    goto LABEL_7;
  }
LABEL_3:
  uint64_t v3 = *(void *)(v1 + 8);
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = v2;
  }
  char v4 = (const google::protobuf::UnknownFieldSet *)(v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1);
LABEL_8:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::SourceContext *)((char *)this + 8), v4, (_DWORD *)this + 6);
  }
  *((_DWORD *)this + 6) = v4;
  return (char *)v4;
}

void google::protobuf::SourceContext::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    google::protobuf::SourceContext::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *google::protobuf::SourceContext::MergeFrom(std::string *this, const google::protobuf::SourceContext *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unint64_t v6 = *((void *)a2 + 2) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    if (!*(void *)(v6 + 8)) {
      return this;
    }
  }
  else if (!*(unsigned char *)(v6 + 23))
  {
    return this;
  }
  unint64_t v7 = (google::protobuf::Arena *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
  if (*p_size) {
    unint64_t v7 = *(google::protobuf::Arena **)v7;
  }
  return google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3->__r_.__value_.__r.__words[2], v6, v7);
}

void google::protobuf::SourceContext::CopyFrom(google::protobuf::SourceContext *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    google::protobuf::SourceContext::Clear(this);
    google::protobuf::SourceContext::MergeFrom((std::string *)this, a2);
  }
}

uint64_t google::protobuf::SourceContext::IsInitialized(google::protobuf::SourceContext *this)
{
  return 1;
}

uint64_t google::protobuf::SourceContext::GetMetadata(google::protobuf::SourceContext *this)
{
  return *off_1001EB2D0;
}

void *sub_10015BE78(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_10015BF54(a1);
}

void sub_10015BF20()
{
}

uint64_t sub_10015BF44()
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceContext>(0);
}

uint64_t sub_10015BF4C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<google::protobuf::SourceContext>(a2);
}

void *sub_10015BF54(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_10015BFD0(a1, 1);
  *uint64_t v2 = off_1001D3478;
  v2[1] = a1;
  *((_DWORD *)v2 + 6) = 0;
  if (atomic_load_explicit(scc_info_SourceContext_google_2fprotobuf_2fsource_5fcontext_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SourceContext_google_2fprotobuf_2fsource_5fcontext_2eproto);
  }
  v2[2] = &google::protobuf::internal::fixed_address_empty_string;
  return v2;
}

void *sub_10015BFD0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))google::protobuf::SourceContext::~SourceContext);
}

void sub_10015C08C()
{
}

std::string *google::protobuf::internal::ArenaStringPtr::Set(std::string **a1, std::string *a2, uint64_t a3, google::protobuf::Arena *a4)
{
  uint64_t v5 = *a1;
  if (v5 == a2)
  {
    uint64_t result = (std::string *)sub_10015C37C(a4, (long long *)a3);
    *a1 = result;
  }
  else
  {
    int v6 = *(char *)(a3 + 23);
    if (v6 >= 0) {
      unint64_t v7 = (const std::string::value_type *)a3;
    }
    else {
      unint64_t v7 = *(const std::string::value_type **)a3;
    }
    if (v6 >= 0) {
      std::string::size_type v8 = *(unsigned __int8 *)(a3 + 23);
    }
    else {
      std::string::size_type v8 = *(void *)(a3 + 8);
    }
    return std::string::assign(v5, v7, v8);
  }
  return result;
}

void google::protobuf::internal::ArenaStringPtr::Set(uint64_t *a1, uint64_t a2, __n128 *a3, google::protobuf::Arena *a4)
{
  uint64_t v5 = *a1;
  if (*a1 == a2)
  {
    if (!a4) {
      operator new();
    }
    sub_100130EC4(a4, a3);
    *a1 = v8;
  }
  else
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    __n128 v6 = *a3;
    *(void *)(v5 + 16) = a3[1].n128_u64[0];
    *(__n128 *)uint64_t v5 = v6;
    a3[1].n128_u8[7] = 0;
    a3->n128_u8[0] = 0;
  }
}

std::string *google::protobuf::internal::ArenaStringPtr::Set(std::string **a1, uint64_t a2, google::protobuf::Arena *a3)
{
  return google::protobuf::internal::ArenaStringPtr::Set(a1, (std::string *)&google::protobuf::internal::fixed_address_empty_string, a2, a3);
}

void google::protobuf::internal::ArenaStringPtr::Set(uint64_t *a1, __n128 *a2, google::protobuf::Arena *a3)
{
}

uint64_t *google::protobuf::internal::ArenaStringPtr::Mutable(uint64_t **a1, google::protobuf::Arena *a2)
{
  uint64_t result = *a1;
  if (result == &google::protobuf::internal::fixed_address_empty_string)
  {
    uint64_t result = sub_1000BBB38(a2);
    *a1 = result;
  }
  return result;
}

char *google::protobuf::internal::ArenaStringPtr::SetAllocated(char *result, uint64_t a2, void *a3, char *a4)
{
  if (!a4)
  {
    uint64_t v4 = *(void *)result;
    if (*(void *)result != a2)
    {
      if (*(char *)(v4 + 23) < 0) {
        operator delete(*(void **)v4);
      }
      operator delete();
    }
    if (a3)
    {
      *(void *)uint64_t result = a3;
      return result;
    }
    goto LABEL_12;
  }
  if (!a3)
  {
LABEL_12:
    *(void *)uint64_t result = a2;
    return result;
  }
  *(void *)uint64_t result = a3;
  return sub_1001296BC(a4, a3);
}

uint64_t *google::protobuf::internal::ArenaStringPtr::Destroy(uint64_t *result, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    uint64_t v3 = *result;
    if (*result != a2)
    {
      if (*(char *)(v3 + 23) < 0) {
        operator delete(*(void **)v3);
      }
      operator delete();
    }
  }
  return result;
}

uint64_t *google::protobuf::internal::ArenaStringPtr::Destroy(uint64_t *a1, uint64_t a2)
{
  return google::protobuf::internal::ArenaStringPtr::Destroy(a1, (uint64_t)&google::protobuf::internal::fixed_address_empty_string, a2);
}

void *google::protobuf::internal::ArenaStringPtr::ClearToEmpty(void *this)
{
  if ((uint64_t *)*this != &google::protobuf::internal::fixed_address_empty_string)
  {
    unint64_t v1 = *this & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  return this;
}

void *sub_10015C37C(google::protobuf::Arena *a1, long long *a2)
{
  if (!a1) {
    operator new();
  }
  return sub_10015C430(a1, 0, a2);
}

void sub_10015C40C()
{
}

void *sub_10015C430(google::protobuf::Arena *a1, int a2, long long *a3)
{
  uint64_t v4 = sub_1000BBB7C(a1, a2);
  uint64_t v5 = v4;
  if (*((char *)a3 + 23) < 0)
  {
    sub_1000BB834(v4, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v6 = *a3;
    std::string v4[2] = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v4 = v6;
  }
  return v5;
}

unint64_t snappy::MaxCompressedLength(unint64_t this)
{
  return this + this / 6 + 32;
}

snappy::internal::WorkingMemory *snappy::internal::WorkingMemory::WorkingMemory(snappy::internal::WorkingMemory *this, unint64_t a2)
{
  if (a2 >= 0x10000) {
    unint64_t v3 = 0x10000;
  }
  else {
    unint64_t v3 = a2;
  }
  if (v3 <= 0x4000)
  {
    if (v3 >= 0x100)
    {
      char v5 = 0;
      unsigned int v6 = v3 - 1;
      for (int i = 4; i != -1; --i)
      {
        int v8 = 1 << i;
        unsigned int v9 = v6 >> (1 << i);
        if (!v9) {
          LOBYTE(v8) = 0;
        }
        v5 += v8;
        if (v9) {
          v6 >>= 1 << i;
        }
      }
      uint64_t v4 = 2 * (2 << v5);
    }
    else
    {
      uint64_t v4 = 512;
    }
  }
  else
  {
    uint64_t v4 = 0x8000;
  }
  size_t v10 = v3 / 6 + 2 * v3 + v4 + 32;
  *((void *)this + sub_1000333D0((uint64_t *)this + 1) = v10;
  int v11 = (char *)operator new(v10);
  *(void *)this = v11;
  *((void *)this + sub_100157AEC((void *)this + 2) = v11;
  *((void *)this + 3) = &v11[v4];
  *((void *)this + 4) = &v11[v4 + v3];
  return this;
}

char *snappy::internal::CompressFragment(snappy::internal *this, const char *a2, char *a3, char *a4, unsigned __int16 *a5)
{
  unint64_t v7 = this;
  int v8 = &a2[(void)this];
  if ((unint64_t)a2 >= 0xF)
  {
    __int16 v10 = (_WORD)a5 - 1;
    int v11 = v8 - 15;
    LODWORD(v1sub_100157AEC((void *)this + 2) = *(_DWORD *)((char *)this + 1);
    unint64_t v13 = (unint64_t)(v8 - 16);
    __int16 v14 = 1 - (_WORD)this;
    BOOL v15 = (char *)this + (void)a2;
    unsigned int v16 = v7;
    unsigned int v101 = v8 - 8;
LABEL_3:
    unint64_t v17 = (snappy::internal *)((char *)v16 + 1);
    unint64_t v18 = *(void *)((char *)v16 + 1);
    if (v11 - ((const char *)v16 + 1) < 16)
    {
      unsigned int v29 = 33;
    }
    else
    {
      int v19 = v15;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      unint64_t v5 = (unint64_t)v16 + 5;
      __int16 v22 = v14 + (_WORD)v16;
      uint64_t v23 = -2;
      uint64_t v24 = -1;
      do
      {
        for (uint64_t i = 0; i != 4; ++i)
        {
          if (v20 == i) {
            int v26 = v12;
          }
          else {
            int v26 = v18;
          }
          unsigned int v27 = *(_DWORD *)&v10 & ((506832829 * v26) >> 18);
          uint64_t v28 = *(unsigned __int16 *)&a4[2 * v27];
          *(_WORD *)&a4[2 * v27] = v22 + i;
          if (*(_DWORD *)((char *)v7 + v28) == v26)
          {
            uint64_t v35 = (_DWORD *)((char *)v7 + v28);
            *a3 = 4 * (i - v20);
            *(_OWORD *)(a3 + sub_1000333D0((uint64_t *)this + 1) = *(_OWORD *)v16;
            unint64_t v17 = (snappy::internal *)((char *)v16 + i - v24);
            a3 = &a3[i - v23];
            BOOL v15 = v19;
            goto LABEL_31;
          }
          v18 >>= 8;
        }
        unint64_t v18 = *(void *)(v5 + 4 * v21++);
        v20 -= 4;
        v23 -= 4;
        v24 -= 4;
        v22 += 4;
      }
      while (v21 != 4);
      unint64_t v17 = (snappy::internal *)((char *)v16 + 17);
      unsigned int v29 = 49;
      BOOL v15 = v19;
    }
    unsigned int v30 = (unsigned int *)((char *)v17 + 1);
    while (v30 <= (unsigned int *)v11)
    {
      unsigned int v31 = (snappy::internal *)v30;
      unsigned int v32 = *(_DWORD *)&v10 & ((506832829 * v18) >> 18);
      uint64_t v33 = *(unsigned __int16 *)&a4[2 * v32];
      *(_WORD *)&a4[2 * v32] = (_WORD)v17 - (_WORD)v7;
      if (*(_DWORD *)((char *)v7 + v33) == v18)
      {
        uint64_t v35 = (_DWORD *)((char *)v7 + v33);
        unsigned int v36 = v17 - v16;
        int v37 = v17 - v16 - 1;
        if ((int)v17 - (int)v16 > 16)
        {
          unsigned int v99 = v11;
          unint64_t v100 = v8;
          unsigned int v98 = v15;
          if (v36 >= 0x3D)
          {
            int v39 = 0;
            int v40 = 4;
            unsigned int v41 = v17 - v16 - 1;
            do
            {
              int v42 = 1 << v40;
              unsigned int v43 = v41 >> (1 << v40);
              if (!v43) {
                int v42 = 0;
              }
              v39 += v42;
              if (v43) {
                v41 >>= 1 << v40;
              }
              --v40;
            }
            while (v40 != -1);
            int v44 = v39 >> 3;
            *a3 = 4 * v44 - 16;
            *(_DWORD *)(a3 + sub_1000333D0((uint64_t *)this + 1) = v37;
            int v38 = &a3[v44 + 2];
          }
          else
          {
            *a3 = 4 * v37;
            int v38 = a3 + 1;
          }
          int v97 = v17 - v16;
          memcpy(v38, v16, (v17 - v16));
          BOOL v15 = v98;
          a3 = &v38[v97];
          int v11 = v99;
          int v8 = v100;
        }
        else
        {
          *a3 = 4 * v37;
          *(_OWORD *)(a3 + sub_1000333D0((uint64_t *)this + 1) = *(_OWORD *)v16;
          a3 += (int)v36 + 1;
        }
        while (1)
        {
LABEL_31:
          unsigned int v45 = v35 + 1;
          int v46 = (char *)v17 + 4;
          if (v13 >= (unint64_t)v17 + 4)
          {
            if (*v45 != *(void *)v46)
            {
              unint64_t v65 = *(void *)v46 ^ *v45;
              if (v65)
              {
                int v66 = 31;
                unsigned int v67 = 16;
                int v68 = -5;
                do
                {
                  int v69 = v65 << v67;
                  if (v65 << v67) {
                    LODWORD(v65) = v65 << v67;
                  }
                  if (v69) {
                    unint64_t v5 = v67;
                  }
                  else {
                    unint64_t v5 = 0;
                  }
                  v66 -= v5;
                  v67 >>= 1;
                  BOOL v81 = __CFADD__(v68++, 1);
                }
                while (!v81);
              }
              else
              {
                unint64_t v76 = HIDWORD(v65);
                int v77 = 31;
                unsigned int v78 = 16;
                int v79 = -5;
                do
                {
                  int v80 = v76 << v78;
                  if (v76 << v78) {
                    LODWORD(v76) = v76 << v78;
                  }
                  if (v80) {
                    unint64_t v5 = v78;
                  }
                  else {
                    unint64_t v5 = 0;
                  }
                  v77 -= v5;
                  v78 >>= 1;
                  BOOL v81 = __CFADD__(v79++, 1);
                }
                while (!v81);
                int v66 = v77 + 32;
              }
              unint64_t v18 = *(void *)&v46[v66 >> 3];
              unint64_t v70 = ((uint64_t)v66 >> 3) + 4;
              unsigned int v16 = (snappy::internal *)((char *)v17 + v70);
              unint64_t v71 = v17 - (snappy::internal *)v35;
LABEL_99:
              int v75 = (v71 << 8) + 4 * v70;
              goto LABEL_100;
            }
            int v46 = (char *)v17 + 12;
            unint64_t v47 = 8;
          }
          else
          {
            unint64_t v47 = 0;
          }
          BOOL v48 = 1;
          while ((unint64_t)v46 <= v13)
          {
            uint64_t v49 = *(void *)((char *)v45 + v47);
            unint64_t v50 = *(void *)v46;
            if (v49 == *(void *)v46)
            {
              v46 += 8;
              v47 += 8;
            }
            else
            {
              unint64_t v51 = v50 ^ v49;
              if (v50 != v49)
              {
                int v52 = 31;
                unsigned int v53 = 16;
                int v54 = -5;
                do
                {
                  int v55 = v51 << v53;
                  if (v51 << v53) {
                    LODWORD(v5sub_1000333D0((uint64_t *)this + 1) = v51 << v53;
                  }
                  if (v55) {
                    unsigned int v56 = v53;
                  }
                  else {
                    unsigned int v56 = 0;
                  }
                  v52 -= v56;
                  v53 >>= 1;
                  BOOL v81 = __CFADD__(v54++, 1);
                }
                while (!v81);
              }
              else
              {
                unint64_t v57 = HIDWORD(v51);
                int v58 = 31;
                unsigned int v59 = 16;
                int v60 = -5;
                do
                {
                  int v61 = v57 << v59;
                  if (v57 << v59) {
                    LODWORD(v57) = v57 << v59;
                  }
                  if (v61) {
                    unsigned int v62 = v59;
                  }
                  else {
                    unsigned int v62 = 0;
                  }
                  v58 -= v62;
                  v59 >>= 1;
                  BOOL v81 = __CFADD__(v60++, 1);
                }
                while (!v81);
                int v52 = v58 + 32;
              }
              BOOL v48 = 0;
              unint64_t v18 = *(void *)&v46[v52 >> 3];
              v47 += v52 >> 3;
              unint64_t v5 = v47;
            }
            if (v49 != v50) {
              goto LABEL_80;
            }
          }
          if (v46 >= v8)
          {
LABEL_66:
            BOOL v48 = v47 < 8;
            unint64_t v5 = v47;
          }
          else
          {
            unint64_t v63 = &v8[v47] - v46;
            uint64_t v64 = v15 - v46;
            unint64_t v5 = v47;
            while (*((unsigned __int8 *)v45 + v5) == *(unsigned __int8 *)v46)
            {
              ++v46;
              ++v5;
              if (!--v64)
              {
                unint64_t v47 = v63;
                goto LABEL_66;
              }
            }
            if (v46 <= v101) {
              unint64_t v18 = *(void *)v46;
            }
            BOOL v48 = v5 < 8;
          }
LABEL_80:
          unint64_t v70 = v5 + 4;
          unsigned int v16 = (snappy::internal *)((char *)v17 + v5 + 4);
          unint64_t v71 = v17 - (snappy::internal *)v35;
          if (v48) {
            goto LABEL_99;
          }
          if (v70 >= 0x44)
          {
            unint64_t v72 = (v71 << 8) + 0x1000000FELL;
            do
            {
              *a3 = -2;
              unint64_t v5 = v72 >> 8;
              a3[1] = BYTE1(v72);
              a3[2] = BYTE2(v72);
              a3[3] = ((v71 << 8) + 254) >> 24;
              a3 += 3;
              v70 -= 64;
            }
            while (v70 > 0x43);
          }
          if (v70 >= 0x41)
          {
            int v73 = v71 << 8;
            int v74 = (v71 << 8) + 238;
            *a3 = -18;
            a3[1] = BYTE1(v74);
            a3[2] = BYTE2(v74);
            a3[3] = HIBYTE(v74);
            a3 += 3;
            LODWORD(v7google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fsource_5fcontext_2eproto, 0) = v70 - 60;
            goto LABEL_88;
          }
          if (v70 <= 0xB)
          {
            int v73 = v71 << 8;
LABEL_88:
            int v75 = v73 + 4 * v70;
LABEL_100:
            BOOL v81 = v71 >= 0x800;
            if (v71 >= 0x800) {
              unsigned int v82 = -2;
            }
            else {
              unsigned int v82 = ((v71 >> 3) & 0xE0) - 15;
            }
            *(_DWORD *)a3 = v82 + v75;
            if (v81) {
              uint64_t v83 = 3;
            }
            else {
              uint64_t v83 = 2;
            }
            a3 += v83;
            goto LABEL_107;
          }
          int v85 = 4 * v70 - 2;
          int v86 = v85 + (v71 << 8);
          *a3 = v85;
          a3[1] = BYTE1(v86);
          a3[2] = BYTE2(v86);
          a3[3] = HIBYTE(v86);
          a3 += 3;
LABEL_107:
          if (v16 >= (snappy::internal *)v11) {
            goto LABEL_111;
          }
          *(_WORD *)&a4[2 * (*(_DWORD *)&v10 & ((506832829 * *(_DWORD *)((char *)v16 - 1)) >> 18))] = (_WORD)v16 - (_WORD)v7 - 1;
          unsigned int v84 = *(_DWORD *)&v10 & ((506832829 * v18) >> 18);
          uint64_t v35 = (_DWORD *)((char *)v7 + *(unsigned __int16 *)&a4[2 * v84]);
          *(_WORD *)&a4[2 * v84] = (_WORD)v16 - (_WORD)v7;
          unint64_t v17 = v16;
          if (*v35 != v18)
          {
            unint64_t v12 = v18 >> 8;
            __int16 v14 = 1 - (_WORD)v7;
            goto LABEL_3;
          }
        }
      }
      unint64_t v18 = *(unsigned int *)v31;
      uint64_t v34 = v29 >> 5;
      v29 += v29 >> 5;
      unsigned int v30 = (unsigned int *)((char *)v31 + v34);
      unint64_t v17 = v31;
    }
LABEL_111:
    unint64_t v7 = v16;
  }
  if (v7 < (snappy::internal *)v8)
  {
    int v87 = v8 - v7;
    int v88 = v8 - v7 - 1;
    if ((int)v8 - (int)v7 >= 61)
    {
      int v90 = 0;
      int v91 = 4;
      unsigned int v92 = v8 - v7 - 1;
      do
      {
        int v93 = 1 << v91;
        unsigned int v94 = v92 >> (1 << v91);
        if (!v94) {
          int v93 = 0;
        }
        v90 += v93;
        if (v94) {
          v92 >>= 1 << v91;
        }
        --v91;
      }
      while (v91 != -1);
      int v95 = v90 >> 3;
      *a3 = 4 * v95 - 16;
      *(_DWORD *)(a3 + sub_1000333D0((uint64_t *)this + 1) = v88;
      unsigned int v89 = &a3[v95 + 2];
    }
    else
    {
      *a3 = 4 * v88;
      unsigned int v89 = a3 + 1;
    }
    memcpy(v89, v7, v87);
    return &v89[v87];
  }
  return a3;
}

uint64_t snappy::SnappyDecompressor::RefillTag(snappy::SnappyDecompressor *this)
{
  uint64_t v2 = (unsigned __int8 *)*((void *)this + 1);
  unint64_t v3 = (unsigned __int8 *)*((void *)this + 2);
  if (v2 == v3)
  {
    (*(void (**)(void))(**(void **)this + 32))();
    uint64_t v15 = 0;
    uint64_t v4 = (*(uint64_t (**)(void, uint64_t *))(**(void **)this + 24))(*(void *)this, &v15);
    uint64_t v5 = v15;
    *((_DWORD *)this + 8) = v15;
    *((unsigned char *)this + 36) = v5 == 0;
    if (!v5) {
      return 0;
    }
    uint64_t v2 = (unsigned __int8 *)v4;
    unint64_t v3 = (unsigned __int8 *)(v4 + v5);
    *((void *)this + sub_100157AEC((void *)this + 2) = v3;
  }
  unsigned int v6 = *v2;
  if (v6 >= 0xF0 && (v6 & 3) == 0) {
    unsigned int v8 = (v6 >> 2) - 58;
  }
  else {
    unsigned int v8 = (0x5030201u >> (8 * (v6 & 3))) & 7;
  }
  unsigned int v9 = v3 - v2;
  if (v8 > (int)v3 - (int)v2)
  {
    __int16 v10 = (char *)this + 37;
    memmove((char *)this + 37, v2, (v3 - v2));
    (*(void (**)(void, void))(**(void **)this + 32))(*(void *)this, *((unsigned int *)this + 8));
    *((_DWORD *)this + 8) = 0;
    while (1)
    {
      uint64_t v15 = 0;
      int v11 = (const void *)(*(uint64_t (**)(void, uint64_t *))(**(void **)this + 24))(*(void *)this, &v15);
      if (!v15) {
        return 0;
      }
      if (v8 - v9 >= v15) {
        size_t v12 = v15;
      }
      else {
        size_t v12 = v8 - v9;
      }
      memcpy(&v10[v9], v11, v12);
      v9 += v12;
      (*(void (**)(void, size_t))(**(void **)this + 32))(*(void *)this, v12);
      if (v9 >= v8)
      {
        unint64_t v13 = &v10[v8];
        goto LABEL_20;
      }
    }
  }
  if (v9 > 4)
  {
    *((void *)this + sub_1000333D0((uint64_t *)this + 1) = v2;
  }
  else
  {
    __int16 v10 = (char *)this + 37;
    memmove((char *)this + 37, v2, (v3 - v2));
    (*(void (**)(void, void))(**(void **)this + 32))(*(void *)this, *((unsigned int *)this + 8));
    *((_DWORD *)this + 8) = 0;
    unint64_t v13 = (char *)this + v9 + 37;
LABEL_20:
    *((void *)this + sub_1000333D0((uint64_t *)this + 1) = v10;
    *((void *)this + sub_100157AEC((void *)this + 2) = v13;
  }
  return 1;
}

uint64_t snappy::GetUncompressedLength(snappy *this, snappy::Source *a2, unsigned int *a3)
{
  unsigned int v6 = 0;
  char v7 = 0;
  v5[1] = 0;
  std::string v5[2] = 0;
  v5[0] = this;
  uint64_t v3 = sub_10015CE88(v5, a2);
  (*(void (**)(void, void))(*(void *)v5[0] + 32))(v5[0], v6);
  return v3;
}

void sub_10015CE74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9)
{
}

uint64_t sub_10015CE88(void *a1, _DWORD *a2)
{
  unint64_t v4 = 0;
  *a2 = 0;
  while (1)
  {
    uint64_t v9 = 0;
    uint64_t v5 = (char *)(*(uint64_t (**)(void, uint64_t *))(*(void *)*a1 + 24))(*a1, &v9);
    if (!v9) {
      return 0;
    }
    char v6 = *v5;
    (*(void (**)(void, uint64_t))(*(void *)*a1 + 32))(*a1, 1);
    if ((byte_1001856C0[v4] & v6 & 0x7F) != 0) {
      return 0;
    }
    *a2 |= (v6 & 0x7F) << v4;
    if ((v6 & 0x80) == 0) {
      break;
    }
    BOOL v7 = v4 > 0x18;
    v4 += 7;
    if (v7) {
      return 0;
    }
  }
  return 1;
}

uint64_t snappy::Compress(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 16))(a1);
  unint64_t v5 = v4;
  if (v4 > 0x7F)
  {
    if (v4 >> 14)
    {
      if (v4 >> 21)
      {
        char v31 = v4 | 0x80;
        char v32 = (v4 >> 7) | 0x80;
        char v33 = (v4 >> 14) | 0x80;
        if (v4 >> 28)
        {
          char v34 = (v4 >> 21) | 0x80;
          char v6 = (char *)&v36;
          char v35 = v4 >> 28;
        }
        else
        {
          char v6 = &v35;
          char v34 = v4 >> 21;
        }
      }
      else
      {
        char v31 = v4 | 0x80;
        char v32 = (v4 >> 7) | 0x80;
        char v6 = &v34;
        char v33 = v4 >> 14;
      }
    }
    else
    {
      char v31 = v4 | 0x80;
      char v6 = &v33;
      char v32 = v4 >> 7;
    }
  }
  else
  {
    char v6 = &v32;
    char v31 = v4;
  }
  uint64_t v7 = v6 - &v31;
  (*(void (**)(uint64_t, char *, int64_t))(*(void *)a2 + 16))(a2, &v31, v6 - &v31);
  snappy::internal::WorkingMemory::WorkingMemory((snappy::internal::WorkingMemory *)&__p, v5);
  for (; v5; v5 -= v9)
  {
    size_t __n = 0;
    unsigned int v8 = (snappy::internal *)(*(uint64_t (**)(uint64_t, size_t *))(*(void *)a1 + 24))(a1, &__n);
    if (v5 >= 0x10000) {
      size_t v9 = 0x10000;
    }
    else {
      size_t v9 = v5;
    }
    size_t v10 = __n;
    if (__n >= v9)
    {
      int v11 = v8;
      size_t v14 = v9;
    }
    else
    {
      int v11 = (snappy::internal *)__dst;
      memcpy(__dst, v8, __n);
      (*(void (**)(uint64_t, size_t))(*(void *)a1 + 32))(a1, v10);
      do
      {
        size_t v12 = (const void *)(*(uint64_t (**)(uint64_t, size_t *))(*(void *)a1 + 24))(a1, &__n);
        if (v9 - v10 >= __n) {
          size_t v13 = __n;
        }
        else {
          size_t v13 = v9 - v10;
        }
        memcpy((char *)v11 + v10, v12, v13);
        (*(void (**)(uint64_t, size_t))(*(void *)a1 + 32))(a1, v13);
        v10 += v13;
      }
      while (v10 < v9);
      size_t v14 = 0;
    }
    size_t __n = v9;
    if (v9 <= 0x4000)
    {
      if (v9 >= 0x100)
      {
        char v16 = 0;
        unsigned int v17 = v9 - 1;
        for (int i = 4; i != -1; --i)
        {
          int v19 = 1 << i;
          unsigned int v20 = v17 >> (1 << i);
          if (!v20) {
            LOBYTE(v19) = 0;
          }
          v16 += v19;
          if (v20) {
            v17 >>= 1 << i;
          }
        }
        uint64_t v15 = (2 << v16);
      }
      else
      {
        uint64_t v15 = 256;
      }
    }
    else
    {
      uint64_t v15 = 0x4000;
    }
    bzero(v28, 2 * v15);
    uint64_t v21 = (char *)v28;
    __int16 v22 = (char *)(*(uint64_t (**)(uint64_t, size_t, uint64_t))(*(void *)a2 + 24))(a2, v9 + v9 / 6 + 32, v30);
    uint64_t v23 = snappy::internal::CompressFragment(v11, (const char *)__n, v22, v21, (unsigned __int16 *)v15);
    int64_t v24 = v23 - v22;
    (*(void (**)(uint64_t, char *, int64_t))(*(void *)a2 + 16))(a2, v22, v23 - v22);
    (*(void (**)(uint64_t, size_t))(*(void *)a1 + 32))(a1, v14);
    v7 += v24;
  }
  operator delete(__p);
  return v7;
}

void sub_10015D35C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p)
{
}

BOOL snappy::RawUncompress(snappy *this, snappy::Source *a2, char *a3)
{
  unsigned int v8 = a2;
  size_t v9 = a2;
  size_t v10 = a2;
  int v11 = a2;
  unsigned int v14 = 0;
  char v15 = 0;
  v13[1] = 0;
  std::string v13[2] = 0;
  v13[0] = this;
  unsigned int v12 = 0;
  if ((sub_10015CE88(v13, &v12) & 1) == 0) {
    goto LABEL_6;
  }
  (*(void (**)(snappy *))(*(void *)this + 16))(this);
  uint64_t v5 = v12;
  if (v12 >= 0x3FuLL) {
    uint64_t v5 = 63;
  }
  size_t v10 = (snappy::Source *)((char *)a2 + v12);
  int v11 = (snappy::Source *)((char *)v10 - v5);
  sub_10015D7B0((snappy::SnappyDecompressor *)v13, (uint64_t)&v8);
  if (v15) {
    BOOL v6 = v9 == v10;
  }
  else {
LABEL_6:
  }
    BOOL v6 = 0;
  (*(void (**)(void, void))(*(void *)v13[0] + 32))(v13[0], v14);
  return v6;
}

void sub_10015D47C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19)
{
}

unsigned int *sub_10015D4B8(unsigned int *a1)
{
  return a1;
}

unsigned char *sub_10015D50C(unsigned char *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5 - 64;
  if (a2 - (uint64_t)result >= 131 && v5 > a3)
  {
    unsigned __int8 v9 = *result;
    uint64_t v7 = result + 1;
    unsigned __int8 v8 = v9;
    unint64_t v10 = a2 - 129;
    uint64_t v11 = a4 + 16;
    for (int i = 1; ; i ^= 1u)
    {
      uint64_t v13 = *((__int16 *)&unk_100185700 + v8);
      uint64_t v14 = v8 & 3;
      char v15 = (char *)v7 + ((unint64_t)v8 >> 2);
      uint64_t v16 = (uint64_t)v7 + v14 + 1;
      if ((v8 & 3) != 0) {
        unsigned __int8 v8 = *((unsigned char *)v7 + v14);
      }
      else {
        unsigned __int8 v8 = v15[1];
      }
      unsigned int v17 = v15 + 2;
      if (!v14) {
        uint64_t v16 = (uint64_t)(v15 + 2);
      }
      uint64_t v18 = v13;
      uint64_t v19 = v13 - (*((_DWORD *)&unk_100185700 + v14 + 128) & *(_DWORD *)v7);
      if (v19 >= 1) {
        break;
      }
      uint64_t v26 = a3 - v13 + v19;
      if (v26 >= 0)
      {
        unsigned int v27 = (long long *)(a4 + v26);
        if (!v14) {
          unsigned int v27 = v7;
        }
        uint64_t v28 = (_OWORD *)(a4 + a3);
        long long v29 = *v27;
        long long v30 = v27[1];
        long long v31 = v27[3];
        v28[2] = v27[2];
        v28[3] = v31;
        *uint64_t v28 = v29;
        v28[1] = v30;
LABEL_28:
        uint64_t v7 = (_OWORD *)v16;
        goto LABEL_29;
      }
      if (v14) {
        return (char *)v7 - 1;
      }
      char v33 = (_OWORD *)(a4 + a3);
      long long v34 = *v7;
      long long v35 = v7[1];
      long long v36 = v7[3];
      std::string v33[2] = v7[2];
      v33[3] = v36;
      *char v33 = v34;
      v33[1] = v35;
      uint64_t v7 = v17;
LABEL_29:
      a3 += v18;
      if ((i & 1) == 0 && ((unint64_t)v7 >= v10 || a3 >= v5)) {
        return (char *)v7 - 1;
      }
    }
    if ((v13 & 0x80) != 0 || v19 + a3 - v13 < 0) {
      return (char *)v7 - 1;
    }
    unsigned int v20 = (_OWORD *)(a4 + a3);
    unint64_t v21 = v13 - v19;
    if (v21 >= 0x10)
    {
      uint64_t v32 = 4;
      do
      {
        *unsigned int v20 = *(_OWORD *)((char *)v20 + v19 - v13);
        ++v20;
        --v32;
      }
      while (v32);
    }
    else
    {
      if (v13 == v19) {
        return (char *)v7 - 1;
      }
      uint64_t v22 = v19 - v13;
      uint64_t v23 = 16;
      do
      {
        *(unsigned char *)unsigned int v20 = *((unsigned char *)v20 + v22);
        unsigned int v20 = (_OWORD *)((char *)v20 + 1);
        --v23;
      }
      while (v23);
      if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBF90, memory_order_acquire) & 1) == 0)
      {
        uint64_t v43 = a4;
        uint64_t v44 = a3;
        unint64_t v39 = v10;
        int v40 = i;
        uint64_t v41 = v11;
        unsigned __int8 v42 = v8;
        uint64_t v45 = v13;
        uint64_t v46 = v16;
        unint64_t v47 = v21;
        int v37 = __cxa_guard_acquire(&qword_1001EBF90);
        unint64_t v21 = v47;
        uint64_t v18 = v45;
        uint64_t v16 = v46;
        uint64_t v11 = v41;
        unsigned __int8 v8 = v42;
        unint64_t v10 = v39;
        int i = v40;
        a4 = v43;
        a3 = v44;
        if (v37)
        {
          for (uint64_t j = 1; j != 16; ++j)
            *((unsigned char *)&v48 + j) = j + j * (0x10u / j);
          xmmword_1001EBF80 = v48;
          __cxa_guard_release(&qword_1001EBF90);
          a4 = v43;
          a3 = v44;
          unint64_t v10 = v39;
          int i = v40;
          uint64_t v11 = v41;
          unsigned __int8 v8 = v42;
          uint64_t v18 = v45;
          uint64_t v16 = v46;
          unint64_t v21 = v47;
        }
      }
      uint64_t v24 = 0;
      uint64_t v25 = *((unsigned __int8 *)&xmmword_1001EBF80 + v21);
      do
      {
        *(_OWORD *)(v11 + a3 + v24) = *(_OWORD *)(v11 + a3 - v25 + v24);
        v24 += 16;
      }
      while (v24 != 48);
    }
    goto LABEL_28;
  }
  return result;
}

snappy::SnappyDecompressor *sub_10015D7B0(snappy::SnappyDecompressor *this, uint64_t a2)
{
  uint64_t v3 = this;
  uint64_t v5 = (snappy::SnappyDecompressor *)*((void *)this + 1);
  uint64_t v4 = *((void *)this + 2);
  uint64_t v6 = v4 - (void)v5;
  if (v4 - (uint64_t)v5 >= 4) {
    uint64_t v6 = 4;
  }
  unint64_t v7 = v4 - v6;
  *((void *)this + 3) = v7;
  std::string __dst = *(void **)(a2 + 8);
  if ((unint64_t)v5 >= v7)
  {
    this = (snappy::SnappyDecompressor *)snappy::SnappyDecompressor::RefillTag(this);
    if (!this) {
      goto LABEL_45;
    }
    uint64_t v5 = (snappy::SnappyDecompressor *)*((void *)v3 + 1);
    uint64_t v8 = *((void *)v3 + 2);
    uint64_t v9 = v8 - (void)v5;
    if (v8 - (uint64_t)v5 >= 4) {
      uint64_t v9 = 4;
    }
    *((void *)v3 + 3) = v8 - v9;
  }
  for (LOBYTE(v1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fsource_5fcontext_2eproto, 0) = *(unsigned char *)v5; ; LOBYTE(v1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fsource_5fcontext_2eproto, 0) = *(unsigned char *)v5)
  {
    while (1)
    {
      uint64_t v11 = *(void *)a2;
      if (*(void *)a2)
      {
        this = (snappy::SnappyDecompressor *)sub_10015D50C(v5, *((void *)v3 + 2), (uint64_t)__dst - v11, *(void *)a2, *(void *)(a2 + 24) - v11);
        uint64_t v5 = this;
        std::string __dst = (void *)(v11 + v12);
        if (*((void *)v3 + 3) <= (unint64_t)this)
        {
          *((void *)v3 + sub_1000333D0((uint64_t *)this + 1) = this;
          this = (snappy::SnappyDecompressor *)snappy::SnappyDecompressor::RefillTag(v3);
          if (!this) {
            goto LABEL_45;
          }
          uint64_t v5 = (snappy::SnappyDecompressor *)*((void *)v3 + 1);
          uint64_t v13 = *((void *)v3 + 2);
          uint64_t v14 = v13 - (void)v5;
          if (v13 - (uint64_t)v5 >= 4) {
            uint64_t v14 = 4;
          }
          *((void *)v3 + 3) = v13 - v14;
        }
        LOBYTE(v1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fsource_5fcontext_2eproto, 0) = *(unsigned char *)v5;
      }
      char v15 = (snappy::SnappyDecompressor *)((char *)v5 + 1);
      unsigned int v16 = v10;
      unsigned int v17 = v10 & 3;
      if (v17 == 3)
      {
        this = (snappy::SnappyDecompressor *)sub_10015DB0C((void *)a2, *(unsigned int *)v15, (v10 >> 2) + 1, (unint64_t *)&__dst);
        if (!this) {
          goto LABEL_45;
        }
        uint64_t v5 = (snappy::SnappyDecompressor *)((char *)v5 + 5);
        unint64_t v23 = *((void *)v3 + 3);
LABEL_26:
        if ((unint64_t)v5 < v23) {
          goto LABEL_31;
        }
LABEL_27:
        *((void *)v3 + sub_1000333D0((uint64_t *)this + 1) = v5;
        this = (snappy::SnappyDecompressor *)snappy::SnappyDecompressor::RefillTag(v3);
        if (!this) {
          goto LABEL_45;
        }
        uint64_t v5 = (snappy::SnappyDecompressor *)*((void *)v3 + 1);
        uint64_t v25 = *((void *)v3 + 2);
        uint64_t v26 = v25 - (void)v5;
        if (v25 - (uint64_t)v5 >= 4) {
          uint64_t v26 = 4;
        }
        *((void *)v3 + 3) = v25 - v26;
        goto LABEL_31;
      }
      if ((v10 & 3) == 0) {
        break;
      }
      unsigned int v24 = *(_DWORD *)v15;
      this = (snappy::SnappyDecompressor *)sub_10015DB0C((void *)a2, (*(_DWORD *)v15 & ~(-1 << (8 * v17)))+ word_100185700[v10]- word_100185700[v10], word_100185700[v10], (unint64_t *)&__dst);
      if (!this) {
        goto LABEL_45;
      }
      uint64_t v5 = (snappy::SnappyDecompressor *)((char *)v15 + v17);
      unsigned int v10 = v24 >> (8 * v17);
      unint64_t v23 = *((void *)v3 + 3);
      if ((unint64_t)v5 >= v23) {
        goto LABEL_26;
      }
    }
    size_t v18 = (v10 >> 2) + 1;
    uint64_t v19 = *((void *)v3 + 2);
    size_t v20 = v19 - (void)v15;
    unint64_t v21 = (char *)__dst;
    unint64_t v22 = *(void *)(a2 + 16) - (void)__dst;
    if (v16 <= 0x3F && v20 >= 0x15 && v22 >= 0x10)
    {
      *(_OWORD *)std::string __dst = *(_OWORD *)v15;
      std::string __dst = &v21[v18];
      uint64_t v5 = (snappy::SnappyDecompressor *)((char *)v15 + v18);
      continue;
    }
    if (v16 >= 0xF0)
    {
      size_t v27 = v18 - 60;
      size_t v18 = (*(_DWORD *)v15 & ~(0xFFFFFFFFLL << (8 * (v18 - 60)))) + 1;
      char v15 = (snappy::SnappyDecompressor *)((char *)v15 + v27);
      size_t v20 = v19 - (void)v15;
    }
    if (v20 < v18) {
      break;
    }
LABEL_42:
    if (v22 < v18) {
      goto LABEL_45;
    }
    this = (snappy::SnappyDecompressor *)memcpy(v21, v15, v18);
    std::string __dst = &v21[v18];
    uint64_t v5 = (snappy::SnappyDecompressor *)((char *)v15 + v18);
    if ((unint64_t)v5 >= *((void *)v3 + 3)) {
      goto LABEL_27;
    }
LABEL_31:
    ;
  }
  while (1)
  {
    uint64_t v28 = (char *)__dst;
    if (*(void *)(a2 + 16) - (void)__dst < v20) {
      break;
    }
    memcpy(__dst, v15, v20);
    std::string __dst = &v28[v20];
    (*(void (**)(void, void))(**(void **)v3 + 32))(*(void *)v3, *((unsigned int *)v3 + 8));
    uint64_t v32 = 0;
    this = (snappy::SnappyDecompressor *)(*(uint64_t (**)(void, uint64_t *))(**(void **)v3 + 24))(*(void *)v3, &v32);
    uint64_t v29 = v32;
    *((_DWORD *)v3 + 8) = v32;
    if (!v29) {
      break;
    }
    char v15 = this;
    v18 -= v20;
    long long v30 = (char *)this + v29;
    if (v29 >= 4) {
      uint64_t v31 = 4;
    }
    else {
      uint64_t v31 = v29;
    }
    *((void *)v3 + sub_100157AEC((void *)this + 2) = v30;
    *((void *)v3 + 3) = &v30[-v31];
    size_t v20 = v29;
    if (v29 >= v18)
    {
      unint64_t v21 = (char *)__dst;
      unint64_t v22 = *(void *)(a2 + 16) - (void)__dst;
      goto LABEL_42;
    }
  }
LABEL_45:
  *(void *)(a2 + 8) = __dst;
  return this;
}

uint64_t sub_10015DB0C(void *a1, unint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v4 = (unsigned char *)*a4;
  if (*a4 - *a1 < a2) {
    return 0;
  }
  unint64_t v6 = (unint64_t)&v4[a3];
  if (a2 >= a3 && (unint64_t)v4 < a1[3])
  {
    long long v7 = *(_OWORD *)&v4[-a2];
    long long v8 = *(_OWORD *)&v4[-a2 + 16];
    long long v9 = *(_OWORD *)&v4[-a2 + 48];
    *((_OWORD *)v4 + sub_100157AEC((void *)this + 2) = *(_OWORD *)&v4[-a2 + 32];
    *((_OWORD *)v4 + 3) = v9;
    *(_OWORD *)uint64_t v4 = v7;
    *((_OWORD *)v4 + sub_1000333D0((uint64_t *)this + 1) = v8;
LABEL_6:
    *a4 = v6;
    return 1;
  }
  uint64_t v5 = 0;
  if (a2)
  {
    unint64_t v11 = a1[2];
    if (v6 <= v11)
    {
      uint64_t v12 = (uint64_t *)&v4[-a2];
      if (a2 <= 7)
      {
        if (v11 - 11 < (unint64_t)v4)
        {
          if (a3 >= 1)
          {
            do
            {
              unsigned char *v4 = v4[-a2];
              ++v4;
              --a3;
            }
            while (a3);
          }
          goto LABEL_6;
        }
        do
        {
          *(void *)uint64_t v4 = *v12;
          v4 += a2;
          BOOL v13 = a2 >= 4;
          a2 *= 2;
        }
        while (!v13);
        if ((unint64_t)v4 >= v6) {
          goto LABEL_6;
        }
      }
      if (v11 - 15 >= v6)
      {
        *(void *)uint64_t v4 = *v12;
        *((void *)v4 + sub_1000333D0((uint64_t *)this + 1) = v12[1];
        if ((unint64_t)(v4 + 16) < v6)
        {
          *((void *)v4 + sub_100157AEC((void *)this + 2) = v12[2];
          *((void *)v4 + 3) = v12[3];
        }
        if ((unint64_t)(v4 + 32) < v6)
        {
          *((void *)v4 + 4) = v12[4];
          *((void *)v4 + 5) = v12[5];
        }
        if ((unint64_t)(v4 + 48) < v6)
        {
          *((void *)v4 + 6) = v12[6];
          *((void *)v4 + 7) = v12[7];
        }
      }
      else
      {
        while ((unint64_t)v4 < v11 - 16)
        {
          *(void *)uint64_t v4 = *v12;
          *((void *)v4 + sub_1000333D0((uint64_t *)this + 1) = v12[1];
          v4 += 16;
          v12 += 2;
        }
        if ((unint64_t)v4 < v6)
        {
          if ((unint64_t)v4 <= v11 - 8)
          {
            uint64_t v14 = *v12++;
            *(void *)uint64_t v4 = v14;
            v4 += 8;
          }
          if ((unint64_t)v4 < v6)
          {
            unint64_t v15 = v6 - (void)v4;
            do
            {
              char v16 = *(unsigned char *)v12;
              uint64_t v12 = (uint64_t *)((char *)v12 + 1);
              *v4++ = v16;
              --v15;
            }
            while (v15);
          }
        }
      }
      goto LABEL_6;
    }
  }
  return v5;
}

void sub_10015DE28(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    [*(id *)(a1 + 40) becomeCurrentWithPendingUnitCount:1];
    uint64_t v2 = *(void **)(a1 + 32);
    uint64_t v3 = *(void *)(a1 + 48);
    uint64_t v4 = [*(id *)(a1 + 56) entriesToRemove];
    id v13 = 0;
    id v5 = [v2 writeToURL:v3 packageType:2 removeEntriesMatchingFilter:v4 error:&v13];
    id v6 = v13;

    [*(id *)(a1 + 40) resignCurrent];
  }
  else
  {
    id v5 = 0;
    id v6 = 0;
  }
  long long v7 = *(void (***)(void, void, void))(a1 + 72);
  if (v7)
  {
    long long v8 = *(NSObject **)(a1 + 64);
    if (v8)
    {
      v9[0] = _NSConcreteStackBlock;
      v9[1] = 3221225472;
      void v9[2] = sub_10015DF64;
      void v9[3] = &unk_1001D3538;
      unint64_t v11 = v7;
      char v12 = (char)v5;
      id v10 = v6;
      dispatch_async(v8, v9);
    }
    else
    {
      ((void (**)(void, id, id))v7)[2](v7, v5, v6);
    }
  }
}

uint64_t sub_10015DF64(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(unsigned __int8 *)(a1 + 48), *(void *)(a1 + 32));
}

void sub_10015E0A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v11 = 0;
  id v3 = +[TSPPackageConverter newPackageConverterWithURL:v2 error:&v11];
  id v4 = v11;
  if (v3)
  {
    id v5 = [*(id *)(a1 + 40) convertWithConverter:v3 toSFFAtURL:*(void *)(a1 + 48) queue:*(void *)(a1 + 56) completion:*(void *)(a1 + 64)];
  }
  else
  {
    id v6 = *(void (***)(void, void, void))(a1 + 64);
    if (v6)
    {
      long long v7 = *(NSObject **)(a1 + 56);
      if (v7)
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_10015E1BC;
        block[3] = &unk_1001CC350;
        id v10 = v6;
        id v9 = v4;
        dispatch_async(v7, block);
      }
      else
      {
        ((void (**)(void, void, id))v6)[2](v6, 0, v4);
      }
    }
  }
}

uint64_t sub_10015E1BC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 0, *(void *)(a1 + 32));
}

void sub_10015E334(id a1)
{
  unint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10015E378(id a1)
{
  unint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10015EB20(id a1)
{
  unint64_t v1 = TSULogCreateCategory("IWXPCPackageConverterCat");
  uint64_t v2 = IWXPCPackageConverterCat_log_t;
  IWXPCPackageConverterCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10015EB60(id a1)
{
  unint64_t v1 = TSULogCreateCategory("IWXPCPackageConverterCat");
  uint64_t v2 = IWXPCPackageConverterCat_log_t;
  IWXPCPackageConverterCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10015EBA0(id a1)
{
  unint64_t v1 = TSULogCreateCategory("IWXPCPackageConverterCat");
  uint64_t v2 = IWXPCPackageConverterCat_log_t;
  IWXPCPackageConverterCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10015EBE0(id a1)
{
  unint64_t v1 = TSULogCreateCategory("IWXPCPackageConverterCat");
  uint64_t v2 = IWXPCPackageConverterCat_log_t;
  IWXPCPackageConverterCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10015EC20(id a1)
{
  unint64_t v1 = TSULogCreateCategory("IWXPCPackageConverterCat");
  uint64_t v2 = IWXPCPackageConverterCat_log_t;
  IWXPCPackageConverterCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10015EC60(id a1)
{
  unint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10015ECA4(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    if (IWXPCPackageConverterCat_init_token != -1) {
      dispatch_once(&IWXPCPackageConverterCat_init_token, &stru_1001D36A8);
    }
    id v6 = IWXPCPackageConverterCat_log_t;
    if (os_log_type_enabled((os_log_t)IWXPCPackageConverterCat_log_t, OS_LOG_TYPE_DEBUG)) {
      sub_10015F2B4(v6);
    }
  }
  else
  {
    if (IWXPCPackageConverterCat_init_token != -1) {
      dispatch_once(&IWXPCPackageConverterCat_init_token, &stru_1001D36C8);
    }
    long long v7 = IWXPCPackageConverterCat_log_t;
    if (os_log_type_enabled((os_log_t)IWXPCPackageConverterCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_10015F2F8(v7, v5);
    }
  }
  [*(id *)(a1 + 32) releaseInputSandboxExtensionToken:*(void *)(a1 + 56) outputSandBoxToken:*(void *)(a1 + 64)];
  if (a2) {
    uint64_t v8 = *(void *)(a1 + 40);
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = *(void *)(a1 + 48);
  if (v9) {
    (*(void (**)(uint64_t, uint64_t, void))(v9 + 16))(v9, v8, 0);
  }
}

void sub_10015EDA4(id a1)
{
  unint64_t v1 = TSULogCreateCategory("IWXPCPackageConverterCat");
  uint64_t v2 = IWXPCPackageConverterCat_log_t;
  IWXPCPackageConverterCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10015EDE4(id a1)
{
  unint64_t v1 = TSULogCreateCategory("IWXPCPackageConverterCat");
  uint64_t v2 = IWXPCPackageConverterCat_log_t;
  IWXPCPackageConverterCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_10015EE24(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10015EEA8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void sub_10015EEC8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x1Cu);
}

void sub_10015EEE8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x2Au);
}

void sub_10015EF08(void *a1)
{
  id v1 = a1;
  uint64_t v2 = __error();
  strerror(*v2);
  __error();
  sub_10015EE84();
  sub_10015EEC8((void *)&_mh_execute_header, v3, v4, "Failed to apply sandbox file-system extension for output. error %s(%d), extension %@", v5, v6, v7, v8, v9);
}

void sub_10015EFA8(void *a1)
{
  id v1 = a1;
  uint64_t v2 = __error();
  strerror(*v2);
  __error();
  sub_10015EE84();
  sub_10015EEC8((void *)&_mh_execute_header, v3, v4, "Failed to apply sandbox file-system extension for input. error %s(%d), extension %@", v5, v6, v7, v8, v9);
}

void sub_10015F048()
{
  sub_10015EE6C();
  sub_10015EEA8((void *)&_mh_execute_header, v0, v1, "Successfully copied file from \"%@\" to \"%@\".");
}

void sub_10015F0B0()
{
  sub_10015EE6C();
  sub_10015EEA8((void *)&_mh_execute_header, v0, v1, "The document at %@ isn't a bundle and has no entries to remove, copying directly to %@");
}

void sub_10015F118(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  uint64_t v6 = [a2 domain];
  [a2 code];
  sub_10015EE3C();
  sub_10015EEE8((void *)&_mh_execute_header, v7, v8, "Error Creating package converter errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v9, v10, v11, v12, v13);
}

void sub_10015F1D4()
{
  sub_10015EE6C();
  sub_10015EEA8((void *)&_mh_execute_header, v0, v1, "Creating package converter for document at: %@, destination URL: %@");
}

void sub_10015F23C(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to convert package because originalURL could not be found: %@", (uint8_t *)&v2, 0xCu);
}

void sub_10015F2B4(os_log_t log)
{
  *(_WORD *)os_log_t v1 = 0;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Successfully converted package", v1, 2u);
}

void sub_10015F2F8(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  uint64_t v6 = [a2 domain];
  [a2 code];
  sub_10015EE3C();
  sub_10015EEE8((void *)&_mh_execute_header, v7, v8, "Failed to convert packageerrorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v9, v10, v11, v12, v13);
}

void sub_10015F3B4(uint64_t a1, NSObject *a2)
{
  int v2 = 134217984;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Unknown package type: %ld", (uint8_t *)&v2, 0xCu);
}

void sub_10015F42C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Specify a package type other than TSPPackageTypeDefault for new package writer", v2, v3, v4, v5, v6);
}

void sub_10015F4B4(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Error reading zip archive, zipArchiveURL=%@", (uint8_t *)&v2, 0xCu);
}

void sub_10015F52C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Don't support writing to non-file URLs", v2, v3, v4, v5, v6);
}

void sub_10015F5B4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Didn't close", v2, v3, v4, v5, v6);
}

void sub_10015F63C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Components outside the object archive are not supported", v2, v3, v4, v5, v6);
}

void sub_10015F6C4()
{
  sub_10000AC1C();
  uint64_t v3 = "-[TSPPackageWriter packageEntryInfoForComponentLocator:isStoredOutsideObjectArchive:packageURL:]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPPackageWriter.mm";
  __int16 v6 = 1024;
  int v7 = 269;
  __int16 v8 = v0;
  uint64_t v9 = "locator";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, 0x2Cu);
}

void sub_10015F774()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Components outside the object archive are not supported", v2, v3, v4, v5, v6);
}

void sub_10015F7FC()
{
  sub_10000AC1C();
  uint64_t v3 = "-[TSPPackageWriter newRawComponentWriteChannelWithPackageLocator:storeOutsideObjectArchive:]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPPackageWriter.mm";
  __int16 v6 = 1024;
  int v7 = 330;
  __int16 v8 = v0;
  uint64_t v9 = "packageLocator";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, 0x2Cu);
}

void sub_10015F8AC(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Skip writing pre-existing data %@", buf, 0xCu);
}

void sub_10015F904()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Path should be defined.", v2, v3, v4, v5, v6);
}

void sub_10015F98C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Path should be defined.", v2, v3, v4, v5, v6);
}

void sub_10015FA14()
{
  sub_10000AC1C();
  uint64_t v2 = "-[NSURL(TSPersistence) tsp_embeddedUTI]";
  sub_10000AC30();
  int v3 = 49;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Expected UTI in iWork URL!", v1, 0x22u);
}

void sub_10015FAA8()
{
  sub_10000AC1C();
  uint64_t v2 = "-[NSURL(TSPersistence) tsp_embeddedUTI]";
  sub_10000AC30();
  int v3 = 46;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d UTIs only provided within iWork-internal URLs", v1, 0x22u);
}

void sub_10015FB3C(void *a1, void *a2, void *a3)
{
  uint64_t v5 = a1;
  uint8_t v6 = [a2 path];
  int v7 = [v6 lastPathComponent];
  __int16 v8 = (objc_class *)objc_opt_class();
  uint64_t v9 = NSStringFromClass(v8);
  uint64_t v10 = [a3 domain];
  id v11 = [a3 code];
  if (objc_msgSend(a3, "tsp_isRecoverable")) {
    CFStringRef v12 = @"recoverable=YES, ";
  }
  else {
    CFStringRef v12 = &stru_1001D3790;
  }
  uint8_t v13 = objc_msgSend(a3, "tsp_hintsDescription");
  int v14 = 138414082;
  unint64_t v15 = v7;
  __int16 v16 = 2112;
  unsigned int v17 = a2;
  __int16 v18 = 2114;
  uint64_t v19 = v9;
  __int16 v20 = 2114;
  unint64_t v21 = v10;
  __int16 v22 = 2048;
  id v23 = v11;
  __int16 v24 = 2114;
  CFStringRef v25 = v12;
  __int16 v26 = 2114;
  size_t v27 = v13;
  __int16 v28 = 2112;
  uint64_t v29 = a3;
  _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "<(null): 0x0> \"%@\" Error getting resource identifier for %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) ", (uint8_t *)&v14, 0x52u);
}

void sub_10015FCC8()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSPSnappyReadChannel readWithHandler:]";
  sub_10000AC30();
  int v3 = 36;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Already closed", v1, 0x22u);
}

void sub_10015FD5C()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSPSnappyReadChannel processData:isDone:handler:]";
  sub_10000AC30();
  int v3 = 67;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Should have data by now", v1, 0x22u);
}

void sub_10015FDF0()
{
  sub_10000C2F8();
  sub_10000C2DC((void *)&_mh_execute_header, v0, v1, "Data is too short.", v2, v3, v4, v5, v6);
}

void sub_10015FE24(uint8_t *buf, unsigned char *a2, os_log_t log)
{
  *buf = 0;
  *a2 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Unrecognized block type, document is probably corrupt", buf, 2u);
}

void sub_10015FE64()
{
  sub_10000C2F8();
  sub_10000C2DC((void *)&_mh_execute_header, v0, v1, "Couldn't uncompress", v2, v3, v4, v5, v6);
}

void sub_10015FE98()
{
  sub_10000C2F8();
  sub_10000C2DC((void *)&_mh_execute_header, v0, v1, "Couldn't get uncompressed size", v2, v3, v4, v5, v6);
}

void sub_10015FECC()
{
  sub_10000AC1C();
  uint64_t v3 = "-[TSPAVAssetResourceLoaderDelegate _provideNextDataBlockToLoadingRequest:completion:]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPAVAssetResourceLoaderDelegate.mm";
  __int16 v6 = 1024;
  int v7 = 162;
  __int16 v8 = v0;
  uint64_t v9 = "_readChannel";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, 0x2Cu);
}

void sub_10015FF7C()
{
  sub_10000AC1C();
  uint64_t v3 = "-[TSPAVAssetResourceLoaderDelegate _provideNextDataBlockToLoadingRequest:completion:]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPAVAssetResourceLoaderDelegate.mm";
  __int16 v6 = 1024;
  int v7 = 142;
  __int16 v8 = v0;
  uint64_t v9 = "dataRequest";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, 0x2Cu);
}

void sub_10016002C()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_1001600C0()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100160154()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_1001601E8()
{
  sub_10000AC1C();
  uint64_t v3 = "-[TSPDirectoryPackage copyComponent:toPackageURL:packageLocator:zipFileWriter:encryptionKey:canLink:completion:]_block_invoke";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPDirectoryPackage.mm";
  __int16 v6 = 1024;
  int v7 = 116;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Can't get package URL", v2, 0x22u);
}

void sub_100160288()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_10016031C()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_1001603B0()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100160444()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_1001604D8()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_10016056C()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSPDirectoryPackageDataWriter writeData:toRelativePath:allowEncryption:error:]";
  sub_10000AC30();
  int v3 = 31;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Path should be defined.", v1, 0x22u);
}

void sub_100160600()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSPDirectoryPackageDataWriter newCGDataConsumerAtRelativePath:]";
  sub_10000AC30();
  int v3 = 57;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Path should be defined.", v1, 0x22u);
}

void sub_100160694()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to allocate space for IV", v2, v3, v4, v5, v6);
}

void sub_10016071C()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  int v4 = 46;
  __int16 v5 = v0;
  uint8_t v6 = "decryptionKey";
  sub_100016DE8((void *)&_mh_execute_header, v1, v2, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v3);
}

void sub_1001607B8()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  int v4 = 43;
  __int16 v5 = v0;
  uint8_t v6 = "readChannel";
  sub_100016DE8((void *)&_mh_execute_header, v1, v2, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v3);
}

void sub_100160854()
{
  sub_100016DD4();
  uint64_t v3 = "-[TSPCryptoReadChannel readWithHandler:]_block_invoke";
  __int16 v4 = v0;
  sub_10000FDF8();
  sub_100016E20();
  sub_100016DE8((void *)&_mh_execute_header, v1, (uint64_t)v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to read and discard the initial random block; onl"
    "y read %zu bytes",
    v2);
}

void sub_1001608F0(int a1)
{
  LODWORD(v3) = 67110146;
  HIDWORD(v3) = a1;
  __int16 v4 = 2082;
  sub_10000FE08();
  sub_100016E00((void *)&_mh_execute_header, v1, v2, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Finalizing decryption failed: CCCryptorFinal status %i", v3, v4);
}

void sub_100160994()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to allocate buffer for finalizing decryption", v2, v3, v4, v5, v6);
}

void sub_100160A1C()
{
  sub_100016DD4();
  uint64_t v3 = "-[TSPCryptoReadChannel readWithHandler:]_block_invoke";
  __int16 v4 = v0;
  sub_10000FDF8();
  sub_100016E20();
  sub_100016DE8((void *)&_mh_execute_header, v1, (uint64_t)v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to read and discard the initial random block; onl"
    "y read %zu bytes",
    v2);
}

void sub_100160AB8(int a1)
{
  LODWORD(v3) = 67110146;
  HIDWORD(v3) = a1;
  __int16 v4 = 2082;
  sub_10000FE08();
  sub_100016E00((void *)&_mh_execute_header, v1, v2, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Finalizing decryption failed: CCCryptorFinal status %i", v3, v4);
}

void sub_100160B5C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to allocate buffer for finalizing decryption", v2, v3, v4, v5, v6);
}

void sub_100160BE4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to allocate buffer for decryption", v2, v3, v4, v5, v6);
}

void sub_100160C6C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Read channel is already closed", v2, v3, v4, v5, v6);
}

void sub_100160CF4()
{
  sub_10000AC1C();
  sub_10000FE08();
  uint64_t v3 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoComponentWriteChannel.mm";
  __int16 v4 = 1024;
  int v5 = 53;
  __int16 v6 = v0;
  int v7 = "encryptionInfo";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, 0x2Cu);
}

void sub_100160DA0()
{
  sub_10000AC1C();
  sub_10000FE08();
  uint64_t v3 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoComponentWriteChannel.mm";
  __int16 v4 = 1024;
  int v5 = 50;
  __int16 v6 = v0;
  int v7 = "writeChannel";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, 0x2Cu);
}

void sub_100160E4C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to allocate space for encryption buffer", v2, v3, v4, v5, v6);
}

void sub_100160ED4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to generate IV", v2, v3, v4, v5, v6);
}

void sub_100160F5C(int a1)
{
  LODWORD(v3) = 67110146;
  HIDWORD(v3) = a1;
  __int16 v4 = 2082;
  sub_10000FE08();
  sub_100016E00((void *)&_mh_execute_header, v1, v2, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d CCCryptorCreate() failed: %d", v3, v4);
}

void sub_100161000()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid passphrase", v2, v3, v4, v5, v6);
}

void sub_100161088()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to generate initial block of random plaintext", v2, v3, v4, v5, v6);
}

void sub_100161110()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Tried to write data when already closed.", v2, v3, v4, v5, v6);
}

void sub_100161198()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Tried to write data when already closed.", v2, v3, v4, v5, v6);
}

void sub_100161220()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to allocate buffer for finalizing encryption", v2, v3, v4, v5, v6);
}

void sub_1001612A8(int a1)
{
  LODWORD(v3) = 67110146;
  HIDWORD(v3) = a1;
  __int16 v4 = 2082;
  sub_10000FE08();
  sub_100016E00((void *)&_mh_execute_header, v1, v2, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Finalizing encryption failed: CCCryptorFinal status %i", v3, v4);
}

void sub_10016134C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Buffer overflow", v2, v3, v4, v5, v6);
}

void sub_1001613D4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Buffer overflow", v2, v3, v4, v5, v6);
}

void sub_10016145C(int a1, NSObject *a2)
{
  v2[0] = 67109890;
  v2[1] = a1;
  __int16 v3 = 2082;
  uint64_t v4 = "-[TSPPackageWriterComponentWriteChannel writeData:]";
  __int16 v5 = 2082;
  uint8_t v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPPackageWriterComponentWriteChannel.mm";
  __int16 v7 = 1024;
  int v8 = 30;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Channel is closed", (uint8_t *)v2, 0x22u);
}

void sub_100161508(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Invalid contained Index.zip.", v1, 2u);
}

void sub_10016154C(int a1, NSObject *a2)
{
  v2[0] = 67110146;
  v2[1] = a1;
  __int16 v3 = 2082;
  uint64_t v4 = "-[TSPFilePackage packageEntryInfoAtRelativePath:error:]";
  __int16 v5 = 2082;
  uint8_t v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPFilePackage.mm";
  __int16 v7 = 1024;
  int v8 = 186;
  __int16 v9 = 2082;
  uint64_t v10 = "path";
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", (uint8_t *)v2, 0x2Cu);
}

void sub_100161608()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Document revision identifier should not be nil.", v2, v3, v4, v5, v6);
}

void sub_100161690()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Should be able to create UUID from base UUID string.", v2, v3, v4, v5, v6);
}

void sub_100161718()
{
  sub_10001B90C();
  sub_10001B954();
  sub_10001B940();
  sub_10001B920((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Revision string has invalid identifier: %{public}@");
}

void sub_1001617A4()
{
  sub_10001B90C();
  sub_10001B954();
  sub_10001B940();
  sub_10001B920((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Revision string has invalid sequence: %{public}@");
}

void sub_100161830()
{
  sub_10001B90C();
  sub_10001B954();
  sub_10001B940();
  sub_10001B920((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Revision string is in invalid format: %{public}@");
}

void sub_1001618BC()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Assumed that we'd never need to ask TSPOC for a document revision in iWorkXPC", v2, v3, v4, v5, v6);
}

void sub_100161944(void *a1, uint8_t *buf, int a3, os_log_t log)
{
  *(_DWORD *)buf = 67110146;
  *((_DWORD *)buf + sub_1000333D0((uint64_t *)this + 1) = a3;
  *((_WORD *)buf + 4) = 2082;
  *(void *)(buf + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fsource_5fcontext_2eproto, 0) = "-[TSPDocumentRevision nextRevisionWithIdentifier:]";
  *((_WORD *)buf + 9) = 2082;
  *(void *)(buf + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fsource_5fcontext_2eproto, 0) = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPDocumentRevision.mm";
  *((_WORD *)buf + 14) = 1024;
  *(_DWORD *)(buf + 3google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fsource_5fcontext_2eproto, 0) = 106;
  *((_WORD *)buf + 17) = 2114;
  *(void *)(buf + 36) = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Revision will overflow: %{public}@", buf, 0x2Cu);
}

void sub_1001619E0(int a1, NSObject *a2)
{
  v2[0] = 67110146;
  v2[1] = a1;
  __int16 v3 = 2082;
  uint64_t v4 = "-[TSPPackageConverter newWriteChannelAtPath:lastModificationDate:size:CRC:packageWriter:error:]";
  __int16 v5 = 2082;
  uint8_t v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPPackageConverter.mm";
  __int16 v7 = 1024;
  int v8 = 433;
  __int16 v9 = 2082;
  uint64_t v10 = "path";
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", (uint8_t *)v2, 0x2Cu);
}

void sub_100161A9C()
{
  sub_10000AC1C();
  sub_10000FDF8();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100161B38(void *a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_DEBUG, "Remove data that needs transcoding from reusable data %@", buf, 0xCu);
}

void sub_100161B90()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSPFilePackageWriter finalizeComponentAndDataSectionWithCompletionHandler:]";
  sub_10000AC30();
  int v3 = 247;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Only the delayed zip archive writer should have entries", v1, 0x22u);
}

void sub_100161C24()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSPFilePackageWriter closeWithQueue:completion:]_block_invoke";
  sub_10000AC30();
  int v3 = 284;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Only the delayed zip archive writer should have entries", v1, 0x22u);
}

void sub_100161CB8()
{
  sub_10000AC1C();
  sub_10000FDF8();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100161D54()
{
  sub_10000AC1C();
  sub_10000FDF8();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100161DF0()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_100161E84()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_100161F18()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100161FAC()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100162040()
{
  sub_10000AC1C();
  uint64_t v3 = "-[TSPDirectoryPackageWriterComponentFileWriteChannel writeData:]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPDirectoryPackageWriter.mm";
  __int16 v6 = 1024;
  int v7 = 278;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Already closed", v2, 0x22u);
}

void sub_1001620E0()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Bad error code", v2, v3, v4, v5, v6);
}

void sub_100162168()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_1001621FC()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100162290()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100162324(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Cannot open blob for a non-data state", v1, 2u);
}

void sub_100162368()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid schema version", v2, v3, v4, v5, v6);
}

void sub_1001623F0()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Updated more than one row when setting the document version. Expecting this table to contain a maximum of one row", v2, v3, v4, v5, v6);
}

void sub_100162478()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Updated more than one row when setting the document version. Expecting this table to contain a maximum of one row", v2, v3, v4, v5, v6);
}

void sub_100162500()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100162594()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100162628()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_1001626BC()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSPZipFileWriteChannel writeData:handler:]";
  sub_10000AC30();
  int v3 = 40;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Channel is closed", v1, 0x22u);
}

void sub_100162750()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSPZipFileWriteChannel flushWithCompletion:]";
  sub_10000AC30();
  int v3 = 57;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Flushing ZIP write channel only adds a barrier.", v1, 0x22u);
}

void sub_1001627E4()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100162878()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d expected nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_10016290C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d File format version shouldn't have been set.", v2, v3, v4, v5, v6);
}

void sub_100162994(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Document was changed by another app. We cannot reload the Index.zip because it no longer matches what we expect.", v1, 2u);
}

void sub_1001629D8()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d expected nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100162A6C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Components outside the object archive are not supported", v2, v3, v4, v5, v6);
}

void sub_100162AF4()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_100162B88()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_100162C1C()
{
  sub_10002ED8C();
  sub_10002ED70((void *)&_mh_execute_header, v0, v1, "No entry for %{public}@", v2, v3, v4, v5, v6);
}

void sub_100162C84()
{
  sub_10002ED8C();
  sub_10002ED70((void *)&_mh_execute_header, v0, v1, "Can't read entry %{public}@", v2, v3, v4, v5, v6);
}

void sub_100162CEC()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Components outside the object archive are not supported", v2, v3, v4, v5, v6);
}

void sub_100162D74()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_100162E08()
{
  sub_10002ED8C();
  sub_10002ED70((void *)&_mh_execute_header, v0, v1, "Failed to create read channel for %{public}@", v2, v3, v4, v5, v6);
}

void sub_100162E70()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100162F04()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Components outside the object archive are not supported", v2, v3, v4, v5, v6);
}

void sub_100162F8C()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_100163020()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Didn't close", v2, v3, v4, v5, v6);
}

void sub_1001630A8()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Already closed", v2, v3, v4, v5, v6);
}

void sub_100163130()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid uncompressed length.", v2, v3, v4, v5, v6);
}

void sub_1001631B8()
{
  sub_10000AC1C();
  sub_10000FDF8();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100163254()
{
  sub_10000AC1C();
  sub_10000FDF8();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_1001632F0()
{
  sub_10000AC1C();
  sub_10000FDF8();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_10016338C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d We should not be adding a block info when the preferred block size is SIZE_T_MAX.", v2, v3, v4, v5, v6);
}

void sub_100163414()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d We should not be adding a block info when the preferred block size is SIZE_T_MAX.", v2, v3, v4, v5, v6);
}

void sub_10016349C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d This is not a mutable crypto info.", v2, v3, v4, v5, v6);
}

void sub_100163524()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Preferred block size cannot be zero.", v2, v3, v4, v5, v6);
}

void sub_1001635AC()
{
  sub_10000AC1C();
  uint64_t v2 = "virtual const char *TSP::SnappySource::Peek(size_t *)";
  sub_10000AC30();
  int v3 = 36;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Couldn't map region", v1, 0x22u);
}

void sub_100163640()
{
  sub_10000AC1C();
  uint64_t v2 = "virtual const char *TSP::SnappySource::Peek(size_t *)";
  sub_10000AC30();
  int v3 = 33;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Couldn't get region", v1, 0x22u);
}

void sub_1001636D4()
{
  sub_10000AC1C();
  sub_100036A8C();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Out-of-bounds type assignment was clamped to max", v2, v3, v4, v5, v6);
}

void sub_100163754()
{
  sub_10000AC1C();
  sub_100036A8C();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Out-of-bounds type assignment was clamped to min", v2, v3, v4, v5, v6);
}

void sub_1001637D4()
{
  sub_10000AC1C();
  sub_100036AA8();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Out-of-bounds type assignment was clamped to max", v2, v3, v4, v5, v6);
}

void sub_100163854()
{
  sub_10000AC1C();
  sub_100036AA8();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Out-of-bounds type assignment was clamped to min", v2, v3, v4, v5, v6);
}

void sub_1001638D4()
{
  sub_10000AC1C();
  sub_100036AC4();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Out-of-bounds type assignment was clamped to max", v2, v3, v4, v5, v6);
}

void sub_100163954()
{
  sub_10000AC1C();
  sub_100036AC4();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Out-of-bounds type assignment was clamped to min", v2, v3, v4, v5, v6);
}

void sub_1001639D4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Version should consist of 3 numbers separated by '.'", v2, v3, v4, v5, v6);
}

void sub_100163A5C(int *a1, void *a2)
{
  if (*a1 > 0 && !*(void *)(*a2 - 8)) {
    operator delete((void *)(*a2 - 8));
  }
}

void sub_100163A7C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v2 = (void *)(v1 - 8);
  if (!v3) {
    operator delete(v2);
  }
}

void sub_100163A90(int *a1, void *a2, int *a3, void *a4)
{
  if (*a1 >= 1 && !*(void *)(*a2 - 8)) {
    operator delete((void *)(*a2 - 8));
  }
  if (*a3 >= 1)
  {
    uint8_t v6 = (void *)(*a4 - 8);
    if (!*v6)
    {
      operator delete(v6);
    }
  }
}

void sub_100163B04(int *a1, void *a2, int *a3, void *a4)
{
  if (*a1 > 0 && !*(void *)(*a4 - 8)) {
    operator delete((void *)(*a4 - 8));
  }
  if (*a3 > 0)
  {
    uint8_t v6 = (void *)(*a2 - 8);
    if (!*v6)
    {
      operator delete(v6);
    }
  }
}

void sub_100163B78(int *a1, void *a2)
{
  if (*a1 >= 1 && !*(void *)(*a2 - 8)) {
    operator delete((void *)(*a2 - 8));
  }
}

void sub_100163B98()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSPCompressionComponentWriteChannel dealloc]";
  sub_10000AC30();
  int v3 = 29;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to close write channel prior to dealloc", v1, 0x22u);
}

void sub_100163C2C()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSPCompressionComponentWriteChannel writeData:]_block_invoke";
  sub_10000AC30();
  int v3 = 44;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Already closed", v1, 0x22u);
}

void sub_100163CC0(void *a1, void *a2)
{
  int v3 = a1;
  uint64_t v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  uint8_t v6 = [a2 domain];
  int v7 = 138544130;
  int v8 = v5;
  __int16 v9 = 2114;
  uint64_t v10 = v6;
  __int16 v11 = 2048;
  id v12 = [a2 code];
  __int16 v13 = 2112;
  int v14 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Error compressing data. errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", (uint8_t *)&v7, 0x2Au);
}

void sub_100163DB4()
{
  sub_10000AC1C();
  uint64_t v2 = "int64_t TSP::ObjectStateIdentifier::dataState() const";
  sub_10000AC30();
  int v3 = 30;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Asked for data state when we have none", v1, 0x22u);
}

void sub_100163E48()
{
  sub_10000AC1C();
  uint64_t v2 = "NSString *TSP::ObjectStateIdentifier::fileState() const";
  sub_10000AC30();
  int v3 = 45;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Asked for file state when we have none", v1, 0x22u);
}

void sub_100163EDC(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Max size must be greater than zero", v1, 2u);
}

void sub_100163F20()
{
  sub_10000AC1C();
  int v3 = "-[TSPComponentWriteChannelAdapter initWithChannel:handler:]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/NSData_TSPersistence.mm";
  __int16 v6 = 1024;
  int v7 = 254;
  __int16 v8 = v0;
  __int16 v9 = "channel";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, 0x2Cu);
}

void sub_100163FD0()
{
  sub_10000AC1C();
  int v3 = "-[TSPComponentWriteChannelAdapter writeData:]_block_invoke";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/NSData_TSPersistence.mm";
  __int16 v6 = 1024;
  int v7 = 265;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Already closed", v2, 0x22u);
}

void sub_100164070()
{
  sub_10000AC1C();
  int v3 = "-[NSSet(TSUAdditions) tsu_setByMappingObjectsUsingBlock:]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSSetAdditions.m";
  __int16 v6 = 1024;
  int v7 = 99;
  __int16 v8 = v0;
  __int16 v9 = "block != nil";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, 0x2Cu);
}

void sub_100164120()
{
  sub_10000AC1C();
  int v3 = "-[NSSet(TSUAdditions) tsu_onlyObject]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSSetAdditions.m";
  __int16 v6 = 1024;
  int v7 = 130;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d As this method returns the only object in the set, it only makes sense if the set has at most one object.", v2, 0x22u);
}

void sub_1001641C0(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_debug_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_DEBUG, "Data causing exception: %@", (uint8_t *)&v2, 0xCu);
}

void sub_100164238(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  uint64_t v5 = (objc_class *)objc_opt_class();
  __int16 v6 = NSStringFromClass(v5);
  int v7 = [a3 domain];
  [a3 code];
  sub_100076A88();
  sub_100076AC0((void *)&_mh_execute_header, v8, v9, "Unable to decode data %p: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v10, v11, v12, v13, v14);
}

void sub_100164300(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  uint64_t v5 = (objc_class *)objc_opt_class();
  __int16 v6 = NSStringFromClass(v5);
  int v7 = [a3 domain];
  [a3 code];
  sub_100076A88();
  sub_100076AC0((void *)&_mh_execute_header, v8, v9, "Error reading data from path %@, errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v10, v11, v12, v13, v14);
}

void sub_1001643C8(uint64_t a1, int a2, os_log_t log)
{
  v3[0] = 67110146;
  v3[1] = a2;
  __int16 v4 = 2082;
  uint64_t v5 = "-[NSObject(TSUAdditions) tsu_removeObserverForToken:]";
  __int16 v6 = 2082;
  int v7 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSObject_TSUAdditions.m";
  __int16 v8 = 1024;
  int v9 = 211;
  __int16 v10 = 2112;
  uint64_t v11 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Attempted to stop key-value observing on %@ using a token that it was not associated with", (uint8_t *)v3, 0x2Cu);
}

void sub_100164484()
{
  sub_10007BBB4();
  id v4 = v3;
  uint64_t v5 = (objc_class *)sub_10007BB78();
  NSStringFromClass(v5);
  objc_claimAutoreleasedReturnValue();
  [(id)sub_10007BBA8() domain];
  objc_claimAutoreleasedReturnValue();
  sub_10007BB90();
  sub_100076A88();
  sub_100076AC0((void *)&_mh_execute_header, v6, v7, "Failed to get NSURLVolumeIsEjectableKey. %@ errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v8, v9, v10, v11, v12);
}

void sub_100164534()
{
  sub_10007BBB4();
  id v4 = v3;
  uint64_t v5 = (objc_class *)sub_10007BB78();
  NSStringFromClass(v5);
  objc_claimAutoreleasedReturnValue();
  [(id)sub_10007BBA8() domain];
  objc_claimAutoreleasedReturnValue();
  sub_10007BB90();
  sub_100076A88();
  sub_100076AC0((void *)&_mh_execute_header, v6, v7, "Failed to get NSURLVolumeIsRemovableKey. %@ errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v8, v9, v10, v11, v12);
}

void sub_1001645E4()
{
  sub_10007BBB4();
  id v4 = v3;
  uint64_t v5 = (objc_class *)sub_10007BB78();
  NSStringFromClass(v5);
  objc_claimAutoreleasedReturnValue();
  [(id)sub_10007BBA8() domain];
  objc_claimAutoreleasedReturnValue();
  sub_10007BB90();
  sub_100076A88();
  sub_100076AC0((void *)&_mh_execute_header, v6, v7, "Failed to get NSURLVolumeIsLocalKey. %@ errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v8, v9, v10, v11, v12);
}

void sub_100164694()
{
  sub_10007BBB4();
  id v4 = v3;
  uint64_t v5 = (objc_class *)sub_10007BB78();
  NSStringFromClass(v5);
  objc_claimAutoreleasedReturnValue();
  [(id)sub_10007BBA8() domain];
  objc_claimAutoreleasedReturnValue();
  sub_10007BB90();
  sub_100076A88();
  sub_100076AC0((void *)&_mh_execute_header, v6, v7, "Failed to get file modification date for URL=%@ error=errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v8, v9, v10, v11, v12);
}

void sub_100164744(int a1, NSObject *a2)
{
  v2[0] = 67109890;
  v2[1] = a1;
  __int16 v3 = 2082;
  id v4 = "+[NSURL(TSUAdditions) tsu_urlFromUserProvidedTelephoneString:withDataDetector:]_block_invoke";
  __int16 v5 = 2082;
  uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSURL_TSUAdditions.m";
  __int16 v7 = 1024;
  int v8 = 559;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Expected phone number match from NSDataDetector", (uint8_t *)v2, 0x22u);
}

void sub_1001647F0()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d SFUCryptoOutputStream cannot seek.", v2, v3, v4, v5, v6);
}

void sub_100164878()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d SFUCryptoOutputStream cannot create an input stream.", v2, v3, v4, v5, v6);
}

void sub_100164900()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Can't call -crc32 unless the stream is closed and was asked to compute the CRC32.", v2, v3, v4, v5, v6);
}

void sub_100164988()
{
  sub_10000AC1C();
  uint64_t v2 = "-[NSString(TSUAdditions) tsu_stringByAddingCSVEscapesForLocale:]";
  sub_10000AC30();
  int v3 = 203;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d The list separator is not a 1-char string", v1, 0x22u);
}

void sub_100164A1C()
{
  sub_10000AC1C();
  sub_10000FDF8();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100164AB8()
{
  sub_10000AC1C();
  sub_10000FDF8();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100164B54()
{
  sub_10000AC1C();
  sub_10000FDF8();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100164BF0()
{
  sub_10000AC1C();
  uint64_t v2 = "-[NSString(TSUAdditions) tsu_isTaggedPointer]_block_invoke";
  sub_10000AC30();
  int v3 = 746;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d expecting NSTaggedPointerString class here", v1, 0x22u);
}

void sub_100164C84(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Unable to use AddressBook API. Localization format may be incorrect.", v1, 2u);
}

void sub_100164CC8()
{
  sub_10001B90C();
  sub_10001B954();
  sub_10001B940();
  sub_10001B920((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid entry for TSUUUIDPath array: %{public}@");
}

void sub_100164D54()
{
  sub_10001B90C();
  sub_10001B954();
  sub_10001B940();
  sub_10001B920((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid UUID path string: %{public}@");
}

void sub_100164DE0()
{
  sub_10001B90C();
  sub_10001B954();
  sub_10001B940();
  sub_10001B920((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid UUID path string: %{public}@");
}

void sub_100164E6C(int a1, NSObject *a2)
{
  v2[0] = 67109890;
  v2[1] = a1;
  __int16 v3 = 2082;
  uint64_t v4 = "-[SFUOffsetInputStream offset]";
  __int16 v5 = 2082;
  uint8_t v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUOffsetInputStream.m";
  __int16 v7 = 1024;
  int v8 = 42;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d SFUOffsetInputStream points before its offset", (uint8_t *)v2, 0x22u);
}

void sub_100164F18(int a1, NSObject *a2)
{
  v2[0] = 67110146;
  v2[1] = a1;
  __int16 v3 = 2082;
  uint64_t v4 = "+[NSProgress(NSProgress_TSUAdditions) tsu_progressWithTSUProgress:totalUnitCount:]";
  __int16 v5 = 2082;
  uint8_t v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSProgress_TSUAdditions.m";
  __int16 v7 = 1024;
  int v8 = 66;
  __int16 v9 = 2082;
  uint64_t v10 = "progressObserver";
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", (uint8_t *)v2, 0x2Cu);
}

void sub_100164FD4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Need a file URL", v2, v3, v4, v5, v6);
}

void sub_10016505C(void *a1)
{
  id v1 = a1;
  uint64_t v2 = __error();
  strerror(*v2);
  sub_10002ED8C();
  sub_100086FF8((void *)&_mh_execute_header, v3, v4, "Failed to update zip archive with no cache flag, error: %{public}s", v5, v6, v7, v8, v9);
}

void sub_1001650E4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = (objc_class *)objc_opt_class();
  uint64_t v6 = NSStringFromClass(v5);
  uint64_t v7 = [a3 domain];
  [a3 code];
  sub_100087018();
  __int16 v11 = v8;
  uint8_t v12 = v7;
  __int16 v13 = 2048;
  uint64_t v14 = v9;
  __int16 v15 = 2112;
  __int16 v16 = a3;
  _os_log_error_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_ERROR, "Couldn't get size for %@. errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v10, 0x34u);
}

void sub_1001651DC()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Shouldn't open the archive if it's already open.", v2, v3, v4, v5, v6);
}

void sub_100165264(void *a1, void *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  uint8_t v6 = [a2 domain];
  [a2 code];
  sub_100087018();
  __int16 v9 = 2048;
  uint64_t v10 = v7;
  __int16 v11 = 2112;
  uint8_t v12 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Failed to remove temporary directory with error: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v8, 0x2Au);
}

void sub_100165348(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = [a2 path];
  sub_10002ED8C();
  sub_100086FF8((void *)&_mh_execute_header, v5, v6, "Failed to write to temporary zip file: %@", v7, v8, v9, v10, v11);
}

void sub_1001653E0()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d File should be opened.", v2, v3, v4, v5, v6);
}

void sub_100165468(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "File isn't open", v1, 2u);
}

void sub_1001654AC(void *a1)
{
  id v1 = a1;
  uint64_t v2 = __error();
  strerror(*v2);
  sub_10002ED8C();
  sub_100086FF8((void *)&_mh_execute_header, v3, v4, "Failed to update zip read channel with no cache flag, error: %{public}s", v5, v6, v7, v8, v9);
}

void sub_100165534(void *a1)
{
  id v1 = a1;
  uint64_t v2 = __error();
  strerror(*v2);
  sub_10002ED8C();
  sub_100086FF8((void *)&_mh_execute_header, v3, v4, "Failed to create read channel with error: %{public}s", v5, v6, v7, v8, v9);
}

void sub_1001655BC(int a1, NSObject *a2)
{
  v2[0] = 67109890;
  v2[1] = a1;
  __int16 v3 = 2082;
  uint64_t v4 = "-[SFUMemoryOutputStream seekToOffset:whence:]";
  __int16 v5 = 2082;
  uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUMemoryOutputStream.m";
  __int16 v7 = 1024;
  int v8 = 42;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Not implemented", (uint8_t *)v2, 0x22u);
}

void sub_100165668()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSUZipFileWriter initWithZipFileArchive:options:error:]";
  sub_10000AC30();
  int v3 = 69;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Unexpected offset", v1, 0x22u);
}

void sub_1001656FC()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSUZipFileWriter copyEntriesFromZipFileWriter:readingFromURL:options:completionHandler:]";
  sub_10000AC30();
  int v3 = 112;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Closed writer must be closed.", v1, 0x22u);
}

void sub_100165790()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100165824()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_1001658B8()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d expected nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_10016594C()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_1001659E0()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100165A74()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100165B08()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100165B9C(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3 = 136315394;
  uint64_t v4 = a1;
  __int16 v5 = 2080;
  uint64_t v6 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error calling getxattr for attribute %s on path \"%s\"", (uint8_t *)&v3, 0x16u);
}

void sub_100165C24(int a1, NSObject *a2)
{
  v2[0] = 67109890;
  v2[1] = a1;
  __int16 v3 = 2082;
  uint64_t v4 = "-[TSUExtendedAttribute initFromPathFileSystemRepresentation:name:forRemoval:options:error:]";
  __int16 v5 = 2082;
  uint64_t v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUExtendedAttribute.m";
  __int16 v7 = 1024;
  int v8 = 80;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Unexpected result.", (uint8_t *)v2, 0x22u);
}

void sub_100165CD0(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100165D3C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Unexpected buffer position while reading extra fields.", v2, v3, v4, v5, v6);
}

void sub_100165DC4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100165E30(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  id v3 = a2;
  [v2 count];
  sub_10008F84C((void *)&_mh_execute_header, v4, v5, "Failed to parse ZIP entry %tu. Will attempt to adjust offset forward.", v6, v7, v8, v9, 0);
}

void sub_100165EC4(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  id v3 = a2;
  [v2 count];
  sub_10008F84C((void *)&_mh_execute_header, v4, v5, "Failed to parse ZIP entry %tu. Will attempt to adjust offset backward.", v6, v7, v8, v9, 0);
}

void sub_100165F58(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100165FC4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Entry isn't part of this archive", v2, v3, v4, v5, v6);
}

void sub_10016604C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Entry isn't part of this archive", v2, v3, v4, v5, v6);
}

void sub_1001660D4(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100166144(int a1, NSObject *a2)
{
  v2[0] = 67109890;
  v2[1] = a1;
  __int16 v3 = 2082;
  uint64_t v4 = "+[NSError(TSUAdditions) tsu_errorWithCode:userInfo:]";
  __int16 v5 = 2082;
  uint8_t v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSError_TSUAdditions.m";
  __int16 v7 = 1024;
  int v8 = 46;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Bad error code", (uint8_t *)v2, 0x22u);
}

void sub_1001661F0()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Detected a read from the stream beneath a buffered stream.", v2, v3, v4, v5, v6);
}

void sub_100166278()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Bad invariant", v2, v3, v4, v5, v6);
}

void sub_100166300()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Bad invariant", v2, v3, v4, v5, v6);
}

void sub_100166388()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d No buffer parameter", v2, v3, v4, v5, v6);
}

void sub_100166410()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Database wasn't closed", v2, v3, v4, v5, v6);
}

void sub_100166498()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d SQLite misused", v2, v3, v4, v5, v6);
}

void sub_100166520()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Abstract method", v2, v3, v4, v5, v6);
}

void sub_1001665A8()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Abstract method", v2, v3, v4, v5, v6);
}

void sub_100166630()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Use a positive version", v2, v3, v4, v5, v6);
}

void sub_1001666B8()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Trying to use a closed database", v2, v3, v4, v5, v6);
}

void sub_100166740()
{
  sub_10000AC1C();
  sub_10000FDF8();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_1001667DC()
{
  sub_10000AC1C();
  sub_10000FDF8();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_100166878()
{
  sub_10000AC1C();
  sub_10000FDF8();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_100166914()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d No path", v2, v3, v4, v5, v6);
}

void sub_10016699C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Readonly database needs schema upgrade.", v2, v3, v4, v5, v6);
}

void sub_100166A24(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Couldn't bind string to SQL statement", v1, 2u);
}

void sub_100166A68(int a1, NSObject *a2)
{
  v2[0] = 67110146;
  v2[1] = a1;
  __int16 v3 = 2082;
  uint64_t v4 = "+[NSUUID(NSUUID_TSUAdditions) tsu_UUIDWithNamespaceUUID:bytes:size:]";
  __int16 v5 = 2082;
  uint8_t v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSUUID_TSUAdditions.m";
  __int16 v7 = 1024;
  int v8 = 47;
  __int16 v9 = 2082;
  uint64_t v10 = "namespaceUUID";
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", (uint8_t *)v2, 0x2Cu);
}

void sub_100166B24()
{
  sub_10000AC1C();
  uint64_t v2 = "-[NSArray(TSUAdditions) tsu_arrayByRemovingFirstObject]";
  sub_10000AC30();
  int v3 = 231;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Can't remove the first object of an empty array!", v1, 0x22u);
}

void sub_100166BB8()
{
  sub_10000AC1C();
  uint64_t v2 = "-[NSArray(TSUAdditions) tsu_onlyObject]";
  sub_10000AC30();
  int v3 = 392;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d As this method returns the only object in the array, it only makes sense if the array has at most one object.", v1, 0x22u);
}

void sub_100166C4C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Bad compression method.", v2, v3, v4, v5, v6);
}

void sub_100166CD4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Bad compression method.", v2, v3, v4, v5, v6);
}

void sub_100166D5C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d -[SFUZipEntry backingFilePath] called on an entry that is not backed by file.", v2, v3, v4, v5, v6);
}

void sub_100166DE4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d -[SFUZipEntry backingFileDataOffset] called on an entry that is not backed by file.", v2, v3, v4, v5, v6);
}

void sub_100166E6C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Tried to call -setDataLength: on an unencrypted zip entry.", v2, v3, v4, v5, v6);
}

void sub_100166EF4(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Local file header record signature not found", v1, 2u);
}

void sub_100166F38()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10001B954();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Buffer size too small: %zu", v2, v3, v4, v5, v6);
}

void sub_100166FCC()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100167060()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_1001670F4(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  uint8_t v6 = [a2 domain];
  [a2 code];
  sub_100099308();
  sub_10000FE08();
  sub_10001B954();
  sub_1000992B4();
  sub_1000992E8((void *)&_mh_execute_header, v7, v8, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Error reading from filter TSUStreamReadChannel: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v9, v10, v11, v12, v13);
}

void sub_1001671DC()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100167270(void *a1, void *a2)
{
  id v3 = a1;
  uint64_t v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  uint8_t v6 = [a2 domain];
  [a2 code];
  sub_100099308();
  sub_10000FE08();
  sub_10001B954();
  sub_1000992B4();
  sub_1000992E8((void *)&_mh_execute_header, v7, v8, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Error reading from source TSUReadChannel: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v9, v10, v11, v12, v13);
}

void sub_100167358()
{
  sub_10000AC1C();
  id v3 = "-[TSUBufferedReadChannel _readFromOffset:length:handler:]_block_invoke";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUBufferedReadChannel.m";
  __int16 v6 = 1024;
  int v7 = 283;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d The source handler for the stream read channel should not be nil", v2, 0x22u);
}

void sub_1001673F8()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_10016748C()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100167520()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_1001675B4()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_100167648()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, v3, v4, v5, v6);
}

void sub_1001676DC()
{
  sub_10000AC1C();
  uint64_t v3 = "+[TSUIOUtils newCGDataProviderForReadChannel:length:outInfo:outCallbacks:]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUIOUtils.m";
  __int16 v6 = 1024;
  int v7 = 160;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Need a seekable input stream for CGDataProvider", v2, 0x22u);
}

void sub_10016777C(int a1, NSObject *a2)
{
  v2[0] = 67109890;
  v2[1] = a1;
  __int16 v3 = 2082;
  __int16 v4 = "-[TSUCompressionReadChannel dealloc]";
  __int16 v5 = 2082;
  __int16 v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUCompressionReadChannel.m";
  __int16 v7 = 1024;
  int v8 = 31;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to close read channel prior to dealloc", (uint8_t *)v2, 0x22u);
}

void sub_100167828()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Archive is closed", v2, v3, v4, v5, v6);
}

void sub_1001678B0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  id v3 = a2;
  uint64_t v4 = [v2 name];
  sub_10009DF2C();
  sub_10009DF44((void *)&_mh_execute_header, v5, v6, "Local file header doesn't match compression method from central directory file header for entry %@. compressionMethod=%d", v7, v8, v9, v10, v11);
}

void sub_100167954(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  id v3 = a2;
  uint64_t v4 = [v2 name];
  sub_10009DF2C();
  sub_10009DF44((void *)&_mh_execute_header, v5, v6, "Local file header has bad signature for entry %@. signature=%d", v7, v8, v9, v10, v11);
}

void sub_1001679F8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + 8);
  uint64_t v5 = a2;
  uint64_t v6 = [v4 name];
  int v7 = 138412802;
  uint64_t v8 = v6;
  __int16 v9 = 2048;
  uint64_t v10 = a3;
  __int16 v11 = 2048;
  uint64_t v12 = 30;
  _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Read was less than record size for entry %@. readDataLength=%zu, recordLength=%zu, ", (uint8_t *)&v7, 0x20u);
}

void sub_100167AC4(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = a2;
  uint64_t v4 = [v2 name];
  int v5 = 138412290;
  uint64_t v6 = v4;
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "CRC does not match for entry %@", (uint8_t *)&v5, 0xCu);
}

void sub_100167B6C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Out-of-bounds type assignment was clamped to max", v2, v3, v4, v5, v6);
}

void sub_100167BF4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Low water is too small", v2, v3, v4, v5, v6);
}

void sub_100167C7C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Already closed", v2, v3, v4, v5, v6);
}

void sub_100167D04()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Already closed", v2, v3, v4, v5, v6);
}

void sub_100167D8C(uint64_t a1, int a2, NSObject *a3)
{
  v4[0] = 67110146;
  v4[1] = a2;
  __int16 v5 = 2082;
  uint8_t v6 = "-[TSUNoCopyDictionary setObject:forUncopiedKey:]";
  __int16 v7 = 2082;
  uint64_t v8 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUNoCopyDictionary.m";
  __int16 v9 = 1024;
  int v10 = 75;
  __int16 v11 = 2114;
  uint64_t v12 = objc_opt_class();
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Attempt to insert into no-copy dictionary a value of type %{public}@ with a nil key", (uint8_t *)v4, 0x2Cu);
}

void sub_100167E5C(int *a1, int a2, NSObject *a3)
{
  int v5 = *a1;
  int v6 = *__error();
  v7[0] = 67110402;
  v7[1] = a2;
  __int16 v8 = 2082;
  __int16 v9 = "-[SFUZipArchiveFileDataRepresentation dealloc]";
  __int16 v10 = 2082;
  __int16 v11 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUZipArchiveFileDataRepresentation.m";
  __int16 v12 = 1024;
  int v13 = 50;
  __int16 v14 = 1024;
  int v15 = v5;
  __int16 v16 = 1024;
  int v17 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, a3, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d close failed on fd = %d with errorno = %d", (uint8_t *)v7, 0x2Eu);
}

void sub_100167F40(int a1, NSObject *a2)
{
  v2[0] = 67110146;
  v2[1] = a1;
  __int16 v3 = 2082;
  uint64_t v4 = "-[SFUFileDataRepresentation initWithPath:sharedFileDescriptor:cryptoKey:dataLength:]";
  __int16 v5 = 2082;
  int v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUFileDataRepresentation.m";
  __int16 v7 = 1024;
  int v8 = 48;
  __int16 v9 = 2082;
  __int16 v10 = "path != nil";
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", (uint8_t *)v2, 0x2Cu);
}

void sub_100167FFC(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100168034()
{
  sub_10000AC1C();
  sub_1000A359C();
  _os_log_error_impl(v0, v1, v2, v3, v4, 0x2Cu);
}

void sub_1001680E0(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100168118(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100168150()
{
  sub_1000A359C();
  _os_log_error_impl(v0, v1, v2, v3, v4, 0xCu);
}

void sub_1001681C4()
{
  sub_10000AC1C();
  sub_1000A359C();
  _os_log_error_impl(v0, v1, v2, v3, v4, 0x22u);
}

void sub_100168260()
{
  sub_1000A359C();
  _os_log_error_impl(v0, v1, v2, v3, v4, 8u);
}

void sub_1001682DC(int a1, NSObject *a2)
{
  v2[0] = 67109890;
  v2[1] = a1;
  __int16 v3 = 2082;
  uint64_t v4 = "unsigned int SFUHashWithSeed(const char *, size_t, unsigned int)";
  __int16 v5 = 2082;
  int v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUHash.m";
  __int16 v7 = 1024;
  int v8 = 25;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d SFUHash must have at least one byte of input.", (uint8_t *)v2, 0x22u);
}

void sub_100168388()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_10016841C()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_1001684B0()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_100168544()
{
  sub_10000AC1C();
  sub_10000FE08();
  sub_10000FDF8();
  sub_10000FE14();
  sub_10000FDDC((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", v2, v3, v4, v5, v6);
}

void sub_1001685D8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = a2;
  uint8_t v6 = (objc_class *)objc_opt_class();
  __int16 v7 = NSStringFromClass(v6);
  int v8 = [a3 domain];
  int v9 = 138413314;
  uint64_t v10 = a1;
  __int16 v11 = 2114;
  __int16 v12 = v7;
  __int16 v13 = 2114;
  __int16 v14 = v8;
  __int16 v15 = 2048;
  id v16 = [a3 code];
  __int16 v17 = 2112;
  __int16 v18 = a3;
  _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "Could not setResourceValues %@ with errorerrorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", (uint8_t *)&v9, 0x34u);
}

void sub_1001686E0()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to initialize SFUCommonCryptoCryptor.", v2, v3, v4, v5, v6);
}

void sub_100168768(int a1, int a2, os_log_t log)
{
  v3[0] = 67110146;
  v3[1] = a1;
  __int16 v4 = 2082;
  uint64_t v5 = "-[SFUCryptor initWithKey:operation:iv:ivLength:usePKCS7Padding:]";
  __int16 v6 = 2082;
  __int16 v7 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUCryptor.m";
  __int16 v8 = 1024;
  int v9 = 67;
  __int16 v10 = 1024;
  int v11 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d CCCryptorCreate() failed: %d", (uint8_t *)v3, 0x28u);
}

void sub_100168820()
{
  sub_10000AC1C();
  uint64_t v3 = "-[SFUCryptor initWithKey:operation:iv:ivLength:usePKCS7Padding:]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUCryptor.m";
  __int16 v6 = 1024;
  int v7 = 63;
  __int16 v8 = v0;
  int v9 = "iv";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, 0x2Cu);
}

void sub_1001688D0()
{
  sub_10000AC1C();
  __int16 v4 = "-[SFUCryptor initWithKey:operation:iv:ivLength:usePKCS7Padding:]";
  sub_10000AC30();
  int v5 = 62;
  __int16 v6 = 2048;
  uint64_t v7 = v0;
  __int16 v8 = v1;
  int v9 = 16;
  _os_log_error_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Incorrect iv length (%lu, should be %d)", v3, 0x32u);
}

void sub_100168980()
{
  sub_10000AC1C();
  uint64_t v3 = "-[SFUCryptor initWithKey:operation:iv:ivLength:usePKCS7Padding:]";
  __int16 v4 = v0;
  int v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUCryptor.m";
  __int16 v6 = 1024;
  int v7 = 48;
  __int16 v8 = v0;
  int v9 = "key";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, 0x2Cu);
}

void sub_100168A30()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d overflow in cryptDataFromBuffer:length:toStream:finished:crc32:error:", v2, v3, v4, v5, v6);
}

void sub_100168AB8()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d overflow in cryptDataFromBuffer:length:toStream:finished:crc32:error:", v2, v3, v4, v5, v6);
}

void sub_100168B40()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Decryption to stream not supported", v2, v3, v4, v5, v6);
}

void sub_100168BC8()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Encryption from stream not supported", v2, v3, v4, v5, v6);
}

void sub_100168C50()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d overflow in readToBuffer:", v2, v3, v4, v5, v6);
}

void sub_100168CD8()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d overflow in readToBuffer:", v2, v3, v4, v5, v6);
}

void sub_100168D60()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Not implemented.", v2, v3, v4, v5, v6);
}

void sub_100168DE8()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Using a closed stream", v2, v3, v4, v5, v6);
}

void sub_100168E70()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Using a closed stream", v2, v3, v4, v5, v6);
}

void sub_100168EF8()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Using a closed stream", v2, v3, v4, v5, v6);
}

void sub_100168F80(uint64_t a1, uint8_t *buf, os_log_t log)
{
  *(_DWORD *)buf = 138412290;
  *(void *)(buf + 4) = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to read ZIP with exception: %@", buf, 0xCu);
}

void sub_100168FC8()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Can only decompress into a directory", v2, v3, v4, v5, v6);
}

void sub_100169050()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Can't create output directory", v2, v3, v4, v5, v6);
}

void sub_1001690D8(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Invalid Zip entry extra field length", v1, 2u);
}

void sub_10016911C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d End offset is too small.", v2, v3, v4, v5, v6);
}

void sub_1001691A4(uint64_t a1, uint8_t *buf, uint64_t a3, os_log_t log)
{
  *(_DWORD *)buf = 136315394;
  *(void *)(buf + 4) = a3;
  *((_WORD *)buf + 6) = 2082;
  *(void *)(buf + 14) = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Error opening file at path %s: %{public}s", buf, 0x16u);
}

void sub_1001691FC(void *a1, int a2)
{
  id v3 = a1;
  strerror(a2);
  sub_10008F84C((void *)&_mh_execute_header, v4, v5, "Error cleaning up dispatch channel: %{public}s", v6, v7, v8, v9, 2u);
}

void sub_100169288()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Channel is closed", v2, v3, v4, v5, v6);
}

void sub_100169310()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Channel is closed", v2, v3, v4, v5, v6);
}

void sub_100169398()
{
  sub_10000AC1C();
  uint64_t v3 = "-[TSUFileIOChannel close]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUFileIOChannel.m";
  __int16 v6 = 1024;
  int v7 = 261;
  __int16 v8 = v0;
  uint64_t v9 = "_channel";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, 0x2Cu);
}

void sub_100169448()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Channel file descriptor is closed", v2, v3, v4, v5, v6);
}

void sub_1001694D0(void *a1, void *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  uint8_t v6 = [a2 domain];
  int v7 = 138544130;
  __int16 v8 = v5;
  __int16 v9 = 2114;
  __int16 v10 = v6;
  __int16 v11 = 2048;
  id v12 = [a2 code];
  __int16 v13 = 2112;
  __int16 v14 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "F_FULLFSYNC failed, errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", (uint8_t *)&v7, 0x2Au);
}

void sub_1001695C4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Channel is closed", v2, v3, v4, v5, v6);
}

void sub_10016964C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Channel is closed", v2, v3, v4, v5, v6);
}

void sub_1001696D4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Channel is closed", v2, v3, v4, v5, v6);
}

void sub_10016975C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Channel file descriptor is closed", v2, v3, v4, v5, v6);
}

void sub_1001697E4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Channel is closed", v2, v3, v4, v5, v6);
}

void sub_10016986C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Channel is closed", v2, v3, v4, v5, v6);
}

void sub_1001698F4(void *a1, const char *a2, int a3)
{
  uint64_t v5 = a1;
  uint8_t v6 = NSStringFromSelector(a2);
  v7[0] = 67110146;
  v7[1] = a3;
  __int16 v8 = 2082;
  __int16 v9 = "-[TSUSafeSaveAssistant endSaveWithSuccess:toURL:addingAttributes:error:]";
  __int16 v10 = 2082;
  __int16 v11 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUSafeSaveAssistant.m";
  __int16 v12 = 1024;
  int v13 = 57;
  __int16 v14 = 2114;
  __int16 v15 = v6;
  _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d %{public}@ should only be called once.", (uint8_t *)v7, 0x2Cu);
}

void sub_1001699E8()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Write channel semaphore should not be initialized.", v2, v3, v4, v5, v6);
}

void sub_100169A70(uint64_t a1, int a2, os_log_t log)
{
  v3[0] = 67110146;
  v3[1] = a2;
  __int16 v4 = 2082;
  uint64_t v5 = "-[TSUZipWriter beginEntryWithNameImpl:force32BitSize:lastModificationDate:size:CRC:forceCalculatingSizeAndCRCForP"
       "reservingLastModificationDate:]";
  __int16 v6 = 2082;
  int v7 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipWriter.m";
  __int16 v8 = 1024;
  int v9 = 166;
  __int16 v10 = 2112;
  uint64_t v11 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Already have an entry with name: %@", (uint8_t *)v3, 0x2Cu);
}

void sub_100169B2C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Already closed.", v2, v3, v4, v5, v6);
}

void sub_100169BB4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Already closed.", v2, v3, v4, v5, v6);
}

void sub_100169C3C()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Out-of-bounds type assignment was clamped to max", v2, v3, v4, v5, v6);
}

void sub_100169CC4()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Trying to flush while closed.", v2, v3, v4, v5, v6);
}

void sub_100169D4C(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_100169D84()
{
  sub_10000AC1C();
  uint64_t v3 = "-[TSUZipWriter writeEntryWithName:force32BitSize:lastModificationDate:size:CRC:fromReadChannel:writeHandler:]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipWriter.m";
  __int16 v6 = 1024;
  int v7 = 365;
  __int16 v8 = v0;
  int v9 = "readChannel";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, 0x2Cu);
}

void sub_100169E34()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Already closed.", v2, v3, v4, v5, v6);
}

void sub_100169EBC()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Shouldn't have closed twice.", v2, v3, v4, v5, v6);
}

void sub_100169F44()
{
  sub_10000AC1C();
  uint64_t v3 = "-[TSUZipWriter closeWithQueue:completion:]_block_invoke_4";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipWriter.m";
  __int16 v6 = 1024;
  int v7 = 492;
  __int16 v8 = v0;
  int v9 = "strongWriteChannel";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, 0x2Cu);
}

void sub_100169FF4(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_10016A02C(void *a1, void *a2)
{
  uint64_t v3 = a1;
  __int16 v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  __int16 v6 = [a2 domain];
  int v7 = 138544130;
  __int16 v8 = v5;
  __int16 v9 = 2114;
  __int16 v10 = v6;
  __int16 v11 = 2048;
  id v12 = [a2 code];
  __int16 v13 = 2112;
  __int16 v14 = a2;
  _os_log_error_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_ERROR, "Couldn't write Zip: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", (uint8_t *)&v7, 0x2Au);
}

void sub_10016A120()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Using a closed stream", v2, v3, v4, v5, v6);
}

void sub_10016A1A8()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Offset is too large.", v2, v3, v4, v5, v6);
}

void sub_10016A230()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Using a closed stream", v2, v3, v4, v5, v6);
}

void sub_10016A2B8()
{
  sub_10000AC1C();
  uint64_t v3 = "-[NSIndexSet(TSUAdditions) tsu_enumeratePowerSetIncludingEmptySet:usingBlock:]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSIndexSet_TSUAdditions.mm";
  __int16 v6 = 1024;
  int v7 = 249;
  __int16 v8 = v0;
  __int16 v9 = "block";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, 0x2Cu);
}

void sub_10016A368()
{
  sub_10000AC1C();
  uint64_t v3 = "-[NSIndexSet(TSUAdditions) tsu_enumeratePowerSetIncludingEmptySet:usingBlock:]";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSIndexSet_TSUAdditions.mm";
  __int16 v6 = 1024;
  int v7 = 245;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d too many indexes!", v2, 0x22u);
}

void sub_10016A408(int a1, NSObject *a2)
{
  v2[0] = 67110146;
  v2[1] = a1;
  __int16 v3 = 2082;
  __int16 v4 = "+[NSException(TSUAdditions) tsu_raiseWithError:]";
  __int16 v5 = 2082;
  __int16 v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSException_TSUAdditions.m";
  __int16 v7 = 1024;
  int v8 = 17;
  __int16 v9 = 2082;
  __int16 v10 = "error != nil";
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Invalid parameter not satisfying: %{public}s", (uint8_t *)v2, 0x2Cu);
}

void sub_10016A4C4(uint64_t a1, int a2, os_log_t log)
{
  v3[0] = 67110146;
  v3[1] = a2;
  __int16 v4 = 2082;
  __int16 v5 = "-[NSException(TSUAdditions) tsu_error]";
  __int16 v6 = 2082;
  __int16 v7 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSException_TSUAdditions.m";
  __int16 v8 = 1024;
  int v9 = 31;
  __int16 v10 = 2112;
  uint64_t v11 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Unexpected NSException value for TSUErrorExceptionUserInfoKey: %@", (uint8_t *)v3, 0x2Cu);
}

void sub_10016A580()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSUTemporaryDirectory path]";
  sub_10000AC30();
  int v3 = 69;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Directory has already been removed", v1, 0x22u);
}

void sub_10016A614()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSUTemporaryDirectory removeDirectory]";
  sub_10000AC30();
  int v3 = 90;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Directory has already been removed", v1, 0x22u);
}

void sub_10016A6A8(uint64_t a1, uint64_t *a2, os_log_t log)
{
  uint64_t v3 = *a2;
  int v4 = 138412546;
  uint64_t v5 = a1;
  __int16 v6 = 2112;
  uint64_t v7 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Failed to remove TSUTemporaryDirectory. Error: %@, path: %@", (uint8_t *)&v4, 0x16u);
}

void sub_10016A734()
{
  sub_10000AC1C();
  uint64_t v3 = "-[TSUTemporaryDirectory _createDirectoryWithSignature:subdirectory:error:]_block_invoke";
  __int16 v4 = v0;
  uint64_t v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUTemporaryDirectory.m";
  __int16 v6 = 1024;
  int v7 = 112;
  __int16 v8 = v0;
  int v9 = "secretSubdirectoryNameBase";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v2, 0x2Cu);
}

void sub_10016A7E4(int a1, NSObject *a2)
{
  v2[0] = 67109890;
  v2[1] = a1;
  __int16 v3 = 2082;
  __int16 v4 = "-[SFUCryptoInputStream seekToOffset:]";
  __int16 v5 = 2082;
  __int16 v6 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUCryptoInputStream.m";
  __int16 v7 = 1024;
  int v8 = 85;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d SFUCryptoInputStream cannot seek.", (uint8_t *)v2, 0x22u);
}

void sub_10016A890()
{
  sub_10000AC1C();
  uint64_t v2 = "-[NSDictionary(TSUAdditions) tsu_invertedCopy]";
  sub_10000AC30();
  int v3 = 41;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Source dictionary is not invertible.", v1, 0x22u);
}

void sub_10016A924(uint64_t a1, int a2, os_log_t log)
{
  v3[0] = 67110146;
  v3[1] = a2;
  __int16 v4 = 2082;
  __int16 v5 = "-[NSDictionary(TSUAdditions) tsu_invertedCopy]_block_invoke";
  __int16 v6 = 2082;
  __int16 v7 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSDictionaryAdditions.m";
  __int16 v8 = 1024;
  int v9 = 30;
  __int16 v10 = 2112;
  uint64_t v11 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Source is not invertible because of non-copyable object: %@", (uint8_t *)v3, 0x2Cu);
}

void sub_10016A9E0()
{
  sub_10000AC1C();
  uint64_t v2 = "-[NSDictionary(TSUAdditions) tsu_onlyKeyForObject:]";
  sub_10000AC30();
  int v3 = 129;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d tsu_onlyKeyForObject assumes that there's only one key for any object in the dictionary.", v1, 0x22u);
}

void sub_10016AA74()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSUReadChannelInputStreamAdapter readToBuffer:size:]";
  sub_10000AC30();
  int v3 = 118;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d nil read channels", v1, 0x22u);
}

void sub_10016AB08()
{
  sub_10000AC1C();
  uint64_t v2 = "-[TSUReadChannelInputStreamAdapter seekToOffset:]";
  sub_10000AC30();
  int v3 = 156;
  _os_log_error_impl((void *)&_mh_execute_header, v0, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Not a seekable stream", v1, 0x22u);
}

void sub_10016AB9C()
{
  sub_10000AC1C();
  int v3 = "+[NSPropertyListSerialization(TSUtility) tsu_processLocalizedPropertyList:]";
  __int16 v4 = v0;
  __int16 v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSPropertyListSerialization_TSUtility.m";
  __int16 v6 = 1024;
  int v7 = 47;
  __int16 v8 = 2114;
  CFStringRef v9 = @"_LOCALIZABLE_";
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Expected a dictionary as a child of %{public}@", v2, 0x2Cu);
}

void sub_10016AC50()
{
  sub_10000AC1C();
  int v3 = "+[NSPropertyListSerialization(TSUtility) tsu_localizedPropertyListWithContentsOfURL:options:error:]";
  __int16 v4 = v0;
  __int16 v5 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSPropertyListSerialization_TSUtility.m";
  __int16 v6 = 1024;
  int v7 = 65;
  _os_log_error_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Need mutable containers to process a localizable property list", v2, 0x22u);
}

void sub_10016ACF0()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d CC_SHA256 failed", v2, v3, v4, v5, v6);
}

void sub_10016AD78()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Unsupported key type", v2, v3, v4, v5, v6);
}

void sub_10016AE00()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d overflow  in sha256HashFromData", v2, v3, v4, v5, v6);
}

void sub_10016AE88(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "#Assert *** Ignored previous assertion failure ***", v1, 2u);
}

void sub_10016AECC(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "#Assert Assertion backtrace throttled", v1, 2u);
}

void sub_10016AF10(uint64_t a1, NSObject *a2)
{
  int v2 = 138543362;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "#Assert Assertion backtrace:\n%{public}@", (uint8_t *)&v2, 0xCu);
}

void sub_10016AF88()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Abstract method.", v2, v3, v4, v5, v6);
}

void sub_10016B010()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Abstract method.", v2, v3, v4, v5, v6);
}

void sub_10016B098()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d overflow in xmlDocument", v2, v3, v4, v5, v6);
}

void sub_10016B120()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Overflow in SFUXmlReaderIORead", v2, v3, v4, v5, v6);
}

void sub_10016B1A8()
{
  sub_10000AC1C();
  sub_10000AC30();
  sub_10000AC44((void *)&_mh_execute_header, v0, v1, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Need a seekable input stream for -cgDataProvider", v2, v3, v4, v5, v6);
}

void sub_10016B230(uint64_t a1, int a2, os_log_t log)
{
  v3[0] = 67110146;
  v3[1] = a2;
  __int16 v4 = 2082;
  uint64_t v5 = "-[SFUDataRepresentation readIntoData:]";
  __int16 v6 = 2082;
  int v7 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUDataRepresentation.m";
  __int16 v8 = 1024;
  int v9 = 248;
  __int16 v10 = 2112;
  uint64_t v11 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Caught exception trying to read storage into NSMutableData: %@", (uint8_t *)v3, 0x2Cu);
}

uint64_t sub_10016B2EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 8))();
}

void sub_10016B310(void *a1)
{
  uint64_t v1 = (void *)sub_100130F24(a1);
  if (!v2) {
    operator delete(v1);
  }
}

uint64_t sub_10016B330(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 8))();
}

CFTimeInterval CACurrentMediaTime(void)
{
  return _CACurrentMediaTime();
}

CCCryptorStatus CCCryptorCreate(CCOperation op, CCAlgorithm alg, CCOptions options, const void *key, size_t keyLength, const void *iv, CCCryptorRef *cryptorRef)
{
  return _CCCryptorCreate(op, alg, options, key, keyLength, iv, cryptorRef);
}

CCCryptorStatus CCCryptorFinal(CCCryptorRef cryptorRef, void *dataOut, size_t dataOutAvailable, size_t *dataOutMoved)
{
  return _CCCryptorFinal(cryptorRef, dataOut, dataOutAvailable, dataOutMoved);
}

size_t CCCryptorGetOutputLength(CCCryptorRef cryptorRef, size_t inputLength, BOOL final)
{
  return _CCCryptorGetOutputLength(cryptorRef, inputLength, final);
}

CCCryptorStatus CCCryptorRelease(CCCryptorRef cryptorRef)
{
  return _CCCryptorRelease(cryptorRef);
}

CCCryptorStatus CCCryptorUpdate(CCCryptorRef cryptorRef, const void *dataIn, size_t dataInLength, void *dataOut, size_t dataOutAvailable, size_t *dataOutMoved)
{
  return _CCCryptorUpdate(cryptorRef, dataIn, dataInLength, dataOut, dataOutAvailable, dataOutMoved);
}

void CCHmac(CCHmacAlgorithm algorithm, const void *key, size_t keyLength, const void *data, size_t dataLength, void *macOut)
{
}

void CCHmacFinal(CCHmacContext *ctx, void *macOut)
{
}

void CCHmacInit(CCHmacContext *ctx, CCHmacAlgorithm algorithm, const void *key, size_t keyLength)
{
}

void CCHmacUpdate(CCHmacContext *ctx, const void *data, size_t dataLength)
{
}

int CC_MD5_Final(unsigned __int8 *md, CC_MD5_CTX *c)
{
  return _CC_MD5_Final(md, c);
}

int CC_MD5_Init(CC_MD5_CTX *c)
{
  return _CC_MD5_Init(c);
}

int CC_MD5_Update(CC_MD5_CTX *c, const void *data, CC_LONG len)
{
  return _CC_MD5_Update(c, data, len);
}

int CC_SHA1_Final(unsigned __int8 *md, CC_SHA1_CTX *c)
{
  return _CC_SHA1_Final(md, c);
}

int CC_SHA1_Init(CC_SHA1_CTX *c)
{
  return _CC_SHA1_Init(c);
}

int CC_SHA1_Update(CC_SHA1_CTX *c, const void *data, CC_LONG len)
{
  return _CC_SHA1_Update(c, data, len);
}

int CC_SHA256_Final(unsigned __int8 *md, CC_SHA256_CTX *c)
{
  return _CC_SHA256_Final(md, c);
}

int CC_SHA256_Init(CC_SHA256_CTX *c)
{
  return _CC_SHA256_Init(c);
}

int CC_SHA256_Update(CC_SHA256_CTX *c, const void *data, CC_LONG len)
{
  return _CC_SHA256_Update(c, data, len);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

CFStringRef CFCopyTypeIDDescription(CFTypeID type_id)
{
  return _CFCopyTypeIDDescription(type_id);
}

Boolean CFDictionaryContainsKey(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryContainsKey(theDict, key);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreateMutable(allocator, capacity, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict)
{
  return _CFDictionaryCreateMutableCopy(allocator, capacity, theDict);
}

CFIndex CFDictionaryGetCount(CFDictionaryRef theDict)
{
  return _CFDictionaryGetCount(theDict);
}

void CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values)
{
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

void CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict)
{
}

void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key)
{
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

CFLocaleRef CFLocaleCopyCurrent(void)
{
  return _CFLocaleCopyCurrent();
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return _CFRetain(cf);
}

void CFStringAppendCharacters(CFMutableStringRef theString, const UniChar *chars, CFIndex numChars)
{
}

unint64_t CFStringConvertEncodingToNSStringEncoding(CFStringEncoding encoding)
{
  return _CFStringConvertEncodingToNSStringEncoding(encoding);
}

const char *__cdecl CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding)
{
  return _CFStringGetCStringPtr(theString, encoding);
}

void CFStringGetCharacters(CFStringRef theString, CFRange range, UniChar *buffer)
{
}

const UniChar *__cdecl CFStringGetCharactersPtr(CFStringRef theString)
{
  return _CFStringGetCharactersPtr(theString);
}

CFStringEncoding CFStringGetSystemEncoding(void)
{
  return _CFStringGetSystemEncoding();
}

CFStringTokenizerTokenType CFStringTokenizerAdvanceToNextToken(CFStringTokenizerRef tokenizer)
{
  return _CFStringTokenizerAdvanceToNextToken(tokenizer);
}

CFStringTokenizerRef CFStringTokenizerCreate(CFAllocatorRef alloc, CFStringRef string, CFRange range, CFOptionFlags options, CFLocaleRef locale)
{
  return _CFStringTokenizerCreate(alloc, string, range, options, locale);
}

CFRange CFStringTokenizerGetCurrentTokenRange(CFStringTokenizerRef tokenizer)
{
  CFRange CurrentTokenRange = _CFStringTokenizerGetCurrentTokenRange(tokenizer);
  CFIndex length = CurrentTokenRange.length;
  CFIndex location = CurrentTokenRange.location;
  result.CFIndex length = length;
  result.CFIndex location = location;
  return result;
}

CFStringTokenizerTokenType CFStringTokenizerGoToTokenAtIndex(CFStringTokenizerRef tokenizer, CFIndex index)
{
  return _CFStringTokenizerGoToTokenAtIndex(tokenizer, index);
}

CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc)
{
  return _CFUUIDCreate(alloc);
}

CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid)
{
  return _CFUUIDCreateString(alloc, uuid);
}

CFPropertyListRef CGColorSpaceCopyPropertyList(CGColorSpaceRef space)
{
  return _CGColorSpaceCopyPropertyList(space);
}

CGColorSpaceRef CGColorSpaceCreateWithPropertyList(CFPropertyListRef plist)
{
  return _CGColorSpaceCreateWithPropertyList(plist);
}

CGDataConsumerRef CGDataConsumerCreate(void *info, const CGDataConsumerCallbacks *cbks)
{
  return _CGDataConsumerCreate(info, cbks);
}

CGDataConsumerRef CGDataConsumerCreateWithURL(CFURLRef url)
{
  return _CGDataConsumerCreateWithURL(url);
}

CGDataProviderRef CGDataProviderCreateSequential(void *info, const CGDataProviderSequentialCallbacks *callbacks)
{
  return _CGDataProviderCreateSequential(info, callbacks);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithURL(url, options);
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

const char *__cdecl NSGetSizeAndAlignment(const char *typePtr, NSUInteger *sizep, NSUInteger *alignp)
{
  return _NSGetSizeAndAlignment(typePtr, sizep, alignp);
}

void NSLog(NSString *format, ...)
{
}

NSRange NSRangeFromString(NSString *aString)
{
  NSRange v3 = _NSRangeFromString(aString);
  NSUInteger length = v3.length;
  NSUInteger location = v3.location;
  result.NSUInteger length = length;
  result.NSUInteger location = location;
  return result;
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return _NSStringFromRange(range);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

NSRange NSUnionRange(NSRange range1, NSRange range2)
{
  NSRange v4 = _NSUnionRange(range1, range2);
  NSUInteger length = v4.length;
  NSUInteger location = v4.location;
  result.NSUInteger length = length;
  result.NSUInteger location = location;
  return result;
}

void NSZoneFree(NSZone *zone, void *ptr)
{
}

void *__cdecl NSZoneMalloc(NSZone *zone, NSUInteger size)
{
  return _NSZoneMalloc(zone, size);
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return _SecRandomCopyBytes(rnd, count, bytes);
}

Boolean UTTypeConformsTo(CFStringRef inUTI, CFStringRef inConformsToUTI)
{
  return _UTTypeConformsTo(inUTI, inConformsToUTI);
}

CFStringRef UTTypeCopyPreferredTagWithClass(CFStringRef inUTI, CFStringRef inTagClass)
{
  return _UTTypeCopyPreferredTagWithClass(inUTI, inTagClass);
}

CFArrayRef UTTypeCreateAllIdentifiersForTag(CFStringRef inTagClass, CFStringRef inTag, CFStringRef inConformingToUTI)
{
  return _UTTypeCreateAllIdentifiersForTag(inTagClass, inTag, inConformingToUTI);
}

CFStringRef UTTypeCreatePreferredIdentifierForTag(CFStringRef inTagClass, CFStringRef inTag, CFStringRef inConformingToUTI)
{
  return _UTTypeCreatePreferredIdentifierForTag(inTagClass, inTag, inConformingToUTI);
}

Boolean UTTypeIsDynamic(CFStringRef inUTI)
{
  return _UTTypeIsDynamic(inUTI);
}

void _Block_object_assign(void *a1, const void *a2, const int a3)
{
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

std::string::const_reference std::string::at(const std::string *this, std::string::size_type __n)
{
  return std::string::at(this, __n);
}

std::string::size_type std::string::find(const std::string *this, std::string::value_type __c, std::string::size_type __pos)
{
  return std::string::find(this, __c, __pos);
}

std::string::size_type std::string::rfind(const std::string *this, std::string::value_type __c, std::string::size_type __pos)
{
  return std::string::rfind(this, __c, __pos);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return std::logic_error::logic_error(this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return std::bad_array_new_length::bad_array_new_length(this);
}

void std::__call_once(std::once_flag::_State_type *a1, void *a2, void (__cdecl *a3)(void *))
{
}

size_t std::__next_prime(size_t __n)
{
  return std::__next_prime(__n);
}

std::string::reference std::string::at(std::string *this, std::string::size_type __n)
{
  return std::string::at(this, __n);
}

std::string *__cdecl std::string::erase(std::string *this, std::string::size_type __pos, std::string::size_type __n)
{
  return std::string::erase(this, __pos, __n);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s)
{
  return std::string::append(this, __s);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return std::string::append(this, __s, __n);
}

std::string *__cdecl std::string::append(std::string *this, const std::string *__str, std::string::size_type __pos, std::string::size_type __n)
{
  return std::string::append(this, __str, __pos, __n);
}

std::string *__cdecl std::string::append(std::string *this, std::string::size_type __n, std::string::value_type __c)
{
  return std::string::append(this, __n, __c);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s)
{
  return std::string::assign(this, __s);
}

std::string *__cdecl std::string::assign(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return std::string::assign(this, __s, __n);
}

std::string *__cdecl std::string::insert(std::string *this, std::string::size_type __pos, const std::string::value_type *__s)
{
  return std::string::insert(this, __pos, __s);
}

void std::string::resize(std::string *this, std::string::size_type __n, std::string::value_type __c)
{
}

std::string *__cdecl std::string::replace(std::string *this, std::string::size_type __pos, std::string::size_type __n1, const std::string::value_type *__s)
{
  return std::string::replace(this, __pos, __n1, __s);
}

void std::string::reserve(std::string *this, std::string::size_type __requested_capacity)
{
}

void std::string::__grow_by(std::string *this, std::string::size_type __old_cap, std::string::size_type __delta_cap, std::string::size_type __old_sz, std::string::size_type __n_copy, std::string::size_type __n_del, std::string::size_type __n_add)
{
}

void std::string::push_back(std::string *this, std::string::value_type __c)
{
}

std::string *__cdecl std::string::basic_string(std::string *this, const std::string *__str, std::string::size_type __pos, std::string::size_type __n, std::allocator<char> *__a)
{
  return std::string::basic_string(this, __str, __pos, __n, __a);
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return std::string::operator=(this, __str);
}

void std::mutex::lock(std::mutex *this)
{
}

void std::mutex::unlock(std::mutex *this)
{
}

void std::mutex::~mutex(std::mutex *this)
{
}

uint64_t std::operator+<char>()
{
  return std::operator+<char>();
}

void std::exception::~exception(std::exception *this)
{
}

void std::terminate(void)
{
}

void operator delete[]()
{
  while (1)
    ;
}

void operator delete(void *__p)
{
  while (1)
    ;
}

void operator delete()
{
  while (1)
    ;
}

void *__cdecl operator new[](size_t __sz)
{
  while (1)
    ;
}

void operator new[]()
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz)
{
  while (1)
    ;
}

void *__cdecl operator new(size_t __sz, const std::nothrow_t *a2)
{
  while (1)
    ;
}

void operator new()
{
  while (1)
    ;
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return ___cxa_allocate_exception(thrown_size);
}

int __cxa_atexit(void (*lpfunc)(void *), void *obj, void *lpdso_handle)
{
  return ___cxa_atexit(lpfunc, obj, lpdso_handle);
}

void *__cxa_begin_catch(void *a1)
{
  return ___cxa_begin_catch(a1);
}

void __cxa_end_catch(void)
{
}

void __cxa_free_exception(void *a1)
{
}

void __cxa_guard_abort(__guard *a1)
{
}

int __cxa_guard_acquire(__guard *a1)
{
  return ___cxa_guard_acquire((uint64_t *)a1);
}

void __cxa_guard_release(__guard *a1)
{
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
}

void *__dynamic_cast(const void *lpsrc, const struct __class_type_info *lpstype, const struct __class_type_info *lpdtype, ptrdiff_t s2d)
{
  return (void *)___dynamic_cast(lpsrc, lpstype, lpdtype, s2d);
}

int *__error(void)
{
  return ___error();
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return ___maskrune(a1, a2);
}

uint64_t __memcpy_chk()
{
  return ___memcpy_chk();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void abort(void)
{
}

int asprintf(char **a1, const char *a2, ...)
{
  return _asprintf(a1, a2);
}

int backtrace(void **a1, int a2)
{
  return _backtrace(a1, a2);
}

char **__cdecl backtrace_symbols(void *const *a1, int a2)
{
  return _backtrace_symbols(a1, a2);
}

void bzero(void *a1, size_t a2)
{
}

Method class_getClassMethod(Class cls, SEL name)
{
  return _class_getClassMethod(cls, name);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return _class_getInstanceMethod(cls, name);
}

const char *__cdecl class_getName(Class cls)
{
  return _class_getName(cls);
}

Class class_getSuperclass(Class cls)
{
  return _class_getSuperclass(cls);
}

int close(int a1)
{
  return _close(a1);
}

compression_status compression_stream_destroy(compression_stream *stream)
{
  return _compression_stream_destroy(stream);
}

compression_status compression_stream_init(compression_stream *stream, compression_stream_operation operation, compression_algorithm algorithm)
{
  return _compression_stream_init(stream, operation, algorithm);
}

compression_status compression_stream_process(compression_stream *stream, int flags)
{
  return _compression_stream_process(stream, flags);
}

uLong crc32(uLong crc, const Bytef *buf, uInt len)
{
  return _crc32(crc, buf, len);
}

void dispatch_apply(size_t iterations, dispatch_queue_t queue, void *block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

BOOL dispatch_data_apply(dispatch_data_t data, dispatch_data_applier_t applier)
{
  return _dispatch_data_apply(data, applier);
}

dispatch_data_t dispatch_data_copy_region(dispatch_data_t data, size_t location, size_t *offset_ptr)
{
  return _dispatch_data_copy_region(data, location, offset_ptr);
}

dispatch_data_t dispatch_data_create(const void *buffer, size_t size, dispatch_queue_t queue, dispatch_block_t destructor)
{
  return _dispatch_data_create(buffer, size, queue, destructor);
}

dispatch_data_t dispatch_data_create_concat(dispatch_data_t data1, dispatch_data_t data2)
{
  return _dispatch_data_create_concat(data1, data2);
}

dispatch_data_t dispatch_data_create_map(dispatch_data_t data, const void **buffer_ptr, size_t *size_ptr)
{
  return _dispatch_data_create_map(data, buffer_ptr, size_ptr);
}

dispatch_data_t dispatch_data_create_subrange(dispatch_data_t data, size_t offset, size_t length)
{
  return _dispatch_data_create_subrange(data, offset, length);
}

size_t dispatch_data_get_size(dispatch_data_t data)
{
  return _dispatch_data_get_size(data);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void *__cdecl dispatch_get_specific(const void *key)
{
  return _dispatch_get_specific(key);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return _dispatch_group_wait(group, timeout);
}

void dispatch_io_barrier(dispatch_io_t channel, dispatch_block_t barrier)
{
}

void dispatch_io_close(dispatch_io_t channel, dispatch_io_close_flags_t flags)
{
}

dispatch_io_t dispatch_io_create(dispatch_io_type_t type, dispatch_fd_t fd, dispatch_queue_t queue, void *cleanup_handler)
{
  return _dispatch_io_create(type, fd, queue, cleanup_handler);
}

dispatch_fd_t dispatch_io_get_descriptor(dispatch_io_t channel)
{
  return _dispatch_io_get_descriptor(channel);
}

void dispatch_io_read(dispatch_io_t channel, off_t offset, size_t length, dispatch_queue_t queue, dispatch_io_handler_t io_handler)
{
}

void dispatch_io_set_low_water(dispatch_io_t channel, size_t low_water)
{
}

void dispatch_io_write(dispatch_io_t channel, off_t offset, dispatch_data_t data, dispatch_queue_t queue, dispatch_io_handler_t io_handler)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

const char *__cdecl dispatch_queue_get_label(dispatch_queue_t queue)
{
  return _dispatch_queue_get_label(queue);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

int dladdr(const void *a1, Dl_info *a2)
{
  return _dladdr(a1, a2);
}

int dup(int a1)
{
  return _dup(a1);
}

char *__cdecl ether_ntoa(const ether_addr *a1)
{
  return _ether_ntoa(a1);
}

int fchflags(int a1, __uint32_t a2)
{
  return _fchflags(a1, a2);
}

int fclose(FILE *a1)
{
  return _fclose(a1);
}

int fcntl(int a1, int a2, ...)
{
  return _fcntl(a1, a2);
}

int fflush(FILE *a1)
{
  return _fflush(a1);
}

FILE *__cdecl fopen(const char *__filename, const char *__mode)
{
  return _fopen(__filename, __mode);
}

int fprintf(FILE *a1, const char *a2, ...)
{
  return _fprintf(a1, a2);
}

void free(void *a1)
{
}

int fseeko(FILE *__stream, off_t a2, int __whence)
{
  return _fseeko(__stream, a2, __whence);
}

int fstat(int a1, stat *a2)
{
  return _fstat(a1, a2);
}

int fsync(int a1)
{
  return _fsync(a1);
}

off_t ftello(FILE *__stream)
{
  return _ftello(__stream);
}

int ftruncate(int a1, off_t a2)
{
  return _ftruncate(a1, a2);
}

size_t fwrite(const void *__ptr, size_t __size, size_t __nitems, FILE *__stream)
{
  return _fwrite(__ptr, __size, __nitems, __stream);
}

int getattrlist(const char *a1, void *a2, void *a3, size_t a4, unsigned int a5)
{
  return _getattrlist(a1, a2, a3, a4, a5);
}

char *__cdecl getenv(const char *a1)
{
  return _getenv(a1);
}

pid_t getpid(void)
{
  return _getpid();
}

uint8_t *__cdecl getsegmentdata(const mach_header_64 *mhp, const char *segname, unint64_t *size)
{
  return _getsegmentdata(mhp, segname, size);
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return _getxattr(path, name, value, size, position, options);
}

int inflate(z_streamp strm, int flush)
{
  return _inflate(strm, flush);
}

int inflateEnd(z_streamp strm)
{
  return _inflateEnd(strm);
}

int inflateInit2_(z_streamp strm, int windowBits, const char *version, int stream_size)
{
  return _inflateInit2_(strm, windowBits, version, stream_size);
}

int ioctl(int a1, unint64_t a2, ...)
{
  return _ioctl(a1, a2);
}

int link(const char *a1, const char *a2)
{
  return _link(a1, a2);
}

ssize_t listxattr(const char *path, char *namebuff, size_t size, int options)
{
  return _listxattr(path, namebuff, size, options);
}

tm *__cdecl localtime(const time_t *a1)
{
  return _localtime(a1);
}

off_t lseek(int a1, off_t a2, int a3)
{
  return _lseek(a1, a2, a3);
}

int lstat(const char *a1, stat *a2)
{
  return _lstat(a1, a2);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

void *__cdecl memchr(void *__s, int __c, size_t __n)
{
  return _memchr(__s, __c, __n);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return _memset(__b, __c, __len);
}

time_t mktime(tm *a1)
{
  return _mktime(a1);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper(a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return _objc_msgSendSuper2(a1, a2);
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

Class object_getClass(id a1)
{
  return _object_getClass(a1);
}

const char *__cdecl object_getClassName(id a1)
{
  return _object_getClassName(a1);
}

int open(const char *a1, int a2, ...)
{
  return _open(a1, a2);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

ssize_t pread(int __fd, void *__buf, size_t __nbyte, off_t a4)
{
  return _pread(__fd, __buf, __nbyte, a4);
}

int pthread_getname_np(pthread_t a1, char *a2, size_t a3)
{
  return _pthread_getname_np(a1, a2, a3);
}

void *__cdecl pthread_getspecific(pthread_key_t a1)
{
  return _pthread_getspecific(a1);
}

int pthread_key_create(pthread_key_t *a1, void (__cdecl *a2)(void *))
{
  return _pthread_key_create(a1, a2);
}

pthread_t pthread_self(void)
{
  return _pthread_self();
}

int pthread_setspecific(pthread_key_t a1, const void *a2)
{
  return _pthread_setspecific(a1, a2);
}

ssize_t read(int a1, void *a2, size_t a3)
{
  return _read(a1, a2, a3);
}

char *__cdecl realpath_DARWIN_EXTSN(const char *a1, char *a2)
{
  return _realpath_DARWIN_EXTSN(a1, a2);
}

int removexattr(const char *path, const char *name, int options)
{
  return _removexattr(path, name, options);
}

uint64_t sandbox_extension_consume()
{
  return _sandbox_extension_consume();
}

uint64_t sandbox_extension_release()
{
  return _sandbox_extension_release();
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return _setxattr(path, name, value, size, position, options);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return _snprintf(__str, __size, __format);
}

int socket(int a1, int a2, int a3)
{
  return _socket(a1, a2, a3);
}

int sprintf(char *a1, const char *a2, ...)
{
  return _sprintf(a1, a2);
}

int sqlite3_bind_int(sqlite3_stmt *a1, int a2, int a3)
{
  return _sqlite3_bind_int(a1, a2, a3);
}

int sqlite3_bind_int64(sqlite3_stmt *a1, int a2, sqlite3_int64 a3)
{
  return _sqlite3_bind_int64(a1, a2, a3);
}

int sqlite3_bind_text(sqlite3_stmt *a1, int a2, const char *a3, int a4, void (__cdecl *a5)(void *))
{
  return _sqlite3_bind_text(a1, a2, a3, a4, a5);
}

int sqlite3_bind_zeroblob(sqlite3_stmt *a1, int a2, int n)
{
  return _sqlite3_bind_zeroblob(a1, a2, n);
}

int sqlite3_blob_open(sqlite3 *a1, const char *zDb, const char *zTable, const char *zColumn, sqlite3_int64 iRow, int flags, sqlite3_blob **ppBlob)
{
  return _sqlite3_blob_open(a1, zDb, zTable, zColumn, iRow, flags, ppBlob);
}

int sqlite3_changes(sqlite3 *a1)
{
  return _sqlite3_changes(a1);
}

int sqlite3_close(sqlite3 *a1)
{
  return _sqlite3_close(a1);
}

int sqlite3_column_int(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_int(a1, iCol);
}

sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_int64(a1, iCol);
}

const unsigned __int8 *__cdecl sqlite3_column_text(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_text(a1, iCol);
}

int sqlite3_column_type(sqlite3_stmt *a1, int iCol)
{
  return _sqlite3_column_type(a1, iCol);
}

const char *__cdecl sqlite3_errmsg(sqlite3 *a1)
{
  return _sqlite3_errmsg(a1);
}

int sqlite3_extended_result_codes(sqlite3 *a1, int onoff)
{
  return _sqlite3_extended_result_codes(a1, onoff);
}

int sqlite3_finalize(sqlite3_stmt *pStmt)
{
  return _sqlite3_finalize(pStmt);
}

sqlite3_int64 sqlite3_last_insert_rowid(sqlite3 *a1)
{
  return _sqlite3_last_insert_rowid(a1);
}

sqlite3_stmt *__cdecl sqlite3_next_stmt(sqlite3 *pDb, sqlite3_stmt *pStmt)
{
  return _sqlite3_next_stmt(pDb, pStmt);
}

int sqlite3_open_v2(const char *filename, sqlite3 **ppDb, int flags, const char *zVfs)
{
  return _sqlite3_open_v2(filename, ppDb, flags, zVfs);
}

int sqlite3_prepare_v2(sqlite3 *db, const char *zSql, int nByte, sqlite3_stmt **ppStmt, const char **pzTail)
{
  return _sqlite3_prepare_v2(db, zSql, nByte, ppStmt, pzTail);
}

int sqlite3_reset(sqlite3_stmt *pStmt)
{
  return _sqlite3_reset(pStmt);
}

const char *__cdecl sqlite3_sql(sqlite3_stmt *pStmt)
{
  return _sqlite3_sql(pStmt);
}

int sqlite3_step(sqlite3_stmt *a1)
{
  return _sqlite3_step(a1);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return _sscanf(a1, a2);
}

int statfs(const char *a1, statfs *a2)
{
  return _statfs(a1, a2);
}

char *__cdecl strchr(char *__s, int __c)
{
  return _strchr(__s, __c);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

double strtod(const char *a1, char **a2)
{
  return _strtod(a1, a2);
}

float strtof(const char *a1, char **a2)
{
  return _strtof(a1, a2);
}

uint64_t strtol(const char *__str, char **__endptr, int __base)
{
  return _strtol(__str, __endptr, __base);
}

uint64_t strtoll(const char *__str, char **__endptr, int __base)
{
  return _strtoll(__str, __endptr, __base);
}

unint64_t strtoul(const char *__str, char **__endptr, int __base)
{
  return _strtoul(__str, __endptr, __base);
}

unint64_t strtoull(const char *__str, char **__endptr, int __base)
{
  return _strtoull(__str, __endptr, __base);
}

int sysctl(int *a1, u_int a2, void *a3, size_t *a4, void *a5, size_t a6)
{
  return _sysctl(a1, a2, a3, a4, a5, a6);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return _sysctlbyname(a1, a2, a3, a4, a5);
}

int unlink(const char *a1)
{
  return _unlink(a1);
}

int vsnprintf(char *__str, size_t __size, const char *__format, va_list a4)
{
  return _vsnprintf(__str, __size, __format, a4);
}

char *__cdecl xattr_name_without_flags(const char *a1)
{
  return _xattr_name_without_flags(a1);
}

int xattr_preserve_for_intent(const char *a1, xattr_operation_intent_t a2)
{
  return _xattr_preserve_for_intent(a1, a2);
}

xmlParserCtxtPtr xmlCreatePushParserCtxt(xmlSAXHandlerPtr sax, void *user_data, const char *chunk, int size, const char *filename)
{
  return _xmlCreatePushParserCtxt(sax, user_data, chunk, size, filename);
}

void xmlFreeDoc(xmlDocPtr cur)
{
}

void xmlFreeParserCtxt(xmlParserCtxtPtr ctxt)
{
}

int xmlParseChunk(xmlParserCtxtPtr ctxt, const char *chunk, int size, int terminate)
{
  return _xmlParseChunk(ctxt, chunk, size, terminate);
}

xmlTextReaderPtr xmlReaderForIO(xmlInputReadCallback ioread, xmlInputCloseCallback ioclose, void *ioctx, const char *URL, const char *encoding, int options)
{
  return _xmlReaderForIO(ioread, ioclose, ioctx, URL, encoding, options);
}

id objc_msgSend_CRC(void *a1, const char *a2, ...)
{
  return _[a1 CRC];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:");
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLByAppendingPathComponent:isDirectory:");
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_URLByStandardizingPath(void *a1, const char *a2, ...)
{
  return _[a1 URLByStandardizingPath];
}

id objc_msgSend_URLForDirectory_inDomain_appropriateForURL_create_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForDirectory:inDomain:appropriateForURL:create:error:");
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLForResource:withExtension:");
}

id objc_msgSend_URLFragmentAllowedCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 URLFragmentAllowedCharacterSet];
}

id objc_msgSend_URLInternal(void *a1, const char *a2, ...)
{
  return _[a1 URLInternal];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "URLWithString:");
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDFromDocumentProperties_key_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "UUIDFromDocumentProperties:key:");
}

id objc_msgSend_UUIDPathString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDPathString];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__atomicIncrementAssertCount(void *a1, const char *a2, ...)
{
  return _[a1 _atomicIncrementAssertCount];
}

id objc_msgSend__close(void *a1, const char *a2, ...)
{
  return _[a1 _close];
}

id objc_msgSend__closeStreamReadChannel(void *a1, const char *a2, ...)
{
  return _[a1 _closeStreamReadChannel];
}

id objc_msgSend__createDirectoryWithSignature_subdirectory_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_createDirectoryWithSignature:subdirectory:error:");
}

id objc_msgSend__currentDataIntersectionWithOffset_length_isReadDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_currentDataIntersectionWithOffset:length:isReadDone:");
}

id objc_msgSend__finalizeBlockForClosing_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_finalizeBlockForClosing:");
}

id objc_msgSend__initializeBlock(void *a1, const char *a2, ...)
{
  return _[a1 _initializeBlock];
}

id objc_msgSend__logBacktraceWithCallStackSymbols_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_logBacktraceWithCallStackSymbols:");
}

id objc_msgSend__provideContentInformationToLoadingRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_provideContentInformationToLoadingRequest:");
}

id objc_msgSend__provideDataToLoadingRequest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_provideDataToLoadingRequest:");
}

id objc_msgSend__provideNextDataBlockToLoadingRequest_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_provideNextDataBlockToLoadingRequest:completion:");
}

id objc_msgSend__readBlocksWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readBlocksWithHandler:");
}

id objc_msgSend__readFromOffset_length_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_readFromOffset:length:handler:");
}

id objc_msgSend__resetBuffer(void *a1, const char *a2, ...)
{
  return _[a1 _resetBuffer];
}

id objc_msgSend__resetCryptor(void *a1, const char *a2, ...)
{
  return _[a1 _resetCryptor];
}

id objc_msgSend__resetStreamReadChannelIfNeededForOffset_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_resetStreamReadChannelIfNeededForOffset:length:");
}

id objc_msgSend__sqliteDatabase(void *a1, const char *a2, ...)
{
  return _[a1 _sqliteDatabase];
}

id objc_msgSend__upgradeSchemaWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_upgradeSchemaWithError:");
}

id objc_msgSend__writeData_isDecryptedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_writeData:isDecryptedData:");
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_addBarrier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBarrier:");
}

id objc_msgSend_addBlockInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addBlockInfo:");
}

id objc_msgSend_addCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addCharactersInString:");
}

id objc_msgSend_addChild_withPendingUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addChild:withPendingUnitCount:");
}

id objc_msgSend_addData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addData:");
}

id objc_msgSend_addData_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addData:queue:completion:");
}

id objc_msgSend_addDataImpl_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addDataImpl:queue:completion:");
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntriesFromDictionary:");
}

id objc_msgSend_addEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addEntry:");
}

id objc_msgSend_addField_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addField:format:");
}

id objc_msgSend_addField_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addField:value:");
}

id objc_msgSend_addFieldValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFieldValue:");
}

id objc_msgSend_addFieldWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addFieldWithFormat:");
}

id objc_msgSend_addIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addIndex:");
}

id objc_msgSend_addIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addIndexes:");
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObject:");
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObjectsFromArray:");
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addObserver:forKeyPath:options:context:");
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addOperationWithBlock:");
}

id objc_msgSend_addProgressObserverWithValueInterval_queue_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "addProgressObserverWithValueInterval:queue:handler:");
}

id objc_msgSend_affectedObjects(void *a1, const char *a2, ...)
{
  return _[a1 affectedObjects];
}

id objc_msgSend_allAttributes(void *a1, const char *a2, ...)
{
  return _[a1 allAttributes];
}

id objc_msgSend_allEntryNames(void *a1, const char *a2, ...)
{
  return _[a1 allEntryNames];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allKeysForObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allKeysForObject:");
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "allocWithZone:");
}

id objc_msgSend_alphanumericCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 alphanumericCharacterSet];
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appendBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendBytes:length:");
}

id objc_msgSend_appendData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendData:");
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendFormat:");
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "appendString:");
}

id objc_msgSend_archiveLength(void *a1, const char *a2, ...)
{
  return _[a1 archiveLength];
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:");
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayByAddingObject:");
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithArray:");
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithCapacity:");
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "arrayWithObjects:count:");
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "attributesOfItemAtPath:error:");
}

id objc_msgSend_autoupdatingCurrentLocale(void *a1, const char *a2, ...)
{
  return _[a1 autoupdatingCurrentLocale];
}

id objc_msgSend_backtrace(void *a1, const char *a2, ...)
{
  return _[a1 backtrace];
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "base64EncodedStringWithOptions:");
}

id objc_msgSend_becomeCurrentWithPendingUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "becomeCurrentWithPendingUnitCount:");
}

id objc_msgSend_beginAccess(void *a1, const char *a2, ...)
{
  return _[a1 beginAccess];
}

id objc_msgSend_beginEntryWithName_force32BitSize_lastModificationDate_size_CRC_forceCalculatingSizeAndCRCForPreservingLastModificationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginEntryWithName:force32BitSize:lastModificationDate:size:CRC:forceCalculatingSizeAndCRCForPreservingLastModificationDate:");
}

id objc_msgSend_beginEntryWithNameImpl_force32BitSize_lastModificationDate_size_CRC_forceCalculatingSizeAndCRCForPreservingLastModificationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginEntryWithNameImpl:force32BitSize:lastModificationDate:size:CRC:forceCalculatingSizeAndCRCForPreservingLastModificationDate:");
}

id objc_msgSend_beginTransactionWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "beginTransactionWithError:");
}

id objc_msgSend_blockInfos(void *a1, const char *a2, ...)
{
  return _[a1 blockInfos];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "BOOLForKey:");
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_bufferedInputStream(void *a1, const char *a2, ...)
{
  return _[a1 bufferedInputStream];
}

id objc_msgSend_bufferedInputStreamWithOffset_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bufferedInputStreamWithOffset:length:");
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleForClass:");
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundlePath(void *a1, const char *a2, ...)
{
  return _[a1 bundlePath];
}

id objc_msgSend_bundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "bundleWithIdentifier:");
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_cStringUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cStringUsingEncoding:");
}

id objc_msgSend_callStackReturnAddresses(void *a1, const char *a2, ...)
{
  return _[a1 callStackReturnAddresses];
}

id objc_msgSend_callStackSymbols(void *a1, const char *a2, ...)
{
  return _[a1 callStackSymbols];
}

id objc_msgSend_canLinkData(void *a1, const char *a2, ...)
{
  return _[a1 canLinkData];
}

id objc_msgSend_canSeek(void *a1, const char *a2, ...)
{
  return _[a1 canSeek];
}

id objc_msgSend_charValue(void *a1, const char *a2, ...)
{
  return _[a1 charValue];
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterAtIndex:");
}

id objc_msgSend_characterIsMember_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterIsMember:");
}

id objc_msgSend_characterSetWithCharactersInString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterSetWithCharactersInString:");
}

id objc_msgSend_characterSetWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "characterSetWithRange:");
}

id objc_msgSend_checkKey_againstPassphraseVerifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkKey:againstPassphraseVerifier:");
}

id objc_msgSend_checkResourceIsReachableAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "checkResourceIsReachableAndReturnError:");
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return _[a1 close];
}

id objc_msgSend_closeAndReturnError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeAndReturnError:");
}

id objc_msgSend_closeCurrentChannel(void *a1, const char *a2, ...)
{
  return _[a1 closeCurrentChannel];
}

id objc_msgSend_closeLocalStream(void *a1, const char *a2, ...)
{
  return _[a1 closeLocalStream];
}

id objc_msgSend_closeWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeWithError:");
}

id objc_msgSend_closeWithQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "closeWithQueue:completion:");
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_collapseCommonRootDirectory(void *a1, const char *a2, ...)
{
  return _[a1 collapseCommonRootDirectory];
}

id objc_msgSend_collapseCommonRootDirectoryIgnoreCase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "collapseCommonRootDirectoryIgnoreCase:");
}

id objc_msgSend_collapsedName(void *a1, const char *a2, ...)
{
  return _[a1 collapsedName];
}

id objc_msgSend_commitTransactionWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commitTransactionWithError:");
}

id objc_msgSend_commonRootDirectoryIgnoringCase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "commonRootDirectoryIgnoringCase:");
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:");
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "compare:options:");
}

id objc_msgSend_completedUnitCount(void *a1, const char *a2, ...)
{
  return _[a1 completedUnitCount];
}

id objc_msgSend_componentFileURLForPackageURL_packageLocator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentFileURLForPackageURL:packageLocator:");
}

id objc_msgSend_componentZipArchive(void *a1, const char *a2, ...)
{
  return _[a1 componentZipArchive];
}

id objc_msgSend_componentZipArchiveWriter(void *a1, const char *a2, ...)
{
  return _[a1 componentZipArchiveWriter];
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:");
}

id objc_msgSend_components_fromDate_toDate_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "components:fromDate:toDate:options:");
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsJoinedByString:");
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_compressedSize(void *a1, const char *a2, ...)
{
  return _[a1 compressedSize];
}

id objc_msgSend_conformsToProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "conformsToProtocol:");
}

id objc_msgSend_consumeSandboxInputURLExtension_outputURLExtension_inputSandBoxToken_outputSandBoxToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "consumeSandboxInputURLExtension:outputURLExtension:inputSandBoxToken:outputSandBoxToken:");
}

id objc_msgSend_containedZipArchiveForEntry_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containedZipArchiveForEntry:options:error:");
}

id objc_msgSend_containsIndexesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsIndexesInRange:");
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsObject:");
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "containsString:");
}

id objc_msgSend_contentInformationRequest(void *a1, const char *a2, ...)
{
  return _[a1 contentInformationRequest];
}

id objc_msgSend_contentsOfDirectoryAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtPath:error:");
}

id objc_msgSend_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:");
}

id objc_msgSend_context(void *a1, const char *a2, ...)
{
  return _[a1 context];
}

id objc_msgSend_convertWithConverter_toSFFAtURL_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "convertWithConverter:toSFFAtURL:queue:completion:");
}

id objc_msgSend_coordinateReadingItemAtURL_options_error_byAccessor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "coordinateReadingItemAtURL:options:error:byAccessor:");
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyData_withReadChannel_decryptionInfo_size_calculateCRC_preferredFilename_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyData:withReadChannel:decryptionInfo:size:calculateCRC:preferredFilename:error:");
}

id objc_msgSend_copyDataFromReadChannel_decryptionInfo_size_toWriteChannel_encryptionInfo_encodedLength_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyDataFromReadChannel:decryptionInfo:size:toWriteChannel:encryptionInfo:encodedLength:error:");
}

id objc_msgSend_copyDataFromReadChannel_decryptionInfo_size_toWriteChannel_encryptionInfo_synchronous_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyDataFromReadChannel:decryptionInfo:size:toWriteChannel:encryptionInfo:synchronous:completion:");
}

id objc_msgSend_copyDataFromReadChannel_size_toWriteChannel_synchronous_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyDataFromReadChannel:size:toWriteChannel:synchronous:completion:");
}

id objc_msgSend_copyEntriesFromZipFileWriter_readingFromURL_options_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyEntriesFromZipFileWriter:readingFromURL:options:completionHandler:");
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyItemAtURL:toURL:error:");
}

id objc_msgSend_copyRemainingEntries_fromArchive_progress_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyRemainingEntries:fromArchive:progress:completionHandler:");
}

id objc_msgSend_copyToFile_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyToFile:");
}

id objc_msgSend_copyToTemporaryLocationRelativeToURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyToTemporaryLocationRelativeToURL:error:");
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "copyWithZone:");
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "countByEnumeratingWithState:objects:count:");
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createDirectoryAtURL:withIntermediateDirectories:attributes:error:");
}

id objc_msgSend_createTemporaryDirectoryRelativeToURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "createTemporaryDirectoryRelativeToURL:");
}

id objc_msgSend_cryptDataFromBuffer_length_toStream_finished_crc32_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cryptDataFromBuffer:length:toStream:finished:crc32:error:");
}

id objc_msgSend_cryptDataFromBuffer_length_toStream_finished_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cryptDataFromBuffer:length:toStream:finished:error:");
}

id objc_msgSend_cryptDataFromStream_toBuffer_length_bytesRead_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "cryptDataFromStream:toBuffer:length:bytesRead:error:");
}

id objc_msgSend_cryptoKey(void *a1, const char *a2, ...)
{
  return _[a1 cryptoKey];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentOffset(void *a1, const char *a2, ...)
{
  return _[a1 currentOffset];
}

id objc_msgSend_currentProgress(void *a1, const char *a2, ...)
{
  return _[a1 currentProgress];
}

id objc_msgSend_currentQueue(void *a1, const char *a2, ...)
{
  return _[a1 currentQueue];
}

id objc_msgSend_currentThread(void *a1, const char *a2, ...)
{
  return _[a1 currentThread];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataAtOffset_size_end_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataAtOffset:size:end:");
}

id objc_msgSend_dataAtRelativePath_allowDecryption_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataAtRelativePath:allowDecryption:error:");
}

id objc_msgSend_dataForZipEntry_inDataToWrite_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataForZipEntry:inDataToWrite:");
}

id objc_msgSend_dataFromReadChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataFromReadChannel:");
}

id objc_msgSend_dataLength(void *a1, const char *a2, ...)
{
  return _[a1 dataLength];
}

id objc_msgSend_dataOffset(void *a1, const char *a2, ...)
{
  return _[a1 dataOffset];
}

id objc_msgSend_dataRequest(void *a1, const char *a2, ...)
{
  return _[a1 dataRequest];
}

id objc_msgSend_dataState(void *a1, const char *a2, ...)
{
  return _[a1 dataState];
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataUsingEncoding:");
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithBytes:length:");
}

id objc_msgSend_dataWithContentsOfFile_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfFile:options:error:");
}

id objc_msgSend_dataWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithContentsOfURL:options:error:");
}

id objc_msgSend_dataWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithData:");
}

id objc_msgSend_dataWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithLength:");
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dataWithPropertyList:format:options:error:");
}

id objc_msgSend_databaseObjectWithIdentifier_classType_dataState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseObjectWithIdentifier:classType:dataState:");
}

id objc_msgSend_databaseObjectWithIdentifier_classType_fileState_packageURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "databaseObjectWithIdentifier:classType:fileState:packageURL:");
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateFormatFromTemplate_options_locale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFormatFromTemplate:options:locale:");
}

id objc_msgSend_dateFormatterFromTemplate12Hour_template24Hour_withDateFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dateFormatterFromTemplate12Hour:template24Hour:withDateFormatter:");
}

id objc_msgSend_day(void *a1, const char *a2, ...)
{
  return _[a1 day];
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodeObjectOfClass:forKey:");
}

id objc_msgSend_decodePassphraseHint_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "decodePassphraseHint:");
}

id objc_msgSend_decodedLength(void *a1, const char *a2, ...)
{
  return _[a1 decodedLength];
}

id objc_msgSend_decryptionInfo(void *a1, const char *a2, ...)
{
  return _[a1 decryptionInfo];
}

id objc_msgSend_decryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 decryptionKey];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_deleteCharactersInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "deleteCharactersInRange:");
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_descriptionString(void *a1, const char *a2, ...)
{
  return _[a1 descriptionString];
}

id objc_msgSend_descriptionWithObject_class_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionWithObject:class:");
}

id objc_msgSend_descriptionWithObject_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "descriptionWithObject:format:");
}

id objc_msgSend_detailMessage(void *a1, const char *a2, ...)
{
  return _[a1 detailMessage];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithContentsOfURL:");
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObject:forKey:");
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithObjects:forKeys:count:");
}

id objc_msgSend_dictionaryWithSharedKeySet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "dictionaryWithSharedKeySet:");
}

id objc_msgSend_didFinishProcessing(void *a1, const char *a2, ...)
{
  return _[a1 didFinishProcessing];
}

id objc_msgSend_didReloadZipArchive_packageURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "didReloadZipArchive:packageURL:error:");
}

id objc_msgSend_digest(void *a1, const char *a2, ...)
{
  return _[a1 digest];
}

id objc_msgSend_digestData(void *a1, const char *a2, ...)
{
  return _[a1 digestData];
}

id objc_msgSend_digestString(void *a1, const char *a2, ...)
{
  return _[a1 digestString];
}

id objc_msgSend_directory(void *a1, const char *a2, ...)
{
  return _[a1 directory];
}

id objc_msgSend_disableSystemCaching(void *a1, const char *a2, ...)
{
  return _[a1 disableSystemCaching];
}

id objc_msgSend_discreteProgressWithTotalUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "discreteProgressWithTotalUnitCount:");
}

id objc_msgSend_documentProperties(void *a1, const char *a2, ...)
{
  return _[a1 documentProperties];
}

id objc_msgSend_documentPropertiesRelativePath(void *a1, const char *a2, ...)
{
  return _[a1 documentPropertiesRelativePath];
}

id objc_msgSend_documentRevisionAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "documentRevisionAtURL:");
}

id objc_msgSend_documentSaveValidationPolicy(void *a1, const char *a2, ...)
{
  return _[a1 documentSaveValidationPolicy];
}

id objc_msgSend_documentUUID(void *a1, const char *a2, ...)
{
  return _[a1 documentUUID];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodeObject:forKey:");
}

id objc_msgSend_encodedLength(void *a1, const char *a2, ...)
{
  return _[a1 encodedLength];
}

id objc_msgSend_encodedLengthForDataLength_key_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodedLengthForDataLength:key:");
}

id objc_msgSend_encodedPropertyListWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "encodedPropertyListWithError:");
}

id objc_msgSend_encryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 encryptionKey];
}

id objc_msgSend_endOfLastEntry(void *a1, const char *a2, ...)
{
  return _[a1 endOfLastEntry];
}

id objc_msgSend_endSaveWithSuccess_addingAttributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSaveWithSuccess:addingAttributes:error:");
}

id objc_msgSend_endSaveWithSuccess_toURL_addingAttributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSaveWithSuccess:toURL:addingAttributes:error:");
}

id objc_msgSend_endSingleResultQuery_shouldFinalize_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "endSingleResultQuery:shouldFinalize:error:");
}

id objc_msgSend_entriesCount(void *a1, const char *a2, ...)
{
  return _[a1 entriesCount];
}

id objc_msgSend_entriesCountImpl(void *a1, const char *a2, ...)
{
  return _[a1 entriesCountImpl];
}

id objc_msgSend_entriesToRemove(void *a1, const char *a2, ...)
{
  return _[a1 entriesToRemove];
}

id objc_msgSend_entryForName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entryForName:");
}

id objc_msgSend_entryWithName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "entryWithName:");
}

id objc_msgSend_enumerateByteRangesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateByteRangesUsingBlock:");
}

id objc_msgSend_enumerateEntriesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateEntriesUsingBlock:");
}

id objc_msgSend_enumerateIndexesInRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateIndexesInRange:options:usingBlock:");
}

id objc_msgSend_enumerateIndexesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateIndexesUsingBlock:");
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateKeysAndObjectsUsingBlock:");
}

id objc_msgSend_enumerateMatchesInString_options_range_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateMatchesInString:options:range:usingBlock:");
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumeratePackageEntriesWithZipArchive_needsReadChannel_accessor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratePackageEntriesWithZipArchive:needsReadChannel:accessor:");
}

id objc_msgSend_enumerateRangesInRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateRangesInRange:options:usingBlock:");
}

id objc_msgSend_enumerateRangesUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateRangesUsingBlock:");
}

id objc_msgSend_enumerateRangesWithOptions_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateRangesWithOptions:usingBlock:");
}

id objc_msgSend_enumerateSubstringsInRange_options_usingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumerateSubstringsInRange:options:usingBlock:");
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
}

id objc_msgSend_errorWithDomain_code_sourcePath_targetPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:sourcePath:targetPath:");
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "errorWithDomain:code:userInfo:");
}

id objc_msgSend_escapedPatternForString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "escapedPatternForString:");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "exceptionWithName:reason:userInfo:");
}

id objc_msgSend_executeUpdate_shouldFinalize_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeUpdate:shouldFinalize:error:");
}

id objc_msgSend_executeUpdateWithSql_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "executeUpdateWithSql:error:");
}

id objc_msgSend_extraFieldsLength(void *a1, const char *a2, ...)
{
  return _[a1 extraFieldsLength];
}

id objc_msgSend_failToSaveIfUpdateDataModificationDateFails(void *a1, const char *a2, ...)
{
  return _[a1 failToSaveIfUpdateDataModificationDateFails];
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _[a1 familyName];
}

id objc_msgSend_fileCoordinatorDelegate(void *a1, const char *a2, ...)
{
  return _[a1 fileCoordinatorDelegate];
}

id objc_msgSend_fileDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 fileDescriptor];
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:");
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_fileFormatVersion(void *a1, const char *a2, ...)
{
  return _[a1 fileFormatVersion];
}

id objc_msgSend_fileHeaderLength(void *a1, const char *a2, ...)
{
  return _[a1 fileHeaderLength];
}

id objc_msgSend_fileIsImmutable(void *a1, const char *a2, ...)
{
  return _[a1 fileIsImmutable];
}

id objc_msgSend_filePosixPermissions(void *a1, const char *a2, ...)
{
  return _[a1 filePosixPermissions];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 fileSystemRepresentation];
}

id objc_msgSend_fileType(void *a1, const char *a2, ...)
{
  return _[a1 fileType];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:");
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "fileURLWithPath:isDirectory:");
}

id objc_msgSend_filename(void *a1, const char *a2, ...)
{
  return _[a1 filename];
}

id objc_msgSend_filenameForData_preferredFilename_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "filenameForData:preferredFilename:");
}

id objc_msgSend_finishEntry(void *a1, const char *a2, ...)
{
  return _[a1 finishEntry];
}

id objc_msgSend_finishLoading(void *a1, const char *a2, ...)
{
  return _[a1 finishLoading];
}

id objc_msgSend_finishLoadingWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishLoadingWithError:");
}

id objc_msgSend_finishWritingToURL_byMovingOrCopyingItemAtURL_addingAttributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "finishWritingToURL:byMovingOrCopyingItemAtURL:addingAttributes:error:");
}

id objc_msgSend_firstIndex(void *a1, const char *a2, ...)
{
  return _[a1 firstIndex];
}

id objc_msgSend_firstMatchInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "firstMatchInString:options:range:");
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_flushCurrentEntryWithQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flushCurrentEntryWithQueue:completion:");
}

id objc_msgSend_flushEntryData(void *a1, const char *a2, ...)
{
  return _[a1 flushEntryData];
}

id objc_msgSend_flushWithCompletion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "flushWithCompletion:");
}

id objc_msgSend_formIntersectionWithCharacterSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "formIntersectionWithCharacterSet:");
}

id objc_msgSend_generateRandomSaltWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "generateRandomSaltWithLength:");
}

id objc_msgSend_getArgumentTypeAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getArgumentTypeAtIndex:");
}

id objc_msgSend_getBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getBytes:length:");
}

id objc_msgSend_getCString_maxLength_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCString:maxLength:encoding:");
}

id objc_msgSend_getCharacters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCharacters:");
}

id objc_msgSend_getCharacters_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getCharacters:range:");
}

id objc_msgSend_getPromisedItemResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getPromisedItemResourceValue:forKey:error:");
}

id objc_msgSend_getRelationship_ofDirectory_inDomain_toItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRelationship:ofDirectory:inDomain:toItemAtURL:error:");
}

id objc_msgSend_getRelationship_ofDirectoryAtURL_toItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getRelationship:ofDirectoryAtURL:toItemAtURL:error:");
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_getUUIDBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getUUIDBytes:");
}

id objc_msgSend_getValue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "getValue:");
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _[a1 givenName];
}

id objc_msgSend_handleData_isDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleData:isDone:");
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_isFatal_description_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:isFatal:description:");
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_isFatal_format_args_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:isFatal:format:args:");
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_isFatal_format_message_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:isFatal:format:message:");
}

id objc_msgSend_handleFailureWithHandler_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleFailureWithHandler:error:");
}

id objc_msgSend_handleWriteError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "handleWriteError:");
}

id objc_msgSend_hasDataState(void *a1, const char *a2, ...)
{
  return _[a1 hasDataState];
}

id objc_msgSend_hasEntriesMatchingFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasEntriesMatchingFilter:");
}

id objc_msgSend_hasNonEmptyEntries(void *a1, const char *a2, ...)
{
  return _[a1 hasNonEmptyEntries];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasPrefix:");
}

id objc_msgSend_hasSameLocationAs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSameLocationAs:");
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "hasSuffix:");
}

id objc_msgSend_hasZipArchive(void *a1, const char *a2, ...)
{
  return _[a1 hasZipArchive];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hour(void *a1, const char *a2, ...)
{
  return _[a1 hour];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_incrementDecodedLengthBy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "incrementDecodedLengthBy:");
}

id objc_msgSend_indexGreaterThanIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexGreaterThanIndex:");
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:");
}

id objc_msgSend_indexOfObject_inSortedRange_options_usingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObject:inSortedRange:options:usingComparator:");
}

id objc_msgSend_indexOfObjectIdenticalTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexOfObjectIdenticalTo:");
}

id objc_msgSend_indexSet(void *a1, const char *a2, ...)
{
  return _[a1 indexSet];
}

id objc_msgSend_indexSetWithIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexSetWithIndex:");
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initAes128KeyFromPassphrase_iterationCount_saltData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initAes128KeyFromPassphrase:iterationCount:saltData:");
}

id objc_msgSend_initFileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFileURLWithPath:");
}

id objc_msgSend_initForDecryptionWithInputStream_key_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForDecryptionWithInputStream:key:");
}

id objc_msgSend_initForEncryptionWithOutputStream_key_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForEncryptionWithOutputStream:key:");
}

id objc_msgSend_initForRandomReadingWritingURL_error_cleanupHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForRandomReadingWritingURL:error:cleanupHandler:");
}

id objc_msgSend_initForRandomWritingURL_error_cleanupHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForRandomWritingURL:error:cleanupHandler:");
}

id objc_msgSend_initForReadingDescriptor_cleanupHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingDescriptor:cleanupHandler:");
}

id objc_msgSend_initForReadingFromURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingFromURL:options:error:");
}

id objc_msgSend_initForReadingURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForReadingURL:error:");
}

id objc_msgSend_initForSavingToURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForSavingToURL:error:");
}

id objc_msgSend_initForStreamWritingURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForStreamWritingURL:error:");
}

id objc_msgSend_initForWritingToURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initForWritingToURL:error:");
}

id objc_msgSend_initFromCentralFileHeader_dataRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFromCentralFileHeader:dataRepresentation:");
}

id objc_msgSend_initFromPath_name_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFromPath:name:options:error:");
}

id objc_msgSend_initFromPathFileSystemRepresentation_name_forRemoval_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initFromPathFileSystemRepresentation:name:forRemoval:options:error:");
}

id objc_msgSend_initWithAdjustment_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAdjustment:");
}

id objc_msgSend_initWithAlgorithm_operation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAlgorithm:operation:");
}

id objc_msgSend_initWithArchiveWriter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArchiveWriter:");
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithArray:");
}

id objc_msgSend_initWithAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithAttributes:");
}

id objc_msgSend_initWithBufferedReadChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBufferedReadChannel:");
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:");
}

id objc_msgSend_initWithBytes_length_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytes:length:encoding:");
}

id objc_msgSend_initWithBytesNoCopy_length_encoding_freeWhenDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytesNoCopy:length:encoding:freeWhenDone:");
}

id objc_msgSend_initWithBytesNoCopy_length_freeWhenDone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithBytesNoCopy:length:freeWhenDone:");
}

id objc_msgSend_initWithCFType_header_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCFType:header:");
}

id objc_msgSend_initWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCString:encoding:");
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCapacity:");
}

id objc_msgSend_initWithChannel_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithChannel:handler:");
}

id objc_msgSend_initWithCharacters_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCharacters:length:");
}

id objc_msgSend_initWithCryptoKey_preferredBlockSize_blockInfos_decodedLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithCryptoKey:preferredBlockSize:blockInfos:decodedLength:");
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:");
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:encoding:");
}

id objc_msgSend_initWithData_offset_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithData:offset:length:");
}

id objc_msgSend_initWithDataRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDataRepresentation:");
}

id objc_msgSend_initWithDispatchData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDispatchData:");
}

id objc_msgSend_initWithDocumentBundleURL_allowMissingPropertyList_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDocumentBundleURL:allowMissingPropertyList:error:");
}

id objc_msgSend_initWithDocumentFileURL_allowMissingPropertyList_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDocumentFileURL:allowMissingPropertyList:error:");
}

id objc_msgSend_initWithDocumentURL_allowMissingPropertyList_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDocumentURL:allowMissingPropertyList:error:");
}

id objc_msgSend_initWithDocumentURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDocumentURL:error:");
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithDomain:code:userInfo:");
}

id objc_msgSend_initWithEncodedLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEncodedLength:");
}

id objc_msgSend_initWithEncodedLength_decodedLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEncodedLength:decodedLength:");
}

id objc_msgSend_initWithEncodedLength_lastModificationDate_CRC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEncodedLength:lastModificationDate:CRC:");
}

id objc_msgSend_initWithEntry_archive_validateCRC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntry:archive:validateCRC:");
}

id objc_msgSend_initWithEntry_zipArchive_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithEntry:zipArchive:options:");
}

id objc_msgSend_initWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithError:");
}

id objc_msgSend_initWithFileDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileDescriptor:");
}

id objc_msgSend_initWithFileDescriptor_offset_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFileDescriptor:offset:length:");
}

id objc_msgSend_initWithFilePackageURL_zipArchive_allowMissingPropertyList_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFilePackageURL:zipArchive:allowMissingPropertyList:error:");
}

id objc_msgSend_initWithFilename_encryptionInfo_encodedLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFilename:encryptionInfo:encodedLength:");
}

id objc_msgSend_initWithFirstEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFirstEntry:");
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:");
}

id objc_msgSend_initWithFormat_arguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithFormat:arguments:");
}

id objc_msgSend_initWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithHandler:");
}

id objc_msgSend_initWithIdentifier_classType_dataState_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:classType:dataState:");
}

id objc_msgSend_initWithIdentifier_classType_fileState_packageURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIdentifier:classType:fileState:packageURL:");
}

id objc_msgSend_initWithIndexSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIndexSet:");
}

id objc_msgSend_initWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithIndexesInRange:");
}

id objc_msgSend_initWithInput_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInput:");
}

id objc_msgSend_initWithInputStream_initialOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithInputStream:initialOffset:");
}

id objc_msgSend_initWithKey_operation_iv_ivLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:operation:iv:ivLength:");
}

id objc_msgSend_initWithKey_operation_iv_ivLength_usePKCS7Padding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKey:operation:iv:ivLength:usePKCS7Padding:");
}

id objc_msgSend_initWithKind_message_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKind:message:");
}

id objc_msgSend_initWithKind_message_isFromUploader_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithKind:message:isFromUploader:");
}

id objc_msgSend_initWithLastEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLastEntry:");
}

id objc_msgSend_initWithLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithLength:");
}

id objc_msgSend_initWithNSData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithNSData:");
}

id objc_msgSend_initWithName_value_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithName:value:");
}

id objc_msgSend_initWithObject_class_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObject:class:format:");
}

id objc_msgSend_initWithObject_class_format_arguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObject:class:format:arguments:");
}

id objc_msgSend_initWithObject_class_header_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObject:class:header:");
}

id objc_msgSend_initWithObject_previousEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObject:previousEntry:");
}

id objc_msgSend_initWithObjects_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjects:count:");
}

id objc_msgSend_initWithObjectsAndKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObjectsAndKeys:");
}

id objc_msgSend_initWithObserver_target_keyPath_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithObserver:target:keyPath:context:");
}

id objc_msgSend_initWithOffset_end_uncompressedSize_crc_dataRepresentation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOffset:end:uncompressedSize:crc:dataRepresentation:");
}

id objc_msgSend_initWithOptions_capacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithOptions:capacity:");
}

id objc_msgSend_initWithPackageDataForWrite_additionalDocumentPropertiesForWrite_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPackageDataForWrite:additionalDocumentPropertiesForWrite:");
}

id objc_msgSend_initWithPackageIdentifier_documentProperties_fileFormatVersion_decryptionKey_fileCoordinatorDelegate_isLazyLoading_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPackageIdentifier:documentProperties:fileFormatVersion:decryptionKey:fileCoordinatorDelegate:isLazyLoading:");
}

id objc_msgSend_initWithParent_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithParent:userInfo:");
}

id objc_msgSend_initWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:");
}

id objc_msgSend_initWithPath_collapseCommonRootDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:collapseCommonRootDirectory:");
}

id objc_msgSend_initWithPath_cryptoKey_dataLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:cryptoKey:dataLength:");
}

id objc_msgSend_initWithPath_forRemoval_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:forRemoval:options:error:");
}

id objc_msgSend_initWithPath_offset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:offset:");
}

id objc_msgSend_initWithPath_offset_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:offset:length:");
}

id objc_msgSend_initWithPath_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:options:error:");
}

id objc_msgSend_initWithPath_sharedFileDescriptor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPath:sharedFileDescriptor:");
}

id objc_msgSend_initWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithPattern:options:error:");
}

id objc_msgSend_initWithReadChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReadChannel:");
}

id objc_msgSend_initWithReadChannel_blockInfos_streamReadChannelBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReadChannel:blockInfos:streamReadChannelBlock:");
}

id objc_msgSend_initWithReadChannel_compressionAlgorithm_operation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReadChannel:compressionAlgorithm:operation:");
}

id objc_msgSend_initWithReadChannel_decryptionInfo_encryptionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReadChannel:decryptionInfo:encryptionInfo:");
}

id objc_msgSend_initWithReadChannel_decryptionKey_blockInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReadChannel:decryptionKey:blockInfos:");
}

id objc_msgSend_initWithReadChannel_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReadChannel:length:");
}

id objc_msgSend_initWithReadChannel_length_closeChannelOnClose_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReadChannel:length:closeChannelOnClose:");
}

id objc_msgSend_initWithReadChannel_uncompressedSize_CRC_validateCRC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithReadChannel:uncompressedSize:CRC:validateCRC:");
}

id objc_msgSend_initWithRevisionString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithRevisionString:");
}

id objc_msgSend_initWithSFUInputStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSFUInputStream:");
}

id objc_msgSend_initWithSequence_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSequence:identifier:");
}

id objc_msgSend_initWithSignature_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithSignature:error:");
}

id objc_msgSend_initWithStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStream:");
}

id objc_msgSend_initWithStream_bufferSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStream:bufferSize:");
}

id objc_msgSend_initWithStream_dataLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithStream:dataLength:");
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithString:");
}

id objc_msgSend_initWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithTimeIntervalSince1970:");
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:");
}

id objc_msgSend_initWithURL_documentTargetURL_relativeURLForExternalData_packageIdentifier_documentProperties_documentMetadata_fileFormatVersion_updateType_cloneMode_documentSaveValidationPolicy_encryptionKey_originalDocumentPackage_originalSupportPackage_fileCoordinatorDelegate_progress_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:documentTargetURL:relativeURLForExternalData:packageIdentifier:documentProperties:documentMetadata:fileFormatVersion:updateType:cloneMode:documentSaveValidationPolicy:encryptionKey:originalDocumentPackage:originalSupportPackage:fileCoordinatorDelegate:progress:error:");
}

id objc_msgSend_initWithURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:error:");
}

id objc_msgSend_initWithURL_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:handler:");
}

id objc_msgSend_initWithURL_package_fileCoordinatorDelegate_preserveExtendedAttributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:package:fileCoordinatorDelegate:preserveExtendedAttributes:error:");
}

id objc_msgSend_initWithURL_zipArchiveOrNil_zipArchiveOptions_packageIdentifier_documentProperties_decryptionKey_fileCoordinatorDelegate_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithURL:zipArchiveOrNil:zipArchiveOptions:packageIdentifier:documentProperties:decryptionKey:fileCoordinatorDelegate:error:");
}

id objc_msgSend_initWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUTF8String:");
}

id objc_msgSend_initWithUUIDBytes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDBytes:");
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUUIDString:");
}

id objc_msgSend_initWithUnsignedLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithUnsignedLong:");
}

id objc_msgSend_initWithWriteChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWriteChannel:");
}

id objc_msgSend_initWithWriteChannel_compressionAlgorithm_operation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWriteChannel:compressionAlgorithm:operation:");
}

id objc_msgSend_initWithWriteChannel_encryptionInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWriteChannel:encryptionInfo:");
}

id objc_msgSend_initWithWriter_forReadingFromURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithWriter:forReadingFromURL:options:error:");
}

id objc_msgSend_initWithZipFileArchive_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "initWithZipFileArchive:error:");
}

id objc_msgSend_inputStream(void *a1, const char *a2, ...)
{
  return _[a1 inputStream];
}

id objc_msgSend_inputStreamInternal(void *a1, const char *a2, ...)
{
  return _[a1 inputStreamInternal];
}

id objc_msgSend_inputStreamWithOffset_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inputStreamWithOffset:length:");
}

id objc_msgSend_inputStreamWithURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "inputStreamWithURL:");
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertObject:atIndex:");
}

id objc_msgSend_insertString_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "insertString:atIndex:");
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_intersectSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectSet:");
}

id objc_msgSend_intersectsIndexesInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "intersectsIndexesInRange:");
}

id objc_msgSend_invertedSet(void *a1, const char *a2, ...)
{
  return _[a1 invertedSet];
}

id objc_msgSend_invocationWithMethodSignature_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "invocationWithMethodSignature:");
}

id objc_msgSend_invoke(void *a1, const char *a2, ...)
{
  return _[a1 invoke];
}

id objc_msgSend_ioCompletionQueue(void *a1, const char *a2, ...)
{
  return _[a1 ioCompletionQueue];
}

id objc_msgSend_isAbsolutePath(void *a1, const char *a2, ...)
{
  return _[a1 isAbsolutePath];
}

id objc_msgSend_isAtEnd(void *a1, const char *a2, ...)
{
  return _[a1 isAtEnd];
}

id objc_msgSend_isBackedByFile(void *a1, const char *a2, ...)
{
  return _[a1 isBackedByFile];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isClosed(void *a1, const char *a2, ...)
{
  return _[a1 isClosed];
}

id objc_msgSend_isCompressed(void *a1, const char *a2, ...)
{
  return _[a1 isCompressed];
}

id objc_msgSend_isCryptoKeyIdenticalToKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isCryptoKeyIdenticalToKey:");
}

id objc_msgSend_isDataPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDataPath:");
}

id objc_msgSend_isDocumentPropertiesPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isDocumentPropertiesPath:");
}

id objc_msgSend_isEncrypted(void *a1, const char *a2, ...)
{
  return _[a1 isEncrypted];
}

id objc_msgSend_isEncryptionVersionAndFormatSupportedInPassphraseVerifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEncryptionVersionAndFormatSupportedInPassphraseVerifier:");
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqual:");
}

id objc_msgSend_isEqualToArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToArray:");
}

id objc_msgSend_isEqualToDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToDictionary:");
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToSet:");
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isEqualToString:");
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _[a1 isFileURL];
}

id objc_msgSend_isFromUploader(void *a1, const char *a2, ...)
{
  return _[a1 isFromUploader];
}

id objc_msgSend_isIndeterminate(void *a1, const char *a2, ...)
{
  return _[a1 isIndeterminate];
}

id objc_msgSend_isMainThread(void *a1, const char *a2, ...)
{
  return _[a1 isMainThread];
}

id objc_msgSend_isObjectArchivePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isObjectArchivePath:");
}

id objc_msgSend_isQAFatalAssertionsEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isQAFatalAssertionsEnabled];
}

id objc_msgSend_isReadable(void *a1, const char *a2, ...)
{
  return _[a1 isReadable];
}

id objc_msgSend_isReadableFileAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isReadableFileAtPath:");
}

id objc_msgSend_isStoredOutsideObjectArchive(void *a1, const char *a2, ...)
{
  return _[a1 isStoredOutsideObjectArchive];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _[a1 isValid];
}

id objc_msgSend_isValidPackageAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidPackageAtURL:");
}

id objc_msgSend_isValidPackageAtZipArchive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidPackageAtZipArchive:");
}

id objc_msgSend_isValidTangierEditingFormatAtZipArchive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isValidTangierEditingFormatAtZipArchive:");
}

id objc_msgSend_isZeroLengthFileOrEmptyDirectory_isDirectory_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isZeroLengthFileOrEmptyDirectory:isDirectory:");
}

id objc_msgSend_isZipArchiveAtFD_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isZipArchiveAtFD:");
}

id objc_msgSend_isZipArchiveAtPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isZipArchiveAtPath:");
}

id objc_msgSend_isZipArchiveAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isZipArchiveAtURL:error:");
}

id objc_msgSend_isZipSignatureAllZerosAtURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "isZipSignatureAllZerosAtURL:");
}

id objc_msgSend_iterationCount(void *a1, const char *a2, ...)
{
  return _[a1 iterationCount];
}

id objc_msgSend_iterationCountFromPassphraseVerifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "iterationCountFromPassphraseVerifier:");
}

id objc_msgSend_ivLengthForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "ivLengthForKey:");
}

id objc_msgSend_keyData(void *a1, const char *a2, ...)
{
  return _[a1 keyData];
}

id objc_msgSend_keyEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 keyEnumerator];
}

id objc_msgSend_keyFromPassword_passwordVerifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "keyFromPassword:passwordVerifier:");
}

id objc_msgSend_keyLength(void *a1, const char *a2, ...)
{
  return _[a1 keyLength];
}

id objc_msgSend_keyPath(void *a1, const char *a2, ...)
{
  return _[a1 keyPath];
}

id objc_msgSend_keyType(void *a1, const char *a2, ...)
{
  return _[a1 keyType];
}

id objc_msgSend_kind(void *a1, const char *a2, ...)
{
  return _[a1 kind];
}

id objc_msgSend_lastIndex(void *a1, const char *a2, ...)
{
  return _[a1 lastIndex];
}

id objc_msgSend_lastModificationDate(void *a1, const char *a2, ...)
{
  return _[a1 lastModificationDate];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastReloadError(void *a1, const char *a2, ...)
{
  return _[a1 lastReloadError];
}

id objc_msgSend_lastThrottleCheck(void *a1, const char *a2, ...)
{
  return _[a1 lastThrottleCheck];
}

id objc_msgSend_leakTemporaryDirectory(void *a1, const char *a2, ...)
{
  return _[a1 leakTemporaryDirectory];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_lengthIfLocal(void *a1, const char *a2, ...)
{
  return _[a1 lengthIfLocal];
}

id objc_msgSend_lengthOfBytesUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lengthOfBytesUsingEncoding:");
}

id objc_msgSend_linkItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkItemAtURL:toURL:error:");
}

id objc_msgSend_linkOrCloneItemAtURL_toURL_canLink_canClone_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkOrCloneItemAtURL:toURL:canLink:canClone:error:");
}

id objc_msgSend_linkOrCopyItemAtURL_decryptionInfo_toURL_encryptionInfo_canLink_encodedLength_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "linkOrCopyItemAtURL:decryptionInfo:toURL:encryptionInfo:canLink:encodedLength:error:");
}

id objc_msgSend_listSeparator(void *a1, const char *a2, ...)
{
  return _[a1 listSeparator];
}

id objc_msgSend_localFileHeaderDataForEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localFileHeaderDataForEntry:");
}

id objc_msgSend_locale(void *a1, const char *a2, ...)
{
  return _[a1 locale];
}

id objc_msgSend_localeSpecificStorageForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localeSpecificStorageForKey:");
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedFailureReason(void *a1, const char *a2, ...)
{
  return _[a1 localizedFailureReason];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringForKey:value:table:");
}

id objc_msgSend_localizedStringFromPersonNameComponents_style_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringFromPersonNameComponents:style:options:");
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "localizedStringWithFormat:");
}

id objc_msgSend_locator(void *a1, const char *a2, ...)
{
  return _[a1 locator];
}

id objc_msgSend_logBacktraceThrottled(void *a1, const char *a2, ...)
{
  return _[a1 logBacktraceThrottled];
}

id objc_msgSend_logFullBacktrace(void *a1, const char *a2, ...)
{
  return _[a1 logFullBacktrace];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _[a1 longLongValue];
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _[a1 longValue];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_lowercaseStringWithLocale_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "lowercaseStringWithLocale:");
}

id objc_msgSend_maxValue(void *a1, const char *a2, ...)
{
  return _[a1 maxValue];
}

id objc_msgSend_maximumLengthOfBytesUsingEncoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "maximumLengthOfBytesUsingEncoding:");
}

id objc_msgSend_message(void *a1, const char *a2, ...)
{
  return _[a1 message];
}

id objc_msgSend_methodSignatureForSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "methodSignatureForSelector:");
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "minusSet:");
}

id objc_msgSend_minute(void *a1, const char *a2, ...)
{
  return _[a1 minute];
}

id objc_msgSend_moveItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "moveItemAtURL:toURL:error:");
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return _[a1 mutableBytes];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_mutableCopyWithZone_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "mutableCopyWithZone:");
}

id objc_msgSend_mutableCryptoInfoCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCryptoInfoCopy];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameLength(void *a1, const char *a2, ...)
{
  return _[a1 nameLength];
}

id objc_msgSend_needsUpgradeFromSchemaVersion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "needsUpgradeFromSchemaVersion:");
}

id objc_msgSend_newArchiveReadChannel(void *a1, const char *a2, ...)
{
  return _[a1 newArchiveReadChannel];
}

id objc_msgSend_newCGDataConsumerForWriteChannel_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newCGDataConsumerForWriteChannel:");
}

id objc_msgSend_newCGDataProviderForInputStream_outInfo_outCallbacks_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newCGDataProviderForInputStream:outInfo:outCallbacks:");
}

id objc_msgSend_newCompressionComponentWriteChannelWithComponentWriteChannel_compressionAlgorithm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newCompressionComponentWriteChannelWithComponentWriteChannel:compressionAlgorithm:");
}

id objc_msgSend_newCompressionReadChannelWithReadChannel_compressionAlgorithm_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newCompressionReadChannelWithReadChannel:compressionAlgorithm:");
}

id objc_msgSend_newDocumentPropertiesWithURL_zipProvider_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newDocumentPropertiesWithURL:zipProvider:error:");
}

id objc_msgSend_newLazyPackageWithURL_packageIdentifier_decryptionKey_fileCoordinatorDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newLazyPackageWithURL:packageIdentifier:decryptionKey:fileCoordinatorDelegate:");
}

id objc_msgSend_newPackageConverterWithURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newPackageConverterWithURL:error:");
}

id objc_msgSend_newPackageConverterWithURL_preserveExtendedAttributes_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newPackageConverterWithURL:preserveExtendedAttributes:error:");
}

id objc_msgSend_newPackageWithPackageIdentifier_documentProperties_fileFormatVersion_decryptionKey_fileCoordinatorDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newPackageWithPackageIdentifier:documentProperties:fileFormatVersion:decryptionKey:fileCoordinatorDelegate:");
}

id objc_msgSend_newPackageWriterWithPackageType_URL_documentTargetURL_relativeURLForExternalData_packageIdentifier_documentProperties_documentMetadata_fileFormatVersion_updateType_cloneMode_documentSaveValidationPolicy_encryptionKey_originalDocumentPackage_originalSupportPackage_fileCoordinatorDelegate_progress_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newPackageWriterWithPackageType:URL:documentTargetURL:relativeURLForExternalData:packageIdentifier:documentProperties:documentMetadata:fileFormatVersion:updateType:cloneMode:documentSaveValidationPolicy:encryptionKey:originalDocumentPackage:originalSupportPackage:fileCoordinatorDelegate:progress:error:");
}

id objc_msgSend_newRawComponentWriteChannelWithPackageLocator_storeOutsideObjectArchive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newRawComponentWriteChannelWithPackageLocator:storeOutsideObjectArchive:");
}

id objc_msgSend_newRawDataReadChannelAtRelativePath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newRawDataReadChannelAtRelativePath:");
}

id objc_msgSend_newRawDataWriteChannelForRelativePath_originalLastModificationDate_originalSize_originalCRC_forceCalculatingSizeAndCRCForPreservingLastModificationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newRawDataWriteChannelForRelativePath:originalLastModificationDate:originalSize:originalCRC:forceCalculatingSizeAndCRCForPreservingLastModificationDate:");
}

id objc_msgSend_newRawReadChannelForComponentLocator_isStoredOutsideObjectArchive_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newRawReadChannelForComponentLocator:isStoredOutsideObjectArchive:error:");
}

id objc_msgSend_newWriteChannelAtPath_lastModificationDate_size_CRC_packageWriter_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newWriteChannelAtPath:lastModificationDate:size:CRC:packageWriter:error:");
}

id objc_msgSend_newZipArchiveFromPackageURL_isLazyLoading_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "newZipArchiveFromPackageURL:isLazyLoading:error:");
}

id objc_msgSend_normalizeEntryName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "normalizeEntryName:");
}

id objc_msgSend_numberOfArguments(void *a1, const char *a2, ...)
{
  return _[a1 numberOfArguments];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithBool:");
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithDouble:");
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInt:");
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithInteger:");
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithLongLong:");
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedInteger:");
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "numberWithUnsignedLongLong:");
}

id objc_msgSend_objCType(void *a1, const char *a2, ...)
{
  return _[a1 objCType];
}

id objc_msgSend_objectArchiveEntryPathForPackageLocator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectArchiveEntryPathForPackageLocator:");
}

id objc_msgSend_objectArchiveURLForPackageURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectArchiveURLForPackageURL:");
}

id objc_msgSend_objectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndex:");
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectAtIndexedSubscript:");
}

id objc_msgSend_objectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 objectEnumerator];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKey:");
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectForKeyedSubscript:");
}

id objc_msgSend_objectFromStatement_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectFromStatement:");
}

id objc_msgSend_objectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "objectsAtIndexes:");
}

id objc_msgSend_observer(void *a1, const char *a2, ...)
{
  return _[a1 observer];
}

id objc_msgSend_offset(void *a1, const char *a2, ...)
{
  return _[a1 offset];
}

id objc_msgSend_open(void *a1, const char *a2, ...)
{
  return _[a1 open];
}

id objc_msgSend_openDataStateBlobWithIdentifier_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openDataStateBlobWithIdentifier:error:");
}

id objc_msgSend_openWithURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "openWithURL:error:");
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_originalPackage(void *a1, const char *a2, ...)
{
  return _[a1 originalPackage];
}

id objc_msgSend_outputData(void *a1, const char *a2, ...)
{
  return _[a1 outputData];
}

id objc_msgSend_p_configureWithFileDescriptor_offset_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_configureWithFileDescriptor:offset:length:");
}

id objc_msgSend_p_configureWithPath_offset_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_configureWithPath:offset:length:");
}

id objc_msgSend_p_header(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_header");
}

id objc_msgSend_p_init(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_init");
}

id objc_msgSend_p_localeUses24HourTimeCycle(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_localeUses24HourTimeCycle");
}

id objc_msgSend_p_performBlockIgnoringAssertions_onlyFatal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_performBlockIgnoringAssertions:onlyFatal:");
}

id objc_msgSend_p_rule1To23HoursAgo_withDateFormatter_lowercase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_rule1To23HoursAgo:withDateFormatter:lowercase:");
}

id objc_msgSend_p_rule1To59MinutesAgo_withDateFormatter_lowercase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_rule1To59MinutesAgo:withDateFormatter:lowercase:");
}

id objc_msgSend_p_ruleForOverAWeekAgoForDate_withDateFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_ruleForOverAWeekAgoForDate:withDateFormatter:");
}

id objc_msgSend_p_ruleForOverAYearAgoForDate_withDateFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_ruleForOverAYearAgoForDate:withDateFormatter:");
}

id objc_msgSend_p_ruleForUpToSevenDaysAgoAndNotYesterdayForDate_withDateFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_ruleForUpToSevenDaysAgoAndNotYesterdayForDate:withDateFormatter:");
}

id objc_msgSend_p_ruleForYesterday_withDateFormatter_lowercase_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_ruleForYesterday:withDateFormatter:lowercase:");
}

id objc_msgSend_p_stringWithString_lowercase_dateFormatter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_stringWithString:lowercase:dateFormatter:");
}

id objc_msgSend_p_writeChannel(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_writeChannel");
}

id objc_msgSend_p_writeData_offset_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "p_writeData:offset:completion:");
}

id objc_msgSend_package(void *a1, const char *a2, ...)
{
  return _[a1 package];
}

id objc_msgSend_packageEntryInfoAtRelativePath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "packageEntryInfoAtRelativePath:error:");
}

id objc_msgSend_packageEntryInfoForComponentLocator_isStoredOutsideObjectArchive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "packageEntryInfoForComponentLocator:isStoredOutsideObjectArchive:");
}

id objc_msgSend_packageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 packageIdentifier];
}

id objc_msgSend_packageLocator(void *a1, const char *a2, ...)
{
  return _[a1 packageLocator];
}

id objc_msgSend_packageType(void *a1, const char *a2, ...)
{
  return _[a1 packageType];
}

id objc_msgSend_passphrase(void *a1, const char *a2, ...)
{
  return _[a1 passphrase];
}

id objc_msgSend_passwordVerifier(void *a1, const char *a2, ...)
{
  return _[a1 passwordVerifier];
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_path_matchesFilter_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "path:matchesFilter:");
}

id objc_msgSend_pathComponents(void *a1, const char *a2, ...)
{
  return _[a1 pathComponents];
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_pathWithComponents_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pathWithComponents:");
}

id objc_msgSend_peekDescriptionDepth(void *a1, const char *a2, ...)
{
  return _[a1 peekDescriptionDepth];
}

id objc_msgSend_peformSynchronousAccessToZipArchive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "peformSynchronousAccessToZipArchive:");
}

id objc_msgSend_performAccessor_filePathCharacterIndex_fileURL_needsReadChannel_zipArchive_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performAccessor:filePathCharacterIndex:fileURL:needsReadChannel:zipArchive:error:");
}

id objc_msgSend_performIOChannelReadWithAccessor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performIOChannelReadWithAccessor:");
}

id objc_msgSend_performReadUsingAccessor_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "performReadUsingAccessor:");
}

id objc_msgSend_phoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 phoneNumber];
}

id objc_msgSend_physicalMemory(void *a1, const char *a2, ...)
{
  return _[a1 physicalMemory];
}

id objc_msgSend_platformString(void *a1, const char *a2, ...)
{
  return _[a1 platformString];
}

id objc_msgSend_pointerAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "pointerAtIndex:");
}

id objc_msgSend_pointerValue(void *a1, const char *a2, ...)
{
  return _[a1 pointerValue];
}

id objc_msgSend_popDescriptionDepth(void *a1, const char *a2, ...)
{
  return _[a1 popDescriptionDepth];
}

id objc_msgSend_precomposedStringWithCanonicalMapping(void *a1, const char *a2, ...)
{
  return _[a1 precomposedStringWithCanonicalMapping];
}

id objc_msgSend_preferredBlockSize(void *a1, const char *a2, ...)
{
  return _[a1 preferredBlockSize];
}

id objc_msgSend_prepareBuffer(void *a1, const char *a2, ...)
{
  return _[a1 prepareBuffer];
}

id objc_msgSend_prepareFileForUploadingAtURL_originalURLExtension_inDirectory_destinationSandboxExtension_completionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareFileForUploadingAtURL:originalURLExtension:inDirectory:destinationSandboxExtension:completionHandler:");
}

id objc_msgSend_prepareStatement_sql_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareStatement:sql:error:");
}

id objc_msgSend_prepareWriteChannelWithCloseCompletionHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "prepareWriteChannelWithCloseCompletionHandler:");
}

id objc_msgSend_privateString(void *a1, const char *a2, ...)
{
  return _[a1 privateString];
}

id objc_msgSend_processBytes_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processBytes:size:");
}

id objc_msgSend_processData_CRC_isDone_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processData:CRC:isDone:handler:");
}

id objc_msgSend_processData_inflateResult_CRC_isDone_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processData:inflateResult:CRC:isDone:handler:");
}

id objc_msgSend_processData_isDone_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "processData:isDone:handler:");
}

id objc_msgSend_processInfo(void *a1, const char *a2, ...)
{
  return _[a1 processInfo];
}

id objc_msgSend_processorCount(void *a1, const char *a2, ...)
{
  return _[a1 processorCount];
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _[a1 progress];
}

id objc_msgSend_progressObserver(void *a1, const char *a2, ...)
{
  return _[a1 progressObserver];
}

id objc_msgSend_progressTotalUnitCountWithZipArchive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressTotalUnitCountWithZipArchive:");
}

id objc_msgSend_progressWithTotalUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "progressWithTotalUnitCount:");
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_propertyListWithStream_options_format_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "propertyListWithStream:options:format:error:");
}

id objc_msgSend_publicString(void *a1, const char *a2, ...)
{
  return _[a1 publicString];
}

id objc_msgSend_pushDescriptionDepth(void *a1, const char *a2, ...)
{
  return _[a1 pushDescriptionDepth];
}

id objc_msgSend_qualityOfService(void *a1, const char *a2, ...)
{
  return _[a1 qualityOfService];
}

id objc_msgSend_query(void *a1, const char *a2, ...)
{
  return _[a1 query];
}

id objc_msgSend_queryFirstObjectWithStatement_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "queryFirstObjectWithStatement:error:");
}

id objc_msgSend_raise(void *a1, const char *a2, ...)
{
  return _[a1 raise];
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "raise:format:");
}

id objc_msgSend_rangeAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeAtIndex:");
}

id objc_msgSend_rangeOfCharacterFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:");
}

id objc_msgSend_rangeOfCharacterFromSet_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:options:");
}

id objc_msgSend_rangeOfCharacterFromSet_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfCharacterFromSet:options:range:");
}

id objc_msgSend_rangeOfComposedCharacterSequenceAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfComposedCharacterSequenceAtIndex:");
}

id objc_msgSend_rangeOfComposedCharacterSequencesForRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfComposedCharacterSequencesForRange:");
}

id objc_msgSend_rangeOfFirstMatchInString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfFirstMatchInString:options:range:");
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:");
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:");
}

id objc_msgSend_rangeOfString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "rangeOfString:options:range:");
}

id objc_msgSend_rangeValue(void *a1, const char *a2, ...)
{
  return _[a1 rangeValue];
}

id objc_msgSend_read_maxLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "read:maxLength:");
}

id objc_msgSend_readAllFromChannel_offset_length_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readAllFromChannel:offset:length:completion:");
}

id objc_msgSend_readArchiveFromURL_options_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readArchiveFromURL:options:queue:completion:");
}

id objc_msgSend_readArchiveWithQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readArchiveWithQueue:completion:");
}

id objc_msgSend_readCentralDirectoryWithEntryCount_offset_size_channel_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readCentralDirectoryWithEntryCount:offset:size:channel:completion:");
}

id objc_msgSend_readCentralFileHeaderWithBuffer_dataSize_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readCentralFileHeaderWithBuffer:dataSize:error:");
}

id objc_msgSend_readChannel(void *a1, const char *a2, ...)
{
  return _[a1 readChannel];
}

id objc_msgSend_readChannelForEntry_validateCRC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readChannelForEntry:validateCRC:");
}

id objc_msgSend_readChannelInternal(void *a1, const char *a2, ...)
{
  return _[a1 readChannelInternal];
}

id objc_msgSend_readDocumentPropertiesFromDictionary_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readDocumentPropertiesFromDictionary:");
}

id objc_msgSend_readEndOfCentralDirectoryData_eocdOffset_channel_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readEndOfCentralDirectoryData:eocdOffset:channel:completion:");
}

id objc_msgSend_readEndOfCentralDirectoryFromInputStream_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readEndOfCentralDirectoryFromInputStream:");
}

id objc_msgSend_readEntries(void *a1, const char *a2, ...)
{
  return _[a1 readEntries];
}

id objc_msgSend_readExtraFieldFromBuffer_size_entry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readExtraFieldFromBuffer:size:entry:");
}

id objc_msgSend_readExtraFieldsFromBuffer_extraFieldsLength_entry_dataSize_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readExtraFieldsFromBuffer:extraFieldsLength:entry:dataSize:error:");
}

id objc_msgSend_readFileAttributes(void *a1, const char *a2, ...)
{
  return _[a1 readFileAttributes];
}

id objc_msgSend_readFileCommentFromBuffer_fileCommentLength_entry_dataSize_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readFileCommentFromBuffer:fileCommentLength:entry:dataSize:error:");
}

id objc_msgSend_readFileHeaderFromData_headerLength_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readFileHeaderFromData:headerLength:error:");
}

id objc_msgSend_readFilenameFromBuffer_nameLength_entry_dataSize_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readFilenameFromBuffer:nameLength:entry:dataSize:error:");
}

id objc_msgSend_readFilenameFromBuffer_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readFilenameFromBuffer:size:");
}

id objc_msgSend_readFromOffset_length_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readFromOffset:length:handler:");
}

id objc_msgSend_readLocalFileHeaderData_atOffset_channel_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readLocalFileHeaderData:atOffset:channel:completion:");
}

id objc_msgSend_readLocalFileHeaderEntriesFromChannel_offset_previousEntry_seekAttempts_seekForward_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readLocalFileHeaderEntriesFromChannel:offset:previousEntry:seekAttempts:seekForward:completion:");
}

id objc_msgSend_readLocalFileHeaderFilenameAndExtraFieldsData_forEntry_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readLocalFileHeaderFilenameAndExtraFieldsData:forEntry:error:");
}

id objc_msgSend_readToBuffer_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readToBuffer:size:");
}

id objc_msgSend_readToOwnBuffer_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readToOwnBuffer:size:");
}

id objc_msgSend_readWithFileHeaderLength_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readWithFileHeaderLength:handler:");
}

id objc_msgSend_readWithHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readWithHandler:");
}

id objc_msgSend_readWithHandlerAndWait_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readWithHandlerAndWait:");
}

id objc_msgSend_readZip64EndOfCentralDirectoryFromInputStream_eocdOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readZip64EndOfCentralDirectoryFromInputStream:eocdOffset:");
}

id objc_msgSend_readZip64EndOfCentralDirectoryLocatorWithChannel_eocdOffset_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readZip64EndOfCentralDirectoryLocatorWithChannel:eocdOffset:completion:");
}

id objc_msgSend_readZip64EndOfCentralDirectoryWithChannel_offset_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readZip64EndOfCentralDirectoryWithChannel:offset:completion:");
}

id objc_msgSend_readZip64ExtraField_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readZip64ExtraField:size:");
}

id objc_msgSend_readZip64ExtraFieldFromBuffer_dataLength_entry_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "readZip64ExtraFieldFromBuffer:dataLength:entry:error:");
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _[a1 reason];
}

id objc_msgSend_registerDefaults_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "registerDefaults:");
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "regularExpressionWithPattern:options:error:");
}

id objc_msgSend_releaseInputSandboxExtensionToken_outputSandBoxToken_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "releaseInputSandboxExtensionToken:outputSandBoxToken:");
}

id objc_msgSend_reloadZipArchiveIfNeededWithURLImpl_isLazyLoading_forceReload_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reloadZipArchiveIfNeededWithURLImpl:isLazyLoading:forceReload:error:");
}

id objc_msgSend_removeAllCachedResourceValues(void *a1, const char *a2, ...)
{
  return _[a1 removeAllCachedResourceValues];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeCachedResourceValueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeCachedResourceValueForKey:");
}

id objc_msgSend_removeDirectory(void *a1, const char *a2, ...)
{
  return _[a1 removeDirectory];
}

id objc_msgSend_removeIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeIndexes:");
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtPath:error:");
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeItemAtURL:error:");
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectAtIndex:");
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectForKey:");
}

id objc_msgSend_removeObjectsAtIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsAtIndexes:");
}

id objc_msgSend_removeObjectsInRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObjectsInRange:");
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeObserver:forKeyPath:context:");
}

id objc_msgSend_removeProgressObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "removeProgressObserver:");
}

id objc_msgSend_removeTemporaryDirectory(void *a1, const char *a2, ...)
{
  return _[a1 removeTemporaryDirectory];
}

id objc_msgSend_reopenWithTemporaryURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "reopenWithTemporaryURL:error:");
}

id objc_msgSend_replaceCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceCharactersInRange:withString:");
}

id objc_msgSend_replaceItemAtURL_withItemAtURL_backupItemName_options_resultingItemURL_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:");
}

id objc_msgSend_replaceOccurrencesOfString_withString_options_range_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replaceOccurrencesOfString:withString:options:range:");
}

id objc_msgSend_replacePointerAtIndex_withPointer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "replacePointerAtIndex:withPointer:");
}

id objc_msgSend_requestedLength(void *a1, const char *a2, ...)
{
  return _[a1 requestedLength];
}

id objc_msgSend_requestedOffset(void *a1, const char *a2, ...)
{
  return _[a1 requestedOffset];
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _[a1 reset];
}

id objc_msgSend_resignCurrent(void *a1, const char *a2, ...)
{
  return _[a1 resignCurrent];
}

id objc_msgSend_resourceSpecifier(void *a1, const char *a2, ...)
{
  return _[a1 resourceSpecifier];
}

id objc_msgSend_resourceValuesForKeys_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "resourceValuesForKeys:error:");
}

id objc_msgSend_respondWithData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "respondWithData:");
}

id objc_msgSend_resultType(void *a1, const char *a2, ...)
{
  return _[a1 resultType];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 reverseObjectEnumerator];
}

id objc_msgSend_revision(void *a1, const char *a2, ...)
{
  return _[a1 revision];
}

id objc_msgSend_revisionString(void *a1, const char *a2, ...)
{
  return _[a1 revisionString];
}

id objc_msgSend_revisionWithSequence_identifier_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "revisionWithSequence:identifier:");
}

id objc_msgSend_saltData(void *a1, const char *a2, ...)
{
  return _[a1 saltData];
}

id objc_msgSend_saltForSageFiles(void *a1, const char *a2, ...)
{
  return _[a1 saltForSageFiles];
}

id objc_msgSend_saltFromVerifier_saltLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "saltFromVerifier:saltLength:");
}

id objc_msgSend_scanCharactersFromSet_intoString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanCharactersFromSet:intoString:");
}

id objc_msgSend_scanDouble_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanDouble:");
}

id objc_msgSend_scanLocation(void *a1, const char *a2, ...)
{
  return _[a1 scanLocation];
}

id objc_msgSend_scanUpToCharactersFromSet_intoString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scanUpToCharactersFromSet:intoString:");
}

id objc_msgSend_scannerWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "scannerWithString:");
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _[a1 scheme];
}

id objc_msgSend_searchForEndOfCentralDirectoryFromInputStream_offset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchForEndOfCentralDirectoryFromInputStream:offset:");
}

id objc_msgSend_seekToOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "seekToOffset:");
}

id objc_msgSend_sequence(void *a1, const char *a2, ...)
{
  return _[a1 sequence];
}

id objc_msgSend_serviceListener(void *a1, const char *a2, ...)
{
  return _[a1 serviceListener];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAffectedObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAffectedObjects:");
}

id objc_msgSend_setArgument_atIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setArgument:atIndex:");
}

id objc_msgSend_setAttributeCollectionToPath_intent_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributeCollectionToPath:intent:options:error:");
}

id objc_msgSend_setAttributeCollectionToPath_intent_options_forRemoval_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributeCollectionToPath:intent:options:forRemoval:error:");
}

id objc_msgSend_setAttributeToPathFileSystemRepresentation_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributeToPathFileSystemRepresentation:options:error:");
}

id objc_msgSend_setAttributes_ofItemAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setAttributes:ofItemAtPath:error:");
}

id objc_msgSend_setBlockInfos_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setBlockInfos:");
}

id objc_msgSend_setByAddingObjectsFromSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByAddingObjectsFromSet:");
}

id objc_msgSend_setByteRangeAccessSupported_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setByteRangeAccessSupported:");
}

id objc_msgSend_setCRC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCRC:");
}

id objc_msgSend_setCancellationHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCancellationHandler:");
}

id objc_msgSend_setCaseSensitive_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCaseSensitive:");
}

id objc_msgSend_setCharactersToBeSkipped_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCharactersToBeSkipped:");
}

id objc_msgSend_setCollapsedName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCollapsedName:");
}

id objc_msgSend_setCompletedUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompletedUnitCount:");
}

id objc_msgSend_setCompressed_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompressed:");
}

id objc_msgSend_setCompressedSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompressedSize:");
}

id objc_msgSend_setCompressionFlags_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCompressionFlags:");
}

id objc_msgSend_setContentLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentLength:");
}

id objc_msgSend_setContentType_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setContentType:");
}

id objc_msgSend_setCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setCount:");
}

id objc_msgSend_setDataLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDataLength:");
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setDelegate:");
}

id objc_msgSend_setEntryInsertionOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntryInsertionOffset:");
}

id objc_msgSend_setEntryInsertionOffsetImpl_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setEntryInsertionOffsetImpl:");
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setError:");
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedInterface:");
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExportedObject:");
}

id objc_msgSend_setExtraFieldsLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setExtraFieldsLength:");
}

id objc_msgSend_setFieldOptionCommaSeparated(void *a1, const char *a2, ...)
{
  return _[a1 setFieldOptionCommaSeparated];
}

id objc_msgSend_setFileHeaderLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setFileHeaderLength:");
}

id objc_msgSend_setHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHandler:");
}

id objc_msgSend_setHost_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setHost:");
}

id objc_msgSend_setKind_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setKind:");
}

id objc_msgSend_setLastModificationDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastModificationDate:");
}

id objc_msgSend_setLastThrottleCheck_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLastThrottleCheck:");
}

id objc_msgSend_setLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLength:");
}

id objc_msgSend_setLocaleSpecificStorage_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocaleSpecificStorage:forKey:");
}

id objc_msgSend_setLocalizedDateFormatFromTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLocalizedDateFormatFromTemplate:");
}

id objc_msgSend_setLowWater_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setLowWater:");
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setMaxConcurrentOperationCount:");
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setName:");
}

id objc_msgSend_setNameLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setNameLength:");
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKey:");
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setObject:forKeyedSubscript:");
}

id objc_msgSend_setOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setOffset:");
}

id objc_msgSend_setPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setPath:");
}

id objc_msgSend_setProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgress:");
}

id objc_msgSend_setProgressObserver_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setProgressObserver:");
}

id objc_msgSend_setQuery_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setQuery:");
}

id objc_msgSend_setReadChannelInternal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setReadChannelInternal:");
}

id objc_msgSend_setResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResourceValue:forKey:error:");
}

id objc_msgSend_setResourceValues_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setResourceValues:error:");
}

id objc_msgSend_setSchemaVersion_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSchemaVersion:error:");
}

id objc_msgSend_setScheme_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setScheme:");
}

id objc_msgSend_setSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSelector:");
}

id objc_msgSend_setSize_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setSize:");
}

id objc_msgSend_setStreamReadChannelSourceHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setStreamReadChannelSourceHandler:");
}

id objc_msgSend_setTarget_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTarget:");
}

id objc_msgSend_setThrottleCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setThrottleCount:");
}

id objc_msgSend_setTotalUnitCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setTotalUnitCount:");
}

id objc_msgSend_setURLInternal_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setURLInternal:");
}

id objc_msgSend_setUnderlyingQueue_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUnderlyingQueue:");
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfo:");
}

id objc_msgSend_setUserInfoObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setUserInfoObject:forKey:");
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithArray:");
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithCapacity:");
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObject:");
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithObjects:");
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setWithSet:");
}

id objc_msgSend_setZipArchive_fileCoordinatorDelegate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "setZipArchive:fileCoordinatorDelegate:");
}

id objc_msgSend_setupInflateStream(void *a1, const char *a2, ...)
{
  return _[a1 setupInflateStream];
}

id objc_msgSend_sfu_errnoRaise_format_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sfu_errnoRaise:format:");
}

id objc_msgSend_sfu_localErrno(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sfu_localErrno");
}

id objc_msgSend_sfu_setAttributes_ofItemAtURL_recursively_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sfu_setAttributes:ofItemAtURL:recursively:error:");
}

id objc_msgSend_sha256HashFromString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sha256HashFromString:");
}

id objc_msgSend_shareIdentifierRelativePath(void *a1, const char *a2, ...)
{
  return _[a1 shareIdentifierRelativePath];
}

id objc_msgSend_shareUUID(void *a1, const char *a2, ...)
{
  return _[a1 shareUUID];
}

id objc_msgSend_sharedKeySetForKeys_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sharedKeySetForKeys:");
}

id objc_msgSend_shiftIndexesStartingAtIndex_by_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shiftIndexesStartingAtIndex:by:");
}

id objc_msgSend_shortDescription(void *a1, const char *a2, ...)
{
  return _[a1 shortDescription];
}

id objc_msgSend_shortValue(void *a1, const char *a2, ...)
{
  return _[a1 shortValue];
}

id objc_msgSend_shouldFullFsyncOnClose(void *a1, const char *a2, ...)
{
  return _[a1 shouldFullFsyncOnClose];
}

id objc_msgSend_shouldPreserveForIntent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "shouldPreserveForIntent:");
}

id objc_msgSend_simulateCrashWithMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "simulateCrashWithMessage:");
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_sizeWithAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sizeWithAttributes:");
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortUsingComparator:");
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingComparator:");
}

id objc_msgSend_sortedArrayUsingSelector_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedArrayUsingSelector:");
}

id objc_msgSend_sortedEntries(void *a1, const char *a2, ...)
{
  return _[a1 sortedEntries];
}

id objc_msgSend_sortedEntriesImpl(void *a1, const char *a2, ...)
{
  return _[a1 sortedEntriesImpl];
}

id objc_msgSend_sortedEntriesUsingComparator_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "sortedEntriesUsingComparator:");
}

id objc_msgSend_stableDocumentUUID(void *a1, const char *a2, ...)
{
  return _[a1 stableDocumentUUID];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_startSingleResultQuery_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "startSingleResultQuery:error:");
}

id objc_msgSend_storage(void *a1, const char *a2, ...)
{
  return _[a1 storage];
}

id objc_msgSend_streamReadChannelForEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "streamReadChannelForEntry:");
}

id objc_msgSend_streamReadChannelForEntry_validateCRC_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "streamReadChannelForEntry:validateCRC:");
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringByAddingPercentEncodingWithAllowedCharacters_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAddingPercentEncodingWithAllowedCharacters:");
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingFormat:");
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathComponent:");
}

id objc_msgSend_stringByAppendingPathExtension_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingPathExtension:");
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByAppendingString:");
}

id objc_msgSend_stringByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 stringByDeletingLastPathComponent];
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 stringByDeletingPathExtension];
}

id objc_msgSend_stringByPaddingToLength_withString_startingAtIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByPaddingToLength:withString:startingAtIndex:");
}

id objc_msgSend_stringByRemovingPercentEncoding(void *a1, const char *a2, ...)
{
  return _[a1 stringByRemovingPercentEncoding];
}

id objc_msgSend_stringByReplacingMatchesInString_options_range_withTemplate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingMatchesInString:options:range:withTemplate:");
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByReplacingOccurrencesOfString:withString:");
}

id objc_msgSend_stringByStandardizingPath(void *a1, const char *a2, ...)
{
  return _[a1 stringByStandardizingPath];
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringByTrimmingCharactersInSet:");
}

id objc_msgSend_stringFromByteCount_countStyle_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromByteCount:countStyle:");
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromDate:");
}

id objc_msgSend_stringFromNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringFromNumber:");
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCString:encoding:");
}

id objc_msgSend_stringWithCapacity_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCapacity:");
}

id objc_msgSend_stringWithCharacters_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithCharacters:length:");
}

id objc_msgSend_stringWithFileSystemRepresentation_length_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFileSystemRepresentation:length:");
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithFormat:");
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithString:");
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "stringWithUTF8String:");
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subarrayWithRange:");
}

id objc_msgSend_subdataWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "subdataWithRange:");
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringFromIndex:");
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringToIndex:");
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "substringWithRange:");
}

id objc_msgSend_target(void *a1, const char *a2, ...)
{
  return _[a1 target];
}

id objc_msgSend_targetDataURLForPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "targetDataURLForPath:");
}

id objc_msgSend_threadDictionary(void *a1, const char *a2, ...)
{
  return _[a1 threadDictionary];
}

id objc_msgSend_throttleCount(void *a1, const char *a2, ...)
{
  return _[a1 throttleCount];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceNow];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_tokenizeUUIDPathString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tokenizeUUIDPathString:");
}

id objc_msgSend_totalUnitCount(void *a1, const char *a2, ...)
{
  return _[a1 totalUnitCount];
}

id objc_msgSend_transcodeReadChannel_decryptionInfo_size_toWriteChannel_encryptionInfo_synchronous_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "transcodeReadChannel:decryptionInfo:size:toWriteChannel:encryptionInfo:synchronous:completion:");
}

id objc_msgSend_truncateToLength_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "truncateToLength:completion:");
}

id objc_msgSend_truncateToNumberOfEntries_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "truncateToNumberOfEntries:completion:");
}

id objc_msgSend_truncateToOffsetImpl_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "truncateToOffsetImpl:completion:");
}

id objc_msgSend_truncateZipAtFirstDeletedData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "truncateZipAtFirstDeletedData:");
}

id objc_msgSend_tsp_appendDispatchData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_appendDispatchData:");
}

id objc_msgSend_tsp_dataForEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_dataForEntry:");
}

id objc_msgSend_tsp_dataFromDispatchData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_dataFromDispatchData:");
}

id objc_msgSend_tsp_dataWithTranscoder_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_dataWithTranscoder:");
}

id objc_msgSend_tsp_dispatchData(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_dispatchData");
}

id objc_msgSend_tsp_ensureSaveErrorWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_ensureSaveErrorWithError:");
}

id objc_msgSend_tsp_errorWithCode_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_errorWithCode:");
}

id objc_msgSend_tsp_errorWithCode_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_errorWithCode:userInfo:");
}

id objc_msgSend_tsp_errorWithCode_userInfo_isRecoverable_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_errorWithCode:userInfo:isRecoverable:");
}

id objc_msgSend_tsp_errorWithError_hints_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_errorWithError:hints:");
}

id objc_msgSend_tsp_hints(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_hints");
}

id objc_msgSend_tsp_hintsDescription(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_hintsDescription");
}

id objc_msgSend_tsp_isCorruptZipOfPackageError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_isCorruptZipOfPackageError");
}

id objc_msgSend_tsp_isCorruptedError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_isCorruptedError");
}

id objc_msgSend_tsp_isIWorkAVAssetURL(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_isIWorkAVAssetURL");
}

id objc_msgSend_tsp_isReadError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_isReadError");
}

id objc_msgSend_tsp_isRecoverable(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_isRecoverable");
}

id objc_msgSend_tsp_readCorruptZipOfPackageErrorWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_readCorruptZipOfPackageErrorWithUserInfo:");
}

id objc_msgSend_tsp_readCorruptedDocumentErrorWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_readCorruptedDocumentErrorWithUserInfo:");
}

id objc_msgSend_tsp_saveDocumentErrorWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_saveDocumentErrorWithUserInfo:");
}

id objc_msgSend_tsp_storageSpaceErrorWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_storageSpaceErrorWithUserInfo:");
}

id objc_msgSend_tsp_unknownReadErrorWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_unknownReadErrorWithUserInfo:");
}

id objc_msgSend_tsp_unknownWriteErrorWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_unknownWriteErrorWithUserInfo:");
}

id objc_msgSend_tsp_userInfoWithUserInfo_additionalUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_userInfoWithUserInfo:additionalUserInfo:");
}

id objc_msgSend_tsp_writeZipEntry_toURL_validateCRC_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsp_writeZipEntry:toURL:validateCRC:error:");
}

id objc_msgSend_tsu_DOSTime(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_DOSTime");
}

id objc_msgSend_tsu_UTIFilenameExtension(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_UTIFilenameExtension");
}

id objc_msgSend_tsu_UUIDWithNamespaceUUID_bytes_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_UUIDWithNamespaceUUID:bytes:size:");
}

id objc_msgSend_tsu_UUIDWithNamespaceUUID_name_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_UUIDWithNamespaceUUID:name:");
}

id objc_msgSend_tsu_allFilenameExtensionIdentifiersForTag(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_allFilenameExtensionIdentifiersForTag");
}

id objc_msgSend_tsu_allKeys(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_allKeys");
}

id objc_msgSend_tsu_appendJSONStringToString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_appendJSONStringToString:");
}

id objc_msgSend_tsu_canCloneItemAtURL_toURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_canCloneItemAtURL:toURL:");
}

id objc_msgSend_tsu_compressWithAlgorithm_operation_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_compressWithAlgorithm:operation:");
}

id objc_msgSend_tsu_conformsToUTI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_conformsToUTI:");
}

id objc_msgSend_tsu_countInstancesOfString_options_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_countInstancesOfString:options:");
}

id objc_msgSend_tsu_decodeFromHexidecimalString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_decodeFromHexidecimalString:");
}

id objc_msgSend_tsu_encodeToHexidecimalString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_encodeToHexidecimalString");
}

id objc_msgSend_tsu_enumerateErrorUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_enumerateErrorUsingBlock:");
}

id objc_msgSend_tsu_enumerateNonNullPointersUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_enumerateNonNullPointersUsingBlock:");
}

id objc_msgSend_tsu_error(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_error");
}

id objc_msgSend_tsu_errorWithCode_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_errorWithCode:userInfo:");
}

id objc_msgSend_tsu_errorWithDomain_code_alertTitle_alertMessage_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_errorWithDomain:code:alertTitle:alertMessage:userInfo:");
}

id objc_msgSend_tsu_fileReadCorruptedFileErrorWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_fileReadCorruptedFileErrorWithUserInfo:");
}

id objc_msgSend_tsu_fileReadPOSIXErrorWithNumber_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_fileReadPOSIXErrorWithNumber:userInfo:");
}

id objc_msgSend_tsu_fileReadUnknownErrorWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_fileReadUnknownErrorWithUserInfo:");
}

id objc_msgSend_tsu_fileSize(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_fileSize");
}

id objc_msgSend_tsu_fileSize_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_fileSize:error:");
}

id objc_msgSend_tsu_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_fileURLWithPath:");
}

id objc_msgSend_tsu_fileWritePOSIXErrorWithNumber_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_fileWritePOSIXErrorWithNumber:userInfo:");
}

id objc_msgSend_tsu_fileWriteUnknownErrorWithUserInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_fileWriteUnknownErrorWithUserInfo:");
}

id objc_msgSend_tsu_fullFormattedDate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_fullFormattedDate");
}

id objc_msgSend_tsu_getMD5Hash_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_getMD5Hash:");
}

id objc_msgSend_tsu_grantUserWritePosixPermissionAtPath_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_grantUserWritePosixPermissionAtPath:error:");
}

id objc_msgSend_tsu_indentBy_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_indentBy:");
}

id objc_msgSend_tsu_indexAtPosition_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_indexAtPosition:");
}

id objc_msgSend_tsu_indexSetByExcludingIndexes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_indexSetByExcludingIndexes:");
}

id objc_msgSend_tsu_initRedactedWithFormat_arguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_initRedactedWithFormat:arguments:");
}

id objc_msgSend_tsu_initUnRedactedWithFormat_arguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_initUnRedactedWithFormat:arguments:");
}

id objc_msgSend_tsu_initWithCGFloats_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_initWithCGFloats:count:");
}

id objc_msgSend_tsu_initWithDOSTime_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_initWithDOSTime:");
}

id objc_msgSend_tsu_initWithIndices_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_initWithIndices:count:");
}

id objc_msgSend_tsu_initWithInts_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_initWithInts:count:");
}

id objc_msgSend_tsu_initWithSqlStatement_columnIndex_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_initWithSqlStatement:columnIndex:");
}

id objc_msgSend_tsu_initWithUIntegers_count_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_initWithUIntegers:count:");
}

id objc_msgSend_tsu_isCJKString(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_isCJKString");
}

id objc_msgSend_tsu_isCancelError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_isCancelError");
}

id objc_msgSend_tsu_isDynamic(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_isDynamic");
}

id objc_msgSend_tsu_isFeatureUnsupportedError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_isFeatureUnsupportedError");
}

id objc_msgSend_tsu_isNoSuchFileError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_isNoSuchFileError");
}

id objc_msgSend_tsu_isOnSameVolumeAs_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_isOnSameVolumeAs:");
}

id objc_msgSend_tsu_isOutOfSpaceError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_isOutOfSpaceError");
}

id objc_msgSend_tsu_isReadError(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_isReadError");
}

id objc_msgSend_tsu_localizedList(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_localizedList");
}

id objc_msgSend_tsu_nsIndexSetConcurrencyFactor(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_nsIndexSetConcurrencyFactor");
}

id objc_msgSend_tsu_objectForKey_withDefaultUsingBlock_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_objectForKey:withDefaultUsingBlock:");
}

id objc_msgSend_tsu_parseBaseTitleWithLocalizedCopyString_firstCopyFormatString_generalCopyFormatString_outNumber_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_parseBaseTitleWithLocalizedCopyString:firstCopyFormatString:generalCopyFormatString:outNumber:");
}

id objc_msgSend_tsu_pathExceptPrivate(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_pathExceptPrivate");
}

id objc_msgSend_tsu_pathExtensionConformsToUTI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_pathExtensionConformsToUTI:");
}

id objc_msgSend_tsu_pathUTI(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_pathUTI");
}

id objc_msgSend_tsu_pendingUnitCountForIncompleteProgress_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_pendingUnitCountForIncompleteProgress:");
}

id objc_msgSend_tsu_preferredIdentifierForTagClass_conformingToUTI_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_preferredIdentifierForTagClass:conformingToUTI:");
}

id objc_msgSend_tsu_processLocalizedPropertyList_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_processLocalizedPropertyList:");
}

id objc_msgSend_tsu_propertyListWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_propertyListWithContentsOfURL:options:error:");
}

id objc_msgSend_tsu_raiseWithError_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_raiseWithError:");
}

id objc_msgSend_tsu_range(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_range");
}

id objc_msgSend_tsu_reachableFileURLByDeletingUnreachablePathComponents(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_reachableFileURLByDeletingUnreachablePathComponents");
}

id objc_msgSend_tsu_regexForTitleParsingWithLocalizedCopyString_isFirstCopyFormatString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_regexForTitleParsingWithLocalizedCopyString:isFirstCopyFormatString:");
}

id objc_msgSend_tsu_securelyUnarchiveRoot_forClasses_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_securelyUnarchiveRoot:forClasses:");
}

id objc_msgSend_tsu_setNonNilObject_forKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_setNonNilObject:forKey:");
}

id objc_msgSend_tsu_stringByApplyingSubstitutions_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_stringByApplyingSubstitutions:");
}

id objc_msgSend_tsu_stringByIncrementingCounterAfterDuplicateTitleModifierWithLocalizedCopyString_firstCopyFormatString_generalCopyFormatString_numberFormatter_uniquenessTest_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_stringByIncrementingCounterAfterDuplicateTitleModifierWithLocalizedCopyString:firstCopyFormatString:generalCopyFormatString:numberFormatter:uniquenessTest:");
}

id objc_msgSend_tsu_stringByRemovingCharactersInSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_stringByRemovingCharactersInSet:");
}

id objc_msgSend_tsu_stringByReplacingInstancesOfCharactersInSet_withString_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_stringByReplacingInstancesOfCharactersInSet:withString:");
}

id objc_msgSend_tsu_stringQuotedIfContainsCharacterSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_stringQuotedIfContainsCharacterSet:");
}

id objc_msgSend_tsu_stringWithFormat_arguments_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_stringWithFormat:arguments:");
}

id objc_msgSend_tsu_stringWithNormalizedHyphens(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_stringWithNormalizedHyphens");
}

id objc_msgSend_tsu_stringWithNormalizedQuotationMarks(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_stringWithNormalizedQuotationMarks");
}

id objc_msgSend_tsu_stringWithPathRelativeTo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_stringWithPathRelativeTo:");
}

id objc_msgSend_tsu_stringWithoutNonbreakingSpaces(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_stringWithoutNonbreakingSpaces");
}

id objc_msgSend_tsu_substringByTruncatingToSize_forAttributes_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_substringByTruncatingToSize:forAttributes:");
}

id objc_msgSend_tsu_substringWithComposedCharacterSequencesTruncatedToLength_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_substringWithComposedCharacterSequencesTruncatedToLength:");
}

id objc_msgSend_tsu_uncommentedAddress(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_uncommentedAddress");
}

id objc_msgSend_tsu_userInfoWithErrorType_userInfo_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_userInfoWithErrorType:userInfo:");
}

id objc_msgSend_tsu_volumeRenameOpenFail(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_volumeRenameOpenFail");
}

id objc_msgSend_tsu_volumeSupportsCloning(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_volumeSupportsCloning");
}

id objc_msgSend_tsu_zipArchiveErrorEntryName(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "tsu_zipArchiveErrorEntryName");
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_uint32Hash(void *a1, const char *a2, ...)
{
  return _[a1 uint32Hash];
}

id objc_msgSend_unarchivedObjectOfClasses_fromData_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unarchivedObjectOfClasses:fromData:error:");
}

id objc_msgSend_uncompressDataFromSource_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "uncompressDataFromSource:");
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "unionSet:");
}

id objc_msgSend_unsignedCharValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedCharValue];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_unsignedLongLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongLongValue];
}

id objc_msgSend_unsignedLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongValue];
}

id objc_msgSend_unsignedShortValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedShortValue];
}

id objc_msgSend_updateDataModificationDate(void *a1, const char *a2, ...)
{
  return _[a1 updateDataModificationDate];
}

id objc_msgSend_updateDocumentUUID(void *a1, const char *a2, ...)
{
  return _[a1 updateDocumentUUID];
}

id objc_msgSend_updateDocumentUUIDAndPreserveShareUUID_preserveStableDocumentUUID_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "updateDocumentUUIDAndPreserveShareUUID:preserveStableDocumentUUID:");
}

id objc_msgSend_updateVersionUUID(void *a1, const char *a2, ...)
{
  return _[a1 updateVersionUUID];
}

id objc_msgSend_upgradeFromSchemaVersion_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "upgradeFromSchemaVersion:error:");
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_validateCRCWithQueue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "validateCRCWithQueue:completion:");
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueForKey:");
}

id objc_msgSend_valueWithPointer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithPointer:");
}

id objc_msgSend_valueWithRange_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "valueWithRange:");
}

id objc_msgSend_versionUUID(void *a1, const char *a2, ...)
{
  return _[a1 versionUUID];
}

id objc_msgSend_waitForAccessToEnd(void *a1, const char *a2, ...)
{
  return _[a1 waitForAccessToEnd];
}

id objc_msgSend_warningWithMessage_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "warningWithMessage:");
}

id objc_msgSend_warningWithMessage_affectedObjects_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "warningWithMessage:affectedObjects:");
}

id objc_msgSend_weekday(void *a1, const char *a2, ...)
{
  return _[a1 weekday];
}

id objc_msgSend_whitespaceAndNewlineCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceAndNewlineCharacterSet];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceCharacterSet];
}

id objc_msgSend_writeAttributes_toURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeAttributes:toURL:");
}

id objc_msgSend_writeBlock(void *a1, const char *a2, ...)
{
  return _[a1 writeBlock];
}

id objc_msgSend_writeBuffer_size_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeBuffer:size:");
}

id objc_msgSend_writeCentralDirectory(void *a1, const char *a2, ...)
{
  return _[a1 writeCentralDirectory];
}

id objc_msgSend_writeCentralFileHeaderDataForEntry_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeCentralFileHeaderDataForEntry:");
}

id objc_msgSend_writeData_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeData:");
}

id objc_msgSend_writeData_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeData:handler:");
}

id objc_msgSend_writeData_offset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeData:offset:");
}

id objc_msgSend_writeData_offset_handler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeData:offset:handler:");
}

id objc_msgSend_writeData_queue_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeData:queue:completion:");
}

id objc_msgSend_writeData_toRelativePath_allowEncryption_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeData:toRelativePath:allowEncryption:error:");
}

id objc_msgSend_writeEndOfCentralDirectoryDataWithOffset_size_entryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeEndOfCentralDirectoryDataWithOffset:size:entryCount:");
}

id objc_msgSend_writeEntryWithName_force32BitSize_lastModificationDate_size_CRC_fromReadChannel_completion_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeEntryWithName:force32BitSize:lastModificationDate:size:CRC:fromReadChannel:completion:");
}

id objc_msgSend_writeEntryWithName_force32BitSize_lastModificationDate_size_CRC_fromReadChannel_writeHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeEntryWithName:force32BitSize:lastModificationDate:size:CRC:fromReadChannel:writeHandler:");
}

id objc_msgSend_writeToDocumentURL_writerBlock_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToDocumentURL:writerBlock:error:");
}

id objc_msgSend_writeToPackageWriter_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToPackageWriter:error:");
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:options:error:");
}

id objc_msgSend_writeToURL_packageType_removeEntriesMatchingFilter_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeToURL:packageType:removeEntriesMatchingFilter:error:");
}

id objc_msgSend_writeURL(void *a1, const char *a2, ...)
{
  return _[a1 writeURL];
}

id objc_msgSend_writeZip64EndOfCentralDirectoryLocatorWithOffset_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeZip64EndOfCentralDirectoryLocatorWithOffset:");
}

id objc_msgSend_writeZip64EndOfCentralDirectoryWithOffset_size_entryCount_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "writeZip64EndOfCentralDirectoryWithOffset:size:entryCount:");
}

id objc_msgSend_zipArchive(void *a1, const char *a2, ...)
{
  return _[a1 zipArchive];
}

id objc_msgSend_zipArchiveFromURL_options_error_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zipArchiveFromURL:options:error:");
}

id objc_msgSend_zipArchiveOptions(void *a1, const char *a2, ...)
{
  return _[a1 zipArchiveOptions];
}

id objc_msgSend_zipArchiveURLFromPackageURL_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zipArchiveURLFromPackageURL:");
}

id objc_msgSend_zipArchiveWriter(void *a1, const char *a2, ...)
{
  return _[a1 zipArchiveWriter];
}

id objc_msgSend_zipDirectoryAtURL_customDirectoryFilename_toURL_queue_progressHandler_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "zipDirectoryAtURL:customDirectoryFilename:toURL:queue:progressHandler:");
}