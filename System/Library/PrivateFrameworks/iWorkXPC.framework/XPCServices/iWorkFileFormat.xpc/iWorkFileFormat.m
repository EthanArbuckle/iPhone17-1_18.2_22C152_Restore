int main(int argc, const char **argv, const char **envp)
{
  void *v3;
  void *v4;

  v3 = objc_opt_new();
  v4 = +[NSXPCListener serviceListener];
  [v4 setDelegate:v3];
  [v4 resume];

  return 0;
}

void sub_10000581C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
}

uint64_t sub_100005864(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100005874(uint64_t a1)
{
}

void sub_10000587C(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000058C0(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100005904(uint64_t a1, uint64_t a2, id obj)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_100005AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100005AEC(uint64_t a1, uint64_t a2, id obj)
{
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = a2;
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
}

void sub_100005E10(id a1)
{
  v3 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
  dispatch_queue_t v1 = dispatch_queue_create("TSPFileManager.IOCompletion", v3);
  v2 = (void *)qword_1001EB300;
  qword_1001EB300 = (uint64_t)v1;
}

void sub_1000061BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose((const void *)(v32 - 184), 8);
  _Block_object_dispose((const void *)(v32 - 152), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000061F0(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 1;
  return result;
}

void sub_100006204(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = v8;
  if (!v7 || v8)
  {
    if (v8)
    {
      uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8);
      if (*(void *)(v14 + 40)) {
        goto LABEL_12;
      }
      id v15 = v8;
      v16 = *(void **)(v14 + 40);
      *(void *)(v14 + 40) = v15;
      goto LABEL_11;
    }
  }
  else if (!*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_100006398;
    v19[3] = &unk_1001C5128;
    uint64_t v22 = *(void *)(a1 + 64);
    v10 = *(void **)(a1 + 40);
    id v11 = *(id *)(a1 + 48);
    uint64_t v12 = *(void *)(a1 + 72);
    id v20 = v11;
    uint64_t v13 = *(void *)(a1 + 56);
    uint64_t v23 = v12;
    uint64_t v24 = v13;
    id v21 = *(id *)(a1 + 32);
    [v10 writeData:v7 handler:v19];
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24)
    && !*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
    uint64_t v17 = +[NSError errorWithDomain:NSCocoaErrorDomain code:3072 userInfo:0];
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8);
    v16 = *(void **)(v18 + 40);
    *(void *)(v18 + 40) = v17;
LABEL_11:
  }
LABEL_12:
  if (a2) {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

void sub_100006398(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  id v13 = v7;
  if (a3)
  {
    *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) += a3;
    [*(id *)(a1 + 32) setCompletedUnitCount:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)];
    id v7 = v13;
  }
  if (v7)
  {
    uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8);
    if (*(void *)(v8 + 40)) {
      goto LABEL_10;
    }
    id v9 = v7;
    v10 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v9;
    goto LABEL_9;
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)
    && !*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40))
  {
    uint64_t v11 = +[NSError errorWithDomain:NSCocoaErrorDomain code:3072 userInfo:0];
    uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
    v10 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;
LABEL_9:

    id v7 = v13;
  }
LABEL_10:
  if (a2)
  {
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));
    id v7 = v13;
  }
}

uint64_t sub_1000064A8(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[4] + 16))(a1[4], *(void *)(*(void *)(a1[5] + 8) + 24), *(void *)(*(void *)(a1[6] + 8) + 40));
}

void sub_1000067A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,void *a23,void *a24)
{
  _Unwind_Resume(a1);
}

void sub_100006810(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100006854(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100006A58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100006A98(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000731C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15, void *a16, uint64_t a17, void *a18, void *a19, void *a20,void *a21,void *a22,uint64_t a23,void *a24)
{
  _Unwind_Resume(a1);
}

void sub_10000745C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000074A0(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000074E4(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100007528(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000076B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, objc_super a13)
{
  a13.super_class = (Class)TSPPackageWriter;
  [(_Unwind_Exception *)&a13 dealloc];
  _Unwind_Resume(a1);
}

void sub_100007700(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100007864(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(v1 + 56);
  v2 = (id *)(v1 + 56);
  if (!v3) {
    objc_storeStrong(v2, *(id *)(a1 + 40));
  }
}

void sub_100007B50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100007BB8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100007BFC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100007D60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100007E64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100008148(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000081BC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100008200(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000083B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000083F0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100008400(uint64_t a1)
{
}

void sub_100008408(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100008658(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100008978(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_100008A0C(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100008DBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_100008E80(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100008FC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100009428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1000094E4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100009528(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000098D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  _Unwind_Resume(a1);
}

void sub_10000996C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000099B0(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100009A4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100009C0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100009C38(uint64_t a1)
{
}

void sub_100009C4C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = v3;
  if (!v3) {
    id v3 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  }
  (*(void (**)(void, id))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), v3);
}

void sub_100009CB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100009E2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_100009E5C(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10000A0FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000A174(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000A414(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000A484(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000A700(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000A768(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000A968(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000AB3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000AB7C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000AC44(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x22u);
}

void sub_10000AFDC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000B020(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000B168(id a1)
{
  TSULogCreateCategory("TSUDocumentLifecycleCat");
  TSUDocumentLifecycleCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000B41C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000B474(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)TSPSnappyReadChannel;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10000B6A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000B700(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t sub_10000B744(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10000B754(uint64_t a1)
{
}

void sub_10000B75C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  int v9 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  if (v8 && !*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    int v9 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  }
  if (!v9)
  {
    if (v7)
    {
      uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v11 = *(NSObject **)(v10 + 40);
      if (v11)
      {
        dispatch_data_t concat = dispatch_data_create_concat(v11, v7);
        uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
        uint64_t v14 = *(void **)(v13 + 40);
        *(void *)(v13 + 40) = concat;
      }
      else
      {
        id v15 = v7;
        uint64_t v14 = *(void **)(v10 + 40);
        *(void *)(v10 + 40) = v15;
      }
    }
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8);
    id obj = *(id *)(v16 + 40);
    unsigned __int8 v17 = [*(id *)(a1 + 32) processData:&obj isDone:a2 handler:*(void *)(a1 + 40)];
    objc_storeStrong((id *)(v16 + 40), obj);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v17 ^ 1;
  }
}

void sub_10000B884(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000BD24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000BD98(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000BDDC(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000BE20(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000BE64(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000C004(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000C048(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000C220(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000C248(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000C28C(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000C2DC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void sub_10000C4C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000C504(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000C6B0(_Unwind_Exception *a1)
{
  v6 = v5;

  _Unwind_Resume(a1);
}

void sub_10000C748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  uint64_t v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)TSPAVAssetResourceLoaderDelegate;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10000C808(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000C860(id a1)
{
  id v1 = +[NSUserDefaults standardUserDefaults];
  byte_1001EB310 = [v1 BOOLForKey:@"TSPAVAssetResourceLoadingDisableEntireLengthAvailableOnDemand"];
}

void sub_10000C8C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000C96C(uint64_t a1)
{
  if (([*(id *)(a1 + 32) isCancelled] & 1) == 0)
  {
    id v4 = [*(id *)(a1 + 32) contentInformationRequest];
    v2 = [*(id *)(*(void *)(a1 + 40) + 8) type];
    [v4 setContentType:v2];

    [v4 setContentLength:*(void *)(*(void *)(a1 + 40) + 16)];
    [v4 setByteRangeAccessSupported:1];
    id v3 = [*(id *)(a1 + 32) dataRequest];

    if (!v3) {
      [*(id *)(a1 + 32) finishLoading];
    }
  }
}

void sub_10000CA34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000CAEC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 40))
  {
    dispatch_suspend(*(dispatch_object_t *)(v2 + 32));
    id v3 = *(void **)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    v8[2] = sub_10000CC08;
    v8[3] = &unk_1001C56E8;
    v8[4] = v3;
    [v3 _provideNextDataBlockToLoadingRequest:v4 completion:v8];
  }
  else
  {
    v5 = *(void **)(v2 + 8);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10000CC14;
    v6[3] = &unk_1001C5710;
    v6[4] = v2;
    id v7 = *(id *)(a1 + 40);
    [v5 performIOChannelReadWithAccessor:v6];
  }
}

void sub_10000CBEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_10000CC08(uint64_t a1)
{
}

void sub_10000CC14(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4)
  {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 40), a2);
    dispatch_suspend(*(dispatch_object_t *)(*(void *)(a1 + 32) + 32));
    v5 = *(void **)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_10000CCEC;
    v7[3] = &unk_1001C56E8;
    v7[4] = v5;
    [v5 _provideNextDataBlockToLoadingRequest:v6 completion:v7];
  }
  else
  {
    [*(id *)(a1 + 40) finishLoadingWithError:0];
  }
}

void sub_10000CCD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000CCEC(uint64_t a1)
{
}

void sub_10000D0AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  _Block_object_dispose(&a21, 8);
  _Unwind_Resume(a1);
}

void sub_10000D148(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t sub_10000D18C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10000D19C(uint64_t a1)
{
}

void sub_10000D1A4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000D1E8(uint64_t a1, int a2, void *a3, void *a4)
{
  data2 = a3;
  id v7 = a4;
  if (*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40))
  {
    if ([*(id *)(a1 + 32) isCancelled])
    {
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8);
LABEL_6:
      uint64_t v11 = *(void **)(v8 + 40);
      *(void *)(v8 + 40) = 0;

LABEL_7:
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
      goto LABEL_8;
    }
    if (v7)
    {
      uint64_t v9 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v10 = *(void **)(v9 + 40);
      *(void *)(v9 + 40) = 0;

      [*(id *)(a1 + 32) finishLoadingWithError:v7];
      [*(id *)(*(void *)(a1 + 40) + 40) close];
      uint64_t v8 = *(void *)(a1 + 40);
      goto LABEL_6;
    }
    if (data2)
    {
      dispatch_data_t concat = dispatch_data_create_concat(*(dispatch_data_t *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), data2);
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      uint64_t v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 40) = concat;
    }
    if (a2)
    {
      id v15 = [*(id *)(a1 + 32) dataRequest];
      [v15 respondWithData:*(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40)];

      uint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8);
      unsigned __int8 v17 = *(void **)(v16 + 40);
      *(void *)(v16 + 40) = 0;

      if (*(void *)(a1 + 64) <= *(void *)(a1 + 72))
      {
        [*(id *)(a1 + 32) finishLoading];
        goto LABEL_7;
      }
      [*(id *)(a1 + 40) _provideNextDataBlockToLoadingRequest:*(void *)(a1 + 32) completion:*(void *)(a1 + 48)];
    }
  }
LABEL_8:
}

void sub_10000D350(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000D488(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000D4E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000D77C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  _Block_object_dispose(&a19, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10000D7CC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10000D7DC(uint64_t a1)
{
}

void sub_10000D7E4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000D828(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[TSPDirectoryPackage componentFileURLForPackageURL:v3 packageLocator:*(void *)(a1 + 32)];
  id v22 = 0;
  id v21 = 0;
  unsigned int v5 = [v4 getResourceValue:&v22 forKey:NSURLFileSizeKey error:&v21];
  id v6 = v22;
  id v7 = v21;
  if (v5)
  {
    id v20 = 0;
    id v19 = 0;
    unsigned int v8 = [v4 getResourceValue:&v20 forKey:NSURLContentModificationDateKey error:&v19];
    id v9 = v20;
    id v10 = v19;

    if (v8)
    {
      uint64_t v11 = -[TSPPackageEntryInfo initWithEncodedLength:lastModificationDate:CRC:]([TSPPackageEntryInfo alloc], "initWithEncodedLength:lastModificationDate:CRC:", [v6 unsignedLongLongValue], v9, 0);
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8);
      uint64_t v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 40) = v11;
      goto LABEL_11;
    }
    id v7 = v10;
  }
  else
  {
    id v9 = 0;
  }
  if (TSUDefaultCat_init_token != -1) {
    dispatch_once(&TSUDefaultCat_init_token, &stru_1001C57C0);
  }
  uint64_t v13 = TSUDefaultCat_log_t;
  if (os_log_type_enabled((os_log_t)v13, OS_LOG_TYPE_ERROR))
  {
    uint64_t v14 = [v4 path];
    id v15 = (objc_class *)objc_opt_class();
    NSStringFromClass(v15);
    id v16 = (id)objc_claimAutoreleasedReturnValue();
    unsigned __int8 v17 = [v7 domain];
    id v18 = [v7 code];
    *(_DWORD *)buf = 138413314;
    uint64_t v24 = v14;
    __int16 v25 = 2114;
    id v26 = v16;
    __int16 v27 = 2114;
    v28 = v17;
    __int16 v29 = 2048;
    id v30 = v18;
    __int16 v31 = 2112;
    id v32 = v7;
    _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v13, OS_LOG_TYPE_ERROR, "Failed to retrieve encoded length and last modification date for path: %@. errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", buf, 0x34u);
  }
  id v10 = v7;
LABEL_11:
}

void sub_10000DACC(_Unwind_Exception *a1)
{
  id v10 = v8;

  _Unwind_Resume(a1);
}

void sub_10000DB34(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000DE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id a26)
{
  _Block_object_dispose(&a21, 8);
  _Block_object_dispose((const void *)(v29 - 112), 8);

  _Unwind_Resume(a1);
}

void sub_10000DEB0(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000DEF4(void *a1, void *a2)
{
  id v3 = a2;
  id v4 = +[TSPDirectoryPackage componentFileURLForPackageURL:v3 packageLocator:a1[4]];
  unsigned int v5 = [TSUFileIOChannel alloc];
  uint64_t v6 = *(void *)(a1[6] + 8);
  id obj = *(id *)(v6 + 40);
  id v7 = [(TSUFileIOChannel *)v5 initForReadingURL:v4 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  uint64_t v8 = *(void *)(a1[5] + 8);
  id v9 = *(void **)(v8 + 40);
  *(void *)(v8 + 40) = v7;

  if (!*(void *)(*(void *)(a1[5] + 8) + 40))
  {
    if (TSUDefaultCat_init_token != -1) {
      dispatch_once(&TSUDefaultCat_init_token, &stru_1001C5828);
    }
    id v10 = TSUDefaultCat_log_t;
    if (os_log_type_enabled((os_log_t)v10, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = (objc_class *)objc_opt_class();
      NSStringFromClass(v11);
      id v12 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v13 = [*(id *)(*(void *)(a1[6] + 8) + 40) domain];
      id v14 = [*(id *)(*(void *)(a1[6] + 8) + 40) code];
      uint64_t v15 = *(void *)(*(void *)(a1[6] + 8) + 40);
      *(_DWORD *)buf = 138413314;
      id v18 = v4;
      __int16 v19 = 2114;
      id v20 = v12;
      __int16 v21 = 2114;
      id v22 = v13;
      __int16 v23 = 2048;
      id v24 = v14;
      __int16 v25 = 2112;
      uint64_t v26 = v15;
      _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v10, OS_LOG_TYPE_ERROR, "Can't read %@. errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", buf, 0x34u);
    }
  }
}

void sub_10000E0F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000E144(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000E4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31)
{
  _Unwind_Resume(a1);
}

void sub_10000E578(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t sub_10000E5BC(uint64_t a1)
{
  +[TSUAssertionHandler _atomicIncrementAssertCount];
  if (TSUAssertCat_init_token != -1) {
    dispatch_once(&TSUAssertCat_init_token, &stru_1001C5890);
  }
  if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
    sub_1001601E8();
  }
  uint64_t v2 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPDirectoryPackage copyComponent:toPackageURL:packageLocator:zipFileWriter:encryptionKey:canLink:completion:]_block_invoke");
  id v3 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPDirectoryPackage.mm"];
  +[TSUAssertionHandler handleFailureInFunction:v2 file:v3 lineNumber:116 isFatal:0 description:"Can't get package URL"];

  +[TSUAssertionHandler logBacktraceThrottled];
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void, void))(result + 16))(result, 0, 0);
  }
  return result;
}

void sub_10000E6D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000E6F4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000E738(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    (*(void (**)(void))(*(void *)(a1 + 80) + 16))();
    goto LABEL_22;
  }
  id v4 = +[TSPDirectoryPackage componentFileURLForPackageURL:v3 packageLocator:*(void *)(a1 + 32)];
  id v29 = 0;
  unsigned int v5 = [v4 checkResourceIsReachableAndReturnError:&v29];
  id v6 = v29;
  if (v5)
  {
    id v7 = +[TSPDirectoryPackage componentFileURLForPackageURL:*(void *)(a1 + 40) packageLocator:*(void *)(a1 + 48)];
    uint64_t v8 = +[NSFileManager defaultManager];
    id v9 = [v7 URLByDeletingLastPathComponent];
    id v28 = v6;
    unsigned int v10 = [v8 createDirectoryAtURL:v9 withIntermediateDirectories:1 attributes:0 error:&v28];
    id v11 = v28;

    if (v10)
    {
      id v12 = [*(id *)(a1 + 56) decryptionKey];
      uint64_t v13 = *(void *)(a1 + 64);
      uint64_t v14 = *(unsigned __int8 *)(a1 + 88);
      id v27 = v11;
      unsigned __int8 v15 = +[TSPFileManager linkOrCopyItemAtURL:v4 decryptionInfo:v12 toURL:v7 encryptionInfo:v13 canLink:v14 encodedLength:0 error:&v27];
      id v6 = v27;

      if (v15)
      {
        uint64_t v16 = 1;
LABEL_18:

        goto LABEL_19;
      }
      if (TSUDefaultCat_init_token != -1) {
        dispatch_once(&TSUDefaultCat_init_token, &stru_1001C58D8);
      }
      unsigned __int8 v17 = TSUDefaultCat_log_t;
      if (os_log_type_enabled((os_log_t)v17, OS_LOG_TYPE_ERROR))
      {
        __int16 v23 = (objc_class *)objc_opt_class();
        NSStringFromClass(v23);
        id v24 = (id)objc_claimAutoreleasedReturnValue();
        __int16 v25 = [v6 domain];
        id v26 = [v6 code];
        *(_DWORD *)buf = 138413570;
        __int16 v31 = v4;
        __int16 v32 = 2112;
        v33 = v7;
        __int16 v34 = 2114;
        id v35 = v24;
        __int16 v36 = 2114;
        v37 = v25;
        __int16 v38 = 2048;
        id v39 = v26;
        __int16 v40 = 2112;
        id v41 = v6;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v17, OS_LOG_TYPE_ERROR, "Failed to copy component file from %@ to %@. errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", buf, 0x3Eu);
      }
    }
    else
    {
      if (TSUDefaultCat_init_token != -1) {
        dispatch_once(&TSUDefaultCat_init_token, &stru_1001C58F8);
      }
      unsigned __int8 v17 = TSUDefaultCat_log_t;
      if (os_log_type_enabled((os_log_t)v17, OS_LOG_TYPE_ERROR))
      {
        __int16 v19 = (objc_class *)objc_opt_class();
        NSStringFromClass(v19);
        id v20 = (id)objc_claimAutoreleasedReturnValue();
        __int16 v21 = [v11 domain];
        id v22 = [v11 code];
        *(_DWORD *)buf = 138413570;
        __int16 v31 = v4;
        __int16 v32 = 2112;
        v33 = v7;
        __int16 v34 = 2114;
        id v35 = v20;
        __int16 v36 = 2114;
        v37 = v21;
        __int16 v38 = 2048;
        id v39 = v22;
        __int16 v40 = 2112;
        id v41 = v11;
        _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v17, OS_LOG_TYPE_ERROR, "Failed to copy component file from %@ to %@ because intermediate directories could not be created. errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", buf, 0x3Eu);
      }
      id v6 = v11;
    }

    uint64_t v16 = 0;
    goto LABEL_18;
  }
  uint64_t v16 = 0;
LABEL_19:
  uint64_t v18 = *(void *)(a1 + 72);
  if (v18) {
    (*(void (**)(uint64_t, uint64_t, id))(v18 + 16))(v18, v16, v6);
  }

LABEL_22:
}

void sub_10000EB14(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000EBC8(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000EC0C(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000EED8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000EF48(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000EF8C(void *a1, void *a2)
{
  id v3 = [a2 URLByAppendingPathComponent:a1[4]];
  id v16 = 0;
  uint64_t v4 = *(void *)(a1[5] + 8);
  id obj = 0;
  unsigned int v5 = [v3 getResourceValue:&v16 forKey:NSURLFileSizeKey error:&obj];
  id v6 = v16;
  objc_storeStrong((id *)(v4 + 40), obj);
  if (v5)
  {
    id v14 = 0;
    uint64_t v7 = *(void *)(a1[5] + 8);
    id v13 = 0;
    unsigned int v8 = [v3 getResourceValue:&v14 forKey:NSURLContentModificationDateKey error:&v13];
    id v9 = v14;
    objc_storeStrong((id *)(v7 + 40), v13);
    if (v8)
    {
      unsigned int v10 = -[TSPPackageEntryInfo initWithEncodedLength:lastModificationDate:CRC:]([TSPPackageEntryInfo alloc], "initWithEncodedLength:lastModificationDate:CRC:", [v6 unsignedLongLongValue], v9, 0);
      uint64_t v11 = *(void *)(a1[6] + 8);
      id v12 = *(void **)(v11 + 40);
      *(void *)(v11 + 40) = v10;
    }
  }
  else
  {
    id v9 = 0;
  }
}

void sub_10000F0D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000F300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose((const void *)(v26 - 80), 8);

  _Unwind_Resume(a1);
}

void sub_10000F34C(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [v3 URLByAppendingPathComponent:a1[4]];
  uint64_t v5 = *(void *)(a1[6] + 8);
  id obj = *(id *)(v5 + 40);
  uint64_t v6 = +[NSData dataWithContentsOfURL:v4 options:0 error:&obj];
  objc_storeStrong((id *)(v5 + 40), obj);
  uint64_t v7 = *(void *)(a1[5] + 8);
  unsigned int v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 40) = v6;
}

void sub_10000F3F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000F528(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_10000F560(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = [v7 URLByAppendingPathComponent:*(void *)(a1 + 32)];
  id v4 = [[TSUFileIOChannel alloc] initForReadingURL:v3 error:0];
  uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;
}

void sub_10000F5E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10000F6E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10000F718(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 URLByAppendingPathComponent:*(void *)(a1 + 32)];
  id v13 = 0;
  unsigned __int8 v5 = [v4 checkResourceIsReachableAndReturnError:&v13];
  id v6 = v13;
  id v7 = v6;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v5;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24)
    && (objc_msgSend(v6, "tsu_isNoSuchFileError") & 1) == 0)
  {
    if (TSUDefaultCat_init_token != -1) {
      dispatch_once(&TSUDefaultCat_init_token, &stru_1001C5960);
    }
    unsigned int v8 = TSUDefaultCat_log_t;
    if (os_log_type_enabled((os_log_t)v8, OS_LOG_TYPE_ERROR))
    {
      id v9 = (objc_class *)objc_opt_class();
      NSStringFromClass(v9);
      id v10 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v11 = [v7 domain];
      id v12 = [v7 code];
      *(_DWORD *)buf = 138413314;
      id v15 = v3;
      __int16 v16 = 2114;
      id v17 = v10;
      __int16 v18 = 2114;
      __int16 v19 = v11;
      __int16 v20 = 2048;
      id v21 = v12;
      __int16 v22 = 2112;
      __int16 v23 = v7;
      _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v8, OS_LOG_TYPE_ERROR, "Error checking if resource: %@ is available. errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", buf, 0x34u);
    }
  }
}

void sub_10000F8D8(_Unwind_Exception *a1)
{
  id v7 = v6;

  _Unwind_Resume(a1);
}

void sub_10000F92C(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000F9C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000FCDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10000FD98(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10000FDDC(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x2Cu);
}

id UnsafePointer()
{
  return +[NSBundle tsu_resourcesBundle];
}

void sub_10000FFE0(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000101D8(void *a1)
{
  uint64_t v2 = a1[4];
  id v3 = *(NSObject **)(v2 + 8);
  if (v3)
  {
    size_t size = dispatch_data_get_size(*(dispatch_data_t *)(v2 + 8));
    if (a1[6] >= size) {
      size_t v5 = size;
    }
    else {
      size_t v5 = a1[6];
    }
    if (a1[7] >= size - v5) {
      size_t v6 = size - v5;
    }
    else {
      size_t v6 = a1[7];
    }
    dispatch_data_t subrange = dispatch_data_create_subrange(v3, v5, v6);
  }
  else
  {
    dispatch_data_t subrange = 0;
  }
  dispatch_data_t v8 = subrange;
  (*(void (**)(void))(a1[5] + 16))();
}

uint64_t sub_100010324(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
}

uint64_t sub_1000103FC(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 8) != 0;
  return result;
}

id sub_1000104D0(uint64_t a1)
{
  return [*(id *)(a1 + 32) _close];
}

void sub_1000108AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100010A1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100010B7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100010DE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100010EC8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100010F34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100010FB4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100011074(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000110EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100011214(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000112A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000114B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000115E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100011798(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_1000117E0(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  size_t v5 = a2;
  size_t v6 = [(NSDictionary *)a4 objectForKeyedSubscript:@"TSPErrorIsTSPError"];
  if ([v6 BOOLValue]) {
    unsigned __int8 v7 = 1;
  }
  else {
    unsigned __int8 v7 = [(NSString *)v5 isEqualToString:@"com.apple.iWork.TSPersistence"];
  }

  return v7;
}

void sub_100011858(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_10001188C(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  size_t v6 = a2;
  unsigned __int8 v7 = a4;
  if ((unint64_t)(a3 - 11) <= 1
    && [(NSString *)v6 isEqualToString:@"com.apple.iWork.TSPersistence"])
  {
    unsigned __int8 v8 = 1;
  }
  else
  {
    uint64_t v9 = [(NSDictionary *)v7 objectForKeyedSubscript:@"TSPErrorIsRecoverable"];
    unsigned __int8 v8 = [v9 BOOLValue];
  }
  return v8;
}

void sub_100011920(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100011A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Block_object_dispose((const void *)(v20 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100011AC4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100011AD4(uint64_t a1)
{
}

void sub_100011ADC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v14 = a4;
  size_t v5 = [v14 objectForKeyedSubscript:@"TSPErrorHints"];
  size_t v6 = (char *)[v5 count];
  if (v6)
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
    uint64_t v9 = *(void *)(v7 + 40);
    unsigned __int8 v8 = (id *)(v7 + 40);
    if (v9)
    {
      id v10 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      if (!v10)
      {
        id v11 = objc_msgSend(objc_alloc((Class)NSMutableSet), "initWithCapacity:", &v6[(void)objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), "count")]);
        uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8);
        id v13 = *(void **)(v12 + 40);
        *(void *)(v12 + 40) = v11;

        id v10 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      }
      [v10 unionSet:v5];
    }
    else
    {
      objc_storeStrong(v8, v5);
    }
  }
}

void sub_100011BCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100011D5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_100011D9C(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  size_t v5 = a2;
  size_t v6 = v5;
  if (a3 == 7) {
    unsigned __int8 v7 = [(NSString *)v5 isEqualToString:@"com.apple.iWork.TSPersistence"];
  }
  else {
    unsigned __int8 v7 = 0;
  }

  return v7;
}

void sub_100011DF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_100011E0C(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  id v4 = [(NSDictionary *)a4 objectForKeyedSubscript:@"TSPIsUnsupportedVersionError"];
  unsigned __int8 v5 = [v4 BOOLValue];

  return v5;
}

void sub_100011E50(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_100011E6C(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  id v4 = [(NSDictionary *)a4 objectForKeyedSubscript:@"TSPIsCorruptZipOfPackageError"];
  unsigned __int8 v5 = [v4 BOOLValue];

  return v5;
}

void sub_100011EB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_100011ECC(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  unsigned __int8 v5 = a2;
  size_t v6 = v5;
  if ((unint64_t)(a3 - 9) > 1) {
    unsigned __int8 v7 = 0;
  }
  else {
    unsigned __int8 v7 = [(NSString *)v5 isEqualToString:@"com.apple.iWork.TSPersistence"];
  }

  return v7;
}

void sub_100011F24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL sub_100011F40(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  id v4 = a4;
  unsigned __int8 v5 = (objc_class *)objc_opt_class();
  size_t v6 = [(NSDictionary *)v4 objectForKeyedSubscript:@"TSPIsDataCorruptionError"];
  unsigned __int8 v7 = TSUCheckedDynamicCast(v5, (uint64_t)v6);
  unsigned __int8 v8 = [v7 BOOLValue];

  return v8;
}

void sub_100011FC0(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1000120D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_1000120F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, BOOL *a5)
{
  id v12 = a4;
  unsigned __int8 v7 = (objc_class *)objc_opt_class();
  unsigned __int8 v8 = [v12 objectForKeyedSubscript:@"TSPDataValidationReason"];
  uint64_t v9 = TSUCheckedDynamicCast(v7, (uint64_t)v8);
  uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  *a5 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_1000121AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

BOOL sub_1000121D8(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  id v4 = a4;
  unsigned __int8 v5 = (objc_class *)objc_opt_class();
  size_t v6 = [(NSDictionary *)v4 objectForKeyedSubscript:@"TSPIsDataDigestMismatchError"];
  unsigned __int8 v7 = TSUCheckedDynamicCast(v5, (uint64_t)v6);
  unsigned __int8 v8 = [v7 BOOLValue];

  return v8;
}

void sub_100012258(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_10001235C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_10001237C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, BOOL *a5)
{
  id v12 = a4;
  unsigned __int8 v7 = (objc_class *)objc_opt_class();
  unsigned __int8 v8 = [v12 objectForKeyedSubscript:@"TSPDataIdentifier"];
  uint64_t v9 = TSUCheckedDynamicCast(v7, (uint64_t)v8);
  uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  *a5 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_100012434(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10001253C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_10001255C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, BOOL *a5)
{
  id v12 = a4;
  unsigned __int8 v7 = (objc_class *)objc_opt_class();
  unsigned __int8 v8 = [v12 objectForKeyedSubscript:@"TSPExpectedDataDigest"];
  uint64_t v9 = TSUCheckedDynamicCast(v7, (uint64_t)v8);
  uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  *a5 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_100012614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10001271C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_10001273C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, BOOL *a5)
{
  id v12 = a4;
  unsigned __int8 v7 = (objc_class *)objc_opt_class();
  unsigned __int8 v8 = [v12 objectForKeyedSubscript:@"TSPActualDataDigest"];
  uint64_t v9 = TSUCheckedDynamicCast(v7, (uint64_t)v8);
  uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  *a5 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_1000127F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

BOOL sub_100012820(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  id v4 = a4;
  unsigned __int8 v5 = (objc_class *)objc_opt_class();
  size_t v6 = [(NSDictionary *)v4 objectForKeyedSubscript:@"TSPExpectedDataDigestMatch"];
  unsigned __int8 v7 = TSUCheckedDynamicCast(v5, (uint64_t)v6);
  unsigned __int8 v8 = [v7 BOOLValue];

  return v8;
}

void sub_1000128A0(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

BOOL sub_1000128D8(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  id v4 = a4;
  unsigned __int8 v5 = (objc_class *)objc_opt_class();
  size_t v6 = [(NSDictionary *)v4 objectForKeyedSubscript:@"TSPIsLikelyOSCorruption"];
  unsigned __int8 v7 = TSUCheckedDynamicCast(v5, (uint64_t)v6);
  unsigned __int8 v8 = [v7 BOOLValue];

  return v8;
}

void sub_100012958(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

BOOL sub_100012990(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  id v4 = a4;
  unsigned __int8 v5 = (objc_class *)objc_opt_class();
  size_t v6 = [(NSDictionary *)v4 objectForKeyedSubscript:@"TSPIsLikelyZeroBytesCorruption"];
  unsigned __int8 v7 = TSUCheckedDynamicCast(v5, (uint64_t)v6);
  unsigned __int8 v8 = [v7 BOOLValue];

  return v8;
}

void sub_100012A10(_Unwind_Exception *a1)
{
  id v4 = v3;

  _Unwind_Resume(a1);
}

void sub_100012B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_100012B44(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, BOOL *a5)
{
  id v12 = a4;
  unsigned __int8 v7 = (objc_class *)objc_opt_class();
  unsigned __int8 v8 = [v12 objectForKeyedSubscript:@"TSPDataCreationTime"];
  uint64_t v9 = TSUCheckedDynamicCast(v7, (uint64_t)v8);
  uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  *a5 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_100012BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100012D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_100012D24(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, BOOL *a5)
{
  id v12 = a4;
  unsigned __int8 v7 = (objc_class *)objc_opt_class();
  unsigned __int8 v8 = [v12 objectForKeyedSubscript:@"TSPDataCreationVersion"];
  uint64_t v9 = TSUCheckedDynamicCast(v7, (uint64_t)v8);
  uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  *a5 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_100012DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100012ED4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_100012EF4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, BOOL *a5)
{
  id v12 = a4;
  unsigned __int8 v7 = (objc_class *)objc_opt_class();
  unsigned __int8 v8 = [v12 objectForKeyedSubscript:@"TSPDataLength"];
  uint64_t v9 = TSUCheckedDynamicCast(v7, (uint64_t)v8);
  uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  *a5 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_100012FAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000130B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_1000130D4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, BOOL *a5)
{
  id v12 = a4;
  unsigned __int8 v7 = (objc_class *)objc_opt_class();
  unsigned __int8 v8 = [v12 objectForKeyedSubscript:@"TSPDataType"];
  uint64_t v9 = TSUCheckedDynamicCast(v7, (uint64_t)v8);
  uint64_t v10 = *(void *)(*(void *)(a1 + 32) + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;

  *a5 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_10001318C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10001350C(_Unwind_Exception *a1)
{
  sub_1000135A0(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_1000135A0(uint64_t a1)
{
  return a1;
}

void sub_1000139A0(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100013B2C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100013CB8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100013ECC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001417C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000141BC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100014280(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000145E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001466C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000146B0(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100014830(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100014864(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100014A64(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100014A8C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100014C9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100014CDC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000150FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100015174(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000151B8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000151FC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000152A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)TSPCryptoReadChannel;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_1000153A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

BOOL sub_1000153C0(uint64_t a1, unsigned int a2, int a3, void *a4, void *a5)
{
  uint64_t v9 = a4;
  id v10 = a5;
  if (!v10)
  {
    uint64_t v82 = 0;
    v83 = &v82;
    uint64_t v84 = 0x2020000000;
    char v85 = 1;
    uint64_t v12 = a1 + 32;
    id v13 = *(NSObject **)(*(void *)(a1 + 32) + 32);
    if (v13)
    {
      dispatch_data_t concat = dispatch_data_create_concat(v13, v9);

      uint64_t v9 = concat;
    }
    id v15 = v9;
    size_t size = dispatch_data_get_size(v9);
    if (size >= 0x14) {
      size_t v17 = 20;
    }
    else {
      size_t v17 = size;
    }
    size_t v18 = size - v17;
    dispatch_data_t subrange = dispatch_data_create_subrange(v15, size - v17, v17);
    uint64_t v20 = *(void **)(*(void *)v12 + 32);
    *(void *)(*(void *)v12 + 32) = subrange;

    uint64_t v9 = dispatch_data_create_subrange(v15, 0, v18);
    size_t v21 = dispatch_data_get_size(v9);
    if (a2 && !v21)
    {
      dispatch_data_t v22 = (dispatch_data_t)&_dispatch_data_empty;
      id v23 = &_dispatch_data_empty;
      id v24 = *(_CCCryptor **)(*(void *)v12 + 56);
      if (v24)
      {
        size_t OutputLength = CCCryptorGetOutputLength(v24, 0, 1);
        size_t v26 = OutputLength;
        if (OutputLength)
        {
          id v27 = malloc_type_malloc(OutputLength, 0x6FF13CCDuLL);
          *((unsigned char *)v83 + 24) = v27 != 0;
          if (v27) {
            goto LABEL_18;
          }
          +[TSUAssertionHandler _atomicIncrementAssertCount];
          if (TSUAssertCat_init_token != -1) {
            dispatch_once(&TSUAssertCat_init_token, &stru_1001C5DD0);
          }
          if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
            sub_100160994();
          }
          id v28 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPCryptoReadChannel readWithHandler:]_block_invoke");
          id v29 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoReadChannel.mm"];
          +[TSUAssertionHandler handleFailureInFunction:v28 file:v29 lineNumber:122 isFatal:0 description:"Failed to allocate buffer for finalizing decryption"];

          +[TSUAssertionHandler logBacktraceThrottled];
          if (*((unsigned char *)v83 + 24))
          {
LABEL_18:
            size_t dataOutMoved = 0;
            uint64_t v30 = CCCryptorFinal(*(CCCryptorRef *)(*(void *)v12 + 56), v27, v26, &dataOutMoved);
            *((unsigned char *)v83 + 24) = v30 == 0;
            if (v30)
            {
              int v31 = +[TSUAssertionHandler _atomicIncrementAssertCount];
              if (TSUAssertCat_init_token != -1) {
                dispatch_once(&TSUAssertCat_init_token, &stru_1001C5DF0);
              }
              if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
                sub_1001608F0(v31);
              }
              __int16 v32 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPCryptoReadChannel readWithHandler:]_block_invoke");
              v33 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoReadChannel.mm"];
              +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v32, v33, 127, 0, "Finalizing decryption failed: CCCryptorFinal status %i", v30);

              +[TSUAssertionHandler logBacktraceThrottled];
            }
            if (dataOutMoved)
            {
              dispatch_data_t v22 = dispatch_data_create(v27, dataOutMoved, 0, _dispatch_data_destructor_free);
            }
            else
            {
              free(v27);
              dispatch_data_t v22 = (dispatch_data_t)&_dispatch_data_empty;
            }
          }
          else
          {
            dispatch_data_t v22 = (dispatch_data_t)&_dispatch_data_empty;
          }
        }
      }
      if (*(void *)(*(void *)v12 + 64) != 16)
      {
        +[TSUAssertionHandler _atomicIncrementAssertCount];
        if (TSUAssertCat_init_token != -1) {
          dispatch_once(&TSUAssertCat_init_token, &stru_1001C5E10);
        }
        if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
          sub_100160854();
        }
        v68 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPCryptoReadChannel readWithHandler:]_block_invoke");
        v69 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoReadChannel.mm"];
        +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v68, v69, 143, 0, "Failed to read and discard the initial random block; only read %zu bytes",
          *(void *)(*(void *)v12 + 64));

        +[TSUAssertionHandler logBacktraceThrottled];
      }
      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

LABEL_88:
      BOOL v11 = *((unsigned char *)v83 + 24) != 0;
      _Block_object_dispose(&v82, 8);
      goto LABEL_89;
    }
    unsigned int v73 = a2;
    size_t dataOutMoved = 0;
    p_size_t dataOutMoved = &dataOutMoved;
    uint64_t v80 = 0x2020000000;
    uint64_t v81 = 0;
    size_t v34 = v21 + 16;
    id v35 = malloc_type_malloc(v21 + 16, 0xEBD842D2uLL);
    __int16 v36 = v35;
    if (v35)
    {
      v37 = dispatch_data_create(v35, v34, 0, _dispatch_data_destructor_free);
      *((unsigned char *)v83 + 24) = v37 != 0;
      if (v37)
      {
LABEL_35:
        applier[0] = _NSConcreteStackBlock;
        applier[1] = 3221225472;
        applier[2] = sub_100016250;
        applier[3] = &unk_1001C5E98;
        applier[4] = *(void *)v12;
        applier[5] = &v82;
        applier[7] = v34;
        applier[8] = v36;
        applier[6] = &dataOutMoved;
        dispatch_data_apply(v9, applier);
        if (*((unsigned char *)v83 + 24))
        {
          uint64_t v41 = *(void *)(*(void *)v12 + 64);
          v42 = p_dataOutMoved;
          size_t v43 = 16 - v41 >= p_dataOutMoved[3] ? p_dataOutMoved[3] : 16 - v41;
          *(void *)(*(void *)v12 + 64) = v43 + v41;
          size_t v44 = v42[3];
          if (v44 != v43 || a3)
          {
            if (a3)
            {
              size_t v76 = 0;
              data = v37;
              size_t v45 = CCCryptorGetOutputLength(*(CCCryptorRef *)(*(void *)v12 + 56), 0, 1);
              size_t v46 = v45;
              uint64_t v72 = a1;
              if (!v45) {
                goto LABEL_57;
              }
              v47 = (char *)malloc_type_malloc(v45, 0xFAAA56E0uLL);
              *((unsigned char *)v83 + 24) = v47 != 0;
              if (v47) {
                goto LABEL_49;
              }
              +[TSUAssertionHandler _atomicIncrementAssertCount];
              if (TSUAssertCat_init_token != -1) {
                dispatch_once(&TSUAssertCat_init_token, &stru_1001C5EB8);
              }
              if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
                sub_100160B5C();
              }
              v48 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPCryptoReadChannel readWithHandler:]_block_invoke");
              v49 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoReadChannel.mm"];
              +[TSUAssertionHandler handleFailureInFunction:v48 file:v49 lineNumber:220 isFatal:0 description:"Failed to allocate buffer for finalizing decryption"];

              +[TSUAssertionHandler logBacktraceThrottled];
              v47 = 0;
              if (*((unsigned char *)v83 + 24))
              {
LABEL_49:
                v50 = v47;
                uint64_t v51 = CCCryptorFinal(*(CCCryptorRef *)(*(void *)v12 + 56), v47, v46, &v76);
                *((unsigned char *)v83 + 24) = v51 == 0;
                if (v51)
                {
                  int v52 = +[TSUAssertionHandler _atomicIncrementAssertCount];
                  if (TSUAssertCat_init_token != -1) {
                    dispatch_once(&TSUAssertCat_init_token, &stru_1001C5ED8);
                  }
                  if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
                    sub_100160AB8(v52);
                  }
                  v53 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPCryptoReadChannel readWithHandler:]_block_invoke");
                  v54 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoReadChannel.mm"];
                  +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v53, v54, 224, 0, "Finalizing decryption failed: CCCryptorFinal status %i", v51);

                  +[TSUAssertionHandler logBacktraceThrottled];
                }
              }
              else
              {
LABEL_57:
                v50 = 0;
              }
              uint64_t v57 = *(void *)(*(void *)v12 + 64);
              if (16 - v57 >= v76) {
                size_t v58 = v76;
              }
              else {
                size_t v58 = 16 - v57;
              }
              *(void *)(*(void *)v12 + 64) = v58 + v57;
              if (*(void *)(*(void *)v12 + 64) != 16)
              {
                +[TSUAssertionHandler _atomicIncrementAssertCount];
                if (TSUAssertCat_init_token != -1) {
                  dispatch_once(&TSUAssertCat_init_token, &stru_1001C5EF8);
                }
                if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
                  sub_100160A1C();
                }
                v59 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPCryptoReadChannel readWithHandler:]_block_invoke");
                v60 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoReadChannel.mm"];
                +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v59, v60, 229, 0, "Failed to read and discard the initial random block; only read %zu bytes",
                  *(void *)(*(void *)v12 + 64));

                +[TSUAssertionHandler logBacktraceThrottled];
              }
              v37 = data;
              dispatch_data_t v61 = dispatch_data_create_subrange(data, v43, p_dataOutMoved[3] - v43);
              a1 = v72;
              if (v76 == v58) {
                uint64_t v62 = v73;
              }
              else {
                uint64_t v62 = 0;
              }
              (*(void (**)(void, uint64_t, dispatch_data_t, void))(*(void *)(v72 + 40) + 16))(*(void *)(v72 + 40), v62, v61, 0);
              if (v76 == v58)
              {
                if (v50) {
                  free(v50);
                }
              }
              else
              {
                destructor[0] = _NSConcreteStackBlock;
                destructor[1] = 3221225472;
                destructor[2] = sub_100016860;
                destructor[3] = &unk_1001C5F18;
                destructor[4] = v50;
                dispatch_data_t v63 = dispatch_data_create(&v50[v58], v76 - v58, 0, destructor);
                (*(void (**)(void))(*(void *)(v72 + 40) + 16))();

                v37 = data;
              }
              v64 = *(_CCCryptor **)(*(void *)v12 + 56);
              if (v64)
              {
                CCCryptorRelease(v64);
                *(void *)(*(void *)v12 + 56) = 0;
              }
            }
            else
            {
              v55 = v37;
              dispatch_data_t v56 = dispatch_data_create_subrange(v37, v43, v44 - v43);
              (*(void (**)(void))(*(void *)(a1 + 40) + 16))();

              v37 = v55;
            }
          }
        }
LABEL_77:
        if (!*((unsigned char *)v83 + 24))
        {
          v65 = v37;
          uint64_t v66 = *(void *)(a1 + 40);
          v67 = +[NSError tsp_readCorruptedDocumentErrorWithUserInfo:0];
          (*(void (**)(uint64_t, uint64_t, void, void *))(v66 + 16))(v66, 1, 0, v67);

          v37 = v65;
        }

        _Block_object_dispose(&dataOutMoved, 8);
        goto LABEL_88;
      }
    }
    else
    {
      *((unsigned char *)v83 + 24) = 0;
    }
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    uint64_t v74 = a1 + 32;
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001C5E30);
    }
    uint64_t v38 = a1;
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100160BE4();
    }
    id v39 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPCryptoReadChannel readWithHandler:]_block_invoke");
    __int16 v40 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoReadChannel.mm"];
    +[TSUAssertionHandler handleFailureInFunction:v39 file:v40 lineNumber:152 isFatal:0 description:"Failed to allocate buffer for decryption"];

    +[TSUAssertionHandler logBacktraceThrottled];
    v37 = 0;
    a1 = v38;
    uint64_t v12 = v74;
    if (!*((unsigned char *)v83 + 24)) {
      goto LABEL_77;
    }
    goto LABEL_35;
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  BOOL v11 = 0;
LABEL_89:

  return v11;
}

void sub_100015FE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30)
{
  _Block_object_dispose(&a30, 8);
  _Block_object_dispose((const void *)(v34 - 136), 8);

  _Unwind_Resume(a1);
}

void sub_100016140(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100016184(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000161C8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001620C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

BOOL sub_100016250(void *a1, void *a2, uint64_t a3, char *a4, unint64_t a5)
{
  id v31 = a2;
  while (a5)
  {
    uint64_t v8 = a1[4];
    if (!*(void *)(v8 + 56))
    {
      uint64_t v11 = v8 + 40;
      uint64_t v9 = *(void *)(v8 + 40);
      uint64_t v10 = *(void *)(v11 + 8);
      size_t v12 = 16 - v10 >= a5 ? a5 : 16 - v10;
      memcpy((void *)(v9 + v10), a4, v12);
      *(void *)(a1[4] + 48) += v12;
      a4 += v12;
      a5 -= v12;
      uint64_t v13 = a1[4];
      if (*(void *)(v13 + 48) == 16)
      {
        uint64_t v14 = CCCryptorCreate(1u, 0, 1u, [*(id *)(v13 + 16) keyData], (size_t)objc_msgSend(*(id *)(a1[4] + 16), "keyLength"), *(const void **)(a1[4] + 40), (CCCryptorRef *)(a1[4] + 56));
        if (v14 || !*(void *)(a1[4] + 56))
        {
          unsigned int v15 = +[TSUAssertionHandler _atomicIncrementAssertCount];
          if (TSUAssertCat_init_token != -1) {
            dispatch_once(&TSUAssertCat_init_token, &stru_1001C5E50);
          }
          __int16 v16 = TSUAssertCat_log_t;
          if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 67110146;
            unsigned int v34 = v15;
            __int16 v35 = 2082;
            __int16 v36 = "-[TSPCryptoReadChannel readWithHandler:]_block_invoke_2";
            __int16 v37 = 2082;
            uint64_t v38 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoReadChannel.mm";
            __int16 v39 = 1024;
            int v40 = 171;
            __int16 v41 = 1024;
            int v42 = v14;
            _os_log_error_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d CCCryptorCreate() failed: %d", buf, 0x28u);
          }
          size_t v17 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPCryptoReadChannel readWithHandler:]_block_invoke");
          size_t v18 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoReadChannel.mm"];
          +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v17, v18, 171, 0, "CCCryptorCreate() failed: %d", v14);

          +[TSUAssertionHandler logBacktraceThrottled];
          *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 0;
        }
      }
    }
    if (*(unsigned char *)(*(void *)(a1[5] + 8) + 24))
    {
      __int16 v19 = *(_CCCryptor **)(a1[4] + 56);
      if (v19 && a5 != 0)
      {
        size_t dataOutMoved = 0;
        uint64_t v21 = a1[7];
        if (a5 >= v21 - 16) {
          size_t v22 = v21 - 16;
        }
        else {
          size_t v22 = a5;
        }
        uint64_t v23 = *(void *)(*(void *)(a1[6] + 8) + 24);
        uint64_t v24 = CCCryptorUpdate(v19, a4, v22, (void *)(a1[8] + v23), v21 - v23, &dataOutMoved);
        if (v24)
        {
          unsigned int v25 = +[TSUAssertionHandler _atomicIncrementAssertCount];
          if (TSUAssertCat_init_token != -1) {
            dispatch_once(&TSUAssertCat_init_token, &stru_1001C5E70);
          }
          size_t v26 = TSUAssertCat_log_t;
          if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 67110146;
            unsigned int v34 = v25;
            __int16 v35 = 2082;
            __int16 v36 = "-[TSPCryptoReadChannel readWithHandler:]_block_invoke";
            __int16 v37 = 2082;
            uint64_t v38 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoReadChannel.mm";
            __int16 v39 = 1024;
            int v40 = 184;
            __int16 v41 = 1024;
            int v42 = v24;
            _os_log_error_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d CCCryptorUpdate() failed: %d", buf, 0x28u);
          }
          id v27 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPCryptoReadChannel readWithHandler:]_block_invoke");
          id v28 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoReadChannel.mm"];
          +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v27, v28, 184, 0, "CCCryptorUpdate() failed: %d", v24);

          +[TSUAssertionHandler logBacktraceThrottled];
          *(unsigned char *)(*(void *)(a1[5] + 8) + 24) = 0;
        }
        a4 += v22;
        a5 -= v22;
        *(void *)(*(void *)(a1[6] + 8) + 24) += dataOutMoved;
      }
    }
  }
  BOOL v29 = *(unsigned char *)(*(void *)(a1[5] + 8) + 24) != 0;

  return v29;
}

void sub_1000166B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_10001670C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100016750(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100016794(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000167D8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001681C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100016860(uint64_t a1)
{
}

void sub_100016A2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100016A74(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100016AB8(uint64_t a1, unsigned int a2, void *a3, void *a4)
{
  data = a3;
  id v7 = a4;
  uint64_t v8 = v7;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    if (v7)
    {
      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
    }
    else
    {
      size_t size = dispatch_data_get_size(data);
      size_t v10 = size;
      if (!a2 || size)
      {
        id v26 = *(id *)(*(void *)(a1 + 32) + 24);
        id v11 = [v26 count];
        if (v10)
        {
          id v12 = v11;
          size_t v13 = 0;
          while (1)
          {
            uint64_t v14 = *(void *)(a1 + 32);
            size_t v15 = *(void *)(v14 + 72);
            if (v10 - v13 >= v15) {
              size_t v16 = *(void *)(v14 + 72);
            }
            else {
              size_t v16 = v10 - v13;
            }
            *(void *)(v14 + 72) = v15 - v16;
            dispatch_data_t subrange = dispatch_data_create_subrange(data, v13, v16);
            v13 += v16;
            id v18 = *(id *)(*(void *)(a1 + 32) + 80);
            if (v18 == v12) {
              unsigned int v19 = a2;
            }
            else {
              unsigned int v19 = 0;
            }
            if (v13 != v10) {
              unsigned int v19 = 0;
            }
            uint64_t v20 = *(void *)(*(void *)(a1 + 32) + 72) ? v19 : 1;
            uint64_t v21 = v18 == v12 ? v20 : 0;
            *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (*(uint64_t (**)(void, uint64_t, uint64_t, dispatch_data_t, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), v21, v20, subrange, 0);
            if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
              break;
            }
            if (v18 != v12 && ((v20 ^ 1) & 1) == 0)
            {
              [*(id *)(a1 + 32) _resetCryptor];
              uint64_t v22 = *(void *)(a1 + 32);
              unint64_t v23 = *(void *)(v22 + 80) + 1;
              *(void *)(v22 + 80) = v23;
              uint64_t v24 = *(void *)(a1 + 32);
              if (v23 >= (unint64_t)v12)
              {
                *(void *)(v24 + 72) = -1;
              }
              else
              {
                unsigned int v25 = [v26 objectAtIndexedSubscript:*(void *)(v24 + 80)];
                *(void *)(*(void *)(a1 + 32) + 72) = [v25 encodedLength];
              }
            }

            if (v13 >= v10) {
              goto LABEL_32;
            }
          }
        }
LABEL_32:
      }
      else
      {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
      }
    }
  }
}

void sub_100016CF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100016DE8(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x2Cu);
}

void sub_100016E00(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x28u);
}

void sub_100016FF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100017034(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000173CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100017434(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100017478(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001769C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000176C8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

intptr_t sub_10001770C(uint64_t a1)
{
  free(*(void **)(a1 + 40));
  uint64_t v2 = *(NSObject **)(a1 + 32);
  return dispatch_semaphore_signal(v2);
}

void sub_100017CA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100017D2C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100017D70(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100017DB4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100017DF8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100017E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  a9.super_class = (Class)TSPCryptoComponentWriteChannel;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

uint64_t sub_100017F3C(uint64_t a1, void *a2, uint64_t a3, char *a4, unint64_t a5)
{
  id v8 = a2;
  if (!*(void *)(*(void *)(a1 + 32) + 8))
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001C60D0);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100161110();
    }
    TSUSetCrashReporterInfo((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Tried to write data when already closed.", v25, v26, v27, v28, v29, v30, v31, (char)"-[TSPCryptoComponentWriteChannel _writeData:isDecryptedData:]_block_invoke");
    __int16 v32 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPCryptoComponentWriteChannel _writeData:isDecryptedData:]_block_invoke");
    v33 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoComponentWriteChannel.mm"];
    +[TSUAssertionHandler handleFailureInFunction:v32 file:v33 lineNumber:170 isFatal:1 description:"Tried to write data when already closed."];

    TSUCrashBreakpoint();
    abort();
  }
  if (a5)
  {
    while (1)
    {
      uint64_t v9 = *(void *)(a1 + 32);
      if (*(void *)(v9 + 64) <= 0x8FuLL)
      {
        if (![(id)v9 _resetBuffer]) {
          break;
        }
        uint64_t v9 = *(void *)(a1 + 32);
      }
      unint64_t v10 = *(void *)(v9 + 472);
      id v11 = [*(id *)(v9 + 16) preferredBlockSize];
      uint64_t v12 = *(void *)(a1 + 32);
      if (v10 >= (unint64_t)v11)
      {
        if (![(id)v12 _finalizeBlockForClosing:0]
          || ![*(id *)(a1 + 32) _initializeBlock])
        {
          break;
        }
        uint64_t v12 = *(void *)(a1 + 32);
        if (*(void *)(v12 + 64) <= 0x8FuLL)
        {
          if (![(id)v12 _resetBuffer]) {
            break;
          }
          uint64_t v12 = *(void *)(a1 + 32);
        }
      }
      uint64_t v13 = *(void *)(v12 + 64);
      uint64_t v14 = (char *)[*(id *)(v12 + 16) preferredBlockSize];
      if (a5 >= v13 - 16) {
        size_t v15 = (char *)(v13 - 16);
      }
      else {
        size_t v15 = (char *)a5;
      }
      uint64_t v16 = *(void *)(a1 + 32);
      uint64_t v17 = *(void *)(v16 + 472);
      if (v15 >= &v14[-v17]) {
        size_t v18 = (size_t)&v14[-v17];
      }
      else {
        size_t v18 = (size_t)v15;
      }
      if (*(unsigned char *)(a1 + 40))
      {
        *(void *)(v16 + 472) = v18 + v17;
        CCHmacUpdate((CCHmacContext *)(*(void *)(a1 + 32) + 80), a4, v18);
        uint64_t v16 = *(void *)(a1 + 32);
      }
      size_t dataOutMoved = 0;
      if (CCCryptorUpdate(*(CCCryptorRef *)(v16 + 72), a4, v18, (void *)(*(void *)(v16 + 40) + *(void *)(v16 + 56)), *(void *)(v16 + 64), &dataOutMoved))
      {
        break;
      }
      if (dataOutMoved)
      {
        uint64_t v19 = *(void *)(a1 + 32);
        uint64_t v20 = *(void **)(v19 + 8);
        dispatch_data_t subrange = dispatch_data_create_subrange(*(dispatch_data_t *)(v19 + 48), *(void *)(v19 + 56), dataOutMoved);
        [v20 writeData:subrange];

        size_t v22 = dataOutMoved;
        *(void *)(*(void *)(a1 + 32) + 56) += dataOutMoved;
        *(void *)(*(void *)(a1 + 32) + 64) -= v22;
        *(void *)(*(void *)(a1 + 32) + 464) += v22;
      }
      a4 += v18;
      a5 -= v18;
      if (!a5) {
        goto LABEL_24;
      }
    }
    uint64_t v23 = 0;
  }
  else
  {
LABEL_24:
    uint64_t v23 = 1;
  }

  return v23;
}

void sub_1000181FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100018244(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100018308(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  _Unwind_Resume(a1);
}

void sub_1000189D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100018A64(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100018AA8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100018AEC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100018B30(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100018B74(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100018C88(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100018D08(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100018E2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100018EC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100019004(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100019250(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100019290(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100019354(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001940C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001957C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12)
{
  _Unwind_Resume(a1);
}

void sub_1000195AC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000196AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100019790(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001983C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001991C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100019E60(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100019F04(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100019F48(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100019F8C(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001A0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10001A0D8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10001A0E8(uint64_t a1)
{
}

void sub_10001A0F0(uint64_t a1)
{
}

void sub_10001A30C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001A360(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001A424(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001A4B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001A560(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001A798(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001A7D8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001A998(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001A9C8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001AA70(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001AFD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001B098(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001B0DC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001B120(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001B164(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001B1FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001B334(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001B350(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001B420(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001B5F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001B644(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001B6EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001B790(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001B880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001B920(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x2Cu);
}

void sub_10001BA80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001BBA4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001BD8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001BDCC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001BFA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001C028(id a1)
{
  id v55 = 0;
  id v1 = +[NSRegularExpression regularExpressionWithPattern:@"Index\\/OperationStorage.*\\.iwa" options:0 error:&v55];
  id v2 = v55;
  uint64_t v3 = v2;
  if (!v1)
  {
    unsigned int v8 = +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001C63E0);
    }
    uint64_t v9 = TSUAssertCat_log_t;
    if (os_log_type_enabled((os_log_t)v9, OS_LOG_TYPE_ERROR))
    {
      unint64_t v10 = (objc_class *)objc_opt_class();
      NSStringFromClass(v10);
      id v11 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v12 = [v3 domain];
      id v13 = [v3 code];
      *(_DWORD *)buf = 67110914;
      unsigned int v58 = v8;
      __int16 v59 = 2082;
      v60 = "+[TSPPackageConverter regularRexpressionsForCachedCollaborationData]_block_invoke";
      __int16 v61 = 2082;
      uint64_t v62 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPPackageConverter.mm";
      __int16 v63 = 1024;
      int v64 = 156;
      __int16 v65 = 2114;
      id v66 = v11;
      __int16 v67 = 2114;
      v68 = v12;
      __int16 v69 = 2048;
      id v70 = v13;
      __int16 v71 = 2112;
      id v72 = v3;
      _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v9, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to create regular expression with error: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", buf, 0x4Au);
    }
    uint64_t v14 = (objc_class *)objc_opt_class();
    size_t v15 = NSStringFromClass(v14);
    uint64_t v16 = [v3 domain];
    id v52 = [v3 code];
    v50 = v16;
    TSUSetCrashReporterInfo((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Failed to create regular expression with error: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v17, v18, v19, v20, v21, v22, v23, (char)"+[TSPPackageConverter regularRexpressionsForCachedCollaborationData]_block_invoke");

    uint64_t v24 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "+[TSPPackageConverter regularRexpressionsForCachedCollaborationData]_block_invoke");
    uint64_t v25 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPPackageConverter.mm"];
    uint64_t v26 = (objc_class *)objc_opt_class();
    uint64_t v27 = NSStringFromClass(v26);
    uint64_t v28 = [v3 domain];
    +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v24, v25, 156, 1, "Failed to create regular expression with error: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v27, v28, [v3 code], v3, v50, v52, v3);

    TSUCrashBreakpoint();
    abort();
  }

  id v54 = 0;
  uint64_t v4 = +[NSRegularExpression regularExpressionWithPattern:@"Index\\/ActivityStream.*\\.iwa" options:0 error:&v54];
  id v5 = v54;
  if (!v4)
  {
    unsigned int v29 = +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001C6400);
    }
    uint64_t v30 = TSUAssertCat_log_t;
    if (os_log_type_enabled((os_log_t)v30, OS_LOG_TYPE_ERROR))
    {
      uint64_t v31 = (objc_class *)objc_opt_class();
      NSStringFromClass(v31);
      id v32 = (id)objc_claimAutoreleasedReturnValue();
      v33 = [v5 domain];
      id v34 = [v5 code];
      *(_DWORD *)buf = 67110914;
      unsigned int v58 = v29;
      __int16 v59 = 2082;
      v60 = "+[TSPPackageConverter regularRexpressionsForCachedCollaborationData]_block_invoke";
      __int16 v61 = 2082;
      uint64_t v62 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPPackageConverter.mm";
      __int16 v63 = 1024;
      int v64 = 160;
      __int16 v65 = 2114;
      id v66 = v32;
      __int16 v67 = 2114;
      v68 = v33;
      __int16 v69 = 2048;
      id v70 = v34;
      __int16 v71 = 2112;
      id v72 = v5;
      _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v30, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Failed to create regular expression with error: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", buf, 0x4Au);
    }
    __int16 v35 = (objc_class *)objc_opt_class();
    __int16 v36 = NSStringFromClass(v35);
    __int16 v37 = [v5 domain];
    id v53 = [v5 code];
    uint64_t v51 = v37;
    TSUSetCrashReporterInfo((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Failed to create regular expression with error: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v38, v39, v40, v41, v42, v43, v44, (char)"+[TSPPackageConverter regularRexpressionsForCachedCollaborationData]_block_invoke");

    size_t v45 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "+[TSPPackageConverter regularRexpressionsForCachedCollaborationData]_block_invoke");
    size_t v46 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPPackageConverter.mm"];
    v47 = (objc_class *)objc_opt_class();
    v48 = NSStringFromClass(v47);
    v49 = [v5 domain];
    +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v45, v46, 160, 1, "Failed to create regular expression with error: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v48, v49, [v5 code], v5, v51, v53, v5);

    TSUCrashBreakpoint();
    abort();
  }
  v56[0] = v1;
  v56[1] = v4;
  uint64_t v6 = +[NSArray arrayWithObjects:v56 count:2];
  id v7 = (void *)qword_1001EB320;
  qword_1001EB320 = v6;
}

void sub_10001C5A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001C6C4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001C708(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001C974(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001C9C8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001CB5C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001CC7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001CCAC(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = [*(id *)(a1 + 32) path:a2 matchesFilter:*(void *)(a1 + 40)];
  if (v3) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  }
  return v3 ^ 1;
}

void sub_10001D1F4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v4 - 136), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001D2B8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_10001D2C8(uint64_t a1)
{
}

uint64_t sub_10001D2D0(uint64_t result)
{
  *(unsigned char *)(*(void *)(result + 32) + 24) = 1;
  return result;
}

BOOL sub_10001D2E0(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5, void *a6)
{
  id v11 = a2;
  id v12 = a3;
  id v13 = a6;
  if ([*(id *)(a1 + 32) isCancelled])
  {
    BOOL v14 = 0;
  }
  else if ([*(id *)(a1 + 32) path:v11 matchesFilter:*(void *)(a1 + 40)])
  {
    BOOL v14 = 1;
  }
  else
  {
    size_t v15 = *(void **)(a1 + 32);
    uint64_t v16 = *(void *)(a1 + 48);
    uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8);
    id obj = *(id *)(v17 + 40);
    id v18 = [v15 newWriteChannelAtPath:v11 lastModificationDate:v12 size:a4 CRC:a5 packageWriter:v16 error:&obj];
    objc_storeStrong((id *)(v17 + 40), obj);
    if (v18)
    {
      objc_msgSend(*(id *)(a1 + 56), "becomeCurrentWithPendingUnitCount:", objc_msgSend(*(id *)(a1 + 56), "tsu_pendingUnitCountForIncompleteProgress:", a4));
      uint64_t v19 = *(void *)(*(void *)(a1 + 64) + 8);
      id v21 = *(id *)(v19 + 40);
      BOOL v14 = +[TSPFileManager copyDataFromReadChannel:v13 decryptionInfo:0 size:a4 toWriteChannel:v18 encryptionInfo:0 encodedLength:0 error:&v21];
      objc_storeStrong((id *)(v19 + 40), v21);
      [*(id *)(a1 + 56) resignCurrent];
      [v18 close];
    }
    else
    {
      BOOL v14 = 0;
    }
  }
  return v14;
}

void sub_10001D448(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001D4F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001D588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001D598(id a1)
{
  qword_1001EB330 = [@"Index" stringByAppendingString:@"/"];
  _objc_release_x1();
}

void sub_10001D64C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001D65C(id a1)
{
  qword_1001EB340 = [@"Data" stringByAppendingString:@"/"];
  _objc_release_x1();
}

void sub_10001D750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10001D768(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) += [v4 size];
}

void sub_10001D7C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10001D948(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15)
{
  _Block_object_dispose((const void *)(v18 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10001D984(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  unsigned int v8 = [v5 collapsedName];
  uint64_t v9 = v8;
  if (v8)
  {
    id v10 = v8;
  }
  else
  {
    id v10 = [v5 name];
  }
  id v11 = v10;

  id v12 = [v6 collapsedName];
  id v13 = v12;
  if (v12)
  {
    id v14 = v12;
  }
  else
  {
    id v14 = [v6 name];
  }
  size_t v15 = v14;

  unsigned int v16 = [*(id *)(a1 + 32) isDataPath:v11];
  unsigned int v17 = [*(id *)(a1 + 32) isDataPath:v15];
  if (((v16 ^ 1 | v17) & 1) == 0) {
    goto LABEL_15;
  }
  if ((v16 | v17 ^ 1) != 1) {
    goto LABEL_16;
  }
  if ((v16 ^ 1 | v17 ^ 1))
  {
    unsigned int v18 = [*(id *)(a1 + 32) isObjectArchivePath:v11];
    unsigned int v19 = [*(id *)(a1 + 32) isObjectArchivePath:v15];
    if ((v18 ^ 1 | v19))
    {
      if ((v18 | v19 ^ 1) == 1)
      {
        id v20 = [v5 offset];
        if (v20 < [v6 offset]) {
          uint64_t v21 = -1;
        }
        else {
          uint64_t v21 = 1;
        }
        goto LABEL_20;
      }
LABEL_16:
      uint64_t v21 = 1;
      goto LABEL_20;
    }
LABEL_15:
    uint64_t v21 = -1;
    goto LABEL_20;
  }
  id v22 = [v5 size];
  if (v22 > [v6 size]) {
    uint64_t v21 = -1;
  }
  else {
    uint64_t v21 = 1;
  }
LABEL_20:

  return v21;
}

void sub_10001DB20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001DB74(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v19 = a2;
  id v7 = [v19 collapsedName];
  unsigned int v8 = v7;
  if (v7)
  {
    id v9 = v7;
  }
  else
  {
    id v9 = [v19 name];
  }
  id v10 = v9;

  if ([*(id *)(a1 + 32) isCancelled])
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
    *a4 = 1;
  }
  else if ([v10 isEqualToString:@"Index.zip"] {
         && [*(id *)(a1 + 32) packageType] == (id)2
  }
         && ([*(id *)(*(void *)(a1 + 32) + 32) componentZipArchive],
             id v11 = objc_claimAutoreleasedReturnValue(),
             v11,
             v11))
  {
    id v12 = *(id **)(a1 + 32);
    id v13 = [v12[4] componentZipArchive];
    [v12 enumeratePackageEntriesWithZipArchive:v13 needsReadChannel:*(unsigned __int8 *)(a1 + 64) accessor:*(void *)(a1 + 48)];
  }
  else if (([*(id *)(a1 + 32) isDocumentPropertiesPath:v10] & 1) == 0 {
         && ([v10 hasSuffix:@"/"] & 1) == 0)
  }
  {
    if (*(unsigned char *)(a1 + 64))
    {
      id v14 = objc_msgSend(*(id *)(a1 + 40), "streamReadChannelForEntry:validateCRC:", v19, objc_msgSend(*(id *)(a1 + 32), "isObjectArchivePath:", v10));
    }
    else
    {
      id v14 = 0;
    }
    if (*(unsigned char *)(a1 + 64)) {
      BOOL v15 = v14 == 0;
    }
    else {
      BOOL v15 = 0;
    }
    char v16 = !v15;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v16;
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
    {
      uint64_t v17 = *(void *)(a1 + 48);
      unsigned int v18 = [v19 lastModificationDate];
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = (*(uint64_t (**)(uint64_t, void *, void *, id, id, void *))(v17 + 16))(v17, v10, v18, [v19 size], objc_msgSend(v19, "CRC"), v14);

      *a4 = *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) ^ 1;
      [v14 close];
    }
    else
    {
      *a4 = 1;
    }
  }
}

void sub_10001DDBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10001DFB0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001DFEC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001E2C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001E8DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_10001EA08(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001EA4C(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001EA90(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001F1A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, void *a12, void *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21)
{
  _Unwind_Resume(a1);
}

int64_t sub_10001F314(id a1, NSURL *a2, NSURL *a3)
{
  id v4 = a3;
  unint64_t v6 = [(NSURL *)a2 tsu_fileSize];
  unint64_t v7 = [(NSURL *)v4 tsu_fileSize];
  if (v6 > v7) {
    int64_t v8 = -1;
  }
  else {
    int64_t v8 = 1;
  }

  return v8;
}

void sub_10001F380(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001F3F8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001F4EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001F564(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001F740(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001F780(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001F844(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10001FEA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20,void *a21,void *a22,void *a23,void *a24,uint64_t a25,void *a26,uint64_t a27,void *a28,void *a29,void *a30)
{
  _Unwind_Resume(a1);
}

void sub_10001FFB4(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10001FFF8(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002003C(uint64_t a1, void *a2)
{
  id v2 = a2;
  if (v2)
  {
    if (UnsafePointer != -1) {
      dispatch_once(&UnsafePointer, &stru_1001C6680);
    }
    unsigned int v3 = UnsafePointer;
    if (os_log_type_enabled((os_log_t)v3, OS_LOG_TYPE_ERROR))
    {
      id v4 = (objc_class *)objc_opt_class();
      NSStringFromClass(v4);
      id v5 = (id)objc_claimAutoreleasedReturnValue();
      unint64_t v6 = [v2 domain];
      id v7 = [v2 code];
      unsigned int v8 = objc_msgSend(v2, "tsp_isRecoverable");
      uint64_t v9 = objc_msgSend(v2, "tsp_hintsDescription");
      id v10 = (void *)v9;
      CFStringRef v11 = &stru_1001D3790;
      int v12 = 138544642;
      id v13 = v5;
      __int16 v14 = 2114;
      if (v8) {
        CFStringRef v11 = @"recoverable=YES, ";
      }
      BOOL v15 = v6;
      __int16 v16 = 2048;
      id v17 = v7;
      __int16 v18 = 2114;
      CFStringRef v19 = v11;
      __int16 v20 = 2114;
      uint64_t v21 = v9;
      __int16 v22 = 2112;
      id v23 = v2;
      _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v3, OS_LOG_TYPE_ERROR, "Failed to close the package writer. error=errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) ", (uint8_t *)&v12, 0x3Eu);
    }
  }
}

void sub_1000201E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100020220(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000202F4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000204C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100020504(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000208DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22)
{
  _Unwind_Resume(a1);
}

void sub_100020958(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v6 storage];
  unsigned int v8 = [v7 decryptionInfo];

  uint64_t v9 = [*(id *)(a1 + 32) encryptionKey];
  BOOL v10 = UnsafePointer(v8, v9, (id)0x100000);

  if (v10)
  {
    if (UnsafePointer != -1) {
      dispatch_once(&UnsafePointer, &stru_1001C66E8);
    }
    CFStringRef v11 = UnsafePointer;
    if (os_log_type_enabled((os_log_t)v11, OS_LOG_TYPE_DEBUG))
    {
      int v12 = [v6 packageLocator];
      sub_100161B38(v12, v13, (os_log_t)v11);
    }

    [*(id *)(a1 + 40) removeObjectForKey:v5];
  }
}

void sub_100020AA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100020AE4(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100020B28(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100020B6C(id a1, NSError *a2)
{
  id v2 = a2;
  if (v2)
  {
    if (UnsafePointer != -1) {
      dispatch_once(&UnsafePointer, &stru_1001C6790);
    }
    unsigned int v3 = UnsafePointer;
    if (os_log_type_enabled((os_log_t)v3, OS_LOG_TYPE_ERROR))
    {
      id v4 = (objc_class *)objc_opt_class();
      NSStringFromClass(v4);
      id v5 = (id)objc_claimAutoreleasedReturnValue();
      id v6 = [(NSError *)v2 domain];
      NSInteger v7 = [(NSError *)v2 code];
      unsigned int v8 = [(NSError *)v2 tsp_isRecoverable];
      uint64_t v9 = [(NSError *)v2 tsp_hintsDescription];
      BOOL v10 = (void *)v9;
      CFStringRef v11 = &stru_1001D3790;
      int v12 = 138544642;
      id v13 = v5;
      __int16 v14 = 2114;
      if (v8) {
        CFStringRef v11 = @"recoverable=YES, ";
      }
      BOOL v15 = v6;
      __int16 v16 = 2048;
      NSInteger v17 = v7;
      __int16 v18 = 2114;
      CFStringRef v19 = v11;
      __int16 v20 = 2114;
      uint64_t v21 = v9;
      __int16 v22 = 2112;
      id v23 = v2;
      _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v3, OS_LOG_TYPE_ERROR, "Failed to truncate existing zip, errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) ", (uint8_t *)&v12, 0x3Eu);
    }
  }
}

void sub_100020D18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100020D50(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100020F6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

void sub_1000212FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{
  _Block_object_dispose((const void *)(v18 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100021374(uint64_t a1, void *a2)
{
  id v7 = a2;
  unsigned int v3 = [*(id *)(a1 + 32) originalPackage];
  id v4 = [v3 componentZipArchive];
  id v5 = [v7 name];
  id v6 = [v4 entryForName:v5];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) += [v6 size];
}

void sub_100021430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100021474(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000214B8(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "becomeCurrentWithPendingUnitCount:", objc_msgSend(*(id *)(a1 + 32), "tsu_pendingUnitCountForIncompleteProgress:", *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)));
  if (v3)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    if (v4) {
      (*(void (**)(uint64_t, id))(v4 + 16))(v4, v3);
    }
  }
  else
  {
    id v5 = [*(id *)(a1 + 40) zipArchiveWriter];
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = *(void *)(v6 + 144);
    unsigned int v8 = [*(id *)(v6 + 152) writeURL];
    BOOL v10 = _NSConcreteStackBlock;
    uint64_t v11 = 3221225472;
    int v12 = sub_100021628;
    id v13 = &unk_1001C6800;
    uint64_t v9 = *(void **)(a1 + 48);
    uint64_t v14 = *(void *)(a1 + 40);
    id v15 = v9;
    [v5 copyEntriesFromZipFileWriter:v7 readingFromURL:v8 options:0 completionHandler:&v10];
  }
  objc_msgSend(*(id *)(a1 + 32), "resignCurrent", v10, v11, v12, v13, v14);
}

void sub_1000215F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100021628(uint64_t a1, void *a2)
{
  id v8 = a2;
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 144);
  *(void *)(v3 + 144) = 0;

  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void **)(v5 + 152);
  *(void *)(v5 + 152) = 0;

  uint64_t v7 = *(void *)(a1 + 40);
  if (v7) {
    (*(void (**)(uint64_t, id))(v7 + 16))(v7, v8);
  }
}

void sub_1000216B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000217C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *a18)
{
  _Unwind_Resume(a1);
}

void sub_1000217F0(id *a1, void *a2)
{
  id v3 = a2;
  if (!v3)
  {
    uint64_t v7 = a1[4];
    if (*((unsigned char *)v7 + 160))
    {
      id v8 = (void *)v7[19];
      if (!v8)
      {
        +[TSUAssertionHandler _atomicIncrementAssertCount];
        if (TSUAssertCat_init_token != -1) {
          dispatch_once(&TSUAssertCat_init_token, &stru_1001C6870);
        }
        if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
          sub_100161D54();
        }
        uint64_t v9 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPFilePackageWriter closeWithQueue:completion:]_block_invoke");
        BOOL v10 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPFilePackageWriter.mm"];
        +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v9, v10, 281, 0, "invalid nil value for '%{public}s'", "_safeSaveAssistant");

        +[TSUAssertionHandler logBacktraceThrottled];
        id v8 = (void *)*((void *)a1[4] + 19);
      }
      uint64_t v11 = [v8 writeURL];

      if (!v11)
      {
        +[TSUAssertionHandler _atomicIncrementAssertCount];
        if (TSUAssertCat_init_token != -1) {
          dispatch_once(&TSUAssertCat_init_token, &stru_1001C6890);
        }
        if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
          sub_100161CB8();
        }
        int v12 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPFilePackageWriter closeWithQueue:completion:]_block_invoke");
        id v13 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPFilePackageWriter.mm"];
        +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 282, 0, "invalid nil value for '%{public}s'", "_safeSaveAssistant.writeURL");

        +[TSUAssertionHandler logBacktraceThrottled];
      }
      v24.receiver = a1[4];
      v24.super_class = (Class)TSPFilePackageWriter;
      uint64_t v14 = objc_msgSendSuper2(&v24, "zipArchiveWriter");
      id v15 = [v14 entriesCount];

      if (v15)
      {
        +[TSUAssertionHandler _atomicIncrementAssertCount];
        if (TSUAssertCat_init_token != -1) {
          dispatch_once(&TSUAssertCat_init_token, &stru_1001C68B0);
        }
        if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
          sub_100161C24();
        }
        __int16 v16 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPFilePackageWriter closeWithQueue:completion:]_block_invoke");
        NSInteger v17 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPFilePackageWriter.mm"];
        +[TSUAssertionHandler handleFailureInFunction:v16 file:v17 lineNumber:284 isFatal:0 description:"Only the delayed zip archive writer should have entries"];

        +[TSUAssertionHandler logBacktraceThrottled];
      }
      v23.receiver = a1[4];
      v23.super_class = (Class)TSPFilePackageWriter;
      uint64_t v18 = objc_msgSendSuper2(&v23, "zipArchiveWriter");
      CFStringRef v19 = dispatch_get_global_queue(0, 0);
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      v20[2] = sub_100021DEC;
      v20[3] = &unk_1001C68D8;
      v20[4] = a1[4];
      id v22 = a1[6];
      id v21 = a1[5];
      [v18 closeWithQueue:v19 completion:v20];

      uint64_t v6 = v22;
LABEL_25:

      goto LABEL_27;
    }
  }
  uint64_t v4 = (void (**)(void, void))a1[6];
  if (v4)
  {
    uint64_t v5 = a1[5];
    if (!v5)
    {
      ((void (**)(void, id))v4)[2](v4, v3);
      goto LABEL_27;
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100021D0C;
    block[3] = &unk_1001C6850;
    uint64_t v27 = v4;
    id v26 = v3;
    dispatch_async(v5, block);

    uint64_t v6 = v27;
    goto LABEL_25;
  }
LABEL_27:
}

void sub_100021C98(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100021D0C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_100021D20(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100021D64(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100021DA8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100021DEC(void *a1)
{
  id v2 = (void *)a1[4];
  id v3 = (void *)v2[19];
  uint64_t v4 = [v2 URL];
  id v12 = 0;
  unsigned __int8 v5 = [v3 endSaveWithSuccess:1 toURL:v4 addingAttributes:0 error:&v12];
  id v6 = v12;
  if (v6) {
    unsigned __int8 v5 = 1;
  }

  if ((v5 & 1) == 0)
  {
    id v6 = +[NSError tsp_saveDocumentErrorWithUserInfo:0];
  }
  uint64_t v7 = (void (**)(void, void))a1[6];
  if (v7)
  {
    id v8 = a1[5];
    if (v8)
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100021F48;
      block[3] = &unk_1001C6850;
      uint64_t v11 = v7;
      id v10 = v6;
      dispatch_async(v8, block);
    }
    else
    {
      ((void (**)(void, id))v7)[2](v7, v6);
    }
  }
}

void sub_100021F2C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t sub_100021F48(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_100022104(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10002274C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, void *a20,void *a21,void *a22,void *a23,void *a24,void *a25,void *a26,void *a27,void *a28)
{
  _Unwind_Resume(a1);
}

void sub_100022884(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000228C8(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002290C(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100022E04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object)
{
  _Unwind_Resume(a1);
}

void sub_100022EA8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100022EEC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100022F30(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100023304(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000233A0(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000233E4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4) {
    [*(id *)(a1 + 32) setError:v4];
  }
}

void sub_100023438(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10002344C(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100023500(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100023A58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17)
{
  _Unwind_Resume(a1);
}

void sub_100023B84(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100023BC8(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100023CDC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100023D90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100024098(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100024128(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002416C(id a1)
{
  TSULogCreateCategory("TSPPersistenceLogCat");
  UnsafePointer = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000242A8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100024458(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100024488(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t sub_1000244CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a1 + 32) + 16) + 16))();
}

void sub_1000245AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

intptr_t sub_1000245C8(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000247E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100024820(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100024944(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100024964(id *a1)
{
  if (a1)
  {
    id v2 = *a1;
    if (v2)
    {
      id v3 = [v2 domain];
      unsigned int v4 = [v3 isEqualToString:@"com.apple.iWork.TSUtility"];

      if (v4)
      {
        id v5 = [*a1 code];
        if (!v5)
        {
          id v6 = +[NSError tsp_readCorruptedDocumentErrorWithUserInfo:0];
          goto LABEL_10;
        }
        if (v5 == (id)1)
        {
          id v6 = +[NSError tsp_unknownReadErrorWithUserInfo:0];
          goto LABEL_10;
        }
        if (v5 == (id)2)
        {
          id v6 = +[NSError tsp_errorWithCode:3];
LABEL_10:
          *a1 = v6;
          return;
        }
        +[TSUAssertionHandler _atomicIncrementAssertCount];
        if (TSUAssertCat_init_token != -1) {
          dispatch_once(&TSUAssertCat_init_token, &stru_1001C6C78);
        }
        if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
          sub_1001620E0();
        }
        uint64_t v7 = +[NSString stringWithUTF8String:"void TSPConvertError(NSError *__autoreleasing *)"];
        id v8 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPDatabase.mm"];
        +[TSUAssertionHandler handleFailureInFunction:v7 file:v8 lineNumber:684 isFatal:0 description:"Bad error code"];

        +[TSUAssertionHandler logBacktraceThrottled];
      }
    }
  }
}

void sub_100024AFC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100024C04(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100024E38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100024E54(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100025040(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002505C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002524C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100025268(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100025540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100025710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100025720(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100025880(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100025B00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100025D00(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100026220(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002623C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100026518(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100026534(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000267B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000267CC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100026AD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100026AFC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100026B40(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100026D94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100026F7C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100026F98(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002741C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t *sub_100027460(uint64_t **a1, uint64_t *a2, uint64_t *a3)
{
  id v6 = a1 + 1;
  id v5 = a1[1];
  if (v5)
  {
    uint64_t v7 = *a2;
    while (1)
    {
      while (1)
      {
        id v8 = (uint64_t **)v5;
        uint64_t v9 = v5[4];
        if (v7 >= v9) {
          break;
        }
        id v5 = *v8;
        id v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      id v5 = v8[1];
      if (!v5)
      {
        id v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    id v8 = a1 + 1;
LABEL_10:
    id v10 = (uint64_t *)operator new(0x28uLL);
    v10[4] = *a3;
    sub_10002751C(a1, (uint64_t)v8, v6, v10);
    return v10;
  }
  return (uint64_t *)v8;
}

uint64_t *sub_10002751C(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  id v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  uint64_t result = sub_100027574(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *sub_100027574(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      id v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      id v3 = (uint64_t *)v2[2];
      unsigned int v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (int v8 = *(unsigned __int8 *)(v7 + 24), v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            uint64_t v9 = (uint64_t **)a2[2];
          }
          else
          {
            uint64_t v9 = (uint64_t **)v2[1];
            id v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              id v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *uint64_t v9 = v2;
            v2[2] = (uint64_t)v9;
            id v3 = v9[2];
            id v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          uint64_t *v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (int v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          uint64_t *v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            id v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          id v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        id v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        uint64_t *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      unsigned char *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void sub_10002770C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_10002770C(a1, *a2);
    sub_10002770C(a1, a2[1]);
    operator delete(a2);
  }
}

void sub_100027980(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000279E4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100027AD0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100027CC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100027D00(uint64_t a1, void *a2)
{
  id v5 = a2;
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3)
  {
    if (v5) {
      uint64_t v4 = 0;
    }
    else {
      uint64_t v4 = *(void *)(a1 + 40);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v3, 1, v4);
  }
}

void sub_100027D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100027D84(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100027F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_100027F98(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t sub_100027FDC(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, void))(result + 16))(result, 0);
  }
  return result;
}

void sub_1000280B8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100028294(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000282D4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000283D8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000284CC(uint64_t a1)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = *(void *)(*(void *)(a1 + 32) + 24) == 0;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    dispatch_data_t v2 = dispatch_data_create(*(const void **)(a1 + 56), *(void *)(a1 + 64), 0, 0);
    dispatch_suspend(*(dispatch_object_t *)(*(void *)(a1 + 32) + 8));
    dispatch_semaphore_t v3 = dispatch_semaphore_create(0);
    uint64_t v4 = *(void *)(a1 + 32);
    id v5 = *(void **)(v4 + 16);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_1000285FC;
    v7[3] = &unk_1001C6D58;
    v7[4] = v4;
    long long v9 = *(_OWORD *)(a1 + 40);
    int v6 = v3;
    int v8 = v6;
    [v5 writeData:v2 handler:v7];
    dispatch_semaphore_wait(v6, 0xFFFFFFFFFFFFFFFFLL);
  }
}

void sub_1000285E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1000285FC(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  id v8 = a4;
  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  int v10 = *(unsigned __int8 *)(v9 + 24);
  id v11 = v8;
  if (v8 && *(unsigned char *)(v9 + 24))
  {
    *(unsigned char *)(v9 + 24) = 0;
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 24), a4);
    id v8 = v11;
    int v10 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  }
  if (v10) {
    *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) += a3;
  }
  if (a2)
  {
    dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 32) + 8));
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
    id v8 = v11;
  }
}

id sub_100028774(uint64_t a1)
{
  return [*(id *)(a1 + 32) _close];
}

void sub_1000288D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100028908(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

id sub_10002899C(void *a1, uint64_t a2, uint64_t a3)
{
  return _[a1 putBytes:a2 count:a3];
}

void sub_1000289A8(void *a1)
{
  id cf = a1;
  [cf close];
  CFRelease(cf);
}

void sub_1000289F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_100028C34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100028C98(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100028D40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100029230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  _Unwind_Resume(a1);
}

void sub_10002937C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100029554(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100029594(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100029710(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100029890(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100029ACC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100029B20(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t sub_100029C54(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_100029C64(uint64_t a1)
{
}

uint64_t sub_100029C6C(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 56));
  return _objc_release_x1();
}

void sub_100029DC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if ((*(unsigned char *)(v2 + 64) & 1) != 0 && !*(void *)(v2 + 16))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v2 + 56));
    v4[0] = _NSConcreteStackBlock;
    v4[1] = 3221225472;
    v4[2] = sub_100029E9C;
    v4[3] = &unk_1001C6E50;
    v4[4] = *(void *)(a1 + 32);
    [WeakRetained performReadUsingAccessor:v4];

    *(unsigned char *)(*(void *)(a1 + 32) + 64) &= ~1u;
    uint64_t v2 = *(void *)(a1 + 32);
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), *(id *)(v2 + 16));
}

void sub_100029E8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100029E9C(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(void **)(a1 + 32);
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_100029FA8;
  v13[3] = &unk_1001C6E28;
  v13[4] = v4;
  id v5 = v3;
  id v14 = v5;
  id v12 = 0;
  id v6 = [v4 newDocumentPropertiesWithURL:v5 zipProvider:v13 error:&v12];
  id v7 = v12;
  id v8 = v12;
  uint64_t v9 = *(void *)(a1 + 32);
  int v10 = *(void **)(v9 + 16);
  *(void *)(v9 + 16) = v6;

  uint64_t v11 = *(void *)(a1 + 32);
  if (!*(void *)(v11 + 16)) {
    objc_storeStrong((id *)(v11 + 40), v7);
  }
}

void sub_100029F90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16)
{
  _Unwind_Resume(a1);
}

id sub_100029FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  unsigned int v4 = *(unsigned __int8 *)(v3 + 64);
  *(unsigned char *)(v3 + 64) = v4 & 0xFD;
  if ([*(id *)(a1 + 32) reloadZipArchiveIfNeededWithURLImpl:*(void *)(a1 + 40) isLazyLoading:(v4 >> 1) & 1 forceReload:0 error:a2])id v5 = *(id *)(*(void *)(a1 + 32) + 24); {
  else
  }
    id v5 = 0;
  return v5;
}

void sub_10002A228(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002A260(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002A2A4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002A404(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002A420(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002A5A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002A994(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002AA24(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002AB50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

void sub_10002AB70(uint64_t a1, void *a2)
{
}

uint64_t sub_10002AC28(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  unsigned int v3 = *(unsigned __int8 *)(v2 + 64);
  if ((v3 & 2) != 0)
  {
    *(unsigned char *)(v2 + 64) = v3 & 0xFD;
    uint64_t v2 = *(void *)(a1 + 32);
LABEL_4:
    [(id)v2 reloadZipArchiveIfNeededWithURLImpl:0 isLazyLoading:(v3 >> 1) & 1 forceReload:0 error:0];
    unsigned int v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    goto LABEL_6;
  }
  if (*(void *)(v2 + 24)) {
    goto LABEL_4;
  }
  unsigned int v4 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
LABEL_6:
  return v4();
}

void sub_10002AF04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
  _Block_object_dispose(&a19, 8);
  _Block_object_dispose(&a25, 8);

  _Block_object_dispose((const void *)(v33 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10002AF60(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = *(unsigned __int8 *)(a1 + 64);
  id v5 = *(void **)(a1 + 32);
  uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
  id obj = *(id *)(v6 + 40);
  id v7 = [v5 newZipArchiveFromPackageURL:v3 isLazyLoading:v4 error:&obj];
  objc_storeStrong((id *)(v6 + 40), obj);
  if (v7)
  {
    id v8 = *(void **)(a1 + 32);
    v39[0] = _NSConcreteStackBlock;
    v39[1] = 3221225472;
    v39[2] = sub_10002B624;
    v39[3] = &unk_1001C6F70;
    id v40 = v7;
    uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
    id v38 = *(id *)(v9 + 40);
    id v10 = [v8 newDocumentPropertiesWithURL:v3 zipProvider:v39 error:&v38];
    objc_storeStrong((id *)(v9 + 40), v38);
    if (!v10)
    {
      if (!*(unsigned char *)(a1 + 64))
      {
        if (TSUDefaultCat_init_token != -1) {
          dispatch_once(&TSUDefaultCat_init_token, &stru_1001C6F90);
        }
        uint64_t v18 = TSUDefaultCat_log_t;
        if (os_log_type_enabled((os_log_t)v18, OS_LOG_TYPE_ERROR))
        {
          uint64_t v33 = (objc_class *)objc_opt_class();
          NSStringFromClass(v33);
          id v34 = (id)objc_claimAutoreleasedReturnValue();
          __int16 v35 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) domain];
          id v36 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) code];
          uint64_t v37 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
          *(_DWORD *)buf = 138413314;
          id v43 = v3;
          __int16 v44 = 2114;
          id v45 = v34;
          __int16 v46 = 2114;
          id v47 = v35;
          __int16 v48 = 2048;
          id v49 = v36;
          __int16 v50 = 2112;
          uint64_t v51 = v37;
          _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v18, OS_LOG_TYPE_ERROR, "Failed to read document properties for URL: %@. errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", buf, 0x34u);
        }
      }
      goto LABEL_27;
    }
    uint64_t v11 = *(void *)(a1 + 32);
    id v12 = *(void **)(v11 + 16);
    if ((*(unsigned char *)(v11 + 64) & 1) == 0)
    {
      uint64_t v13 = [v12 documentUUID];
      id v14 = [v10 documentUUID];
      if ([v13 isEqual:v14])
      {
        id v15 = [*(id *)(*(void *)(a1 + 32) + 16) versionUUID];
        __int16 v16 = [v10 versionUUID];
        unsigned __int8 v17 = [v15 isEqual:v16];

        if (v17)
        {
          objc_storeStrong((id *)(*(void *)(a1 + 32) + 24), v7);
LABEL_20:
          *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
LABEL_27:

          goto LABEL_28;
        }
      }
      else
      {
      }
      if (TSUDefaultCat_init_token != -1) {
        dispatch_once(&TSUDefaultCat_init_token, &stru_1001C6FD0);
      }
      id v21 = TSUDefaultCat_log_t;
      if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_100162994(v21);
      }
      uint64_t v22 = +[NSError tsp_unknownReadErrorWithUserInfo:0];
      uint64_t v23 = *(void *)(*(void *)(a1 + 40) + 8);
      objc_super v24 = *(void **)(v23 + 40);
      *(void *)(v23 + 40) = v22;

      goto LABEL_27;
    }
    if (v12)
    {
      +[TSUAssertionHandler _atomicIncrementAssertCount];
      if (TSUAssertCat_init_token != -1) {
        dispatch_once(&TSUAssertCat_init_token, &stru_1001C6FB0);
      }
      if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_1001629D8();
      }
      CFStringRef v19 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPPackage reloadZipArchiveIfNeededWithURLImpl:isLazyLoading:forceReload:error:]_block_invoke");
      __int16 v20 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPPackage.mm"];
      +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v19, v20, 413, 0, "expected nil value for '%{public}s'", "_documentProperties");

      +[TSUAssertionHandler logBacktraceThrottled];
      uint64_t v11 = *(void *)(a1 + 32);
    }
    objc_storeStrong((id *)(v11 + 16), v10);
    *(unsigned char *)(*(void *)(a1 + 32) + 64) &= ~1u;
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 24), v7);
    goto LABEL_20;
  }
LABEL_28:
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    uint64_t v25 = *(void *)(*(void *)(a1 + 56) + 8);
    id v26 = v3;
    uint64_t v27 = *(void **)(v25 + 40);
    *(void *)(v25 + 40) = v26;
  }
  else
  {
    objc_storeStrong((id *)(*(void *)(a1 + 32) + 40), *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
    if (*(unsigned char *)(a1 + 64)) {
      goto LABEL_32;
    }
    if (TSUDefaultCat_init_token != -1) {
      dispatch_once(&TSUDefaultCat_init_token, &stru_1001C6FF0);
    }
    uint64_t v27 = TSUDefaultCat_log_t;
    if (os_log_type_enabled((os_log_t)v27, OS_LOG_TYPE_ERROR))
    {
      uint64_t v28 = (objc_class *)objc_opt_class();
      NSStringFromClass(v28);
      id v29 = (id)objc_claimAutoreleasedReturnValue();
      uint64_t v30 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) domain];
      id v31 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) code];
      id v32 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      *(_DWORD *)buf = 138544130;
      id v43 = v29;
      __int16 v44 = 2114;
      id v45 = v30;
      __int16 v46 = 2048;
      id v47 = v31;
      __int16 v48 = 2112;
      id v49 = v32;
      _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v27, OS_LOG_TYPE_ERROR, "Failed to reload document zip archive with error: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", buf, 0x2Au);
    }
  }

LABEL_32:
}

void sub_10002B554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

id sub_10002B624(uint64_t a1)
{
  return *(id *)(a1 + 32);
}

void sub_10002B62C(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002B670(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002B6B4(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002B6F8(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

id sub_10002B800(uint64_t a1)
{
  objc_storeStrong((id *)(*(void *)(a1 + 32) + 24), *(id *)(a1 + 40));
  objc_storeWeak((id *)(*(void *)(a1 + 32) + 56), *(id *)(a1 + 48));
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = v2[3];
  return [v2 didReloadZipArchive:v3 packageURL:0 error:0];
}

void sub_10002B954(uint64_t a1)
{
}

void sub_10002BA48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_10002BA70(uint64_t a1, void *a2)
{
  id v5 = a2;
  if ([v5 hasPrefix:@"Index"]
    && [v5 hasSuffix:@"iwa"])
  {
    unint64_t v3 = (unint64_t)[@"Index" length];
    uint64_t v4 = [v5 substringWithRange:v3 + 1, (char *)objc_msgSend(v5, "length") + ~v3 + ~(unint64_t)objc_msgSend(@"iwa", "length")];
    if ([v4 length]) {
      [*(id *)(a1 + 32) addObject:v4];
    }
  }
}

void sub_10002BB4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_10002BE34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002BEB0(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002BEF4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002C018(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002C330(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002C398(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002C3DC(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002C784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002C7F4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002C838(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002C87C(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002C8C0(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002CEC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13, void *a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_10002CFB4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002CFF8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002D03C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002D080(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002D0C4(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002D234(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002D484(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002D4E8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002D5E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002D828(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002D88C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002D94C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002D9E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002DACC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002DB78(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002DDCC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002DE30(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002E094(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002E0E8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002E358(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002E3BC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002E638(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002E6A0(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002E910(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002E974(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002EC1C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002EC5C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002ED38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002ED70(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10002EF58(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002EF98(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002F104(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002F2C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_10002F31C(uint64_t a1, int a2, void *a3, void *a4)
{
  id v9 = a3;
  id v7 = a4;
  int v8 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  if (v7 && !*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
  {
    [*(id *)(a1 + 32) setError:v7];
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
    int v8 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  }
  if (v9 && !v8) {
    [*(id *)(a1 + 40) writeData:v9];
  }
  if (a2) {
    [*(id *)(a1 + 40) close];
  }
}

void sub_10002F3DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

uint64_t sub_10002F3F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10002F50C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002F64C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002F790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  a9.super_class = (Class)TSPSnappyComponentWriteChannel;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void sub_10002F7D8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

BOOL sub_10002F8B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!*(void *)(v1 + 65560))
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001C73E8);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_1001630A8();
    }
    TSUSetCrashReporterInfo((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Already closed", v4, v5, v6, v7, v8, v9, v10, (char)"-[TSPSnappyComponentWriteChannel writeData:]_block_invoke");
    uint64_t v11 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPSnappyComponentWriteChannel writeData:]_block_invoke");
    id v12 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPSnappyComponentWriteChannel.mm"];
    +[TSUAssertionHandler handleFailureInFunction:v11 file:v12 lineNumber:37 isFatal:1 description:"Already closed"];

    TSUCrashBreakpoint();
    abort();
  }
  uint64_t v2 = *(NSObject **)(a1 + 40);
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472;
  applier[2] = sub_10002FA94;
  applier[3] = &unk_1001C7430;
  applier[4] = v1;
  return dispatch_data_apply(v2, applier);
}

void sub_10002FA34(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002FA50(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t sub_10002FA94(uint64_t a1, void *a2, uint64_t a3, char *a4, unint64_t a5)
{
  for (id i = a2; a5; a5 -= v11)
  {
    uint64_t v9 = *(void *)(a1 + 32);
    unint64_t v10 = *(void *)(v9 + 65552);
    if (v10 >= 0x10000)
    {
      +[TSUAssertionHandler _atomicIncrementAssertCount];
      if (TSUAssertCat_init_token != -1) {
        dispatch_once(&TSUAssertCat_init_token, &stru_1001C7408);
      }
      if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_100163130();
      }
      TSUSetCrashReporterInfo((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Invalid uncompressed length.", v14, v15, v16, v17, v18, v19, v20, (char)"-[TSPSnappyComponentWriteChannel writeData:]_block_invoke");
      id v21 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPSnappyComponentWriteChannel writeData:]_block_invoke");
      uint64_t v22 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPSnappyComponentWriteChannel.mm"];
      +[TSUAssertionHandler handleFailureInFunction:v21 file:v22 lineNumber:44 isFatal:1 description:"Invalid uncompressed length."];

      TSUCrashBreakpoint();
      abort();
    }
    if (a5 >= 0x10000 - v10) {
      size_t v11 = 0x10000 - v10;
    }
    else {
      size_t v11 = a5;
    }
    memcpy((void *)(v9 + v10 + 16), a4, v11);
    *(void *)(*(void *)(a1 + 32) + 65552) += v11;
    id v12 = *(void **)(a1 + 32);
    if (v12[8194] == 0x10000) {
      [v12 writeBlock];
    }
    a4 += v11;
  }

  return 1;
}

void sub_10002FC54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10002FC84(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10002FDCC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va1, a2);
  va_start(va, a2);
  uint64_t v5 = va_arg(va1, void);
  uint64_t v7 = va_arg(va1, void);
  unint64_t v3 = v2;

  snappy::UncheckedByteArraySink::~UncheckedByteArraySink((snappy::UncheckedByteArraySink *)va);
  snappy::ByteArraySource::~ByteArraySource((snappy::ByteArraySource *)va1);
  _Unwind_Resume(a1);
}

void sub_10002FE6C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  unint64_t v3 = (void *)v2[8195];
  if (v3)
  {
    if (v2[8194])
    {
      [v2 writeBlock];
      unint64_t v3 = *(void **)(*(void *)(a1 + 32) + 65560);
    }
    [v3 close];
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(void **)(v4 + 65560);
    *(void *)(v4 + 65560) = 0;
  }
}

void sub_10002FFA0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100030064(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100030194(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000302B4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003051C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003059C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000306C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003098C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id sub_1000309D0()
{
  if (qword_1001EB378 != -1) {
    dispatch_once(&qword_1001EB378, &stru_1001C7560);
  }
  v0 = (void *)qword_1001EB370;
  return v0;
}

void sub_100030AC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100030C18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100030D38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

id sub_100030D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) writeData:a2 toRelativePath:a3 allowEncryption:0 error:*(void *)(a1 + 40)];
}

void sub_100030E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

id sub_100030E3C(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  uint64_t v6 = [*(id *)(a1 + 32) URLByAppendingPathComponent:a3];
  id v7 = [v5 writeToURL:v6 options:0 error:*(void *)(a1 + 40)];

  return v7;
}

void sub_100030EA8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000310EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000311D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000312F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000314E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100031534(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100031708()
{
}

void sub_100031710()
{
}

void sub_100031784(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000317E8(id a1)
{
  qword_1001EB350 = [@"Metadata" stringByAppendingPathComponent:@"Properties.plist"];
  _objc_release_x1();
}

void sub_100031888(id a1)
{
  qword_1001EB360 = [@"Metadata" stringByAppendingPathComponent:@"DocumentIdentifier"];
  _objc_release_x1();
}

void sub_100031D0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100031D48(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100031D8C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10003205C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000320A8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000321E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000322EC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100032330()
{
}

void sub_1000323E8(id a1)
{
  v3[0] = @"documentUUID";
  v3[1] = @"versionUUID";
  v3[2] = @"shareUUID";
  v3[3] = @"fileFormatVersion";
  v3[4] = @"privateUUID";
  v3[5] = @"revision";
  v3[6] = @"stableDocumentUUID";
  uint64_t v1 = +[NSArray arrayWithObjects:v3 count:7];
  uint64_t v2 = (void *)qword_1001EB370;
  qword_1001EB370 = v1;
}

void sub_10003257C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10003262C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100032808(_Unwind_Exception *a1)
{
  id v5 = v4;

  _Unwind_Resume(a1);
}

void sub_1000329D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100032A14(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100032BC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100032BE0(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100032D18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100032D34(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t UnsafePointer(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = v3;
  id v6 = v4;
  if (v5 == v6)
  {
    unsigned int v14 = 1;
  }
  else
  {
    id v7 = [v5 cryptoKey];
    uint64_t v8 = [v6 cryptoKey];
    if (SFUEqualCryptoKeys((unint64_t)v7, (unint64_t)v8)
      && (id v9 = [v5 preferredBlockSize], v9 == objc_msgSend(v6, "preferredBlockSize")))
    {
      unint64_t v10 = [v5 blockInfos];
      size_t v11 = [v6 blockInfos];
      if (v10 == v11)
      {
        unsigned int v14 = 1;
      }
      else
      {
        id v12 = [v5 blockInfos];
        uint64_t v13 = [v6 blockInfos];
        unsigned int v14 = [v12 isEqual:v13];
      }
    }
    else
    {
      unsigned int v14 = 0;
    }
  }
  return v14 ^ 1;
}

void sub_100032ECC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL UnsafePointer(void *a1, void *a2, id a3)
{
  unint64_t v5 = a1;
  unint64_t v6 = a2;
  if (v5 | v6)
  {
    uint64_t v8 = [(id)v5 cryptoKey];
    BOOL v7 = !SFUEqualCryptoKeys((unint64_t)v8, v6) || [(id)v5 preferredBlockSize] != a3;
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

void sub_100032FC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

TSPMutableCryptoInfoInternal *UnsafePointer(void *a1, uint64_t a2)
{
  id v3 = a1;
  id v4 = v3;
  if (!v3 || a2 == -1)
  {
    BOOL v7 = (TSPMutableCryptoInfoInternal *)v3;
  }
  else
  {
    if (!a2)
    {
      +[TSUAssertionHandler _atomicIncrementAssertCount];
      if (TSUAssertCat_init_token != -1) {
        dispatch_once(&TSUAssertCat_init_token, &stru_1001C75E0);
      }
      if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_100163524();
      }
      unint64_t v5 = +[NSString stringWithUTF8String:"id<TSPMutableCryptoInfo>  _Nonnull TSPMutableCryptoInfoForTranscodingToKey(SFUCryptoKey * _Nonnull __strong, size_t)"];
      unint64_t v6 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCryptoInfo.mm"];
      +[TSUAssertionHandler handleFailureInFunction:v5 file:v6 lineNumber:178 isFatal:0 description:"Preferred block size cannot be zero."];

      +[TSUAssertionHandler logBacktraceThrottled];
    }
    BOOL v7 = [[TSPMutableCryptoInfoInternal alloc] initWithCryptoKey:v4 preferredBlockSize:a2 blockInfos:0 decodedLength:0];
  }
  uint64_t v8 = v7;

  return v8;
}

void sub_10003313C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100033168(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000331AC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPDatabaseMessages.pb.cc", a4);
  TSP::_DatabaseData_default_instance_ = (uint64_t)off_1001C7648;
  *(void *)algn_1001EBFA8 = 0;
  qword_1001EBFB0 = 0;
  if (atomic_load_explicit(scc_info_DatabaseData_TSPDatabaseMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DatabaseData_TSPDatabaseMessages_2eproto);
  }
  qword_1001EBFB8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_DatabaseData_default_instance_, v4);
}

void sub_100033254(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPDatabaseMessages.pb.cc", a4);
  TSP::DatabaseDataArchive::DatabaseDataArchive((uint64_t)&TSP::_DatabaseDataArchive_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_DatabaseDataArchive_default_instance_, v4);
}

void sub_1000332C4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPDatabaseMessages.pb.cc", a4);
  TSP::_DatabaseImageDataArchive_default_instance_ = (uint64_t)off_1001C77A8;
  *(void *)algn_1001EC008 = 0;
  qword_1001EC010 = 0;
  if (atomic_load_explicit(scc_info_DatabaseImageDataArchive_TSPDatabaseMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DatabaseImageDataArchive_TSPDatabaseMessages_2eproto);
  }
  dword_1001EC020 = 0;
  qword_1001EC018 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_DatabaseImageDataArchive_default_instance_, v4);
}

void TSP::DatabaseData::~DatabaseData(TSP::DatabaseData *this)
{
  if (this != (TSP::DatabaseData *)&TSP::_DatabaseData_default_instance_)
  {
    uint64_t v2 = (TSP::DataReference *)*((void *)this + 3);
    if (v2)
    {
      TSP::DataReference::~DataReference(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::DatabaseData::~DatabaseData(this);
  operator delete();
}

uint64_t *sub_1000333D0(uint64_t *result)
{
  uint64_t v1 = *result;
  if (*result)
  {
    unint64_t v2 = v1 & 0xFFFFFFFFFFFFFFFELL;
    if (!*(void *)(v1 & 0xFFFFFFFFFFFFFFFELL))
    {
      id v3 = *(void **)(v2 + 8);
      if (v3 != *(void **)(v2 + 16))
      {
        google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)(v2 + 8));
        id v3 = *(void **)(v2 + 8);
      }
      if (v3)
      {
        *(void *)(v2 + 16) = v3;
        operator delete(v3);
      }
      operator delete();
    }
  }
  return result;
}

uint64_t TSP::DatabaseData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

google::protobuf::Arena **TSP::DatabaseData::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::DataReference::Clear(this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::DatabaseData::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v17 = a2;
  if ((sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v6 = (google::protobuf::internal *)((char *)v17 + 1);
      unsigned int v7 = *(unsigned __int8 *)v17;
      if ((*(char *)v17 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v17, (const char *)(v8 - 128));
      uint64_t v17 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unint64_t v6 = TagFallback;
      unsigned int v7 = v15;
LABEL_7:
      if (v7 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
          if (*v5) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<TSP::DataReference>(v13);
          *(void *)(a1 + 24) = v12;
          unint64_t v6 = v17;
        }
        size_t v11 = sub_100033658(a3, v12, v6);
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 80) = v7 - 1;
          return v17;
        }
        if (*v5)
        {
          unint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          unint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
          unint64_t v6 = v17;
        }
        size_t v11 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      }
      uint64_t v17 = v11;
      if (!v11) {
        return 0;
      }
      if (sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92))) {
        return v17;
      }
    }
    unint64_t v6 = (google::protobuf::internal *)((char *)v17 + 2);
LABEL_6:
    uint64_t v17 = v6;
    goto LABEL_7;
  }
  return v17;
}

google::protobuf::internal *sub_100033658(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  unint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    unint64_t v6 = result;
  }
  else
  {
    unint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::DataReference::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::DatabaseData::_InternalSerialize(TSP::DatabaseData *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v6 = (TSP::DataReference *)*((void *)this + 3);
    *a2 = 10;
    unsigned int v7 = *((_DWORD *)v6 + 5);
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unsigned int v9 = v7 >> 7;
      if (v7 >> 14)
      {
        uint64_t v8 = a2 + 3;
        do
        {
          *(v8 - 1) = v9 | 0x80;
          unsigned int v10 = v9 >> 7;
          ++v8;
          unsigned int v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v8 - 1) = v10;
      }
      else
      {
        a2[2] = v9;
        uint64_t v8 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v7;
      uint64_t v8 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::DataReference::_InternalSerialize(v6, v8, a3, a4);
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v12 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::DatabaseData::ByteSizeLong(TSP::DataReference **this)
{
  if ((_BYTE)this[2])
  {
    char v3 = TSP::DataReference::ByteSizeLong(this[3]);
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v3[((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::DatabaseData::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DatabaseData::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::DatabaseData::MergeFrom(void **this, const TSP::DatabaseData *a2)
{
  char v3 = this;
  id v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  if (*((unsigned char *)a2 + 16))
  {
    unint64_t v6 = (const TSP::DataReference *)*((void *)a2 + 3);
    *((_DWORD *)v3 + 4) |= 1u;
    unsigned int v7 = (void **)v3[3];
    if (!v7)
    {
      uint64_t v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        uint64_t v8 = (void *)*v8;
      }
      unsigned int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::DataReference>(v8);
      v3[3] = v7;
      unint64_t v6 = (const TSP::DataReference *)*((void *)a2 + 3);
    }
    if (v6) {
      unsigned int v9 = v6;
    }
    else {
      unsigned int v9 = (const TSP::DataReference *)&TSP::_DataReference_default_instance_;
    }
    return TSP::DataReference::MergeFrom(v7, v9);
  }
  return this;
}

void TSP::DatabaseData::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::DatabaseData::Clear(this);
    TSP::DatabaseData::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::DatabaseData::IsInitialized(TSP::DataReference **this)
{
  if ((_BYTE)this[2]) {
    return TSP::DataReference::IsInitialized(this[3]);
  }
  else {
    return 0;
  }
}

google::protobuf::Arena **sub_100033A68(google::protobuf::Arena **result, unint64_t *a2)
{
  uint64_t v2 = (unint64_t *)result;
  unint64_t v3 = *a2;
  if (*(unsigned char *)result)
  {
    if ((v3 & 1) == 0)
    {
      id v4 = sub_10003562C(a2);
      goto LABEL_6;
    }
  }
  else if ((v3 & 1) == 0)
  {
    return result;
  }
  id v4 = (google::protobuf::Arena **)((v3 & 0xFFFFFFFFFFFFFFFELL) + 8);
LABEL_6:
  return sub_100035870(v2, v4);
}

uint64_t TSP::DatabaseData::GetMetadata(TSP::DatabaseData *this)
{
  return *off_1001E97F8;
}

uint64_t TSP::DatabaseDataArchive::DatabaseDataArchive(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C76F8;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  if (atomic_load_explicit(scc_info_DatabaseDataArchive_TSPDatabaseMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DatabaseDataArchive_TSPDatabaseMessages_2eproto);
  }
  *(void *)(a1 + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 32) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 6google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = 1;
  return a1;
}

void TSP::DatabaseDataArchive::~DatabaseDataArchive(TSP::DatabaseDataArchive *this)
{
  uint64_t v2 = *((void *)this + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = *((void *)this + 4);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  if (this != (TSP::DatabaseDataArchive *)&TSP::_DatabaseDataArchive_default_instance_)
  {
    id v4 = (TSP::Reference *)*((void *)this + 5);
    if (v4)
    {
      TSP::Reference::~Reference(v4);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::DatabaseDataArchive::~DatabaseDataArchive(this);
  operator delete();
}

uint64_t TSP::DatabaseDataArchive::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::DatabaseDataArchive::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  unint64_t v5 = (unint64_t)this[3] & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v5 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  unint64_t v6 = (unint64_t)this[4] & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    this = TSP::Reference::Clear(this[5]);
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  if ((v2 & 0x38) != 0)
  {
    *(_DWORD *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
    *(unsigned char *)(v1 + 6google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = 1;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_100035820((unint64_t *)v3);
  }
  return this;
}

google::protobuf::internal *TSP::DatabaseDataArchive::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  id v38 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v38, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v38 + 1);
      unsigned int v9 = *(unsigned __int8 *)v38;
      if (*(char *)v38 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v38, (const char *)(v10 - 128));
          id v38 = TagFallback;
          if (!TagFallback) {
            goto LABEL_59;
          }
          uint64_t v8 = TagFallback;
          unsigned int v9 = v31;
          goto LABEL_8;
        }
        uint64_t v8 = (google::protobuf::internal *)((char *)v38 + 2);
      }
      id v38 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_39;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v11 = *(void *)(a1 + 40);
          if (!v11)
          {
            uint64_t v12 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              uint64_t v12 = (void *)*v12;
            }
            uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v12);
            *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = v11;
            uint64_t v8 = v38;
          }
          uint64_t v13 = sub_100034100(a3, v11, v8);
          goto LABEL_46;
        case 2u:
          if (v9 != 18) {
            goto LABEL_39;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v14 = *(void *)(a1 + 8);
          unsigned int v15 = (google::protobuf::Arena *)(v14 & 0xFFFFFFFFFFFFFFFELL);
          if (v14) {
            unsigned int v15 = *(google::protobuf::Arena **)v15;
          }
          uint64_t v16 = (uint64_t **)(a1 + 24);
          goto LABEL_23;
        case 3u:
          if (v9 != 26) {
            goto LABEL_39;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v17 = *(void *)(a1 + 8);
          unsigned int v15 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
          if (v17) {
            unsigned int v15 = *(google::protobuf::Arena **)v15;
          }
          uint64_t v16 = (uint64_t **)(a1 + 32);
LABEL_23:
          uint64_t v18 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v16, v15);
          uint64_t v13 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v18, (std::string::value_type *)v38, a3);
          goto LABEL_46;
        case 4u:
          if (v9 != 32) {
            goto LABEL_39;
          }
          v5 |= 8u;
          uint64_t v19 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v20 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_28;
          }
          int v21 = *(char *)v19;
          unint64_t v20 = v20 + (v21 << 7) - 128;
          if (v21 < 0)
          {
            id v32 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v20);
            id v38 = v32;
            *(void *)(a1 + 48) = v33;
            if (!v32) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v19 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_28:
            id v38 = v19;
            *(void *)(a1 + 48) = v20;
          }
          goto LABEL_47;
        case 5u:
          if (v9 != 40) {
            goto LABEL_39;
          }
          v5 |= 0x10u;
          uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 1);
          LODWORD(v23) = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_33;
          }
          int v24 = *(char *)v22;
          uint64_t v23 = (const char *)(v23 + (v24 << 7) - 128);
          if (v24 < 0)
          {
            id v34 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v23);
            id v38 = v34;
            *(_DWORD *)(a1 + 56) = v35;
            if (!v34) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_33:
            id v38 = v22;
            *(_DWORD *)(a1 + 56) = v23;
          }
          goto LABEL_47;
        case 6u:
          if (v9 != 48) {
            goto LABEL_39;
          }
          v5 |= 0x20u;
          uint64_t v25 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v26 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_38;
          }
          int v27 = *(char *)v25;
          unint64_t v26 = v26 + (v27 << 7) - 128;
          if (v27 < 0)
          {
            id v36 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v26);
            id v38 = v36;
            *(unsigned char *)(a1 + 6google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = v37 != 0;
            if (!v36) {
              goto LABEL_59;
            }
          }
          else
          {
            uint64_t v25 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_38:
            id v38 = v25;
            *(unsigned char *)(a1 + 6google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = v26 != 0;
          }
          goto LABEL_47;
        default:
LABEL_39:
          if (v9) {
            BOOL v28 = (v9 & 7) == 4;
          }
          else {
            BOOL v28 = 1;
          }
          if (v28)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            id v29 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            id v29 = sub_10003562C((unint64_t *)(a1 + 8));
            uint64_t v8 = v38;
          }
          uint64_t v13 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v29, v8);
LABEL_46:
          id v38 = v13;
          if (!v13)
          {
LABEL_59:
            id v38 = 0;
            goto LABEL_2;
          }
LABEL_47:
          if (sub_1000355B8(a3, &v38, *(_DWORD *)(a3 + 92))) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v38;
}

google::protobuf::internal *sub_100034100(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    unint64_t v6 = result;
  }
  else
  {
    unint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::Reference::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::DatabaseDataArchive::_InternalSerialize(TSP::DatabaseDataArchive *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
    }
    unsigned int v7 = (TSP::Reference *)*((void *)this + 5);
    *(unsigned char *)char v4 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 5);
    if (v8 > 0x7F)
    {
      *((unsigned char *)v4 + 1) = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        int v9 = (unsigned __int8 *)v4 + 3;
        do
        {
          *(v9 - 1) = v10 | 0x80;
          unsigned int v11 = v10 >> 7;
          ++v9;
          unsigned int v12 = v10 >> 14;
          v10 >>= 7;
        }
        while (v12);
        *(v9 - 1) = v11;
      }
      else
      {
        *((unsigned char *)v4 + 2) = v10;
        int v9 = (unsigned __int8 *)v4 + 3;
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = v8;
      int v9 = (unsigned __int8 *)v4 + 2;
    }
    char v4 = TSP::Reference::_InternalSerialize(v7, v9, a3, v4);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  char v4 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 2, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_20:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)v4);
    }
    unint64_t v13 = *((void *)this + 6);
    *(unsigned char *)char v4 = 32;
    if (v13 > 0x7F)
    {
      *((unsigned char *)v4 + 1) = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      if (v13 >> 14)
      {
        char v4 = (google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
        do
        {
          *((unsigned char *)v4 - 1) = v14 | 0x80;
          unint64_t v15 = v14 >> 7;
          char v4 = (google::protobuf::UnknownFieldSet *)((char *)v4 + 1);
          unint64_t v16 = v14 >> 14;
          v14 >>= 7;
        }
        while (v16);
        *((unsigned char *)v4 - 1) = v15;
        if ((v6 & 0x10) != 0) {
          goto LABEL_31;
        }
      }
      else
      {
        *((unsigned char *)v4 + 2) = v14;
        char v4 = (google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
        if ((v6 & 0x10) != 0) {
          goto LABEL_31;
        }
      }
    }
    else
    {
      *((unsigned char *)v4 + 1) = v13;
      char v4 = (google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
      if ((v6 & 0x10) != 0) {
        goto LABEL_31;
      }
    }
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_45;
    }
    goto LABEL_42;
  }
LABEL_19:
  char v4 = (google::protobuf::UnknownFieldSet *)sub_100034480(a3, 3, (const void **)(*((void *)this + 4) & 0xFFFFFFFFFFFFFFFELL), (unsigned __int8 *)v4);
  if ((v6 & 8) != 0) {
    goto LABEL_20;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    goto LABEL_6;
  }
LABEL_31:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)v4);
  }
  unsigned int v17 = *((_DWORD *)this + 14);
  *(unsigned char *)char v4 = 40;
  if (v17 > 0x7F)
  {
    *((unsigned char *)v4 + 1) = v17 | 0x80;
    unsigned int v18 = v17 >> 7;
    if (v17 >> 14)
    {
      char v4 = (google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
      do
      {
        *((unsigned char *)v4 - 1) = v18 | 0x80;
        unsigned int v19 = v18 >> 7;
        char v4 = (google::protobuf::UnknownFieldSet *)((char *)v4 + 1);
        unsigned int v20 = v18 >> 14;
        v18 >>= 7;
      }
      while (v20);
      *((unsigned char *)v4 - 1) = v19;
      if ((v6 & 0x20) == 0) {
        goto LABEL_45;
      }
    }
    else
    {
      *((unsigned char *)v4 + 2) = v18;
      char v4 = (google::protobuf::UnknownFieldSet *)((char *)v4 + 3);
      if ((v6 & 0x20) == 0) {
        goto LABEL_45;
      }
    }
  }
  else
  {
    *((unsigned char *)v4 + 1) = v17;
    char v4 = (google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
    if ((v6 & 0x20) == 0) {
      goto LABEL_45;
    }
  }
LABEL_42:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (google::protobuf::UnknownFieldSet *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)v4);
  }
  char v21 = *((unsigned char *)this + 60);
  *(unsigned char *)char v4 = 48;
  *((unsigned char *)v4 + 1) = v21;
  char v4 = (google::protobuf::UnknownFieldSet *)((char *)v4 + 2);
LABEL_45:
  uint64_t v22 = *((void *)this + 1);
  if ((v22 & 1) == 0) {
    return v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v22 & 0xFFFFFFFFFFFFFFFELL) + 8), v4, a3, v4);
}

unsigned __int8 *sub_100034480(google::protobuf::io::EpsCopyOutputStream *a1, int a2, const void **a3, unsigned __int8 *a4)
{
  if (*((char *)a3 + 23) < 0)
  {
    int64_t v4 = (int64_t)a3[1];
    if (v4 > 127) {
      goto LABEL_24;
    }
  }
  else
  {
    int64_t v4 = *((unsigned __int8 *)a3 + 23);
  }
  unsigned int v5 = 8 * a2;
  uint64_t v6 = 1;
  uint64_t v7 = 2;
  uint64_t v8 = 3;
  uint64_t v9 = 4;
  if ((8 * a2) >> 28) {
    uint64_t v9 = 5;
  }
  if (v5 >= 0x200000) {
    uint64_t v8 = v9;
  }
  if (v5 >= 0x4000) {
    uint64_t v7 = v8;
  }
  if (v5 >= 0x80) {
    uint64_t v6 = v7;
  }
  if ((uint64_t)(*(void *)a1 + ~(unint64_t)&a4[v6] + 16) >= v4)
  {
    unsigned int v10 = v5 | 2;
    if ((v5 | 2) > 0x7F)
    {
      *a4 = v5 | 0x82;
      unsigned int v12 = v5 >> 7;
      if (v10 >> 14)
      {
        unsigned int v11 = a4 + 2;
        do
        {
          *(v11 - 1) = v12 | 0x80;
          unsigned int v13 = v12 >> 7;
          ++v11;
          unsigned int v14 = v12 >> 14;
          v12 >>= 7;
        }
        while (v14);
        *(v11 - 1) = v13;
      }
      else
      {
        a4[1] = v12;
        unsigned int v11 = a4 + 2;
      }
    }
    else
    {
      *a4 = v10;
      unsigned int v11 = a4 + 1;
    }
    *unsigned int v11 = v4;
    unint64_t v15 = (char *)(v11 + 1);
    if (*((char *)a3 + 23) >= 0) {
      unint64_t v16 = a3;
    }
    else {
      unint64_t v16 = *a3;
    }
    memcpy(v15, v16, v4);
    return (unsigned __int8 *)&v15[v4];
  }
LABEL_24:
  return google::protobuf::io::EpsCopyOutputStream::WriteStringMaybeAliasedOutline(a1, a2, (void **)a3, a4);
}

uint64_t TSP::DatabaseDataArchive::RequiredFieldsByteSizeFallback(TSP::DatabaseDataArchive *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 2) != 0)
  {
    unint64_t v3 = *((void *)this + 4) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 0x20) != 0) {
    return v2 + 2;
  }
  else {
    return v2;
  }
}

char *TSP::DatabaseDataArchive::ByteSizeLong(TSP::DatabaseDataArchive *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((~v2 & 0x22) != 0)
  {
    uint64_t v6 = (const google::protobuf::UnknownFieldSet *)TSP::DatabaseDataArchive::RequiredFieldsByteSizeFallback(this);
    if ((v2 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  unint64_t v3 = *((void *)this + 4) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v6 = (const google::protobuf::UnknownFieldSet *)(v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 3);
  if (v2)
  {
LABEL_7:
    unint64_t v7 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    uint64_t v6 = (const google::protobuf::UnknownFieldSet *)((char *)v6 + v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1);
  }
LABEL_10:
  if ((v2 & 0x1C) == 0) {
    goto LABEL_15;
  }
  if ((v2 & 4) != 0)
  {
    unsigned int v11 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 5));
    uint64_t v6 = (const google::protobuf::UnknownFieldSet *)&v11[(void)v6
                                                       + 1
                                                       + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6)];
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  uint64_t v6 = (const google::protobuf::UnknownFieldSet *)((char *)v6
                                                 + ((9 * (__clz(*((void *)this + 6) | 1) ^ 0x3F) + 73) >> 6)
                                                 + 1);
  if ((v2 & 0x10) != 0) {
LABEL_14:
  }
    uint64_t v6 = (const google::protobuf::UnknownFieldSet *)((char *)v6
                                                   + ((9 * (__clz(*((_DWORD *)this + 14) | 1) ^ 0x1F) + 73) >> 6)
                                                   + 1);
LABEL_15:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::DatabaseDataArchive *)((char *)this + 8), v6, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v6;
    return (char *)v6;
  }
}

void TSP::DatabaseDataArchive::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DatabaseDataArchive::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::DatabaseDataArchive::MergeFrom(std::string *this, const TSP::DatabaseDataArchive *a2)
{
  unint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 0x3F) != 0)
  {
    if (v6)
    {
      unint64_t v7 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (google::protobuf::Arena *)(size & 0xFFFFFFFFFFFFFFFELL);
      if (size) {
        uint64_t v9 = *(google::protobuf::Arena **)v9;
      }
      this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1], v7, v9);
      if ((v6 & 2) == 0)
      {
LABEL_6:
        if ((v6 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_6;
    }
    unint64_t v10 = *((void *)a2 + 4) & 0xFFFFFFFFFFFFFFFELL;
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    unsigned int v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
    if (v11) {
      unsigned int v12 = *(google::protobuf::Arena **)v12;
    }
    this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v6 & 4) == 0)
    {
LABEL_7:
      if ((v6 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_19:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unsigned int v13 = (void **)v3[1].__r_.__value_.__r.__words[2];
    if (!v13)
    {
      unsigned int v14 = (void *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
      if (*p_size) {
        unsigned int v14 = (void *)*v14;
      }
      unsigned int v13 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v14);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
    }
    if (*((void *)a2 + 5)) {
      unint64_t v15 = (const TSP::Reference *)*((void *)a2 + 5);
    }
    else {
      unint64_t v15 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
    }
    this = (std::string *)TSP::Reference::MergeFrom(v13, v15);
    if ((v6 & 8) == 0)
    {
LABEL_8:
      if ((v6 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
LABEL_27:
    v3[2].__r_.__value_.__r.__words[0] = *((void *)a2 + 6);
    if ((v6 & 0x10) == 0)
    {
LABEL_9:
      if ((v6 & 0x20) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v6;
        return this;
      }
LABEL_10:
      v3[2].__r_.__value_.__s.__data_[12] = *((unsigned char *)a2 + 60);
      goto LABEL_11;
    }
LABEL_28:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *((_DWORD *)a2 + 14);
    if ((v6 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  return this;
}

void TSP::DatabaseDataArchive::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::DatabaseDataArchive::Clear(this);
    TSP::DatabaseDataArchive::MergeFrom((std::string *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::DatabaseDataArchive::IsInitialized(TSP::DatabaseDataArchive *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((~v1 & 0x22) != 0) {
    return 0;
  }
  if ((v1 & 4) == 0) {
    return 1;
  }
  uint64_t result = TSP::Reference::IsInitialized(*((TSP::Reference **)this + 5));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t TSP::DatabaseDataArchive::GetMetadata(TSP::DatabaseDataArchive *this)
{
  return off_1001E97F8[2];
}

void TSP::DatabaseImageDataArchive::~DatabaseImageDataArchive(TSP::DatabaseImageDataArchive *this)
{
  if (this != (TSP::DatabaseImageDataArchive *)&TSP::_DatabaseImageDataArchive_default_instance_)
  {
    uint64_t v2 = (TSP::DatabaseDataArchive *)*((void *)this + 3);
    if (v2)
    {
      TSP::DatabaseDataArchive::~DatabaseDataArchive(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::DatabaseImageDataArchive::~DatabaseImageDataArchive(this);
  operator delete();
}

uint64_t TSP::DatabaseImageDataArchive::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::DatabaseImageDataArchive::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::DatabaseDataArchive::Clear((google::protobuf::Arena **)this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::DatabaseImageDataArchive::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v24 = a2;
  if ((sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v7 = (google::protobuf::internal *)((char *)v24 + 1);
      unsigned int v8 = *(unsigned __int8 *)v24;
      if ((*(char *)v24 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v24, (const char *)(v9 - 128));
      int v24 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unint64_t v7 = TagFallback;
      unsigned int v8 = v21;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 == 16)
        {
          unsigned int v14 = (google::protobuf::internal *)((char *)v7 + 1);
          uint64_t v15 = *(unsigned __int8 *)v7;
          if ((*(char *)v7 & 0x80000000) == 0) {
            goto LABEL_24;
          }
          int v16 = *(char *)v14;
          int v17 = v15 + (v16 << 7);
          uint64_t v15 = (v17 - 128);
          if (v16 < 0)
          {
            int v24 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, (v17 - 128));
            if (!v24) {
              return 0;
            }
            uint64_t v15 = v22;
          }
          else
          {
            unsigned int v14 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_24:
            int v24 = v14;
          }
          if (v15 > 2)
          {
            if (*v6) {
              uint64_t v23 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else {
              uint64_t v23 = sub_10003562C((unint64_t *)(a1 + 8));
            }
            google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v23, 2u, v15);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 2u;
            *(_DWORD *)(a1 + 32) = v15;
          }
          goto LABEL_33;
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 24);
        if (!v18)
        {
          unsigned int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
          if (*v6) {
            unsigned int v19 = (void *)*v19;
          }
          uint64_t v18 = google::protobuf::Arena::CreateMaybeMessage<TSP::DatabaseDataArchive>(v19);
          *(void *)(a1 + 24) = v18;
          unint64_t v7 = v24;
        }
        unsigned int v13 = sub_100034D70(a3, v18, v7);
        goto LABEL_32;
      }
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = v8 - 1;
        return v24;
      }
      if (*v6)
      {
        unsigned int v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unsigned int v12 = sub_10003562C((unint64_t *)(a1 + 8));
        unint64_t v7 = v24;
      }
      unsigned int v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
LABEL_32:
      int v24 = v13;
      if (!v13) {
        return 0;
      }
LABEL_33:
      if (sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92))) {
        return v24;
      }
    }
    unint64_t v7 = (google::protobuf::internal *)((char *)v24 + 2);
LABEL_7:
    int v24 = v7;
    goto LABEL_8;
  }
  return v24;
}

google::protobuf::internal *sub_100034D70(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::DatabaseDataArchive::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::DatabaseImageDataArchive::_InternalSerialize(TSP::DatabaseImageDataArchive *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = (TSP::DatabaseDataArchive *)*((void *)this + 3);
    *a2 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 5);
    if (v8 > 0x7F)
    {
      a2[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        int v9 = a2 + 3;
        do
        {
          *(v9 - 1) = v10 | 0x80;
          unsigned int v11 = v10 >> 7;
          ++v9;
          unsigned int v12 = v10 >> 14;
          v10 >>= 7;
        }
        while (v12);
        *(v9 - 1) = v11;
      }
      else
      {
        a2[2] = v10;
        int v9 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v8;
      int v9 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::DatabaseDataArchive::_InternalSerialize(v7, (google::protobuf::UnknownFieldSet *)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v13 = *((int *)this + 8);
    *a2 = 16;
    if (v13 > 0x7F)
    {
      a2[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      if (v13 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - 1) = v14 | 0x80;
          unint64_t v15 = v14 >> 7;
          ++a2;
          unint64_t v16 = v14 >> 14;
          v14 >>= 7;
        }
        while (v16);
        *(a2 - 1) = v15;
      }
      else
      {
        a2[2] = v14;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v13;
      a2 += 2;
    }
  }
  uint64_t v17 = *((void *)this + 1);
  if ((v17 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::DatabaseImageDataArchive::RequiredFieldsByteSizeFallback(TSP::DatabaseImageDataArchive *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2)
  {
    uint64_t v4 = TSP::DatabaseDataArchive::ByteSizeLong(*((TSP::DatabaseDataArchive **)this + 3));
    uint64_t result = &v4[((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1];
    if ((*((_DWORD *)this + 4) & 2) == 0) {
      return result;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      return result;
    }
  }
  int v5 = *((_DWORD *)this + 8);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
  return result;
}

char *TSP::DatabaseImageDataArchive::ByteSizeLong(TSP::DatabaseDataArchive **this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0)
  {
    unint64_t v7 = TSP::DatabaseImageDataArchive::RequiredFieldsByteSizeFallback((TSP::DatabaseImageDataArchive *)this);
  }
  else
  {
    int v2 = TSP::DatabaseDataArchive::ByteSizeLong(this[3]);
    uint64_t v3 = (9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6;
    int v4 = *((_DWORD *)this + 8);
    uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
    if (v4 >= 0) {
      uint64_t v6 = v5;
    }
    else {
      uint64_t v6 = 10;
    }
    unint64_t v7 = &v2[v3 + 2 + v6];
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), (const google::protobuf::UnknownFieldSet *)v7, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v7;
    return v7;
  }
}

void TSP::DatabaseImageDataArchive::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DatabaseImageDataArchive::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::DatabaseImageDataArchive::MergeFrom(std::string *this, const TSP::DatabaseImageDataArchive *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)v3[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        unsigned int v8 = (void *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
        if (*p_size) {
          unsigned int v8 = (void *)*v8;
        }
        data = (std::string *)google::protobuf::Arena::CreateMaybeMessage<TSP::DatabaseDataArchive>(v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*((void *)a2 + 3)) {
        int v9 = (const TSP::DatabaseDataArchive *)*((void *)a2 + 3);
      }
      else {
        int v9 = (const TSP::DatabaseDataArchive *)&TSP::_DatabaseDataArchive_default_instance_;
      }
      this = TSP::DatabaseDataArchive::MergeFrom(data, v9);
    }
    if ((v6 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *((_DWORD *)a2 + 8);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v6;
  }
  return this;
}

void TSP::DatabaseImageDataArchive::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::DatabaseImageDataArchive::Clear(this);
    TSP::DatabaseImageDataArchive::MergeFrom((std::string *)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::DatabaseImageDataArchive::IsInitialized(TSP::DatabaseImageDataArchive *this)
{
  int v1 = *((_DWORD *)this + 4);
  BOOL result = 0;
  if ((~v1 & 3) == 0)
  {
    if ((v1 & 1) == 0) {
      return 1;
    }
    uint64_t v2 = *((void *)this + 3);
    int v3 = *(_DWORD *)(v2 + 16);
    if (~v3 & 0x22) == 0 && ((v3 & 4) == 0 || (TSP::Reference::IsInitialized(*(TSP::Reference **)(v2 + 40)))) {
      return 1;
    }
  }
  return result;
}

uint64_t TSP::DatabaseImageDataArchive::GetMetadata(TSP::DatabaseImageDataArchive *this)
{
  return off_1001E97F8[4];
}

void *sub_10003535C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1000358D8(a1);
}

void sub_1000353FC()
{
}

void *sub_100035424(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100035A08(a1, 1);
  TSP::DatabaseDataArchive::DatabaseDataArchive((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_100035488()
{
}

void *sub_1000354B0(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_100035AC4(a1);
}

void sub_100035554()
{
}

uint64_t sub_100035578()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DatabaseData>(0);
}

uint64_t sub_100035580(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DatabaseData>(a2);
}

uint64_t sub_100035588(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_100035590()
{
  return 0;
}

uint64_t sub_100035598()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DatabaseDataArchive>(0);
}

uint64_t sub_1000355A0(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DatabaseDataArchive>(a2);
}

uint64_t sub_1000355A8()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DatabaseImageDataArchive>(0);
}

uint64_t sub_1000355B0(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DatabaseImageDataArchive>(a2);
}

uint64_t sub_1000355B8(uint64_t a1, void *a2, int a3)
{
  if (*a2 < *(void *)a1) {
    return 0;
  }
  int v5 = *a2 - *(_DWORD *)(a1 + 8);
  if (*(_DWORD *)(a1 + 28) == v5)
  {
    if (v5 >= 1 && !*(void *)(a1 + 16)) {
      *a2 = 0;
    }
    return 1;
  }
  else
  {
    *a2 = google::protobuf::internal::EpsCopyInputStream::DoneFallback((google::protobuf::internal::EpsCopyInputStream *)a1, v5, a3);
    return v6 & 1;
  }
}

google::protobuf::Arena **sub_10003562C(unint64_t *a1)
{
  uint64_t v2 = (google::protobuf::Arena *)(*a1 & 0xFFFFFFFFFFFFFFFELL);
  if (*a1) {
    uint64_t v2 = *(google::protobuf::Arena **)v2;
  }
  sub_100035674(v2);
  *a1 = (unint64_t)v3 | 1;
  std::string *v3 = v2;
  return v3 + 1;
}

double sub_100035674(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v1 = sub_1000356B8(a1, 0);
  double result = 0.0;
  *int v1 = 0u;
  v1[1] = 0u;
  return result;
}

void *sub_1000356B8(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_100035770);
}

void sub_100035770(uint64_t a1)
{
  int v3 = *(void **)(a1 + 8);
  int v4 = *(void **)(a1 + 16);
  int v5 = (google::protobuf::UnknownFieldSet *)(a1 + 8);
  if (v3 != v4)
  {
    google::protobuf::UnknownFieldSet::ClearFallback(v5);
    int v3 = *(void **)v5;
  }
  if (v3)
  {
    *(void *)(a1 + 16) = v3;
    operator delete(v3);
  }
}

void **sub_1000357D4(unint64_t *a1, const google::protobuf::UnknownFieldSet *a2)
{
  if (*a1) {
    int v3 = (void **)((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    int v3 = (void **)sub_10003562C(a1);
  }
  return google::protobuf::UnknownFieldSet::MergeFrom(v3, a2);
}

google::protobuf::Arena **sub_100035820(unint64_t *a1)
{
  if (*a1) {
    double result = (google::protobuf::Arena **)((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    double result = sub_10003562C(a1);
  }
  if (*result != result[1])
  {
    return (google::protobuf::Arena **)google::protobuf::UnknownFieldSet::ClearFallback((google::protobuf::UnknownFieldSet *)result);
  }
  return result;
}

google::protobuf::Arena **sub_100035870(unint64_t *a1, google::protobuf::Arena **a2)
{
  if (*a1) {
    double result = (google::protobuf::Arena **)((*a1 & 0xFFFFFFFFFFFFFFFELL) + 8);
  }
  else {
    double result = sub_10003562C(a1);
  }
  int v4 = *result;
  *double result = *a2;
  *a2 = v4;
  int v5 = result[1];
  result[1] = a2[1];
  a2[1] = v5;
  char v6 = result[2];
  result[2] = a2[2];
  a2[2] = v6;
  return result;
}

void *sub_1000358D8(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_10003594C(a1, 1);
  void *v2 = off_1001C7648;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_DatabaseData_TSPDatabaseMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DatabaseData_TSPDatabaseMessages_2eproto);
  }
  v2[3] = 0;
  return v2;
}

void *sub_10003594C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))TSP::DatabaseData::~DatabaseData);
}

void *sub_100035A08(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x40uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x40uLL, (void (*)(void *))TSP::DatabaseDataArchive::~DatabaseDataArchive);
}

void *sub_100035AC4(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_100035B3C(a1, 1);
  void *v2 = off_1001C77A8;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_DatabaseImageDataArchive_TSPDatabaseMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DatabaseImageDataArchive_TSPDatabaseMessages_2eproto);
  }
  *((_DWORD *)v2 + 8) = 0;
  v2[3] = 0;
  return v2;
}

void *sub_100035B3C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))TSP::DatabaseImageDataArchive::~DatabaseImageDataArchive);
}

void sub_100035BF8()
{
}

void *TSP::SnappySource::SnappySource(void *a1, void *a2)
{
  int v3 = a2;
  *a1 = off_1001C78C8;
  a1[1] = v3;
  size_t size = dispatch_data_get_size(v3);
  a1[3] = 0;
  a1[4] = 0;
  a1[2] = size;
  return a1;
}

void TSP::SnappySource::~SnappySource(id *this)
{
  snappy::Source::~Source((snappy::Source *)this);
}

{
  uint64_t vars8;

  TSP::SnappySource::~SnappySource(this);
  operator delete();
}

uint64_t TSP::SnappySource::Available(TSP::SnappySource *this)
{
  return *((void *)this + 2) - *((void *)this + 3);
}

uint64_t TSP::SnappySource::Peek(TSP::SnappySource *this, unint64_t *a2)
{
  size_t v3 = *((void *)this + 3);
  if (v3 >= *((void *)this + 2))
  {
    uint64_t result = 0;
    *a2 = 0;
  }
  else
  {
    if (!*((void *)this + 4))
    {
      dispatch_data_t v5 = dispatch_data_copy_region(*((dispatch_data_t *)this + 1), v3, (size_t *)this + 5);
      char v6 = (void *)*((void *)this + 4);
      *((void *)this + 4) = v5;

      unint64_t v7 = *((void *)this + 4);
      if (!v7)
      {
        +[TSUAssertionHandler _atomicIncrementAssertCount];
        if (TSUAssertCat_init_token != -1) {
          dispatch_once(&TSUAssertCat_init_token, &stru_1001C78F0);
        }
        if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
          sub_100163640();
        }
        unsigned int v8 = +[NSString stringWithUTF8String:"virtual const char *TSP::SnappySource::Peek(size_t *)"];
        int v9 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPSnappySource.mm"];
        +[TSUAssertionHandler handleFailureInFunction:v8 file:v9 lineNumber:33 isFatal:0 description:"Couldn't get region"];

        +[TSUAssertionHandler logBacktraceThrottled];
        unint64_t v7 = *((void *)this + 4);
      }
      dispatch_data_t map = dispatch_data_create_map(v7, (const void **)this + 7, (size_t *)this + 6);
      unsigned int v11 = (void *)*((void *)this + 4);
      *((void *)this + 4) = map;

      if (!*((void *)this + 4))
      {
        +[TSUAssertionHandler _atomicIncrementAssertCount];
        if (TSUAssertCat_init_token != -1) {
          dispatch_once(&TSUAssertCat_init_token, &stru_1001C7910);
        }
        if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
          sub_1001635AC();
        }
        unsigned int v12 = +[NSString stringWithUTF8String:"virtual const char *TSP::SnappySource::Peek(size_t *)"];
        unint64_t v13 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPSnappySource.mm"];
        +[TSUAssertionHandler handleFailureInFunction:v12 file:v13 lineNumber:36 isFatal:0 description:"Couldn't map region"];

        +[TSUAssertionHandler logBacktraceThrottled];
      }
    }
    uint64_t v14 = *((void *)this + 3);
    uint64_t v15 = v14 - *((void *)this + 5);
    unint64_t v16 = *((void *)this + 6) - v15;
    unint64_t v17 = *((void *)this + 2) - v14;
    if (v16 >= v17) {
      unint64_t v16 = v17;
    }
    *a2 = v16;
    return *((void *)this + 7) + v15;
  }
  return result;
}

void sub_100035F40(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100035F64(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100035FA8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void TSP::SnappySource::Skip(TSP::SnappySource *this, uint64_t a2)
{
}

void TSP::SnappySource::SetOffset(TSP::SnappySource *this, unint64_t a2)
{
  *((void *)this + 3) = a2;
  uint64_t v2 = (void *)*((void *)this + 4);
  if (v2)
  {
    unint64_t v3 = *((void *)this + 5);
    int v4 = (void *)((char *)this + 40);
    if (v3 > a2 || *((void *)this + 6) + v3 <= a2)
    {
      *((void *)this + 4) = 0;

      void *v4 = 0;
      v4[1] = 0;
      v4[2] = 0;
    }
  }
}

uint64_t TSP::SnappySource::Offset(TSP::SnappySource *this)
{
  return *((void *)this + 3);
}

uint64_t TSP::SnappySource::SetMaxOffset(uint64_t this, uint64_t a2)
{
  *(void *)(this + 16) = a2;
  return this;
}

unint64_t UnsafePointer(void *a1)
{
  int v1 = [a1 componentsSeparatedByString:@"."];
  if ([v1 count] == (id)3)
  {
    uint64_t v2 = [v1 objectAtIndexedSubscript:0];
    uint64_t v3 = (uint64_t)[v2 integerValue];

    if (v3 >= 0x10000)
    {
      +[TSUAssertionHandler _atomicIncrementAssertCount];
      if (TSUAssertCat_init_token != -1) {
        dispatch_once(&TSUAssertCat_init_token, &stru_1001C7968);
      }
      if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_1001638D4();
      }
      unsigned int v12 = +[NSString stringWithUTF8String:"TSPVersion TSPVersionFromNSString(NSString *__strong)"];
      unint64_t v13 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPVersion.mm"];
      +[TSUAssertionHandler handleFailureInFunction:v12 file:v13 lineNumber:291 isFatal:0 description:"Out-of-bounds type assignment was clamped to max"];

      +[TSUAssertionHandler logBacktraceThrottled];
      uint64_t v3 = 0xFFFFLL;
    }
    else if (v3 < 0)
    {
      +[TSUAssertionHandler _atomicIncrementAssertCount];
      if (TSUAssertCat_init_token != -1) {
        dispatch_once(&TSUAssertCat_init_token, &stru_1001C7988);
      }
      if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_100163954();
      }
      unint64_t v17 = +[NSString stringWithUTF8String:"TSPVersion TSPVersionFromNSString(NSString *__strong)"];
      uint64_t v18 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPVersion.mm"];
      +[TSUAssertionHandler handleFailureInFunction:v17 file:v18 lineNumber:291 isFatal:0 description:"Out-of-bounds type assignment was clamped to min"];

      +[TSUAssertionHandler logBacktraceThrottled];
      uint64_t v3 = 0;
    }
    int v4 = [v1 objectAtIndexedSubscript:1];
    uint64_t v5 = (uint64_t)[v4 integerValue];

    if (v5 >= 0x10000)
    {
      +[TSUAssertionHandler _atomicIncrementAssertCount];
      if (TSUAssertCat_init_token != -1) {
        dispatch_once(&TSUAssertCat_init_token, &stru_1001C79A8);
      }
      if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_1001637D4();
      }
      uint64_t v5 = +[NSString stringWithUTF8String:"TSPVersion TSPVersionFromNSString(NSString *__strong)"];
      uint64_t v14 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPVersion.mm"];
      +[TSUAssertionHandler handleFailureInFunction:v5 file:v14 lineNumber:292 isFatal:0 description:"Out-of-bounds type assignment was clamped to max"];

      +[TSUAssertionHandler logBacktraceThrottled];
      LOWORD(v5) = -1;
    }
    else if (v5 < 0)
    {
      +[TSUAssertionHandler _atomicIncrementAssertCount];
      if (TSUAssertCat_init_token != -1) {
        dispatch_once(&TSUAssertCat_init_token, &stru_1001C79C8);
      }
      if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_100163854();
      }
      uint64_t v5 = +[NSString stringWithUTF8String:"TSPVersion TSPVersionFromNSString(NSString *__strong)"];
      unsigned int v19 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPVersion.mm"];
      +[TSUAssertionHandler handleFailureInFunction:v5 file:v19 lineNumber:292 isFatal:0 description:"Out-of-bounds type assignment was clamped to min"];

      +[TSUAssertionHandler logBacktraceThrottled];
      LOWORD(v5) = 0;
    }
    char v6 = [v1 objectAtIndexedSubscript:2];
    uint64_t v7 = (uint64_t)[v6 integerValue];

    if (v7 >= (uint64_t)&_mh_execute_header)
    {
      +[TSUAssertionHandler _atomicIncrementAssertCount];
      if (TSUAssertCat_init_token != -1) {
        dispatch_once(&TSUAssertCat_init_token, &stru_1001C79E8);
      }
      if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_1001636D4();
      }
      uint64_t v15 = +[NSString stringWithUTF8String:"TSPVersion TSPVersionFromNSString(NSString *__strong)"];
      unint64_t v16 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPVersion.mm"];
      +[TSUAssertionHandler handleFailureInFunction:v15 file:v16 lineNumber:293 isFatal:0 description:"Out-of-bounds type assignment was clamped to max"];

      +[TSUAssertionHandler logBacktraceThrottled];
      uint64_t v7 = 0xFFFFFFFFLL;
    }
    else if (v7 < 0)
    {
      +[TSUAssertionHandler _atomicIncrementAssertCount];
      if (TSUAssertCat_init_token != -1) {
        dispatch_once(&TSUAssertCat_init_token, &stru_1001C7A08);
      }
      if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_100163754();
      }
      unsigned int v20 = +[NSString stringWithUTF8String:"TSPVersion TSPVersionFromNSString(NSString *__strong)"];
      unsigned int v21 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPVersion.mm"];
      +[TSUAssertionHandler handleFailureInFunction:v20 file:v21 lineNumber:293 isFatal:0 description:"Out-of-bounds type assignment was clamped to min"];

      +[TSUAssertionHandler logBacktraceThrottled];
      uint64_t v7 = 0;
    }
    unint64_t v8 = v7 | (v3 << 48) | ((unint64_t)(unsigned __int16)v5 << 32);
  }
  else
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001C7948);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_1001639D4();
    }
    int v9 = +[NSString stringWithUTF8String:"TSPVersion TSPVersionFromNSString(NSString *__strong)"];
    unsigned int v10 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPVersion.mm"];
    +[TSUAssertionHandler handleFailureInFunction:v9 file:v10 lineNumber:287 isFatal:0 description:"Version should consist of 3 numbers separated by '.'"];

    +[TSUAssertionHandler logBacktraceThrottled];
    unint64_t v8 = 0;
  }

  return v8;
}

void sub_100036730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000367E8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10003682C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100036870(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000368B4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000368F8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10003693C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100036980(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

NSString *NSStringFromTSPVersion(unint64_t a1)
{
  return +[NSString stringWithFormat:@"%u.%u.%u", HIWORD(a1), WORD2(a1), a1];
}

uint64_t sub_100036A08(google::protobuf::Arena *this, uint64_t a2)
{
  unint64_t v3 = (a2 + 7) & 0xFFFFFFFFFFFFFFF8;
  if (*((unsigned char *)this + 24)) {
  return google::protobuf::Arena::AllocateAlignedNoHook(this, v3);
  }
}

void sub_100036AE0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::ArchiveInfo::ArchiveInfo((uint64_t)&TSP::_ArchiveInfo_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_ArchiveInfo_default_instance_, v4);
}

void sub_100036B50(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::ComponentDataReference::ComponentDataReference(TSP::_ComponentDataReference_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_ComponentDataReference_default_instance_, v4);
}

void sub_100036BC0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  qword_1001EC358 = 0;
  unk_1001EC360 = 0;
  TSP::_ComponentDataReference_ObjectReference_default_instance_ = (uint64_t)off_1001C8020;
  qword_1001EC368 = 0;
  dword_1001EC370 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_ComponentDataReference_ObjectReference_default_instance_, v4);
}

void sub_100036C40(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  qword_1001EC328 = 0;
  unk_1001EC330 = 0;
  TSP::_ComponentExternalReference_default_instance_ = (uint64_t)off_1001C7F70;
  qword_1001EC338 = 0;
  unk_1001EC340 = 0;
  byte_1001EC348 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_ComponentExternalReference_default_instance_, v4);
}

void sub_100036CC0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::ComponentInfo::ComponentInfo((uint64_t)&TSP::_ComponentInfo_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_ComponentInfo_default_instance_, v4);
}

void sub_100036D30(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::DataInfo::DataInfo((uint64_t)&TSP::_DataInfo_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_DataInfo_default_instance_, v4);
}

void sub_100036DA0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::_DataMetadata_default_instance_ = (uint64_t)off_1001C8700;
  unk_1001EC6A0 = 0;
  qword_1001EC6A8 = 0;
  if (atomic_load_explicit(scc_info_DataMetadata_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DataMetadata_TSPArchiveMessages_2eproto);
  }
  qword_1001EC6B0 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_DataMetadata_default_instance_, v4);
}

void sub_100036E48(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::DataMetadataMap::DataMetadataMap((uint64_t)&TSP::_DataMetadataMap_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_DataMetadataMap_default_instance_, v4);
}

void sub_100036EB8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::_DataMetadataMap_DataMetadataMapEntry_default_instance_ = (uint64_t)off_1001C85A0;
  *(void *)algn_1001EC648 = 0;
  qword_1001EC650 = 0;
  if (atomic_load_explicit(scc_info_DataMetadataMap_DataMetadataMapEntry_TSPArchiveMessages_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_DataMetadataMap_DataMetadataMapEntry_TSPArchiveMessages_2eproto);
  }
  qword_1001EC658 = 0;
  unk_1001EC660 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_DataMetadataMap_DataMetadataMapEntry_default_instance_, v4);
}

void sub_100036F60(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::DataPropertiesEntryV1::DataPropertiesEntryV1((uint64_t)&TSP::_DataPropertiesEntryV1_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_DataPropertiesEntryV1_default_instance_, v4);
}

void sub_100036FD0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::DataPropertiesV1::DataPropertiesV1((uint64_t)&TSP::_DataPropertiesV1_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_DataPropertiesV1_default_instance_, v4);
}

void sub_100037040(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::_DocumentMetadata_default_instance_ = (uint64_t)off_1001C8D30;
  unk_1001EC910 = 0;
  qword_1001EC918 = 0;
  if (atomic_load_explicit(scc_info_DocumentMetadata_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DocumentMetadata_TSPArchiveMessages_2eproto);
  }
  byte_1001EC928 = 0;
  qword_1001EC920 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_DocumentMetadata_default_instance_, v4);
}

void sub_1000370EC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::DocumentRevision::DocumentRevision((uint64_t)&TSP::_DocumentRevision_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_DocumentRevision_default_instance_, v4);
}

void sub_10003715C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  qword_1001EC700 = 0;
  unk_1001EC708 = 0;
  TSP::_EncryptionBlockInfo_default_instance_ = (uint64_t)off_1001C8860;
  qword_1001EC710 = 0;
  unk_1001EC718 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_EncryptionBlockInfo_default_instance_, v4);
}

void sub_1000371D8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::EncryptionInfo::EncryptionInfo(TSP::_EncryptionInfo_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_EncryptionInfo_default_instance_, v4);
}

void sub_100037248(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::FeatureInfo::FeatureInfo(TSP::_FeatureInfo_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_FeatureInfo_default_instance_, v4);
}

void sub_1000372B8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::FieldInfo::FieldInfo((uint64_t)&TSP::_FieldInfo_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_FieldInfo_default_instance_, v4);
}

void sub_100037328(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  qword_1001EC1C8 = 0;
  unk_1001EC1D0 = 0;
  TSP::_FieldPath_default_instance_ = (uint64_t)off_1001C7E10;
  dword_1001EC1E4 = 0;
  qword_1001EC1D8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_FieldPath_default_instance_, v4);
}

void sub_1000373A8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::MessageInfo::MessageInfo((uint64_t)&TSP::_MessageInfo_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_MessageInfo_default_instance_, v4);
}

void sub_100037418(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::ObjectSerializationDirectory::ObjectSerializationDirectory((uint64_t)&TSP::_ObjectSerializationDirectory_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_ObjectSerializationDirectory_default_instance_, v4);
}

void sub_100037488(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::ObjectSerializationDirectory_Entry::ObjectSerializationDirectory_Entry(TSP::_ObjectSerializationDirectory_Entry_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_ObjectSerializationDirectory_Entry_default_instance_, v4);
}

void sub_1000374F8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::ObjectSerializationMetadata::ObjectSerializationMetadata((uint64_t)&TSP::_ObjectSerializationMetadata_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_ObjectSerializationMetadata_default_instance_, v4);
}

void sub_100037568(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::_ObjectUUIDMapEntry_default_instance_ = (uint64_t)off_1001C8180;
  *(void *)algn_1001EC3B8 = 0;
  qword_1001EC3C0 = 0;
  if (atomic_load_explicit(scc_info_ObjectUUIDMapEntry_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ObjectUUIDMapEntry_TSPArchiveMessages_2eproto);
  }
  qword_1001EC3C8 = 0;
  unk_1001EC3D0 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_ObjectUUIDMapEntry_default_instance_, v4);
}

void sub_100037610(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::PackageMetadata::PackageMetadata((uint64_t)&TSP::_PackageMetadata_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_PackageMetadata_default_instance_, v4);
}

void sub_100037680(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::PasteboardMetadata::PasteboardMetadata(TSP::_PasteboardMetadata_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_PasteboardMetadata_default_instance_, v4);
}

void sub_1000376F0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::SupportMetadata::SupportMetadata((uint64_t)&TSP::_SupportMetadata_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_SupportMetadata_default_instance_, v4);
}

void sub_100037760(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::SupportMetadata_DataCollaborationProperties::SupportMetadata_DataCollaborationProperties(TSP::_SupportMetadata_DataCollaborationProperties_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_SupportMetadata_DataCollaborationProperties_default_instance_, v4);
}

void sub_1000377D0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPArchiveMessages.pb.cc", a4);
  TSP::ViewStateMetadata::ViewStateMetadata(TSP::_ViewStateMetadata_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_ViewStateMetadata_default_instance_, v4);
}

uint64_t TSP::ArchiveInfo::ArchiveInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C7C00;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_ArchiveInfo_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ArchiveInfo_TSPArchiveMessages_2eproto);
  }
  *(unsigned char *)(a1 + 56) = 0;
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_1000378B8(_Unwind_Exception *a1)
{
  sub_10004F76C(v1);
  _Unwind_Resume(a1);
}

void TSP::ArchiveInfo::~ArchiveInfo(TSP::ArchiveInfo *this)
{
}

{
  uint64_t vars8;

  TSP::ArchiveInfo::~ArchiveInfo(this);
  operator delete();
}

uint64_t TSP::ArchiveInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ArchiveInfo::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (TSP::MessageInfo **)((char *)this[5] + 8);
    do
    {
      int v4 = *v3++;
      this = TSP::MessageInfo::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0)
  {
    *(unsigned char *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::ArchiveInfo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v35 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v35, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = (google::protobuf::internal *)((char *)v35 + 1);
      unsigned int v9 = *(unsigned __int8 *)v35;
      if ((*(char *)v35 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v35, (const char *)(v10 - 128));
      int v35 = TagFallback;
      if (!TagFallback) {
        goto LABEL_54;
      }
      unint64_t v8 = TagFallback;
      unsigned int v9 = v30;
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 != 24) {
          goto LABEL_14;
        }
        v5 |= 2u;
        uint64_t v15 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v16 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v17 = *(char *)v15;
        unint64_t v16 = v16 + (v17 << 7) - 128;
        if ((v17 & 0x80000000) == 0)
        {
          uint64_t v15 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_26:
          int v35 = v15;
          *(unsigned char *)(a1 + 56) = v16 != 0;
          goto LABEL_44;
        }
        unsigned int v31 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v16);
        int v35 = v31;
        *(unsigned char *)(a1 + 56) = v32 != 0;
        if (!v31) {
          goto LABEL_54;
        }
      }
      else
      {
        if (v11 == 2)
        {
          if (v9 != 18)
          {
LABEL_14:
            if (v9) {
              BOOL v13 = (v9 & 7) == 4;
            }
            else {
              BOOL v13 = 1;
            }
            if (v13)
            {
              *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPDatabaseMessages_2eproto, 0) = v9 - 1;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v14 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              uint64_t v14 = sub_10003562C((unint64_t *)(a1 + 8));
              unint64_t v8 = v35;
            }
            int v35 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v14, v8);
            if (!v35)
            {
LABEL_54:
              int v35 = 0;
              goto LABEL_2;
            }
            goto LABEL_44;
          }
          uint64_t v18 = (google::protobuf::internal *)((char *)v8 - 1);
          while (2)
          {
            unsigned int v19 = (google::protobuf::internal *)((char *)v18 + 1);
            int v35 = (google::protobuf::internal *)((char *)v18 + 1);
            unsigned int v20 = *(int **)(a1 + 40);
            if (v20)
            {
              uint64_t v21 = *(int *)(a1 + 32);
              int v22 = *v20;
              if ((int)v21 < *v20)
              {
                *(_DWORD *)(a1 + 32) = v21 + 1;
                uint64_t v23 = *(void *)&v20[2 * v21 + 2];
                goto LABEL_36;
              }
              if (v22 == *(_DWORD *)(a1 + 36))
              {
LABEL_34:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v22 + 1);
                unsigned int v20 = *(int **)(a1 + 40);
                int v22 = *v20;
              }
              *unsigned int v20 = v22 + 1;
              uint64_t v23 = google::protobuf::Arena::CreateMaybeMessage<TSP::MessageInfo>(*(void *)(a1 + 24));
              uint64_t v24 = *(void *)(a1 + 40);
              uint64_t v25 = *(int *)(a1 + 32);
              *(_DWORD *)(a1 + 32) = v25 + 1;
              *(void *)(v24 + 8 * v25 + 8) = v23;
              unsigned int v19 = v35;
LABEL_36:
              uint64_t v18 = sub_100037D1C(a3, v23, v19);
              int v35 = v18;
              if (!v18) {
                goto LABEL_54;
              }
              if (*(void *)a3 <= (unint64_t)v18 || *(unsigned char *)v18 != 18) {
                goto LABEL_44;
              }
              continue;
            }
            break;
          }
          int v22 = *(_DWORD *)(a1 + 36);
          goto LABEL_34;
        }
        if (v11 != 1 || v9 != 8) {
          goto LABEL_14;
        }
        v5 |= 1u;
        unint64_t v26 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v27 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v28 = *(char *)v26;
        unint64_t v27 = v27 + (v28 << 7) - 128;
        if ((v28 & 0x80000000) == 0)
        {
          unint64_t v26 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_43:
          int v35 = v26;
          *(void *)(a1 + 48) = v27;
          goto LABEL_44;
        }
        uint64_t v33 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v27);
        int v35 = v33;
        *(void *)(a1 + 48) = v34;
        if (!v33) {
          goto LABEL_54;
        }
      }
LABEL_44:
      if (sub_1000355B8(a3, &v35, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    unint64_t v8 = (google::protobuf::internal *)((char *)v35 + 2);
LABEL_7:
    int v35 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v35;
}

unint64_t sub_100037CBC(google::protobuf::internal **a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *a1;
  int v5 = *(char *)v3;
  int v4 = (google::protobuf::internal *)((char *)v3 + 1);
  unint64_t v6 = v5;
  if (v5 < 0)
  {
    unint64_t v6 = v6 + (*(unsigned __int8 *)v4 << 7) - 128;
    if (*(char *)v4 < 0) {
      int v4 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v2, v6);
    }
    else {
      int v4 = (google::protobuf::internal *)((char *)v2 + 2);
    }
  }
  *a1 = v4;
  return v6;
}

google::protobuf::internal *sub_100037D1C(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    unint64_t v6 = result;
  }
  else
  {
    unint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::MessageInfo::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::ArchiveInfo::_InternalSerialize(TSP::ArchiveInfo *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((void *)this + 6);
    *a2 = 8;
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      if (v7 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          ++a2;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v9;
      }
      else
      {
        a2[2] = v8;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v7;
      a2 += 2;
    }
  }
  int v11 = *((_DWORD *)this + 8);
  if (v11)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      BOOL v13 = *(TSP::MessageInfo **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v14 = *((_DWORD *)v13 + 5);
      if (v14 > 0x7F)
      {
        a2[1] = v14 | 0x80;
        unsigned int v16 = v14 >> 7;
        if (v14 >> 14)
        {
          uint64_t v15 = a2 + 3;
          do
          {
            *(v15 - sub_1000333D0((uint64_t *)this + 1) = v16 | 0x80;
            unsigned int v17 = v16 >> 7;
            ++v15;
            unsigned int v18 = v16 >> 14;
            v16 >>= 7;
          }
          while (v18);
          *(v15 - sub_1000333D0((uint64_t *)this + 1) = v17;
        }
        else
        {
          a2[2] = v16;
          uint64_t v15 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v14;
        uint64_t v15 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::MessageInfo::_InternalSerialize(v13, (google::protobuf::UnknownFieldSet *)v15, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned __int8 v19 = *((unsigned char *)this + 56);
    *a2 = 24;
    a2[1] = v19;
    a2 += 2;
  }
  uint64_t v20 = *((void *)this + 1);
  if ((v20 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v20 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::ArchiveInfo::ByteSizeLong(TSP::ArchiveInfo *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    int v4 = (TSP::MessageInfo **)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unint64_t v7 = TSP::MessageInfo::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *((_DWORD *)this + 4);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
    }
                                                     + ((9 * (__clz(*((void *)this + 6) | 1) ^ 0x3F) + 73) >> 6)
                                                     + 1);
    if ((v8 & 2) != 0) {
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + 2);
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::ArchiveInfo *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::ArchiveInfo::MergeFrom(TSP::ArchiveInfo *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ArchiveInfo::MergeFrom((unint64_t *)this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

unint64_t *TSP::ArchiveInfo::MergeFrom(unint64_t *this, const TSP::ArchiveInfo *a2)
{
  uint64_t v3 = (uint64_t *)this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)sub_1000357D4(this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    int v6 = (TSP::MessageInfo **)(*((void *)a2 + 5) + 8);
    unint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 3), *((_DWORD *)a2 + 8));
    this = (unint64_t *)sub_10004F7EC(v3 + 3, (TSP::MessageInfo **)v7, v6, v5, *(_DWORD *)v3[5] - *((_DWORD *)v3 + 8));
    signed int v8 = *((_DWORD *)v3 + 8) + v5;
    *((_DWORD *)v3 + 8) = v8;
    unint64_t v9 = (signed int *)v3[5];
    if (*v9 < v8) {
      *unint64_t v9 = v8;
    }
  }
  int v10 = *((_DWORD *)a2 + 4);
  if ((v10 & 3) != 0)
  {
    if (v10) {
      v3[6] = *((void *)a2 + 6);
    }
    if ((v10 & 2) != 0) {
      *((unsigned char *)v3 + 56) = *((unsigned char *)a2 + 56);
    }
    *((_DWORD *)v3 + 4) |= v10;
  }
  return this;
}

void TSP::ArchiveInfo::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::ArchiveInfo::Clear(this);
    TSP::ArchiveInfo::MergeFrom((TSP::ArchiveInfo *)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::ArchiveInfo::IsInitialized(TSP::ArchiveInfo *this)
{
  return sub_10003829C((uint64_t)this + 24);
}

BOOL sub_10003829C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  do
  {
    uint64_t v3 = *(void *)(v2 + 8 * (v1 - 1) + 8);
    BOOL result = (*(_DWORD *)(v3 + 16) & 6) == 6;
    if ((*(_DWORD *)(v3 + 16) & 6) != 6) {
      break;
    }
    uint64_t v5 = *(unsigned int *)(v3 + 56);
    uint64_t v6 = *(void *)(v3 + 64);
    while ((int)v5 >= 1)
    {
      uint64_t v7 = *(void *)(v6 + 8 * v5--);
      if ((*(unsigned char *)(v7 + 16) & 2) == 0) {
        return 0;
      }
    }
  }
  while (v1-- >= 2);
  return result;
}

uint64_t TSP::ArchiveInfo::GetMetadata(TSP::ArchiveInfo *this)
{
  return *off_1001E9C30;
}

uint64_t TSP::MessageInfo::MessageInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C7CB0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 152) = 0;
  if (atomic_load_explicit(scc_info_MessageInfo_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_MessageInfo_TSPArchiveMessages_2eproto);
  }
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  *(_DWORD *)(a1 + 208) = 0;
  return a1;
}

void sub_100038414(_Unwind_Exception *a1)
{
  if (*(int *)(v2 + 172) >= 1) {
    sub_100163A7C(v6);
  }
  sub_10004F92C(v5);
  if (*(int *)(v2 + 124) >= 1)
  {
    uint64_t v8 = *(void *)(v2 + 128);
    uint64_t v10 = *(void *)(v8 - 8);
    unint64_t v9 = (void *)(v8 - 8);
    if (!v10) {
      operator delete(v9);
    }
  }
  if (*(int *)(v2 + 100) >= 1)
  {
    uint64_t v11 = *(void *)(v2 + 104);
    uint64_t v13 = *(void *)(v11 - 8);
    int v12 = (void *)(v11 - 8);
    if (!v13) {
      operator delete(v12);
    }
  }
  if (*(int *)(v2 + 76) >= 1)
  {
    uint64_t v14 = *(void *)(v2 + 80);
    uint64_t v16 = *(void *)(v14 - 8);
    uint64_t v15 = (void *)(v14 - 8);
    if (!v16) {
      operator delete(v15);
    }
  }
  sub_10004F8AC(v3);
  sub_100163A5C(v4, v1);
  _Unwind_Resume(a1);
}

void TSP::MessageInfo::~MessageInfo(TSP::MessageInfo *this)
{
  if (this != (TSP::MessageInfo *)&TSP::_MessageInfo_default_instance_)
  {
    uint64_t v2 = (TSP::FieldPath *)*((void *)this + 24);
    if (v2)
    {
      TSP::FieldPath::~FieldPath(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  if (*((int *)this + 43) >= 1)
  {
    uint64_t v3 = *((void *)this + 22);
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t v4 = (void *)(v3 - 8);
    if (!v5) {
      operator delete(v4);
    }
  }
  sub_10004F92C((void *)this + 18);
  if (*((int *)this + 31) >= 1)
  {
    uint64_t v6 = *((void *)this + 16);
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v7 = (void *)(v6 - 8);
    if (!v8) {
      operator delete(v7);
    }
  }
  if (*((int *)this + 25) >= 1)
  {
    uint64_t v9 = *((void *)this + 13);
    uint64_t v11 = *(void *)(v9 - 8);
    uint64_t v10 = (void *)(v9 - 8);
    if (!v11) {
      operator delete(v10);
    }
  }
  if (*((int *)this + 19) >= 1)
  {
    uint64_t v12 = *((void *)this + 10);
    uint64_t v14 = *(void *)(v12 - 8);
    uint64_t v13 = (void *)(v12 - 8);
    if (!v14) {
      operator delete(v13);
    }
  }
  sub_10004F8AC((void *)this + 6);
  if (*((int *)this + 7) >= 1)
  {
    uint64_t v15 = *((void *)this + 4);
    uint64_t v17 = *(void *)(v15 - 8);
    uint64_t v16 = (void *)(v15 - 8);
    if (!v17) {
      operator delete(v16);
    }
  }
}

{
  uint64_t vars8;

  TSP::MessageInfo::~MessageInfo(this);
  operator delete();
}

uint64_t TSP::MessageInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::MessageInfo::Clear(TSP::MessageInfo *this)
{
  *((_DWORD *)this + 6) = 0;
  uint64_t v2 = *((unsigned int *)this + 14);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::Arena ***)(*((void *)this + 8) + 8);
    do
    {
      uint64_t v4 = *v3++;
      TSP::FieldInfo::Clear(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)this + 14) = 0;
  }
  *((_DWORD *)this + 18) = 0;
  *((_DWORD *)this + 24) = 0;
  *((_DWORD *)this + 3google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  BOOL result = sub_10004F70C((google::protobuf::Arena **)this + 18);
  *((_DWORD *)this + 42) = 0;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v7 = *((void *)this + 24);
    char v8 = *(unsigned char *)(v7 + 8);
    BOOL result = (google::protobuf::Arena **)(v7 + 8);
    *((_DWORD *)result + 2) = 0;
    if (v8) {
      BOOL result = sub_100035820((unint64_t *)result);
    }
  }
  if ((v6 & 0xE) != 0)
  {
    *((_DWORD *)this + 52) = 0;
    *((void *)this + 25) = 0;
  }
  char v10 = *((unsigned char *)this + 8);
  uint64_t v9 = (char *)this + 8;
  *((_DWORD *)v9 + 2) = 0;
  if (v10)
  {
    return sub_100035820((unint64_t *)v9);
  }
  return result;
}

google::protobuf::Arena **TSP::FieldPath::Clear(TSP::FieldPath *this)
{
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::MessageInfo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  dispatch_data_t v56 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v56, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (2)
    {
      char v8 = (google::protobuf::internal *)((char *)v56 + 1);
      unsigned int v9 = *(unsigned __int8 *)v56;
      if (*(char *)v56 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v56, (const char *)(v10 - 128));
          dispatch_data_t v56 = TagFallback;
          if (!TagFallback) {
            goto LABEL_100;
          }
          char v8 = TagFallback;
          unsigned int v9 = v15;
LABEL_8:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 8) {
                goto LABEL_88;
              }
              v5 |= 2u;
              uint64_t v11 = (google::protobuf::internal *)((char *)v8 + 1);
              LODWORD(v12) = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_13;
              }
              int v13 = *(char *)v11;
              uint64_t v12 = (const char *)(v12 + (v13 << 7) - 128);
              if ((v13 & 0x80000000) == 0)
              {
                uint64_t v11 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_13:
                dispatch_data_t v56 = v11;
                *(_DWORD *)(a1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v12;
                goto LABEL_96;
              }
              id v43 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v12);
              dispatch_data_t v56 = v43;
              *(_DWORD *)(a1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v44;
              if (!v43) {
                goto LABEL_100;
              }
              goto LABEL_96;
            case 2u:
              if (v9 != 18)
              {
                if (v9 == 16)
                {
                  int v49 = sub_100038CA0(&v56);
                  sub_100038D00(a1, v49);
                  goto LABEL_86;
                }
LABEL_88:
                if (v9) {
                  BOOL v54 = (v9 & 7) == 4;
                }
                else {
                  BOOL v54 = 1;
                }
                if (v54)
                {
                  *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
                  goto LABEL_2;
                }
                if (*v7)
                {
                  id v55 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
                }
                else
                {
                  id v55 = sub_10003562C((unint64_t *)(a1 + 8));
                  char v8 = v56;
                }
                id v29 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v55, v8);
                goto LABEL_95;
              }
              uint64_t v16 = (unsigned int *)(a1 + 24);
LABEL_69:
              id v29 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt32Parser(v16, v8, a3);
              goto LABEL_95;
            case 3u:
              if (v9 != 24) {
                goto LABEL_88;
              }
              v5 |= 4u;
              uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 1);
              LODWORD(v18) = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_22;
              }
              int v19 = *(char *)v17;
              unsigned int v18 = (const char *)(v18 + (v19 << 7) - 128);
              if (v19 < 0)
              {
                id v45 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v18);
                dispatch_data_t v56 = v45;
                *(_DWORD *)(a1 + 204) = v46;
                if (!v45) {
                  goto LABEL_100;
                }
              }
              else
              {
                uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_22:
                dispatch_data_t v56 = v17;
                *(_DWORD *)(a1 + 204) = v18;
              }
              goto LABEL_96;
            case 4u:
              if (v9 != 34) {
                goto LABEL_88;
              }
              uint64_t v20 = (google::protobuf::internal *)((char *)v8 - 1);
              while (1)
              {
                uint64_t v21 = (google::protobuf::internal *)((char *)v20 + 1);
                dispatch_data_t v56 = (google::protobuf::internal *)((char *)v20 + 1);
                int v22 = *(int **)(a1 + 64);
                if (!v22) {
                  break;
                }
                uint64_t v23 = *(int *)(a1 + 56);
                int v24 = *v22;
                if ((int)v23 >= *v22)
                {
                  if (v24 == *(_DWORD *)(a1 + 60))
                  {
LABEL_30:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v24 + 1);
                    int v22 = *(int **)(a1 + 64);
                    int v24 = *v22;
                  }
                  *int v22 = v24 + 1;
                  uint64_t v25 = google::protobuf::Arena::CreateMaybeMessage<TSP::FieldInfo>(*(void *)(a1 + 48));
                  uint64_t v26 = *(void *)(a1 + 64);
                  uint64_t v27 = *(int *)(a1 + 56);
                  *(_DWORD *)(a1 + 56) = v27 + 1;
                  *(void *)(v26 + 8 * v27 + 8) = v25;
                  uint64_t v21 = v56;
                  goto LABEL_32;
                }
                *(_DWORD *)(a1 + 56) = v23 + 1;
                uint64_t v25 = *(void *)&v22[2 * v23 + 2];
LABEL_32:
                uint64_t v20 = sub_100038D70(a3, v25, v21);
                dispatch_data_t v56 = v20;
                if (!v20) {
                  goto LABEL_100;
                }
                if (*(void *)a3 <= (unint64_t)v20 || *(unsigned char *)v20 != 34) {
                  goto LABEL_96;
                }
              }
              int v24 = *(_DWORD *)(a1 + 60);
              goto LABEL_30;
            case 5u:
              if (v9 != 42)
              {
                if (v9 == 40)
                {
                  unint64_t v50 = sub_100037CBC(&v56);
                  sub_100038E40(a1, v50);
                  goto LABEL_86;
                }
                goto LABEL_88;
              }
              int v28 = (unsigned int *)(a1 + 72);
LABEL_40:
              id v29 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt64Parser(v28, v8, a3);
LABEL_95:
              dispatch_data_t v56 = v29;
              if (!v29)
              {
LABEL_100:
                dispatch_data_t v56 = 0;
                goto LABEL_2;
              }
LABEL_96:
              if (sub_1000355B8(a3, &v56, *(_DWORD *)(a3 + 92))) {
                goto LABEL_2;
              }
              continue;
            case 6u:
              if (v9 != 50)
              {
                if (v9 == 48)
                {
                  unint64_t v51 = sub_100037CBC(&v56);
                  sub_100038EB0(a1, v51);
                  goto LABEL_86;
                }
                goto LABEL_88;
              }
              int v28 = (unsigned int *)(a1 + 96);
              goto LABEL_40;
            case 7u:
              if (v9 != 56) {
                goto LABEL_88;
              }
              v5 |= 8u;
              unsigned int v30 = (google::protobuf::internal *)((char *)v8 + 1);
              LODWORD(v3sub_1000333D0((uint64_t *)this + 1) = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_45;
              }
              int v32 = *(char *)v30;
              unsigned int v31 = (const char *)(v31 + (v32 << 7) - 128);
              if (v32 < 0)
              {
                id v47 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v31);
                dispatch_data_t v56 = v47;
                *(_DWORD *)(a1 + 208) = v48;
                if (!v47) {
                  goto LABEL_100;
                }
              }
              else
              {
                unsigned int v30 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_45:
                dispatch_data_t v56 = v30;
                *(_DWORD *)(a1 + 208) = v31;
              }
              goto LABEL_96;
            case 8u:
              if (v9 != 66)
              {
                if (v9 == 64)
                {
                  int v52 = sub_100038CA0(&v56);
                  sub_100038F20(a1, v52);
                  goto LABEL_86;
                }
                goto LABEL_88;
              }
              uint64_t v16 = (unsigned int *)(a1 + 120);
              goto LABEL_69;
            case 9u:
              if (v9 != 74) {
                goto LABEL_88;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v33 = *(void *)(a1 + 192);
              if (!v33)
              {
                uint64_t v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
                if (*v7) {
                  uint64_t v34 = (void *)*v34;
                }
                uint64_t v33 = google::protobuf::Arena::CreateMaybeMessage<TSP::FieldPath>(v34);
                *(void *)(a1 + 192) = v33;
                char v8 = v56;
              }
              id v29 = sub_100038F90(a3, v33, v8);
              goto LABEL_95;
            case 0xAu:
              if (v9 != 82) {
                goto LABEL_88;
              }
              int v35 = (google::protobuf::internal *)((char *)v8 - 1);
              break;
            case 0xBu:
              if (v9 != 90)
              {
                if (v9 == 88)
                {
                  int v53 = sub_100038CA0(&v56);
                  sub_100039060(a1, v53);
LABEL_86:
                  if (!v56) {
                    goto LABEL_100;
                  }
                  goto LABEL_96;
                }
                goto LABEL_88;
              }
              uint64_t v16 = (unsigned int *)(a1 + 168);
              goto LABEL_69;
            default:
              goto LABEL_88;
          }
          while (1)
          {
            id v36 = (google::protobuf::internal *)((char *)v35 + 1);
            dispatch_data_t v56 = (google::protobuf::internal *)((char *)v35 + 1);
            uint64_t v37 = *(int **)(a1 + 160);
            if (!v37) {
              break;
            }
            uint64_t v38 = *(int *)(a1 + 152);
            int v39 = *v37;
            if ((int)v38 >= *v37)
            {
              if (v39 == *(_DWORD *)(a1 + 156))
              {
LABEL_61:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 144), v39 + 1);
                uint64_t v37 = *(int **)(a1 + 160);
                int v39 = *v37;
              }
              int *v37 = v39 + 1;
              uint64_t v40 = google::protobuf::Arena::CreateMaybeMessage<TSP::FieldPath>(*(void *)(a1 + 144));
              uint64_t v41 = *(void *)(a1 + 160);
              uint64_t v42 = *(int *)(a1 + 152);
              *(_DWORD *)(a1 + 152) = v42 + 1;
              *(void *)(v41 + 8 * v42 + 8) = v40;
              id v36 = v56;
              goto LABEL_63;
            }
            *(_DWORD *)(a1 + 152) = v38 + 1;
            uint64_t v40 = *(void *)&v37[2 * v38 + 2];
LABEL_63:
            int v35 = sub_100038F90(a3, v40, v36);
            dispatch_data_t v56 = v35;
            if (!v35) {
              goto LABEL_100;
            }
            if (*(void *)a3 <= (unint64_t)v35 || *(unsigned char *)v35 != 82) {
              goto LABEL_96;
            }
          }
          int v39 = *(_DWORD *)(a1 + 156);
          goto LABEL_61;
        }
        char v8 = (google::protobuf::internal *)((char *)v56 + 2);
      }
      break;
    }
    dispatch_data_t v56 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v56;
}

unint64_t sub_100038CA0(google::protobuf::internal **a1)
{
  char v2 = *a1;
  uint64_t v3 = *a1;
  int v5 = *(char *)v3;
  uint64_t v4 = (google::protobuf::internal *)((char *)v3 + 1);
  unint64_t v6 = v5;
  if (v5 < 0)
  {
    unint64_t v6 = v6 + (*(unsigned __int8 *)v4 << 7) - 128;
    if (*(char *)v4 < 0) {
      uint64_t v4 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v2, (const char *)v6);
    }
    else {
      uint64_t v4 = (google::protobuf::internal *)((char *)v2 + 2);
    }
  }
  *a1 = v4;
  return v6;
}

void sub_100038D00(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 24);
  uint64_t v4 = (_DWORD *)(a1 + 24);
  if (v5 == *(_DWORD *)(a1 + 28))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)(a1 + 24), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 32) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 32) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

google::protobuf::internal *sub_100038D70(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::FieldInfo::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

void sub_100038E40(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 72);
  uint64_t v4 = (_DWORD *)(a1 + 72);
  if (v5 == *(_DWORD *)(a1 + 76))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)(a1 + 72), v5 + 1);
    *(void *)(*(void *)(a1 + 80) + 8 * v5) = a2;
  }
  else
  {
    *(void *)(*(void *)(a1 + 80) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_100038EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 96);
  uint64_t v4 = (_DWORD *)(a1 + 96);
  if (v5 == *(_DWORD *)(a1 + 100))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)(a1 + 96), v5 + 1);
    *(void *)(*(void *)(a1 + 104) + 8 * v5) = a2;
  }
  else
  {
    *(void *)(*(void *)(a1 + 104) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_100038F20(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 120);
  uint64_t v4 = (_DWORD *)(a1 + 120);
  if (v5 == *(_DWORD *)(a1 + 124))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)(a1 + 120), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 128) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 128) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

google::protobuf::internal *sub_100038F90(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::FieldPath::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

void sub_100039060(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 168);
  uint64_t v4 = (_DWORD *)(a1 + 168);
  if (v5 == *(_DWORD *)(a1 + 172))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)(a1 + 168), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 176) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 176) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

const google::protobuf::UnknownFieldSet *TSP::MessageInfo::_InternalSerialize(TSP::MessageInfo *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = (unsigned __int8 *)a2;
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
    }
    unsigned int v7 = *((_DWORD *)this + 50);
    unsigned __int8 *v4 = 8;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      if (v7 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
          unsigned int v9 = v8 >> 7;
          ++v4;
          unsigned int v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v9;
      }
      else
      {
        v4[2] = v8;
        v4 += 3;
      }
    }
    else
    {
      v4[1] = v7;
      v4 += 2;
    }
  }
  signed int v11 = *((_DWORD *)this + 10);
  if (v11 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 2, (int *)this + 6, v11, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned int v12 = *((_DWORD *)this + 51);
    unsigned __int8 *v4 = 24;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      if (v12 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v13 | 0x80;
          unsigned int v14 = v13 >> 7;
          ++v4;
          unsigned int v15 = v13 >> 14;
          v13 >>= 7;
        }
        while (v15);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v14;
      }
      else
      {
        v4[2] = v13;
        v4 += 3;
      }
    }
    else
    {
      v4[1] = v12;
      v4 += 2;
    }
  }
  int v16 = *((_DWORD *)this + 14);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unsigned int v18 = *(TSP::FieldInfo **)(*((void *)this + 8) + 8 * i + 8);
      unsigned __int8 *v4 = 34;
      unsigned int v19 = *((_DWORD *)v18 + 5);
      if (v19 > 0x7F)
      {
        v4[1] = v19 | 0x80;
        unsigned int v21 = v19 >> 7;
        if (v19 >> 14)
        {
          uint64_t v20 = v4 + 3;
          do
          {
            *(v20 - sub_1000333D0((uint64_t *)this + 1) = v21 | 0x80;
            unsigned int v22 = v21 >> 7;
            ++v20;
            unsigned int v23 = v21 >> 14;
            v21 >>= 7;
          }
          while (v23);
          *(v20 - sub_1000333D0((uint64_t *)this + 1) = v22;
        }
        else
        {
          v4[2] = v21;
          uint64_t v20 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v19;
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)TSP::FieldInfo::_InternalSerialize(v18, v20, a3);
    }
  }
  signed int v24 = *((_DWORD *)this + 22);
  if (v24 > 0) {
    uint64_t v4 = sub_10004FB54(a3, 5, (int *)this + 18, v24, v4, (uint64_t (*)(uint64_t))google::protobuf::io::EpsCopyOutputStream::Encode64);
  }
  signed int v25 = *((_DWORD *)this + 28);
  if (v25 >= 1) {
    uint64_t v4 = sub_10004FB54(a3, 6, (int *)this + 24, v25, v4, (uint64_t (*)(uint64_t))google::protobuf::io::EpsCopyOutputStream::Encode64);
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned int v26 = *((_DWORD *)this + 52);
    unsigned __int8 *v4 = 56;
    if (v26 > 0x7F)
    {
      v4[1] = v26 | 0x80;
      unsigned int v27 = v26 >> 7;
      if (v26 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v27 | 0x80;
          unsigned int v28 = v27 >> 7;
          ++v4;
          unsigned int v29 = v27 >> 14;
          v27 >>= 7;
        }
        while (v29);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v28;
      }
      else
      {
        v4[2] = v27;
        v4 += 3;
      }
    }
    else
    {
      v4[1] = v26;
      v4 += 2;
    }
  }
  signed int v30 = *((_DWORD *)this + 34);
  if (v30 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 8, (int *)this + 30, v30, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned int v31 = (TSP::FieldPath *)*((void *)this + 24);
    unsigned __int8 *v4 = 74;
    unsigned int v32 = *((_DWORD *)v31 + 9);
    if (v32 > 0x7F)
    {
      v4[1] = v32 | 0x80;
      unsigned int v34 = v32 >> 7;
      if (v32 >> 14)
      {
        uint64_t v33 = (google::protobuf::UnknownFieldSet *)(v4 + 3);
        do
        {
          *((unsigned char *)v33 - sub_1000333D0((uint64_t *)this + 1) = v34 | 0x80;
          unsigned int v35 = v34 >> 7;
          uint64_t v33 = (google::protobuf::UnknownFieldSet *)((char *)v33 + 1);
          unsigned int v36 = v34 >> 14;
          v34 >>= 7;
        }
        while (v36);
        *((unsigned char *)v33 - sub_1000333D0((uint64_t *)this + 1) = v35;
      }
      else
      {
        v4[2] = v34;
        uint64_t v33 = (google::protobuf::UnknownFieldSet *)(v4 + 3);
      }
    }
    else
    {
      v4[1] = v32;
      uint64_t v33 = (google::protobuf::UnknownFieldSet *)(v4 + 2);
    }
    uint64_t v4 = (unsigned __int8 *)TSP::FieldPath::_InternalSerialize(v31, v33, a3);
  }
  int v37 = *((_DWORD *)this + 38);
  if (v37)
  {
    for (int j = 0; j != v37; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v39 = *(TSP::FieldPath **)(*((void *)this + 20) + 8 * j + 8);
      unsigned __int8 *v4 = 82;
      unsigned int v40 = *((_DWORD *)v39 + 9);
      if (v40 > 0x7F)
      {
        v4[1] = v40 | 0x80;
        unsigned int v42 = v40 >> 7;
        if (v40 >> 14)
        {
          uint64_t v41 = (google::protobuf::UnknownFieldSet *)(v4 + 3);
          do
          {
            *((unsigned char *)v41 - sub_1000333D0((uint64_t *)this + 1) = v42 | 0x80;
            unsigned int v43 = v42 >> 7;
            uint64_t v41 = (google::protobuf::UnknownFieldSet *)((char *)v41 + 1);
            unsigned int v44 = v42 >> 14;
            v42 >>= 7;
          }
          while (v44);
          *((unsigned char *)v41 - sub_1000333D0((uint64_t *)this + 1) = v43;
        }
        else
        {
          v4[2] = v42;
          uint64_t v41 = (google::protobuf::UnknownFieldSet *)(v4 + 3);
        }
      }
      else
      {
        v4[1] = v40;
        uint64_t v41 = (google::protobuf::UnknownFieldSet *)(v4 + 2);
      }
      uint64_t v4 = (unsigned __int8 *)TSP::FieldPath::_InternalSerialize(v39, v41, a3);
    }
  }
  id v45 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 46);
  if ((int)v45 > 0) {
    uint64_t v4 = sub_10004F9AC(a3, 11, (int *)this + 42, v45, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  uint64_t v46 = *((void *)this + 1);
  if ((v46 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v46 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, v45);
}

uint64_t TSP::MessageInfo::RequiredFieldsByteSizeFallback(TSP::MessageInfo *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 2) != 0)
  {
    uint64_t result = ((9 * (__clz(*((_DWORD *)this + 50) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 4) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  uint64_t result = 0;
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    result += ((9 * (__clz(*((_DWORD *)this + 51) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return result;
}

char *TSP::MessageInfo::ByteSizeLong(TSP::MessageInfo *this)
{
  if ((~*((_DWORD *)this + 4) & 6) != 0) {
    uint64_t v2 = TSP::MessageInfo::RequiredFieldsByteSizeFallback(this);
  }
  else {
    uint64_t v2 = ((9 * (__clz(*((_DWORD *)this + 50) | 1) ^ 0x1F) + 73) >> 6)
  }
       + ((9 * (__clz(*((_DWORD *)this + 51) | 1) ^ 0x1F) + 73) >> 6)
       + 2;
  uint64_t v3 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 6);
  uint64_t v4 = 11;
  uint64_t v5 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v3 >= 0) {
    uint64_t v4 = v5;
  }
  uint64_t v6 = v4 + v2;
  if (v3) {
    int v7 = v3;
  }
  else {
    int v7 = 0;
  }
  if (!v3) {
    uint64_t v6 = v2;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v7;
  uint64_t v8 = v6 + v3;
  uint64_t v9 = *((int *)this + 14);
  uint64_t v10 = v8 + v9;
  uint64_t v11 = *((void *)this + 8);
  if (v11) {
    unsigned int v12 = (TSP::FieldInfo **)(v11 + 8);
  }
  else {
    unsigned int v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      unsigned int v14 = *v12++;
      unsigned int v15 = TSP::FieldInfo::ByteSizeLong(v14);
      v10 += (uint64_t)&v15[(9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6];
      v13 -= 8;
    }
    while (v13);
  }
  uint64_t v16 = google::protobuf::internal::WireFormatLite::UInt64Size((unsigned int *)this + 18);
  uint64_t v17 = 11;
  uint64_t v18 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v16 >= 0) {
    uint64_t v17 = v18;
  }
  uint64_t v19 = v17 + v10;
  if (v16) {
    int v20 = v16;
  }
  else {
    int v20 = 0;
  }
  if (!v16) {
    uint64_t v19 = v10;
  }
  *((_DWORD *)this + 22) = v20;
  uint64_t v21 = v19 + v16;
  uint64_t v22 = google::protobuf::internal::WireFormatLite::UInt64Size((unsigned int *)this + 24);
  uint64_t v23 = 11;
  uint64_t v24 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v22 >= 0) {
    uint64_t v23 = v24;
  }
  uint64_t v25 = v23 + v21;
  if (v22) {
    int v26 = v22;
  }
  else {
    int v26 = 0;
  }
  if (!v22) {
    uint64_t v25 = v21;
  }
  *((_DWORD *)this + 28) = v26;
  uint64_t v27 = v25 + v22;
  uint64_t v28 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 30);
  uint64_t v29 = 11;
  uint64_t v30 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v28 >= 0) {
    uint64_t v29 = v30;
  }
  uint64_t v31 = v29 + v27;
  if (v28) {
    int v32 = v28;
  }
  else {
    int v32 = 0;
  }
  if (v28) {
    uint64_t v33 = v31;
  }
  else {
    uint64_t v33 = v27;
  }
  *((_DWORD *)this + 34) = v32;
  uint64_t v34 = *((int *)this + 38);
  uint64_t v35 = v33 + v28 + v34;
  uint64_t v36 = *((void *)this + 20);
  if (v36) {
    int v37 = (TSP::FieldPath **)(v36 + 8);
  }
  else {
    int v37 = 0;
  }
  if (v34)
  {
    uint64_t v38 = 8 * v34;
    do
    {
      int v39 = *v37++;
      unsigned int v40 = TSP::FieldPath::ByteSizeLong(v39);
      v35 += (uint64_t)&v40[(9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6];
      v38 -= 8;
    }
    while (v38);
  }
  uint64_t v41 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 42);
  uint64_t v42 = 11;
  uint64_t v43 = ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v41 >= 0) {
    uint64_t v42 = v43;
  }
  uint64_t v44 = v42 + v35;
  if (v41) {
    int v45 = v41;
  }
  else {
    int v45 = 0;
  }
  if (!v41) {
    uint64_t v44 = v35;
  }
  *((_DWORD *)this + 46) = v45;
  uint64_t v46 = (const google::protobuf::UnknownFieldSet *)(v44 + v41);
  int v47 = *((_DWORD *)this + 4);
  if (v47)
  {
    int v48 = TSP::FieldPath::ByteSizeLong(*((TSP::FieldPath **)this + 24));
    uint64_t v46 = (const google::protobuf::UnknownFieldSet *)&v48[((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6)
                                                        + 1
                                                        + (void)v46];
  }
  if ((v47 & 8) != 0) {
    uint64_t v46 = (const google::protobuf::UnknownFieldSet *)((char *)v46
  }
                                                    + ((9 * (__clz(*((_DWORD *)this + 52) | 1) ^ 0x1F) + 73) >> 6)
                                                    + 1);
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::MessageInfo *)((char *)this + 8), v46, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v46;
    return (char *)v46;
  }
}

void TSP::MessageInfo::MergeFrom(TSP::MessageInfo *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::MessageInfo::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void *TSP::MessageInfo::MergeFrom(void *this, const TSP::MessageInfo *a2)
{
  uint64_t v3 = (int *)this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4(this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    uint64_t v7 = v3[6];
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)v3 + 6, v7 + v6);
    uint64_t v8 = *((void *)v3 + 4);
    v3[6] += *((_DWORD *)a2 + 6);
    this = memcpy((void *)(v8 + 4 * v7), *((const void **)a2 + 4), 4 * *((int *)a2 + 6));
  }
  unsigned int v9 = *((_DWORD *)a2 + 14);
  if (v9)
  {
    uint64_t v10 = (TSP::FieldInfo **)(*((void *)a2 + 8) + 8);
    uint64_t v11 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 12), *((_DWORD *)a2 + 14));
    this = sub_10004FC68((uint64_t *)v3 + 6, (TSP::FieldInfo **)v11, v10, v9, **((_DWORD **)v3 + 8) - v3[14]);
    signed int v12 = v3[14] + v9;
    v3[14] = v12;
    uint64_t v13 = (signed int *)*((void *)v3 + 8);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *((_DWORD *)a2 + 18);
  if (v14)
  {
    uint64_t v15 = v3[18];
    google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)v3 + 18, v15 + v14);
    uint64_t v16 = *((void *)v3 + 10);
    v3[18] += *((_DWORD *)a2 + 18);
    this = memcpy((void *)(v16 + 8 * v15), *((const void **)a2 + 10), 8 * *((int *)a2 + 18));
  }
  int v17 = *((_DWORD *)a2 + 24);
  if (v17)
  {
    uint64_t v18 = v3[24];
    google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)v3 + 24, v18 + v17);
    uint64_t v19 = *((void *)v3 + 13);
    v3[24] += *((_DWORD *)a2 + 24);
    this = memcpy((void *)(v19 + 8 * v18), *((const void **)a2 + 13), 8 * *((int *)a2 + 24));
  }
  int v20 = *((_DWORD *)a2 + 30);
  if (v20)
  {
    uint64_t v21 = v3[30];
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)v3 + 30, v21 + v20);
    uint64_t v22 = *((void *)v3 + 16);
    v3[30] += *((_DWORD *)a2 + 30);
    this = memcpy((void *)(v22 + 4 * v21), *((const void **)a2 + 16), 4 * *((int *)a2 + 30));
  }
  unsigned int v23 = *((_DWORD *)a2 + 38);
  if (v23)
  {
    uint64_t v24 = (TSP::FieldPath **)(*((void *)a2 + 20) + 8);
    uint64_t v25 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 36), *((_DWORD *)a2 + 38));
    this = sub_10004FD28((void **)v3 + 18, (void ***)v25, v24, v23, **((_DWORD **)v3 + 20) - v3[38]);
    signed int v26 = v3[38] + v23;
    v3[38] = v26;
    uint64_t v27 = (signed int *)*((void *)v3 + 20);
    if (*v27 < v26) {
      signed int *v27 = v26;
    }
  }
  int v28 = *((_DWORD *)a2 + 42);
  if (v28)
  {
    uint64_t v29 = v3[42];
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)v3 + 42, v29 + v28);
    uint64_t v30 = *((void *)v3 + 22);
    v3[42] += *((_DWORD *)a2 + 42);
    this = memcpy((void *)(v30 + 4 * v29), *((const void **)a2 + 22), 4 * *((int *)a2 + 42));
  }
  int v31 = *((_DWORD *)a2 + 4);
  if ((v31 & 0xF) != 0)
  {
    if (v31)
    {
      v3[4] |= 1u;
      int v32 = (void **)*((void *)v3 + 24);
      if (!v32)
      {
        uint64_t v33 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          uint64_t v33 = (void *)*v33;
        }
        int v32 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::FieldPath>(v33);
        *((void *)v3 + 24) = v32;
      }
      if (*((void *)a2 + 24)) {
        uint64_t v34 = (const TSP::FieldPath *)*((void *)a2 + 24);
      }
      else {
        uint64_t v34 = (const TSP::FieldPath *)&TSP::_FieldPath_default_instance_;
      }
      this = TSP::FieldPath::MergeFrom(v32, v34);
      if ((v31 & 2) == 0)
      {
LABEL_22:
        if ((v31 & 4) == 0) {
          goto LABEL_23;
        }
        goto LABEL_36;
      }
    }
    else if ((v31 & 2) == 0)
    {
      goto LABEL_22;
    }
    v3[50] = *((_DWORD *)a2 + 50);
    if ((v31 & 4) == 0)
    {
LABEL_23:
      if ((v31 & 8) == 0)
      {
LABEL_25:
        v3[4] |= v31;
        return this;
      }
LABEL_24:
      v3[52] = *((_DWORD *)a2 + 52);
      goto LABEL_25;
    }
LABEL_36:
    v3[51] = *((_DWORD *)a2 + 51);
    if ((v31 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  return this;
}

void **TSP::FieldPath::MergeFrom(void **this, const TSP::FieldPath *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if (v5)
  {
    uint64_t v7 = *((int *)v3 + 4);
    int v6 = v3 + 2;
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)v6, v7 + v5);
    uint64_t v8 = (char *)v6[1];
    *(_DWORD *)v6 += *((_DWORD *)a2 + 4);
    unsigned int v9 = &v8[4 * v7];
    uint64_t v10 = (const void *)*((void *)a2 + 3);
    size_t v11 = 4 * *((int *)a2 + 4);
    return (void **)memcpy(v9, v10, v11);
  }
  return this;
}

void TSP::MessageInfo::CopyFrom(TSP::MessageInfo *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::MessageInfo::Clear(this);
    TSP::MessageInfo::MergeFrom(this, a2);
  }
}

BOOL TSP::MessageInfo::IsInitialized(TSP::MessageInfo *this)
{
  if ((~*((_DWORD *)this + 4) & 6) != 0) {
    return 0;
  }
  uint64_t v1 = *((unsigned int *)this + 14);
  uint64_t v2 = *((void *)this + 8);
  do
  {
    BOOL result = (int)v1 < 1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v4 = *(void *)(v2 + 8 * v1--);
  }
  while ((*(unsigned char *)(v4 + 16) & 2) != 0);
  return result;
}

uint64_t TSP::MessageInfo::GetMetadata(TSP::MessageInfo *this)
{
  return off_1001E9C30[2];
}

uint64_t TSP::FieldInfo::FieldInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C7D60;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  if (atomic_load_explicit(scc_info_FieldInfo_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FieldInfo_TSPArchiveMessages_2eproto);
  }
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 96) = &google::protobuf::internal::fixed_address_empty_string;
  *(_DWORD *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  return a1;
}

void sub_100039F2C(_Unwind_Exception *a1)
{
  if (*(int *)(v2 + 76) >= 1) {
    sub_100163A7C(v4);
  }
  sub_100163A90(v6, v3, v5, v1);
  _Unwind_Resume(a1);
}

void TSP::FieldInfo::~FieldInfo(TSP::FieldInfo *this)
{
  uint64_t v2 = *((void *)this + 12);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if (this != (TSP::FieldInfo *)&TSP::_FieldInfo_default_instance_)
  {
    uint64_t v3 = (TSP::FieldPath *)*((void *)this + 13);
    if (v3)
    {
      TSP::FieldPath::~FieldPath(v3);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  if (*((int *)this + 19) >= 1)
  {
    uint64_t v4 = *((void *)this + 10);
    uint64_t v6 = *(void *)(v4 - 8);
    int v5 = (void *)(v4 - 8);
    if (!v6) {
      operator delete(v5);
    }
  }
  if (*((int *)this + 13) >= 1)
  {
    uint64_t v7 = *((void *)this + 7);
    uint64_t v9 = *(void *)(v7 - 8);
    uint64_t v8 = (void *)(v7 - 8);
    if (!v9) {
      operator delete(v8);
    }
  }
  if (*((int *)this + 7) >= 1)
  {
    uint64_t v10 = *((void *)this + 4);
    uint64_t v12 = *(void *)(v10 - 8);
    size_t v11 = (void *)(v10 - 8);
    if (!v12) {
      operator delete(v11);
    }
  }
}

{
  uint64_t vars8;

  TSP::FieldInfo::~FieldInfo(this);
  operator delete();
}

uint64_t TSP::FieldInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::FieldInfo::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = this;
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 12) = 0;
  *((_DWORD *)this + 18) = 0;
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    unint64_t v3 = (unint64_t)this[12] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) == 0) {
        goto LABEL_9;
      }
      goto LABEL_6;
    }
    *(unsigned char *)unint64_t v3 = 0;
    *(unsigned char *)(v3 + 2sub_10004F76C((void *)this + 3) = 0;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_9;
  }
LABEL_6:
  uint64_t v4 = this[13];
  char v5 = *((unsigned char *)v4 + 8);
  this = (google::protobuf::Arena **)((char *)v4 + 8);
  *((_DWORD *)this + 2) = 0;
  if (v5) {
    this = sub_100035820((unint64_t *)this);
  }
LABEL_9:
  if ((v2 & 0x1C) != 0)
  {
    *((_DWORD *)v1 + 3google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
    v1[14] = 0;
  }
  char v7 = *((unsigned char *)v1 + 8);
  uint64_t v6 = v1 + 1;
  *((_DWORD *)v6 + 2) = 0;
  if (v7)
  {
    return sub_100035820((unint64_t *)v6);
  }
  return this;
}

google::protobuf::internal *TSP::FieldInfo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v39 = a2;
  if ((sub_1000355B8(a3, &v39, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      char v7 = (google::protobuf::internal *)((char *)v39 + 1);
      unsigned int v8 = *(unsigned __int8 *)v39;
      if ((*(char *)v39 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v39, (const char *)(v9 - 128));
      int v39 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v7 = TagFallback;
      unsigned int v8 = v14;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_63;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v10 = *(void *)(a1 + 104);
          if (!v10)
          {
            size_t v11 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
            if (*v6) {
              size_t v11 = (void *)*v11;
            }
            uint64_t v10 = google::protobuf::Arena::CreateMaybeMessage<TSP::FieldPath>(v11);
            *(void *)(a1 + 104) = v10;
            char v7 = v39;
          }
          uint64_t v12 = sub_100038F90(a3, v10, v7);
          goto LABEL_70;
        case 2u:
          if (v8 != 16) {
            goto LABEL_63;
          }
          uint64_t v15 = (google::protobuf::internal *)((char *)v7 + 1);
          uint64_t v16 = *(unsigned __int8 *)v7;
          if ((*(char *)v7 & 0x80000000) == 0) {
            goto LABEL_21;
          }
          int v17 = *(char *)v15;
          int v18 = v16 + (v17 << 7);
          uint64_t v16 = (v18 - 128);
          if (v17 < 0)
          {
            int v39 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, (v18 - 128));
            if (!v39) {
              return 0;
            }
            uint64_t v16 = v29;
          }
          else
          {
            uint64_t v15 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_21:
            int v39 = v15;
          }
          if (v16 <= 3)
          {
            *(_DWORD *)(a1 + 16) |= 4u;
            *(_DWORD *)(a1 + 112) = v16;
            goto LABEL_71;
          }
          if (*v6) {
            int v37 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else {
            int v37 = sub_10003562C((unint64_t *)(a1 + 8));
          }
          unsigned int v38 = 2;
          goto LABEL_82;
        case 3u:
          if (v8 != 24) {
            goto LABEL_63;
          }
          uint64_t v19 = (google::protobuf::internal *)((char *)v7 + 1);
          uint64_t v16 = *(unsigned __int8 *)v7;
          if ((*(char *)v7 & 0x80000000) == 0) {
            goto LABEL_28;
          }
          int v20 = *(char *)v19;
          int v21 = v16 + (v20 << 7);
          uint64_t v16 = (v21 - 128);
          if (v20 < 0)
          {
            int v39 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, (v21 - 128));
            if (!v39) {
              return 0;
            }
            uint64_t v16 = v30;
          }
          else
          {
            uint64_t v19 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_28:
            int v39 = v19;
          }
          if ((v16 + 1) <= 3)
          {
            *(_DWORD *)(a1 + 16) |= 8u;
            *(_DWORD *)(a1 + 116) = v16;
            goto LABEL_71;
          }
          if (*v6) {
            int v37 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else {
            int v37 = sub_10003562C((unint64_t *)(a1 + 8));
          }
          unsigned int v38 = 3;
          goto LABEL_82;
        case 4u:
          if (v8 != 34)
          {
            if (v8 == 32)
            {
              unint64_t v32 = sub_100037CBC(&v39);
              sub_10003A5EC(a1, v32);
              goto LABEL_61;
            }
LABEL_63:
            if (v8) {
              BOOL v35 = (v8 & 7) == 4;
            }
            else {
              BOOL v35 = 1;
            }
            if (v35)
            {
              *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v8 - 1;
              return v39;
            }
            if (*v6)
            {
              uint64_t v36 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              uint64_t v36 = sub_10003562C((unint64_t *)(a1 + 8));
              char v7 = v39;
            }
            uint64_t v12 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v36, v7);
            goto LABEL_70;
          }
          uint64_t v22 = (unsigned int *)(a1 + 24);
          break;
        case 5u:
          if (v8 != 42)
          {
            if (v8 == 40)
            {
              unint64_t v33 = sub_100037CBC(&v39);
              sub_10003A65C(a1, v33);
              goto LABEL_61;
            }
            goto LABEL_63;
          }
          uint64_t v22 = (unsigned int *)(a1 + 48);
          break;
        case 6u:
          if (v8 != 48) {
            goto LABEL_63;
          }
          unsigned int v23 = (google::protobuf::internal *)((char *)v7 + 1);
          uint64_t v16 = *(unsigned __int8 *)v7;
          if ((*(char *)v7 & 0x80000000) == 0) {
            goto LABEL_40;
          }
          int v24 = *(char *)v23;
          int v25 = v16 + (v24 << 7);
          uint64_t v16 = (v25 - 128);
          if (v24 < 0)
          {
            int v39 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, (v25 - 128));
            if (!v39) {
              return 0;
            }
            uint64_t v16 = v31;
          }
          else
          {
            unsigned int v23 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_40:
            int v39 = v23;
          }
          if (v16 > 2)
          {
            if (*v6) {
              int v37 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else {
              int v37 = sub_10003562C((unint64_t *)(a1 + 8));
            }
            unsigned int v38 = 6;
LABEL_82:
            google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v37, v38, v16);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x10u;
            *(_DWORD *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v16;
          }
          goto LABEL_71;
        case 7u:
          if (v8 != 58)
          {
            if (v8 == 56)
            {
              int v34 = sub_100038CA0(&v39);
              sub_10003A6CC(a1, v34);
LABEL_61:
              if (!v39) {
                return 0;
              }
              goto LABEL_71;
            }
            goto LABEL_63;
          }
          uint64_t v12 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt32Parser((unsigned int *)(a1 + 72), v7, a3);
          goto LABEL_70;
        case 8u:
          if (v8 != 66) {
            goto LABEL_63;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v26 = *(void *)(a1 + 8);
          uint64_t v27 = (google::protobuf::Arena *)(v26 & 0xFFFFFFFFFFFFFFFELL);
          if (v26) {
            uint64_t v27 = *(google::protobuf::Arena **)v27;
          }
          int v28 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 96), v27);
          uint64_t v12 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v28, (std::string::value_type *)v39, a3);
          goto LABEL_70;
        default:
          goto LABEL_63;
      }
      uint64_t v12 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt64Parser(v22, v7, a3);
LABEL_70:
      int v39 = v12;
      if (!v12) {
        return 0;
      }
LABEL_71:
      if (sub_1000355B8(a3, &v39, *(_DWORD *)(a3 + 92))) {
        return v39;
      }
    }
    char v7 = (google::protobuf::internal *)((char *)v39 + 2);
LABEL_7:
    int v39 = v7;
    goto LABEL_8;
  }
  return v39;
}

void sub_10003A5EC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 24);
  uint64_t v4 = (_DWORD *)(a1 + 24);
  if (v5 == *(_DWORD *)(a1 + 28))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)(a1 + 24), v5 + 1);
    *(void *)(*(void *)(a1 + 32) + 8 * v5) = a2;
  }
  else
  {
    *(void *)(*(void *)(a1 + 32) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_10003A65C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 48);
  uint64_t v4 = (_DWORD *)(a1 + 48);
  if (v5 == *(_DWORD *)(a1 + 52))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)(a1 + 48), v5 + 1);
    *(void *)(*(void *)(a1 + 56) + 8 * v5) = a2;
  }
  else
  {
    *(void *)(*(void *)(a1 + 56) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_10003A6CC(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 72);
  uint64_t v4 = (_DWORD *)(a1 + 72);
  if (v5 == *(_DWORD *)(a1 + 76))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)(a1 + 72), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 80) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 80) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

const google::protobuf::UnknownFieldSet *TSP::FieldInfo::_InternalSerialize(TSP::FieldInfo *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    char v7 = (TSP::FieldPath *)*((void *)this + 13);
    unsigned __int8 *v4 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 9);
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        unsigned int v9 = (google::protobuf::UnknownFieldSet *)(v4 + 3);
        do
        {
          *((unsigned char *)v9 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
          unsigned int v11 = v10 >> 7;
          unsigned int v9 = (google::protobuf::UnknownFieldSet *)((char *)v9 + 1);
          unsigned int v12 = v10 >> 14;
          v10 >>= 7;
        }
        while (v12);
        *((unsigned char *)v9 - sub_1000333D0((uint64_t *)this + 1) = v11;
      }
      else
      {
        v4[2] = v10;
        unsigned int v9 = (google::protobuf::UnknownFieldSet *)(v4 + 3);
      }
    }
    else
    {
      v4[1] = v8;
      unsigned int v9 = (google::protobuf::UnknownFieldSet *)(v4 + 2);
    }
    uint64_t v4 = (unsigned __int8 *)TSP::FieldPath::_InternalSerialize(v7, v9, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_35;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v13 = *((int *)this + 28);
  unsigned __int8 *v4 = 16;
  if (v13 > 0x7F)
  {
    v4[1] = v13 | 0x80;
    unint64_t v14 = v13 >> 7;
    if (v13 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v14 | 0x80;
        unint64_t v15 = v14 >> 7;
        ++v4;
        unint64_t v16 = v14 >> 14;
        v14 >>= 7;
      }
      while (v16);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v15;
      if ((v6 & 8) == 0) {
        goto LABEL_35;
      }
    }
    else
    {
      v4[2] = v14;
      v4 += 3;
      if ((v6 & 8) == 0) {
        goto LABEL_35;
      }
    }
  }
  else
  {
    v4[1] = v13;
    v4 += 2;
    if ((v6 & 8) == 0) {
      goto LABEL_35;
    }
  }
LABEL_26:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v17 = *((int *)this + 29);
  unsigned __int8 *v4 = 24;
  if (v17 > 0x7F)
  {
    v4[1] = v17 | 0x80;
    unint64_t v18 = v17 >> 7;
    if (v17 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        ++v4;
        unint64_t v20 = v18 >> 14;
        v18 >>= 7;
      }
      while (v20);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v19;
    }
    else
    {
      v4[2] = v18;
      v4 += 3;
    }
  }
  else
  {
    v4[1] = v17;
    v4 += 2;
  }
LABEL_35:
  signed int v21 = *((_DWORD *)this + 10);
  if (v21 >= 1) {
    uint64_t v4 = sub_10004FB54(a3, 4, (int *)this + 6, v21, v4, (uint64_t (*)(uint64_t))google::protobuf::io::EpsCopyOutputStream::Encode64);
  }
  signed int v22 = *((_DWORD *)this + 16);
  if (v22 >= 1) {
    uint64_t v4 = sub_10004FB54(a3, 5, (int *)this + 12, v22, v4, (uint64_t (*)(uint64_t))google::protobuf::io::EpsCopyOutputStream::Encode64);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v23 = *((int *)this + 30);
    unsigned __int8 *v4 = 48;
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unint64_t v24 = v23 >> 7;
      if (v23 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v24 | 0x80;
          unint64_t v25 = v24 >> 7;
          ++v4;
          unint64_t v26 = v24 >> 14;
          v24 >>= 7;
        }
        while (v26);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v25;
      }
      else
      {
        v4[2] = v24;
        v4 += 3;
      }
    }
    else
    {
      v4[1] = v23;
      v4 += 2;
    }
  }
  uint64_t v27 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 22);
  if ((int)v27 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 7, (int *)this + 18, v27, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  if (v6) {
    uint64_t v4 = sub_100034480(a3, 8, (const void **)(*((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v28 = *((void *)this + 1);
  if ((v28 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v28 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, v27);
}

char *TSP::FieldInfo::ByteSizeLong(TSP::FieldInfo *this)
{
  if ((*((unsigned char *)this + 16) & 2) != 0)
  {
    unint64_t v3 = TSP::FieldPath::ByteSizeLong(*((TSP::FieldPath **)this + 13));
    uint64_t v2 = (uint64_t)&v3[((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = google::protobuf::internal::WireFormatLite::UInt64Size((unsigned int *)this + 6);
  if (v4)
  {
    int v5 = v4;
    if ((v4 & 0x80000000) != 0) {
      uint64_t v6 = 11;
    }
    else {
      uint64_t v6 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v6;
  }
  else
  {
    int v5 = 0;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v5;
  uint64_t v7 = v2 + v4;
  uint64_t v8 = google::protobuf::internal::WireFormatLite::UInt64Size((unsigned int *)this + 12);
  if (v8)
  {
    int v9 = v8;
    if ((v8 & 0x80000000) != 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v7 += v10;
  }
  else
  {
    int v9 = 0;
  }
  *((_DWORD *)this + 16) = v9;
  uint64_t v11 = v7 + v8;
  uint64_t v12 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 18);
  if (v12)
  {
    int v13 = v12;
    if ((v12 & 0x80000000) != 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v11 += v14;
  }
  else
  {
    int v13 = 0;
  }
  *((_DWORD *)this + 22) = v13;
  unint64_t v15 = (const google::protobuf::UnknownFieldSet *)(v11 + v12);
  int v16 = *((_DWORD *)this + 4);
  if (v16)
  {
    unint64_t v17 = *((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v19 = *(void *)(v17 + 8);
    if ((v18 & 0x80u) == 0) {
      uint64_t v19 = v18;
    }
    unint64_t v15 = (const google::protobuf::UnknownFieldSet *)((char *)v15 + v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1);
  }
  if ((v16 & 0x1C) != 0)
  {
    if ((v16 & 4) != 0)
    {
      int v20 = *((_DWORD *)this + 28);
      if (v20 < 0) {
        uint64_t v21 = 11;
      }
      else {
        uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      unint64_t v15 = (const google::protobuf::UnknownFieldSet *)((char *)v15 + v21);
      if ((v16 & 8) == 0)
      {
LABEL_29:
        if ((v16 & 0x10) == 0) {
          goto LABEL_43;
        }
LABEL_39:
        int v24 = *((_DWORD *)this + 30);
        if (v24 < 0) {
          uint64_t v25 = 11;
        }
        else {
          uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
        unint64_t v15 = (const google::protobuf::UnknownFieldSet *)((char *)v15 + v25);
        goto LABEL_43;
      }
    }
    else if ((v16 & 8) == 0)
    {
      goto LABEL_29;
    }
    int v22 = *((_DWORD *)this + 29);
    if (v22 < 0) {
      uint64_t v23 = 11;
    }
    else {
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    unint64_t v15 = (const google::protobuf::UnknownFieldSet *)((char *)v15 + v23);
    if ((v16 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_39;
  }
LABEL_43:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::FieldInfo *)((char *)this + 8), v15, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v15;
    return (char *)v15;
  }
}

void TSP::FieldInfo::MergeFrom(TSP::FieldInfo *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::FieldInfo::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void *TSP::FieldInfo::MergeFrom(void *this, const TSP::FieldInfo *a2)
{
  unint64_t v3 = (int *)this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4(this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    uint64_t v7 = v3[6];
    google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)v3 + 6, v7 + v6);
    uint64_t v8 = *((void *)v3 + 4);
    v3[6] += *((_DWORD *)a2 + 6);
    this = memcpy((void *)(v8 + 8 * v7), *((const void **)a2 + 4), 8 * *((int *)a2 + 6));
  }
  int v9 = *((_DWORD *)a2 + 12);
  if (v9)
  {
    uint64_t v10 = v3[12];
    google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)v3 + 12, v10 + v9);
    uint64_t v11 = *((void *)v3 + 7);
    v3[12] += *((_DWORD *)a2 + 12);
    this = memcpy((void *)(v11 + 8 * v10), *((const void **)a2 + 7), 8 * *((int *)a2 + 12));
  }
  int v12 = *((_DWORD *)a2 + 18);
  if (v12)
  {
    uint64_t v13 = v3[18];
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)v3 + 18, v13 + v12);
    uint64_t v14 = *((void *)v3 + 10);
    v3[18] += *((_DWORD *)a2 + 18);
    this = memcpy((void *)(v14 + 4 * v13), *((const void **)a2 + 10), 4 * *((int *)a2 + 18));
  }
  int v15 = *((_DWORD *)a2 + 4);
  if ((v15 & 0x1F) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *((void *)a2 + 12) & 0xFFFFFFFFFFFFFFFELL;
      v3[4] |= 1u;
      uint64_t v17 = *((void *)v3 + 1);
      uint64_t v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
      if (v17) {
        uint64_t v18 = *(google::protobuf::Arena **)v18;
      }
      this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)v3 + 12, v16, v18);
      if ((v15 & 2) == 0)
      {
LABEL_12:
        if ((v15 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_29;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_12;
    }
    v3[4] |= 2u;
    uint64_t v19 = (void **)*((void *)v3 + 13);
    if (!v19)
    {
      int v20 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        int v20 = (void *)*v20;
      }
      uint64_t v19 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::FieldPath>(v20);
      *((void *)v3 + 1sub_10004F76C((void *)this + 3) = v19;
    }
    if (*((void *)a2 + 13)) {
      uint64_t v21 = (const TSP::FieldPath *)*((void *)a2 + 13);
    }
    else {
      uint64_t v21 = (const TSP::FieldPath *)&TSP::_FieldPath_default_instance_;
    }
    this = TSP::FieldPath::MergeFrom(v19, v21);
    if ((v15 & 4) == 0)
    {
LABEL_13:
      if ((v15 & 8) == 0) {
        goto LABEL_14;
      }
      goto LABEL_30;
    }
LABEL_29:
    v3[28] = *((_DWORD *)a2 + 28);
    if ((v15 & 8) == 0)
    {
LABEL_14:
      if ((v15 & 0x10) == 0)
      {
LABEL_16:
        v3[4] |= v15;
        return this;
      }
LABEL_15:
      v3[30] = *((_DWORD *)a2 + 30);
      goto LABEL_16;
    }
LABEL_30:
    v3[29] = *((_DWORD *)a2 + 29);
    if ((v15 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  return this;
}

void TSP::FieldInfo::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::FieldInfo::Clear(this);
    TSP::FieldInfo::MergeFrom((TSP::FieldInfo *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::FieldInfo::IsInitialized(TSP::FieldInfo *this)
{
  return (*((unsigned __int8 *)this + 16) >> 1) & 1;
}

uint64_t TSP::FieldInfo::GetMetadata(TSP::FieldInfo *this)
{
  return off_1001E9C30[4];
}

void TSP::FieldPath::~FieldPath(TSP::FieldPath *this)
{
  sub_1000333D0((uint64_t *)this + 1);
  if (*((int *)this + 5) >= 1)
  {
    uint64_t v2 = *((void *)this + 3);
    uint64_t v4 = *(void *)(v2 - 8);
    unint64_t v3 = (void *)(v2 - 8);
    if (!v4) {
      operator delete(v3);
    }
  }
}

{
  uint64_t vars8;

  TSP::FieldPath::~FieldPath(this);
  operator delete();
}

uint64_t TSP::FieldPath::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

google::protobuf::internal *TSP::FieldPath::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unint64_t v16 = a2;
  if ((sub_1000355B8(a3, &v16, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      int v6 = (google::protobuf::internal *)((char *)v16 + 1);
      unsigned int v7 = *(unsigned __int8 *)v16;
      if ((*(char *)v16 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v16, (const char *)(v8 - 128));
      unint64_t v16 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      int v6 = TagFallback;
      unsigned int v7 = v11;
LABEL_7:
      if ((v7 & 0xFFFFFFF8) == 8)
      {
        if (v7 == 10)
        {
          int v9 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt32Parser((unsigned int *)(a1 + 16), v6, a3);
          goto LABEL_22;
        }
        if (v7 == 8)
        {
          int v12 = sub_100038CA0(&v16);
          sub_10003B228(a1, v12);
          if (!v16) {
            return 0;
          }
          goto LABEL_23;
        }
      }
      if (v7) {
        BOOL v13 = (v7 & 7) == 4;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v7 - 1;
        return v16;
      }
      if (*v5)
      {
        uint64_t v14 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        uint64_t v14 = sub_10003562C((unint64_t *)(a1 + 8));
        int v6 = v16;
      }
      int v9 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v14, v6);
LABEL_22:
      unint64_t v16 = v9;
      if (!v9) {
        return 0;
      }
LABEL_23:
      if (sub_1000355B8(a3, &v16, *(_DWORD *)(a3 + 92))) {
        return v16;
      }
    }
    int v6 = (google::protobuf::internal *)((char *)v16 + 2);
LABEL_6:
    unint64_t v16 = v6;
    goto LABEL_7;
  }
  return v16;
}

void sub_10003B228(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 16);
  uint64_t v4 = (_DWORD *)(a1 + 16);
  if (v5 == *(_DWORD *)(a1 + 20))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)(a1 + 16), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 24) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 24) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

const google::protobuf::UnknownFieldSet *TSP::FieldPath::_InternalSerialize(TSP::FieldPath *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 8);
  if ((int)v6 >= 1) {
    uint64_t v4 = (const google::protobuf::UnknownFieldSet *)sub_10004F9AC(a3, 1, (int *)this + 4, v6, (unsigned __int8 *)a2, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8), v4, a3, v6);
}

char *TSP::FieldPath::ByteSizeLong(TSP::FieldPath *this)
{
  uint64_t v2 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 4);
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 8) = v3;
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4 + v2);
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::FieldPath *)((char *)this + 8), v5, (_DWORD *)this + 9);
  }
  else
  {
    *((_DWORD *)this + 9) = v5;
    return (char *)(v4 + v2);
  }
}

void TSP::FieldPath::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::FieldPath::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void TSP::FieldPath::CopyFrom(TSP::FieldPath *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    uint64_t v5 = (char *)this + 8;
    *((_DWORD *)v5 + 2) = 0;
    if (v6) {
      sub_100035820((unint64_t *)v5);
    }
    TSP::FieldPath::MergeFrom((void **)this, lpsrc);
  }
}

uint64_t TSP::FieldPath::IsInitialized(TSP::FieldPath *this)
{
  return 1;
}

uint64_t TSP::FieldPath::GetMetadata(TSP::FieldPath *this)
{
  return off_1001E9C30[6];
}

uint64_t TSP::ComponentInfo::ComponentInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C7EC0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 32) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 248) = a2;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  *(void *)(a1 + 216) = a2;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 24google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  *(void *)(a1 + 224) = 0;
  if (atomic_load_explicit(scc_info_ComponentInfo_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ComponentInfo_TSPArchiveMessages_2eproto);
  }
  *(void *)(a1 + 264) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 272) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 28google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  *(_DWORD *)(a1 + 304) = 0;
  return a1;
}

void sub_10003B628(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int *a10)
{
  uint64_t v27 = v17;
  if (*(int *)(v14 + 244) >= 1) {
    sub_100163A7C(v19);
  }
  sub_10004FDE8(v15);
  if (*(int *)(v14 + 196) >= 1)
  {
    uint64_t v21 = *(void *)(v14 + 200);
    uint64_t v23 = *(void *)(v21 - 8);
    int v22 = (void *)(v21 - 8);
    if (!v23) {
      operator delete(v22);
    }
  }
  if (*(int *)(v14 + 172) >= 1)
  {
    uint64_t v24 = *(void *)(v14 + 176);
    uint64_t v26 = *(void *)(v24 - 8);
    uint64_t v25 = (void *)(v24 - 8);
    if (!v26) {
      operator delete(v25);
    }
  }
  sub_10004FF74(v18);
  sub_10004FEF4(v16);
  sub_10004FE74(v13);
  sub_10004FDE8(v12);
  sub_100163B04(v27, v10, a10, v11);
  _Unwind_Resume(a1);
}

void TSP::ComponentInfo::~ComponentInfo(TSP::ComponentInfo *this)
{
  uint64_t v2 = *((void *)this + 33);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = *((void *)this + 34);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
  if (*((int *)this + 61) >= 1)
  {
    uint64_t v4 = *((void *)this + 31);
    uint64_t v6 = *(void *)(v4 - 8);
    uint64_t v5 = (void *)(v4 - 8);
    if (!v6) {
      operator delete(v5);
    }
  }
  sub_10004FDE8((void *)this + 27);
  if (*((int *)this + 49) >= 1)
  {
    uint64_t v7 = *((void *)this + 25);
    uint64_t v9 = *(void *)(v7 - 8);
    unsigned int v8 = (void *)(v7 - 8);
    if (!v9) {
      operator delete(v8);
    }
  }
  if (*((int *)this + 43) >= 1)
  {
    uint64_t v10 = *((void *)this + 22);
    uint64_t v12 = *(void *)(v10 - 8);
    unsigned int v11 = (void *)(v10 - 8);
    if (!v12) {
      operator delete(v11);
    }
  }
  sub_10004FF74((void *)this + 18);
  sub_10004FEF4((void *)this + 15);
  sub_10004FE74((void *)this + 12);
  sub_10004FDE8((void *)this + 9);
  if (*((int *)this + 13) >= 1)
  {
    uint64_t v13 = *((void *)this + 7);
    uint64_t v15 = *(void *)(v13 - 8);
    uint64_t v14 = (void *)(v13 - 8);
    if (!v15) {
      operator delete(v14);
    }
  }
  if (*((int *)this + 7) >= 1)
  {
    uint64_t v16 = *((void *)this + 4);
    uint64_t v18 = *(void *)(v16 - 8);
    uint64_t v17 = (void *)(v16 - 8);
    if (!v18) {
      operator delete(v17);
    }
  }
}

{
  uint64_t vars8;

  TSP::ComponentInfo::~ComponentInfo(this);
  operator delete();
}

uint64_t TSP::ComponentInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ComponentInfo::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 12) = 0;
  uint64_t v2 = *((unsigned int *)this + 20);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::ComponentExternalReference **)((char *)this[11] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::ComponentExternalReference::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 104);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (google::protobuf::Arena ***)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v7 = *v6++;
      this = TSP::ComponentDataReference::Clear(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 104) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 128);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (google::protobuf::Arena ***)(*(void *)(v1 + 136) + 8);
    do
    {
      uint64_t v10 = *v9++;
      this = TSP::ObjectUUIDMapEntry::Clear(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 128) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 152);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (TSP::FeatureInfo **)(*(void *)(v1 + 160) + 8);
    do
    {
      uint64_t v13 = *v12++;
      this = TSP::FeatureInfo::Clear(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 152) = 0;
  }
  *(_DWORD *)(v1 + 168) = 0;
  *(_DWORD *)(v1 + 192) = 0;
  uint64_t v14 = *(unsigned int *)(v1 + 224);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (TSP::ComponentExternalReference **)(*(void *)(v1 + 232) + 8);
    do
    {
      uint64_t v16 = *v15++;
      this = TSP::ComponentExternalReference::Clear(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(v1 + 224) = 0;
  }
  *(_DWORD *)(v1 + 24google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  int v17 = *(_DWORD *)(v1 + 16);
  if ((v17 & 3) != 0)
  {
    if (v17)
    {
      unint64_t v18 = *(void *)(v1 + 264) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v18 + 23) < 0)
      {
        **(unsigned char **)unint64_t v18 = 0;
        *(void *)(v18 + 8) = 0;
        if ((v17 & 2) == 0) {
          goto LABEL_31;
        }
        goto LABEL_26;
      }
      *(unsigned char *)unint64_t v18 = 0;
      *(unsigned char *)(v18 + 2sub_10004F76C((void *)this + 3) = 0;
    }
    if ((v17 & 2) == 0) {
      goto LABEL_31;
    }
LABEL_26:
    unint64_t v19 = *(void *)(v1 + 272) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v19 + 23) < 0)
    {
      **(unsigned char **)unint64_t v19 = 0;
      *(void *)(v19 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v19 = 0;
      *(unsigned char *)(v19 + 2sub_10004F76C((void *)this + 3) = 0;
    }
  }
LABEL_31:
  if ((v17 & 0xFC) != 0)
  {
    *(void *)(v1 + 28google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
    *(void *)(v1 + 288) = 0;
    *(void *)(v1 + 296) = 0;
  }
  char v21 = *(unsigned char *)(v1 + 8);
  uint64_t v20 = v1 + 8;
  *(_DWORD *)(v20 + 296) = 0;
  *(_DWORD *)(v20 + 8) = 0;
  if (v21)
  {
    return sub_100035820((unint64_t *)v20);
  }
  return this;
}

google::protobuf::internal *TSP::ComponentInfo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  v102 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v102, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    v101 = (unint64_t *)(a1 + 8);
    while (2)
    {
      uint64_t v7 = (google::protobuf::internal *)((char *)v102 + 1);
      unsigned int v8 = *(unsigned __int8 *)v102;
      if (*(char *)v102 < 0)
      {
        unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*(char *)v7 < 0)
        {
          TagFallback = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v102, (const char *)(v9 - 128));
          v102 = TagFallback;
          if (!TagFallback) {
            goto LABEL_168;
          }
          uint64_t v7 = TagFallback;
          unsigned int v8 = v14;
LABEL_8:
          switch(v8 >> 3)
          {
            case 1u:
              if (v8 != 8) {
                goto LABEL_157;
              }
              v5 |= 4u;
              uint64_t v10 = (google::protobuf::internal *)((char *)v7 + 1);
              unint64_t v11 = *(unsigned __int8 *)v7;
              if ((*(char *)v7 & 0x80000000) == 0) {
                goto LABEL_13;
              }
              int v12 = *(char *)v10;
              unint64_t v11 = v11 + (v12 << 7) - 128;
              if ((v12 & 0x80000000) == 0)
              {
                uint64_t v10 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_13:
                v102 = v10;
                *(void *)(a1 + 28google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v11;
                goto LABEL_165;
              }
              uint64_t v80 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, v11);
              v102 = v80;
              *(void *)(a1 + 28google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v81;
              if (!v80) {
                goto LABEL_168;
              }
              goto LABEL_165;
            case 2u:
              if (v8 != 18) {
                goto LABEL_157;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v15 = *(void *)(a1 + 8);
              uint64_t v16 = (google::protobuf::Arena *)(v15 & 0xFFFFFFFFFFFFFFFELL);
              if (v15) {
                uint64_t v16 = *(google::protobuf::Arena **)v16;
              }
              int v17 = (uint64_t **)(a1 + 264);
              goto LABEL_24;
            case 3u:
              if (v8 != 26) {
                goto LABEL_157;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v18 = *(void *)(a1 + 8);
              uint64_t v16 = (google::protobuf::Arena *)(v18 & 0xFFFFFFFFFFFFFFFELL);
              if (v18) {
                uint64_t v16 = *(google::protobuf::Arena **)v16;
              }
              int v17 = (uint64_t **)(a1 + 272);
LABEL_24:
              unint64_t v19 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v17, v16);
              uint64_t v20 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v19, (std::string::value_type *)v102, a3);
              goto LABEL_164;
            case 4u:
              if (v8 == 34)
              {
                char v21 = (unsigned int *)(a1 + 24);
LABEL_95:
                uint64_t v20 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt32Parser(v21, v7, a3);
                goto LABEL_164;
              }
              if (v8 == 32)
              {
                int v94 = sub_100038CA0(&v102);
                sub_100038D00(a1, v94);
                goto LABEL_155;
              }
              goto LABEL_157;
            case 5u:
              if (v8 == 42)
              {
                char v21 = (unsigned int *)(a1 + 48);
                goto LABEL_95;
              }
              if (v8 == 40)
              {
                int v95 = sub_100038CA0(&v102);
                sub_10003C470(a1, v95);
                goto LABEL_155;
              }
              goto LABEL_157;
            case 6u:
              if (v8 != 50) {
                goto LABEL_157;
              }
              int v22 = (google::protobuf::internal *)((char *)v7 - 1);
              while (1)
              {
                uint64_t v23 = (google::protobuf::internal *)((char *)v22 + 1);
                v102 = (google::protobuf::internal *)((char *)v22 + 1);
                uint64_t v24 = *(int **)(a1 + 88);
                if (!v24) {
                  break;
                }
                uint64_t v25 = *(int *)(a1 + 80);
                int v26 = *v24;
                if ((int)v25 >= *v24)
                {
                  if (v26 == *(_DWORD *)(a1 + 84))
                  {
LABEL_36:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v26 + 1);
                    uint64_t v24 = *(int **)(a1 + 88);
                    int v26 = *v24;
                  }
                  *uint64_t v24 = v26 + 1;
                  uint64_t v27 = google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentExternalReference>(*(void *)(a1 + 72));
                  uint64_t v28 = *(void *)(a1 + 88);
                  uint64_t v29 = *(int *)(a1 + 80);
                  *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v29 + 1;
                  *(void *)(v28 + 8 * v29 + 8) = v27;
                  uint64_t v23 = v102;
                  goto LABEL_38;
                }
                *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v25 + 1;
                uint64_t v27 = *(void *)&v24[2 * v25 + 2];
LABEL_38:
                int v22 = sub_10003C4E0(a3, v27, v23);
                v102 = v22;
                if (!v22) {
                  goto LABEL_168;
                }
                if (*(void *)a3 <= (unint64_t)v22 || *(unsigned char *)v22 != 50) {
                  goto LABEL_165;
                }
              }
              int v26 = *(_DWORD *)(a1 + 84);
              goto LABEL_36;
            case 7u:
              if (v8 != 58) {
                goto LABEL_157;
              }
              uint64_t v30 = (google::protobuf::internal *)((char *)v7 - 1);
              while (1)
              {
                uint64_t v31 = (google::protobuf::internal *)((char *)v30 + 1);
                v102 = (google::protobuf::internal *)((char *)v30 + 1);
                unint64_t v32 = *(int **)(a1 + 112);
                if (!v32) {
                  break;
                }
                uint64_t v33 = *(int *)(a1 + 104);
                int v34 = *v32;
                if ((int)v33 >= *v32)
                {
                  if (v34 == *(_DWORD *)(a1 + 108))
                  {
LABEL_49:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 96), v34 + 1);
                    unint64_t v32 = *(int **)(a1 + 112);
                    int v34 = *v32;
                  }
                  *unint64_t v32 = v34 + 1;
                  uint64_t v35 = google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentDataReference>(*(void *)(a1 + 96));
                  uint64_t v36 = *(void *)(a1 + 112);
                  uint64_t v37 = *(int *)(a1 + 104);
                  *(_DWORD *)(a1 + 104) = v37 + 1;
                  *(void *)(v36 + 8 * v37 + 8) = v35;
                  uint64_t v31 = v102;
                  goto LABEL_51;
                }
                *(_DWORD *)(a1 + 104) = v33 + 1;
                uint64_t v35 = *(void *)&v32[2 * v33 + 2];
LABEL_51:
                uint64_t v30 = sub_10003C5B0(a3, v35, v31);
                v102 = v30;
                if (!v30) {
                  goto LABEL_168;
                }
                if (*(void *)a3 <= (unint64_t)v30 || *(unsigned char *)v30 != 58) {
                  goto LABEL_165;
                }
              }
              int v34 = *(_DWORD *)(a1 + 108);
              goto LABEL_49;
            case 0xAu:
              if (v8 != 80) {
                goto LABEL_157;
              }
              v5 |= 0x10u;
              unsigned int v38 = (google::protobuf::internal *)((char *)v7 + 1);
              unint64_t v39 = *(unsigned __int8 *)v7;
              if ((*(char *)v7 & 0x80000000) == 0) {
                goto LABEL_59;
              }
              int v40 = *(char *)v38;
              unint64_t v39 = v39 + (v40 << 7) - 128;
              if (v40 < 0)
              {
                uint64_t v82 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, v39);
                v102 = v82;
                *(unsigned char *)(a1 + 296) = v83 != 0;
                if (!v82) {
                  goto LABEL_168;
                }
              }
              else
              {
                unsigned int v38 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_59:
                v102 = v38;
                *(unsigned char *)(a1 + 296) = v39 != 0;
              }
              goto LABEL_165;
            case 0xBu:
              if (v8 != 90) {
                goto LABEL_157;
              }
              uint64_t v41 = (google::protobuf::internal *)((char *)v7 - 1);
              while (1)
              {
                uint64_t v42 = (google::protobuf::internal *)((char *)v41 + 1);
                v102 = (google::protobuf::internal *)((char *)v41 + 1);
                uint64_t v43 = *(int **)(a1 + 136);
                if (!v43) {
                  break;
                }
                uint64_t v44 = *(int *)(a1 + 128);
                int v45 = *v43;
                if ((int)v44 >= *v43)
                {
                  if (v45 == *(_DWORD *)(a1 + 132))
                  {
LABEL_67:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 120), v45 + 1);
                    uint64_t v43 = *(int **)(a1 + 136);
                    int v45 = *v43;
                  }
                  *uint64_t v43 = v45 + 1;
                  uint64_t v46 = google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectUUIDMapEntry>(*(void *)(a1 + 120));
                  uint64_t v47 = *(void *)(a1 + 136);
                  uint64_t v48 = *(int *)(a1 + 128);
                  *(_DWORD *)(a1 + 128) = v48 + 1;
                  *(void *)(v47 + 8 * v48 + 8) = v46;
                  uint64_t v42 = v102;
                  goto LABEL_69;
                }
                *(_DWORD *)(a1 + 128) = v44 + 1;
                uint64_t v46 = *(void *)&v43[2 * v44 + 2];
LABEL_69:
                uint64_t v41 = sub_10003C680(a3, v46, v42);
                v102 = v41;
                if (!v41) {
                  goto LABEL_168;
                }
                if (*(void *)a3 <= (unint64_t)v41 || *(unsigned char *)v41 != 90) {
                  goto LABEL_165;
                }
              }
              int v45 = *(_DWORD *)(a1 + 132);
              goto LABEL_67;
            case 0xCu:
              if (v8 != 96) {
                goto LABEL_157;
              }
              v5 |= 8u;
              int v49 = (google::protobuf::internal *)((char *)v7 + 1);
              unint64_t v50 = *(unsigned __int8 *)v7;
              if ((*(char *)v7 & 0x80000000) == 0) {
                goto LABEL_77;
              }
              int v51 = *(char *)v49;
              unint64_t v50 = v50 + (v51 << 7) - 128;
              if (v51 < 0)
              {
                uint64_t v84 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, v50);
                v102 = v84;
                *(void *)(a1 + 288) = v85;
                if (!v84) {
                  goto LABEL_168;
                }
              }
              else
              {
                int v49 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_77:
                v102 = v49;
                *(void *)(a1 + 288) = v50;
              }
              goto LABEL_165;
            case 0xDu:
              if (v8 != 106) {
                goto LABEL_157;
              }
              int v52 = (google::protobuf::internal *)((char *)v7 - 1);
              while (1)
              {
                int v53 = (google::protobuf::internal *)((char *)v52 + 1);
                v102 = (google::protobuf::internal *)((char *)v52 + 1);
                BOOL v54 = *(int **)(a1 + 160);
                if (!v54) {
                  break;
                }
                uint64_t v55 = *(int *)(a1 + 152);
                int v56 = *v54;
                if ((int)v55 >= *v54)
                {
                  if (v56 == *(_DWORD *)(a1 + 156))
                  {
LABEL_85:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 144), v56 + 1);
                    BOOL v54 = *(int **)(a1 + 160);
                    int v56 = *v54;
                  }
                  int *v54 = v56 + 1;
                  uint64_t v57 = google::protobuf::Arena::CreateMaybeMessage<TSP::FeatureInfo>(*(void *)(a1 + 144));
                  uint64_t v58 = *(void *)(a1 + 160);
                  uint64_t v59 = *(int *)(a1 + 152);
                  *(_DWORD *)(a1 + 152) = v59 + 1;
                  *(void *)(v58 + 8 * v59 + 8) = v57;
                  int v53 = v102;
                  goto LABEL_87;
                }
                *(_DWORD *)(a1 + 152) = v55 + 1;
                uint64_t v57 = *(void *)&v54[2 * v55 + 2];
LABEL_87:
                int v52 = sub_10003C750(a3, v57, v53);
                v102 = v52;
                if (!v52) {
                  goto LABEL_168;
                }
                if (*(void *)a3 <= (unint64_t)v52 || *(unsigned char *)v52 != 106) {
                  goto LABEL_165;
                }
              }
              int v56 = *(_DWORD *)(a1 + 156);
              goto LABEL_85;
            case 0xEu:
              if (v8 == 114)
              {
                char v21 = (unsigned int *)(a1 + 168);
                goto LABEL_95;
              }
              if (v8 == 112)
              {
                int v96 = sub_100038CA0(&v102);
                sub_100039060(a1, v96);
                goto LABEL_155;
              }
              goto LABEL_157;
            case 0xFu:
              if (v8 == 122)
              {
                char v21 = (unsigned int *)(a1 + 192);
                goto LABEL_95;
              }
              if (v8 == 120)
              {
                int v97 = sub_100038CA0(&v102);
                sub_10003C820(a1, v97);
                goto LABEL_155;
              }
              goto LABEL_157;
            case 0x10u:
              if (v8 != 128) {
                goto LABEL_157;
              }
              v5 |= 0x80u;
              v60 = (google::protobuf::internal *)((char *)v7 + 1);
              LODWORD(v6sub_1000333D0((uint64_t *)this + 1) = *(unsigned __int8 *)v7;
              if ((*(char *)v7 & 0x80000000) == 0) {
                goto LABEL_100;
              }
              int v62 = *(char *)v60;
              __int16 v61 = (const char *)(v61 + (v62 << 7) - 128);
              if (v62 < 0)
              {
                v86 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v7, v61);
                v102 = v86;
                *(_DWORD *)(a1 + 30google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v87;
                if (!v86) {
                  goto LABEL_168;
                }
              }
              else
              {
                v60 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_100:
                v102 = v60;
                *(_DWORD *)(a1 + 30google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v61;
              }
              goto LABEL_165;
            case 0x11u:
              if (v8 != 136) {
                goto LABEL_157;
              }
              v5 |= 0x20u;
              __int16 v63 = (google::protobuf::internal *)((char *)v7 + 1);
              unint64_t v64 = *(unsigned __int8 *)v7;
              if ((*(char *)v7 & 0x80000000) == 0) {
                goto LABEL_105;
              }
              int v65 = *(char *)v63;
              unint64_t v64 = v64 + (v65 << 7) - 128;
              if (v65 < 0)
              {
                v88 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, v64);
                v102 = v88;
                *(unsigned char *)(a1 + 297) = v89 != 0;
                if (!v88) {
                  goto LABEL_168;
                }
              }
              else
              {
                __int16 v63 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_105:
                v102 = v63;
                *(unsigned char *)(a1 + 297) = v64 != 0;
              }
              goto LABEL_165;
            case 0x12u:
              if (v8 != 146) {
                goto LABEL_157;
              }
              id v66 = (google::protobuf::internal *)((char *)v7 - 2);
              break;
            case 0x13u:
              if (v8 != 152) {
                goto LABEL_157;
              }
              v5 |= 0x40u;
              uint64_t v74 = (google::protobuf::internal *)((char *)v7 + 1);
              unint64_t v75 = *(unsigned __int8 *)v7;
              if ((*(char *)v7 & 0x80000000) == 0) {
                goto LABEL_123;
              }
              int v76 = *(char *)v74;
              unint64_t v75 = v75 + (v76 << 7) - 128;
              if (v76 < 0)
              {
                v90 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, v75);
                v102 = v90;
                *(unsigned char *)(a1 + 298) = v91 != 0;
                if (!v90) {
                  goto LABEL_168;
                }
              }
              else
              {
                uint64_t v74 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_123:
                v102 = v74;
                *(unsigned char *)(a1 + 298) = v75 != 0;
              }
              goto LABEL_165;
            case 0x14u:
              if (v8 == 162)
              {
                uint64_t v20 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt64Parser((unsigned int *)(a1 + 240), v7, a3);
              }
              else
              {
                if (v8 == 160)
                {
                  unint64_t v98 = sub_100037CBC(&v102);
                  sub_10003C890(a1, v98);
LABEL_155:
                  if (!v102) {
                    goto LABEL_168;
                  }
                  goto LABEL_165;
                }
LABEL_157:
                if (v8) {
                  BOOL v99 = (v8 & 7) == 4;
                }
                else {
                  BOOL v99 = 1;
                }
                if (v99)
                {
                  *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v8 - 1;
                  goto LABEL_2;
                }
                if (*v101)
                {
                  v100 = (google::protobuf::Arena **)((*v101 & 0xFFFFFFFFFFFFFFFELL) + 8);
                }
                else
                {
                  v100 = sub_10003562C(v101);
                  uint64_t v7 = v102;
                }
                uint64_t v20 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v100, v7);
              }
LABEL_164:
              v102 = v20;
              if (!v20)
              {
LABEL_168:
                v102 = 0;
                goto LABEL_2;
              }
LABEL_165:
              if (sub_1000355B8(a3, &v102, *(_DWORD *)(a3 + 92))) {
                goto LABEL_2;
              }
              continue;
            case 0x15u:
              if (v8 != 168) {
                goto LABEL_157;
              }
              v5 |= 0x100u;
              v77 = (google::protobuf::internal *)((char *)v7 + 1);
              LODWORD(v78) = *(unsigned __int8 *)v7;
              if ((*(char *)v7 & 0x80000000) == 0) {
                goto LABEL_130;
              }
              int v79 = *(char *)v77;
              v78 = (const char *)(v78 + (v79 << 7) - 128);
              if (v79 < 0)
              {
                v92 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v7, v78);
                v102 = v92;
                *(_DWORD *)(a1 + 304) = v93;
                if (!v92) {
                  goto LABEL_168;
                }
              }
              else
              {
                v77 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_130:
                v102 = v77;
                *(_DWORD *)(a1 + 304) = v78;
              }
              goto LABEL_165;
            default:
              goto LABEL_157;
          }
          while (1)
          {
            __int16 v67 = (google::protobuf::internal *)((char *)v66 + 2);
            v102 = (google::protobuf::internal *)((char *)v66 + 2);
            v68 = *(int **)(a1 + 232);
            if (!v68) {
              break;
            }
            uint64_t v69 = *(int *)(a1 + 224);
            int v70 = *v68;
            if ((int)v69 >= *v68)
            {
              if (v70 == *(_DWORD *)(a1 + 228))
              {
LABEL_113:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 216), v70 + 1);
                v68 = *(int **)(a1 + 232);
                int v70 = *v68;
              }
              int *v68 = v70 + 1;
              uint64_t v71 = google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentExternalReference>(*(void *)(a1 + 216));
              uint64_t v72 = *(void *)(a1 + 232);
              uint64_t v73 = *(int *)(a1 + 224);
              *(_DWORD *)(a1 + 224) = v73 + 1;
              *(void *)(v72 + 8 * v73 + 8) = v71;
              __int16 v67 = v102;
              goto LABEL_115;
            }
            *(_DWORD *)(a1 + 224) = v69 + 1;
            uint64_t v71 = *(void *)&v68[2 * v69 + 2];
LABEL_115:
            id v66 = sub_10003C4E0(a3, v71, v67);
            v102 = v66;
            if (!v66) {
              goto LABEL_168;
            }
            if (*(void *)a3 <= (unint64_t)v66 || *(_WORD *)v66 != 402) {
              goto LABEL_165;
            }
          }
          int v70 = *(_DWORD *)(a1 + 228);
          goto LABEL_113;
        }
        uint64_t v7 = (google::protobuf::internal *)((char *)v102 + 2);
      }
      break;
    }
    v102 = v7;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v102;
}

void sub_10003C470(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 48);
  uint64_t v4 = (_DWORD *)(a1 + 48);
  if (v5 == *(_DWORD *)(a1 + 52))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)(a1 + 48), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 56) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 56) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

google::protobuf::internal *sub_10003C4E0(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::ComponentExternalReference::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *sub_10003C5B0(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::ComponentDataReference::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *sub_10003C680(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::ObjectUUIDMapEntry::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *sub_10003C750(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::FeatureInfo::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

void sub_10003C820(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 192);
  uint64_t v4 = (_DWORD *)(a1 + 192);
  if (v5 == *(_DWORD *)(a1 + 196))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)(a1 + 192), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 200) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 200) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_10003C890(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 240);
  uint64_t v4 = (_DWORD *)(a1 + 240);
  if (v5 == *(_DWORD *)(a1 + 244))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)(a1 + 240), v5 + 1);
    *(void *)(*(void *)(a1 + 248) + 8 * v5) = a2;
  }
  else
  {
    *(void *)(*(void *)(a1 + 248) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

const google::protobuf::UnknownFieldSet *TSP::ComponentInfo::_InternalSerialize(TSP::ComponentInfo *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v35 = *((void *)this + 35);
    unsigned __int8 *v4 = 8;
    if (v35 > 0x7F)
    {
      v4[1] = v35 | 0x80;
      unint64_t v37 = v35 >> 7;
      if (v35 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v37 | 0x80;
          unint64_t v65 = v37 >> 7;
          ++v4;
          unint64_t v66 = v37 >> 14;
          v37 >>= 7;
        }
        while (v66);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v65;
        if (v6) {
          goto LABEL_123;
        }
      }
      else
      {
        v4[2] = v37;
        v4 += 3;
        if (v6) {
          goto LABEL_123;
        }
      }
    }
    else
    {
      v4[1] = v35;
      v4 += 2;
      if (v6) {
        goto LABEL_123;
      }
    }
LABEL_3:
    if ((v6 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_123:
  uint64_t v4 = sub_100034480(a3, 2, (const void **)(*((void *)this + 33) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) != 0) {
LABEL_4:
  }
    uint64_t v4 = sub_100034480(a3, 3, (const void **)(*((void *)this + 34) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  signed int v7 = *((_DWORD *)this + 10);
  if (v7 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 4, (int *)this + 6, v7, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  uint64_t v8 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 16);
  if ((int)v8 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 5, (int *)this + 12, v8, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  int v9 = *((_DWORD *)this + 20);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      BOOL v11 = *(TSP::ComponentExternalReference **)(*((void *)this + 11) + 8 * i + 8);
      unsigned __int8 *v4 = 50;
      unsigned int v12 = *((_DWORD *)v11 + 5);
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unsigned int v14 = v12 >> 7;
        if (v12 >> 14)
        {
          uint64_t v13 = v4 + 3;
          do
          {
            *(v13 - sub_1000333D0((uint64_t *)this + 1) = v14 | 0x80;
            unsigned int v15 = v14 >> 7;
            ++v13;
            unsigned int v16 = v14 >> 14;
            v14 >>= 7;
          }
          while (v16);
          *(v13 - sub_1000333D0((uint64_t *)this + 1) = v15;
        }
        else
        {
          v4[2] = v14;
          uint64_t v13 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v12;
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)TSP::ComponentExternalReference::_InternalSerialize(v11, v13, a3, v8);
    }
  }
  int v17 = *((_DWORD *)this + 26);
  if (v17)
  {
    for (int j = 0; j != v17; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v19 = *(TSP::ComponentDataReference **)(*((void *)this + 14) + 8 * j + 8);
      unsigned __int8 *v4 = 58;
      unsigned int v20 = *((_DWORD *)v19 + 5);
      if (v20 > 0x7F)
      {
        v4[1] = v20 | 0x80;
        unsigned int v22 = v20 >> 7;
        if (v20 >> 14)
        {
          char v21 = v4 + 3;
          do
          {
            *(v21 - sub_1000333D0((uint64_t *)this + 1) = v22 | 0x80;
            unsigned int v23 = v22 >> 7;
            ++v21;
            unsigned int v24 = v22 >> 14;
            v22 >>= 7;
          }
          while (v24);
          *(v21 - sub_1000333D0((uint64_t *)this + 1) = v23;
        }
        else
        {
          v4[2] = v22;
          char v21 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v20;
        char v21 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)TSP::ComponentDataReference::_InternalSerialize(v19, v21, a3, v8);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned __int8 v25 = *((unsigned char *)this + 296);
    unsigned __int8 *v4 = 80;
    v4[1] = v25;
    v4 += 2;
  }
  int v26 = *((_DWORD *)this + 32);
  if (v26)
  {
    for (int k = 0; k != v26; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v28 = *(TSP::ObjectUUIDMapEntry **)(*((void *)this + 17) + 8 * k + 8);
      unsigned __int8 *v4 = 90;
      unsigned int v29 = *((_DWORD *)v28 + 5);
      if (v29 > 0x7F)
      {
        v4[1] = v29 | 0x80;
        unsigned int v31 = v29 >> 7;
        if (v29 >> 14)
        {
          uint64_t v30 = v4 + 3;
          do
          {
            *(v30 - sub_1000333D0((uint64_t *)this + 1) = v31 | 0x80;
            unsigned int v32 = v31 >> 7;
            ++v30;
            unsigned int v33 = v31 >> 14;
            v31 >>= 7;
          }
          while (v33);
          *(v30 - sub_1000333D0((uint64_t *)this + 1) = v32;
        }
        else
        {
          v4[2] = v31;
          uint64_t v30 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v29;
        uint64_t v30 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)TSP::ObjectUUIDMapEntry::_InternalSerialize(v28, v30, a3, v8);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v34 = *((void *)this + 36);
    unsigned __int8 *v4 = 96;
    if (v34 > 0x7F)
    {
      v4[1] = v34 | 0x80;
      unint64_t v36 = v34 >> 7;
      if (v34 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v36 | 0x80;
          unint64_t v38 = v36 >> 7;
          ++v4;
          unint64_t v39 = v36 >> 14;
          v36 >>= 7;
        }
        while (v39);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v38;
      }
      else
      {
        v4[2] = v36;
        v4 += 3;
      }
    }
    else
    {
      v4[1] = v34;
      v4 += 2;
    }
  }
  int v40 = *((_DWORD *)this + 38);
  if (v40)
  {
    for (int m = 0; m != v40; ++m)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v42 = *(TSP::FeatureInfo **)(*((void *)this + 20) + 8 * m + 8);
      unsigned __int8 *v4 = 106;
      unsigned int v43 = *((_DWORD *)v42 + 5);
      if (v43 > 0x7F)
      {
        v4[1] = v43 | 0x80;
        unsigned int v45 = v43 >> 7;
        if (v43 >> 14)
        {
          uint64_t v44 = v4 + 3;
          do
          {
            *(v44 - sub_1000333D0((uint64_t *)this + 1) = v45 | 0x80;
            unsigned int v46 = v45 >> 7;
            ++v44;
            unsigned int v47 = v45 >> 14;
            v45 >>= 7;
          }
          while (v47);
          *(v44 - sub_1000333D0((uint64_t *)this + 1) = v46;
        }
        else
        {
          v4[2] = v45;
          uint64_t v44 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v43;
        uint64_t v44 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)TSP::FeatureInfo::_InternalSerialize(v42, v44, a3);
    }
  }
  signed int v48 = *((_DWORD *)this + 46);
  if (v48 > 0) {
    uint64_t v4 = sub_10004F9AC(a3, 14, (int *)this + 42, v48, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  int v49 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 52);
  if ((int)v49 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 15, (int *)this + 48, v49, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned int v50 = *((_DWORD *)this + 75);
    *(_WORD *)uint64_t v4 = 384;
    if (v50 <= 0x7F)
    {
      v4[2] = v50;
      v4 += 3;
      if ((v6 & 0x20) == 0) {
        goto LABEL_95;
      }
      goto LABEL_92;
    }
    v4[2] = v50 | 0x80;
    unsigned int v51 = v50 >> 7;
    if (v50 >> 14)
    {
      v4 += 4;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v51 | 0x80;
        unsigned int v67 = v51 >> 7;
        ++v4;
        unsigned int v68 = v51 >> 14;
        v51 >>= 7;
      }
      while (v68);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v67;
      if ((v6 & 0x20) == 0) {
        goto LABEL_95;
      }
      goto LABEL_92;
    }
    v4[3] = v51;
    v4 += 4;
  }
  if ((v6 & 0x20) == 0) {
    goto LABEL_95;
  }
LABEL_92:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v52 = *((unsigned char *)this + 297);
  *(_WORD *)uint64_t v4 = 392;
  v4[2] = v52;
  v4 += 3;
LABEL_95:
  int v53 = *((_DWORD *)this + 56);
  if (v53)
  {
    for (int n = 0; n != v53; ++n)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v55 = *(TSP::ComponentExternalReference **)(*((void *)this + 29) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 402;
      unsigned int v56 = *((_DWORD *)v55 + 5);
      if (v56 > 0x7F)
      {
        v4[2] = v56 | 0x80;
        unsigned int v58 = v56 >> 7;
        if (v56 >> 14)
        {
          uint64_t v57 = v4 + 4;
          do
          {
            *(v57 - sub_1000333D0((uint64_t *)this + 1) = v58 | 0x80;
            unsigned int v59 = v58 >> 7;
            ++v57;
            unsigned int v60 = v58 >> 14;
            v58 >>= 7;
          }
          while (v60);
          *(v57 - sub_1000333D0((uint64_t *)this + 1) = v59;
        }
        else
        {
          v4[3] = v58;
          uint64_t v57 = v4 + 4;
        }
      }
      else
      {
        v4[2] = v56;
        uint64_t v57 = v4 + 3;
      }
      uint64_t v4 = (unsigned __int8 *)TSP::ComponentExternalReference::_InternalSerialize(v55, v57, a3, v49);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned __int8 v61 = *((unsigned char *)this + 298);
    *(_WORD *)uint64_t v4 = 408;
    v4[2] = v61;
    v4 += 3;
  }
  int v62 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 64);
  if ((int)v62 >= 1) {
    uint64_t v4 = sub_10004FB54(a3, 20, (int *)this + 60, v62, v4, (uint64_t (*)(uint64_t))google::protobuf::io::EpsCopyOutputStream::Encode64);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned int v63 = *((_DWORD *)this + 76);
    *(_WORD *)uint64_t v4 = 424;
    if (v63 > 0x7F)
    {
      v4[2] = v63 | 0x80;
      unsigned int v64 = v63 >> 7;
      if (v63 >> 14)
      {
        v4 += 4;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v64 | 0x80;
          unsigned int v69 = v64 >> 7;
          ++v4;
          unsigned int v70 = v64 >> 14;
          v64 >>= 7;
        }
        while (v70);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v69;
      }
      else
      {
        v4[3] = v64;
        v4 += 4;
      }
    }
    else
    {
      v4[2] = v63;
      v4 += 3;
    }
  }
  uint64_t v71 = *((void *)this + 1);
  if ((v71 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v71 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, v62);
}

uint64_t TSP::ComponentInfo::RequiredFieldsByteSizeFallback(TSP::ComponentInfo *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 4) == 0) {
      return v2;
    }
    goto LABEL_7;
  }
  unint64_t v3 = *((void *)this + 33) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 4) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*((void *)this + 35) | 1) ^ 0x3F) + 73) >> 6) + 1;
  return v2;
}

char *TSP::ComponentInfo::ByteSizeLong(TSP::ComponentInfo *this)
{
  if ((~*((_DWORD *)this + 4) & 5) != 0)
  {
    unint64_t v5 = TSP::ComponentInfo::RequiredFieldsByteSizeFallback(this);
  }
  else
  {
    unint64_t v2 = *((void *)this + 33) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    unint64_t v5 = v4
       + ((9 * (__clz(*((void *)this + 35) | 1) ^ 0x3F) + 73) >> 6)
       + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6)
       + 2;
  }
  uint64_t v6 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 6);
  uint64_t v7 = 10;
  uint64_t v8 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v6 >= 0) {
    uint64_t v7 = v8;
  }
  unint64_t v9 = v5 + v7;
  if (v6) {
    int v10 = v6;
  }
  else {
    int v10 = 0;
  }
  if (v6) {
    unint64_t v11 = v9 + 1;
  }
  else {
    unint64_t v11 = v5;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v10;
  unint64_t v12 = v11 + v6;
  uint64_t v13 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 12);
  uint64_t v14 = 10;
  uint64_t v15 = (9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v13 >= 0) {
    uint64_t v14 = v15;
  }
  unint64_t v16 = v12 + v14;
  if (v13) {
    int v17 = v13;
  }
  else {
    int v17 = 0;
  }
  if (v13) {
    unint64_t v18 = v16 + 1;
  }
  else {
    unint64_t v18 = v12;
  }
  *((_DWORD *)this + 16) = v17;
  unint64_t v19 = v18 + v13;
  uint64_t v20 = *((int *)this + 20);
  uint64_t v21 = v19 + v20;
  uint64_t v22 = *((void *)this + 11);
  if (v22) {
    unsigned int v23 = (TSP::ComponentExternalReference **)(v22 + 8);
  }
  else {
    unsigned int v23 = 0;
  }
  if (v20)
  {
    uint64_t v24 = 8 * v20;
    do
    {
      unsigned __int8 v25 = *v23++;
      int v26 = TSP::ComponentExternalReference::ByteSizeLong(v25);
      v21 += (uint64_t)&v26[(9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6];
      v24 -= 8;
    }
    while (v24);
  }
  uint64_t v27 = *((int *)this + 26);
  uint64_t v28 = v21 + v27;
  uint64_t v29 = *((void *)this + 14);
  if (v29) {
    uint64_t v30 = (TSP::ComponentDataReference **)(v29 + 8);
  }
  else {
    uint64_t v30 = 0;
  }
  if (v27)
  {
    uint64_t v31 = 8 * v27;
    do
    {
      unsigned int v32 = *v30++;
      unsigned int v33 = TSP::ComponentDataReference::ByteSizeLong(v32);
      v28 += (uint64_t)&v33[(9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6];
      v31 -= 8;
    }
    while (v31);
  }
  uint64_t v34 = *((int *)this + 32);
  uint64_t v35 = v28 + v34;
  uint64_t v36 = *((void *)this + 17);
  if (v36) {
    unint64_t v37 = (TSP::UUID ***)(v36 + 8);
  }
  else {
    unint64_t v37 = 0;
  }
  if (v34)
  {
    uint64_t v38 = 8 * v34;
    do
    {
      unint64_t v39 = *v37++;
      int v40 = TSP::ObjectUUIDMapEntry::ByteSizeLong(v39);
      v35 += (uint64_t)&v40[(9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6];
      v38 -= 8;
    }
    while (v38);
  }
  uint64_t v41 = *((int *)this + 38);
  uint64_t v42 = v35 + v41;
  uint64_t v43 = *((void *)this + 20);
  if (v43) {
    uint64_t v44 = (TSP::FeatureInfo **)(v43 + 8);
  }
  else {
    uint64_t v44 = 0;
  }
  if (v41)
  {
    uint64_t v45 = 8 * v41;
    do
    {
      unsigned int v46 = *v44++;
      unsigned int v47 = TSP::FeatureInfo::ByteSizeLong(v46);
      v42 += (uint64_t)&v47[(9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6];
      v45 -= 8;
    }
    while (v45);
  }
  uint64_t v48 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 42);
  uint64_t v49 = 11;
  uint64_t v50 = ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v48 >= 0) {
    uint64_t v49 = v50;
  }
  uint64_t v51 = v49 + v42;
  if (v48) {
    int v52 = v48;
  }
  else {
    int v52 = 0;
  }
  if (!v48) {
    uint64_t v51 = v42;
  }
  *((_DWORD *)this + 46) = v52;
  uint64_t v53 = v51 + v48;
  uint64_t v54 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 48);
  uint64_t v55 = 11;
  uint64_t v56 = ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v54 >= 0) {
    uint64_t v55 = v56;
  }
  uint64_t v57 = v55 + v53;
  if (v54) {
    int v58 = v54;
  }
  else {
    int v58 = 0;
  }
  if (!v54) {
    uint64_t v57 = v53;
  }
  *((_DWORD *)this + 52) = v58;
  uint64_t v59 = v57 + v54;
  uint64_t v60 = *((int *)this + 56);
  uint64_t v61 = v59 + 2 * v60;
  uint64_t v62 = *((void *)this + 29);
  if (v62) {
    unsigned int v63 = (TSP::ComponentExternalReference **)(v62 + 8);
  }
  else {
    unsigned int v63 = 0;
  }
  if (v60)
  {
    uint64_t v64 = 8 * v60;
    do
    {
      unint64_t v65 = *v63++;
      unint64_t v66 = TSP::ComponentExternalReference::ByteSizeLong(v65);
      v61 += (uint64_t)&v66[(9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6];
      v64 -= 8;
    }
    while (v64);
  }
  uint64_t v67 = google::protobuf::internal::WireFormatLite::UInt64Size((unsigned int *)this + 60);
  uint64_t v68 = 12;
  uint64_t v69 = ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((int)v67 >= 0) {
    uint64_t v68 = v69;
  }
  uint64_t v70 = v68 + v61;
  if (v67) {
    int v71 = v67;
  }
  else {
    int v71 = 0;
  }
  if (!v67) {
    uint64_t v70 = v61;
  }
  *((_DWORD *)this + 64) = v71;
  uint64_t v72 = (const google::protobuf::UnknownFieldSet *)(v70 + v67);
  int v73 = *((_DWORD *)this + 4);
  if ((v73 & 2) != 0)
  {
    unint64_t v74 = *((void *)this + 34) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v75 = *(unsigned __int8 *)(v74 + 23);
    uint64_t v76 = *(void *)(v74 + 8);
    if ((v75 & 0x80u) == 0) {
      uint64_t v76 = v75;
    }
    uint64_t v72 = (const google::protobuf::UnknownFieldSet *)((char *)v72 + v76 + ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6) + 1);
  }
  if ((v73 & 0xF8) != 0)
  {
    if ((v73 & 8) != 0) {
      uint64_t v72 = (const google::protobuf::UnknownFieldSet *)((char *)v72
    }
                                                      + ((9 * (__clz(*((void *)this + 36) | 1) ^ 0x3F) + 73) >> 6)
                                                      + 1);
    v77 = (const google::protobuf::UnknownFieldSet *)((char *)v72 + 2);
    if ((v73 & 0x10) == 0) {
      v77 = v72;
    }
    if ((v73 & 0x20) != 0) {
      v77 = (const google::protobuf::UnknownFieldSet *)((char *)v77 + 3);
    }
    if ((v73 & 0x40) != 0) {
      uint64_t v72 = (const google::protobuf::UnknownFieldSet *)((char *)v77 + 3);
    }
    else {
      uint64_t v72 = v77;
    }
    if ((v73 & 0x80) != 0) {
      uint64_t v72 = (const google::protobuf::UnknownFieldSet *)((char *)v72
    }
                                                      + ((9 * (__clz(*((_DWORD *)this + 75) | 1) ^ 0x1F) + 73) >> 6)
                                                      + 2);
  }
  if ((v73 & 0x100) != 0) {
    uint64_t v72 = (const google::protobuf::UnknownFieldSet *)((char *)v72
  }
                                                    + ((9 * (__clz(*((_DWORD *)this + 76) | 1) ^ 0x1F) + 73) >> 6)
                                                    + 2);
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::ComponentInfo *)((char *)this + 8), v72, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v72;
    return (char *)v72;
  }
}

void TSP::ComponentInfo::MergeFrom(TSP::ComponentInfo *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ComponentInfo::MergeFrom((unint64_t *)this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

unint64_t *TSP::ComponentInfo::MergeFrom(unint64_t *this, const TSP::ComponentInfo *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)sub_1000357D4(this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = *((int *)v3 + 6);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)v3 + 6, v6 + v5);
    unint64_t v7 = v3[4];
    *((_DWORD *)v3 + 6) += *((_DWORD *)a2 + 6);
    this = (unint64_t *)memcpy((void *)(v7 + 4 * v6), *((const void **)a2 + 4), 4 * *((int *)a2 + 6));
  }
  int v8 = *((_DWORD *)a2 + 12);
  if (v8)
  {
    uint64_t v9 = *((int *)v3 + 12);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)v3 + 12, v9 + v8);
    unint64_t v10 = v3[7];
    *((_DWORD *)v3 + 12) += *((_DWORD *)a2 + 12);
    this = (unint64_t *)memcpy((void *)(v10 + 4 * v9), *((const void **)a2 + 7), 4 * *((int *)a2 + 12));
  }
  unsigned int v11 = *((_DWORD *)a2 + 20);
  if (v11)
  {
    unint64_t v12 = (TSP::ComponentExternalReference **)(*((void *)a2 + 11) + 8);
    uint64_t v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 9), *((_DWORD *)a2 + 20));
    this = (unint64_t *)sub_10004FFF4((void **)v3 + 9, (void ***)v13, v12, v11, *(_DWORD *)v3[11] - *((_DWORD *)v3 + 20));
    signed int v14 = *((_DWORD *)v3 + 20) + v11;
    *((_DWORD *)v3 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v14;
    uint64_t v15 = (signed int *)v3[11];
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  unsigned int v16 = *((_DWORD *)a2 + 26);
  if (v16)
  {
    int v17 = (TSP::ComponentDataReference **)(*((void *)a2 + 14) + 8);
    unint64_t v18 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 12), *((_DWORD *)a2 + 26));
    this = (unint64_t *)sub_1000500B4((void **)v3 + 12, (void ***)v18, v17, v16, *(_DWORD *)v3[14] - *((_DWORD *)v3 + 26));
    signed int v19 = *((_DWORD *)v3 + 26) + v16;
    *((_DWORD *)v3 + 26) = v19;
    uint64_t v20 = (signed int *)v3[14];
    if (*v20 < v19) {
      *uint64_t v20 = v19;
    }
  }
  unsigned int v21 = *((_DWORD *)a2 + 32);
  if (v21)
  {
    uint64_t v22 = (TSP::ObjectUUIDMapEntry **)(*((void *)a2 + 17) + 8);
    unsigned int v23 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 15), *((_DWORD *)a2 + 32));
    this = (unint64_t *)sub_100050174((void **)v3 + 15, (void ***)v23, v22, v21, *(_DWORD *)v3[17] - *((_DWORD *)v3 + 32));
    signed int v24 = *((_DWORD *)v3 + 32) + v21;
    *((_DWORD *)v3 + 32) = v24;
    unsigned __int8 v25 = (signed int *)v3[17];
    if (*v25 < v24) {
      signed int *v25 = v24;
    }
  }
  unsigned int v26 = *((_DWORD *)a2 + 38);
  if (v26)
  {
    uint64_t v27 = (TSP::FeatureInfo **)(*((void *)a2 + 20) + 8);
    uint64_t v28 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 18), *((_DWORD *)a2 + 38));
    this = (unint64_t *)sub_100050234((std::string *)v3 + 6, (std::string **)v28, v27, v26, *(_DWORD *)v3[20] - *((_DWORD *)v3 + 38));
    signed int v29 = *((_DWORD *)v3 + 38) + v26;
    *((_DWORD *)v3 + 38) = v29;
    uint64_t v30 = (signed int *)v3[20];
    if (*v30 < v29) {
      signed int *v30 = v29;
    }
  }
  int v31 = *((_DWORD *)a2 + 42);
  if (v31)
  {
    uint64_t v32 = *((int *)v3 + 42);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)v3 + 42, v32 + v31);
    unint64_t v33 = v3[22];
    *((_DWORD *)v3 + 42) += *((_DWORD *)a2 + 42);
    this = (unint64_t *)memcpy((void *)(v33 + 4 * v32), *((const void **)a2 + 22), 4 * *((int *)a2 + 42));
  }
  int v34 = *((_DWORD *)a2 + 48);
  if (v34)
  {
    uint64_t v35 = *((int *)v3 + 48);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)v3 + 48, v35 + v34);
    unint64_t v36 = v3[25];
    *((_DWORD *)v3 + 48) += *((_DWORD *)a2 + 48);
    this = (unint64_t *)memcpy((void *)(v36 + 4 * v35), *((const void **)a2 + 25), 4 * *((int *)a2 + 48));
  }
  unsigned int v37 = *((_DWORD *)a2 + 56);
  if (v37)
  {
    uint64_t v38 = (TSP::ComponentExternalReference **)(*((void *)a2 + 29) + 8);
    unint64_t v39 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 27), *((_DWORD *)a2 + 56));
    this = (unint64_t *)sub_10004FFF4((void **)v3 + 27, (void ***)v39, v38, v37, *(_DWORD *)v3[29] - *((_DWORD *)v3 + 56));
    signed int v40 = *((_DWORD *)v3 + 56) + v37;
    *((_DWORD *)v3 + 56) = v40;
    uint64_t v41 = (signed int *)v3[29];
    if (*v41 < v40) {
      *uint64_t v41 = v40;
    }
  }
  int v42 = *((_DWORD *)a2 + 60);
  if (v42)
  {
    uint64_t v43 = *((int *)v3 + 60);
    google::protobuf::RepeatedField<unsigned long long>::Reserve((unsigned int *)v3 + 60, v43 + v42);
    unint64_t v44 = v3[31];
    *((_DWORD *)v3 + 60) += *((_DWORD *)a2 + 60);
    this = (unint64_t *)memcpy((void *)(v44 + 8 * v43), *((const void **)a2 + 31), 8 * *((int *)a2 + 60));
  }
  int v45 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v45)
  {
    if (v45)
    {
      unint64_t v47 = *((void *)a2 + 33) & 0xFFFFFFFFFFFFFFFELL;
      *((_DWORD *)v3 + 4) |= 1u;
      unint64_t v48 = v3[1];
      uint64_t v49 = (google::protobuf::Arena *)(v48 & 0xFFFFFFFFFFFFFFFELL);
      if (v48) {
        uint64_t v49 = *(google::protobuf::Arena **)v49;
      }
      this = (unint64_t *)google::protobuf::internal::ArenaStringPtr::Set((std::string **)v3 + 33, v47, v49);
      if ((v45 & 2) == 0)
      {
LABEL_31:
        if ((v45 & 4) == 0) {
          goto LABEL_32;
        }
        goto LABEL_48;
      }
    }
    else if ((v45 & 2) == 0)
    {
      goto LABEL_31;
    }
    unint64_t v50 = *((void *)a2 + 34) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)v3 + 4) |= 2u;
    unint64_t v51 = v3[1];
    int v52 = (google::protobuf::Arena *)(v51 & 0xFFFFFFFFFFFFFFFELL);
    if (v51) {
      int v52 = *(google::protobuf::Arena **)v52;
    }
    this = (unint64_t *)google::protobuf::internal::ArenaStringPtr::Set((std::string **)v3 + 34, v50, v52);
    if ((v45 & 4) == 0)
    {
LABEL_32:
      if ((v45 & 8) == 0) {
        goto LABEL_33;
      }
      goto LABEL_49;
    }
LABEL_48:
    v3[35] = *((void *)a2 + 35);
    if ((v45 & 8) == 0)
    {
LABEL_33:
      if ((v45 & 0x10) == 0) {
        goto LABEL_34;
      }
      goto LABEL_50;
    }
LABEL_49:
    v3[36] = *((void *)a2 + 36);
    if ((v45 & 0x10) == 0)
    {
LABEL_34:
      if ((v45 & 0x20) == 0) {
        goto LABEL_35;
      }
      goto LABEL_51;
    }
LABEL_50:
    *((unsigned char *)v3 + 296) = *((unsigned char *)a2 + 296);
    if ((v45 & 0x20) == 0)
    {
LABEL_35:
      if ((v45 & 0x40) == 0) {
        goto LABEL_36;
      }
      goto LABEL_52;
    }
LABEL_51:
    *((unsigned char *)v3 + 297) = *((unsigned char *)a2 + 297);
    if ((v45 & 0x40) == 0)
    {
LABEL_36:
      if ((v45 & 0x80) == 0)
      {
LABEL_38:
        *((_DWORD *)v3 + 4) |= v45;
        goto LABEL_39;
      }
LABEL_37:
      *((_DWORD *)v3 + 75) = *((_DWORD *)a2 + 75);
      goto LABEL_38;
    }
LABEL_52:
    *((unsigned char *)v3 + 298) = *((unsigned char *)a2 + 298);
    if ((v45 & 0x80) == 0) {
      goto LABEL_38;
    }
    goto LABEL_37;
  }
LABEL_39:
  if ((v45 & 0x100) != 0)
  {
    int v46 = *((_DWORD *)a2 + 76);
    *((_DWORD *)v3 + 4) |= 0x100u;
    *((_DWORD *)v3 + 76) = v46;
  }
  return this;
}

void TSP::ComponentInfo::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::ComponentInfo::Clear(this);
    TSP::ComponentInfo::MergeFrom((TSP::ComponentInfo *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::ComponentInfo::IsInitialized(TSP::ComponentInfo *this)
{
  if ((~*((_DWORD *)this + 4) & 5) != 0) {
    return 0;
  }
  for (uint64_t i = *((unsigned int *)this + 20); (int)i >= 1; --i)
  {
    uint64_t v3 = *(void *)(*((void *)this + 11) + 8 * i);
    if ((*(unsigned char *)(v3 + 16) & 1) == 0) {
      return 0;
    }
  }
  uint64_t result = sub_10003DC94((uint64_t)this + 96);
  if (result)
  {
    uint64_t result = sub_10003DD08((uint64_t)this + 120);
    if (result)
    {
      for (uint64_t j = *((unsigned int *)this + 38); (int)j >= 1; --j)
      {
        uint64_t v6 = *(void *)(*((void *)this + 20) + 8 * j);
        if ((*(unsigned char *)(v6 + 16) & 1) == 0) {
          return 0;
        }
      }
      uint64_t v7 = *((unsigned int *)this + 56);
      do
      {
        uint64_t result = (int)v7 < 1;
        if ((int)v7 < 1) {
          break;
        }
        uint64_t v8 = *(void *)(*((void *)this + 29) + 8 * v7--);
      }
      while ((*(unsigned char *)(v8 + 16) & 1) != 0);
    }
  }
  return result;
}

uint64_t sub_10003DC94(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  do
  {
    uint64_t v3 = *(void *)(v2 + 8 * (v1 - 1) + 8);
    int v4 = *(_DWORD *)(v3 + 16);
    uint64_t result = v4 & 1;
    if ((v4 & 1) == 0) {
      break;
    }
    uint64_t v6 = *(unsigned int *)(v3 + 32);
    uint64_t v7 = *(void *)(v3 + 40);
    while ((int)v6 >= 1)
    {
      uint64_t v8 = *(void *)(v7 + 8 * v6--);
      if ((~*(_DWORD *)(v8 + 16) & 3) != 0) {
        return 0;
      }
    }
  }
  while (v1-- >= 2);
  return result;
}

BOOL sub_10003DD08(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((~v6 & 3) != 0) {
      break;
    }
    if (v6)
    {
      BOOL result = TSP::UUID::IsInitialized(*(TSP::UUID **)(v5 + 24));
      if (!result) {
        return result;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return 0;
}

uint64_t TSP::ComponentInfo::GetMetadata(TSP::ComponentInfo *this)
{
  return off_1001E9C30[8];
}

void TSP::ComponentExternalReference::~ComponentExternalReference(TSP::ComponentExternalReference *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::ComponentExternalReference::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ComponentExternalReference::Clear(TSP::ComponentExternalReference *this)
{
  if ((*((unsigned char *)this + 16) & 7) != 0)
  {
    *((void *)this + sub_10004F76C((void *)this + 3) = 0;
    *((void *)this + 4) = 0;
    *((unsigned char *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  }
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::ComponentExternalReference::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v32, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v32 + 1);
      unsigned int v9 = *(unsigned __int8 *)v32;
      if ((*(char *)v32 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v32, (const char *)(v10 - 128));
      uint64_t v32 = TagFallback;
      if (!TagFallback) {
        goto LABEL_48;
      }
      uint64_t v8 = TagFallback;
      unsigned int v9 = v25;
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 != 24) {
          goto LABEL_14;
        }
        v5 |= 4u;
        uint64_t v15 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v16 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v17 = *(char *)v15;
        unint64_t v16 = v16 + (v17 << 7) - 128;
        if ((v17 & 0x80000000) == 0)
        {
          uint64_t v15 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_26:
          uint64_t v32 = v15;
          *(unsigned char *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v16 != 0;
          goto LABEL_36;
        }
        unsigned int v26 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v16);
        uint64_t v32 = v26;
        *(unsigned char *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v27 != 0;
        if (!v26) {
          goto LABEL_48;
        }
      }
      else if (v11 == 2)
      {
        if (v9 != 16) {
          goto LABEL_14;
        }
        v5 |= 2u;
        unint64_t v18 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v19 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v20 = *(char *)v18;
        unint64_t v19 = v19 + (v20 << 7) - 128;
        if ((v20 & 0x80000000) == 0)
        {
          unint64_t v18 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_31:
          uint64_t v32 = v18;
          *(void *)(a1 + 32) = v19;
          goto LABEL_36;
        }
        uint64_t v28 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v19);
        uint64_t v32 = v28;
        *(void *)(a1 + 32) = v29;
        if (!v28) {
          goto LABEL_48;
        }
      }
      else
      {
        if (v11 != 1 || v9 != 8)
        {
LABEL_14:
          if (v9) {
            BOOL v13 = (v9 & 7) == 4;
          }
          else {
            BOOL v13 = 1;
          }
          if (v13)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            signed int v14 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            signed int v14 = sub_10003562C((unint64_t *)(a1 + 8));
            uint64_t v8 = v32;
          }
          uint64_t v32 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v14, v8);
          if (!v32)
          {
LABEL_48:
            uint64_t v32 = 0;
            goto LABEL_2;
          }
          goto LABEL_36;
        }
        v5 |= 1u;
        unsigned int v21 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v22 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v23 = *(char *)v21;
        unint64_t v22 = v22 + (v23 << 7) - 128;
        if ((v23 & 0x80000000) == 0)
        {
          unsigned int v21 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_35:
          uint64_t v32 = v21;
          *(void *)(a1 + 24) = v22;
          goto LABEL_36;
        }
        uint64_t v30 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v22);
        uint64_t v32 = v30;
        *(void *)(a1 + 24) = v31;
        if (!v30) {
          goto LABEL_48;
        }
      }
LABEL_36:
      if (sub_1000355B8(a3, &v32, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    uint64_t v8 = (google::protobuf::internal *)((char *)v32 + 2);
LABEL_7:
    uint64_t v32 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

const google::protobuf::UnknownFieldSet *TSP::ComponentExternalReference::_InternalSerialize(TSP::ComponentExternalReference *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((void *)this + 3);
    *a2 = 8;
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      if (v7 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          ++a2;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v9;
        if ((v6 & 2) != 0) {
          goto LABEL_16;
        }
      }
      else
      {
        a2[2] = v8;
        a2 += 3;
        if ((v6 & 2) != 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v11 = *((void *)this + 4);
  *a2 = 16;
  if (v11 > 0x7F)
  {
    a2[1] = v11 | 0x80;
    unint64_t v12 = v11 >> 7;
    if (v11 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        ++a2;
        unint64_t v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
      if ((v6 & 4) == 0) {
        goto LABEL_30;
      }
    }
    else
    {
      a2[2] = v12;
      a2 += 3;
      if ((v6 & 4) == 0) {
        goto LABEL_30;
      }
    }
  }
  else
  {
    a2[1] = v11;
    a2 += 2;
    if ((v6 & 4) == 0) {
      goto LABEL_30;
    }
  }
LABEL_27:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v15 = *((unsigned char *)this + 40);
  *a2 = 24;
  a2[1] = v15;
  a2 += 2;
LABEL_30:
  uint64_t v16 = *((void *)this + 1);
  if ((v16 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v16 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::ComponentExternalReference::ByteSizeLong(TSP::ComponentExternalReference *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1) {
    char v2 = (const google::protobuf::UnknownFieldSet *)(((9 * (__clz(*((void *)this + 3) | 1) ^ 0x3F) + 73) >> 6) + 1);
  }
  else {
    char v2 = 0;
  }
  if ((v1 & 6) != 0)
  {
    if ((v1 & 2) != 0) {
      char v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
    }
                                                     + ((9 * (__clz(*((void *)this + 4) | 1) ^ 0x3F) + 73) >> 6)
                                                     + 1);
    if ((v1 & 4) != 0) {
      char v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + 2);
    }
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::ComponentExternalReference *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v2;
  return (char *)v2;
}

void TSP::ComponentExternalReference::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ComponentExternalReference::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::ComponentExternalReference::MergeFrom(void **this, const TSP::ComponentExternalReference *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      v3[3] = (void *)*((void *)a2 + 3);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
        {
LABEL_8:
          *((_DWORD *)v3 + 4) |= v5;
          return this;
        }
LABEL_7:
        *((unsigned char *)v3 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = *((unsigned char *)a2 + 40);
        goto LABEL_8;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    v3[4] = (void *)*((void *)a2 + 4);
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  return this;
}

void TSP::ComponentExternalReference::CopyFrom(TSP::ComponentExternalReference *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::ComponentExternalReference::Clear(this);
    TSP::ComponentExternalReference::MergeFrom((void **)this, a2);
  }
}

uint64_t TSP::ComponentExternalReference::IsInitialized(TSP::ComponentExternalReference *this)
{
  return *((_DWORD *)this + 4) & 1;
}

uint64_t TSP::ComponentExternalReference::GetMetadata(TSP::ComponentExternalReference *this)
{
  return off_1001E9C30[10];
}

void TSP::ComponentDataReference_ObjectReference::~ComponentDataReference_ObjectReference(TSP::ComponentDataReference_ObjectReference *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::ComponentDataReference_ObjectReference::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ComponentDataReference_ObjectReference::Clear(TSP::ComponentDataReference_ObjectReference *this)
{
  if ((*((unsigned char *)this + 16) & 3) != 0)
  {
    *((_DWORD *)this + 8) = 0;
    *((void *)this + sub_10004F76C((void *)this + 3) = 0;
  }
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::ComponentDataReference_ObjectReference::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v26 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = (google::protobuf::internal *)((char *)v26 + 1);
      unsigned int v9 = *(unsigned __int8 *)v26;
      if ((*(char *)v26 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v26, (const char *)(v10 - 128));
      unsigned int v26 = TagFallback;
      if (!TagFallback) {
        goto LABEL_40;
      }
      unint64_t v8 = TagFallback;
      unsigned int v9 = v21;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 16) {
          goto LABEL_13;
        }
        v5 |= 2u;
        unint64_t v14 = (google::protobuf::internal *)((char *)v8 + 1);
        LODWORD(v15) = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v16 = *(char *)v14;
        unsigned __int8 v15 = (const char *)(v15 + (v16 << 7) - 128);
        if ((v16 & 0x80000000) == 0)
        {
          unint64_t v14 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_25:
          unsigned int v26 = v14;
          *(_DWORD *)(a1 + 32) = v15;
          goto LABEL_30;
        }
        unint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v15);
        unsigned int v26 = v22;
        *(_DWORD *)(a1 + 32) = v23;
        if (!v22) {
          goto LABEL_40;
        }
      }
      else
      {
        if (v9 >> 3 != 1 || v9 != 8)
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unint64_t v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unint64_t v13 = sub_10003562C((unint64_t *)(a1 + 8));
            unint64_t v8 = v26;
          }
          unsigned int v26 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
          if (!v26)
          {
LABEL_40:
            unsigned int v26 = 0;
            goto LABEL_2;
          }
          goto LABEL_30;
        }
        v5 |= 1u;
        int v17 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v18 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v19 = *(char *)v17;
        unint64_t v18 = v18 + (v19 << 7) - 128;
        if ((v19 & 0x80000000) == 0)
        {
          int v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_29:
          unsigned int v26 = v17;
          *(void *)(a1 + 24) = v18;
          goto LABEL_30;
        }
        signed int v24 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v18);
        unsigned int v26 = v24;
        *(void *)(a1 + 24) = v25;
        if (!v24) {
          goto LABEL_40;
        }
      }
LABEL_30:
      if (sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    unint64_t v8 = (google::protobuf::internal *)((char *)v26 + 2);
LABEL_7:
    unsigned int v26 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

const google::protobuf::UnknownFieldSet *TSP::ComponentDataReference_ObjectReference::_InternalSerialize(TSP::ComponentDataReference_ObjectReference *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((void *)this + 3);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unint64_t v11 = v8 >> 7;
        ++a2;
        unint64_t v12 = v8 >> 14;
        v8 >>= 7;
      }
      while (v12);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v11;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_23;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned int v9 = *((_DWORD *)this + 8);
  *a2 = 16;
  if (v9 > 0x7F)
  {
    a2[1] = v9 | 0x80;
    unsigned int v10 = v9 >> 7;
    if (v9 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
        unsigned int v13 = v10 >> 7;
        ++a2;
        unsigned int v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      a2[2] = v10;
      a2 += 3;
    }
  }
  else
  {
    a2[1] = v9;
    a2 += 2;
  }
LABEL_23:
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

unint64_t TSP::ComponentDataReference_ObjectReference::RequiredFieldsByteSizeFallback(TSP::ComponentDataReference_ObjectReference *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2)
  {
    unint64_t result = ((9 * (__clz(*((void *)this + 3) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  unint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_5:
  }
    result += ((9 * (__clz(*((_DWORD *)this + 8) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return result;
}

char *TSP::ComponentDataReference_ObjectReference::ByteSizeLong(TSP::ComponentDataReference_ObjectReference *this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0) {
    int v2 = (const google::protobuf::UnknownFieldSet *)TSP::ComponentDataReference_ObjectReference::RequiredFieldsByteSizeFallback(this);
  }
  else {
    int v2 = (const google::protobuf::UnknownFieldSet *)(((9 * (__clz(*((_DWORD *)this + 8) | 1) ^ 0x1F) + 73) >> 6)
  }
                                                   + ((9 * (__clz(*((void *)this + 3) | 1) ^ 0x3F) + 73) >> 6)
                                                   + 2);
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::ComponentDataReference_ObjectReference *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::ComponentDataReference_ObjectReference::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ComponentDataReference_ObjectReference::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::ComponentDataReference_ObjectReference::MergeFrom(void **this, const TSP::ComponentDataReference_ObjectReference *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      v3[3] = (void *)*((void *)a2 + 3);
    }
    if ((v5 & 2) != 0) {
      *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    }
    *((_DWORD *)v3 + 4) |= v5;
  }
  return this;
}

void TSP::ComponentDataReference_ObjectReference::CopyFrom(TSP::ComponentDataReference_ObjectReference *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::ComponentDataReference_ObjectReference::Clear(this);
    TSP::ComponentDataReference_ObjectReference::MergeFrom((void **)this, a2);
  }
}

BOOL TSP::ComponentDataReference_ObjectReference::IsInitialized(TSP::ComponentDataReference_ObjectReference *this)
{
  return (~*((_DWORD *)this + 4) & 3) == 0;
}

uint64_t TSP::ComponentDataReference_ObjectReference::GetMetadata(TSP::ComponentDataReference_ObjectReference *this)
{
  return off_1001E9C30[12];
}

void *TSP::ComponentDataReference::ComponentDataReference(void *a1, uint64_t a2)
{
  *a1 = off_1001C80D0;
  a1[1] = a2;
  a1[3] = a2;
  a1[2] = 0;
  a1[4] = 0;
  a1[5] = 0;
  if (atomic_load_explicit(scc_info_ComponentDataReference_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ComponentDataReference_TSPArchiveMessages_2eproto);
  }
  a1[6] = 0;
  return a1;
}

void sub_10003EC34(_Unwind_Exception *a1)
{
  sub_1000502F4(v1);
  _Unwind_Resume(a1);
}

void TSP::ComponentDataReference::~ComponentDataReference(TSP::ComponentDataReference *this)
{
}

{
  uint64_t vars8;

  TSP::ComponentDataReference::~ComponentDataReference(this);
  operator delete();
}

uint64_t TSP::ComponentDataReference::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ComponentDataReference::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::ComponentDataReference_ObjectReference **)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::ComponentDataReference_ObjectReference::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(void *)(v5 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::ComponentDataReference::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = (google::protobuf::internal *)((char *)v29 + 1);
      unsigned int v9 = *(unsigned __int8 *)v29;
      if ((*(char *)v29 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v29, (const char *)(v10 - 128));
      uint64_t v29 = TagFallback;
      if (!TagFallback) {
        goto LABEL_46;
      }
      unint64_t v8 = TagFallback;
      unsigned int v9 = v26;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 18)
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unsigned int v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v13 = sub_10003562C((unint64_t *)(a1 + 8));
            unint64_t v8 = v29;
          }
          uint64_t v29 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
          if (!v29)
          {
LABEL_46:
            uint64_t v29 = 0;
            goto LABEL_2;
          }
          goto LABEL_38;
        }
        unsigned int v14 = (google::protobuf::internal *)((char *)v8 - 1);
        while (2)
        {
          uint64_t v15 = (google::protobuf::internal *)((char *)v14 + 1);
          uint64_t v29 = (google::protobuf::internal *)((char *)v14 + 1);
          int v16 = *(int **)(a1 + 40);
          if (v16)
          {
            uint64_t v17 = *(int *)(a1 + 32);
            int v18 = *v16;
            if ((int)v17 < *v16)
            {
              *(_DWORD *)(a1 + 32) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
              goto LABEL_30;
            }
            if (v18 == *(_DWORD *)(a1 + 36))
            {
LABEL_28:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v18 + 1);
              int v16 = *(int **)(a1 + 40);
              int v18 = *v16;
            }
            int *v16 = v18 + 1;
            uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentDataReference_ObjectReference>(*(void *)(a1 + 24));
            uint64_t v20 = *(void *)(a1 + 40);
            uint64_t v21 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 32) = v21 + 1;
            *(void *)(v20 + 8 * v21 + 8) = v19;
            uint64_t v15 = v29;
LABEL_30:
            unsigned int v14 = sub_10003EFB8(a3, v19, v15);
            uint64_t v29 = v14;
            if (!v14) {
              goto LABEL_46;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(unsigned char *)v14 != 18) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        int v18 = *(_DWORD *)(a1 + 36);
        goto LABEL_28;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      unint64_t v22 = (google::protobuf::internal *)((char *)v8 + 1);
      unint64_t v23 = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v24 = *(char *)v22;
      unint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        unint64_t v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
        uint64_t v29 = v22;
        *(void *)(a1 + 48) = v23;
        int v5 = 1;
        goto LABEL_38;
      }
      uint64_t v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v23);
      uint64_t v29 = v27;
      *(void *)(a1 + 48) = v28;
      int v5 = 1;
      if (!v27) {
        goto LABEL_46;
      }
LABEL_38:
      if (sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    unint64_t v8 = (google::protobuf::internal *)((char *)v29 + 2);
LABEL_7:
    uint64_t v29 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

google::protobuf::internal *sub_10003EFB8(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    unint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  unint64_t result = TSP::ComponentDataReference_ObjectReference::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::ComponentDataReference::_InternalSerialize(TSP::ComponentDataReference *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v6 = *((void *)this + 6);
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unint64_t v8 = v7 >> 7;
          ++a2;
          unint64_t v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  int v10 = *((_DWORD *)this + 8);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v12 = *(TSP::ComponentDataReference_ObjectReference **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v13 = *((_DWORD *)v12 + 5);
      if (v13 > 0x7F)
      {
        a2[1] = v13 | 0x80;
        unsigned int v15 = v13 >> 7;
        if (v13 >> 14)
        {
          unsigned int v14 = a2 + 3;
          do
          {
            *(v14 - sub_1000333D0((uint64_t *)this + 1) = v15 | 0x80;
            unsigned int v16 = v15 >> 7;
            ++v14;
            unsigned int v17 = v15 >> 14;
            v15 >>= 7;
          }
          while (v17);
          *(v14 - sub_1000333D0((uint64_t *)this + 1) = v16;
        }
        else
        {
          a2[2] = v15;
          unsigned int v14 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v13;
        unsigned int v14 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::ComponentDataReference_ObjectReference::_InternalSerialize(v12, v14, a3, a4);
    }
  }
  uint64_t v18 = *((void *)this + 1);
  if ((v18 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v18 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::ComponentDataReference::ByteSizeLong(TSP::ComponentDataReference *this)
{
  if (*((unsigned char *)this + 16)) {
    unint64_t v2 = ((9 * (__clz(*((void *)this + 6) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v2 = 0;
  }
  uint64_t v3 = *((int *)this + 8);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + v3);
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    unint64_t v6 = (TSP::ComponentDataReference_ObjectReference **)(v5 + 8);
  }
  else {
    unint64_t v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unint64_t v8 = *v6++;
      unint64_t v9 = TSP::ComponentDataReference_ObjectReference::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::ComponentDataReference *)((char *)this + 8), v4, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v4;
    return (char *)v4;
  }
}

void TSP::ComponentDataReference::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ComponentDataReference::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::ComponentDataReference::MergeFrom(void **this, const TSP::ComponentDataReference *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    unint64_t v6 = (TSP::ComponentDataReference_ObjectReference **)(*((void *)a2 + 5) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 3), *((_DWORD *)a2 + 8));
    this = sub_100050380(v3 + 3, (void ***)v7, v6, v5, *(_DWORD *)v3[5] - *((_DWORD *)v3 + 8));
    signed int v8 = *((_DWORD *)v3 + 8) + v5;
    *((_DWORD *)v3 + 8) = v8;
    unint64_t v9 = (signed int *)v3[5];
    if (*v9 < v8) {
      *unint64_t v9 = v8;
    }
  }
  if (*((unsigned char *)a2 + 16))
  {
    int v10 = (void *)*((void *)a2 + 6);
    *((_DWORD *)v3 + 4) |= 1u;
    v3[6] = v10;
  }
  return this;
}

void TSP::ComponentDataReference::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::ComponentDataReference::Clear(this);
    TSP::ComponentDataReference::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::ComponentDataReference::IsInitialized(TSP::ComponentDataReference *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 0;
  }
  uint64_t v2 = *((unsigned int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  do
  {
    BOOL result = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = *(void *)(v3 + 8 * v2--);
  }
  while ((~*(_DWORD *)(v4 + 16) & 3) == 0);
  return result;
}

uint64_t TSP::ComponentDataReference::GetMetadata(TSP::ComponentDataReference *this)
{
  return off_1001E9C30[14];
}

void TSP::ObjectUUIDMapEntry::~ObjectUUIDMapEntry(TSP::ObjectUUIDMapEntry *this)
{
  if (this != (TSP::ObjectUUIDMapEntry *)&TSP::_ObjectUUIDMapEntry_default_instance_)
  {
    uint64_t v2 = (TSP::UUID *)*((void *)this + 3);
    if (v2)
    {
      TSP::UUID::~UUID(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::ObjectUUIDMapEntry::~ObjectUUIDMapEntry(this);
  operator delete();
}

uint64_t TSP::ObjectUUIDMapEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ObjectUUIDMapEntry::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::UUID::Clear(this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(void *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::ObjectUUIDMapEntry::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v24 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v24 + 1);
      unsigned int v9 = *(unsigned __int8 *)v24;
      if ((*(char *)v24 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v24, (const char *)(v10 - 128));
      int v24 = TagFallback;
      if (!TagFallback) {
        goto LABEL_40;
      }
      signed int v8 = TagFallback;
      unsigned int v9 = v21;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v15 = *(void *)(a1 + 24);
          if (!v15)
          {
            unsigned int v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              unsigned int v16 = (void *)*v16;
            }
            uint64_t v15 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v16);
            *(void *)(a1 + 24) = v15;
            signed int v8 = v24;
          }
          unsigned int v14 = sub_10003F83C(a3, v15, v8);
        }
        else
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unsigned int v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v13 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v24;
          }
          unsigned int v14 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
        }
        int v24 = v14;
        if (!v14) {
          goto LABEL_40;
        }
        goto LABEL_32;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      v5 |= 2u;
      unsigned int v17 = (google::protobuf::internal *)((char *)v8 + 1);
      unint64_t v18 = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_31;
      }
      int v19 = *(char *)v17;
      unint64_t v18 = v18 + (v19 << 7) - 128;
      if ((v19 & 0x80000000) == 0)
      {
        unsigned int v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_31:
        int v24 = v17;
        *(void *)(a1 + 32) = v18;
        goto LABEL_32;
      }
      unint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v18);
      int v24 = v22;
      *(void *)(a1 + 32) = v23;
      if (!v22)
      {
LABEL_40:
        int v24 = 0;
        goto LABEL_2;
      }
LABEL_32:
      if (sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    signed int v8 = (google::protobuf::internal *)((char *)v24 + 2);
LABEL_7:
    int v24 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

google::protobuf::internal *sub_10003F83C(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    unint64_t v6 = result;
  }
  else
  {
    unint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::UUID::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::ObjectUUIDMapEntry::_InternalSerialize(TSP::ObjectUUIDMapEntry *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((void *)this + 4);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unint64_t v13 = v8 >> 7;
        ++a2;
        unint64_t v14 = v8 >> 14;
        v8 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
      if ((v6 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v9 = (TSP::UUID *)*((void *)this + 3);
  *a2 = 18;
  unsigned int v10 = *((_DWORD *)v9 + 5);
  if (v10 > 0x7F)
  {
    a2[1] = v10 | 0x80;
    unsigned int v12 = v10 >> 7;
    if (v10 >> 14)
    {
      BOOL v11 = a2 + 3;
      do
      {
        *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unsigned int v15 = v12 >> 7;
        ++v11;
        unsigned int v16 = v12 >> 14;
        v12 >>= 7;
      }
      while (v16);
      *(v11 - sub_1000333D0((uint64_t *)this + 1) = v15;
    }
    else
    {
      a2[2] = v12;
      BOOL v11 = a2 + 3;
    }
  }
  else
  {
    a2[1] = v10;
    BOOL v11 = a2 + 2;
  }
  a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v9, v11, a3, a4);
LABEL_24:
  uint64_t v17 = *((void *)this + 1);
  if ((v17 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::ObjectUUIDMapEntry::RequiredFieldsByteSizeFallback(TSP::ObjectUUIDMapEntry *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2)
  {
    uint64_t v4 = TSP::UUID::ByteSizeLong(*((TSP::UUID **)this + 3));
    BOOL result = &v4[((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1];
    if ((*((_DWORD *)this + 4) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  BOOL result = 0;
  if ((v2 & 2) != 0) {
LABEL_5:
  }
    result += ((9 * (__clz(*((void *)this + 4) | 1) ^ 0x3F) + 73) >> 6) + 1;
  return result;
}

char *TSP::ObjectUUIDMapEntry::ByteSizeLong(TSP::UUID **this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0)
  {
    char v3 = TSP::ObjectUUIDMapEntry::RequiredFieldsByteSizeFallback((TSP::ObjectUUIDMapEntry *)this);
  }
  else
  {
    int v2 = TSP::UUID::ByteSizeLong(this[3]);
    char v3 = &v2[((9 * (__clz((unint64_t)this[4] | 1) ^ 0x3F) + 73) >> 6)
           + 2
           + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), (const google::protobuf::UnknownFieldSet *)v3, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v3;
    return v3;
  }
}

void TSP::ObjectUUIDMapEntry::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ObjectUUIDMapEntry::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::ObjectUUIDMapEntry::MergeFrom(void **this, const TSP::ObjectUUIDMapEntry *a2)
{
  char v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      *((_DWORD *)v3 + 4) |= 1u;
      unint64_t v7 = (void **)v3[3];
      if (!v7)
      {
        unint64_t v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unint64_t v8 = (void *)*v8;
        }
        unint64_t v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v8);
        v3[3] = v7;
      }
      if (*((void *)a2 + 3)) {
        int v9 = (const TSP::UUID *)*((void *)a2 + 3);
      }
      else {
        int v9 = (const TSP::UUID *)&TSP::_UUID_default_instance_;
      }
      this = TSP::UUID::MergeFrom(v7, v9);
    }
    if ((v6 & 2) != 0) {
      v3[4] = (void *)*((void *)a2 + 4);
    }
    *((_DWORD *)v3 + 4) |= v6;
  }
  return this;
}

void TSP::ObjectUUIDMapEntry::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::ObjectUUIDMapEntry::Clear(this);
    TSP::ObjectUUIDMapEntry::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::ObjectUUIDMapEntry::IsInitialized(TSP::ObjectUUIDMapEntry *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((~v1 & 3) != 0) {
    return 0;
  }
  if ((v1 & 1) == 0) {
    return 1;
  }
  BOOL result = TSP::UUID::IsInitialized(*((TSP::UUID **)this + 3));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t TSP::ObjectUUIDMapEntry::GetMetadata(TSP::ObjectUUIDMapEntry *this)
{
  return off_1001E9C30[16];
}

void *TSP::FeatureInfo::FeatureInfo(void *a1, uint64_t a2)
{
  *a1 = off_1001C8230;
  a1[1] = a2;
  a1[4] = a2;
  a1[2] = 0;
  a1[3] = 0;
  a1[6] = 0;
  a1[7] = a2;
  if (atomic_load_explicit(scc_info_FeatureInfo_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FeatureInfo_TSPArchiveMessages_2eproto);
  }
  a1[9] = &google::protobuf::internal::fixed_address_empty_string;
  return a1;
}

void sub_10003FE8C(_Unwind_Exception *a1)
{
  if (*(int *)(v2 + 52) >= 1) {
    sub_100163A7C(v3);
  }
  sub_100163B78(v4, v1);
  _Unwind_Resume(a1);
}

void TSP::FeatureInfo::~FeatureInfo(TSP::FeatureInfo *this)
{
  uint64_t v2 = *((void *)this + 9);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
  if (*((int *)this + 13) >= 1)
  {
    uint64_t v3 = *((void *)this + 7);
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t v4 = (void *)(v3 - 8);
    if (!v5) {
      operator delete(v4);
    }
  }
  if (*((int *)this + 7) >= 1)
  {
    uint64_t v6 = *((void *)this + 4);
    uint64_t v8 = *(void *)(v6 - 8);
    unint64_t v7 = (void *)(v6 - 8);
    if (!v8) {
      operator delete(v7);
    }
  }
}

{
  uint64_t vars8;

  TSP::FeatureInfo::~FeatureInfo(this);
  operator delete();
}

uint64_t TSP::FeatureInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::FeatureInfo::Clear(TSP::FeatureInfo *this)
{
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 12) = 0;
  if (*((unsigned char *)this + 16))
  {
    unint64_t v1 = *((void *)this + 9) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 2sub_1000502F4((void *)this + 3) = 0;
    }
  }
  char v3 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + 2) = 0;
  if (v3) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::FeatureInfo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v23 = a2;
  if ((sub_1000355B8(a3, &v23, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v7 = (google::protobuf::internal *)((char *)v23 + 1);
      unsigned int v8 = *(unsigned __int8 *)v23;
      if ((*(char *)v23 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v23, (const char *)(v9 - 128));
      uint64_t v23 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unint64_t v7 = TagFallback;
      unsigned int v8 = v20;
LABEL_8:
      unsigned int v10 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 == 26)
        {
          unsigned int v15 = (unsigned int *)(a1 + 48);
          goto LABEL_25;
        }
        if (v8 != 24) {
          goto LABEL_14;
        }
        int v21 = sub_100038CA0(&v23);
        sub_10003C470(a1, v21);
      }
      else
      {
        if (v10 != 2)
        {
          if (v10 == 1 && v8 == 10)
          {
            *(_DWORD *)(a1 + 16) |= 1u;
            uint64_t v16 = *(void *)(a1 + 8);
            uint64_t v17 = (google::protobuf::Arena *)(v16 & 0xFFFFFFFFFFFFFFFELL);
            if (v16) {
              uint64_t v17 = *(google::protobuf::Arena **)v17;
            }
            unint64_t v18 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 72), v17);
            unint64_t v14 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v18, (std::string::value_type *)v23, a3);
          }
          else
          {
LABEL_14:
            if (v8) {
              BOOL v12 = (v8 & 7) == 4;
            }
            else {
              BOOL v12 = 1;
            }
            if (v12)
            {
              *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v8 - 1;
              return v23;
            }
            if (*v6)
            {
              unint64_t v13 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              unint64_t v13 = sub_10003562C((unint64_t *)(a1 + 8));
              unint64_t v7 = v23;
            }
            unint64_t v14 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v13, v7);
          }
          goto LABEL_29;
        }
        if (v8 == 18)
        {
          unsigned int v15 = (unsigned int *)(a1 + 24);
LABEL_25:
          unint64_t v14 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt32Parser(v15, v7, a3);
LABEL_29:
          uint64_t v23 = v14;
          if (!v14) {
            return 0;
          }
          goto LABEL_30;
        }
        if (v8 != 16) {
          goto LABEL_14;
        }
        int v22 = sub_100038CA0(&v23);
        sub_100038D00(a1, v22);
      }
      if (!v23) {
        return 0;
      }
LABEL_30:
      if (sub_1000355B8(a3, &v23, *(_DWORD *)(a3 + 92))) {
        return v23;
      }
    }
    unint64_t v7 = (google::protobuf::internal *)((char *)v23 + 2);
LABEL_7:
    uint64_t v23 = v7;
    goto LABEL_8;
  }
  return v23;
}

const google::protobuf::UnknownFieldSet *TSP::FeatureInfo::_InternalSerialize(TSP::FeatureInfo *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 16)) {
    uint64_t v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 9) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  signed int v6 = *((_DWORD *)this + 10);
  if (v6 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 2, (int *)this + 6, v6, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  unint64_t v7 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 16);
  if ((int)v7 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 3, (int *)this + 12, v7, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  uint64_t v8 = *((void *)this + 1);
  if ((v8 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v8 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, v7);
}

char *TSP::FeatureInfo::ByteSizeLong(TSP::FeatureInfo *this)
{
  if (*((unsigned char *)this + 16))
  {
    unint64_t v3 = *((void *)this + 9) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 6);
  if (v6)
  {
    int v7 = v6;
    if ((v6 & 0x80000000) != 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v8;
  }
  else
  {
    int v7 = 0;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v7;
  uint64_t v9 = v2 + v6;
  uint64_t v10 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 12);
  if (v10)
  {
    int v11 = v10;
    if ((v10 & 0x80000000) != 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v9 += v12;
  }
  else
  {
    int v11 = 0;
  }
  *((_DWORD *)this + 16) = v11;
  unint64_t v13 = (const google::protobuf::UnknownFieldSet *)(v9 + v10);
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::FeatureInfo *)((char *)this + 8), v13, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v13;
    return (char *)(v9 + v10);
  }
}

void TSP::FeatureInfo::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::FeatureInfo::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::FeatureInfo::MergeFrom(std::string *this, const TSP::FeatureInfo *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t data_low = SLODWORD(v3[1].__r_.__value_.__l.__data_);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)&v3[1], data_low + v5);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v3[1].__r_.__value_.__l.__data_) += *((_DWORD *)a2 + 6);
    this = (std::string *)memcpy((void *)(size + 4 * data_low), *((const void **)a2 + 4), 4 * *((int *)a2 + 6));
  }
  int v8 = *((_DWORD *)a2 + 12);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)&v3[2], v9 + v8);
    std::string::size_type v10 = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *((_DWORD *)a2 + 12);
    this = (std::string *)memcpy((void *)(v10 + 4 * v9), *((const void **)a2 + 7), 4 * *((int *)a2 + 12));
  }
  if (*((unsigned char *)a2 + 16))
  {
    unint64_t v11 = *((void *)a2 + 9) & 0xFFFFFFFFFFFFFFFELL;
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type v12 = v3->__r_.__value_.__l.__size_;
    unint64_t v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
    if (v12) {
      unint64_t v13 = *(google::protobuf::Arena **)v13;
    }
    return google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[3], v11, v13);
  }
  return this;
}

void TSP::FeatureInfo::CopyFrom(TSP::FeatureInfo *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::FeatureInfo::Clear(this);
    TSP::FeatureInfo::MergeFrom((std::string *)this, a2);
  }
}

uint64_t TSP::FeatureInfo::IsInitialized(TSP::FeatureInfo *this)
{
  return *((_DWORD *)this + 4) & 1;
}

uint64_t TSP::FeatureInfo::GetMetadata(TSP::FeatureInfo *this)
{
  return off_1001E9C30[18];
}

uint64_t TSP::PackageMetadata::PackageMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C82E0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_PackageMetadata_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_PackageMetadata_TSPArchiveMessages_2eproto);
  }
  *(_DWORD *)(a1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  return a1;
}

void sub_100040720(_Unwind_Exception *a1)
{
  int v5 = v4;
  sub_100050440(v5);
  if (*(int *)(v2 + 124) >= 1)
  {
    uint64_t v7 = *(void *)(v2 + 128);
    uint64_t v9 = *(void *)(v7 - 8);
    int v8 = (void *)(v7 - 8);
    if (!v9) {
      operator delete(v8);
    }
  }
  if (*(int *)(v2 + 100) >= 1)
  {
    uint64_t v10 = *(void *)(v2 + 104);
    uint64_t v12 = *(void *)(v10 - 8);
    unint64_t v11 = (void *)(v10 - 8);
    if (!v12) {
      operator delete(v11);
    }
  }
  if (*(int *)(v2 + 76) >= 1)
  {
    uint64_t v13 = *(void *)(v2 + 80);
    uint64_t v15 = *(void *)(v13 - 8);
    unint64_t v14 = (void *)(v13 - 8);
    if (!v15) {
      operator delete(v14);
    }
  }
  sub_1000504C0(v3);
  sub_100050440(v1);
  _Unwind_Resume(a1);
}

void TSP::PackageMetadata::~PackageMetadata(TSP::PackageMetadata *this)
{
  if (this != (TSP::PackageMetadata *)&TSP::_PackageMetadata_default_instance_)
  {
    uint64_t v2 = (TSP::DocumentRevision *)*((void *)this + 21);
    if (v2)
    {
      TSP::DocumentRevision::~DocumentRevision(v2);
      operator delete();
    }
    unint64_t v3 = (TSP::Reference *)*((void *)this + 22);
    if (v3)
    {
      TSP::Reference::~Reference(v3);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_100050440((void *)this + 18);
  if (*((int *)this + 31) >= 1)
  {
    uint64_t v4 = *((void *)this + 16);
    uint64_t v6 = *(void *)(v4 - 8);
    int v5 = (void *)(v4 - 8);
    if (!v6) {
      operator delete(v5);
    }
  }
  if (*((int *)this + 25) >= 1)
  {
    uint64_t v7 = *((void *)this + 13);
    uint64_t v9 = *(void *)(v7 - 8);
    int v8 = (void *)(v7 - 8);
    if (!v9) {
      operator delete(v8);
    }
  }
  if (*((int *)this + 19) >= 1)
  {
    uint64_t v10 = *((void *)this + 10);
    uint64_t v12 = *(void *)(v10 - 8);
    unint64_t v11 = (void *)(v10 - 8);
    if (!v12) {
      operator delete(v11);
    }
  }
  sub_1000504C0((void *)this + 6);
  sub_100050440((void *)this + 3);
}

{
  uint64_t vars8;

  TSP::PackageMetadata::~PackageMetadata(this);
  operator delete();
}

uint64_t TSP::PackageMetadata::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::PackageMetadata::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (google::protobuf::Arena ***)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::ComponentInfo::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (google::protobuf::Arena ***)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      this = TSP::DataInfo::Clear(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  *(_DWORD *)(v1 + 72) = 0;
  *(_DWORD *)(v1 + 96) = 0;
  *(_DWORD *)(v1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  uint64_t v8 = *(unsigned int *)(v1 + 152);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (google::protobuf::Arena ***)(*(void *)(v1 + 160) + 8);
    do
    {
      uint64_t v10 = *v9++;
      this = TSP::ComponentInfo::Clear(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 152) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if ((v11 & 3) != 0)
  {
    if (v11) {
      this = TSP::DocumentRevision::Clear(*(TSP::DocumentRevision **)(v1 + 168));
    }
    if ((v11 & 2) != 0) {
      this = TSP::Reference::Clear(*(TSP::Reference **)(v1 + 176));
    }
  }
  if ((v11 & 0x1C) != 0)
  {
    *(void *)(v1 + 184) = 0;
    *(void *)(v1 + 192) = 0;
    *(_DWORD *)(v1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_100035820((unint64_t *)v12);
  }
  return this;
}

google::protobuf::Arena **TSP::DocumentRevision::Clear(TSP::DocumentRevision *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    unint64_t v2 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 2sub_1000502F4((void *)this + 3) = 0;
    }
  }
  if ((v1 & 6) != 0)
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
    *((void *)this + 4) = 0;
  }
  char v4 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + 2) = 0;
  if (v4) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::PackageMetadata::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v64 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v64, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (2)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v64 + 1);
      unsigned int v9 = *(unsigned __int8 *)v64;
      if (*(char *)v64 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v64, (const char *)(v10 - 128));
          uint64_t v64 = TagFallback;
          if (!TagFallback) {
            goto LABEL_115;
          }
          uint64_t v8 = TagFallback;
          unsigned int v9 = v15;
LABEL_8:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 8) {
                goto LABEL_100;
              }
              v5 |= 4u;
              int v11 = (google::protobuf::internal *)((char *)v8 + 1);
              unint64_t v12 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_13;
              }
              int v13 = *(char *)v11;
              unint64_t v12 = v12 + (v13 << 7) - 128;
              if ((v13 & 0x80000000) == 0)
              {
                int v11 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_13:
                uint64_t v64 = v11;
                *(void *)(a1 + 184) = v12;
                goto LABEL_108;
              }
              uint64_t v53 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v12);
              uint64_t v64 = v53;
              *(void *)(a1 + 184) = v54;
              if (!v53) {
                goto LABEL_115;
              }
              goto LABEL_108;
            case 2u:
              if (v9 != 18) {
                goto LABEL_100;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v16 = *(void *)(a1 + 168);
              if (!v16)
              {
                uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
                if (*v7) {
                  uint64_t v17 = (void *)*v17;
                }
                uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<TSP::DocumentRevision>(v17);
                *(void *)(a1 + 168) = v16;
                uint64_t v8 = v64;
              }
              unint64_t v18 = sub_1000410F8((uint64_t)a3, v16, v8);
              goto LABEL_107;
            case 3u:
              if (v9 != 26) {
                goto LABEL_100;
              }
              int v19 = (google::protobuf::internal *)((char *)v8 - 1);
              while (1)
              {
                unsigned int v20 = (google::protobuf::internal *)((char *)v19 + 1);
                uint64_t v64 = (google::protobuf::internal *)((char *)v19 + 1);
                int v21 = *(int **)(a1 + 40);
                if (!v21) {
                  break;
                }
                uint64_t v22 = *(int *)(a1 + 32);
                int v23 = *v21;
                if ((int)v22 >= *v21)
                {
                  if (v23 == *(_DWORD *)(a1 + 36))
                  {
LABEL_29:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v23 + 1);
                    int v21 = *(int **)(a1 + 40);
                    int v23 = *v21;
                  }
                  *int v21 = v23 + 1;
                  uint64_t v24 = google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentInfo>(*(void *)(a1 + 24));
                  uint64_t v25 = *(void *)(a1 + 40);
                  uint64_t v26 = *(int *)(a1 + 32);
                  *(_DWORD *)(a1 + 32) = v26 + 1;
                  *(void *)(v25 + 8 * v26 + 8) = v24;
                  unsigned int v20 = v64;
                  goto LABEL_31;
                }
                *(_DWORD *)(a1 + 32) = v22 + 1;
                uint64_t v24 = *(void *)&v21[2 * v22 + 2];
LABEL_31:
                int v19 = sub_1000411C8((uint64_t)a3, v24, v20);
                uint64_t v64 = v19;
                if (!v19) {
                  goto LABEL_115;
                }
                if (*(void *)a3 <= (unint64_t)v19 || *(unsigned char *)v19 != 26) {
                  goto LABEL_108;
                }
              }
              int v23 = *(_DWORD *)(a1 + 36);
              goto LABEL_29;
            case 4u:
              if (v9 != 34) {
                goto LABEL_100;
              }
              uint64_t v27 = (google::protobuf::internal *)((char *)v8 - 1);
              while (1)
              {
                uint64_t v28 = (google::protobuf::internal *)((char *)v27 + 1);
                uint64_t v64 = (google::protobuf::internal *)((char *)v27 + 1);
                uint64_t v29 = *(int **)(a1 + 64);
                if (!v29) {
                  break;
                }
                uint64_t v30 = *(int *)(a1 + 56);
                int v31 = *v29;
                if ((int)v30 >= *v29)
                {
                  if (v31 == *(_DWORD *)(a1 + 60))
                  {
LABEL_42:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v31 + 1);
                    uint64_t v29 = *(int **)(a1 + 64);
                    int v31 = *v29;
                  }
                  int *v29 = v31 + 1;
                  uint64_t v32 = google::protobuf::Arena::CreateMaybeMessage<TSP::DataInfo>(*(void *)(a1 + 48));
                  uint64_t v33 = *(void *)(a1 + 64);
                  uint64_t v34 = *(int *)(a1 + 56);
                  *(_DWORD *)(a1 + 56) = v34 + 1;
                  *(void *)(v33 + 8 * v34 + 8) = v32;
                  uint64_t v28 = v64;
                  goto LABEL_44;
                }
                *(_DWORD *)(a1 + 56) = v30 + 1;
                uint64_t v32 = *(void *)&v29[2 * v30 + 2];
LABEL_44:
                uint64_t v27 = sub_100041298(a3, v32, v28);
                uint64_t v64 = v27;
                if (!v27) {
                  goto LABEL_115;
                }
                if (*(void *)a3 <= (unint64_t)v27 || *(unsigned char *)v27 != 34) {
                  goto LABEL_108;
                }
              }
              int v31 = *(_DWORD *)(a1 + 60);
              goto LABEL_42;
            case 5u:
              if (v9 == 42)
              {
                uint64_t v35 = (unsigned int *)(a1 + 72);
LABEL_54:
                unint64_t v18 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt32Parser(v35, v8, (uint64_t)a3);
                goto LABEL_107;
              }
              if (v9 == 40)
              {
                int v58 = sub_100038CA0(&v64);
                sub_10003A6CC(a1, v58);
                goto LABEL_98;
              }
              goto LABEL_100;
            case 6u:
              if (v9 == 50)
              {
                uint64_t v35 = (unsigned int *)(a1 + 96);
                goto LABEL_54;
              }
              if (v9 == 48)
              {
                int v59 = sub_100038CA0(&v64);
                sub_100041368(a1, v59);
                goto LABEL_98;
              }
LABEL_100:
              if (v9) {
                BOOL v61 = (v9 & 7) == 4;
              }
              else {
                BOOL v61 = 1;
              }
              if (v61)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
              if (*v7)
              {
                uint64_t v62 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
              }
              else
              {
                uint64_t v62 = sub_10003562C((unint64_t *)(a1 + 8));
                uint64_t v8 = v64;
              }
              unint64_t v18 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v62, v8);
LABEL_107:
              uint64_t v64 = v18;
              if (!v18)
              {
LABEL_115:
                uint64_t v64 = 0;
                goto LABEL_2;
              }
LABEL_108:
              if (sub_1000355B8((uint64_t)a3, &v64, a3[11].i32[1])) {
                goto LABEL_2;
              }
              continue;
            case 7u:
              if (v9 == 58)
              {
                uint64_t v35 = (unsigned int *)(a1 + 120);
                goto LABEL_54;
              }
              if (v9 == 56)
              {
                int v60 = sub_100038CA0(&v64);
                sub_100038F20(a1, v60);
LABEL_98:
                if (!v64) {
                  goto LABEL_115;
                }
                goto LABEL_108;
              }
              goto LABEL_100;
            case 8u:
              if (v9 != 64) {
                goto LABEL_100;
              }
              v5 |= 8u;
              unint64_t v36 = (google::protobuf::internal *)((char *)v8 + 1);
              unint64_t v37 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_59;
              }
              int v38 = *(char *)v36;
              unint64_t v37 = v37 + (v38 << 7) - 128;
              if (v38 < 0)
              {
                uint64_t v55 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v37);
                uint64_t v64 = v55;
                *(void *)(a1 + 192) = v56;
                if (!v55) {
                  goto LABEL_115;
                }
              }
              else
              {
                unint64_t v36 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_59:
                uint64_t v64 = v36;
                *(void *)(a1 + 192) = v37;
              }
              goto LABEL_108;
            case 9u:
              if (v9 != 72) {
                goto LABEL_100;
              }
              unint64_t v39 = (google::protobuf::internal *)((char *)v8 + 1);
              uint64_t v40 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_64;
              }
              int v41 = *(char *)v39;
              int v42 = v40 + (v41 << 7);
              uint64_t v40 = (v42 - 128);
              if (v41 < 0)
              {
                uint64_t v64 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, (v42 - 128));
                if (!v64) {
                  goto LABEL_115;
                }
                uint64_t v40 = v57;
              }
              else
              {
                unint64_t v39 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_64:
                uint64_t v64 = v39;
              }
              if (v40 > 2)
              {
                if (*v7) {
                  unsigned int v63 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
                }
                else {
                  unsigned int v63 = sub_10003562C((unint64_t *)(a1 + 8));
                }
                google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v63, 9u, v40);
              }
              else
              {
                *(_DWORD *)(a1 + 16) |= 0x10u;
                *(_DWORD *)(a1 + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v40;
              }
              goto LABEL_108;
            case 0xAu:
              if (v9 != 82) {
                goto LABEL_100;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v43 = *(void *)(a1 + 176);
              if (!v43)
              {
                unint64_t v44 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
                if (*v7) {
                  unint64_t v44 = (void *)*v44;
                }
                uint64_t v43 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v44);
                *(void *)(a1 + 176) = v43;
                uint64_t v8 = v64;
              }
              unint64_t v18 = sub_100034100((uint64_t)a3, v43, v8);
              goto LABEL_107;
            case 0xBu:
              if (v9 != 90) {
                goto LABEL_100;
              }
              int v45 = (google::protobuf::internal *)((char *)v8 - 1);
              break;
            default:
              goto LABEL_100;
          }
          while (1)
          {
            int v46 = (google::protobuf::internal *)((char *)v45 + 1);
            uint64_t v64 = (google::protobuf::internal *)((char *)v45 + 1);
            unint64_t v47 = *(int **)(a1 + 160);
            if (!v47) {
              break;
            }
            uint64_t v48 = *(int *)(a1 + 152);
            int v49 = *v47;
            if ((int)v48 >= *v47)
            {
              if (v49 == *(_DWORD *)(a1 + 156))
              {
LABEL_80:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 144), v49 + 1);
                unint64_t v47 = *(int **)(a1 + 160);
                int v49 = *v47;
              }
              int *v47 = v49 + 1;
              uint64_t v50 = google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentInfo>(*(void *)(a1 + 144));
              uint64_t v51 = *(void *)(a1 + 160);
              uint64_t v52 = *(int *)(a1 + 152);
              *(_DWORD *)(a1 + 152) = v52 + 1;
              *(void *)(v51 + 8 * v52 + 8) = v50;
              int v46 = v64;
              goto LABEL_82;
            }
            *(_DWORD *)(a1 + 152) = v48 + 1;
            uint64_t v50 = *(void *)&v47[2 * v48 + 2];
LABEL_82:
            int v45 = sub_1000411C8((uint64_t)a3, v50, v46);
            uint64_t v64 = v45;
            if (!v45) {
              goto LABEL_115;
            }
            if (*(void *)a3 <= (unint64_t)v45 || *(unsigned char *)v45 != 90) {
              goto LABEL_108;
            }
          }
          int v49 = *(_DWORD *)(a1 + 156);
          goto LABEL_80;
        }
        uint64_t v8 = (google::protobuf::internal *)((char *)v64 + 2);
      }
      break;
    }
    uint64_t v64 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v64;
}

google::protobuf::internal *sub_1000410F8(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::DocumentRevision::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *sub_1000411C8(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::ComponentInfo::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *sub_100041298(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::DataInfo::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

void sub_100041368(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 96);
  char v4 = (_DWORD *)(a1 + 96);
  if (v5 == *(_DWORD *)(a1 + 100))
  {
    int v6 = v5 + 1;
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)(a1 + 96), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 104) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 104) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

const google::protobuf::UnknownFieldSet *TSP::PackageMetadata::_InternalSerialize(TSP::PackageMetadata *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((void *)this + 23);
    unsigned __int8 *v4 = 8;
    if (v7 <= 0x7F)
    {
      v4[1] = v7;
      v4 += 2;
      if ((v6 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unint64_t v13 = v8 >> 7;
        ++v4;
        unint64_t v14 = v8 >> 14;
        v8 >>= 7;
      }
      while (v14);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v13;
      if ((v6 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
    v4[2] = v8;
    v4 += 3;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  int v9 = (TSP::DocumentRevision *)*((void *)this + 21);
  unsigned __int8 *v4 = 18;
  unsigned int v10 = *((_DWORD *)v9 + 5);
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unsigned int v12 = v10 >> 7;
    if (v10 >> 14)
    {
      BOOL v11 = (google::protobuf::UnknownFieldSet *)(v4 + 3);
      do
      {
        *((unsigned char *)v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unsigned int v15 = v12 >> 7;
        BOOL v11 = (google::protobuf::UnknownFieldSet *)((char *)v11 + 1);
        unsigned int v16 = v12 >> 14;
        v12 >>= 7;
      }
      while (v16);
      *((unsigned char *)v11 - sub_1000333D0((uint64_t *)this + 1) = v15;
    }
    else
    {
      v4[2] = v12;
      BOOL v11 = (google::protobuf::UnknownFieldSet *)(v4 + 3);
    }
  }
  else
  {
    v4[1] = v10;
    BOOL v11 = (google::protobuf::UnknownFieldSet *)(v4 + 2);
  }
  char v4 = (unsigned __int8 *)TSP::DocumentRevision::_InternalSerialize(v9, v11, a3);
LABEL_24:
  int v17 = *((_DWORD *)this + 8);
  if (v17)
  {
    for (int i = 0; i != v17; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      int v19 = *(TSP::ComponentInfo **)(*((void *)this + 5) + 8 * i + 8);
      unsigned __int8 *v4 = 26;
      unsigned int v20 = *((_DWORD *)v19 + 5);
      if (v20 > 0x7F)
      {
        v4[1] = v20 | 0x80;
        unsigned int v22 = v20 >> 7;
        if (v20 >> 14)
        {
          int v21 = v4 + 3;
          do
          {
            *(v21 - sub_1000333D0((uint64_t *)this + 1) = v22 | 0x80;
            unsigned int v23 = v22 >> 7;
            ++v21;
            unsigned int v24 = v22 >> 14;
            v22 >>= 7;
          }
          while (v24);
          *(v21 - sub_1000333D0((uint64_t *)this + 1) = v23;
        }
        else
        {
          v4[2] = v22;
          int v21 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v20;
        int v21 = v4 + 2;
      }
      char v4 = (unsigned __int8 *)TSP::ComponentInfo::_InternalSerialize(v19, v21, a3);
    }
  }
  int v25 = *((_DWORD *)this + 14);
  if (v25)
  {
    for (int j = 0; j != v25; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v27 = *(TSP::DataInfo **)(*((void *)this + 8) + 8 * j + 8);
      unsigned __int8 *v4 = 34;
      unsigned int v28 = *((_DWORD *)v27 + 5);
      if (v28 > 0x7F)
      {
        v4[1] = v28 | 0x80;
        unsigned int v30 = v28 >> 7;
        if (v28 >> 14)
        {
          uint64_t v29 = v4 + 3;
          do
          {
            *(v29 - sub_1000333D0((uint64_t *)this + 1) = v30 | 0x80;
            unsigned int v31 = v30 >> 7;
            ++v29;
            unsigned int v32 = v30 >> 14;
            v30 >>= 7;
          }
          while (v32);
          *(v29 - sub_1000333D0((uint64_t *)this + 1) = v31;
        }
        else
        {
          v4[2] = v30;
          uint64_t v29 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v28;
        uint64_t v29 = v4 + 2;
      }
      char v4 = (unsigned __int8 *)TSP::DataInfo::_InternalSerialize(v27, v29, a3);
    }
  }
  signed int v33 = *((_DWORD *)this + 22);
  if (v33 > 0) {
    char v4 = sub_10004F9AC(a3, 5, (int *)this + 18, v33, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  signed int v34 = *((_DWORD *)this + 28);
  if (v34 >= 1) {
    char v4 = sub_10004F9AC(a3, 6, (int *)this + 24, v34, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  uint64_t v35 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 34);
  if ((int)v35 >= 1) {
    char v4 = sub_10004F9AC(a3, 7, (int *)this + 30, v35, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v36 = *((void *)this + 24);
    unsigned __int8 *v4 = 64;
    if (v36 > 0x7F)
    {
      v4[1] = v36 | 0x80;
      unint64_t v37 = v36 >> 7;
      if (v36 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v37 | 0x80;
          unint64_t v38 = v37 >> 7;
          ++v4;
          unint64_t v39 = v37 >> 14;
          v37 >>= 7;
        }
        while (v39);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v38;
        if ((v6 & 0x10) != 0) {
          goto LABEL_69;
        }
      }
      else
      {
        v4[2] = v37;
        v4 += 3;
        if ((v6 & 0x10) != 0) {
          goto LABEL_69;
        }
      }
    }
    else
    {
      v4[1] = v36;
      v4 += 2;
      if ((v6 & 0x10) != 0) {
        goto LABEL_69;
      }
    }
LABEL_56:
    if ((v6 & 2) == 0) {
      goto LABEL_90;
    }
    goto LABEL_80;
  }
  if ((v6 & 0x10) == 0) {
    goto LABEL_56;
  }
LABEL_69:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v40 = *((int *)this + 50);
  unsigned __int8 *v4 = 72;
  if (v40 > 0x7F)
  {
    v4[1] = v40 | 0x80;
    unint64_t v41 = v40 >> 7;
    if (v40 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v41 | 0x80;
        unint64_t v42 = v41 >> 7;
        ++v4;
        unint64_t v43 = v41 >> 14;
        v41 >>= 7;
      }
      while (v43);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v42;
      if ((v6 & 2) == 0) {
        goto LABEL_90;
      }
    }
    else
    {
      v4[2] = v41;
      v4 += 3;
      if ((v6 & 2) == 0) {
        goto LABEL_90;
      }
    }
  }
  else
  {
    v4[1] = v40;
    v4 += 2;
    if ((v6 & 2) == 0) {
      goto LABEL_90;
    }
  }
LABEL_80:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v44 = (TSP::Reference *)*((void *)this + 22);
  unsigned __int8 *v4 = 82;
  unsigned int v45 = *((_DWORD *)v44 + 5);
  if (v45 > 0x7F)
  {
    v4[1] = v45 | 0x80;
    unsigned int v47 = v45 >> 7;
    if (v45 >> 14)
    {
      int v46 = v4 + 3;
      do
      {
        *(v46 - sub_1000333D0((uint64_t *)this + 1) = v47 | 0x80;
        unsigned int v48 = v47 >> 7;
        ++v46;
        unsigned int v49 = v47 >> 14;
        v47 >>= 7;
      }
      while (v49);
      *(v46 - sub_1000333D0((uint64_t *)this + 1) = v48;
    }
    else
    {
      v4[2] = v47;
      int v46 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v45;
    int v46 = v4 + 2;
  }
  char v4 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v44, v46, a3, v35);
LABEL_90:
  int v50 = *((_DWORD *)this + 38);
  if (v50)
  {
    for (int k = 0; k != v50; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v52 = *(TSP::ComponentInfo **)(*((void *)this + 20) + 8 * k + 8);
      unsigned __int8 *v4 = 90;
      unsigned int v53 = *((_DWORD *)v52 + 5);
      if (v53 > 0x7F)
      {
        v4[1] = v53 | 0x80;
        unsigned int v55 = v53 >> 7;
        if (v53 >> 14)
        {
          uint64_t v54 = v4 + 3;
          do
          {
            *(v54 - sub_1000333D0((uint64_t *)this + 1) = v55 | 0x80;
            unsigned int v56 = v55 >> 7;
            ++v54;
            unsigned int v57 = v55 >> 14;
            v55 >>= 7;
          }
          while (v57);
          *(v54 - sub_1000333D0((uint64_t *)this + 1) = v56;
        }
        else
        {
          v4[2] = v55;
          uint64_t v54 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v53;
        uint64_t v54 = v4 + 2;
      }
      char v4 = (unsigned __int8 *)TSP::ComponentInfo::_InternalSerialize(v52, v54, a3);
    }
  }
  uint64_t v58 = *((void *)this + 1);
  if ((v58 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v58 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, v35);
}

char *TSP::PackageMetadata::ByteSizeLong(TSP::PackageMetadata *this)
{
  if ((*((unsigned char *)this + 16) & 4) != 0) {
    unint64_t v2 = ((9 * (__clz(*((void *)this + 23) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v2 = 0;
  }
  uint64_t v3 = *((int *)this + 8);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    int v6 = (TSP::ComponentInfo **)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unint64_t v8 = *v6++;
      int v9 = TSP::ComponentInfo::ByteSizeLong(v8);
      v4 += (uint64_t)&v9[(9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6];
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *((int *)this + 14);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *((void *)this + 8);
  if (v12) {
    unint64_t v13 = (TSP::DataInfo **)(v12 + 8);
  }
  else {
    unint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      unsigned int v15 = *v13++;
      unsigned int v16 = TSP::DataInfo::ByteSizeLong(v15);
      v11 += (uint64_t)&v16[(9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6];
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 18);
  uint64_t v18 = 11;
  uint64_t v19 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v17 >= 0) {
    uint64_t v18 = v19;
  }
  uint64_t v20 = v18 + v11;
  if (v17) {
    int v21 = v17;
  }
  else {
    int v21 = 0;
  }
  if (!v17) {
    uint64_t v20 = v11;
  }
  *((_DWORD *)this + 22) = v21;
  uint64_t v22 = v20 + v17;
  uint64_t v23 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 24);
  uint64_t v24 = 11;
  uint64_t v25 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v23 >= 0) {
    uint64_t v24 = v25;
  }
  uint64_t v26 = v24 + v22;
  if (v23) {
    int v27 = v23;
  }
  else {
    int v27 = 0;
  }
  if (!v23) {
    uint64_t v26 = v22;
  }
  *((_DWORD *)this + 28) = v27;
  uint64_t v28 = v26 + v23;
  uint64_t v29 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 30);
  uint64_t v30 = 11;
  uint64_t v31 = ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v29 >= 0) {
    uint64_t v30 = v31;
  }
  uint64_t v32 = v30 + v28;
  if (v29) {
    int v33 = v29;
  }
  else {
    int v33 = 0;
  }
  if (v29) {
    uint64_t v34 = v32;
  }
  else {
    uint64_t v34 = v28;
  }
  *((_DWORD *)this + 34) = v33;
  uint64_t v35 = *((int *)this + 38);
  unint64_t v36 = (const google::protobuf::UnknownFieldSet *)(v34 + v29 + v35);
  uint64_t v37 = *((void *)this + 20);
  if (v37) {
    unint64_t v38 = (TSP::ComponentInfo **)(v37 + 8);
  }
  else {
    unint64_t v38 = 0;
  }
  if (v35)
  {
    uint64_t v39 = 8 * v35;
    do
    {
      unint64_t v40 = *v38++;
      unint64_t v41 = TSP::ComponentInfo::ByteSizeLong(v40);
      unint64_t v36 = (const google::protobuf::UnknownFieldSet *)((char *)v36
                                                      + (void)v41
                                                      + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6));
      v39 -= 8;
    }
    while (v39);
  }
  int v42 = *((_DWORD *)this + 4);
  if ((v42 & 3) != 0)
  {
    if (v42)
    {
      unint64_t v43 = TSP::DocumentRevision::ByteSizeLong(*((TSP::DocumentRevision **)this + 21));
      unint64_t v36 = (const google::protobuf::UnknownFieldSet *)&v43[((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v36];
    }
    if ((v42 & 2) != 0)
    {
      unint64_t v44 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 22));
      unint64_t v36 = (const google::protobuf::UnknownFieldSet *)&v44[((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v36];
    }
  }
  if ((v42 & 0x18) != 0)
  {
    if ((v42 & 8) != 0) {
      unint64_t v36 = (const google::protobuf::UnknownFieldSet *)((char *)v36
    }
                                                      + ((9 * (__clz(*((void *)this + 24) | 1) ^ 0x3F) + 73) >> 6)
                                                      + 1);
    if ((v42 & 0x10) != 0)
    {
      int v45 = *((_DWORD *)this + 50);
      uint64_t v46 = ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v45 >= 0) {
        uint64_t v47 = v46;
      }
      else {
        uint64_t v47 = 11;
      }
      unint64_t v36 = (const google::protobuf::UnknownFieldSet *)((char *)v36 + v47);
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::PackageMetadata *)((char *)this + 8), v36, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v36;
    return (char *)v36;
  }
}

void TSP::PackageMetadata::MergeFrom(TSP::PackageMetadata *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::PackageMetadata::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void TSP::PackageMetadata::MergeFrom(TSP::PackageMetadata *this, const TSP::PackageMetadata *a2)
{
  uint64_t v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    uint64_t v7 = (TSP::ComponentInfo **)(*((void *)a2 + 5) + 8);
    unint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((TSP::PackageMetadata *)((char *)this + 24), *((_DWORD *)a2 + 8));
    sub_100050540((unint64_t *)this + 3, (TSP::ComponentInfo **)v8, v7, v6, **((_DWORD **)this + 5) - *((_DWORD *)this + 8));
    signed int v9 = *((_DWORD *)this + 8) + v6;
    *((_DWORD *)this + 8) = v9;
    uint64_t v10 = (signed int *)*((void *)this + 5);
    if (*v10 < v9) {
      signed int *v10 = v9;
    }
  }
  unsigned int v11 = *((_DWORD *)a2 + 14);
  if (v11)
  {
    uint64_t v12 = (TSP::DataInfo **)(*((void *)a2 + 8) + 8);
    unint64_t v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((TSP::PackageMetadata *)((char *)this + 48), *((_DWORD *)a2 + 14));
    sub_100050600((uint64_t *)this + 6, (TSP::DataInfo **)v13, v12, v11, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    signed int v14 = *((_DWORD *)this + 14) + v11;
    *((_DWORD *)this + 14) = v14;
    unsigned int v15 = (signed int *)*((void *)this + 8);
    if (*v15 < v14) {
      *unsigned int v15 = v14;
    }
  }
  int v16 = *((_DWORD *)a2 + 18);
  if (v16)
  {
    uint64_t v17 = *((int *)this + 18);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)this + 18, v17 + v16);
    uint64_t v18 = *((void *)this + 10);
    *((_DWORD *)this + 18) += *((_DWORD *)a2 + 18);
    memcpy((void *)(v18 + 4 * v17), *((const void **)a2 + 10), 4 * *((int *)a2 + 18));
  }
  int v19 = *((_DWORD *)a2 + 24);
  if (v19)
  {
    uint64_t v20 = *((int *)this + 24);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)this + 24, v20 + v19);
    uint64_t v21 = *((void *)this + 13);
    *((_DWORD *)this + 24) += *((_DWORD *)a2 + 24);
    memcpy((void *)(v21 + 4 * v20), *((const void **)a2 + 13), 4 * *((int *)a2 + 24));
  }
  int v22 = *((_DWORD *)a2 + 30);
  if (v22)
  {
    uint64_t v23 = *((int *)this + 30);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)this + 30, v23 + v22);
    uint64_t v24 = *((void *)this + 16);
    *((_DWORD *)this + 30) += *((_DWORD *)a2 + 30);
    memcpy((void *)(v24 + 4 * v23), *((const void **)a2 + 16), 4 * *((int *)a2 + 30));
  }
  unsigned int v25 = *((_DWORD *)a2 + 38);
  if (v25)
  {
    uint64_t v26 = (TSP::ComponentInfo **)(*((void *)a2 + 20) + 8);
    int v27 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((TSP::PackageMetadata *)((char *)this + 144), *((_DWORD *)a2 + 38));
    sub_100050540((unint64_t *)this + 18, (TSP::ComponentInfo **)v27, v26, v25, **((_DWORD **)this + 20) - *((_DWORD *)this + 38));
    signed int v28 = *((_DWORD *)this + 38) + v25;
    *((_DWORD *)this + 38) = v28;
    uint64_t v29 = (signed int *)*((void *)this + 20);
    if (*v29 < v28) {
      signed int *v29 = v28;
    }
  }
  int v30 = *((_DWORD *)a2 + 4);
  if ((v30 & 0x1F) != 0)
  {
    if (v30)
    {
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v31 = (std::string *)*((void *)this + 21);
      if (!v31)
      {
        uint64_t v32 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          uint64_t v32 = (void *)*v32;
        }
        uint64_t v31 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<TSP::DocumentRevision>(v32);
        *((void *)this + 2sub_1000333D0((uint64_t *)this + 1) = v31;
      }
      if (*((void *)a2 + 21)) {
        int v33 = (const TSP::DocumentRevision *)*((void *)a2 + 21);
      }
      else {
        int v33 = (const TSP::DocumentRevision *)&TSP::_DocumentRevision_default_instance_;
      }
      TSP::DocumentRevision::MergeFrom(v31, v33);
      if ((v30 & 2) == 0)
      {
LABEL_21:
        if ((v30 & 4) == 0) {
          goto LABEL_22;
        }
        goto LABEL_43;
      }
    }
    else if ((v30 & 2) == 0)
    {
      goto LABEL_21;
    }
    *((_DWORD *)this + 4) |= 2u;
    uint64_t v34 = (void **)*((void *)this + 22);
    if (!v34)
    {
      uint64_t v35 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        uint64_t v35 = (void *)*v35;
      }
      uint64_t v34 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v35);
      *((void *)this + 22) = v34;
    }
    if (*((void *)a2 + 22)) {
      unint64_t v36 = (const TSP::Reference *)*((void *)a2 + 22);
    }
    else {
      unint64_t v36 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
    }
    TSP::Reference::MergeFrom(v34, v36);
    if ((v30 & 4) == 0)
    {
LABEL_22:
      if ((v30 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_44;
    }
LABEL_43:
    *((void *)this + 2sub_1000502F4((void *)this + 3) = *((void *)a2 + 23);
    if ((v30 & 8) == 0)
    {
LABEL_23:
      if ((v30 & 0x10) == 0)
      {
LABEL_25:
        *((_DWORD *)this + 4) |= v30;
        return;
      }
LABEL_24:
      *((_DWORD *)this + 5google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = *((_DWORD *)a2 + 50);
      goto LABEL_25;
    }
LABEL_44:
    *((void *)this + 24) = *((void *)a2 + 24);
    if ((v30 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
}

std::string *TSP::DocumentRevision::MergeFrom(std::string *this, const TSP::DocumentRevision *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v8 = (google::protobuf::Arena *)(size & 0xFFFFFFFFFFFFFFFELL);
      if (size) {
        unint64_t v8 = *(google::protobuf::Arena **)v8;
      }
      this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1], v6, v8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
        {
LABEL_8:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v5;
          return this;
        }
LABEL_7:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *((_DWORD *)a2 + 10);
        goto LABEL_8;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    v3[1].__r_.__value_.__l.__size_ = *((void *)a2 + 4);
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  return this;
}

void TSP::PackageMetadata::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::PackageMetadata::Clear(this);
    TSP::PackageMetadata::MergeFrom((TSP::PackageMetadata *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::PackageMetadata::IsInitialized(TSP::PackageMetadata *this)
{
  if ((*((unsigned char *)this + 16) & 4) == 0) {
    return 0;
  }
  uint64_t v2 = *((unsigned int *)this + 8);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char IsInitialized = TSP::ComponentInfo::IsInitialized(*(TSP::ComponentInfo **)(*((void *)this + 5) + 8 * v2));
    uint64_t v2 = v3;
    if ((IsInitialized & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *((unsigned int *)this + 14);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = TSP::DataInfo::IsInitialized(*(TSP::DataInfo **)(*((void *)this + 8) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *((unsigned int *)this + 38);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = v8 - 1;
    char v10 = TSP::ComponentInfo::IsInitialized(*(TSP::ComponentInfo **)(*((void *)this + 20) + 8 * v8));
    uint64_t v8 = v9;
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  if ((*((unsigned char *)this + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = TSP::Reference::IsInitialized(*((TSP::Reference **)this + 22));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t TSP::PackageMetadata::GetMetadata(TSP::PackageMetadata *this)
{
  return off_1001E9C30[20];
}

uint64_t TSP::DocumentRevision::DocumentRevision(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C8390;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  if (atomic_load_explicit(scc_info_DocumentRevision_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DocumentRevision_TSPArchiveMessages_2eproto);
  }
  *(void *)(a1 + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  return a1;
}

void TSP::DocumentRevision::~DocumentRevision(TSP::DocumentRevision *this)
{
  uint64_t v1 = *((void *)this + 3);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::DocumentRevision::~DocumentRevision(this);
  operator delete();
}

uint64_t TSP::DocumentRevision::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::internal *TSP::DocumentRevision::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    char v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v31 + 1);
      unsigned int v9 = *(unsigned __int8 *)v31;
      if ((*(char *)v31 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v31, (const char *)(v10 - 128));
      uint64_t v31 = TagFallback;
      if (!TagFallback) {
        goto LABEL_46;
      }
      uint64_t v8 = TagFallback;
      unsigned int v9 = v26;
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 != 24) {
          goto LABEL_14;
        }
        v5 |= 4u;
        uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 1);
        LODWORD(v16) = *(unsigned __int8 *)v8;
        if ((v16 & 0x80) == 0) {
          goto LABEL_25;
        }
        int v18 = *(char *)v17;
        unint64_t v16 = v16 + (v18 << 7) - 128;
        if ((v18 & 0x80000000) == 0)
        {
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_25:
          uint64_t v31 = v17;
          *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v16;
          goto LABEL_36;
        }
        int v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v16);
        uint64_t v31 = v27;
        *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v28;
        if (!v27) {
          goto LABEL_46;
        }
      }
      else
      {
        if (v11 == 2)
        {
          if (v9 == 18)
          {
            *(_DWORD *)(a1 + 16) |= 1u;
            uint64_t v19 = *(void *)(a1 + 8);
            uint64_t v20 = (google::protobuf::Arena *)(v19 & 0xFFFFFFFFFFFFFFFELL);
            if (v19) {
              uint64_t v20 = *(google::protobuf::Arena **)v20;
            }
            uint64_t v21 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 24), v20);
            unsigned int v15 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v21, (std::string::value_type *)v31, a3);
          }
          else
          {
LABEL_14:
            if (v9) {
              BOOL v13 = (v9 & 7) == 4;
            }
            else {
              BOOL v13 = 1;
            }
            if (v13)
            {
              *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
              goto LABEL_2;
            }
            if (*v7)
            {
              signed int v14 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              signed int v14 = sub_10003562C((unint64_t *)(a1 + 8));
              uint64_t v8 = v31;
            }
            unsigned int v15 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v14, v8);
          }
          uint64_t v31 = v15;
          if (!v15) {
            goto LABEL_46;
          }
          goto LABEL_36;
        }
        if (v11 != 1 || v9 != 8) {
          goto LABEL_14;
        }
        v5 |= 2u;
        int v22 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v23 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v24 = *(char *)v22;
        unint64_t v23 = v23 + (v24 << 7) - 128;
        if ((v24 & 0x80000000) == 0)
        {
          int v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_35:
          uint64_t v31 = v22;
          *(void *)(a1 + 32) = v23;
          goto LABEL_36;
        }
        uint64_t v29 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v23);
        uint64_t v31 = v29;
        *(void *)(a1 + 32) = v30;
        if (!v29)
        {
LABEL_46:
          uint64_t v31 = 0;
          goto LABEL_2;
        }
      }
LABEL_36:
      if (sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    uint64_t v8 = (google::protobuf::internal *)((char *)v31 + 2);
LABEL_7:
    uint64_t v31 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

const google::protobuf::UnknownFieldSet *TSP::DocumentRevision::_InternalSerialize(TSP::DocumentRevision *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = (unsigned __int8 *)a2;
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, (unsigned __int8 *)a2);
    }
    unint64_t v7 = *((void *)this + 4);
    unsigned __int8 *v4 = 8;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      if (v7 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          ++v4;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v9;
        if (v6) {
          goto LABEL_16;
        }
      }
      else
      {
        v4[2] = v8;
        v4 += 3;
        if (v6) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      v4[1] = v7;
      v4 += 2;
      if (v6) {
        goto LABEL_16;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_26;
    }
    goto LABEL_17;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_16:
  uint64_t v4 = sub_100034480(a3, 2, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_26;
  }
LABEL_17:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v11 = *((int *)this + 10);
  unsigned __int8 *v4 = 24;
  if (v11 > 0x7F)
  {
    v4[1] = v11 | 0x80;
    unint64_t v12 = v11 >> 7;
    if (v11 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        ++v4;
        unint64_t v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      v4[2] = v12;
      v4 += 3;
    }
  }
  else
  {
    v4[1] = v11;
    v4 += 2;
  }
LABEL_26:
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *TSP::DocumentRevision::ByteSizeLong(TSP::DocumentRevision *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if (v1)
  {
    unint64_t v3 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)(v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_9:
  }
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                   + ((9 * (__clz(*((void *)this + 4) | 1) ^ 0x3F) + 73) >> 6)
                                                   + 1);
LABEL_10:
  if ((v1 & 4) != 0)
  {
    int v6 = *((_DWORD *)this + 10);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v7);
  }
LABEL_15:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::DocumentRevision *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v2;
  return (char *)v2;
}

void TSP::DocumentRevision::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DocumentRevision::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void TSP::DocumentRevision::CopyFrom(TSP::DocumentRevision *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::DocumentRevision::Clear(this);
    TSP::DocumentRevision::MergeFrom((std::string *)this, a2);
  }
}

uint64_t TSP::DocumentRevision::IsInitialized(TSP::DocumentRevision *this)
{
  return 1;
}

uint64_t TSP::DocumentRevision::GetMetadata(TSP::DocumentRevision *this)
{
  return off_1001E9C30[22];
}

void *TSP::PasteboardMetadata::PasteboardMetadata(void *a1, uint64_t a2)
{
  *a1 = off_1001C8440;
  a1[1] = a2;
  a1[4] = a2;
  a1[2] = 0;
  a1[3] = 0;
  a1[6] = a2;
  a1[10] = a2;
  a1[8] = 0;
  a1[9] = 0;
  a1[7] = 0;
  if (atomic_load_explicit(scc_info_PasteboardMetadata_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_PasteboardMetadata_TSPArchiveMessages_2eproto);
  }
  a1[13] = 0;
  a1[14] = 0;
  a1[12] = &google::protobuf::internal::fixed_address_empty_string;
  return a1;
}

void sub_100042AB8(_Unwind_Exception *a1)
{
  if (*(int *)(v2 + 76) >= 1) {
    sub_100163A7C(v5);
  }
  sub_1000504C0(v3);
  sub_100163A5C(v4, v1);
  _Unwind_Resume(a1);
}

void TSP::PasteboardMetadata::~PasteboardMetadata(TSP::PasteboardMetadata *this)
{
  uint64_t v2 = *((void *)this + 12);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  if (this != (TSP::PasteboardMetadata *)TSP::_PasteboardMetadata_default_instance_)
  {
    unint64_t v3 = (TSP::UUID *)*((void *)this + 13);
    if (v3)
    {
      TSP::UUID::~UUID(v3);
      operator delete();
    }
    uint64_t v4 = (TSP::Reference *)*((void *)this + 14);
    if (v4)
    {
      TSP::Reference::~Reference(v4);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  if (*((int *)this + 19) >= 1)
  {
    uint64_t v5 = *((void *)this + 10);
    uint64_t v7 = *(void *)(v5 - 8);
    int v6 = (void *)(v5 - 8);
    if (!v7) {
      operator delete(v6);
    }
  }
  sub_1000504C0((void *)this + 6);
  if (*((int *)this + 7) >= 1)
  {
    uint64_t v8 = *((void *)this + 4);
    uint64_t v10 = *(void *)(v8 - 8);
    unint64_t v9 = (void *)(v8 - 8);
    if (!v10) {
      operator delete(v9);
    }
  }
}

{
  uint64_t vars8;

  TSP::PasteboardMetadata::~PasteboardMetadata(this);
  operator delete();
}

uint64_t TSP::PasteboardMetadata::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::PasteboardMetadata::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  *((_DWORD *)this + 6) = 0;
  uint64_t v2 = *((unsigned int *)this + 14);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (google::protobuf::Arena ***)((char *)this[8] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::DataInfo::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 56) = 0;
  }
  *(_DWORD *)(v1 + 72) = 0;
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) == 0) {
    goto LABEL_10;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  unint64_t v8 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_18;
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  *(unsigned char *)unint64_t v8 = 0;
  *(unsigned char *)(v8 + 2sub_1000502F4((void *)this + 3) = 0;
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_18:
  this = TSP::UUID::Clear(*(TSP::UUID **)(v1 + 104));
  if ((v5 & 4) != 0) {
LABEL_9:
  }
    this = TSP::Reference::Clear(*(TSP::Reference **)(v1 + 112));
LABEL_10:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_100035820((unint64_t *)v6);
  }
  return this;
}

google::protobuf::internal *TSP::PasteboardMetadata::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  int v33 = a2;
  if ((sub_1000355B8((uint64_t)a3, &v33, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      char v7 = (google::protobuf::internal *)((char *)v33 + 1);
      unsigned int v8 = *(unsigned __int8 *)v33;
      if (*(char *)v33 < 0)
      {
        unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*(char *)v7 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v33, (const char *)(v9 - 128));
          int v33 = TagFallback;
          if (!TagFallback) {
            return 0;
          }
          char v7 = TagFallback;
          unsigned int v8 = v28;
          goto LABEL_8;
        }
        char v7 = (google::protobuf::internal *)((char *)v33 + 2);
      }
      int v33 = v7;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 == 10)
          {
            uint64_t v10 = (unsigned int *)(a1 + 24);
            goto LABEL_42;
          }
          if (v8 != 8) {
            goto LABEL_51;
          }
          int v29 = sub_100038CA0(&v33);
          sub_100038D00(a1, v29);
          goto LABEL_49;
        case 2u:
          if (v8 != 18) {
            goto LABEL_51;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          unint64_t v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
          if (v11) {
            unint64_t v12 = *(google::protobuf::Arena **)v12;
          }
          unint64_t v13 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 96), v12);
          unint64_t v14 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v13, (std::string::value_type *)v33, (uint64_t)a3);
          goto LABEL_58;
        case 3u:
          if (v8 != 26) {
            goto LABEL_51;
          }
          uint64_t v15 = (google::protobuf::internal *)((char *)v7 - 1);
          while (1)
          {
            unint64_t v16 = (google::protobuf::internal *)((char *)v15 + 1);
            int v33 = (google::protobuf::internal *)((char *)v15 + 1);
            uint64_t v17 = *(int **)(a1 + 64);
            if (!v17) {
              break;
            }
            uint64_t v18 = *(int *)(a1 + 56);
            int v19 = *v17;
            if ((int)v18 >= *v17)
            {
              if (v19 == *(_DWORD *)(a1 + 60))
              {
LABEL_22:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v19 + 1);
                uint64_t v17 = *(int **)(a1 + 64);
                int v19 = *v17;
              }
              *uint64_t v17 = v19 + 1;
              uint64_t v20 = google::protobuf::Arena::CreateMaybeMessage<TSP::DataInfo>(*(void *)(a1 + 48));
              uint64_t v21 = *(void *)(a1 + 64);
              uint64_t v22 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v22 + 1;
              *(void *)(v21 + 8 * v22 + 8) = v20;
              unint64_t v16 = v33;
              goto LABEL_24;
            }
            *(_DWORD *)(a1 + 56) = v18 + 1;
            uint64_t v20 = *(void *)&v17[2 * v18 + 2];
LABEL_24:
            uint64_t v15 = sub_100041298(a3, v20, v16);
            int v33 = v15;
            if (!v15) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *(unsigned char *)v15 != 26) {
              goto LABEL_59;
            }
          }
          int v19 = *(_DWORD *)(a1 + 60);
          goto LABEL_22;
        case 5u:
          if (v8 != 42) {
            goto LABEL_51;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v23 = *(void *)(a1 + 104);
          if (!v23)
          {
            int v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
            if (*v6) {
              int v24 = (void *)*v24;
            }
            uint64_t v23 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v24);
            *(void *)(a1 + 104) = v23;
            char v7 = v33;
          }
          unint64_t v14 = sub_10003F83C((uint64_t)a3, v23, v7);
          goto LABEL_58;
        case 6u:
          if (v8 != 50) {
            goto LABEL_51;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v25 = *(void *)(a1 + 112);
          if (!v25)
          {
            unsigned int v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
            if (*v6) {
              unsigned int v26 = (void *)*v26;
            }
            uint64_t v25 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v26);
            *(void *)(a1 + 112) = v25;
            char v7 = v33;
          }
          unint64_t v14 = sub_100034100((uint64_t)a3, v25, v7);
          goto LABEL_58;
        case 7u:
          if (v8 == 58)
          {
            uint64_t v10 = (unsigned int *)(a1 + 72);
LABEL_42:
            unint64_t v14 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt32Parser(v10, v7, (uint64_t)a3);
LABEL_58:
            int v33 = v14;
            if (!v14) {
              return 0;
            }
            goto LABEL_59;
          }
          if (v8 != 56)
          {
LABEL_51:
            if (v8) {
              BOOL v31 = (v8 & 7) == 4;
            }
            else {
              BOOL v31 = 1;
            }
            if (v31)
            {
              a3[10].i32[0] = v8 - 1;
              return v33;
            }
            if (*v6)
            {
              uint64_t v32 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              uint64_t v32 = sub_10003562C((unint64_t *)(a1 + 8));
              char v7 = v33;
            }
            unint64_t v14 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v32, v7);
            goto LABEL_58;
          }
          int v30 = sub_100038CA0(&v33);
          sub_10003A6CC(a1, v30);
LABEL_49:
          if (!v33) {
            return 0;
          }
LABEL_59:
          if (sub_1000355B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            return v33;
          }
          break;
        default:
          goto LABEL_51;
      }
    }
  }
  return v33;
}

const google::protobuf::UnknownFieldSet *TSP::PasteboardMetadata::_InternalSerialize(TSP::PasteboardMetadata *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 10);
  if ((int)v6 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 1, (int *)this + 6, v6, a2, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  int v7 = *((_DWORD *)this + 4);
  if (v7) {
    uint64_t v4 = sub_100034480(a3, 2, (const void **)(*((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v8 = *((_DWORD *)this + 14);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v10 = *(TSP::DataInfo **)(*((void *)this + 8) + 8 * i + 8);
      unsigned __int8 *v4 = 26;
      unsigned int v11 = *((_DWORD *)v10 + 5);
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unsigned int v13 = v11 >> 7;
        if (v11 >> 14)
        {
          unint64_t v12 = v4 + 3;
          do
          {
            *(v12 - sub_1000333D0((uint64_t *)this + 1) = v13 | 0x80;
            unsigned int v14 = v13 >> 7;
            ++v12;
            unsigned int v15 = v13 >> 14;
            v13 >>= 7;
          }
          while (v15);
          *(v12 - sub_1000333D0((uint64_t *)this + 1) = v14;
        }
        else
        {
          v4[2] = v13;
          unint64_t v12 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v11;
        unint64_t v12 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)TSP::DataInfo::_InternalSerialize(v10, v12, a3);
    }
  }
  if ((v7 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v16 = (TSP::UUID *)*((void *)this + 13);
    unsigned __int8 *v4 = 42;
    unsigned int v17 = *((_DWORD *)v16 + 5);
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unsigned int v19 = v17 >> 7;
      if (v17 >> 14)
      {
        uint64_t v18 = v4 + 3;
        do
        {
          *(v18 - sub_1000333D0((uint64_t *)this + 1) = v19 | 0x80;
          unsigned int v20 = v19 >> 7;
          ++v18;
          unsigned int v21 = v19 >> 14;
          v19 >>= 7;
        }
        while (v21);
        *(v18 - sub_1000333D0((uint64_t *)this + 1) = v20;
      }
      else
      {
        v4[2] = v19;
        uint64_t v18 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v17;
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v16, v18, a3, v6);
  }
  if ((v7 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v22 = (TSP::Reference *)*((void *)this + 14);
    unsigned __int8 *v4 = 50;
    unsigned int v23 = *((_DWORD *)v22 + 5);
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unsigned int v25 = v23 >> 7;
      if (v23 >> 14)
      {
        int v24 = v4 + 3;
        do
        {
          *(v24 - sub_1000333D0((uint64_t *)this + 1) = v25 | 0x80;
          unsigned int v26 = v25 >> 7;
          ++v24;
          unsigned int v27 = v25 >> 14;
          v25 >>= 7;
        }
        while (v27);
        *(v24 - sub_1000333D0((uint64_t *)this + 1) = v26;
      }
      else
      {
        v4[2] = v25;
        int v24 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v23;
      int v24 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v22, v24, a3, v6);
  }
  unsigned int v28 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 22);
  if ((int)v28 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 7, (int *)this + 18, v28, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  uint64_t v29 = *((void *)this + 1);
  if ((v29 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v29 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, v28);
}

char *TSP::PasteboardMetadata::ByteSizeLong(TSP::PasteboardMetadata *this)
{
  if (*((unsigned char *)this + 16))
  {
    unint64_t v3 = *((void *)this + 12) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 6);
  uint64_t v7 = 11;
  uint64_t v8 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v6 >= 0) {
    uint64_t v7 = v8;
  }
  uint64_t v9 = v7 + v2;
  if (v6) {
    int v10 = v6;
  }
  else {
    int v10 = 0;
  }
  if (!v6) {
    uint64_t v9 = v2;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v10;
  uint64_t v11 = v9 + v6;
  uint64_t v12 = *((int *)this + 14);
  uint64_t v13 = v11 + v12;
  uint64_t v14 = *((void *)this + 8);
  if (v14) {
    unsigned int v15 = (TSP::DataInfo **)(v14 + 8);
  }
  else {
    unsigned int v15 = 0;
  }
  if (v12)
  {
    uint64_t v16 = 8 * v12;
    do
    {
      unsigned int v17 = *v15++;
      uint64_t v18 = TSP::DataInfo::ByteSizeLong(v17);
      v13 += (uint64_t)&v18[(9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6];
      v16 -= 8;
    }
    while (v16);
  }
  uint64_t v19 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 18);
  uint64_t v20 = 11;
  uint64_t v21 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v19 >= 0) {
    uint64_t v20 = v21;
  }
  uint64_t v22 = v20 + v13;
  if (v19) {
    int v23 = v19;
  }
  else {
    int v23 = 0;
  }
  if (!v19) {
    uint64_t v22 = v13;
  }
  *((_DWORD *)this + 22) = v23;
  int v24 = (const google::protobuf::UnknownFieldSet *)(v22 + v19);
  int v25 = *((_DWORD *)this + 4);
  if ((v25 & 6) != 0)
  {
    if ((v25 & 2) != 0)
    {
      unsigned int v26 = TSP::UUID::ByteSizeLong(*((TSP::UUID **)this + 13));
      int v24 = (const google::protobuf::UnknownFieldSet *)&v26[((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v24];
    }
    if ((v25 & 4) != 0)
    {
      unsigned int v27 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 14));
      int v24 = (const google::protobuf::UnknownFieldSet *)&v27[((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v24];
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::PasteboardMetadata *)((char *)this + 8), v24, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v24;
    return (char *)v24;
  }
}

void TSP::PasteboardMetadata::MergeFrom(TSP::PasteboardMetadata *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::PasteboardMetadata::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void TSP::PasteboardMetadata::MergeFrom(TSP::PasteboardMetadata *this, const TSP::PasteboardMetadata *a2)
{
  uint64_t v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    uint64_t v7 = *((int *)this + 6);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)this + 6, v7 + v6);
    uint64_t v8 = *((void *)this + 4);
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
    memcpy((void *)(v8 + 4 * v7), *((const void **)a2 + 4), 4 * *((int *)a2 + 6));
  }
  unsigned int v9 = *((_DWORD *)a2 + 14);
  if (v9)
  {
    int v10 = (TSP::DataInfo **)(*((void *)a2 + 8) + 8);
    uint64_t v11 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((TSP::PasteboardMetadata *)((char *)this + 48), *((_DWORD *)a2 + 14));
    sub_100050600((uint64_t *)this + 6, (TSP::DataInfo **)v11, v10, v9, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    signed int v12 = *((_DWORD *)this + 14) + v9;
    *((_DWORD *)this + 14) = v12;
    uint64_t v13 = (signed int *)*((void *)this + 8);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *((_DWORD *)a2 + 18);
  if (v14)
  {
    uint64_t v15 = *((int *)this + 18);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)this + 18, v15 + v14);
    uint64_t v16 = *((void *)this + 10);
    *((_DWORD *)this + 18) += *((_DWORD *)a2 + 18);
    memcpy((void *)(v16 + 4 * v15), *((const void **)a2 + 10), 4 * *((int *)a2 + 18));
  }
  int v17 = *((_DWORD *)a2 + 4);
  if ((v17 & 7) != 0)
  {
    if (v17)
    {
      unint64_t v18 = *((void *)a2 + 12) & 0xFFFFFFFFFFFFFFFELL;
      *((_DWORD *)this + 4) |= 1u;
      uint64_t v19 = *((void *)this + 1);
      uint64_t v20 = (google::protobuf::Arena *)(v19 & 0xFFFFFFFFFFFFFFFELL);
      if (v19) {
        uint64_t v20 = *(google::protobuf::Arena **)v20;
      }
      google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 12, v18, v20);
      if ((v17 & 2) == 0)
      {
LABEL_13:
        if ((v17 & 4) == 0) {
          return;
        }
        goto LABEL_26;
      }
    }
    else if ((v17 & 2) == 0)
    {
      goto LABEL_13;
    }
    *((_DWORD *)this + 4) |= 2u;
    uint64_t v21 = (void **)*((void *)this + 13);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v22);
      *((void *)this + 1sub_1000502F4((void *)this + 3) = v21;
    }
    if (*((void *)a2 + 13)) {
      int v23 = (const TSP::UUID *)*((void *)a2 + 13);
    }
    else {
      int v23 = (const TSP::UUID *)&TSP::_UUID_default_instance_;
    }
    TSP::UUID::MergeFrom(v21, v23);
    if ((v17 & 4) != 0)
    {
LABEL_26:
      *((_DWORD *)this + 4) |= 4u;
      int v24 = (void **)*((void *)this + 14);
      if (!v24)
      {
        int v25 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          int v25 = (void *)*v25;
        }
        int v24 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v25);
        *((void *)this + 14) = v24;
      }
      if (*((void *)a2 + 14)) {
        unsigned int v26 = (const TSP::Reference *)*((void *)a2 + 14);
      }
      else {
        unsigned int v26 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
      }
      TSP::Reference::MergeFrom(v24, v26);
    }
  }
}

void TSP::PasteboardMetadata::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::PasteboardMetadata::Clear(this);
    TSP::PasteboardMetadata::MergeFrom((TSP::PasteboardMetadata *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::PasteboardMetadata::IsInitialized(TSP::PasteboardMetadata *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 0;
  }
  uint64_t v2 = *((unsigned int *)this + 14);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char IsInitialized = TSP::DataInfo::IsInitialized(*(TSP::DataInfo **)(*((void *)this + 8) + 8 * v2));
    uint64_t v2 = v3;
    if ((IsInitialized & 1) == 0) {
      return 0;
    }
  }
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    uint64_t result = TSP::UUID::IsInitialized(*((TSP::UUID **)this + 13));
    if (!result) {
      return result;
    }
    int v6 = *((_DWORD *)this + 4);
  }
  if ((v6 & 4) == 0) {
    return 1;
  }
  uint64_t result = TSP::Reference::IsInitialized(*((TSP::Reference **)this + 14));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t TSP::PasteboardMetadata::GetMetadata(TSP::PasteboardMetadata *this)
{
  return off_1001E9C30[24];
}

uint64_t TSP::DataInfo::DataInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C84F0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  if (atomic_load_explicit(scc_info_DataInfo_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DataInfo_TSPArchiveMessages_2eproto);
  }
  *(void *)(a1 + 24) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 32) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 48) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 56) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 64) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 72) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = &google::protobuf::internal::fixed_address_empty_string;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_DWORD *)(a1 + 152) = 1;
  return a1;
}

void TSP::DataInfo::~DataInfo(TSP::DataInfo *this)
{
}

{
  uint64_t vars8;

  TSP::DataInfo::~DataInfo(this);
  operator delete();
}

TSP::IndexSet *sub_100043A58(TSP::IndexSet *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((void *)result + 3);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = *((void *)result + 4);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  uint64_t v4 = *((void *)result + 5);
  if ((uint64_t *)v4 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v4 + 23) < 0) {
      operator delete(*(void **)v4);
    }
    operator delete();
  }
  uint64_t v5 = *((void *)result + 6);
  if ((uint64_t *)v5 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    operator delete();
  }
  uint64_t v6 = *((void *)result + 7);
  if ((uint64_t *)v6 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v6 + 23) < 0) {
      operator delete(*(void **)v6);
    }
    operator delete();
  }
  uint64_t v7 = *((void *)result + 8);
  if ((uint64_t *)v7 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v7 + 23) < 0) {
      operator delete(*(void **)v7);
    }
    operator delete();
  }
  uint64_t v8 = *((void *)result + 9);
  if ((uint64_t *)v8 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v8 + 23) < 0) {
      operator delete(*(void **)v8);
    }
    operator delete();
  }
  uint64_t v9 = *((void *)result + 10);
  if ((uint64_t *)v9 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v9 + 23) < 0) {
      operator delete(*(void **)v9);
    }
    operator delete();
  }
  if (result != (TSP::IndexSet *)&TSP::_DataInfo_default_instance_)
  {
    int v10 = (TSP::DataAttributes *)*((void *)result + 11);
    if (v10)
    {
      TSP::DataAttributes::~DataAttributes(v10);
      operator delete();
    }
    uint64_t v11 = (TSP::EncryptionInfo *)*((void *)v1 + 12);
    if (v11)
    {
      TSP::EncryptionInfo::~EncryptionInfo(v11);
      operator delete();
    }
    uint64_t result = (TSP::IndexSet *)*((void *)v1 + 13);
    if (result)
    {
      TSP::IndexSet::~IndexSet(result);
      operator delete();
    }
  }
  return result;
}

uint64_t TSP::DataInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::DataInfo::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = *((_DWORD *)this + 4);
  if ((_BYTE)v2)
  {
    if ((v2 & 1) == 0)
    {
      if ((v2 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_15:
      unint64_t v4 = (unint64_t)this[4] & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_19;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v4 = 0;
        *(unsigned char *)(v4 + 2sub_1000502F4((void *)this + 3) = 0;
        if ((v2 & 4) != 0) {
          goto LABEL_19;
        }
      }
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_23:
      unint64_t v6 = (unint64_t)this[6] & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v2 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v6 = 0;
        *(unsigned char *)(v6 + 2sub_1000502F4((void *)this + 3) = 0;
        if ((v2 & 0x10) != 0) {
          goto LABEL_27;
        }
      }
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
LABEL_31:
      unint64_t v8 = (unint64_t)this[8] & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v2 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 2sub_1000502F4((void *)this + 3) = 0;
        if ((v2 & 0x40) != 0) {
          goto LABEL_35;
        }
      }
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
LABEL_39:
      unint64_t v10 = (unint64_t)this[10] & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)unint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v10 = 0;
        *(unsigned char *)(v10 + 2sub_1000502F4((void *)this + 3) = 0;
      }
      goto LABEL_42;
    }
    unint64_t v3 = (unint64_t)this[3] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 2sub_1000502F4((void *)this + 3) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_19:
    unint64_t v5 = (unint64_t)this[5] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 2sub_1000502F4((void *)this + 3) = 0;
      if ((v2 & 8) != 0) {
        goto LABEL_23;
      }
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_27:
    unint64_t v7 = (unint64_t)this[7] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 2sub_1000502F4((void *)this + 3) = 0;
      if ((v2 & 0x20) != 0) {
        goto LABEL_31;
      }
    }
LABEL_8:
    if ((v2 & 0x40) == 0) {
      goto LABEL_9;
    }
LABEL_35:
    unint64_t v9 = (unint64_t)this[9] & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 2sub_1000502F4((void *)this + 3) = 0;
      if ((v2 & 0x80) == 0) {
        goto LABEL_42;
      }
    }
    goto LABEL_39;
  }
LABEL_42:
  if ((v2 & 0x700) == 0) {
    goto LABEL_47;
  }
  if ((v2 & 0x100) != 0)
  {
    this = TSP::DataAttributes::Clear(this[11]);
    if ((v2 & 0x200) == 0)
    {
LABEL_45:
      if ((v2 & 0x400) == 0) {
        goto LABEL_47;
      }
      goto LABEL_46;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_45;
  }
  this = TSP::EncryptionInfo::Clear(*(google::protobuf::Arena ***)(v1 + 96));
  if ((v2 & 0x400) != 0) {
LABEL_46:
  }
    this = TSP::IndexSet::Clear(*(google::protobuf::Arena ***)(v1 + 104));
LABEL_47:
  if ((v2 & 0xF800) != 0)
  {
    *(void *)(v1 + 112) = 0;
    *(void *)(v1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
    *(void *)(v1 + 128) = 0;
  }
  if ((v2 & 0x70000) != 0)
  {
    *(void *)(v1 + 136) = 0;
    *(void *)(v1 + 144) = 0;
    *(_DWORD *)(v1 + 152) = 1;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_100035820((unint64_t *)v11);
  }
  return this;
}

google::protobuf::Arena **TSP::EncryptionInfo::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (TSP::EncryptionBlockInfo **)((char *)this[5] + 8);
    do
    {
      unint64_t v4 = *v3++;
      this = TSP::EncryptionBlockInfo::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::DataInfo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  uint64_t v70 = a2;
  int v5 = 0;
  if ((sub_1000355B8((uint64_t)a3, &v70, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = (google::protobuf::internal *)((char *)v70 + 1);
      unsigned int v9 = *(unsigned __int8 *)v70;
      if (*(char *)v70 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v70, (const char *)(v10 - 128));
          uint64_t v70 = TagFallback;
          if (!TagFallback) {
            goto LABEL_141;
          }
          unint64_t v8 = TagFallback;
          unsigned int v9 = v15;
          goto LABEL_8;
        }
        unint64_t v8 = (google::protobuf::internal *)((char *)v70 + 2);
      }
      uint64_t v70 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_20;
          }
          v5 |= 0x800u;
          uint64_t v11 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v12 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v13 = *(char *)v11;
          unint64_t v12 = v12 + (v13 << 7) - 128;
          if ((v13 & 0x80000000) == 0)
          {
            uint64_t v11 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_13:
            uint64_t v70 = v11;
            *(void *)(a1 + 112) = v12;
            goto LABEL_114;
          }
          unsigned int v56 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v12);
          uint64_t v70 = v56;
          *(void *)(a1 + 112) = v57;
          if (!v56) {
            goto LABEL_141;
          }
          goto LABEL_114;
        case 2u:
          if (v9 != 18) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v20 = *(void *)(a1 + 8);
          uint64_t v21 = (google::protobuf::Arena *)(v20 & 0xFFFFFFFFFFFFFFFELL);
          if (v20) {
            uint64_t v21 = *(google::protobuf::Arena **)v21;
          }
          uint64_t v22 = (uint64_t **)(a1 + 24);
          goto LABEL_112;
        case 3u:
          if (v9 != 26) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v23 = *(void *)(a1 + 8);
          uint64_t v21 = (google::protobuf::Arena *)(v23 & 0xFFFFFFFFFFFFFFFELL);
          if (v23) {
            uint64_t v21 = *(google::protobuf::Arena **)v21;
          }
          uint64_t v22 = (uint64_t **)(a1 + 32);
          goto LABEL_112;
        case 4u:
          if (v9 != 34) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v24 = *(void *)(a1 + 8);
          uint64_t v21 = (google::protobuf::Arena *)(v24 & 0xFFFFFFFFFFFFFFFELL);
          if (v24) {
            uint64_t v21 = *(google::protobuf::Arena **)v21;
          }
          uint64_t v22 = (uint64_t **)(a1 + 40);
          goto LABEL_112;
        case 5u:
          if (v9 != 42) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v25 = *(void *)(a1 + 8);
          uint64_t v21 = (google::protobuf::Arena *)(v25 & 0xFFFFFFFFFFFFFFFELL);
          if (v25) {
            uint64_t v21 = *(google::protobuf::Arena **)v21;
          }
          uint64_t v22 = (uint64_t **)(a1 + 48);
          goto LABEL_112;
        case 6u:
          if (v9 != 50) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v26 = *(void *)(a1 + 8);
          uint64_t v21 = (google::protobuf::Arena *)(v26 & 0xFFFFFFFFFFFFFFFELL);
          if (v26) {
            uint64_t v21 = *(google::protobuf::Arena **)v21;
          }
          uint64_t v22 = (uint64_t **)(a1 + 56);
          goto LABEL_112;
        case 7u:
          if (v9 != 58) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 16) |= 0x20u;
          uint64_t v27 = *(void *)(a1 + 8);
          uint64_t v21 = (google::protobuf::Arena *)(v27 & 0xFFFFFFFFFFFFFFFELL);
          if (v27) {
            uint64_t v21 = *(google::protobuf::Arena **)v21;
          }
          uint64_t v22 = (uint64_t **)(a1 + 64);
          goto LABEL_112;
        case 8u:
          if (v9 != 64) {
            goto LABEL_20;
          }
          v5 |= 0x1000u;
          unsigned int v28 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v29 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_55;
          }
          int v30 = *(char *)v28;
          unint64_t v29 = v29 + (v30 << 7) - 128;
          if (v30 < 0)
          {
            uint64_t v58 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v29);
            uint64_t v70 = v58;
            *(unsigned char *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v59 != 0;
            if (!v58) {
              goto LABEL_141;
            }
          }
          else
          {
            unsigned int v28 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_55:
            uint64_t v70 = v28;
            *(unsigned char *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v29 != 0;
          }
          goto LABEL_114;
        case 9u:
          if (v9 != 72) {
            goto LABEL_20;
          }
          BOOL v31 = (google::protobuf::internal *)((char *)v8 + 1);
          uint64_t v32 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_60;
          }
          int v33 = *(char *)v31;
          int v34 = v32 + (v33 << 7);
          uint64_t v32 = (v34 - 128);
          if (v33 < 0)
          {
            uint64_t v70 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, (v34 - 128));
            if (!v70) {
              goto LABEL_141;
            }
            uint64_t v32 = v60;
          }
          else
          {
            BOOL v31 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_60:
            uint64_t v70 = v31;
          }
          if (v32 <= 1)
          {
            *(_DWORD *)(a1 + 16) |= 0x40000u;
            *(_DWORD *)(a1 + 152) = v32;
            goto LABEL_114;
          }
          if (*v7) {
            uint64_t v68 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else {
            uint64_t v68 = sub_10003562C((unint64_t *)(a1 + 8));
          }
          unsigned int v69 = 9;
          goto LABEL_136;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 16) |= 0x100u;
          uint64_t v35 = *(void *)(a1 + 88);
          if (!v35)
          {
            unint64_t v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              unint64_t v36 = (void *)*v36;
            }
            uint64_t v35 = google::protobuf::Arena::CreateMaybeMessage<TSP::DataAttributes>(v36);
            *(void *)(a1 + 88) = v35;
            unint64_t v8 = v70;
          }
          uint64_t v19 = sub_100044798(a3, v35, v8);
          goto LABEL_113;
        case 0xBu:
          if (v9 != 90) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 16) |= 0x200u;
          uint64_t v37 = *(void *)(a1 + 96);
          if (!v37)
          {
            unint64_t v38 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              unint64_t v38 = (void *)*v38;
            }
            uint64_t v37 = google::protobuf::Arena::CreateMaybeMessage<TSP::EncryptionInfo>(v38);
            *(void *)(a1 + 96) = v37;
            unint64_t v8 = v70;
          }
          uint64_t v19 = sub_100044868((uint64_t)a3, v37, v8);
          goto LABEL_113;
        case 0xCu:
          if (v9 != 98) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 16) |= 0x40u;
          uint64_t v39 = *(void *)(a1 + 8);
          uint64_t v21 = (google::protobuf::Arena *)(v39 & 0xFFFFFFFFFFFFFFFELL);
          if (v39) {
            uint64_t v21 = *(google::protobuf::Arena **)v21;
          }
          uint64_t v22 = (uint64_t **)(a1 + 72);
          goto LABEL_112;
        case 0xDu:
          if (v9 != 106) {
            goto LABEL_20;
          }
          *(_DWORD *)(a1 + 16) |= 0x400u;
          uint64_t v40 = *(void *)(a1 + 104);
          if (!v40)
          {
            unint64_t v41 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              unint64_t v41 = (void *)*v41;
            }
            uint64_t v40 = google::protobuf::Arena::CreateMaybeMessage<TSP::IndexSet>(v41);
            *(void *)(a1 + 104) = v40;
            unint64_t v8 = v70;
          }
          uint64_t v19 = sub_100044938((uint64_t)a3, v40, v8);
          goto LABEL_113;
        case 0xEu:
          if (v9 != 112) {
            goto LABEL_20;
          }
          v5 |= 0x8000u;
          int v42 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v43 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_89;
          }
          int v44 = *(char *)v42;
          unint64_t v43 = v43 + (v44 << 7) - 128;
          if (v44 < 0)
          {
            BOOL v61 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v43);
            uint64_t v70 = v61;
            *(void *)(a1 + 128) = v62;
            if (!v61) {
              goto LABEL_141;
            }
          }
          else
          {
            int v42 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_89:
            uint64_t v70 = v42;
            *(void *)(a1 + 128) = v43;
          }
          goto LABEL_114;
        case 0xFu:
          if (v9 != 120) {
            goto LABEL_20;
          }
          v5 |= 0x2000u;
          int v45 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v46 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_94;
          }
          int v47 = *(char *)v45;
          unint64_t v46 = v46 + (v47 << 7) - 128;
          if (v47 < 0)
          {
            unsigned int v63 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v46);
            uint64_t v70 = v63;
            *(unsigned char *)(a1 + 12sub_1000333D0((uint64_t *)this + 1) = v64 != 0;
            if (!v63) {
              goto LABEL_141;
            }
          }
          else
          {
            int v45 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_94:
            uint64_t v70 = v45;
            *(unsigned char *)(a1 + 12sub_1000333D0((uint64_t *)this + 1) = v46 != 0;
          }
          goto LABEL_114;
        case 0x10u:
          if (v9 != 128) {
            goto LABEL_20;
          }
          unsigned int v48 = (google::protobuf::internal *)((char *)v8 + 1);
          uint64_t v32 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_99;
          }
          int v49 = *(char *)v48;
          int v50 = v32 + (v49 << 7);
          uint64_t v32 = (v50 - 128);
          if (v49 < 0)
          {
            uint64_t v70 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, (v50 - 128));
            if (!v70) {
              goto LABEL_141;
            }
            uint64_t v32 = v65;
          }
          else
          {
            unsigned int v48 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_99:
            uint64_t v70 = v48;
          }
          if (TSP::DataUploadStatus_IsValid((TSP *)v32))
          {
            *(_DWORD *)(a1 + 16) |= 0x4000u;
            *(_DWORD *)(a1 + 124) = v32;
          }
          else
          {
            if (*v7) {
              uint64_t v68 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else {
              uint64_t v68 = sub_10003562C((unint64_t *)(a1 + 8));
            }
            unsigned int v69 = 16;
LABEL_136:
            google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v68, v69, v32);
          }
          goto LABEL_114;
        case 0x11u:
          if (v9 != 137) {
            goto LABEL_20;
          }
          v5 |= 0x10000u;
          *(void *)(a1 + 136) = *(void *)v8;
          uint64_t v70 = (google::protobuf::internal *)((char *)v8 + 8);
          goto LABEL_114;
        case 0x12u:
          if (v9 != 144) {
            goto LABEL_20;
          }
          v5 |= 0x20000u;
          uint64_t v51 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v52 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_108;
          }
          int v53 = *(char *)v51;
          unint64_t v52 = v52 + (v53 << 7) - 128;
          if (v53 < 0)
          {
            unint64_t v66 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v52);
            uint64_t v70 = v66;
            *(void *)(a1 + 144) = v67;
            if (!v66)
            {
LABEL_141:
              uint64_t v70 = 0;
              goto LABEL_2;
            }
          }
          else
          {
            uint64_t v51 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_108:
            uint64_t v70 = v51;
            *(void *)(a1 + 144) = v52;
          }
          goto LABEL_114;
        default:
          if (v9 >> 3 == 99 && v9 == 26)
          {
            *(_DWORD *)(a1 + 16) |= 0x80u;
            uint64_t v54 = *(void *)(a1 + 8);
            uint64_t v21 = (google::protobuf::Arena *)(v54 & 0xFFFFFFFFFFFFFFFELL);
            if (v54) {
              uint64_t v21 = *(google::protobuf::Arena **)v21;
            }
            uint64_t v22 = (uint64_t **)(a1 + 80);
LABEL_112:
            unsigned int v55 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v22, v21);
            uint64_t v19 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v55, (std::string::value_type *)v70, (uint64_t)a3);
          }
          else
          {
LABEL_20:
            if (v9) {
              BOOL v17 = (v9 & 7) == 4;
            }
            else {
              BOOL v17 = 1;
            }
            if (v17)
            {
              a3[10].i32[0] = v9 - 1;
              goto LABEL_2;
            }
            if (*v7)
            {
              unint64_t v18 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              unint64_t v18 = sub_10003562C((unint64_t *)(a1 + 8));
              unint64_t v8 = v70;
            }
            uint64_t v19 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v18, v8);
          }
LABEL_113:
          uint64_t v70 = v19;
          if (!v19) {
            goto LABEL_141;
          }
LABEL_114:
          if (sub_1000355B8((uint64_t)a3, &v70, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v70;
}

google::protobuf::internal *sub_100044798(int32x2_t *a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  int32x2_t v8 = a1[1];
  int v9 = v5 + v6 - v8.i32[0];
  *a1 = (int32x2_t)(*(void *)&v8 + (v9 & (v9 >> 31)));
  __int32 v10 = a1[3].i32[1];
  a1[3].i32[1] = v9;
  v8.i32[0] = a1[11].i32[0];
  BOOL v11 = __OFSUB__(v8.i32[0]--, 1);
  a1[11].i32[0] = v8.i32[0];
  if (v8.i32[0] < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::DataAttributes::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v12 = a1[3].i32[1] + v10 - v9;
  a1[3].i32[1] = v12;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v12 & (v12 >> 31)));
  return result;
}

google::protobuf::internal *sub_100044868(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::EncryptionInfo::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *sub_100044938(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::IndexSet::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::DataInfo::_InternalSerialize(TSP::DataInfo *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  unint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 0x800) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      unint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v9 = *((void *)this + 14);
    unsigned __int8 *v4 = 8;
    if (v9 > 0x7F)
    {
      v4[1] = v9 | 0x80;
      unint64_t v10 = v9 >> 7;
      if (v9 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
          unint64_t v11 = v10 >> 7;
          ++v4;
          unint64_t v12 = v10 >> 14;
          v10 >>= 7;
        }
        while (v12);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v11;
        if (v6) {
          goto LABEL_34;
        }
      }
      else
      {
        v4[2] = v10;
        v4 += 3;
        if (v6) {
          goto LABEL_34;
        }
      }
    }
    else
    {
      v4[1] = v9;
      v4 += 2;
      if (v6) {
        goto LABEL_34;
      }
    }
LABEL_3:
    if ((v6 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_35;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_34:
  unint64_t v4 = sub_100034480(a3, 2, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_36;
  }
LABEL_35:
  unint64_t v4 = sub_100034480(a3, 3, (const void **)(*((void *)this + 4) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }
LABEL_36:
  unint64_t v4 = sub_100034480(a3, 4, (const void **)(*((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
LABEL_37:
  unint64_t v4 = sub_100034480(a3, 5, (const void **)(*((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_7:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_38:
  unint64_t v4 = sub_100034480(a3, 6, (const void **)(*((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_8:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_9;
    }
    goto LABEL_40;
  }
LABEL_39:
  unint64_t v4 = sub_100034480(a3, 7, (const void **)(*((void *)this + 8) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x1000) == 0)
  {
LABEL_9:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_10;
    }
LABEL_43:
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v14 = *((int *)this + 38);
    unsigned __int8 *v4 = 72;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      if (v14 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v15 | 0x80;
          unint64_t v16 = v15 >> 7;
          ++v4;
          unint64_t v17 = v15 >> 14;
          v15 >>= 7;
        }
        while (v17);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v16;
        if ((v6 & 0x100) != 0) {
          goto LABEL_54;
        }
      }
      else
      {
        v4[2] = v15;
        v4 += 3;
        if ((v6 & 0x100) != 0) {
          goto LABEL_54;
        }
      }
    }
    else
    {
      v4[1] = v14;
      v4 += 2;
      if ((v6 & 0x100) != 0) {
        goto LABEL_54;
      }
    }
LABEL_11:
    if ((v6 & 0x200) == 0) {
      goto LABEL_12;
    }
    goto LABEL_64;
  }
LABEL_40:
  if (*(void *)a3 <= (unint64_t)v4) {
    unint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v13 = *((unsigned char *)this + 120);
  unsigned __int8 *v4 = 64;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x40000) != 0) {
    goto LABEL_43;
  }
LABEL_10:
  if ((v6 & 0x100) == 0) {
    goto LABEL_11;
  }
LABEL_54:
  if (*(void *)a3 <= (unint64_t)v4) {
    unint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v18 = (TSP::DataAttributes *)*((void *)this + 11);
  unsigned __int8 *v4 = 82;
  unsigned int v19 = *((_DWORD *)v18 + 10);
  if (v19 > 0x7F)
  {
    v4[1] = v19 | 0x80;
    unsigned int v21 = v19 >> 7;
    if (v19 >> 14)
    {
      uint64_t v20 = v4 + 3;
      do
      {
        *(v20 - sub_1000333D0((uint64_t *)this + 1) = v21 | 0x80;
        unsigned int v22 = v21 >> 7;
        ++v20;
        unsigned int v23 = v21 >> 14;
        v21 >>= 7;
      }
      while (v23);
      *(v20 - sub_1000333D0((uint64_t *)this + 1) = v22;
    }
    else
    {
      v4[2] = v21;
      uint64_t v20 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v19;
    uint64_t v20 = v4 + 2;
  }
  unint64_t v4 = (unsigned __int8 *)TSP::DataAttributes::_InternalSerialize(v18, v20, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_12:
    if ((v6 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_74;
  }
LABEL_64:
  if (*(void *)a3 <= (unint64_t)v4) {
    unint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  uint64_t v24 = (TSP::EncryptionInfo *)*((void *)this + 12);
  unsigned __int8 *v4 = 90;
  unsigned int v25 = *((_DWORD *)v24 + 5);
  if (v25 > 0x7F)
  {
    v4[1] = v25 | 0x80;
    unsigned int v27 = v25 >> 7;
    if (v25 >> 14)
    {
      uint64_t v26 = v4 + 3;
      do
      {
        *(v26 - sub_1000333D0((uint64_t *)this + 1) = v27 | 0x80;
        unsigned int v28 = v27 >> 7;
        ++v26;
        unsigned int v29 = v27 >> 14;
        v27 >>= 7;
      }
      while (v29);
      *(v26 - sub_1000333D0((uint64_t *)this + 1) = v28;
    }
    else
    {
      v4[2] = v27;
      uint64_t v26 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v25;
    uint64_t v26 = v4 + 2;
  }
  unint64_t v4 = (unsigned __int8 *)TSP::EncryptionInfo::_InternalSerialize(v24, v26, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_13:
    if ((v6 & 0x400) == 0) {
      goto LABEL_14;
    }
    goto LABEL_75;
  }
LABEL_74:
  unint64_t v4 = sub_100034480(a3, 12, (const void **)(*((void *)this + 9) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x400) == 0)
  {
LABEL_14:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_15;
    }
LABEL_85:
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v36 = *((void *)this + 16);
    unsigned __int8 *v4 = 112;
    if (v36 > 0x7F)
    {
      v4[1] = v36 | 0x80;
      unint64_t v37 = v36 >> 7;
      if (v36 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v37 | 0x80;
          unint64_t v38 = v37 >> 7;
          ++v4;
          unint64_t v39 = v37 >> 14;
          v37 >>= 7;
        }
        while (v39);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v38;
        if ((v6 & 0x2000) != 0) {
          goto LABEL_96;
        }
      }
      else
      {
        v4[2] = v37;
        v4 += 3;
        if ((v6 & 0x2000) != 0) {
          goto LABEL_96;
        }
      }
    }
    else
    {
      v4[1] = v36;
      v4 += 2;
      if ((v6 & 0x2000) != 0) {
        goto LABEL_96;
      }
    }
LABEL_16:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_17;
    }
LABEL_99:
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v41 = *((int *)this + 31);
    *(_WORD *)unint64_t v4 = 384;
    if (v41 > 0x7F)
    {
      v4[2] = v41 | 0x80;
      unint64_t v42 = v41 >> 7;
      if (v41 >> 14)
      {
        v4 += 4;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v42 | 0x80;
          unint64_t v43 = v42 >> 7;
          ++v4;
          unint64_t v44 = v42 >> 14;
          v42 >>= 7;
        }
        while (v44);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v43;
        if ((v6 & 0x10000) != 0) {
          goto LABEL_110;
        }
      }
      else
      {
        v4[3] = v42;
        v4 += 4;
        if ((v6 & 0x10000) != 0) {
          goto LABEL_110;
        }
      }
    }
    else
    {
      v4[2] = v41;
      v4 += 3;
      if ((v6 & 0x10000) != 0) {
        goto LABEL_110;
      }
    }
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_113;
  }
LABEL_75:
  if (*(void *)a3 <= (unint64_t)v4) {
    unint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  int v30 = (TSP::IndexSet *)*((void *)this + 13);
  unsigned __int8 *v4 = 106;
  unsigned int v31 = *((_DWORD *)v30 + 10);
  if (v31 > 0x7F)
  {
    v4[1] = v31 | 0x80;
    unsigned int v33 = v31 >> 7;
    if (v31 >> 14)
    {
      uint64_t v32 = v4 + 3;
      do
      {
        *(v32 - sub_1000333D0((uint64_t *)this + 1) = v33 | 0x80;
        unsigned int v34 = v33 >> 7;
        ++v32;
        unsigned int v35 = v33 >> 14;
        v33 >>= 7;
      }
      while (v35);
      *(v32 - sub_1000333D0((uint64_t *)this + 1) = v34;
    }
    else
    {
      v4[2] = v33;
      uint64_t v32 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v31;
    uint64_t v32 = v4 + 2;
  }
  unint64_t v4 = (unsigned __int8 *)TSP::IndexSet::_InternalSerialize(v30, v32, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
  if ((v6 & 0x8000) != 0) {
    goto LABEL_85;
  }
LABEL_15:
  if ((v6 & 0x2000) == 0) {
    goto LABEL_16;
  }
LABEL_96:
  if (*(void *)a3 <= (unint64_t)v4) {
    unint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v40 = *((unsigned char *)this + 121);
  unsigned __int8 *v4 = 120;
  v4[1] = v40;
  v4 += 2;
  if ((v6 & 0x4000) != 0) {
    goto LABEL_99;
  }
LABEL_17:
  if ((v6 & 0x10000) == 0) {
    goto LABEL_18;
  }
LABEL_110:
  if (*(void *)a3 <= (unint64_t)v4) {
    unint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  uint64_t v45 = *((void *)this + 17);
  *(_WORD *)unint64_t v4 = 393;
  *(void *)(v4 + 2) = v45;
  v4 += 10;
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x80) == 0) {
      goto LABEL_21;
    }
    goto LABEL_20;
  }
LABEL_113:
  if (*(void *)a3 <= (unint64_t)v4) {
    unint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v46 = *((void *)this + 18);
  *(_WORD *)unint64_t v4 = 400;
  if (v46 <= 0x7F)
  {
    v4[2] = v46;
    v4 += 3;
    if ((v6 & 0x80) == 0) {
      goto LABEL_21;
    }
LABEL_20:
    unint64_t v4 = sub_100034480(a3, 99, (const void **)(*((void *)this + 10) & 0xFFFFFFFFFFFFFFFELL), v4);
    goto LABEL_21;
  }
  v4[2] = v46 | 0x80;
  unint64_t v47 = v46 >> 7;
  if (v46 >> 14)
  {
    v4 += 4;
    do
    {
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v47 | 0x80;
      unint64_t v48 = v47 >> 7;
      ++v4;
      unint64_t v49 = v47 >> 14;
      v47 >>= 7;
    }
    while (v49);
    *(v4 - sub_1000333D0((uint64_t *)this + 1) = v48;
    if ((v6 & 0x80) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    v4[3] = v47;
    v4 += 4;
    if ((v6 & 0x80) != 0) {
      goto LABEL_20;
    }
  }
LABEL_21:
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

uint64_t TSP::DataInfo::RequiredFieldsByteSizeFallback(TSP::DataInfo *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  unint64_t v3 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_7:
    unint64_t v6 = *((void *)this + 4) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v1 & 0x800) != 0) {
    v2 += ((9 * (__clz(*((void *)this + 14) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  return v2;
}

char *TSP::DataInfo::ByteSizeLong(TSP::DataInfo *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((~v2 & 0x803) != 0)
  {
    unint64_t v10 = (const google::protobuf::UnknownFieldSet *)TSP::DataInfo::RequiredFieldsByteSizeFallback(this);
  }
  else
  {
    unint64_t v3 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    unint64_t v7 = *((void *)this + 4) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    unint64_t v10 = (const google::protobuf::UnknownFieldSet *)(v5
                                                    + v9
                                                    + v6
                                                    + ((9 * (__clz(*((void *)this + 14) | 1) ^ 0x3F) + 73) >> 6)
                                                    + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6)
                                                    + 3);
  }
  if ((v2 & 0xFC) == 0) {
    goto LABEL_18;
  }
  if ((v2 & 4) != 0)
  {
    unint64_t v21 = *((void *)this + 5) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
    uint64_t v23 = *(void *)(v21 + 8);
    if ((v22 & 0x80u) == 0) {
      uint64_t v23 = v22;
    }
    unint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v2 & 8) == 0)
    {
LABEL_11:
      if ((v2 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_50;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_11;
  }
  unint64_t v24 = *((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
  uint64_t v26 = *(void *)(v24 + 8);
  if ((v25 & 0x80u) == 0) {
    uint64_t v26 = v25;
  }
  unint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_12:
    if ((v2 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_53:
    unint64_t v30 = *((void *)this + 8) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v31 = *(unsigned __int8 *)(v30 + 23);
    uint64_t v32 = *(void *)(v30 + 8);
    if ((v31 & 0x80u) == 0) {
      uint64_t v32 = v31;
    }
    unint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1);
    if ((v2 & 0x40) == 0)
    {
LABEL_14:
      if ((v2 & 0x80) == 0) {
        goto LABEL_18;
      }
      goto LABEL_15;
    }
    goto LABEL_56;
  }
LABEL_50:
  unint64_t v27 = *((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
  uint64_t v29 = *(void *)(v27 + 8);
  if ((v28 & 0x80u) == 0) {
    uint64_t v29 = v28;
  }
  unint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v2 & 0x20) != 0) {
    goto LABEL_53;
  }
LABEL_13:
  if ((v2 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_56:
  unint64_t v33 = *((void *)this + 9) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v34 = *(unsigned __int8 *)(v33 + 23);
  uint64_t v35 = *(void *)(v33 + 8);
  if ((v34 & 0x80u) == 0) {
    uint64_t v35 = v34;
  }
  unint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_15:
    unint64_t v11 = *((void *)this + 10) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    unint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 2);
  }
LABEL_18:
  if ((v2 & 0x700) == 0) {
    goto LABEL_23;
  }
  if ((v2 & 0x100) != 0)
  {
    unint64_t v36 = TSP::DataAttributes::ByteSizeLong(*((TSP::DataAttributes **)this + 11));
    unint64_t v10 = (const google::protobuf::UnknownFieldSet *)&v36[(void)v10
                                                        + 1
                                                        + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6)];
    if ((v2 & 0x200) == 0)
    {
LABEL_21:
      if ((v2 & 0x400) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  unint64_t v37 = TSP::EncryptionInfo::ByteSizeLong(*((TSP::EncryptionInfo **)this + 12));
  unint64_t v10 = (const google::protobuf::UnknownFieldSet *)&v37[(void)v10
                                                      + 1
                                                      + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6)];
  if ((v2 & 0x400) != 0)
  {
LABEL_22:
    unint64_t v14 = TSP::IndexSet::ByteSizeLong(*((TSP::IndexSet **)this + 13));
    unint64_t v10 = (const google::protobuf::UnknownFieldSet *)&v14[(void)v10
                                                        + 1
                                                        + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6)];
  }
LABEL_23:
  if ((v2 & 0xF000) != 0)
  {
    unint64_t v15 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + 2);
    if ((v2 & 0x1000) == 0) {
      unint64_t v15 = v10;
    }
    if ((v2 & 0x2000) != 0) {
      unint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v15 + 2);
    }
    else {
      unint64_t v10 = v15;
    }
    if ((v2 & 0x4000) != 0)
    {
      int v16 = *((_DWORD *)this + 31);
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v16 >= 0) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 12;
      }
      unint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v18);
    }
    if ((v2 & 0x8000) != 0) {
      unint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10
    }
                                                      + ((9 * (__clz(*((void *)this + 16) | 1) ^ 0x3F) + 73) >> 6)
                                                      + 1);
  }
  if ((v2 & 0x70000) != 0)
  {
    if ((v2 & 0x10000) != 0) {
      unint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + 10);
    }
    if ((v2 & 0x20000) != 0) {
      unint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10
    }
                                                      + ((9 * (__clz(*((void *)this + 18) | 1) ^ 0x3F) + 73) >> 6)
                                                      + 2);
    if ((v2 & 0x40000) != 0)
    {
      int v19 = *((_DWORD *)this + 38);
      if (v19 < 0) {
        uint64_t v20 = 11;
      }
      else {
        uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      unint64_t v10 = (const google::protobuf::UnknownFieldSet *)((char *)v10 + v20);
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::DataInfo *)((char *)this + 8), v10, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v10;
    return (char *)v10;
  }
}

void TSP::DataInfo::MergeFrom(TSP::DataInfo *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DataInfo::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void TSP::DataInfo::MergeFrom(TSP::DataInfo *this, const TSP::DataInfo *a2)
{
  uint64_t v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if (!(_BYTE)v6) {
    goto LABEL_37;
  }
  if (v6)
  {
    unint64_t v7 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 4) |= 1u;
    uint64_t v8 = *((void *)this + 1);
    uint64_t v9 = (google::protobuf::Arena *)(v8 & 0xFFFFFFFFFFFFFFFELL);
    if (v8) {
      uint64_t v9 = *(google::protobuf::Arena **)v9;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 3, v7, v9);
    if ((v6 & 2) == 0)
    {
LABEL_6:
      if ((v6 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_6;
  }
  unint64_t v10 = *((void *)a2 + 4) & 0xFFFFFFFFFFFFFFFELL;
  *((_DWORD *)this + 4) |= 2u;
  uint64_t v11 = *((void *)this + 1);
  uint64_t v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
  if (v11) {
    uint64_t v12 = *(google::protobuf::Arena **)v12;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 4, v10, v12);
  if ((v6 & 4) == 0)
  {
LABEL_7:
    if ((v6 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_19:
  unint64_t v13 = *((void *)a2 + 5) & 0xFFFFFFFFFFFFFFFELL;
  *((_DWORD *)this + 4) |= 4u;
  uint64_t v14 = *((void *)this + 1);
  unint64_t v15 = (google::protobuf::Arena *)(v14 & 0xFFFFFFFFFFFFFFFELL);
  if (v14) {
    unint64_t v15 = *(google::protobuf::Arena **)v15;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 5, v13, v15);
  if ((v6 & 8) == 0)
  {
LABEL_8:
    if ((v6 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_22:
  unint64_t v16 = *((void *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
  *((_DWORD *)this + 4) |= 8u;
  uint64_t v17 = *((void *)this + 1);
  uint64_t v18 = (google::protobuf::Arena *)(v17 & 0xFFFFFFFFFFFFFFFELL);
  if (v17) {
    uint64_t v18 = *(google::protobuf::Arena **)v18;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 6, v16, v18);
  if ((v6 & 0x10) == 0)
  {
LABEL_9:
    if ((v6 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    unint64_t v22 = *((void *)a2 + 8) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 4) |= 0x20u;
    uint64_t v23 = *((void *)this + 1);
    unint64_t v24 = (google::protobuf::Arena *)(v23 & 0xFFFFFFFFFFFFFFFELL);
    if (v23) {
      unint64_t v24 = *(google::protobuf::Arena **)v24;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 8, v22, v24);
    if ((v6 & 0x40) == 0)
    {
LABEL_11:
      if ((v6 & 0x80) == 0) {
        goto LABEL_37;
      }
      goto LABEL_34;
    }
    goto LABEL_31;
  }
LABEL_25:
  unint64_t v19 = *((void *)a2 + 7) & 0xFFFFFFFFFFFFFFFELL;
  *((_DWORD *)this + 4) |= 0x10u;
  uint64_t v20 = *((void *)this + 1);
  unint64_t v21 = (google::protobuf::Arena *)(v20 & 0xFFFFFFFFFFFFFFFELL);
  if (v20) {
    unint64_t v21 = *(google::protobuf::Arena **)v21;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 7, v19, v21);
  if ((v6 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v6 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_31:
  unint64_t v25 = *((void *)a2 + 9) & 0xFFFFFFFFFFFFFFFELL;
  *((_DWORD *)this + 4) |= 0x40u;
  uint64_t v26 = *((void *)this + 1);
  unint64_t v27 = (google::protobuf::Arena *)(v26 & 0xFFFFFFFFFFFFFFFELL);
  if (v26) {
    unint64_t v27 = *(google::protobuf::Arena **)v27;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 9, v25, v27);
  if ((v6 & 0x80) != 0)
  {
LABEL_34:
    unint64_t v28 = *((void *)a2 + 10) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)this + 4) |= 0x80u;
    uint64_t v29 = *((void *)this + 1);
    unint64_t v30 = (google::protobuf::Arena *)(v29 & 0xFFFFFFFFFFFFFFFELL);
    if (v29) {
      unint64_t v30 = *(google::protobuf::Arena **)v30;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)this + 10, v28, v30);
  }
LABEL_37:
  if ((v6 & 0xFF00) == 0) {
    goto LABEL_48;
  }
  if ((v6 & 0x100) != 0)
  {
    *((_DWORD *)this + 4) |= 0x100u;
    uint64_t v31 = (TSP::DataAttributes *)*((void *)this + 11);
    if (!v31)
    {
      uint64_t v32 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        uint64_t v32 = (void *)*v32;
      }
      uint64_t v31 = (TSP::DataAttributes *)google::protobuf::Arena::CreateMaybeMessage<TSP::DataAttributes>(v32);
      *((void *)this + 1sub_1000333D0((uint64_t *)this + 1) = v31;
    }
    if (*((void *)a2 + 11)) {
      unint64_t v33 = (const TSP::DataAttributes *)*((void *)a2 + 11);
    }
    else {
      unint64_t v33 = (const TSP::DataAttributes *)&TSP::_DataAttributes_default_instance_;
    }
    TSP::DataAttributes::MergeFrom(v31, v33);
    if ((v6 & 0x200) == 0)
    {
LABEL_40:
      if ((v6 & 0x400) == 0) {
        goto LABEL_41;
      }
      goto LABEL_71;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_40;
  }
  *((_DWORD *)this + 4) |= 0x200u;
  uint64_t v34 = (void **)*((void *)this + 12);
  if (!v34)
  {
    uint64_t v35 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      uint64_t v35 = (void *)*v35;
    }
    uint64_t v34 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::EncryptionInfo>(v35);
    *((void *)this + 12) = v34;
  }
  if (*((void *)a2 + 12)) {
    unint64_t v36 = (const TSP::EncryptionInfo *)*((void *)a2 + 12);
  }
  else {
    unint64_t v36 = (const TSP::EncryptionInfo *)TSP::_EncryptionInfo_default_instance_;
  }
  TSP::EncryptionInfo::MergeFrom(v34, v36);
  if ((v6 & 0x400) == 0)
  {
LABEL_41:
    if ((v6 & 0x800) == 0) {
      goto LABEL_42;
    }
    goto LABEL_79;
  }
LABEL_71:
  *((_DWORD *)this + 4) |= 0x400u;
  unint64_t v37 = (void **)*((void *)this + 13);
  if (!v37)
  {
    unint64_t v38 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      unint64_t v38 = (void *)*v38;
    }
    unint64_t v37 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::IndexSet>(v38);
    *((void *)this + 1sub_1000502F4((void *)this + 3) = v37;
  }
  if (*((void *)a2 + 13)) {
    unint64_t v39 = (const TSP::IndexSet *)*((void *)a2 + 13);
  }
  else {
    unint64_t v39 = (const TSP::IndexSet *)&TSP::_IndexSet_default_instance_;
  }
  TSP::IndexSet::MergeFrom(v37, v39);
  if ((v6 & 0x800) == 0)
  {
LABEL_42:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_43;
    }
    goto LABEL_80;
  }
LABEL_79:
  *((void *)this + 14) = *((void *)a2 + 14);
  if ((v6 & 0x1000) == 0)
  {
LABEL_43:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_81;
  }
LABEL_80:
  *((unsigned char *)this + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = *((unsigned char *)a2 + 120);
  if ((v6 & 0x2000) == 0)
  {
LABEL_44:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_45;
    }
LABEL_82:
    *((_DWORD *)this + 3sub_1000333D0((uint64_t *)this + 1) = *((_DWORD *)a2 + 31);
    if ((v6 & 0x8000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
LABEL_81:
  *((unsigned char *)this + 12sub_1000333D0((uint64_t *)this + 1) = *((unsigned char *)a2 + 121);
  if ((v6 & 0x4000) != 0) {
    goto LABEL_82;
  }
LABEL_45:
  if ((v6 & 0x8000) != 0) {
LABEL_46:
  }
    *((void *)this + 16) = *((void *)a2 + 16);
LABEL_47:
  *((_DWORD *)this + 4) |= v6;
LABEL_48:
  if ((v6 & 0x70000) == 0) {
    return;
  }
  if ((v6 & 0x10000) == 0)
  {
    if ((v6 & 0x20000) == 0) {
      goto LABEL_51;
    }
LABEL_85:
    *((void *)this + 18) = *((void *)a2 + 18);
    if ((v6 & 0x40000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_52;
  }
  *((void *)this + 17) = *((void *)a2 + 17);
  if ((v6 & 0x20000) != 0) {
    goto LABEL_85;
  }
LABEL_51:
  if ((v6 & 0x40000) != 0) {
LABEL_52:
  }
    *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
LABEL_53:
  *((_DWORD *)this + 4) |= v6;
}

void **TSP::EncryptionInfo::MergeFrom(void **this, const TSP::EncryptionInfo *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    int v6 = (TSP::EncryptionBlockInfo **)(*((void *)a2 + 5) + 8);
    unint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 3), *((_DWORD *)a2 + 8));
    this = sub_10005088C(v3 + 3, (void ***)v7, v6, v5, *(_DWORD *)v3[5] - *((_DWORD *)v3 + 8));
    signed int v8 = *((_DWORD *)v3 + 8) + v5;
    *((_DWORD *)v3 + 8) = v8;
    uint64_t v9 = (signed int *)v3[5];
    if (*v9 < v8) {
      *uint64_t v9 = v8;
    }
  }
  int v10 = *((_DWORD *)a2 + 4);
  if ((v10 & 3) != 0)
  {
    if (v10) {
      v3[6] = (void *)*((void *)a2 + 6);
    }
    if ((v10 & 2) != 0) {
      void v3[7] = (void *)*((void *)a2 + 7);
    }
    *((_DWORD *)v3 + 4) |= v10;
  }
  return this;
}

void TSP::DataInfo::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::DataInfo::Clear(this);
    TSP::DataInfo::MergeFrom((TSP::DataInfo *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::DataInfo::IsInitialized(TSP::DataInfo *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((~v1 & 0x803) != 0) {
    return 0;
  }
  if ((v1 & 0x100) != 0)
  {
    uint64_t result = TSP::DataAttributes::IsInitialized(*((TSP::DataAttributes **)this + 11));
    if (!result) {
      return result;
    }
    int v1 = *((_DWORD *)this + 4);
  }
  if ((v1 & 0x200) != 0)
  {
    uint64_t v4 = *((void *)this + 12);
    uint64_t v5 = *(unsigned int *)(v4 + 32);
    uint64_t v6 = *(void *)(v4 + 40);
    while ((int)v5 >= 1)
    {
      uint64_t v7 = *(void *)(v6 + 8 * v5--);
      if ((*(unsigned char *)(v7 + 16) & 1) == 0) {
        return 0;
      }
    }
  }
  if ((v1 & 0x400) == 0) {
    return 1;
  }
  uint64_t result = TSP::IndexSet::IsInitialized(*((TSP::IndexSet **)this + 13));
  if (result) {
    return 1;
  }
  return result;
}

BOOL TSP::EncryptionInfo::IsInitialized(TSP::EncryptionInfo *this)
{
  uint64_t v1 = *((unsigned int *)this + 8);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 5) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 1) != 0);
  return v2 < 1;
}

uint64_t TSP::DataInfo::GetMetadata(TSP::DataInfo *this)
{
  return off_1001E9C30[26];
}

void TSP::DataMetadataMap_DataMetadataMapEntry::~DataMetadataMap_DataMetadataMapEntry(TSP::DataMetadataMap_DataMetadataMapEntry *this)
{
  if (this != (TSP::DataMetadataMap_DataMetadataMapEntry *)&TSP::_DataMetadataMap_DataMetadataMapEntry_default_instance_)
  {
    int v2 = (TSP::Reference *)*((void *)this + 3);
    if (v2)
    {
      TSP::Reference::~Reference(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::DataMetadataMap_DataMetadataMapEntry::~DataMetadataMap_DataMetadataMapEntry(this);
  operator delete();
}

uint64_t TSP::DataMetadataMap_DataMetadataMapEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::DataMetadataMap_DataMetadataMapEntry::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::Reference::Clear(this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(void *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::DataMetadataMap_DataMetadataMapEntry::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unint64_t v24 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v24 + 1);
      unsigned int v9 = *(unsigned __int8 *)v24;
      if ((*(char *)v24 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v24, (const char *)(v10 - 128));
      unint64_t v24 = TagFallback;
      if (!TagFallback) {
        goto LABEL_40;
      }
      signed int v8 = TagFallback;
      unsigned int v9 = v21;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v15 = *(void *)(a1 + 24);
          if (!v15)
          {
            unint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              unint64_t v16 = (void *)*v16;
            }
            uint64_t v15 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v16);
            *(void *)(a1 + 24) = v15;
            signed int v8 = v24;
          }
          uint64_t v14 = sub_100034100(a3, v15, v8);
        }
        else
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unint64_t v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unint64_t v13 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v24;
          }
          uint64_t v14 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
        }
        unint64_t v24 = v14;
        if (!v14) {
          goto LABEL_40;
        }
        goto LABEL_32;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      v5 |= 2u;
      uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 1);
      unint64_t v18 = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_31;
      }
      int v19 = *(char *)v17;
      unint64_t v18 = v18 + (v19 << 7) - 128;
      if ((v19 & 0x80000000) == 0)
      {
        uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_31:
        unint64_t v24 = v17;
        *(void *)(a1 + 32) = v18;
        goto LABEL_32;
      }
      unint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v18);
      unint64_t v24 = v22;
      *(void *)(a1 + 32) = v23;
      if (!v22)
      {
LABEL_40:
        unint64_t v24 = 0;
        goto LABEL_2;
      }
LABEL_32:
      if (sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    signed int v8 = (google::protobuf::internal *)((char *)v24 + 2);
LABEL_7:
    unint64_t v24 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

const google::protobuf::UnknownFieldSet *TSP::DataMetadataMap_DataMetadataMapEntry::_InternalSerialize(TSP::DataMetadataMap_DataMetadataMapEntry *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((void *)this + 4);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unint64_t v13 = v8 >> 7;
        ++a2;
        unint64_t v14 = v8 >> 14;
        v8 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
      if ((v6 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned int v9 = (TSP::Reference *)*((void *)this + 3);
  *a2 = 18;
  unsigned int v10 = *((_DWORD *)v9 + 5);
  if (v10 > 0x7F)
  {
    a2[1] = v10 | 0x80;
    unsigned int v12 = v10 >> 7;
    if (v10 >> 14)
    {
      uint64_t v11 = a2 + 3;
      do
      {
        *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unsigned int v15 = v12 >> 7;
        ++v11;
        unsigned int v16 = v12 >> 14;
        v12 >>= 7;
      }
      while (v16);
      *(v11 - sub_1000333D0((uint64_t *)this + 1) = v15;
    }
    else
    {
      a2[2] = v12;
      uint64_t v11 = a2 + 3;
    }
  }
  else
  {
    a2[1] = v10;
    uint64_t v11 = a2 + 2;
  }
  a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v9, v11, a3, a4);
LABEL_24:
  uint64_t v17 = *((void *)this + 1);
  if ((v17 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::DataMetadataMap_DataMetadataMapEntry::RequiredFieldsByteSizeFallback(TSP::DataMetadataMap_DataMetadataMapEntry *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2)
  {
    uint64_t v4 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 3));
    uint64_t result = &v4[((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1];
    if ((*((_DWORD *)this + 4) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_5:
  }
    result += ((9 * (__clz(*((void *)this + 4) | 1) ^ 0x3F) + 73) >> 6) + 1;
  return result;
}

char *TSP::DataMetadataMap_DataMetadataMapEntry::ByteSizeLong(TSP::Reference **this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0)
  {
    char v3 = TSP::DataMetadataMap_DataMetadataMapEntry::RequiredFieldsByteSizeFallback((TSP::DataMetadataMap_DataMetadataMapEntry *)this);
  }
  else
  {
    int v2 = TSP::Reference::ByteSizeLong(this[3]);
    char v3 = &v2[((9 * (__clz((unint64_t)this[4] | 1) ^ 0x3F) + 73) >> 6)
           + 2
           + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), (const google::protobuf::UnknownFieldSet *)v3, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v3;
    return v3;
  }
}

void TSP::DataMetadataMap_DataMetadataMapEntry::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DataMetadataMap_DataMetadataMapEntry::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::DataMetadataMap_DataMetadataMapEntry::MergeFrom(void **this, const TSP::DataMetadataMap_DataMetadataMapEntry *a2)
{
  char v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      *((_DWORD *)v3 + 4) |= 1u;
      unint64_t v7 = (void **)v3[3];
      if (!v7)
      {
        unint64_t v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unint64_t v8 = (void *)*v8;
        }
        unint64_t v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v8);
        v3[3] = v7;
      }
      if (*((void *)a2 + 3)) {
        unsigned int v9 = (const TSP::Reference *)*((void *)a2 + 3);
      }
      else {
        unsigned int v9 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
      }
      this = TSP::Reference::MergeFrom(v7, v9);
    }
    if ((v6 & 2) != 0) {
      v3[4] = (void *)*((void *)a2 + 4);
    }
    *((_DWORD *)v3 + 4) |= v6;
  }
  return this;
}

void TSP::DataMetadataMap_DataMetadataMapEntry::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::DataMetadataMap_DataMetadataMapEntry::Clear(this);
    TSP::DataMetadataMap_DataMetadataMapEntry::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::DataMetadataMap_DataMetadataMapEntry::IsInitialized(TSP::DataMetadataMap_DataMetadataMapEntry *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((~v1 & 3) != 0) {
    return 0;
  }
  if ((v1 & 1) == 0) {
    return 1;
  }
  uint64_t result = TSP::Reference::IsInitialized(*((TSP::Reference **)this + 3));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t TSP::DataMetadataMap_DataMetadataMapEntry::GetMetadata(TSP::DataMetadataMap_DataMetadataMapEntry *this)
{
  return off_1001E9C30[28];
}

uint64_t TSP::DataMetadataMap::DataMetadataMap(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C8650;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_DataMetadataMap_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DataMetadataMap_TSPArchiveMessages_2eproto);
  }
  return a1;
}

void sub_1000464AC(_Unwind_Exception *a1)
{
  sub_1000506C0(v1);
  _Unwind_Resume(a1);
}

void TSP::DataMetadataMap::~DataMetadataMap(TSP::DataMetadataMap *this)
{
}

{
  uint64_t vars8;

  TSP::DataMetadataMap::~DataMetadataMap(this);
  operator delete();
}

uint64_t TSP::DataMetadataMap::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::DataMetadataMap::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    char v3 = (google::protobuf::Arena ***)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::DataMetadataMap_DataMetadataMapEntry::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *TSP::DataMetadataMap::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unint64_t v22 = a2;
  if ((sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v22 + 1);
      unsigned int v7 = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, (const char *)(v8 - 128));
      unint64_t v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        uint64_t v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          unsigned int v12 = (google::protobuf::internal *)((char *)v11 + 1);
          unint64_t v22 = (google::protobuf::internal *)((char *)v11 + 1);
          unint64_t v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              unint64_t v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            *unint64_t v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<TSP::DataMetadataMap_DataMetadataMapEntry>(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            unsigned int v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          uint64_t v11 = sub_1000467A0(a3, v16, v12);
          unint64_t v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        unsigned int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unsigned int v10 = sub_10003562C((unint64_t *)(a1 + 8));
        char v6 = v22;
      }
      unint64_t v22 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92))) {
        return v22;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    unint64_t v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

google::protobuf::internal *sub_1000467A0(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::DataMetadataMap_DataMetadataMapEntry::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::DataMetadataMap::_InternalSerialize(TSP::DataMetadataMap *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v8 = *(TSP::DataMetadataMap_DataMetadataMapEntry **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::DataMetadataMap_DataMetadataMapEntry::_InternalSerialize(v8, v10, a3, a4);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::DataMetadataMap::ByteSizeLong(TSP::DataMetadataMap *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (TSP::Reference ***)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::DataMetadataMap_DataMetadataMapEntry::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::DataMetadataMap *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void TSP::DataMetadataMap::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DataMetadataMap::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::DataMetadataMap::MergeFrom(void **this, const TSP::DataMetadataMap *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (TSP::DataMetadataMap_DataMetadataMapEntry **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    this = sub_100050740(v3 + 2, (void ***)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v8;
    unsigned int v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  return this;
}

void TSP::DataMetadataMap::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::DataMetadataMap::Clear(this);
    TSP::DataMetadataMap::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::DataMetadataMap::IsInitialized(TSP::DataMetadataMap *this)
{
  return sub_100046BF0((uint64_t)this + 16);
}

uint64_t sub_100046BF0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    int v6 = *(_DWORD *)(v5 + 16);
    if ((~v6 & 3) != 0) {
      break;
    }
    if (v6)
    {
      uint64_t result = TSP::Reference::IsInitialized(*(TSP::Reference **)(v5 + 24));
      if (!result) {
        return result;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return 0;
}

uint64_t TSP::DataMetadataMap::GetMetadata(TSP::DataMetadataMap *this)
{
  return off_1001E9C30[30];
}

void TSP::DataMetadata::~DataMetadata(TSP::DataMetadata *this)
{
  if (this != (TSP::DataMetadata *)&TSP::_DataMetadata_default_instance_)
  {
    uint64_t v2 = (TSP::Color *)*((void *)this + 3);
    if (v2)
    {
      TSP::Color::~Color(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::DataMetadata::~DataMetadata(this);
  operator delete();
}

uint64_t TSP::DataMetadata::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::DataMetadata::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::Color::Clear(this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::DataMetadata::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v17 = a2;
  if ((sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      int v6 = (google::protobuf::internal *)((char *)v17 + 1);
      unsigned int v7 = *(unsigned __int8 *)v17;
      if ((*(char *)v17 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v17, (const char *)(v8 - 128));
      uint64_t v17 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      int v6 = TagFallback;
      unsigned int v7 = v15;
LABEL_7:
      if (v7 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          unsigned int v13 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
          if (*v5) {
            unsigned int v13 = (void *)*v13;
          }
          uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<TSP::Color>(v13);
          *(void *)(a1 + 24) = v12;
          int v6 = v17;
        }
        unsigned int v11 = sub_100046F08(a3, v12, v6);
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v7 - 1;
          return v17;
        }
        if (*v5)
        {
          int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          int v10 = sub_10003562C((unint64_t *)(a1 + 8));
          int v6 = v17;
        }
        unsigned int v11 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      }
      uint64_t v17 = v11;
      if (!v11) {
        return 0;
      }
      if (sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92))) {
        return v17;
      }
    }
    int v6 = (google::protobuf::internal *)((char *)v17 + 2);
LABEL_6:
    uint64_t v17 = v6;
    goto LABEL_7;
  }
  return v17;
}

google::protobuf::internal *sub_100046F08(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::Color::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::DataMetadata::_InternalSerialize(TSP::DataMetadata *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    int v6 = (TSP::Color *)*((void *)this + 3);
    *a2 = 10;
    unsigned int v7 = *((_DWORD *)v6 + 5);
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unsigned int v9 = v7 >> 7;
      if (v7 >> 14)
      {
        uint64_t v8 = a2 + 3;
        do
        {
          *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
          unsigned int v10 = v9 >> 7;
          ++v8;
          unsigned int v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
      }
      else
      {
        a2[2] = v9;
        uint64_t v8 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v7;
      uint64_t v8 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::Color::_InternalSerialize(v6, v8, a3, a4);
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v12 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::DataMetadata::ByteSizeLong(TSP::Color **this)
{
  if ((_BYTE)this[2])
  {
    char v3 = TSP::Color::ByteSizeLong(this[3]);
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v3[((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::DataMetadata::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DataMetadata::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::DataMetadata::MergeFrom(void **this, const TSP::DataMetadata *a2)
{
  char v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  if (*((unsigned char *)a2 + 16))
  {
    int v6 = (const TSP::Color *)*((void *)a2 + 3);
    *((_DWORD *)v3 + 4) |= 1u;
    unsigned int v7 = (void **)v3[3];
    if (!v7)
    {
      uint64_t v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        uint64_t v8 = (void *)*v8;
      }
      unsigned int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Color>(v8);
      v3[3] = v7;
      int v6 = (const TSP::Color *)*((void *)a2 + 3);
    }
    if (v6) {
      unsigned int v9 = v6;
    }
    else {
      unsigned int v9 = (const TSP::Color *)&TSP::_Color_default_instance_;
    }
    return TSP::Color::MergeFrom(v7, v9);
  }
  return this;
}

void TSP::DataMetadata::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::DataMetadata::Clear(this);
    TSP::DataMetadata::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::DataMetadata::IsInitialized(TSP::DataMetadata *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = TSP::Color::IsInitialized(*((TSP::Color **)this + 3));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t TSP::DataMetadata::GetMetadata(TSP::DataMetadata *this)
{
  return off_1001E9C30[32];
}

void *TSP::EncryptionInfo::EncryptionInfo(void *a1, uint64_t a2)
{
  *a1 = off_1001C87B0;
  a1[1] = a2;
  a1[3] = a2;
  a1[2] = 0;
  a1[4] = 0;
  a1[5] = 0;
  if (atomic_load_explicit(scc_info_EncryptionInfo_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_EncryptionInfo_TSPArchiveMessages_2eproto);
  }
  a1[6] = 0;
  a1[7] = 0;
  return a1;
}

void sub_1000473D8(_Unwind_Exception *a1)
{
  sub_100050800(v1);
  _Unwind_Resume(a1);
}

void TSP::EncryptionInfo::~EncryptionInfo(TSP::EncryptionInfo *this)
{
}

{
  uint64_t vars8;

  TSP::EncryptionInfo::~EncryptionInfo(this);
  operator delete();
}

uint64_t TSP::EncryptionInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::internal *TSP::EncryptionInfo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v35 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v35, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v35 + 1);
      unsigned int v9 = *(unsigned __int8 *)v35;
      if ((*(char *)v35 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v35, (const char *)(v10 - 128));
      uint64_t v35 = TagFallback;
      if (!TagFallback) {
        goto LABEL_54;
      }
      uint64_t v8 = TagFallback;
      unsigned int v9 = v30;
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 != 26)
        {
LABEL_14:
          if (v9) {
            BOOL v13 = (v9 & 7) == 4;
          }
          else {
            BOOL v13 = 1;
          }
          if (v13)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            uint64_t v14 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            uint64_t v14 = sub_10003562C((unint64_t *)(a1 + 8));
            uint64_t v8 = v35;
          }
          uint64_t v35 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v14, v8);
          if (!v35)
          {
LABEL_54:
            uint64_t v35 = 0;
            goto LABEL_2;
          }
          goto LABEL_44;
        }
        unsigned int v15 = (google::protobuf::internal *)((char *)v8 - 1);
        while (2)
        {
          uint64_t v16 = (google::protobuf::internal *)((char *)v15 + 1);
          uint64_t v35 = (google::protobuf::internal *)((char *)v15 + 1);
          uint64_t v17 = *(int **)(a1 + 40);
          if (v17)
          {
            uint64_t v18 = *(int *)(a1 + 32);
            int v19 = *v17;
            if ((int)v18 < *v17)
            {
              *(_DWORD *)(a1 + 3sub_1000506C0((void *)this + 2) = v18 + 1;
              uint64_t v20 = *(void *)&v17[2 * v18 + 2];
              goto LABEL_31;
            }
            if (v19 == *(_DWORD *)(a1 + 36))
            {
LABEL_29:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v19 + 1);
              uint64_t v17 = *(int **)(a1 + 40);
              int v19 = *v17;
            }
            *uint64_t v17 = v19 + 1;
            uint64_t v20 = google::protobuf::Arena::CreateMaybeMessage<TSP::EncryptionBlockInfo>(*(void *)(a1 + 24));
            uint64_t v21 = *(void *)(a1 + 40);
            uint64_t v22 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_1000506C0((void *)this + 2) = v22 + 1;
            *(void *)(v21 + 8 * v22 + 8) = v20;
            uint64_t v16 = v35;
LABEL_31:
            unsigned int v15 = sub_100047738(a3, v20, v16);
            uint64_t v35 = v15;
            if (!v15) {
              goto LABEL_54;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *(unsigned char *)v15 != 26) {
              goto LABEL_44;
            }
            continue;
          }
          break;
        }
        int v19 = *(_DWORD *)(a1 + 36);
        goto LABEL_29;
      }
      if (v11 == 2)
      {
        if (v9 != 16) {
          goto LABEL_14;
        }
        v5 |= 2u;
        uint64_t v23 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v24 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v25 = *(char *)v23;
        unint64_t v24 = v24 + (v25 << 7) - 128;
        if ((v25 & 0x80000000) == 0)
        {
          uint64_t v23 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_39:
          uint64_t v35 = v23;
          *(void *)(a1 + 56) = v24;
          goto LABEL_44;
        }
        uint64_t v31 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v24);
        uint64_t v35 = v31;
        *(void *)(a1 + 56) = v32;
        if (!v31) {
          goto LABEL_54;
        }
      }
      else
      {
        if (v11 != 1 || v9 != 8) {
          goto LABEL_14;
        }
        v5 |= 1u;
        uint64_t v26 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v27 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v28 = *(char *)v26;
        unint64_t v27 = v27 + (v28 << 7) - 128;
        if ((v28 & 0x80000000) == 0)
        {
          uint64_t v26 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_43:
          uint64_t v35 = v26;
          *(void *)(a1 + 48) = v27;
          goto LABEL_44;
        }
        unint64_t v33 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v27);
        uint64_t v35 = v33;
        *(void *)(a1 + 48) = v34;
        if (!v33) {
          goto LABEL_54;
        }
      }
LABEL_44:
      if (sub_1000355B8(a3, &v35, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    uint64_t v8 = (google::protobuf::internal *)((char *)v35 + 2);
LABEL_7:
    uint64_t v35 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v35;
}

google::protobuf::internal *sub_100047738(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::EncryptionBlockInfo::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::EncryptionInfo::_InternalSerialize(TSP::EncryptionInfo *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((void *)this + 6);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unint64_t v11 = v8 >> 7;
        ++a2;
        unint64_t v12 = v8 >> 14;
        v8 >>= 7;
      }
      while (v12);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v11;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_23;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v9 = *((void *)this + 7);
  *a2 = 16;
  if (v9 > 0x7F)
  {
    a2[1] = v9 | 0x80;
    unint64_t v10 = v9 >> 7;
    if (v9 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
        unint64_t v13 = v10 >> 7;
        ++a2;
        unint64_t v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      a2[2] = v10;
      a2 += 3;
    }
  }
  else
  {
    a2[1] = v9;
    a2 += 2;
  }
LABEL_23:
  int v15 = *((_DWORD *)this + 8);
  if (v15)
  {
    for (int i = 0; i != v15; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v17 = *(TSP::EncryptionBlockInfo **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 26;
      unsigned int v18 = *((_DWORD *)v17 + 5);
      if (v18 > 0x7F)
      {
        a2[1] = v18 | 0x80;
        unsigned int v20 = v18 >> 7;
        if (v18 >> 14)
        {
          int v19 = a2 + 3;
          do
          {
            *(v19 - sub_1000333D0((uint64_t *)this + 1) = v20 | 0x80;
            unsigned int v21 = v20 >> 7;
            ++v19;
            unsigned int v22 = v20 >> 14;
            v20 >>= 7;
          }
          while (v22);
          *(v19 - sub_1000333D0((uint64_t *)this + 1) = v21;
        }
        else
        {
          a2[2] = v20;
          int v19 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v18;
        int v19 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::EncryptionBlockInfo::_InternalSerialize(v17, v19, a3, a4);
    }
  }
  uint64_t v23 = *((void *)this + 1);
  if ((v23 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v23 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::EncryptionInfo::ByteSizeLong(TSP::EncryptionInfo *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (TSP::EncryptionBlockInfo **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unint64_t v7 = TSP::EncryptionBlockInfo::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *((_DWORD *)this + 4);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
    }
                                                     + ((9 * (__clz(*((void *)this + 6) | 1) ^ 0x3F) + 73) >> 6)
                                                     + 1);
    if ((v8 & 2) != 0) {
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
    }
                                                     + ((9 * (__clz(*((void *)this + 7) | 1) ^ 0x3F) + 73) >> 6)
                                                     + 1);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::EncryptionInfo *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::EncryptionInfo::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::EncryptionInfo::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void TSP::EncryptionInfo::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::EncryptionInfo::Clear(this);
    TSP::EncryptionInfo::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::EncryptionInfo::GetMetadata(TSP::EncryptionInfo *this)
{
  return off_1001E9C30[34];
}

void TSP::EncryptionBlockInfo::~EncryptionBlockInfo(TSP::EncryptionBlockInfo *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::EncryptionBlockInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::EncryptionBlockInfo::Clear(TSP::EncryptionBlockInfo *this)
{
  if ((*((unsigned char *)this + 16) & 3) != 0)
  {
    *((void *)this + sub_100050800((void *)this + 3) = 0;
    *((void *)this + 4) = 0;
  }
  char v2 = *((unsigned char *)this + 8);
  uint64_t result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_1000506C0((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::EncryptionBlockInfo::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      int v8 = (google::protobuf::internal *)((char *)v26 + 1);
      unsigned int v9 = *(unsigned __int8 *)v26;
      if ((*(char *)v26 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v26, (const char *)(v10 - 128));
      uint64_t v26 = TagFallback;
      if (!TagFallback) {
        goto LABEL_40;
      }
      int v8 = TagFallback;
      unsigned int v9 = v21;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 16) {
          goto LABEL_13;
        }
        v5 |= 2u;
        unint64_t v14 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v15 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v16 = *(char *)v14;
        unint64_t v15 = v15 + (v16 << 7) - 128;
        if ((v16 & 0x80000000) == 0)
        {
          unint64_t v14 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_25:
          uint64_t v26 = v14;
          *(void *)(a1 + 3sub_1000506C0((void *)this + 2) = v15;
          goto LABEL_30;
        }
        unsigned int v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v15);
        uint64_t v26 = v22;
        *(void *)(a1 + 3sub_1000506C0((void *)this + 2) = v23;
        if (!v22) {
          goto LABEL_40;
        }
      }
      else
      {
        if (v9 >> 3 != 1 || v9 != 8)
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unint64_t v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unint64_t v13 = sub_10003562C((unint64_t *)(a1 + 8));
            int v8 = v26;
          }
          uint64_t v26 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
          if (!v26)
          {
LABEL_40:
            uint64_t v26 = 0;
            goto LABEL_2;
          }
          goto LABEL_30;
        }
        v5 |= 1u;
        uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v18 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v19 = *(char *)v17;
        unint64_t v18 = v18 + (v19 << 7) - 128;
        if ((v19 & 0x80000000) == 0)
        {
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_29:
          uint64_t v26 = v17;
          *(void *)(a1 + 24) = v18;
          goto LABEL_30;
        }
        unint64_t v24 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v18);
        uint64_t v26 = v24;
        *(void *)(a1 + 24) = v25;
        if (!v24) {
          goto LABEL_40;
        }
      }
LABEL_30:
      if (sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    int v8 = (google::protobuf::internal *)((char *)v26 + 2);
LABEL_7:
    uint64_t v26 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

const google::protobuf::UnknownFieldSet *TSP::EncryptionBlockInfo::_InternalSerialize(TSP::EncryptionBlockInfo *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((void *)this + 3);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unint64_t v11 = v8 >> 7;
        ++a2;
        unint64_t v12 = v8 >> 14;
        v8 >>= 7;
      }
      while (v12);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v11;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_23;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v9 = *((void *)this + 4);
  *a2 = 16;
  if (v9 > 0x7F)
  {
    a2[1] = v9 | 0x80;
    unint64_t v10 = v9 >> 7;
    if (v9 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
        unint64_t v13 = v10 >> 7;
        ++a2;
        unint64_t v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      a2[2] = v10;
      a2 += 3;
    }
  }
  else
  {
    a2[1] = v9;
    a2 += 2;
  }
LABEL_23:
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::EncryptionBlockInfo::ByteSizeLong(TSP::EncryptionBlockInfo *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    char v2 = (const google::protobuf::UnknownFieldSet *)(((9 * (__clz(*((void *)this + 3) | 1) ^ 0x3F) + 73) >> 6) + 1);
    if ((v1 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  char v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_5:
  }
    char v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                   + ((9 * (__clz(*((void *)this + 4) | 1) ^ 0x3F) + 73) >> 6)
                                                   + 1);
LABEL_6:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::EncryptionBlockInfo *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v2;
  return (char *)v2;
}

void TSP::EncryptionBlockInfo::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::EncryptionBlockInfo::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::EncryptionBlockInfo::MergeFrom(void **this, const TSP::EncryptionBlockInfo *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      v3[3] = (void *)*((void *)a2 + 3);
    }
    if ((v5 & 2) != 0) {
      v3[4] = (void *)*((void *)a2 + 4);
    }
    *((_DWORD *)v3 + 4) |= v5;
  }
  return this;
}

void TSP::EncryptionBlockInfo::CopyFrom(TSP::EncryptionBlockInfo *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::EncryptionBlockInfo::Clear(this);
    TSP::EncryptionBlockInfo::MergeFrom((void **)this, a2);
  }
}

uint64_t TSP::EncryptionBlockInfo::IsInitialized(TSP::EncryptionBlockInfo *this)
{
  return *((_DWORD *)this + 4) & 1;
}

uint64_t TSP::EncryptionBlockInfo::GetMetadata(TSP::EncryptionBlockInfo *this)
{
  return off_1001E9C30[36];
}

void *TSP::ViewStateMetadata::ViewStateMetadata(void *a1, uint64_t a2)
{
  *a1 = off_1001C8910;
  a1[1] = a2;
  a1[4] = a2;
  a1[2] = 0;
  a1[3] = 0;
  a1[6] = a2;
  a1[10] = a2;
  a1[8] = 0;
  a1[9] = 0;
  a1[7] = 0;
  if (atomic_load_explicit(scc_info_ViewStateMetadata_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ViewStateMetadata_TSPArchiveMessages_2eproto);
  }
  a1[12] = 0;
  a1[13] = 0;
  return a1;
}

void sub_10004834C(_Unwind_Exception *a1)
{
  if (*(int *)(v2 + 76) >= 1) {
    sub_100163A7C(v5);
  }
  sub_10004FEF4(v3);
  sub_100163A5C(v4, v1);
  _Unwind_Resume(a1);
}

void TSP::ViewStateMetadata::~ViewStateMetadata(TSP::ViewStateMetadata *this)
{
  if (this != (TSP::ViewStateMetadata *)TSP::_ViewStateMetadata_default_instance_)
  {
    uint64_t v2 = (TSP::ComponentInfo *)*((void *)this + 12);
    if (v2)
    {
      TSP::ComponentInfo::~ComponentInfo(v2);
      operator delete();
    }
    uint64_t v3 = (TSP::UUID *)*((void *)this + 13);
    if (v3)
    {
      TSP::UUID::~UUID(v3);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  if (*((int *)this + 19) >= 1)
  {
    uint64_t v4 = *((void *)this + 10);
    uint64_t v6 = *(void *)(v4 - 8);
    int v5 = (void *)(v4 - 8);
    if (!v6) {
      operator delete(v5);
    }
  }
  sub_10004FEF4((void *)this + 6);
  if (*((int *)this + 7) >= 1)
  {
    uint64_t v7 = *((void *)this + 4);
    uint64_t v9 = *(void *)(v7 - 8);
    unint64_t v8 = (void *)(v7 - 8);
    if (!v9) {
      operator delete(v8);
    }
  }
}

{
  uint64_t vars8;

  TSP::ViewStateMetadata::~ViewStateMetadata(this);
  operator delete();
}

uint64_t TSP::ViewStateMetadata::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ViewStateMetadata::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  *((_DWORD *)this + 6) = 0;
  uint64_t v2 = *((unsigned int *)this + 14);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::Arena ***)((char *)this[8] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::ObjectUUIDMapEntry::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 56) = 0;
  }
  *(_DWORD *)(v1 + 7sub_1000506C0((void *)this + 2) = 0;
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      this = TSP::ComponentInfo::Clear(*(google::protobuf::Arena ***)(v1 + 96));
    }
    if ((v5 & 2) != 0) {
      this = TSP::UUID::Clear(*(TSP::UUID **)(v1 + 104));
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_100035820((unint64_t *)v6);
  }
  return this;
}

google::protobuf::internal *TSP::ViewStateMetadata::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v30 = a2;
  if ((sub_1000355B8(a3, &v30, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      char v7 = (google::protobuf::internal *)((char *)v30 + 1);
      unsigned int v8 = *(unsigned __int8 *)v30;
      if (*(char *)v30 < 0)
      {
        unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*(char *)v7 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v30, (const char *)(v9 - 128));
          unsigned int v30 = TagFallback;
          if (!TagFallback) {
            return 0;
          }
          char v7 = TagFallback;
          unsigned int v8 = v25;
          goto LABEL_8;
        }
        char v7 = (google::protobuf::internal *)((char *)v30 + 2);
      }
      unsigned int v30 = v7;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 == 10)
          {
            unint64_t v10 = (unsigned int *)(a1 + 24);
            goto LABEL_38;
          }
          if (v8 != 8) {
            goto LABEL_47;
          }
          int v26 = sub_100038CA0(&v30);
          sub_100038D00(a1, v26);
          goto LABEL_45;
        case 3u:
          if (v8 != 26) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 96);
          if (!v11)
          {
            unint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
            if (*v6) {
              unint64_t v12 = (void *)*v12;
            }
            uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentInfo>(v12);
            *(void *)(a1 + 96) = v11;
            char v7 = v30;
          }
          unint64_t v13 = sub_1000411C8(a3, v11, v7);
          goto LABEL_54;
        case 4u:
          if (v8 != 34) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v14 = *(void *)(a1 + 104);
          if (!v14)
          {
            uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
            if (*v6) {
              uint64_t v15 = (void *)*v15;
            }
            uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v15);
            *(void *)(a1 + 104) = v14;
            char v7 = v30;
          }
          unint64_t v13 = sub_10003F83C(a3, v14, v7);
          goto LABEL_54;
        case 5u:
          if (v8 != 42) {
            goto LABEL_47;
          }
          int v16 = (google::protobuf::internal *)((char *)v7 - 1);
          while (1)
          {
            uint64_t v17 = (google::protobuf::internal *)((char *)v16 + 1);
            unsigned int v30 = (google::protobuf::internal *)((char *)v16 + 1);
            unint64_t v18 = *(int **)(a1 + 64);
            if (!v18) {
              break;
            }
            uint64_t v19 = *(int *)(a1 + 56);
            int v20 = *v18;
            if ((int)v19 >= *v18)
            {
              if (v20 == *(_DWORD *)(a1 + 60))
              {
LABEL_30:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v20 + 1);
                unint64_t v18 = *(int **)(a1 + 64);
                int v20 = *v18;
              }
              *unint64_t v18 = v20 + 1;
              uint64_t v21 = google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectUUIDMapEntry>(*(void *)(a1 + 48));
              uint64_t v22 = *(void *)(a1 + 64);
              uint64_t v23 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v23 + 1;
              *(void *)(v22 + 8 * v23 + 8) = v21;
              uint64_t v17 = v30;
              goto LABEL_32;
            }
            *(_DWORD *)(a1 + 56) = v19 + 1;
            uint64_t v21 = *(void *)&v18[2 * v19 + 2];
LABEL_32:
            int v16 = sub_10003C680(a3, v21, v17);
            unsigned int v30 = v16;
            if (!v16) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v16 || *(unsigned char *)v16 != 42) {
              goto LABEL_55;
            }
          }
          int v20 = *(_DWORD *)(a1 + 60);
          goto LABEL_30;
        case 6u:
          if (v8 == 50)
          {
            unint64_t v10 = (unsigned int *)(a1 + 72);
LABEL_38:
            unint64_t v13 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt32Parser(v10, v7, a3);
LABEL_54:
            unsigned int v30 = v13;
            if (!v13) {
              return 0;
            }
            goto LABEL_55;
          }
          if (v8 != 48)
          {
LABEL_47:
            if (v8) {
              BOOL v28 = (v8 & 7) == 4;
            }
            else {
              BOOL v28 = 1;
            }
            if (v28)
            {
              *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v8 - 1;
              return v30;
            }
            if (*v6)
            {
              uint64_t v29 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              uint64_t v29 = sub_10003562C((unint64_t *)(a1 + 8));
              char v7 = v30;
            }
            unint64_t v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v29, v7);
            goto LABEL_54;
          }
          int v27 = sub_100038CA0(&v30);
          sub_10003A6CC(a1, v27);
LABEL_45:
          if (!v30) {
            return 0;
          }
LABEL_55:
          if (sub_1000355B8(a3, &v30, *(_DWORD *)(a3 + 92))) {
            return v30;
          }
          break;
        default:
          goto LABEL_47;
      }
    }
  }
  return v30;
}

const google::protobuf::UnknownFieldSet *TSP::ViewStateMetadata::_InternalSerialize(TSP::ViewStateMetadata *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = (unsigned __int8 *)a2;
  uint64_t v6 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 10);
  if ((int)v6 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 1, (int *)this + 6, v6, (unsigned __int8 *)a2, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  int v7 = *((_DWORD *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned int v8 = (TSP::ComponentInfo *)*((void *)this + 12);
    unsigned __int8 *v4 = 26;
    unsigned int v9 = *((_DWORD *)v8 + 5);
    if (v9 > 0x7F)
    {
      v4[1] = v9 | 0x80;
      unsigned int v11 = v9 >> 7;
      if (v9 >> 14)
      {
        unint64_t v10 = v4 + 3;
        do
        {
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
          unsigned int v12 = v11 >> 7;
          ++v10;
          unsigned int v13 = v11 >> 14;
          v11 >>= 7;
        }
        while (v13);
        *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
      }
      else
      {
        v4[2] = v11;
        unint64_t v10 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v9;
      unint64_t v10 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)TSP::ComponentInfo::_InternalSerialize(v8, v10, a3);
  }
  if ((v7 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v14 = (TSP::UUID *)*((void *)this + 13);
    unsigned __int8 *v4 = 34;
    unsigned int v15 = *((_DWORD *)v14 + 5);
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unsigned int v17 = v15 >> 7;
      if (v15 >> 14)
      {
        int v16 = v4 + 3;
        do
        {
          *(v16 - sub_1000333D0((uint64_t *)this + 1) = v17 | 0x80;
          unsigned int v18 = v17 >> 7;
          ++v16;
          unsigned int v19 = v17 >> 14;
          v17 >>= 7;
        }
        while (v19);
        *(v16 - sub_1000333D0((uint64_t *)this + 1) = v18;
      }
      else
      {
        v4[2] = v17;
        int v16 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v15;
      int v16 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v14, v16, a3, v6);
  }
  int v20 = *((_DWORD *)this + 14);
  if (v20)
  {
    for (int i = 0; i != v20; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      uint64_t v22 = *(TSP::ObjectUUIDMapEntry **)(*((void *)this + 8) + 8 * i + 8);
      unsigned __int8 *v4 = 42;
      unsigned int v23 = *((_DWORD *)v22 + 5);
      if (v23 > 0x7F)
      {
        v4[1] = v23 | 0x80;
        unsigned int v25 = v23 >> 7;
        if (v23 >> 14)
        {
          unint64_t v24 = v4 + 3;
          do
          {
            *(v24 - sub_1000333D0((uint64_t *)this + 1) = v25 | 0x80;
            unsigned int v26 = v25 >> 7;
            ++v24;
            unsigned int v27 = v25 >> 14;
            v25 >>= 7;
          }
          while (v27);
          *(v24 - sub_1000333D0((uint64_t *)this + 1) = v26;
        }
        else
        {
          v4[2] = v25;
          unint64_t v24 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v23;
        unint64_t v24 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)TSP::ObjectUUIDMapEntry::_InternalSerialize(v22, v24, a3, v6);
    }
  }
  BOOL v28 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 22);
  if ((int)v28 > 0) {
    uint64_t v4 = sub_10004F9AC(a3, 6, (int *)this + 18, v28, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  uint64_t v29 = *((void *)this + 1);
  if ((v29 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v29 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, v28);
}

char *TSP::ViewStateMetadata::ByteSizeLong(TSP::ViewStateMetadata *this)
{
  if (*((unsigned char *)this + 16))
  {
    uint64_t v3 = TSP::ComponentInfo::ByteSizeLong(*((TSP::ComponentInfo **)this + 12));
    uint64_t v2 = (uint64_t)&v3[((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 6);
  uint64_t v5 = 11;
  uint64_t v6 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v4 >= 0) {
    uint64_t v5 = v6;
  }
  uint64_t v7 = v5 + v2;
  if (v4) {
    int v8 = v4;
  }
  else {
    int v8 = 0;
  }
  if (!v4) {
    uint64_t v7 = v2;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v8;
  uint64_t v9 = v7 + v4;
  uint64_t v10 = *((int *)this + 14);
  uint64_t v11 = v9 + v10;
  uint64_t v12 = *((void *)this + 8);
  if (v12) {
    unsigned int v13 = (TSP::UUID ***)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      unsigned int v15 = *v13++;
      int v16 = TSP::ObjectUUIDMapEntry::ByteSizeLong(v15);
      v11 += (uint64_t)&v16[(9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6];
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 18);
  uint64_t v18 = 11;
  uint64_t v19 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v17 >= 0) {
    uint64_t v18 = v19;
  }
  uint64_t v20 = v18 + v11;
  if (v17) {
    int v21 = v17;
  }
  else {
    int v21 = 0;
  }
  if (!v17) {
    uint64_t v20 = v11;
  }
  *((_DWORD *)this + 2sub_1000506C0((void *)this + 2) = v21;
  uint64_t v22 = (const google::protobuf::UnknownFieldSet *)(v20 + v17);
  if ((*((unsigned char *)this + 16) & 2) != 0)
  {
    unsigned int v23 = TSP::UUID::ByteSizeLong(*((TSP::UUID **)this + 13));
    uint64_t v22 = (const google::protobuf::UnknownFieldSet *)&v23[((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6)
                                                        + 1
                                                        + (void)v22];
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::ViewStateMetadata *)((char *)this + 8), v22, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v22;
    return (char *)v22;
  }
}

void TSP::ViewStateMetadata::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ViewStateMetadata::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::ViewStateMetadata::MergeFrom(void **this, const TSP::ViewStateMetadata *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    uint64_t v7 = *((int *)v3 + 6);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)v3 + 6, v7 + v6);
    int v8 = (char *)v3[4];
    *((_DWORD *)v3 + 6) += *((_DWORD *)a2 + 6);
    this = (void **)memcpy(&v8[4 * v7], *((const void **)a2 + 4), 4 * *((int *)a2 + 6));
  }
  unsigned int v9 = *((_DWORD *)a2 + 14);
  if (v9)
  {
    uint64_t v10 = (TSP::ObjectUUIDMapEntry **)(*((void *)a2 + 8) + 8);
    uint64_t v11 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 6), *((_DWORD *)a2 + 14));
    this = sub_100050174(v3 + 6, (void ***)v11, v10, v9, *(_DWORD *)v3[8] - *((_DWORD *)v3 + 14));
    signed int v12 = *((_DWORD *)v3 + 14) + v9;
    *((_DWORD *)v3 + 14) = v12;
    unsigned int v13 = (signed int *)v3[8];
    if (*v13 < v12) {
      *unsigned int v13 = v12;
    }
  }
  int v14 = *((_DWORD *)a2 + 18);
  if (v14)
  {
    uint64_t v15 = *((int *)v3 + 18);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)v3 + 18, v15 + v14);
    int v16 = (char *)v3[10];
    *((_DWORD *)v3 + 18) += *((_DWORD *)a2 + 18);
    this = (void **)memcpy(&v16[4 * v15], *((const void **)a2 + 10), 4 * *((int *)a2 + 18));
  }
  int v17 = *((_DWORD *)a2 + 4);
  if ((v17 & 3) != 0)
  {
    if (v17)
    {
      *((_DWORD *)v3 + 4) |= 1u;
      uint64_t v18 = (unint64_t *)v3[12];
      if (!v18)
      {
        uint64_t v19 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          uint64_t v19 = (void *)*v19;
        }
        uint64_t v18 = (unint64_t *)google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentInfo>(v19);
        v3[12] = v18;
      }
      if (*((void *)a2 + 12)) {
        uint64_t v20 = (const TSP::ComponentInfo *)*((void *)a2 + 12);
      }
      else {
        uint64_t v20 = (const TSP::ComponentInfo *)&TSP::_ComponentInfo_default_instance_;
      }
      this = (void **)TSP::ComponentInfo::MergeFrom(v18, v20);
    }
    if ((v17 & 2) != 0)
    {
      *((_DWORD *)v3 + 4) |= 2u;
      int v21 = (void **)v3[13];
      if (!v21)
      {
        uint64_t v22 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          uint64_t v22 = (void *)*v22;
        }
        int v21 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v22);
        v3[13] = v21;
      }
      if (*((void *)a2 + 13)) {
        unsigned int v23 = (const TSP::UUID *)*((void *)a2 + 13);
      }
      else {
        unsigned int v23 = (const TSP::UUID *)&TSP::_UUID_default_instance_;
      }
      return TSP::UUID::MergeFrom(v21, v23);
    }
  }
  return this;
}

void TSP::ViewStateMetadata::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::ViewStateMetadata::Clear(this);
    TSP::ViewStateMetadata::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::ViewStateMetadata::IsInitialized(TSP::ViewStateMetadata *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 0;
  }
  uint64_t result = sub_10003DD08((uint64_t)this + 48);
  if (result)
  {
    int v3 = *((_DWORD *)this + 4);
    if (v3)
    {
      uint64_t result = TSP::ComponentInfo::IsInitialized(*((TSP::ComponentInfo **)this + 12));
      if (!result) {
        return result;
      }
      int v3 = *((_DWORD *)this + 4);
    }
    if ((v3 & 2) == 0) {
      return 1;
    }
    uint64_t result = TSP::UUID::IsInitialized(*((TSP::UUID **)this + 13));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t TSP::ViewStateMetadata::GetMetadata(TSP::ViewStateMetadata *this)
{
  return off_1001E9C30[38];
}

uint64_t TSP::ObjectSerializationMetadata::ObjectSerializationMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C89C0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 3sub_1000506C0((void *)this + 2) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 7sub_1000506C0((void *)this + 2) = a2;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_ObjectSerializationMetadata_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ObjectSerializationMetadata_TSPArchiveMessages_2eproto);
  }
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0u;
  return a1;
}

void sub_100049154(_Unwind_Exception *a1)
{
  if (*(int *)(v3 + 100) >= 1) {
    sub_100163A7C(v6);
  }
  sub_10004FEF4(v5);
  sub_1000504C0(v2);
  sub_100163A5C(v4, v1);
  _Unwind_Resume(a1);
}

void TSP::ObjectSerializationMetadata::~ObjectSerializationMetadata(TSP::ObjectSerializationMetadata *this)
{
  sub_10004921C(this);
  sub_1000333D0((uint64_t *)this + 1);
  if (*((int *)this + 25) >= 1)
  {
    uint64_t v2 = *((void *)this + 13);
    uint64_t v4 = *(void *)(v2 - 8);
    uint64_t v3 = (void *)(v2 - 8);
    if (!v4) {
      operator delete(v3);
    }
  }
  sub_10004FEF4((void *)this + 9);
  sub_1000504C0((void *)this + 6);
  if (*((int *)this + 7) >= 1)
  {
    uint64_t v5 = *((void *)this + 4);
    uint64_t v7 = *(void *)(v5 - 8);
    int v6 = (void *)(v5 - 8);
    if (!v7) {
      operator delete(v6);
    }
  }
}

{
  uint64_t vars8;

  TSP::ObjectSerializationMetadata::~ObjectSerializationMetadata(this);
  operator delete();
}

void *sub_10004921C(void *result)
{
  if (result != (void *)&TSP::_ObjectSerializationMetadata_default_instance_)
  {
    uint64_t v1 = result;
    uint64_t v2 = (TSP::UUID *)result[15];
    if (v2)
    {
      TSP::UUID::~UUID(v2);
      operator delete();
    }
    uint64_t v3 = (TSP::UUID *)v1[16];
    if (v3)
    {
      TSP::UUID::~UUID(v3);
      operator delete();
    }
    uint64_t v4 = (TSP::ComponentInfo *)v1[17];
    if (v4)
    {
      TSP::ComponentInfo::~ComponentInfo(v4);
      operator delete();
    }
    uint64_t result = (void *)v1[18];
    if (result)
    {
      TSP::Reference::~Reference((TSP::Reference *)result);
      operator delete();
    }
  }
  return result;
}

uint64_t TSP::ObjectSerializationMetadata::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ObjectSerializationMetadata::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  *((_DWORD *)this + 6) = 0;
  uint64_t v2 = *((unsigned int *)this + 14);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::Arena ***)((char *)this[8] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::DataInfo::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 80);
  if ((int)v5 >= 1)
  {
    int v6 = (google::protobuf::Arena ***)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      this = TSP::ObjectUUIDMapEntry::Clear(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  }
  *(_DWORD *)(v1 + 96) = 0;
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_15;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_20:
    this = TSP::UUID::Clear(*(TSP::UUID **)(v1 + 128));
    if ((v8 & 4) == 0)
    {
LABEL_13:
      if ((v8 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  this = TSP::UUID::Clear(*(TSP::UUID **)(v1 + 120));
  if ((v8 & 2) != 0) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v8 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_21:
  this = TSP::ComponentInfo::Clear(*(google::protobuf::Arena ***)(v1 + 136));
  if ((v8 & 8) != 0) {
LABEL_14:
  }
    this = TSP::Reference::Clear(*(TSP::Reference **)(v1 + 144));
LABEL_15:
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_100035820((unint64_t *)v9);
  }
  return this;
}

google::protobuf::internal *TSP::ObjectSerializationMetadata::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  unint64_t v41 = a2;
  if ((sub_1000355B8((uint64_t)a3, &v41, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = (google::protobuf::internal *)((char *)v41 + 1);
      unsigned int v8 = *(unsigned __int8 *)v41;
      if (*(char *)v41 < 0)
      {
        unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*(char *)v7 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v41, (const char *)(v9 - 128));
          unint64_t v41 = TagFallback;
          if (!TagFallback) {
            return 0;
          }
          uint64_t v7 = TagFallback;
          unsigned int v8 = v12;
          goto LABEL_8;
        }
        uint64_t v7 = (google::protobuf::internal *)((char *)v41 + 2);
      }
      unint64_t v41 = v7;
LABEL_8:
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 == 10)
          {
            char v10 = (unsigned int *)(a1 + 24);
            goto LABEL_65;
          }
          if (v8 != 8) {
            goto LABEL_72;
          }
          int v37 = sub_100038CA0(&v41);
          sub_100038D00(a1, v37);
          goto LABEL_70;
        case 2u:
          if (v8 != 18) {
            goto LABEL_72;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v13 = *(void *)(a1 + 120);
          if (v13) {
            goto LABEL_24;
          }
          int v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
          if (*v6) {
            int v14 = (void *)*v14;
          }
          uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v14);
          *(void *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v13;
          goto LABEL_23;
        case 3u:
          if (v8 != 26) {
            goto LABEL_72;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v13 = *(void *)(a1 + 128);
          if (v13) {
            goto LABEL_24;
          }
          uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
          if (*v6) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v13 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v15);
          *(void *)(a1 + 128) = v13;
LABEL_23:
          uint64_t v7 = v41;
LABEL_24:
          int v16 = sub_10003F83C((uint64_t)a3, v13, v7);
          goto LABEL_79;
        case 4u:
          if (v8 != 34) {
            goto LABEL_72;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v17 = *(void *)(a1 + 136);
          if (!v17)
          {
            uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
            if (*v6) {
              uint64_t v18 = (void *)*v18;
            }
            uint64_t v17 = google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentInfo>(v18);
            *(void *)(a1 + 136) = v17;
            uint64_t v7 = v41;
          }
          int v16 = sub_1000411C8((uint64_t)a3, v17, v7);
          goto LABEL_79;
        case 5u:
          if (v8 != 42) {
            goto LABEL_72;
          }
          uint64_t v19 = (google::protobuf::internal *)((char *)v7 - 1);
          while (1)
          {
            uint64_t v20 = (google::protobuf::internal *)((char *)v19 + 1);
            unint64_t v41 = (google::protobuf::internal *)((char *)v19 + 1);
            int v21 = *(int **)(a1 + 64);
            if (!v21) {
              break;
            }
            uint64_t v22 = *(int *)(a1 + 56);
            int v23 = *v21;
            if ((int)v22 >= *v21)
            {
              if (v23 == *(_DWORD *)(a1 + 60))
              {
LABEL_38:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v23 + 1);
                int v21 = *(int **)(a1 + 64);
                int v23 = *v21;
              }
              *int v21 = v23 + 1;
              uint64_t v24 = google::protobuf::Arena::CreateMaybeMessage<TSP::DataInfo>(*(void *)(a1 + 48));
              uint64_t v25 = *(void *)(a1 + 64);
              uint64_t v26 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 56) = v26 + 1;
              *(void *)(v25 + 8 * v26 + 8) = v24;
              uint64_t v20 = v41;
              goto LABEL_40;
            }
            *(_DWORD *)(a1 + 56) = v22 + 1;
            uint64_t v24 = *(void *)&v21[2 * v22 + 2];
LABEL_40:
            uint64_t v19 = sub_100041298(a3, v24, v20);
            unint64_t v41 = v19;
            if (!v19) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v19 || *(unsigned char *)v19 != 42) {
              goto LABEL_80;
            }
          }
          int v23 = *(_DWORD *)(a1 + 60);
          goto LABEL_38;
        case 6u:
          if (v8 != 50) {
            goto LABEL_72;
          }
          unsigned int v27 = (google::protobuf::internal *)((char *)v7 - 1);
          while (1)
          {
            BOOL v28 = (google::protobuf::internal *)((char *)v27 + 1);
            unint64_t v41 = (google::protobuf::internal *)((char *)v27 + 1);
            uint64_t v29 = *(int **)(a1 + 88);
            if (!v29) {
              break;
            }
            uint64_t v30 = *(int *)(a1 + 80);
            int v31 = *v29;
            if ((int)v30 >= *v29)
            {
              if (v31 == *(_DWORD *)(a1 + 84))
              {
LABEL_51:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v31 + 1);
                uint64_t v29 = *(int **)(a1 + 88);
                int v31 = *v29;
              }
              int *v29 = v31 + 1;
              uint64_t v32 = google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectUUIDMapEntry>(*(void *)(a1 + 72));
              uint64_t v33 = *(void *)(a1 + 88);
              uint64_t v34 = *(int *)(a1 + 80);
              *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v34 + 1;
              *(void *)(v33 + 8 * v34 + 8) = v32;
              BOOL v28 = v41;
              goto LABEL_53;
            }
            *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v30 + 1;
            uint64_t v32 = *(void *)&v29[2 * v30 + 2];
LABEL_53:
            unsigned int v27 = sub_10003C680((uint64_t)a3, v32, v28);
            unint64_t v41 = v27;
            if (!v27) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v27 || *(unsigned char *)v27 != 50) {
              goto LABEL_80;
            }
          }
          int v31 = *(_DWORD *)(a1 + 84);
          goto LABEL_51;
        case 7u:
          if (v8 != 58) {
            goto LABEL_72;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v35 = *(void *)(a1 + 144);
          if (!v35)
          {
            unint64_t v36 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
            if (*v6) {
              unint64_t v36 = (void *)*v36;
            }
            uint64_t v35 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v36);
            *(void *)(a1 + 144) = v35;
            uint64_t v7 = v41;
          }
          int v16 = sub_100034100((uint64_t)a3, v35, v7);
          goto LABEL_79;
        case 8u:
          if (v8 == 66)
          {
            char v10 = (unsigned int *)(a1 + 96);
LABEL_65:
            int v16 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt32Parser(v10, v7, (uint64_t)a3);
LABEL_79:
            unint64_t v41 = v16;
            if (!v16) {
              return 0;
            }
            goto LABEL_80;
          }
          if (v8 != 64)
          {
LABEL_72:
            if (v8) {
              BOOL v39 = (v8 & 7) == 4;
            }
            else {
              BOOL v39 = 1;
            }
            if (v39)
            {
              a3[10].i32[0] = v8 - 1;
              return v41;
            }
            if (*v6)
            {
              unsigned __int8 v40 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              unsigned __int8 v40 = sub_10003562C((unint64_t *)(a1 + 8));
              uint64_t v7 = v41;
            }
            int v16 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v40, v7);
            goto LABEL_79;
          }
          int v38 = sub_100038CA0(&v41);
          sub_100041368(a1, v38);
LABEL_70:
          if (!v41) {
            return 0;
          }
LABEL_80:
          if (sub_1000355B8((uint64_t)a3, &v41, a3[11].i32[1])) {
            return v41;
          }
          break;
        default:
          goto LABEL_72;
      }
    }
  }
  return v41;
}

const google::protobuf::UnknownFieldSet *TSP::ObjectSerializationMetadata::_InternalSerialize(TSP::ObjectSerializationMetadata *this, google::protobuf::UnknownFieldSet *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = (unsigned __int8 *)a2;
  int v6 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 10);
  if ((int)v6 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 1, (int *)this + 6, v6, (unsigned __int8 *)a2, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  int v7 = *((_DWORD *)this + 4);
  if (v7)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unsigned int v8 = (TSP::UUID *)*((void *)this + 15);
    unsigned __int8 *v4 = 18;
    unsigned int v9 = *((_DWORD *)v8 + 5);
    if (v9 > 0x7F)
    {
      v4[1] = v9 | 0x80;
      unsigned int v11 = v9 >> 7;
      if (v9 >> 14)
      {
        char v10 = v4 + 3;
        do
        {
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
          unsigned int v12 = v11 >> 7;
          ++v10;
          unsigned int v13 = v11 >> 14;
          v11 >>= 7;
        }
        while (v13);
        *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
      }
      else
      {
        v4[2] = v11;
        char v10 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v9;
      char v10 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v8, v10, a3, v6);
    if ((v7 & 2) == 0)
    {
LABEL_5:
      if ((v7 & 4) == 0) {
        goto LABEL_37;
      }
      goto LABEL_27;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_5;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  int v14 = (TSP::UUID *)*((void *)this + 16);
  unsigned __int8 *v4 = 26;
  unsigned int v15 = *((_DWORD *)v14 + 5);
  if (v15 > 0x7F)
  {
    v4[1] = v15 | 0x80;
    unsigned int v17 = v15 >> 7;
    if (v15 >> 14)
    {
      int v16 = v4 + 3;
      do
      {
        *(v16 - sub_1000333D0((uint64_t *)this + 1) = v17 | 0x80;
        unsigned int v18 = v17 >> 7;
        ++v16;
        unsigned int v19 = v17 >> 14;
        v17 >>= 7;
      }
      while (v19);
      *(v16 - sub_1000333D0((uint64_t *)this + 1) = v18;
    }
    else
    {
      v4[2] = v17;
      int v16 = v4 + 3;
    }
  }
  else
  {
    v4[1] = v15;
    int v16 = v4 + 2;
  }
  uint64_t v4 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v14, v16, a3, v6);
  if ((v7 & 4) != 0)
  {
LABEL_27:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v20 = (TSP::ComponentInfo *)*((void *)this + 17);
    unsigned __int8 *v4 = 34;
    unsigned int v21 = *((_DWORD *)v20 + 5);
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unsigned int v23 = v21 >> 7;
      if (v21 >> 14)
      {
        uint64_t v22 = v4 + 3;
        do
        {
          *(v22 - sub_1000333D0((uint64_t *)this + 1) = v23 | 0x80;
          unsigned int v24 = v23 >> 7;
          ++v22;
          unsigned int v25 = v23 >> 14;
          v23 >>= 7;
        }
        while (v25);
        *(v22 - sub_1000333D0((uint64_t *)this + 1) = v24;
      }
      else
      {
        v4[2] = v23;
        uint64_t v22 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v21;
      uint64_t v22 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)TSP::ComponentInfo::_InternalSerialize(v20, v22, a3);
  }
LABEL_37:
  int v26 = *((_DWORD *)this + 14);
  if (v26)
  {
    for (int i = 0; i != v26; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      BOOL v28 = *(TSP::DataInfo **)(*((void *)this + 8) + 8 * i + 8);
      unsigned __int8 *v4 = 42;
      unsigned int v29 = *((_DWORD *)v28 + 5);
      if (v29 > 0x7F)
      {
        v4[1] = v29 | 0x80;
        unsigned int v31 = v29 >> 7;
        if (v29 >> 14)
        {
          uint64_t v30 = v4 + 3;
          do
          {
            *(v30 - sub_1000333D0((uint64_t *)this + 1) = v31 | 0x80;
            unsigned int v32 = v31 >> 7;
            ++v30;
            unsigned int v33 = v31 >> 14;
            v31 >>= 7;
          }
          while (v33);
          *(v30 - sub_1000333D0((uint64_t *)this + 1) = v32;
        }
        else
        {
          v4[2] = v31;
          uint64_t v30 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v29;
        uint64_t v30 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)TSP::DataInfo::_InternalSerialize(v28, v30, a3);
    }
  }
  int v34 = *((_DWORD *)this + 20);
  if (v34)
  {
    for (int j = 0; j != v34; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unint64_t v36 = *(TSP::ObjectUUIDMapEntry **)(*((void *)this + 11) + 8 * j + 8);
      unsigned __int8 *v4 = 50;
      unsigned int v37 = *((_DWORD *)v36 + 5);
      if (v37 > 0x7F)
      {
        v4[1] = v37 | 0x80;
        unsigned int v39 = v37 >> 7;
        if (v37 >> 14)
        {
          int v38 = v4 + 3;
          do
          {
            *(v38 - sub_1000333D0((uint64_t *)this + 1) = v39 | 0x80;
            unsigned int v40 = v39 >> 7;
            ++v38;
            unsigned int v41 = v39 >> 14;
            v39 >>= 7;
          }
          while (v41);
          *(v38 - sub_1000333D0((uint64_t *)this + 1) = v40;
        }
        else
        {
          v4[2] = v39;
          int v38 = v4 + 3;
        }
      }
      else
      {
        v4[1] = v37;
        int v38 = v4 + 2;
      }
      uint64_t v4 = (unsigned __int8 *)TSP::ObjectUUIDMapEntry::_InternalSerialize(v36, v38, a3, v6);
    }
  }
  if ((v7 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v42 = (TSP::Reference *)*((void *)this + 18);
    unsigned __int8 *v4 = 58;
    unsigned int v43 = *((_DWORD *)v42 + 5);
    if (v43 > 0x7F)
    {
      v4[1] = v43 | 0x80;
      unsigned int v45 = v43 >> 7;
      if (v43 >> 14)
      {
        unint64_t v44 = v4 + 3;
        do
        {
          *(v44 - sub_1000333D0((uint64_t *)this + 1) = v45 | 0x80;
          unsigned int v46 = v45 >> 7;
          ++v44;
          unsigned int v47 = v45 >> 14;
          v45 >>= 7;
        }
        while (v47);
        *(v44 - sub_1000333D0((uint64_t *)this + 1) = v46;
      }
      else
      {
        v4[2] = v45;
        unint64_t v44 = v4 + 3;
      }
    }
    else
    {
      v4[1] = v43;
      unint64_t v44 = v4 + 2;
    }
    uint64_t v4 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v42, v44, a3, v6);
  }
  unint64_t v48 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 28);
  if ((int)v48 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 8, (int *)this + 24, v48, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  uint64_t v49 = *((void *)this + 1);
  if ((v49 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v49 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, v48);
}

char *TSP::ObjectSerializationMetadata::ByteSizeLong(TSP::ObjectSerializationMetadata *this)
{
  if ((*((unsigned char *)this + 16) & 4) != 0)
  {
    uint64_t v3 = TSP::ComponentInfo::ByteSizeLong(*((TSP::ComponentInfo **)this + 17));
    uint64_t v2 = (uint64_t)&v3[((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 6);
  uint64_t v5 = 11;
  uint64_t v6 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v4 >= 0) {
    uint64_t v5 = v6;
  }
  uint64_t v7 = v5 + v2;
  if (v4) {
    int v8 = v4;
  }
  else {
    int v8 = 0;
  }
  if (!v4) {
    uint64_t v7 = v2;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v8;
  uint64_t v9 = v7 + v4;
  uint64_t v10 = *((int *)this + 14);
  uint64_t v11 = v9 + v10;
  uint64_t v12 = *((void *)this + 8);
  if (v12) {
    unsigned int v13 = (TSP::DataInfo **)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      unsigned int v15 = *v13++;
      int v16 = TSP::DataInfo::ByteSizeLong(v15);
      v11 += (uint64_t)&v16[(9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6];
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *((int *)this + 20);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *((void *)this + 11);
  if (v19) {
    uint64_t v20 = (TSP::UUID ***)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      unsigned int v23 = TSP::ObjectUUIDMapEntry::ByteSizeLong(v22);
      v18 += (uint64_t)&v23[(9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6];
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 24);
  uint64_t v25 = 11;
  uint64_t v26 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((int)v24 >= 0) {
    uint64_t v25 = v26;
  }
  uint64_t v27 = v25 + v18;
  if (v24) {
    int v28 = v24;
  }
  else {
    int v28 = 0;
  }
  if (!v24) {
    uint64_t v27 = v18;
  }
  *((_DWORD *)this + 28) = v28;
  unsigned int v29 = (const google::protobuf::UnknownFieldSet *)(v27 + v24);
  int v30 = *((_DWORD *)this + 4);
  if ((v30 & 3) != 0)
  {
    if (v30)
    {
      unsigned int v31 = TSP::UUID::ByteSizeLong(*((TSP::UUID **)this + 15));
      unsigned int v29 = (const google::protobuf::UnknownFieldSet *)&v31[((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v29];
    }
    if ((v30 & 2) != 0)
    {
      unsigned int v32 = TSP::UUID::ByteSizeLong(*((TSP::UUID **)this + 16));
      unsigned int v29 = (const google::protobuf::UnknownFieldSet *)&v32[((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v29];
    }
  }
  if ((v30 & 8) != 0)
  {
    unsigned int v33 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 18));
    unsigned int v29 = (const google::protobuf::UnknownFieldSet *)&v33[((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6)
                                                        + 1
                                                        + (void)v29];
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::ObjectSerializationMetadata *)((char *)this + 8), v29, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v29;
    return (char *)v29;
  }
}

void TSP::ObjectSerializationMetadata::MergeFrom(TSP::ObjectSerializationMetadata *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ObjectSerializationMetadata::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void TSP::ObjectSerializationMetadata::MergeFrom(TSP::ObjectSerializationMetadata *this, const TSP::ObjectSerializationMetadata *a2)
{
  uint64_t v4 = (void *)((char *)this + 8);
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    uint64_t v7 = *((int *)this + 6);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)this + 6, v7 + v6);
    uint64_t v8 = *((void *)this + 4);
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
    memcpy((void *)(v8 + 4 * v7), *((const void **)a2 + 4), 4 * *((int *)a2 + 6));
  }
  unsigned int v9 = *((_DWORD *)a2 + 14);
  if (v9)
  {
    uint64_t v10 = (TSP::DataInfo **)(*((void *)a2 + 8) + 8);
    uint64_t v11 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((TSP::ObjectSerializationMetadata *)((char *)this + 48), *((_DWORD *)a2 + 14));
    sub_100050600((uint64_t *)this + 6, (TSP::DataInfo **)v11, v10, v9, **((_DWORD **)this + 8) - *((_DWORD *)this + 14));
    signed int v12 = *((_DWORD *)this + 14) + v9;
    *((_DWORD *)this + 14) = v12;
    unsigned int v13 = (signed int *)*((void *)this + 8);
    if (*v13 < v12) {
      *unsigned int v13 = v12;
    }
  }
  unsigned int v14 = *((_DWORD *)a2 + 20);
  if (v14)
  {
    unsigned int v15 = (TSP::ObjectUUIDMapEntry **)(*((void *)a2 + 11) + 8);
    int v16 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((TSP::ObjectSerializationMetadata *)((char *)this + 72), *((_DWORD *)a2 + 20));
    sub_100050174((void **)this + 9, (void ***)v16, v15, v14, **((_DWORD **)this + 11) - *((_DWORD *)this + 20));
    signed int v17 = *((_DWORD *)this + 20) + v14;
    *((_DWORD *)this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v17;
    uint64_t v18 = (signed int *)*((void *)this + 11);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *((_DWORD *)a2 + 24);
  if (v19)
  {
    uint64_t v20 = *((int *)this + 24);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)this + 24, v20 + v19);
    uint64_t v21 = *((void *)this + 13);
    *((_DWORD *)this + 24) += *((_DWORD *)a2 + 24);
    memcpy((void *)(v21 + 4 * v20), *((const void **)a2 + 13), 4 * *((int *)a2 + 24));
  }
  int v22 = *((_DWORD *)a2 + 4);
  if ((v22 & 0xF) == 0) {
    return;
  }
  if ((v22 & 1) == 0)
  {
    if ((v22 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_27:
    *((_DWORD *)this + 4) |= 2u;
    uint64_t v26 = (void **)*((void *)this + 16);
    if (!v26)
    {
      uint64_t v27 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        uint64_t v27 = (void *)*v27;
      }
      uint64_t v26 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v27);
      *((void *)this + 16) = v26;
    }
    if (*((void *)a2 + 16)) {
      int v28 = (const TSP::UUID *)*((void *)a2 + 16);
    }
    else {
      int v28 = (const TSP::UUID *)&TSP::_UUID_default_instance_;
    }
    TSP::UUID::MergeFrom(v26, v28);
    if ((v22 & 4) == 0)
    {
LABEL_17:
      if ((v22 & 8) == 0) {
        return;
      }
      goto LABEL_43;
    }
    goto LABEL_35;
  }
  *((_DWORD *)this + 4) |= 1u;
  unsigned int v23 = (void **)*((void *)this + 15);
  if (!v23)
  {
    uint64_t v24 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      uint64_t v24 = (void *)*v24;
    }
    unsigned int v23 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v24);
    *((void *)this + 15) = v23;
  }
  if (*((void *)a2 + 15)) {
    uint64_t v25 = (const TSP::UUID *)*((void *)a2 + 15);
  }
  else {
    uint64_t v25 = (const TSP::UUID *)&TSP::_UUID_default_instance_;
  }
  TSP::UUID::MergeFrom(v23, v25);
  if ((v22 & 2) != 0) {
    goto LABEL_27;
  }
LABEL_16:
  if ((v22 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_35:
  *((_DWORD *)this + 4) |= 4u;
  unsigned int v29 = (unint64_t *)*((void *)this + 17);
  if (!v29)
  {
    int v30 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
    if (*v4) {
      int v30 = (void *)*v30;
    }
    unsigned int v29 = (unint64_t *)google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentInfo>(v30);
    *((void *)this + 17) = v29;
  }
  if (*((void *)a2 + 17)) {
    unsigned int v31 = (const TSP::ComponentInfo *)*((void *)a2 + 17);
  }
  else {
    unsigned int v31 = (const TSP::ComponentInfo *)&TSP::_ComponentInfo_default_instance_;
  }
  TSP::ComponentInfo::MergeFrom(v29, v31);
  if ((v22 & 8) != 0)
  {
LABEL_43:
    *((_DWORD *)this + 4) |= 8u;
    unsigned int v32 = (void **)*((void *)this + 18);
    if (!v32)
    {
      unsigned int v33 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        unsigned int v33 = (void *)*v33;
      }
      unsigned int v32 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v33);
      *((void *)this + 18) = v32;
    }
    if (*((void *)a2 + 18)) {
      int v34 = (const TSP::Reference *)*((void *)a2 + 18);
    }
    else {
      int v34 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
    }
    TSP::Reference::MergeFrom(v32, v34);
  }
}

void TSP::ObjectSerializationMetadata::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::ObjectSerializationMetadata::Clear(this);
    TSP::ObjectSerializationMetadata::MergeFrom((TSP::ObjectSerializationMetadata *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::ObjectSerializationMetadata::IsInitialized(TSP::ObjectSerializationMetadata *this)
{
  if ((*((unsigned char *)this + 16) & 4) == 0) {
    return 0;
  }
  uint64_t v2 = *((unsigned int *)this + 14);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char IsInitialized = TSP::DataInfo::IsInitialized(*(TSP::DataInfo **)(*((void *)this + 8) + 8 * v2));
    uint64_t v2 = v3;
    if ((IsInitialized & 1) == 0) {
      return 0;
    }
  }
  uint64_t result = sub_10003DD08((uint64_t)this + 72);
  if (result)
  {
    int v6 = *((_DWORD *)this + 4);
    if (v6)
    {
      uint64_t result = TSP::UUID::IsInitialized(*((TSP::UUID **)this + 15));
      if (!result) {
        return result;
      }
      int v6 = *((_DWORD *)this + 4);
    }
    if ((v6 & 2) != 0)
    {
      uint64_t result = TSP::UUID::IsInitialized(*((TSP::UUID **)this + 16));
      if (!result) {
        return result;
      }
      int v6 = *((_DWORD *)this + 4);
    }
    if ((v6 & 4) != 0)
    {
      uint64_t result = TSP::ComponentInfo::IsInitialized(*((TSP::ComponentInfo **)this + 17));
      if (!result) {
        return result;
      }
      int v6 = *((_DWORD *)this + 4);
    }
    if ((v6 & 8) == 0) {
      return 1;
    }
    uint64_t result = TSP::Reference::IsInitialized(*((TSP::Reference **)this + 18));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t TSP::ObjectSerializationMetadata::GetMetadata(TSP::ObjectSerializationMetadata *this)
{
  return off_1001E9C30[40];
}

void *TSP::ObjectSerializationDirectory_Entry::ObjectSerializationDirectory_Entry(void *a1, uint64_t a2)
{
  *a1 = off_1001C8A70;
  a1[1] = a2;
  a1[2] = 0;
  if (atomic_load_explicit(scc_info_ObjectSerializationDirectory_Entry_TSPArchiveMessages_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_ObjectSerializationDirectory_Entry_TSPArchiveMessages_2eproto);
  }
  a1[4] = 0;
  a1[5] = 0;
  a1[3] = &google::protobuf::internal::fixed_address_empty_string;
  return a1;
}

void TSP::ObjectSerializationDirectory_Entry::~ObjectSerializationDirectory_Entry(TSP::ObjectSerializationDirectory_Entry *this)
{
  uint64_t v1 = *((void *)this + 3);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::ObjectSerializationDirectory_Entry::~ObjectSerializationDirectory_Entry(this);
  operator delete();
}

uint64_t TSP::ObjectSerializationDirectory_Entry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ObjectSerializationDirectory_Entry::Clear(TSP::ObjectSerializationDirectory_Entry *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    unint64_t v2 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 2sub_100050800((void *)this + 3) = 0;
    }
  }
  if ((v1 & 6) != 0)
  {
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
  }
  char v4 = *((unsigned char *)this + 8);
  uint64_t result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_1000506C0((void *)this + 2) = 0;
  if (v4) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::ObjectSerializationDirectory_Entry::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v31 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v31 + 1);
      unsigned int v9 = *(unsigned __int8 *)v31;
      if ((*(char *)v31 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v31, (const char *)(v10 - 128));
      unsigned int v31 = TagFallback;
      if (!TagFallback) {
        goto LABEL_45;
      }
      uint64_t v8 = TagFallback;
      unsigned int v9 = v26;
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 != 24) {
          goto LABEL_14;
        }
        v5 |= 4u;
        int v16 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v17 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v18 = *(char *)v16;
        unint64_t v17 = v17 + (v18 << 7) - 128;
        if ((v18 & 0x80000000) == 0)
        {
          int v16 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_25:
          unsigned int v31 = v16;
          *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v17;
          goto LABEL_35;
        }
        uint64_t v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v17);
        unsigned int v31 = v27;
        *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v28;
        if (!v27) {
          goto LABEL_45;
        }
      }
      else
      {
        if (v11 != 2)
        {
          if (v11 == 1 && v9 == 10)
          {
            *(_DWORD *)(a1 + 16) |= 1u;
            uint64_t v22 = *(void *)(a1 + 8);
            unsigned int v23 = (google::protobuf::Arena *)(v22 & 0xFFFFFFFFFFFFFFFELL);
            if (v22) {
              unsigned int v23 = *(google::protobuf::Arena **)v23;
            }
            uint64_t v24 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 24), v23);
            unsigned int v15 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v24, (std::string::value_type *)v31, a3);
          }
          else
          {
LABEL_14:
            if (v9) {
              BOOL v13 = (v9 & 7) == 4;
            }
            else {
              BOOL v13 = 1;
            }
            if (v13)
            {
              *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
              goto LABEL_2;
            }
            if (*v7)
            {
              unsigned int v14 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              unsigned int v14 = sub_10003562C((unint64_t *)(a1 + 8));
              uint64_t v8 = v31;
            }
            unsigned int v15 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v14, v8);
          }
          unsigned int v31 = v15;
          if (!v15) {
            goto LABEL_45;
          }
          goto LABEL_35;
        }
        if (v9 != 16) {
          goto LABEL_14;
        }
        v5 |= 2u;
        int v19 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v20 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v21 = *(char *)v19;
        unint64_t v20 = v20 + (v21 << 7) - 128;
        if ((v21 & 0x80000000) == 0)
        {
          int v19 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_30:
          unsigned int v31 = v19;
          *(void *)(a1 + 3sub_1000506C0((void *)this + 2) = v20;
          goto LABEL_35;
        }
        unsigned int v29 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v20);
        unsigned int v31 = v29;
        *(void *)(a1 + 3sub_1000506C0((void *)this + 2) = v30;
        if (!v29)
        {
LABEL_45:
          unsigned int v31 = 0;
          goto LABEL_2;
        }
      }
LABEL_35:
      if (sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    uint64_t v8 = (google::protobuf::internal *)((char *)v31 + 2);
LABEL_7:
    unsigned int v31 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

const google::protobuf::UnknownFieldSet *TSP::ObjectSerializationDirectory_Entry::_InternalSerialize(TSP::ObjectSerializationDirectory_Entry *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    char v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_26;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v7 = *((void *)this + 4);
  unsigned __int8 *v4 = 16;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        ++v4;
        unint64_t v10 = v8 >> 14;
        v8 >>= 7;
      }
      while (v10);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v9;
      if ((v6 & 4) == 0) {
        goto LABEL_26;
      }
    }
    else
    {
      v4[2] = v8;
      v4 += 3;
      if ((v6 & 4) == 0) {
        goto LABEL_26;
      }
    }
  }
  else
  {
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 4) == 0) {
      goto LABEL_26;
    }
  }
LABEL_17:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v11 = *((void *)this + 5);
  unsigned __int8 *v4 = 24;
  if (v11 > 0x7F)
  {
    v4[1] = v11 | 0x80;
    unint64_t v12 = v11 >> 7;
    if (v11 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        ++v4;
        unint64_t v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      v4[2] = v12;
      v4 += 3;
    }
  }
  else
  {
    v4[1] = v11;
    v4 += 2;
  }
LABEL_26:
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

uint64_t TSP::ObjectSerializationDirectory_Entry::RequiredFieldsByteSizeFallback(TSP::ObjectSerializationDirectory_Entry *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    v2 += ((9 * (__clz(*((void *)this + 4) | 1) ^ 0x3F) + 73) >> 6) + 1;
    goto LABEL_8;
  }
  unint64_t v3 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*((void *)this + 5) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  return v2;
}

char *TSP::ObjectSerializationDirectory_Entry::ByteSizeLong(TSP::ObjectSerializationDirectory_Entry *this)
{
  if ((~*((_DWORD *)this + 4) & 7) != 0)
  {
    uint64_t v5 = (const google::protobuf::UnknownFieldSet *)TSP::ObjectSerializationDirectory_Entry::RequiredFieldsByteSizeFallback(this);
  }
  else
  {
    unint64_t v2 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v4
                                                   + ((9 * (__clz(*((void *)this + 4) | 1) ^ 0x3F) + 73) >> 6)
                                                   + ((9 * (__clz(*((void *)this + 5) | 1) ^ 0x3F) + 73) >> 6)
                                                   + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6)
                                                   + 3);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::ObjectSerializationDirectory_Entry *)((char *)this + 8), v5, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v5;
    return (char *)v5;
  }
}

void TSP::ObjectSerializationDirectory_Entry::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ObjectSerializationDirectory_Entry::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::ObjectSerializationDirectory_Entry::MergeFrom(std::string *this, const TSP::ObjectSerializationDirectory_Entry *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v8 = (google::protobuf::Arena *)(size & 0xFFFFFFFFFFFFFFFELL);
      if (size) {
        unint64_t v8 = *(google::protobuf::Arena **)v8;
      }
      this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1], v6, v8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
        {
LABEL_8:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v5;
          return this;
        }
LABEL_7:
        v3[1].__r_.__value_.__r.__words[2] = *((void *)a2 + 5);
        goto LABEL_8;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    v3[1].__r_.__value_.__l.__size_ = *((void *)a2 + 4);
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  return this;
}

void TSP::ObjectSerializationDirectory_Entry::CopyFrom(TSP::ObjectSerializationDirectory_Entry *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::ObjectSerializationDirectory_Entry::Clear(this);
    TSP::ObjectSerializationDirectory_Entry::MergeFrom((std::string *)this, a2);
  }
}

BOOL TSP::ObjectSerializationDirectory_Entry::IsInitialized(TSP::ObjectSerializationDirectory_Entry *this)
{
  return (~*((_DWORD *)this + 4) & 7) == 0;
}

uint64_t TSP::ObjectSerializationDirectory_Entry::GetMetadata(TSP::ObjectSerializationDirectory_Entry *this)
{
  return off_1001E9C30[42];
}

uint64_t TSP::ObjectSerializationDirectory::ObjectSerializationDirectory(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C8B20;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_1000506C0((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_ObjectSerializationDirectory_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ObjectSerializationDirectory_TSPArchiveMessages_2eproto);
  }
  return a1;
}

void sub_10004AE38(_Unwind_Exception *a1)
{
  sub_10005094C(v1);
  _Unwind_Resume(a1);
}

void TSP::ObjectSerializationDirectory::~ObjectSerializationDirectory(TSP::ObjectSerializationDirectory *this)
{
}

{
  uint64_t vars8;

  TSP::ObjectSerializationDirectory::~ObjectSerializationDirectory(this);
  operator delete();
}

uint64_t TSP::ObjectSerializationDirectory::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ObjectSerializationDirectory::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::ObjectSerializationDirectory_Entry **)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::ObjectSerializationDirectory_Entry::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  int v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *TSP::ObjectSerializationDirectory::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v22 = a2;
  if ((sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v22 + 1);
      unsigned int v7 = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, (const char *)(v8 - 128));
      uint64_t v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        unint64_t v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          unint64_t v12 = (google::protobuf::internal *)((char *)v11 + 1);
          uint64_t v22 = (google::protobuf::internal *)((char *)v11 + 1);
          unint64_t v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              unint64_t v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            *unint64_t v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectSerializationDirectory_Entry>(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            unint64_t v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          unint64_t v11 = sub_10004B12C(a3, v16, v12);
          uint64_t v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        unint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
        char v6 = v22;
      }
      uint64_t v22 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92))) {
        return v22;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    uint64_t v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

google::protobuf::internal *sub_10004B12C(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::ObjectSerializationDirectory_Entry::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::ObjectSerializationDirectory::_InternalSerialize(TSP::ObjectSerializationDirectory *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v8 = *(TSP::ObjectSerializationDirectory_Entry **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::ObjectSerializationDirectory_Entry::_InternalSerialize(v8, v10, a3);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::ObjectSerializationDirectory::ByteSizeLong(TSP::ObjectSerializationDirectory *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (TSP::ObjectSerializationDirectory_Entry **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::ObjectSerializationDirectory_Entry::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::ObjectSerializationDirectory *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void TSP::ObjectSerializationDirectory::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ObjectSerializationDirectory::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::ObjectSerializationDirectory::MergeFrom(std::string *this, const TSP::ObjectSerializationDirectory *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (TSP::ObjectSerializationDirectory_Entry **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3->__r_.__value_.__r.__words[2], v5);
    this = sub_1000509CC((std::string *)&v3->__r_.__value_.__r.__words[2], (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v5;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v8;
    std::string::size_type size = (signed int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v8) {
      *std::string::size_type size = v8;
    }
  }
  return this;
}

void TSP::ObjectSerializationDirectory::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::ObjectSerializationDirectory::Clear(this);
    TSP::ObjectSerializationDirectory::MergeFrom((std::string *)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::ObjectSerializationDirectory::IsInitialized(TSP::ObjectSerializationDirectory *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 4) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 7) == 0);
  return v2 < 1;
}

uint64_t TSP::ObjectSerializationDirectory::GetMetadata(TSP::ObjectSerializationDirectory *this)
{
  return off_1001E9C30[44];
}

uint64_t TSP::DataPropertiesEntryV1::DataPropertiesEntryV1(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 3sub_10005094C((void *)this + 2) = a2;
  *(void *)a1 = off_1001C8BD0;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  if (atomic_load_explicit(scc_info_DataPropertiesEntryV1_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DataPropertiesEntryV1_TSPArchiveMessages_2eproto);
  }
  *(void *)(a1 + 48) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 56) = &google::protobuf::internal::fixed_address_empty_string;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 7sub_10005094C((void *)this + 2) = 0;
  return a1;
}

void sub_10004B66C(_Unwind_Exception *exception_object)
{
  if (*(int *)(v1 + 28) >= 1) {
    sub_100163A7C(v2);
  }
  _Unwind_Resume(exception_object);
}

void TSP::DataPropertiesEntryV1::~DataPropertiesEntryV1(TSP::DataPropertiesEntryV1 *this)
{
  uint64_t v2 = *((void *)this + 6);
  if ((uint64_t *)v2 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    operator delete();
  }
  uint64_t v3 = *((void *)this + 7);
  if ((uint64_t *)v3 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v3 + 23) < 0) {
      operator delete(*(void **)v3);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
  if (*((int *)this + 7) >= 1)
  {
    uint64_t v4 = *((void *)this + 4);
    uint64_t v6 = *(void *)(v4 - 8);
    unsigned int v5 = (void *)(v4 - 8);
    if (!v6) {
      operator delete(v5);
    }
  }
}

{
  uint64_t vars8;

  TSP::DataPropertiesEntryV1::~DataPropertiesEntryV1(this);
  operator delete();
}

uint64_t TSP::DataPropertiesEntryV1::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::DataPropertiesEntryV1::Clear(TSP::DataPropertiesEntryV1 *this)
{
  *((_DWORD *)this + 6) = 0;
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 2sub_100050800((void *)this + 3) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 2sub_100050800((void *)this + 3) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0)
  {
    *((unsigned char *)this + 7sub_10005094C((void *)this + 2) = 0;
    *((void *)this + 8) = 0;
  }
  char v5 = *((unsigned char *)this + 8);
  uint64_t result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_10005094C((void *)this + 2) = 0;
  if (v5) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::DataPropertiesEntryV1::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v27 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v27, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v27 + 1);
      unsigned int v9 = *(unsigned __int8 *)v27;
      if (*(char *)v27 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v27, (const char *)(v10 - 128));
          uint64_t v27 = TagFallback;
          if (!TagFallback) {
            goto LABEL_46;
          }
          signed int v8 = TagFallback;
          unsigned int v9 = v21;
          goto LABEL_8;
        }
        signed int v8 = (google::protobuf::internal *)((char *)v27 + 2);
      }
      uint64_t v27 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_34;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          unsigned int v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
          if (v11) {
            unsigned int v12 = *(google::protobuf::Arena **)v12;
          }
          unsigned int v13 = (uint64_t **)(a1 + 48);
          goto LABEL_26;
        case 2u:
          if (v9 != 16) {
            goto LABEL_34;
          }
          v5 |= 8u;
          uint64_t v14 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v15 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_17;
          }
          int v16 = *(char *)v14;
          unint64_t v15 = v15 + (v16 << 7) - 128;
          if (v16 < 0)
          {
            uint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v15);
            uint64_t v27 = v22;
            *(unsigned char *)(a1 + 7sub_10005094C((void *)this + 2) = v23 != 0;
            if (!v22) {
              goto LABEL_46;
            }
          }
          else
          {
            uint64_t v14 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_17:
            uint64_t v27 = v14;
            *(unsigned char *)(a1 + 7sub_10005094C((void *)this + 2) = v15 != 0;
          }
          goto LABEL_42;
        case 3u:
          if (v9 != 25) {
            goto LABEL_34;
          }
          v5 |= 4u;
          *(void *)(a1 + 64) = *(void *)v8;
          uint64_t v27 = (google::protobuf::internal *)((char *)v8 + 8);
          goto LABEL_42;
        case 4u:
          if (v9 == 34)
          {
            uint64_t v17 = (google::protobuf::internal *)google::protobuf::internal::PackedUInt32Parser((unsigned int *)(a1 + 24), v8, a3);
          }
          else
          {
            if (v9 == 32)
            {
              int v24 = sub_100038CA0(&v27);
              sub_100038D00(a1, v24);
              if (!v27) {
                goto LABEL_46;
              }
              goto LABEL_42;
            }
LABEL_34:
            if (v9) {
              BOOL v25 = (v9 & 7) == 4;
            }
            else {
              BOOL v25 = 1;
            }
            if (v25)
            {
              *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
              goto LABEL_2;
            }
            if (*v7)
            {
              unsigned int v26 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else
            {
              unsigned int v26 = sub_10003562C((unint64_t *)(a1 + 8));
              signed int v8 = v27;
            }
            uint64_t v17 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v26, v8);
          }
LABEL_41:
          uint64_t v27 = v17;
          if (!v17)
          {
LABEL_46:
            uint64_t v27 = 0;
            goto LABEL_2;
          }
LABEL_42:
          if (sub_1000355B8(a3, &v27, *(_DWORD *)(a3 + 92))) {
            goto LABEL_2;
          }
          break;
        case 5u:
          if (v9 != 42) {
            goto LABEL_34;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v18 = *(void *)(a1 + 8);
          unsigned int v12 = (google::protobuf::Arena *)(v18 & 0xFFFFFFFFFFFFFFFELL);
          if (v18) {
            unsigned int v12 = *(google::protobuf::Arena **)v12;
          }
          unsigned int v13 = (uint64_t **)(a1 + 56);
LABEL_26:
          int v19 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable(v13, v12);
          uint64_t v17 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v19, (std::string::value_type *)v27, a3);
          goto LABEL_41;
        default:
          goto LABEL_34;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v27;
}

const google::protobuf::UnknownFieldSet *TSP::DataPropertiesEntryV1::_InternalSerialize(TSP::DataPropertiesEntryV1 *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    uint64_t v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v7 = *((unsigned char *)this + 72);
  unsigned __int8 *v4 = 16;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_9:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    uint64_t v8 = *((void *)this + 8);
    unsigned __int8 *v4 = 25;
    *(void *)(v4 + sub_1000333D0((uint64_t *)this + 1) = v8;
    v4 += 9;
  }
LABEL_12:
  unsigned int v9 = (google::protobuf::io::EpsCopyOutputStream *)*((unsigned int *)this + 10);
  if ((int)v9 >= 1) {
    uint64_t v4 = sub_10004F9AC(a3, 4, (int *)this + 6, v9, v4, (uint64_t (*)(void))google::protobuf::io::EpsCopyOutputStream::Encode32);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_100034480(a3, 5, (const void **)(*((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *((void *)this + 1);
  if ((v10 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, v9);
}

char *TSP::DataPropertiesEntryV1::ByteSizeLong(TSP::DataPropertiesEntryV1 *this)
{
  if (*((unsigned char *)this + 16))
  {
    unint64_t v3 = *((void *)this + 6) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = google::protobuf::internal::WireFormatLite::UInt32Size((unsigned int *)this + 6);
  if (v6)
  {
    int v7 = v6;
    if ((v6 & 0x80000000) != 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v8;
  }
  else
  {
    int v7 = 0;
  }
  *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v7;
  unsigned int v9 = (const google::protobuf::UnknownFieldSet *)(v2 + v6);
  int v10 = *((_DWORD *)this + 4);
  if ((v10 & 0xE) != 0)
  {
    if ((v10 & 2) != 0)
    {
      unint64_t v11 = *((void *)this + 7) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      unsigned int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v9 + v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1);
    }
    uint64_t v14 = (const google::protobuf::UnknownFieldSet *)((char *)v9 + 9);
    if ((v10 & 4) == 0) {
      uint64_t v14 = v9;
    }
    if ((v10 & 8) != 0) {
      unsigned int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v14 + 2);
    }
    else {
      unsigned int v9 = v14;
    }
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::DataPropertiesEntryV1 *)((char *)this + 8), v9, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v9;
    return (char *)v9;
  }
}

void TSP::DataPropertiesEntryV1::MergeFrom(TSP::DataPropertiesEntryV1 *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DataPropertiesEntryV1::MergeFrom((unint64_t *)this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

unint64_t *TSP::DataPropertiesEntryV1::MergeFrom(unint64_t *this, const TSP::DataPropertiesEntryV1 *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)sub_1000357D4(this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    uint64_t v6 = *((int *)v3 + 6);
    google::protobuf::RepeatedField<unsigned int>::Reserve((unsigned int *)v3 + 6, v6 + v5);
    unint64_t v7 = v3[4];
    *((_DWORD *)v3 + 6) += *((_DWORD *)a2 + 6);
    this = (unint64_t *)memcpy((void *)(v7 + 4 * v6), *((const void **)a2 + 4), 4 * *((int *)a2 + 6));
  }
  int v8 = *((_DWORD *)a2 + 4);
  if ((v8 & 0xF) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *((void *)a2 + 6) & 0xFFFFFFFFFFFFFFFELL;
      *((_DWORD *)v3 + 4) |= 1u;
      unint64_t v10 = v3[1];
      unint64_t v11 = (google::protobuf::Arena *)(v10 & 0xFFFFFFFFFFFFFFFELL);
      if (v10) {
        unint64_t v11 = *(google::protobuf::Arena **)v11;
      }
      this = (unint64_t *)google::protobuf::internal::ArenaStringPtr::Set((std::string **)v3 + 6, v9, v11);
      if ((v8 & 2) == 0)
      {
LABEL_8:
        if ((v8 & 4) == 0) {
          goto LABEL_9;
        }
        goto LABEL_19;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_8;
    }
    unint64_t v12 = *((void *)a2 + 7) & 0xFFFFFFFFFFFFFFFELL;
    *((_DWORD *)v3 + 4) |= 2u;
    unint64_t v13 = v3[1];
    uint64_t v14 = (google::protobuf::Arena *)(v13 & 0xFFFFFFFFFFFFFFFELL);
    if (v13) {
      uint64_t v14 = *(google::protobuf::Arena **)v14;
    }
    this = (unint64_t *)google::protobuf::internal::ArenaStringPtr::Set((std::string **)v3 + 7, v12, v14);
    if ((v8 & 4) == 0)
    {
LABEL_9:
      if ((v8 & 8) == 0)
      {
LABEL_11:
        *((_DWORD *)v3 + 4) |= v8;
        return this;
      }
LABEL_10:
      *((unsigned char *)v3 + 7sub_10005094C((void *)this + 2) = *((unsigned char *)a2 + 72);
      goto LABEL_11;
    }
LABEL_19:
    v3[8] = *((void *)a2 + 8);
    if ((v8 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  return this;
}

void TSP::DataPropertiesEntryV1::CopyFrom(TSP::DataPropertiesEntryV1 *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::DataPropertiesEntryV1::Clear(this);
    TSP::DataPropertiesEntryV1::MergeFrom(this, a2);
  }
}

uint64_t TSP::DataPropertiesEntryV1::IsInitialized(TSP::DataPropertiesEntryV1 *this)
{
  return *((_DWORD *)this + 4) & 1;
}

uint64_t TSP::DataPropertiesEntryV1::GetMetadata(TSP::DataPropertiesEntryV1 *this)
{
  return off_1001E9C30[46];
}

uint64_t TSP::DataPropertiesV1::DataPropertiesV1(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C8C80;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_10005094C((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_DataPropertiesV1_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DataPropertiesV1_TSPArchiveMessages_2eproto);
  }
  return a1;
}

void sub_10004C07C(_Unwind_Exception *a1)
{
  sub_100050A8C(v1);
  _Unwind_Resume(a1);
}

void TSP::DataPropertiesV1::~DataPropertiesV1(TSP::DataPropertiesV1 *this)
{
}

{
  uint64_t vars8;

  TSP::DataPropertiesV1::~DataPropertiesV1(this);
  operator delete();
}

uint64_t TSP::DataPropertiesV1::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::DataPropertiesV1::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (TSP::DataPropertiesEntryV1 **)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::DataPropertiesEntryV1::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  int v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *TSP::DataPropertiesV1::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v22 = a2;
  if ((sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v22 + 1);
      unsigned int v7 = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, (const char *)(v8 - 128));
      uint64_t v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        unint64_t v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          unint64_t v12 = (google::protobuf::internal *)((char *)v11 + 1);
          uint64_t v22 = (google::protobuf::internal *)((char *)v11 + 1);
          unint64_t v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              unint64_t v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            *unint64_t v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<TSP::DataPropertiesEntryV1>(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            unint64_t v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          unint64_t v11 = sub_10004C370(a3, v16, v12);
          uint64_t v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        unint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
        char v6 = v22;
      }
      uint64_t v22 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92))) {
        return v22;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    uint64_t v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

google::protobuf::internal *sub_10004C370(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::DataPropertiesEntryV1::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::DataPropertiesV1::_InternalSerialize(TSP::DataPropertiesV1 *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v8 = *(TSP::DataPropertiesEntryV1 **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::DataPropertiesEntryV1::_InternalSerialize(v8, v10, a3);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::DataPropertiesV1::ByteSizeLong(TSP::DataPropertiesV1 *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (TSP::DataPropertiesEntryV1 **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::DataPropertiesEntryV1::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::DataPropertiesV1 *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void TSP::DataPropertiesV1::MergeFrom(TSP::DataPropertiesV1 *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DataPropertiesV1::MergeFrom((unint64_t *)this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

unint64_t *TSP::DataPropertiesV1::MergeFrom(unint64_t *this, const TSP::DataPropertiesV1 *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (unint64_t *)sub_1000357D4(this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (TSP::DataPropertiesEntryV1 **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    this = sub_100050B0C(v3 + 2, (TSP::DataPropertiesEntryV1 **)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v8;
    unsigned int v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  return this;
}

void TSP::DataPropertiesV1::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::DataPropertiesV1::Clear(this);
    TSP::DataPropertiesV1::MergeFrom((TSP::DataPropertiesV1 *)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::DataPropertiesV1::IsInitialized(TSP::DataPropertiesV1 *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 4) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 1) != 0);
  return v2 < 1;
}

uint64_t TSP::DataPropertiesV1::GetMetadata(TSP::DataPropertiesV1 *this)
{
  return off_1001E9C30[48];
}

void TSP::DocumentMetadata::~DocumentMetadata(TSP::DocumentMetadata *this)
{
  if (this != (TSP::DocumentMetadata *)&TSP::_DocumentMetadata_default_instance_)
  {
    int v2 = (TSP::DataPropertiesV1 *)*((void *)this + 3);
    if (v2)
    {
      TSP::DataPropertiesV1::~DataPropertiesV1(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::DocumentMetadata::~DocumentMetadata(this);
  operator delete();
}

uint64_t TSP::DocumentMetadata::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::DocumentMetadata::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::DataPropertiesV1::Clear((google::protobuf::Arena **)this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(unsigned char *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::DocumentMetadata::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v24 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v24 + 1);
      unsigned int v9 = *(unsigned __int8 *)v24;
      if ((*(char *)v24 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v24, (const char *)(v10 - 128));
      int v24 = TagFallback;
      if (!TagFallback) {
        goto LABEL_40;
      }
      signed int v8 = TagFallback;
      unsigned int v9 = v21;
LABEL_8:
      if (v9 >> 3 == 3)
      {
        if (v9 == 26)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v15 = *(void *)(a1 + 24);
          if (!v15)
          {
            uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              uint64_t v16 = (void *)*v16;
            }
            uint64_t v15 = google::protobuf::Arena::CreateMaybeMessage<TSP::DataPropertiesV1>(v16);
            *(void *)(a1 + 24) = v15;
            signed int v8 = v24;
          }
          uint64_t v14 = sub_10004CB1C(a3, v15, v8);
        }
        else
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unsigned int v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v13 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v24;
          }
          uint64_t v14 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
        }
        int v24 = v14;
        if (!v14) {
          goto LABEL_40;
        }
        goto LABEL_32;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      v5 |= 2u;
      uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 1);
      unint64_t v18 = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_31;
      }
      int v19 = *(char *)v17;
      unint64_t v18 = v18 + (v19 << 7) - 128;
      if ((v19 & 0x80000000) == 0)
      {
        uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_31:
        int v24 = v17;
        *(unsigned char *)(a1 + 3sub_100050A8C((void *)this + 2) = v18 != 0;
        goto LABEL_32;
      }
      uint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v18);
      int v24 = v22;
      *(unsigned char *)(a1 + 3sub_100050A8C((void *)this + 2) = v23 != 0;
      if (!v22)
      {
LABEL_40:
        int v24 = 0;
        goto LABEL_2;
      }
LABEL_32:
      if (sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    signed int v8 = (google::protobuf::internal *)((char *)v24 + 2);
LABEL_7:
    int v24 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

google::protobuf::internal *sub_10004CB1C(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    uint64_t result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  uint64_t result = TSP::DataPropertiesV1::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::DocumentMetadata::_InternalSerialize(TSP::DocumentMetadata *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned __int8 v7 = *((unsigned char *)this + 32);
    *a2 = 8;
    a2[1] = v7;
    a2 += 2;
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    uint64_t v8 = (TSP::DataPropertiesV1 *)*((void *)this + 3);
    *a2 = 26;
    unsigned int v9 = *((_DWORD *)v8 + 10);
    if (v9 > 0x7F)
    {
      a2[1] = v9 | 0x80;
      unsigned int v11 = v9 >> 7;
      if (v9 >> 14)
      {
        int v10 = a2 + 3;
        do
        {
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
          unsigned int v12 = v11 >> 7;
          ++v10;
          unsigned int v13 = v11 >> 14;
          v11 >>= 7;
        }
        while (v13);
        *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
      }
      else
      {
        a2[2] = v11;
        int v10 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v9;
      int v10 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::DataPropertiesV1::_InternalSerialize(v8, v10, a3, a4);
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::DocumentMetadata::ByteSizeLong(TSP::DocumentMetadata *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      int v5 = TSP::DataPropertiesV1::ByteSizeLong(*((TSP::DataPropertiesV1 **)this + 3));
      uint64_t v3 = (uint64_t)&v5[((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1];
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v3 + 2);
    }
    else {
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)v3;
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::DocumentMetadata *)((char *)this + 8), v4, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v4;
    return (char *)v4;
  }
}

void TSP::DocumentMetadata::MergeFrom(TSP::DocumentMetadata *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DocumentMetadata::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void *TSP::DocumentMetadata::MergeFrom(void *this, const TSP::DocumentMetadata *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4(this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      *((_DWORD *)v3 + 4) |= 1u;
      unsigned __int8 v7 = (unint64_t *)*((void *)v3 + 3);
      if (!v7)
      {
        uint64_t v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          uint64_t v8 = (void *)*v8;
        }
        unsigned __int8 v7 = (unint64_t *)google::protobuf::Arena::CreateMaybeMessage<TSP::DataPropertiesV1>(v8);
        *((void *)v3 + sub_100050800((void *)this + 3) = v7;
      }
      if (*((void *)a2 + 3)) {
        unsigned int v9 = (const TSP::DataPropertiesV1 *)*((void *)a2 + 3);
      }
      else {
        unsigned int v9 = (const TSP::DataPropertiesV1 *)&TSP::_DataPropertiesV1_default_instance_;
      }
      this = TSP::DataPropertiesV1::MergeFrom(v7, v9);
    }
    if ((v6 & 2) != 0) {
      *((unsigned char *)v3 + 3sub_100050A8C((void *)this + 2) = *((unsigned char *)a2 + 32);
    }
    *((_DWORD *)v3 + 4) |= v6;
  }
  return this;
}

void TSP::DocumentMetadata::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::DocumentMetadata::Clear(this);
    TSP::DocumentMetadata::MergeFrom((TSP::DocumentMetadata *)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::DocumentMetadata::IsInitialized(TSP::DocumentMetadata *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v2 = *((void *)this + 3);
  uint64_t v3 = *(unsigned int *)(v2 + 24);
  uint64_t v4 = *(void *)(v2 + 32);
  do
  {
    BOOL result = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v5 = *(void *)(v4 + 8 * v3--);
  }
  while ((*(unsigned char *)(v5 + 16) & 1) != 0);
  return result;
}

uint64_t TSP::DocumentMetadata::GetMetadata(TSP::DocumentMetadata *this)
{
  return off_1001E9C30[50];
}

void *TSP::SupportMetadata_DataCollaborationProperties::SupportMetadata_DataCollaborationProperties(void *a1, uint64_t a2)
{
  *a1 = off_1001C8DE0;
  a1[1] = a2;
  a1[2] = 0;
  if (atomic_load_explicit(scc_info_SupportMetadata_DataCollaborationProperties_TSPArchiveMessages_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_SupportMetadata_DataCollaborationProperties_TSPArchiveMessages_2eproto);
  }
  a1[4] = 0;
  a1[5] = 0;
  a1[3] = &google::protobuf::internal::fixed_address_empty_string;
  return a1;
}

void TSP::SupportMetadata_DataCollaborationProperties::~SupportMetadata_DataCollaborationProperties(TSP::SupportMetadata_DataCollaborationProperties *this)
{
  uint64_t v1 = *((void *)this + 3);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::SupportMetadata_DataCollaborationProperties::~SupportMetadata_DataCollaborationProperties(this);
  operator delete();
}

uint64_t TSP::SupportMetadata_DataCollaborationProperties::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::SupportMetadata_DataCollaborationProperties::Clear(TSP::SupportMetadata_DataCollaborationProperties *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    unint64_t v2 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 2sub_100050800((void *)this + 3) = 0;
    }
  }
  if ((v1 & 0x7E) != 0)
  {
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
  }
  char v4 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_100050A8C((void *)this + 2) = 0;
  if (v4) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::SupportMetadata_DataCollaborationProperties::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v50 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v50, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned __int8 v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v50 + 1);
      unsigned int v9 = *(unsigned __int8 *)v50;
      if (*(char *)v50 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v50, (const char *)(v10 - 128));
          int v50 = TagFallback;
          if (!TagFallback) {
            goto LABEL_75;
          }
          uint64_t v8 = TagFallback;
          unsigned int v9 = v16;
          goto LABEL_8;
        }
        uint64_t v8 = (google::protobuf::internal *)((char *)v50 + 2);
      }
      int v50 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_47;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          unsigned int v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
          if (v11) {
            unsigned int v12 = *(google::protobuf::Arena **)v12;
          }
          unsigned int v13 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 24), v12);
          uint64_t v14 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v13, (std::string::value_type *)v50, a3);
          goto LABEL_54;
        case 2u:
          if (v9 != 16) {
            goto LABEL_47;
          }
          v5 |= 2u;
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v18 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v19 = *(char *)v17;
          unint64_t v18 = v18 + (v19 << 7) - 128;
          if (v19 < 0)
          {
            int v38 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v18);
            int v50 = v38;
            *(unsigned char *)(a1 + 3sub_100050A8C((void *)this + 2) = v39 != 0;
            if (!v38) {
              goto LABEL_75;
            }
          }
          else
          {
            uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_19:
            int v50 = v17;
            *(unsigned char *)(a1 + 3sub_100050A8C((void *)this + 2) = v18 != 0;
          }
          goto LABEL_55;
        case 3u:
          if (v9 != 24) {
            goto LABEL_47;
          }
          v5 |= 4u;
          unsigned int v20 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v21 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_24;
          }
          int v22 = *(char *)v20;
          unint64_t v21 = v21 + (v22 << 7) - 128;
          if (v22 < 0)
          {
            unsigned int v40 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v21);
            int v50 = v40;
            *(unsigned char *)(a1 + 3sub_100050800((void *)this + 3) = v41 != 0;
            if (!v40) {
              goto LABEL_75;
            }
          }
          else
          {
            unsigned int v20 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_24:
            int v50 = v20;
            *(unsigned char *)(a1 + 3sub_100050800((void *)this + 3) = v21 != 0;
          }
          goto LABEL_55;
        case 4u:
          if (v9 != 32) {
            goto LABEL_47;
          }
          uint64_t v23 = (google::protobuf::internal *)((char *)v8 + 1);
          uint64_t v24 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_29;
          }
          int v25 = *(char *)v23;
          int v26 = v24 + (v25 << 7);
          uint64_t v24 = (v26 - 128);
          if (v25 < 0)
          {
            int v50 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, (v26 - 128));
            if (!v50) {
              goto LABEL_75;
            }
            uint64_t v24 = v42;
          }
          else
          {
            uint64_t v23 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_29:
            int v50 = v23;
          }
          if (TSP::DataUploadStatus_IsValid((TSP *)v24))
          {
            *(_DWORD *)(a1 + 16) |= 0x10u;
            *(_DWORD *)(a1 + 36) = v24;
          }
          else
          {
            if (*v7) {
              uint64_t v49 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else {
              uint64_t v49 = sub_10003562C((unint64_t *)(a1 + 8));
            }
            google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v49, 4u, v24);
          }
          goto LABEL_55;
        case 5u:
          if (v9 != 40) {
            goto LABEL_47;
          }
          v5 |= 0x20u;
          uint64_t v28 = (google::protobuf::internal *)((char *)v8 + 1);
          LODWORD(v27) = *(unsigned __int8 *)v8;
          if ((v27 & 0x80) == 0) {
            goto LABEL_36;
          }
          int v29 = *(char *)v28;
          unint64_t v27 = v27 + (v29 << 7) - 128;
          if (v29 < 0)
          {
            unsigned int v43 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v27);
            int v50 = v43;
            *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v44;
            if (!v43) {
              goto LABEL_75;
            }
          }
          else
          {
            uint64_t v28 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_36:
            int v50 = v28;
            *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v27;
          }
          goto LABEL_55;
        case 6u:
          if (v9 != 48) {
            goto LABEL_47;
          }
          v5 |= 8u;
          uint64_t v30 = (google::protobuf::internal *)((char *)v8 + 1);
          unint64_t v31 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_41;
          }
          int v32 = *(char *)v30;
          unint64_t v31 = v31 + (v32 << 7) - 128;
          if (v32 < 0)
          {
            unsigned int v45 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v31);
            int v50 = v45;
            *(unsigned char *)(a1 + 34) = v46 != 0;
            if (!v45) {
              goto LABEL_75;
            }
          }
          else
          {
            uint64_t v30 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_41:
            int v50 = v30;
            *(unsigned char *)(a1 + 34) = v31 != 0;
          }
          goto LABEL_55;
        case 7u:
          if (v9 != 56) {
            goto LABEL_47;
          }
          v5 |= 0x40u;
          int v34 = (google::protobuf::internal *)((char *)v8 + 1);
          LODWORD(v3sub_100050800((void *)this + 3) = *(unsigned __int8 *)v8;
          if ((v33 & 0x80) == 0) {
            goto LABEL_46;
          }
          int v35 = *(char *)v34;
          unint64_t v33 = v33 + (v35 << 7) - 128;
          if (v35 < 0)
          {
            unsigned int v47 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v33);
            int v50 = v47;
            *(_DWORD *)(a1 + 44) = v48;
            if (!v47) {
              goto LABEL_75;
            }
          }
          else
          {
            int v34 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_46:
            int v50 = v34;
            *(_DWORD *)(a1 + 44) = v33;
          }
          goto LABEL_55;
        default:
LABEL_47:
          if (v9) {
            BOOL v36 = (v9 & 7) == 4;
          }
          else {
            BOOL v36 = 1;
          }
          if (v36)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unsigned int v37 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v37 = sub_10003562C((unint64_t *)(a1 + 8));
            uint64_t v8 = v50;
          }
          uint64_t v14 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v37, v8);
LABEL_54:
          int v50 = v14;
          if (!v14)
          {
LABEL_75:
            int v50 = 0;
            goto LABEL_2;
          }
LABEL_55:
          if (sub_1000355B8(a3, &v50, *(_DWORD *)(a3 + 92))) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v50;
}

const google::protobuf::UnknownFieldSet *TSP::SupportMetadata_DataCollaborationProperties::_InternalSerialize(TSP::SupportMetadata_DataCollaborationProperties *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    char v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v7 = *((unsigned char *)this + 32);
  unsigned __int8 *v4 = 16;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v8 = *((unsigned char *)this + 33);
  unsigned __int8 *v4 = 24;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_6;
    }
LABEL_27:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v13 = *((int *)this + 10);
    unsigned __int8 *v4 = 40;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      if (v13 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v14 | 0x80;
          unint64_t v15 = v14 >> 7;
          ++v4;
          unint64_t v16 = v14 >> 14;
          v14 >>= 7;
        }
        while (v16);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v15;
        if ((v6 & 8) != 0) {
          goto LABEL_38;
        }
      }
      else
      {
        v4[2] = v14;
        v4 += 3;
        if ((v6 & 8) != 0) {
          goto LABEL_38;
        }
      }
    }
    else
    {
      v4[1] = v13;
      v4 += 2;
      if ((v6 & 8) != 0) {
        goto LABEL_38;
      }
    }
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_50;
    }
    goto LABEL_41;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unint64_t v9 = *((int *)this + 9);
  unsigned __int8 *v4 = 32;
  if (v9 > 0x7F)
  {
    v4[1] = v9 | 0x80;
    unint64_t v10 = v9 >> 7;
    if (v9 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
        unint64_t v11 = v10 >> 7;
        ++v4;
        unint64_t v12 = v10 >> 14;
        v10 >>= 7;
      }
      while (v12);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v11;
      if ((v6 & 0x20) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      v4[2] = v10;
      v4 += 3;
      if ((v6 & 0x20) != 0) {
        goto LABEL_27;
      }
    }
  }
  else
  {
    v4[1] = v9;
    v4 += 2;
    if ((v6 & 0x20) != 0) {
      goto LABEL_27;
    }
  }
LABEL_6:
  if ((v6 & 8) == 0) {
    goto LABEL_7;
  }
LABEL_38:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned __int8 v17 = *((unsigned char *)this + 34);
  unsigned __int8 *v4 = 48;
  v4[1] = v17;
  v4 += 2;
  if ((v6 & 0x40) != 0)
  {
LABEL_41:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
    }
    unint64_t v18 = *((int *)this + 11);
    unsigned __int8 *v4 = 56;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      if (v18 >> 14)
      {
        v4 += 3;
        do
        {
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v19 | 0x80;
          unint64_t v20 = v19 >> 7;
          ++v4;
          unint64_t v21 = v19 >> 14;
          v19 >>= 7;
        }
        while (v21);
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v20;
      }
      else
      {
        v4[2] = v19;
        v4 += 3;
      }
    }
    else
    {
      v4[1] = v18;
      v4 += 2;
    }
  }
LABEL_50:
  uint64_t v22 = *((void *)this + 1);
  if ((v22 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v22 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *TSP::SupportMetadata_DataCollaborationProperties::ByteSizeLong(TSP::SupportMetadata_DataCollaborationProperties *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    unint64_t v3 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    unint64_t v2 = (const google::protobuf::UnknownFieldSet *)(v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1);
  }
  else
  {
    unint64_t v2 = 0;
  }
  if ((v1 & 0x7E) != 0)
  {
    int v6 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + 2);
    if ((v1 & 2) == 0) {
      int v6 = v2;
    }
    if ((v1 & 4) != 0) {
      int v6 = (const google::protobuf::UnknownFieldSet *)((char *)v6 + 2);
    }
    if ((v1 & 8) != 0) {
      unint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v6 + 2);
    }
    else {
      unint64_t v2 = v6;
    }
    if ((v1 & 0x10) != 0)
    {
      int v11 = *((_DWORD *)this + 9);
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v11 >= 0) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 11;
      }
      unint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v13);
      if ((v1 & 0x20) == 0)
      {
LABEL_16:
        if ((v1 & 0x40) == 0) {
          goto LABEL_21;
        }
        goto LABEL_17;
      }
    }
    else if ((v1 & 0x20) == 0)
    {
      goto LABEL_16;
    }
    int v14 = *((_DWORD *)this + 10);
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v14 >= 0) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 11;
    }
    unint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v16);
    if ((v1 & 0x40) != 0)
    {
LABEL_17:
      int v7 = *((_DWORD *)this + 11);
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v7 >= 0) {
        uint64_t v9 = v8;
      }
      else {
        uint64_t v9 = 11;
      }
      unint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v9);
    }
  }
LABEL_21:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::SupportMetadata_DataCollaborationProperties *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v2;
  return (char *)v2;
}

void TSP::SupportMetadata_DataCollaborationProperties::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::SupportMetadata_DataCollaborationProperties::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::SupportMetadata_DataCollaborationProperties::MergeFrom(std::string *this, const TSP::SupportMetadata_DataCollaborationProperties *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 0x7F) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (google::protobuf::Arena *)(size & 0xFFFFFFFFFFFFFFFELL);
      if (size) {
        uint64_t v8 = *(google::protobuf::Arena **)v8;
      }
      this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1], v6, v8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_18;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    v3[1].__r_.__value_.__s.__data_[8] = *((unsigned char *)a2 + 32);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_19;
    }
LABEL_18:
    v3[1].__r_.__value_.__s.__data_[9] = *((unsigned char *)a2 + 33);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
LABEL_19:
    v3[1].__r_.__value_.__s.__data_[10] = *((unsigned char *)a2 + 34);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
LABEL_20:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *((_DWORD *)a2 + 9);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0)
      {
LABEL_12:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v5;
        return this;
      }
LABEL_11:
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *((_DWORD *)a2 + 11);
      goto LABEL_12;
    }
LABEL_21:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *((_DWORD *)a2 + 10);
    if ((v5 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  return this;
}

void TSP::SupportMetadata_DataCollaborationProperties::CopyFrom(TSP::SupportMetadata_DataCollaborationProperties *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::SupportMetadata_DataCollaborationProperties::Clear(this);
    TSP::SupportMetadata_DataCollaborationProperties::MergeFrom((std::string *)this, a2);
  }
}

uint64_t TSP::SupportMetadata_DataCollaborationProperties::IsInitialized(TSP::SupportMetadata_DataCollaborationProperties *this)
{
  return *((_DWORD *)this + 4) & 1;
}

uint64_t TSP::SupportMetadata_DataCollaborationProperties::GetMetadata(TSP::SupportMetadata_DataCollaborationProperties *this)
{
  return off_1001E9C30[52];
}

uint64_t TSP::SupportMetadata::SupportMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C8E90;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 3sub_100050A8C((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_SupportMetadata_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SupportMetadata_TSPArchiveMessages_2eproto);
  }
  *(unsigned char *)(a1 + 48) = 0;
  return a1;
}

void sub_10004DC88(_Unwind_Exception *a1)
{
  sub_100050BCC(v1);
  _Unwind_Resume(a1);
}

void TSP::SupportMetadata::~SupportMetadata(TSP::SupportMetadata *this)
{
}

{
  uint64_t vars8;

  TSP::SupportMetadata::~SupportMetadata(this);
  operator delete();
}

uint64_t TSP::SupportMetadata::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::SupportMetadata::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (TSP::SupportMetadata_DataCollaborationProperties **)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::SupportMetadata_DataCollaborationProperties::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_100050A8C((void *)this + 2) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(unsigned char *)(v5 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::SupportMetadata::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v29 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v29 + 1);
      unsigned int v9 = *(unsigned __int8 *)v29;
      if ((*(char *)v29 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v29, (const char *)(v10 - 128));
      int v29 = TagFallback;
      if (!TagFallback) {
        goto LABEL_46;
      }
      uint64_t v8 = TagFallback;
      unsigned int v9 = v26;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 18)
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            uint64_t v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            uint64_t v13 = sub_10003562C((unint64_t *)(a1 + 8));
            uint64_t v8 = v29;
          }
          int v29 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
          if (!v29)
          {
LABEL_46:
            int v29 = 0;
            goto LABEL_2;
          }
          goto LABEL_38;
        }
        int v14 = (google::protobuf::internal *)((char *)v8 - 1);
        while (2)
        {
          uint64_t v15 = (google::protobuf::internal *)((char *)v14 + 1);
          int v29 = (google::protobuf::internal *)((char *)v14 + 1);
          uint64_t v16 = *(int **)(a1 + 40);
          if (v16)
          {
            uint64_t v17 = *(int *)(a1 + 32);
            int v18 = *v16;
            if ((int)v17 < *v16)
            {
              *(_DWORD *)(a1 + 3sub_100050A8C((void *)this + 2) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
              goto LABEL_30;
            }
            if (v18 == *(_DWORD *)(a1 + 36))
            {
LABEL_28:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v18 + 1);
              uint64_t v16 = *(int **)(a1 + 40);
              int v18 = *v16;
            }
            int *v16 = v18 + 1;
            uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<TSP::SupportMetadata_DataCollaborationProperties>(*(void *)(a1 + 24));
            uint64_t v20 = *(void *)(a1 + 40);
            uint64_t v21 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_100050A8C((void *)this + 2) = v21 + 1;
            *(void *)(v20 + 8 * v21 + 8) = v19;
            uint64_t v15 = v29;
LABEL_30:
            int v14 = sub_10004E01C(a3, v19, v15);
            int v29 = v14;
            if (!v14) {
              goto LABEL_46;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(unsigned char *)v14 != 18) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        int v18 = *(_DWORD *)(a1 + 36);
        goto LABEL_28;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 1);
      unint64_t v23 = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v24 = *(char *)v22;
      unint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
        int v29 = v22;
        *(unsigned char *)(a1 + 48) = v23 != 0;
        int v5 = 1;
        goto LABEL_38;
      }
      unint64_t v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v23);
      int v29 = v27;
      *(unsigned char *)(a1 + 48) = v28 != 0;
      int v5 = 1;
      if (!v27) {
        goto LABEL_46;
      }
LABEL_38:
      if (sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    uint64_t v8 = (google::protobuf::internal *)((char *)v29 + 2);
LABEL_7:
    int v29 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

google::protobuf::internal *sub_10004E01C(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::SupportMetadata_DataCollaborationProperties::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::SupportMetadata::_InternalSerialize(TSP::SupportMetadata *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned __int8 v6 = *((unsigned char *)this + 48);
    *a2 = 8;
    a2[1] = v6;
    a2 += 2;
  }
  int v7 = *((_DWORD *)this + 8);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v9 = *(TSP::SupportMetadata_DataCollaborationProperties **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v10 = *((_DWORD *)v9 + 5);
      if (v10 > 0x7F)
      {
        a2[1] = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        if (v10 >> 14)
        {
          BOOL v11 = a2 + 3;
          do
          {
            *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v11;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v11 - sub_1000333D0((uint64_t *)this + 1) = v13;
        }
        else
        {
          a2[2] = v12;
          BOOL v11 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v10;
        BOOL v11 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::SupportMetadata_DataCollaborationProperties::_InternalSerialize(v9, v11, a3);
    }
  }
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::SupportMetadata::ByteSizeLong(TSP::SupportMetadata *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (TSP::SupportMetadata_DataCollaborationProperties **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      unsigned __int8 v6 = *v4++;
      int v7 = TSP::SupportMetadata_DataCollaborationProperties::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 16)) {
    uint64_t v8 = (const google::protobuf::UnknownFieldSet *)(v2 + 2);
  }
  else {
    uint64_t v8 = (const google::protobuf::UnknownFieldSet *)v2;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::SupportMetadata *)((char *)this + 8), v8, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v8;
    return (char *)v8;
  }
}

void TSP::SupportMetadata::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::SupportMetadata::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::SupportMetadata::MergeFrom(std::string *this, const TSP::SupportMetadata *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    unsigned __int8 v6 = (TSP::SupportMetadata_DataCollaborationProperties **)(*((void *)a2 + 5) + 8);
    int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1], *((_DWORD *)a2 + 8));
    this = sub_100050C4C(v3 + 1, (std::string **)v7, v6, v5, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    signed int v8 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v5;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v8;
    int v9 = (signed int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v9 < v8) {
      *int v9 = v8;
    }
  }
  if (*((unsigned char *)a2 + 16))
  {
    std::string::value_type v10 = *((unsigned char *)a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    v3[2].__r_.__value_.__s.__data_[0] = v10;
  }
  return this;
}

void TSP::SupportMetadata::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::SupportMetadata::Clear(this);
    TSP::SupportMetadata::MergeFrom((std::string *)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::SupportMetadata::IsInitialized(TSP::SupportMetadata *this)
{
  uint64_t v1 = *((unsigned int *)this + 8);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 5) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 1) != 0);
  return v2 < 1;
}

uint64_t TSP::SupportMetadata::GetMetadata(TSP::SupportMetadata *this)
{
  return off_1001E9C30[54];
}

void *sub_10004E538(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100050D0C(a1, 1);
  TSP::ArchiveInfo::ArchiveInfo((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004E59C()
{
}

void *sub_10004E5C4(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100050DC8(a1, 1);
  TSP::MessageInfo::MessageInfo((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004E628()
{
}

void *sub_10004E650(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100050E84(a1, 1);
  TSP::FieldInfo::FieldInfo((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004E6B4()
{
}

void *sub_10004E6DC(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  BOOL result = sub_100050F40(a1, 1);
  *BOOL result = off_1001C7E10;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  *((_DWORD *)result + 9) = 0;
  return result;
}

void *sub_10004E770(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100050FFC(a1, 1);
  TSP::ComponentInfo::ComponentInfo((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004E7D4()
{
}

void *sub_10004E7FC(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_1000510B8(this, 1);
  *BOOL result = off_1001C7F70;
  result[1] = this;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  *((unsigned char *)result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  return result;
}

void *sub_10004E874(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100051190(this, 1);
  *BOOL result = off_1001C8020;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  *((_DWORD *)result + 8) = 0;
  return result;
}

void *sub_10004E8E8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100051268(a1, 1);
  TSP::ComponentDataReference::ComponentDataReference(v2, (uint64_t)a1);
  return v2;
}

void sub_10004E94C()
{
}

void *sub_10004E974(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_100051324(a1);
}

void sub_10004EA14()
{
}

void *sub_10004EA3C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100051454(a1, 1);
  TSP::FeatureInfo::FeatureInfo(v2, (uint64_t)a1);
  return v2;
}

void sub_10004EAA0()
{
}

void *sub_10004EAC8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100051510(a1, 1);
  TSP::PackageMetadata::PackageMetadata((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004EB2C()
{
}

void *sub_10004EB54(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_1000515CC(a1, 1);
  TSP::DocumentRevision::DocumentRevision((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004EBB8()
{
}

void *sub_10004EBE0(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100051688(a1, 1);
  TSP::PasteboardMetadata::PasteboardMetadata(v2, (uint64_t)a1);
  return v2;
}

void sub_10004EC44()
{
}

void *sub_10004EC6C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100051744(a1, 1);
  TSP::DataInfo::DataInfo((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004ECD0()
{
}

void *sub_10004ECF8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_100051800(a1);
}

void sub_10004ED98()
{
}

void *sub_10004EDC0(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100051930(a1, 1);
  TSP::DataMetadataMap::DataMetadataMap((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004EE24()
{
}

void *sub_10004EE4C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1000519EC(a1);
}

void sub_10004EEEC()
{
}

void *sub_10004EF14(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100051B1C(a1, 1);
  TSP::EncryptionInfo::EncryptionInfo(v2, (uint64_t)a1);
  return v2;
}

void sub_10004EF78()
{
}

void *sub_10004EFA0(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100051BD8(this, 1);
  *BOOL result = off_1001C8860;
  result[1] = this;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_10004F014(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100051CB0(a1, 1);
  TSP::ViewStateMetadata::ViewStateMetadata(v2, (uint64_t)a1);
  return v2;
}

void sub_10004F078()
{
}

void *sub_10004F0A0(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100051D6C(a1, 1);
  TSP::ObjectSerializationMetadata::ObjectSerializationMetadata((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004F104()
{
}

void *sub_10004F12C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100051E28(a1, 1);
  TSP::ObjectSerializationDirectory_Entry::ObjectSerializationDirectory_Entry(v2, (uint64_t)a1);
  return v2;
}

void sub_10004F190()
{
}

void *sub_10004F1B8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100051EE4(a1, 1);
  TSP::ObjectSerializationDirectory::ObjectSerializationDirectory((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004F21C()
{
}

void *sub_10004F244(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100051FA0(a1, 1);
  TSP::DataPropertiesEntryV1::DataPropertiesEntryV1((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004F2A8()
{
}

void *sub_10004F2D0(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_10005205C(a1, 1);
  TSP::DataPropertiesV1::DataPropertiesV1((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004F334()
{
}

void *sub_10004F35C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_100052118(a1);
}

void sub_10004F400()
{
}

void *sub_10004F428(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_10005224C(a1, 1);
  TSP::SupportMetadata_DataCollaborationProperties::SupportMetadata_DataCollaborationProperties(v2, (uint64_t)a1);
  return v2;
}

void sub_10004F48C()
{
}

void *sub_10004F4B4(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  int v2 = sub_100052308(a1, 1);
  TSP::SupportMetadata::SupportMetadata((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10004F518()
{
}

uint64_t sub_10004F53C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ArchiveInfo>(0);
}

uint64_t sub_10004F544(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ArchiveInfo>(a2);
}

uint64_t sub_10004F54C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::MessageInfo>(0);
}

uint64_t sub_10004F554(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::MessageInfo>(a2);
}

uint64_t sub_10004F55C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::FieldInfo>(0);
}

uint64_t sub_10004F564(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::FieldInfo>(a2);
}

uint64_t sub_10004F56C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::FieldPath>(0);
}

uint64_t sub_10004F574(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::FieldPath>(a2);
}

uint64_t sub_10004F57C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_10004F584()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentInfo>(0);
}

uint64_t sub_10004F58C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentInfo>(a2);
}

uint64_t sub_10004F594()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentExternalReference>(0);
}

uint64_t sub_10004F59C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentExternalReference>(a2);
}

uint64_t sub_10004F5A4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentDataReference_ObjectReference>(0);
}

uint64_t sub_10004F5AC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentDataReference_ObjectReference>(a2);
}

uint64_t sub_10004F5B4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentDataReference>(0);
}

uint64_t sub_10004F5BC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentDataReference>(a2);
}

uint64_t sub_10004F5C4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectUUIDMapEntry>(0);
}

uint64_t sub_10004F5CC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectUUIDMapEntry>(a2);
}

uint64_t sub_10004F5D4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::FeatureInfo>(0);
}

uint64_t sub_10004F5DC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::FeatureInfo>(a2);
}

uint64_t sub_10004F5E4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::PackageMetadata>(0);
}

uint64_t sub_10004F5EC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::PackageMetadata>(a2);
}

uint64_t sub_10004F5F4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DocumentRevision>(0);
}

uint64_t sub_10004F5FC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DocumentRevision>(a2);
}

uint64_t sub_10004F604()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::PasteboardMetadata>(0);
}

uint64_t sub_10004F60C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::PasteboardMetadata>(a2);
}

uint64_t sub_10004F614()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataInfo>(0);
}

uint64_t sub_10004F61C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataInfo>(a2);
}

uint64_t sub_10004F624()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataMetadataMap_DataMetadataMapEntry>(0);
}

uint64_t sub_10004F62C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataMetadataMap_DataMetadataMapEntry>(a2);
}

uint64_t sub_10004F634()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataMetadataMap>(0);
}

uint64_t sub_10004F63C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataMetadataMap>(a2);
}

uint64_t sub_10004F644(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_10004F64C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataMetadata>(0);
}

uint64_t sub_10004F654(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataMetadata>(a2);
}

uint64_t sub_10004F65C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::EncryptionInfo>(0);
}

uint64_t sub_10004F664(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::EncryptionInfo>(a2);
}

uint64_t sub_10004F66C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::EncryptionBlockInfo>(0);
}

uint64_t sub_10004F674(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::EncryptionBlockInfo>(a2);
}

uint64_t sub_10004F67C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ViewStateMetadata>(0);
}

uint64_t sub_10004F684(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ViewStateMetadata>(a2);
}

uint64_t sub_10004F68C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectSerializationMetadata>(0);
}

uint64_t sub_10004F694(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectSerializationMetadata>(a2);
}

uint64_t sub_10004F69C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectSerializationDirectory_Entry>(0);
}

uint64_t sub_10004F6A4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectSerializationDirectory_Entry>(a2);
}

uint64_t sub_10004F6AC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectSerializationDirectory>(0);
}

uint64_t sub_10004F6B4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectSerializationDirectory>(a2);
}

uint64_t sub_10004F6BC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataPropertiesEntryV1>(0);
}

uint64_t sub_10004F6C4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataPropertiesEntryV1>(a2);
}

uint64_t sub_10004F6CC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataPropertiesV1>(0);
}

uint64_t sub_10004F6D4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataPropertiesV1>(a2);
}

uint64_t sub_10004F6DC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DocumentMetadata>(0);
}

uint64_t sub_10004F6E4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DocumentMetadata>(a2);
}

uint64_t sub_10004F6EC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SupportMetadata_DataCollaborationProperties>(0);
}

uint64_t sub_10004F6F4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SupportMetadata_DataCollaborationProperties>(a2);
}

uint64_t sub_10004F6FC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SupportMetadata>(0);
}

uint64_t sub_10004F704(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SupportMetadata>(a2);
}

google::protobuf::Arena **sub_10004F70C(google::protobuf::Arena **result)
{
  uint64_t v1 = *((unsigned int *)result + 2);
  if ((int)v1 >= 1)
  {
    int v2 = result;
    uint64_t v3 = (uint64_t)result[2] + 8;
    do
    {
      BOOL result = (google::protobuf::Arena **)(*(void *)v3 + 8);
      char v4 = *(unsigned char *)result;
      *(_DWORD *)(*(void *)v3 + 16) = 0;
      if (v4) {
        BOOL result = sub_100035820((unint64_t *)result);
      }
      v3 += 8;
      --v1;
    }
    while (v1);
    *((_DWORD *)v2 + sub_100050A8C((void *)this + 2) = 0;
  }
  return result;
}

void sub_10004F76C(void *a1)
{
  int v2 = (TSP::MessageInfo **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::MessageInfo::~MessageInfo(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (TSP::MessageInfo **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_10004F7EC(uint64_t *result, TSP::MessageInfo **a2, TSP::MessageInfo **a3, unsigned int a4, unsigned int a5)
{
  int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    BOOL v11 = a3;
    unsigned int v12 = a2;
    do
    {
      unsigned int v14 = *v11++;
      unsigned int v13 = v14;
      uint64_t v15 = *v12++;
      BOOL result = sub_10004F89C(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (TSP::MessageInfo *)google::protobuf::Arena::CreateMaybeMessage<TSP::MessageInfo>(v18);
      BOOL result = sub_10004F89C(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void *sub_10004F89C(TSP::MessageInfo *a1, TSP::MessageInfo *this)
{
  return TSP::MessageInfo::MergeFrom(this, a1);
}

void sub_10004F8AC(void *a1)
{
  int v2 = (TSP::FieldInfo **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::FieldInfo::~FieldInfo(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (TSP::FieldInfo **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_10004F92C(void *a1)
{
  int v2 = (TSP::FieldPath **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::FieldPath::~FieldPath(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (TSP::FieldPath **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

unsigned __int8 *sub_10004F9AC(google::protobuf::io::EpsCopyOutputStream *this, int a2, int *a3, unsigned int a4, unsigned __int8 *a5, uint64_t (*a6)(void))
{
  if (*(void *)this <= (unint64_t)a5) {
    a5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a5);
  }
  BOOL v11 = sub_10004FAC0((uint64_t)this, a2, a4, a5);
  unsigned int v12 = (unsigned int *)*((void *)a3 + 1);
  unsigned int v13 = &v12[*a3];
  do
  {
    if (*(void *)this <= (unint64_t)v11) {
      BOOL v11 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, v11);
    }
    unsigned int v14 = *v12++;
    unsigned int v15 = a6(v14);
    if (v15 > 0x7F)
    {
      *BOOL v11 = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      if (v15 >> 14)
      {
        v11 += 2;
        do
        {
          *(v11 - sub_1000333D0((uint64_t *)this + 1) = v16 | 0x80;
          unsigned int v17 = v16 >> 7;
          ++v11;
          unsigned int v18 = v16 >> 14;
          v16 >>= 7;
        }
        while (v18);
        *(v11 - sub_1000333D0((uint64_t *)this + 1) = v17;
      }
      else
      {
        v11[1] = v16;
        v11 += 2;
      }
    }
    else
    {
      *v11++ = v15;
    }
  }
  while (v12 < v13);
  return v11;
}

unsigned char *sub_10004FAC0(uint64_t a1, int a2, unsigned int a3, unsigned char *a4)
{
  unsigned int v4 = (8 * a2) | 2;
  if (v4 > 0x7F)
  {
    *a4 = (8 * a2) | 0x82;
    unsigned int v6 = (8 * a2) >> 7;
    if (v4 >> 14)
    {
      unsigned int v5 = a4 + 2;
      do
      {
        *(v5 - sub_1000333D0((uint64_t *)this + 1) = v6 | 0x80;
        unsigned int v7 = v6 >> 7;
        ++v5;
        unsigned int v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
      *(v5 - sub_1000333D0((uint64_t *)this + 1) = v7;
    }
    else
    {
      a4[1] = v6;
      unsigned int v5 = a4 + 2;
    }
  }
  else
  {
    *a4 = v4;
    unsigned int v5 = a4 + 1;
  }
  if (a3 >= 0x80)
  {
    do
    {
      *v5++ = a3 | 0x80;
      unsigned int v9 = a3 >> 7;
      unsigned int v11 = a3 >> 14;
      a3 >>= 7;
    }
    while (v11);
  }
  else
  {
    LOBYTE(v9) = a3;
  }
  unsigned char *v5 = v9;
  return v5 + 1;
}

unsigned __int8 *sub_10004FB54(google::protobuf::io::EpsCopyOutputStream *this, int a2, int *a3, unsigned int a4, unsigned __int8 *a5, uint64_t (*a6)(uint64_t))
{
  if (*(void *)this <= (unint64_t)a5) {
    a5 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, a5);
  }
  unsigned int v11 = sub_10004FAC0((uint64_t)this, a2, a4, a5);
  unsigned int v12 = (uint64_t *)*((void *)a3 + 1);
  unsigned int v13 = &v12[*a3];
  do
  {
    if (*(void *)this <= (unint64_t)v11) {
      unsigned int v11 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(this, v11);
    }
    uint64_t v14 = *v12++;
    unint64_t v15 = a6(v14);
    if (v15 > 0x7F)
    {
      *unsigned int v11 = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      if (v15 >> 14)
      {
        v11 += 2;
        do
        {
          *(v11 - sub_1000333D0((uint64_t *)this + 1) = v16 | 0x80;
          unint64_t v17 = v16 >> 7;
          ++v11;
          unint64_t v18 = v16 >> 14;
          v16 >>= 7;
        }
        while (v18);
        *(v11 - sub_1000333D0((uint64_t *)this + 1) = v17;
      }
      else
      {
        v11[1] = v16;
        v11 += 2;
      }
    }
    else
    {
      *v11++ = v15;
    }
  }
  while (v12 < v13);
  return v11;
}

uint64_t *sub_10004FC68(uint64_t *result, TSP::FieldInfo **a2, TSP::FieldInfo **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_10004FD18(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (TSP::FieldInfo *)google::protobuf::Arena::CreateMaybeMessage<TSP::FieldInfo>(v18);
      BOOL result = sub_10004FD18(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void *sub_10004FD18(TSP::FieldInfo *a1, TSP::FieldInfo *this)
{
  return TSP::FieldInfo::MergeFrom(this, a1);
}

void **sub_10004FD28(void **result, void ***a2, TSP::FieldPath **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_10004FDD8(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::FieldPath>(v18);
      BOOL result = sub_10004FDD8(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_10004FDD8(TSP::FieldPath *a1, void **this)
{
  return TSP::FieldPath::MergeFrom(this, a1);
}

void sub_10004FDE8(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*(void *)v3)
        {
          sub_1000333D0((uint64_t *)(*(void *)v3 + 8));
          operator delete();
        }
        v3 += 2;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_10004FE74(void *a1)
{
  int v2 = (TSP::ComponentDataReference **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::ComponentDataReference::~ComponentDataReference(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (TSP::ComponentDataReference **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_10004FEF4(void *a1)
{
  int v2 = (TSP::ObjectUUIDMapEntry **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::ObjectUUIDMapEntry::~ObjectUUIDMapEntry(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (TSP::ObjectUUIDMapEntry **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_10004FF74(void *a1)
{
  int v2 = (TSP::FeatureInfo **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::FeatureInfo::~FeatureInfo(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (TSP::FeatureInfo **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void **sub_10004FFF4(void **result, void ***a2, TSP::ComponentExternalReference **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_1000500A4(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentExternalReference>(v18);
      BOOL result = sub_1000500A4(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_1000500A4(TSP::ComponentExternalReference *a1, void **this)
{
  return TSP::ComponentExternalReference::MergeFrom(this, a1);
}

void **sub_1000500B4(void **result, void ***a2, TSP::ComponentDataReference **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_100050164(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentDataReference>(v18);
      BOOL result = sub_100050164(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_100050164(TSP::ComponentDataReference *a1, void **this)
{
  return TSP::ComponentDataReference::MergeFrom(this, a1);
}

void **sub_100050174(void **result, void ***a2, TSP::ObjectUUIDMapEntry **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_100050224(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectUUIDMapEntry>(v18);
      BOOL result = sub_100050224(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_100050224(TSP::ObjectUUIDMapEntry *a1, void **this)
{
  return TSP::ObjectUUIDMapEntry::MergeFrom(this, a1);
}

std::string *sub_100050234(std::string *result, std::string **a2, TSP::FeatureInfo **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_1000502E4(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<TSP::FeatureInfo>(v18);
      BOOL result = sub_1000502E4(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *sub_1000502E4(TSP::FeatureInfo *a1, std::string *this)
{
  return TSP::FeatureInfo::MergeFrom(this, a1);
}

void sub_1000502F4(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*(void *)v3)
        {
          sub_1000333D0((uint64_t *)(*(void *)v3 + 8));
          operator delete();
        }
        v3 += 2;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void **sub_100050380(void **result, void ***a2, TSP::ComponentDataReference_ObjectReference **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_100050430(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentDataReference_ObjectReference>(v18);
      BOOL result = sub_100050430(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_100050430(TSP::ComponentDataReference_ObjectReference *a1, void **this)
{
  return TSP::ComponentDataReference_ObjectReference::MergeFrom(this, a1);
}

void sub_100050440(void *a1)
{
  int v2 = (TSP::ComponentInfo **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::ComponentInfo::~ComponentInfo(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (TSP::ComponentInfo **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1000504C0(void *a1)
{
  int v2 = (TSP::DataInfo **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::DataInfo::~DataInfo(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (TSP::DataInfo **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

unint64_t *sub_100050540(unint64_t *result, TSP::ComponentInfo **a2, TSP::ComponentInfo **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_1000505F0(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    unint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (TSP::ComponentInfo *)google::protobuf::Arena::CreateMaybeMessage<TSP::ComponentInfo>(v18);
      BOOL result = sub_1000505F0(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

unint64_t *sub_1000505F0(TSP::ComponentInfo *a1, TSP::ComponentInfo *this)
{
  return TSP::ComponentInfo::MergeFrom((unint64_t *)this, a1);
}

void sub_100050600(uint64_t *a1, TSP::DataInfo **a2, TSP::DataInfo **a3, unsigned int a4, unsigned int a5)
{
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      sub_1000506B0(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *a1;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (TSP::DataInfo *)google::protobuf::Arena::CreateMaybeMessage<TSP::DataInfo>(v18);
      sub_1000506B0(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
}

void sub_1000506B0(TSP::DataInfo *a1, TSP::DataInfo *this)
{
}

void sub_1000506C0(void *a1)
{
  int v2 = (TSP::DataMetadataMap_DataMetadataMapEntry **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::DataMetadataMap_DataMetadataMapEntry::~DataMetadataMap_DataMetadataMapEntry(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (TSP::DataMetadataMap_DataMetadataMapEntry **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void **sub_100050740(void **result, void ***a2, TSP::DataMetadataMap_DataMetadataMapEntry **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_1000507F0(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::DataMetadataMap_DataMetadataMapEntry>(v18);
      BOOL result = sub_1000507F0(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_1000507F0(TSP::DataMetadataMap_DataMetadataMapEntry *a1, void **this)
{
  return TSP::DataMetadataMap_DataMetadataMapEntry::MergeFrom(this, a1);
}

void sub_100050800(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*(void *)v3)
        {
          sub_1000333D0((uint64_t *)(*(void *)v3 + 8));
          operator delete();
        }
        v3 += 2;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void **sub_10005088C(void **result, void ***a2, TSP::EncryptionBlockInfo **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_10005093C(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::EncryptionBlockInfo>(v18);
      BOOL result = sub_10005093C(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_10005093C(TSP::EncryptionBlockInfo *a1, void **this)
{
  return TSP::EncryptionBlockInfo::MergeFrom(this, a1);
}

void sub_10005094C(void *a1)
{
  int v2 = (TSP::ObjectSerializationDirectory_Entry **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::ObjectSerializationDirectory_Entry::~ObjectSerializationDirectory_Entry(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (TSP::ObjectSerializationDirectory_Entry **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_1000509CC(std::string *result, std::string **a2, TSP::ObjectSerializationDirectory_Entry **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_100050A7C(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectSerializationDirectory_Entry>(v18);
      BOOL result = sub_100050A7C(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *sub_100050A7C(TSP::ObjectSerializationDirectory_Entry *a1, std::string *this)
{
  return TSP::ObjectSerializationDirectory_Entry::MergeFrom(this, a1);
}

void sub_100050A8C(void *a1)
{
  int v2 = (TSP::DataPropertiesEntryV1 **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::DataPropertiesEntryV1::~DataPropertiesEntryV1(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (TSP::DataPropertiesEntryV1 **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

unint64_t *sub_100050B0C(unint64_t *result, TSP::DataPropertiesEntryV1 **a2, TSP::DataPropertiesEntryV1 **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_100050BBC(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    unint64_t v18 = *v9;
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (TSP::DataPropertiesEntryV1 *)google::protobuf::Arena::CreateMaybeMessage<TSP::DataPropertiesEntryV1>(v18);
      BOOL result = sub_100050BBC(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

unint64_t *sub_100050BBC(TSP::DataPropertiesEntryV1 *a1, TSP::DataPropertiesEntryV1 *this)
{
  return TSP::DataPropertiesEntryV1::MergeFrom((unint64_t *)this, a1);
}

void sub_100050BCC(void *a1)
{
  int v2 = (TSP::SupportMetadata_DataCollaborationProperties **)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::SupportMetadata_DataCollaborationProperties::~SupportMetadata_DataCollaborationProperties(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (TSP::SupportMetadata_DataCollaborationProperties **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_100050C4C(std::string *result, std::string **a2, TSP::SupportMetadata_DataCollaborationProperties **a3, unsigned int a4, unsigned int a5)
{
  unsigned int v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    unsigned int v12 = a2;
    do
    {
      uint64_t v14 = *v11++;
      unsigned int v13 = v14;
      unint64_t v15 = *v12++;
      BOOL result = sub_100050CFC(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    uint64_t v19 = &a3[a5];
    uint64_t v20 = &a2[a5];
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<TSP::SupportMetadata_DataCollaborationProperties>(v18);
      BOOL result = sub_100050CFC(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *sub_100050CFC(TSP::SupportMetadata_DataCollaborationProperties *a1, std::string *this)
{
  return TSP::SupportMetadata_DataCollaborationProperties::MergeFrom(this, a1);
}

void *sub_100050D0C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x40uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x40uLL, (void (*)(void *))TSP::ArchiveInfo::~ArchiveInfo);
}

void *sub_100050DC8(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0xD8uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0xD8uLL, (void (*)(void *))TSP::MessageInfo::~MessageInfo);
}

void *sub_100050E84(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x80uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x80uLL, (void (*)(void *))TSP::FieldInfo::~FieldInfo);
}

void *sub_100050F40(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))TSP::FieldPath::~FieldPath);
}

void *sub_100050FFC(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x138uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x138uLL, (void (*)(void *))TSP::ComponentInfo::~ComponentInfo);
}

void *sub_1000510B8(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))sub_100051170);
}

uint64_t *sub_100051170(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100051190(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))sub_100051248);
}

uint64_t *sub_100051248(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100051268(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))TSP::ComponentDataReference::~ComponentDataReference);
}

void *sub_100051324(google::protobuf::Arena *a1)
{
  int v2 = sub_100051398(a1, 1);
  void *v2 = off_1001C8180;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_ObjectUUIDMapEntry_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ObjectUUIDMapEntry_TSPArchiveMessages_2eproto);
  }
  v2[3] = 0;
  v2[4] = 0;
  return v2;
}

void *sub_100051398(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))TSP::ObjectUUIDMapEntry::~ObjectUUIDMapEntry);
}

void *sub_100051454(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x50uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x50uLL, (void (*)(void *))TSP::FeatureInfo::~FeatureInfo);
}

void *sub_100051510(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0xD0uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0xD0uLL, (void (*)(void *))TSP::PackageMetadata::~PackageMetadata);
}

void *sub_1000515CC(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::DocumentRevision::~DocumentRevision);
}

void *sub_100051688(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x78uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x78uLL, (void (*)(void *))TSP::PasteboardMetadata::~PasteboardMetadata);
}

void *sub_100051744(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0xA0uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0xA0uLL, (void (*)(void *))TSP::DataInfo::~DataInfo);
}

void *sub_100051800(google::protobuf::Arena *a1)
{
  int v2 = sub_100051874(a1, 1);
  void *v2 = off_1001C85A0;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_DataMetadataMap_DataMetadataMapEntry_TSPArchiveMessages_2eproto, memory_order_acquire))
  {
    google::protobuf::internal::InitSCCImpl(scc_info_DataMetadataMap_DataMetadataMapEntry_TSPArchiveMessages_2eproto);
  }
  v2[3] = 0;
  v2[4] = 0;
  return v2;
}

void *sub_100051874(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))TSP::DataMetadataMap_DataMetadataMapEntry::~DataMetadataMap_DataMetadataMapEntry);
}

void *sub_100051930(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::DataMetadataMap::~DataMetadataMap);
}

void *sub_1000519EC(google::protobuf::Arena *a1)
{
  int v2 = sub_100051A60(a1, 1);
  void *v2 = off_1001C8700;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_DataMetadata_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DataMetadata_TSPArchiveMessages_2eproto);
  }
  v2[3] = 0;
  return v2;
}

void *sub_100051A60(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))TSP::DataMetadata::~DataMetadata);
}

void *sub_100051B1C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x40uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x40uLL, (void (*)(void *))TSP::EncryptionInfo::~EncryptionInfo);
}

void *sub_100051BD8(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))sub_100051C90);
}

uint64_t *sub_100051C90(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100051CB0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x70uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x70uLL, (void (*)(void *))TSP::ViewStateMetadata::~ViewStateMetadata);
}

void *sub_100051D6C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x98uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x98uLL, (void (*)(void *))TSP::ObjectSerializationMetadata::~ObjectSerializationMetadata);
}

void *sub_100051E28(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::ObjectSerializationDirectory_Entry::~ObjectSerializationDirectory_Entry);
}

void *sub_100051EE4(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::ObjectSerializationDirectory::~ObjectSerializationDirectory);
}

void *sub_100051FA0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x50uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x50uLL, (void (*)(void *))TSP::DataPropertiesEntryV1::~DataPropertiesEntryV1);
}

void *sub_10005205C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::DataPropertiesV1::~DataPropertiesV1);
}

void *sub_100052118(google::protobuf::Arena *a1)
{
  int v2 = sub_100052190(a1, 1);
  void *v2 = off_1001C8D30;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_DocumentMetadata_TSPArchiveMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_DocumentMetadata_TSPArchiveMessages_2eproto);
  }
  *((unsigned char *)v2 + 3sub_100050A8C((void *)this + 2) = 0;
  v2[3] = 0;
  return v2;
}

void *sub_100052190(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))TSP::DocumentMetadata::~DocumentMetadata);
}

void *sub_10005224C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::SupportMetadata_DataCollaborationProperties::~SupportMetadata_DataCollaborationProperties);
}

void *sub_100052308(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))TSP::SupportMetadata::~SupportMetadata);
}

void sub_1000523C4()
{
}

void sub_10005253C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);

  _Block_object_dispose((const void *)(v23 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100052574(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  return result;
}

void sub_100052584(uint64_t a1)
{
}

void sub_10005258C(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if (!v8)
  {
    if (v7)
    {
      uint64_t v14 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
      if (a2)
      {
        if (!v14)
        {
          id v15 = +[NSData tsp_dataFromDispatchData:v7];
          uint64_t v16 = *(void *)(a1 + 40);
LABEL_12:
          uint64_t v17 = *(void *)(v16 + 8);
          std::string::size_type v18 = *(void **)(v17 + 40);
          *(void *)(v17 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v15;

          goto LABEL_16;
        }
      }
      else if (!v14)
      {
        id v19 = objc_alloc_init((Class)NSMutableData);
        uint64_t v20 = *(void *)(*(void *)(a1 + 32) + 8);
        uint64_t v21 = *(void **)(v20 + 40);
        *(void *)(v20 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v19;

        uint64_t v14 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
      }
      objc_msgSend(v14, "tsp_appendDispatchData:", v7);
      goto LABEL_16;
    }
    id v15 = objc_alloc_init((Class)NSMutableData);
    uint64_t v16 = *(void *)(a1 + 32);
    goto LABEL_12;
  }
  uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;

  uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8);
  unsigned int v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;

  if (TSUDefaultCat_init_token != -1) {
    dispatch_once(&TSUDefaultCat_init_token, &stru_1001C91D0);
  }
  unsigned int v13 = TSUDefaultCat_log_t;
  if (os_log_type_enabled((os_log_t)v13, OS_LOG_TYPE_ERROR))
  {
    uint64_t v22 = (objc_class *)objc_opt_class();
    NSStringFromClass(v22);
    id v23 = (id)objc_claimAutoreleasedReturnValue();
    int v24 = (objc_class *)objc_opt_class();
    NSStringFromClass(v24);
    id v25 = (id)objc_claimAutoreleasedReturnValue();
    unsigned int v26 = [v8 domain];
    int v27 = 138544386;
    id v28 = v23;
    __int16 v29 = 2114;
    id v30 = v25;
    __int16 v31 = 2114;
    int v32 = v26;
    __int16 v33 = 2048;
    id v34 = [v8 code];
    __int16 v35 = 2112;
    id v36 = v8;
    _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v13, OS_LOG_TYPE_ERROR, "Error creating NSData for %{public}@. errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", (uint8_t *)&v27, 0x34u);
  }
LABEL_16:
}

void sub_1000527E8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10005283C(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100052A88(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100052B40(uint64_t a1)
{
  [*(id *)(*(void *)(a1 + 32) + 24) didFinishProcessing];
  [*(id *)(*(void *)(a1 + 32) + 16) close];
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(v2 + 16);
  *(void *)(v2 + 16) = 0;

  uint64_t v4 = *(void *)(a1 + 32);
  unsigned int v5 = *(void **)(v4 + 24);
  *(void *)(v4 + 24) = 0;
}

void sub_100052C3C(uint64_t a1)
{
  uint64_t v1 = *(void **)(*(void *)(a1 + 32) + 16);
  if (!v1)
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001C9238);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100163C2C();
    }
    TSUSetCrashReporterInfo((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Already closed", v5, v6, v7, v8, v9, v10, v11, (char)"-[TSPCompressionComponentWriteChannel writeData:]_block_invoke");
    unsigned int v12 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPCompressionComponentWriteChannel writeData:]_block_invoke");
    unsigned int v13 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPCompressionComponentWriteChannel.m"];
    +[TSUAssertionHandler handleFailureInFunction:v12 file:v13 lineNumber:44 isFatal:1 description:"Already closed"];

    TSUCrashBreakpoint();
    abort();
  }
  v18[0] = 0;
  v18[1] = v18;
  v18[2] = 0x2020000000;
  char v19 = 1;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_100052EB0;
  v15[3] = &unk_1001C9280;
  uint64_t v17 = v18;
  id v3 = v1;
  id v16 = v3;
  [*(id *)(*(void *)(a1 + 32) + 24) setHandler:v15];
  applier[0] = _NSConcreteStackBlock;
  applier[1] = 3221225472;
  applier[2] = sub_100052FE8;
  applier[3] = &unk_1001C92A8;
  uint64_t v4 = *(NSObject **)(a1 + 40);
  applier[4] = *(void *)(a1 + 32);
  dispatch_data_apply(v4, applier);

  _Block_object_dispose(v18, 8);
}

void sub_100052E54(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100052E6C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t sub_100052EB0(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8 = a2;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = v10;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    if (v10)
    {
      if (TSUPersistenceSerializationCat_init_token != -1) {
        dispatch_once(&TSUPersistenceSerializationCat_init_token, &stru_1001C9258);
      }
      unsigned int v12 = TSUPersistenceSerializationCat_log_t;
      if (os_log_type_enabled((os_log_t)TSUPersistenceSerializationCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_100163CC0(v12, v11);
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
    }
    else
    {
      [*(id *)(a1 + 32) writeData:v9];
    }
  }
  uint64_t v13 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);

  return v13;
}

void sub_100052FA4(id a1)
{
  TSULogCreateCategory("TSUPersistenceSerializationCat");
  TSUPersistenceSerializationCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

id sub_100052FE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) processBytes:a4 size:a5];
}

uint64_t TSP::ObjectStateIdentifier::hasDataState(TSP::ObjectStateIdentifier *this)
{
  return *(unsigned __int8 *)this;
}

uint64_t TSP::ObjectStateIdentifier::dataState(TSP::ObjectStateIdentifier *this)
{
  if (!*(unsigned char *)this)
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001C92F0);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100163DB4();
    }
    uint64_t v2 = +[NSString stringWithUTF8String:"int64_t TSP::ObjectStateIdentifier::dataState() const"];
    id v3 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPObjectStateIdentifier.mm"];
    +[TSUAssertionHandler handleFailureInFunction:v2 file:v3 lineNumber:30 isFatal:0 description:"Asked for data state when we have none"];

    +[TSUAssertionHandler logBacktraceThrottled];
  }
  return *((void *)this + 1);
}

void sub_100053160(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_10005317C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

id TSP::ObjectStateIdentifier::fileState(TSP::ObjectStateIdentifier *this)
{
  if (!*((unsigned char *)this + 16))
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001C9310);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100163E48();
    }
    uint64_t v2 = +[NSString stringWithUTF8String:"NSString *TSP::ObjectStateIdentifier::fileState() const"];
    id v3 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/TSPObjectStateIdentifier.mm"];
    +[TSUAssertionHandler handleFailureInFunction:v2 file:v3 lineNumber:45 isFatal:0 description:"Asked for file state when we have none"];

    +[TSUAssertionHandler logBacktraceThrottled];
  }
  uint64_t v4 = (void *)*((void *)this + 3);
  return v4;
}

void sub_1000532DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000532F8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100053520(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_start(va, a7);
  uint64_t v14 = v11;

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10005358C(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  id v6 = a4;
  if (v6)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
  }
  else if (!a2)
  {
    goto LABEL_5;
  }
  id v7 = v6;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
  id v6 = v7;
LABEL_5:
}

void sub_100053720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);

  _Unwind_Resume(a1);
}

uint64_t sub_100053744(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  return result;
}

void sub_100053754(uint64_t a1)
{
}

void sub_10005375C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v9 = a3;
  id v6 = a4;
  if (v6)
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 8);
    id v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
  }
  else if (v9)
  {
    objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), "tsp_appendDispatchData:", v9);
  }
}

void sub_1000537E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000538C0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100053998(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100053A6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100053BEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, void *a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id a22)
{
  _Block_object_dispose(&a17, 8);
  _Unwind_Resume(a1);
}

void sub_100053C24(uint64_t a1, const void *a2, uint64_t a3, size_t a4)
{
  v15[0] = 0;
  v15[1] = v15;
  v15[2] = 0x3032000000;
  v15[3] = sub_100053744;
  void v15[4] = sub_100053754;
  id v16 = *(id *)(a1 + 32);
  id v8 = *(NSObject **)(a1 + 40);
  destructor[0] = _NSConcreteStackBlock;
  destructor[1] = 3221225472;
  destructor[2] = sub_100053D98;
  destructor[3] = &unk_1001C9388;
  destructor[4] = v15;
  id v9 = dispatch_data_create(a2, a4, v8, destructor);
  dispatch_data_t concat = dispatch_data_create_concat(*(dispatch_data_t *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v9);
  uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 8);
  unsigned int v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = concat;

  uint64_t v13 = *(void *)(a1 + 48);
  if (v13) {
    (*(void (**)(uint64_t, NSObject *, uint64_t, const void *, size_t))(v13 + 16))(v13, v9, a3, a2, a4);
  }

  _Block_object_dispose(v15, 8);
}

void sub_100053D74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Block_object_dispose(&a15, 8);
  _Unwind_Resume(a1);
}

void sub_100053D98(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v2 = *(void **)(v1 + 40);
  *(void *)(v1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = 0;
}

void sub_100053FF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100054020(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100054064(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10005428C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000542C0(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

id sub_10005439C(uint64_t a1)
{
  dispatch_suspend(*(dispatch_object_t *)(*(void *)(a1 + 32) + 8));
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(v2 + 16);
  if (!v3)
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001C9430);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100163FD0();
    }
    TSUSetCrashReporterInfo((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Already closed", v6, v7, v8, v9, v10, v11, v12, (char)"-[TSPComponentWriteChannelAdapter writeData:]_block_invoke");
    uint64_t v13 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSPComponentWriteChannelAdapter writeData:]_block_invoke");
    uint64_t v14 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/src/NSData_TSPersistence.mm"];
    +[TSUAssertionHandler handleFailureInFunction:v13 file:v14 lineNumber:265 isFatal:1 description:"Already closed"];

    TSUCrashBreakpoint();
    abort();
  }
  uint64_t v4 = *(void *)(a1 + 40);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10005458C;
  v15[3] = &unk_1001C6AF0;
  void v15[4] = v2;
  return [v3 writeData:v4 handler:v15];
}

void sub_100054524(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100054548(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10005458C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v8 = a4;
  uint64_t v7 = *(void *)(*(void *)(a1 + 32) + 24);
  if (v7) {
    (*(void (**)(uint64_t, uint64_t, uint64_t, id))(v7 + 16))(v7, a2, a3, v8);
  }
  if (a2) {
    dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 32) + 8));
  }
}

void sub_100054614(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

id sub_1000546EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _close];
}

void sub_10005496C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000549AC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100054B20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100054D54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100054DA8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10005500C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100055060(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000552C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100055318(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10005557C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000555D0(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100055834(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100055888(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100055A30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100055B54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100055DD8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::CFUUIDArchive::CFUUIDArchive(TSP::_CFUUIDArchive_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_CFUUIDArchive_default_instance_, v4);
}

void sub_100055E48(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_Color_default_instance_ = (uint64_t)off_1001C9F98;
  *(void *)algn_1001ECB48 = 0;
  xmmword_1001ECB50 = 0u;
  unk_1001ECB60 = 0u;
  qword_1001ECB70 = 0;
  qword_1001ECB78 = 0x100000001;
  dword_1001ECB80 = 1065353216;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_Color_default_instance_, v4);
}

void sub_100055ED8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_DataAttributes_default_instance_[0] = (uint64_t)off_1001CAD58;
  unk_1001ECFF0 = 0;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)&unk_1001ECFF8, 0);
  dword_1001ED010 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_DataAttributes_default_instance_, v4);
}

void sub_100055F68(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  qword_1001EC9C8 = 0;
  unk_1001EC9D0 = 0;
  TSP::_DataReference_default_instance_ = (uint64_t)off_1001C98B8;
  qword_1001EC9D8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_DataReference_default_instance_, v4);
}

void sub_100055FE4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  qword_1001ECAF8 = 0;
  unk_1001ECB00 = 0;
  TSP::_Date_default_instance_ = (uint64_t)off_1001C9E38;
  qword_1001ECB08 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_Date_default_instance_, v4);
}

void sub_100056060(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_FieldOptions_default_instance_ = (uint64_t)off_1001CB6F8;
  *(void *)algn_1001ED288 = 0;
  qword_1001ED290 = 0;
  dword_1001ED298 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_FieldOptions_default_instance_, v4);
}

void sub_1000560DC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::IndexSet::IndexSet((uint64_t)&TSP::_IndexSet_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_IndexSet_default_instance_, v4);
}

void sub_10005614C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::LargeArray::LargeArray((uint64_t)&TSP::_LargeArray_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_LargeArray_default_instance_, v4);
}

void sub_1000561BC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::LargeArraySegment::LargeArraySegment(TSP::_LargeArraySegment_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_LargeArraySegment_default_instance_, v4);
}

void sub_10005622C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_LargeLazyObjectArray_default_instance_ = (uint64_t)off_1001CB4E8;
  *(void *)algn_1001ED228 = 0;
  qword_1001ED230 = 0;
  if (atomic_load_explicit(scc_info_LargeLazyObjectArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeLazyObjectArray_TSPMessages_2eproto);
  }
  qword_1001ED238 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_LargeLazyObjectArray_default_instance_, v4);
}

void sub_1000562D4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::LargeLazyObjectArraySegment::LargeLazyObjectArraySegment(TSP::_LargeLazyObjectArraySegment_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_LargeLazyObjectArraySegment_default_instance_, v4);
}

void sub_100056344(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_LargeNumberArray_default_instance_ = (uint64_t)off_1001CB388;
  *(void *)algn_1001ED1E8 = 0;
  qword_1001ED1F0 = 0;
  if (atomic_load_explicit(scc_info_LargeNumberArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeNumberArray_TSPMessages_2eproto);
  }
  qword_1001ED1F8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_LargeNumberArray_default_instance_, v4);
}

void sub_1000563EC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::LargeNumberArraySegment::LargeNumberArraySegment(TSP::_LargeNumberArraySegment_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_LargeNumberArraySegment_default_instance_, v4);
}

void sub_10005645C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_LargeObjectArray_default_instance_ = (uint64_t)off_1001CB598;
  *(void *)algn_1001ED248 = 0;
  qword_1001ED250 = 0;
  if (atomic_load_explicit(scc_info_LargeObjectArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeObjectArray_TSPMessages_2eproto);
  }
  qword_1001ED258 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_LargeObjectArray_default_instance_, v4);
}

void sub_100056504(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::LargeObjectArraySegment::LargeObjectArraySegment(TSP::_LargeObjectArraySegment_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_LargeObjectArraySegment_default_instance_, v4);
}

void sub_100056574(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_LargeStringArray_default_instance_ = (uint64_t)off_1001CB438;
  *(void *)algn_1001ED208 = 0;
  qword_1001ED210 = 0;
  if (atomic_load_explicit(scc_info_LargeStringArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeStringArray_TSPMessages_2eproto);
  }
  qword_1001ED218 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_LargeStringArray_default_instance_, v4);
}

void sub_10005661C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::LargeStringArraySegment::LargeStringArraySegment(TSP::_LargeStringArraySegment_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_LargeStringArraySegment_default_instance_, v4);
}

void sub_10005668C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_LargeStringArraySegment_OptionalElement_default_instance_ = (uint64_t)off_1001CAF68;
  *(void *)algn_1001ED078 = 0;
  qword_1001ED080 = 0;
  if (atomic_load_explicit(scc_info_LargeStringArraySegment_OptionalElement_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeStringArraySegment_OptionalElement_TSPMessages_2eproto);
  }
  qword_1001ED088 = (uint64_t)&google::protobuf::internal::fixed_address_empty_string;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_LargeStringArraySegment_OptionalElement_default_instance_, v4);
}

void sub_10005673C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_LargeUUIDArray_default_instance_ = (uint64_t)off_1001CB648;
  *(void *)algn_1001ED268 = 0;
  qword_1001ED270 = 0;
  if (atomic_load_explicit(scc_info_LargeUUIDArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeUUIDArray_TSPMessages_2eproto);
  }
  qword_1001ED278 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_LargeUUIDArray_default_instance_, v4);
}

void sub_1000567E4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::LargeUUIDArraySegment::LargeUUIDArraySegment(TSP::_LargeUUIDArraySegment_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))TSP::_LargeUUIDArraySegment_default_instance_, v4);
}

void sub_100056854(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::ObjectCollection::ObjectCollection((uint64_t)&TSP::_ObjectCollection_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_ObjectCollection_default_instance_, v4);
}

void sub_1000568C4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::ObjectContainer::ObjectContainer((uint64_t)&TSP::_ObjectContainer_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_ObjectContainer_default_instance_, v4);
}

void sub_100056934(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::PasteboardObject::PasteboardObject((uint64_t)&TSP::_PasteboardObject_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_PasteboardObject_default_instance_, v4);
}

void sub_1000569A4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::Path::Path((uint64_t)&TSP::_Path_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_Path_default_instance_, v4);
}

void sub_100056A14(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::Path_Element::Path_Element((uint64_t)&TSP::_Path_Element_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_Path_Element_default_instance_, v4);
}

void sub_100056A84(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  qword_1001ECA48 = 0;
  unk_1001ECA50 = 0;
  TSP::_Point_default_instance_ = (uint64_t)off_1001C9AC8;
  qword_1001ECA58 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_Point_default_instance_, v4);
}

void sub_100056B00(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  qword_1001ECA68 = 0;
  unk_1001ECA70 = 0;
  TSP::_Pose3D_default_instance_ = (uint64_t)off_1001C9B78;
  qword_1001ECA78 = 0;
  dword_1001ECA80 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_Pose3D_default_instance_, v4);
}

void sub_100056B80(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  qword_1001ECAD8 = 0;
  unk_1001ECAE0 = 0;
  TSP::_Range_default_instance_ = (uint64_t)off_1001C9D88;
  qword_1001ECAE8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_Range_default_instance_, v4);
}

void sub_100056BFC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_Rect_default_instance_ = (uint64_t)off_1001C9C28;
  unk_1001ECA90 = 0;
  qword_1001ECA98 = 0;
  if (atomic_load_explicit(scc_info_Rect_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Rect_TSPMessages_2eproto);
  }
  qword_1001ECAA0 = 0;
  unk_1001ECAA8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_Rect_default_instance_, v4);
}

void sub_100056CA4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  qword_1001EC9A0 = 0;
  unk_1001EC9A8 = 0;
  TSP::_Reference_default_instance_ = (uint64_t)off_1001C9808;
  qword_1001EC9B0 = 0;
  *(uint64_t *)((char *)&qword_1001EC9B0 + 5) = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_Reference_default_instance_, v4);
}

void sub_100056D24(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::ReferenceDictionary::ReferenceDictionary((uint64_t)&TSP::_ReferenceDictionary_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_ReferenceDictionary_default_instance_, v4);
}

void sub_100056D94(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_ReferenceDictionary_Entry_default_instance_ = (uint64_t)off_1001CA1A8;
  *(void *)algn_1001ECBF8 = 0;
  qword_1001ECC00 = 0;
  if (atomic_load_explicit(scc_info_ReferenceDictionary_Entry_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ReferenceDictionary_Entry_TSPMessages_2eproto);
  }
  qword_1001ECC08 = 0;
  unk_1001ECC10 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_ReferenceDictionary_Entry_default_instance_, v4);
}

void sub_100056E3C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  qword_1001ECAB8 = 0;
  unk_1001ECAC0 = 0;
  TSP::_Size_default_instance_ = (uint64_t)off_1001C9CD8;
  qword_1001ECAC8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_Size_default_instance_, v4);
}

void sub_100056EB8(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::SparseReferenceArray::SparseReferenceArray((uint64_t)&TSP::_SparseReferenceArray_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_SparseReferenceArray_default_instance_, v4);
}

void sub_100056F28(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_SparseReferenceArray_Entry_default_instance_ = (uint64_t)off_1001C9968;
  *(void *)algn_1001EC9E8 = 0;
  qword_1001EC9F0 = 0;
  if (atomic_load_explicit(scc_info_SparseReferenceArray_Entry_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SparseReferenceArray_Entry_TSPMessages_2eproto);
  }
  dword_1001ECA00 = 0;
  qword_1001EC9F8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_SparseReferenceArray_Entry_default_instance_, v4);
}

void sub_100056FD4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::SparseUUIDArray::SparseUUIDArray((uint64_t)&TSP::_SparseUUIDArray_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_SparseUUIDArray_default_instance_, v4);
}

void sub_100057044(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_SparseUUIDArray_Entry_default_instance_ = (uint64_t)off_1001CA7D8;
  *(void *)algn_1001ECDD8 = 0;
  qword_1001ECDE0 = 0;
  if (atomic_load_explicit(scc_info_SparseUUIDArray_Entry_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SparseUUIDArray_Entry_TSPMessages_2eproto);
  }
  dword_1001ECDF0 = 0;
  qword_1001ECDE8 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_SparseUUIDArray_Entry_default_instance_, v4);
}

void sub_1000570F0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::SparseUUIDPathArray::SparseUUIDPathArray((uint64_t)&TSP::_SparseUUIDPathArray_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_SparseUUIDPathArray_default_instance_, v4);
}

void sub_100057160(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_SparseUUIDPathArray_Entry_default_instance_ = (uint64_t)off_1001CA9E8;
  *(void *)algn_1001ECE68 = 0;
  qword_1001ECE70 = 0;
  if (atomic_load_explicit(scc_info_SparseUUIDPathArray_Entry_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SparseUUIDPathArray_Entry_TSPMessages_2eproto);
  }
  dword_1001ECE80 = 0;
  qword_1001ECE78 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_SparseUUIDPathArray_Entry_default_instance_, v4);
}

void sub_10005720C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  qword_1001ECC50 = 0;
  unk_1001ECC58 = 0;
  TSP::_UUID_default_instance_ = (uint64_t)off_1001CA308;
  qword_1001ECC60 = 0;
  unk_1001ECC68 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_UUID_default_instance_, v4);
}

void sub_100057288(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::_UUIDCoordArchive_default_instance_ = (uint64_t)off_1001CA678;
  *(void *)algn_1001ECD68 = 0;
  qword_1001ECD70 = 0;
  if (atomic_load_explicit(scc_info_UUIDCoordArchive_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_UUIDCoordArchive_TSPMessages_2eproto);
  }
  qword_1001ECD78 = 0;
  unk_1001ECD80 = 0;
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_UUIDCoordArchive_default_instance_, v4);
}

void sub_100057330(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::UUIDMapArchive::UUIDMapArchive((uint64_t)&TSP::_UUIDMapArchive_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_UUIDMapArchive_default_instance_, v4);
}

void sub_1000573A0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::UUIDMultiMapArchive::UUIDMultiMapArchive((uint64_t)&TSP::_UUIDMultiMapArchive_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_UUIDMultiMapArchive_default_instance_, v4);
}

void sub_100057410(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::UUIDPath::UUIDPath((uint64_t)&TSP::_UUIDPath_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_UUIDPath_default_instance_, v4);
}

void sub_100057480(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::UUIDRectArchive::UUIDRectArchive((uint64_t)&TSP::_UUIDRectArchive_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_UUIDRectArchive_default_instance_, v4);
}

void sub_1000574F0(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  google::protobuf::internal::VerifyVersion((google::protobuf::internal *)0x2DFD70, (google::protobuf::internal *)0x2DFD70, "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/messages/src/TSPMessages.pb.cc", a4);
  TSP::UUIDSetArchive::UUIDSetArchive((uint64_t)&TSP::_UUIDSetArchive_default_instance_, 0);
  google::protobuf::internal::OnShutdownRun((google::protobuf::internal *)google::protobuf::internal::DestroyMessage, (void (*)(const void *))&TSP::_UUIDSetArchive_default_instance_, v4);
}

BOOL TSP::DataUploadStatus_IsValid(TSP *this)
{
  return this < 6;
}

void TSP::Reference::~Reference(TSP::Reference *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::Reference::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::Reference::Clear(TSP::Reference *this)
{
  if ((*((unsigned char *)this + 16) & 7) != 0)
  {
    *(void *)((char *)this + 29) = 0;
    *((void *)this + sub_100050BCC((void *)this + 3) = 0;
  }
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_100050A8C((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::Reference::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v32 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v32, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      id v8 = (google::protobuf::internal *)((char *)v32 + 1);
      unsigned int v9 = *(unsigned __int8 *)v32;
      if ((*(char *)v32 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v32, (const char *)(v10 - 128));
      int v32 = TagFallback;
      if (!TagFallback) {
        goto LABEL_48;
      }
      id v8 = TagFallback;
      unsigned int v9 = v25;
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 != 24) {
          goto LABEL_14;
        }
        v5 |= 4u;
        id v15 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v16 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v17 = *(char *)v15;
        unint64_t v16 = v16 + (v17 << 7) - 128;
        if ((v17 & 0x80000000) == 0)
        {
          id v15 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_26:
          int v32 = v15;
          *(unsigned char *)(a1 + 36) = v16 != 0;
          goto LABEL_36;
        }
        unsigned int v26 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v16);
        int v32 = v26;
        *(unsigned char *)(a1 + 36) = v27 != 0;
        if (!v26) {
          goto LABEL_48;
        }
      }
      else if (v11 == 2)
      {
        if (v9 != 16) {
          goto LABEL_14;
        }
        v5 |= 2u;
        char v19 = (google::protobuf::internal *)((char *)v8 + 1);
        LODWORD(v18) = *(unsigned __int8 *)v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_31;
        }
        int v20 = *(char *)v19;
        unint64_t v18 = v18 + (v20 << 7) - 128;
        if ((v20 & 0x80000000) == 0)
        {
          char v19 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_31:
          int v32 = v19;
          *(_DWORD *)(a1 + 3sub_100050A8C((void *)this + 2) = v18;
          goto LABEL_36;
        }
        id v28 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v18);
        int v32 = v28;
        *(_DWORD *)(a1 + 3sub_100050A8C((void *)this + 2) = v29;
        if (!v28) {
          goto LABEL_48;
        }
      }
      else
      {
        if (v11 != 1 || v9 != 8)
        {
LABEL_14:
          if (v9) {
            BOOL v13 = (v9 & 7) == 4;
          }
          else {
            BOOL v13 = 1;
          }
          if (v13)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPArchiveMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            uint64_t v14 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            uint64_t v14 = sub_10003562C((unint64_t *)(a1 + 8));
            id v8 = v32;
          }
          int v32 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v14, v8);
          if (!v32)
          {
LABEL_48:
            int v32 = 0;
            goto LABEL_2;
          }
          goto LABEL_36;
        }
        v5 |= 1u;
        uint64_t v21 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v22 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v23 = *(char *)v21;
        unint64_t v22 = v22 + (v23 << 7) - 128;
        if ((v23 & 0x80000000) == 0)
        {
          uint64_t v21 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_35:
          int v32 = v21;
          *(void *)(a1 + 24) = v22;
          goto LABEL_36;
        }
        id v30 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v22);
        int v32 = v30;
        *(void *)(a1 + 24) = v31;
        if (!v30) {
          goto LABEL_48;
        }
      }
LABEL_36:
      if (sub_1000355B8(a3, &v32, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    id v8 = (google::protobuf::internal *)((char *)v32 + 2);
LABEL_7:
    int v32 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

const google::protobuf::UnknownFieldSet *TSP::Reference::_InternalSerialize(TSP::Reference *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((void *)this + 3);
    *a2 = 8;
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      if (v7 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          ++a2;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v9;
        if ((v6 & 2) != 0) {
          goto LABEL_16;
        }
      }
      else
      {
        a2[2] = v8;
        a2 += 3;
        if ((v6 & 2) != 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_3:
    if ((v6 & 4) == 0) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_3;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v11 = *((int *)this + 8);
  *a2 = 16;
  if (v11 > 0x7F)
  {
    a2[1] = v11 | 0x80;
    unint64_t v12 = v11 >> 7;
    if (v11 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        ++a2;
        unint64_t v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
      if ((v6 & 4) == 0) {
        goto LABEL_30;
      }
    }
    else
    {
      a2[2] = v12;
      a2 += 3;
      if ((v6 & 4) == 0) {
        goto LABEL_30;
      }
    }
  }
  else
  {
    a2[1] = v11;
    a2 += 2;
    if ((v6 & 4) == 0) {
      goto LABEL_30;
    }
  }
LABEL_27:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v15 = *((unsigned char *)this + 36);
  *a2 = 24;
  a2[1] = v15;
  a2 += 2;
LABEL_30:
  uint64_t v16 = *((void *)this + 1);
  if ((v16 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v16 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::Reference::ByteSizeLong(TSP::Reference *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1) {
    char v2 = (const google::protobuf::UnknownFieldSet *)(((9 * (__clz(*((void *)this + 3) | 1) ^ 0x3F) + 73) >> 6) + 1);
  }
  else {
    char v2 = 0;
  }
  if ((v1 & 6) != 0)
  {
    if ((v1 & 2) != 0)
    {
      int v3 = *((_DWORD *)this + 8);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      char v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + v4);
    }
    if ((v1 & 4) != 0) {
      char v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2 + 2);
    }
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::Reference *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v2;
  return (char *)v2;
}

void TSP::Reference::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::Reference::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::Reference::MergeFrom(void **this, const TSP::Reference *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      v3[3] = (void *)*((void *)a2 + 3);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
        {
LABEL_8:
          *((_DWORD *)v3 + 4) |= v5;
          return this;
        }
LABEL_7:
        *((unsigned char *)v3 + 36) = *((unsigned char *)a2 + 36);
        goto LABEL_8;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  return this;
}

void TSP::Reference::CopyFrom(TSP::Reference *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::Reference::Clear(this);
    TSP::Reference::MergeFrom((void **)this, a2);
  }
}

uint64_t TSP::Reference::IsInitialized(TSP::Reference *this)
{
  return *((_DWORD *)this + 4) & 1;
}

uint64_t TSP::Reference::GetMetadata(TSP::Reference *this)
{
  return *off_1001EA298;
}

void TSP::DataReference::~DataReference(TSP::DataReference *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::DataReference::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::DataReference::Clear(TSP::DataReference *this)
{
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  result[2] = 0;
  *((_DWORD *)result + sub_100050A8C((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::DataReference::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v20 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v20, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v7 = (google::protobuf::internal *)((char *)v20 + 1);
      unsigned int v8 = *(unsigned __int8 *)v20;
      if ((*(char *)v20 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v20, (const char *)(v9 - 128));
      int v20 = TagFallback;
      if (!TagFallback) {
        goto LABEL_29;
      }
      unint64_t v7 = TagFallback;
      unsigned int v8 = v16;
LABEL_7:
      if (v8 == 8)
      {
        unint64_t v12 = (google::protobuf::internal *)((char *)v7 + 1);
        unint64_t v13 = *(unsigned __int8 *)v7;
        if ((*(char *)v7 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v14 = *(char *)v12;
        unint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_19:
          int v20 = v12;
          *(void *)(a1 + 24) = v13;
          int v5 = 1;
          goto LABEL_20;
        }
        int v17 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, v13);
        int v20 = v17;
        *(void *)(a1 + 24) = v18;
        int v5 = 1;
        if (!v17) {
          goto LABEL_29;
        }
      }
      else
      {
        if (v8) {
          BOOL v10 = (v8 & 7) == 4;
        }
        else {
          BOOL v10 = 1;
        }
        if (v10)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
          goto LABEL_28;
        }
        if (*v6)
        {
          unint64_t v11 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          unint64_t v11 = sub_10003562C((unint64_t *)(a1 + 8));
          unint64_t v7 = v20;
        }
        int v20 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v11, v7);
        if (!v20)
        {
LABEL_29:
          int v20 = 0;
          goto LABEL_28;
        }
      }
LABEL_20:
      if (sub_1000355B8(a3, &v20, *(_DWORD *)(a3 + 92))) {
        goto LABEL_28;
      }
    }
    unint64_t v7 = (google::protobuf::internal *)((char *)v20 + 2);
LABEL_6:
    int v20 = v7;
    goto LABEL_7;
  }
LABEL_28:
  *(_DWORD *)(a1 + 16) |= v5;
  return v20;
}

const google::protobuf::UnknownFieldSet *TSP::DataReference::_InternalSerialize(TSP::DataReference *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v6 = *((void *)this + 3);
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unint64_t v8 = v7 >> 7;
          ++a2;
          unint64_t v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  uint64_t v10 = *((void *)this + 1);
  if ((v10 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::DataReference::ByteSizeLong(TSP::DataReference *this)
{
  if (*((unsigned char *)this + 16)) {
    int v1 = (const google::protobuf::UnknownFieldSet *)(((9 * (__clz(*((void *)this + 3) | 1) ^ 0x3F) + 73) >> 6) + 1);
  }
  else {
    int v1 = 0;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::DataReference *)((char *)this + 8), v1, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v1;
  return (char *)v1;
}

void TSP::DataReference::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DataReference::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::DataReference::MergeFrom(void **this, const TSP::DataReference *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  if (*((unsigned char *)a2 + 16))
  {
    int v5 = (void *)*((void *)a2 + 3);
    *((_DWORD *)v3 + 4) |= 1u;
    v3[3] = v5;
  }
  return this;
}

void TSP::DataReference::CopyFrom(TSP::DataReference *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    int v5 = (char *)this + 8;
    *((void *)v5 + sub_100050A8C((void *)this + 2) = 0;
    *((_DWORD *)v5 + sub_100050A8C((void *)this + 2) = 0;
    if (v6) {
      sub_100035820((unint64_t *)v5);
    }
    TSP::DataReference::MergeFrom((void **)this, lpsrc);
  }
}

uint64_t TSP::DataReference::IsInitialized(TSP::DataReference *this)
{
  return *((_DWORD *)this + 4) & 1;
}

uint64_t TSP::DataReference::GetMetadata(TSP::DataReference *this)
{
  return off_1001EA298[2];
}

void TSP::SparseReferenceArray_Entry::~SparseReferenceArray_Entry(TSP::SparseReferenceArray_Entry *this)
{
  if (this != (TSP::SparseReferenceArray_Entry *)&TSP::_SparseReferenceArray_Entry_default_instance_)
  {
    uint64_t v1 = *((void *)this + 3);
    if (v1)
    {
      sub_1000333D0((uint64_t *)(v1 + 8));
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::SparseReferenceArray_Entry::~SparseReferenceArray_Entry(this);
  operator delete();
}

uint64_t TSP::SparseReferenceArray_Entry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::SparseReferenceArray_Entry::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::Reference::Clear(this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::SparseReferenceArray_Entry::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v24 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = (google::protobuf::internal *)((char *)v24 + 1);
      unsigned int v9 = *(unsigned __int8 *)v24;
      if ((*(char *)v24 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v24, (const char *)(v10 - 128));
      int v24 = TagFallback;
      if (!TagFallback) {
        goto LABEL_40;
      }
      unint64_t v8 = TagFallback;
      unsigned int v9 = v21;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v15 = *(void *)(a1 + 24);
          if (!v15)
          {
            unsigned int v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              unsigned int v16 = (void *)*v16;
            }
            uint64_t v15 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v16);
            *(void *)(a1 + 24) = v15;
            unint64_t v8 = v24;
          }
          int v14 = sub_100034100(a3, v15, v8);
        }
        else
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unint64_t v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unint64_t v13 = sub_10003562C((unint64_t *)(a1 + 8));
            unint64_t v8 = v24;
          }
          int v14 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
        }
        int v24 = v14;
        if (!v14) {
          goto LABEL_40;
        }
        goto LABEL_32;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      v5 |= 2u;
      int v17 = (google::protobuf::internal *)((char *)v8 + 1);
      LODWORD(v18) = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_31;
      }
      int v19 = *(char *)v17;
      uint64_t v18 = (const char *)(v18 + (v19 << 7) - 128);
      if ((v19 & 0x80000000) == 0)
      {
        int v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_31:
        int v24 = v17;
        *(_DWORD *)(a1 + 3sub_100050A8C((void *)this + 2) = v18;
        goto LABEL_32;
      }
      unint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v18);
      int v24 = v22;
      *(_DWORD *)(a1 + 3sub_100050A8C((void *)this + 2) = v23;
      if (!v22)
      {
LABEL_40:
        int v24 = 0;
        goto LABEL_2;
      }
LABEL_32:
      if (sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    unint64_t v8 = (google::protobuf::internal *)((char *)v24 + 2);
LABEL_7:
    int v24 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

const google::protobuf::UnknownFieldSet *TSP::SparseReferenceArray_Entry::_InternalSerialize(TSP::SparseReferenceArray_Entry *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned int v7 = *((_DWORD *)this + 8);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unsigned int v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unsigned int v13 = v8 >> 7;
        ++a2;
        unsigned int v14 = v8 >> 14;
        v8 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
      if ((v6 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned int v9 = (TSP::Reference *)*((void *)this + 3);
  *a2 = 18;
  unsigned int v10 = *((_DWORD *)v9 + 5);
  if (v10 > 0x7F)
  {
    a2[1] = v10 | 0x80;
    unsigned int v12 = v10 >> 7;
    if (v10 >> 14)
    {
      unint64_t v11 = a2 + 3;
      do
      {
        *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unsigned int v15 = v12 >> 7;
        ++v11;
        unsigned int v16 = v12 >> 14;
        v12 >>= 7;
      }
      while (v16);
      *(v11 - sub_1000333D0((uint64_t *)this + 1) = v15;
    }
    else
    {
      a2[2] = v12;
      unint64_t v11 = a2 + 3;
    }
  }
  else
  {
    a2[1] = v10;
    unint64_t v11 = a2 + 2;
  }
  a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v9, v11, a3, a4);
LABEL_24:
  uint64_t v17 = *((void *)this + 1);
  if ((v17 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::SparseReferenceArray_Entry::RequiredFieldsByteSizeFallback(TSP::SparseReferenceArray_Entry *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2)
  {
    uint64_t v4 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 3));
    BOOL result = &v4[((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1];
    if ((*((_DWORD *)this + 4) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  BOOL result = 0;
  if ((v2 & 2) != 0) {
LABEL_5:
  }
    result += ((9 * (__clz(*((_DWORD *)this + 8) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return result;
}

char *TSP::SparseReferenceArray_Entry::ByteSizeLong(TSP::Reference **this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0)
  {
    char v3 = TSP::SparseReferenceArray_Entry::RequiredFieldsByteSizeFallback((TSP::SparseReferenceArray_Entry *)this);
  }
  else
  {
    int v2 = TSP::Reference::ByteSizeLong(this[3]);
    char v3 = &v2[((9 * (__clz(*((_DWORD *)this + 8) | 1) ^ 0x1F) + 73) >> 6)
           + 2
           + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), (const google::protobuf::UnknownFieldSet *)v3, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v3;
    return v3;
  }
}

void TSP::SparseReferenceArray_Entry::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::SparseReferenceArray_Entry::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::SparseReferenceArray_Entry::MergeFrom(void **this, const TSP::SparseReferenceArray_Entry *a2)
{
  char v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      *((_DWORD *)v3 + 4) |= 1u;
      unsigned int v7 = (void **)v3[3];
      if (!v7)
      {
        unsigned int v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v8 = (void *)*v8;
        }
        unsigned int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v8);
        v3[3] = v7;
      }
      if (*((void *)a2 + 3)) {
        unsigned int v9 = (const TSP::Reference *)*((void *)a2 + 3);
      }
      else {
        unsigned int v9 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
      }
      this = TSP::Reference::MergeFrom(v7, v9);
    }
    if ((v6 & 2) != 0) {
      *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    }
    *((_DWORD *)v3 + 4) |= v6;
  }
  return this;
}

void TSP::SparseReferenceArray_Entry::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::SparseReferenceArray_Entry::Clear(this);
    TSP::SparseReferenceArray_Entry::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::SparseReferenceArray_Entry::IsInitialized(TSP::SparseReferenceArray_Entry *this)
{
  int v1 = *((_DWORD *)this + 4);
  return (~v1 & 3) == 0 && ((v1 & 1) == 0 || (*(unsigned char *)(*((void *)this + 3) + 16) & 1) != 0);
}

uint64_t TSP::SparseReferenceArray_Entry::GetMetadata(TSP::SparseReferenceArray_Entry *this)
{
  return off_1001EA298[4];
}

uint64_t TSP::SparseReferenceArray::SparseReferenceArray(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C9A18;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 3sub_100050A8C((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_SparseReferenceArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SparseReferenceArray_TSPMessages_2eproto);
  }
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_1000589DC(_Unwind_Exception *a1)
{
  sub_100071874(v1);
  _Unwind_Resume(a1);
}

void TSP::SparseReferenceArray::~SparseReferenceArray(TSP::SparseReferenceArray *this)
{
}

{
  uint64_t vars8;

  TSP::SparseReferenceArray::~SparseReferenceArray(this);
  operator delete();
}

uint64_t TSP::SparseReferenceArray::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::SparseReferenceArray::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    char v3 = (google::protobuf::Arena ***)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::SparseReferenceArray_Entry::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_100050A8C((void *)this + 2) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::SparseReferenceArray::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v29 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v8 = (google::protobuf::internal *)((char *)v29 + 1);
      unsigned int v9 = *(unsigned __int8 *)v29;
      if ((*(char *)v29 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v29, (const char *)(v10 - 128));
      int v29 = TagFallback;
      if (!TagFallback) {
        goto LABEL_46;
      }
      unsigned int v8 = TagFallback;
      unsigned int v9 = v26;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 18)
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unsigned int v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v13 = sub_10003562C((unint64_t *)(a1 + 8));
            unsigned int v8 = v29;
          }
          int v29 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
          if (!v29)
          {
LABEL_46:
            int v29 = 0;
            goto LABEL_2;
          }
          goto LABEL_38;
        }
        unsigned int v14 = (google::protobuf::internal *)((char *)v8 - 1);
        while (2)
        {
          unsigned int v15 = (google::protobuf::internal *)((char *)v14 + 1);
          int v29 = (google::protobuf::internal *)((char *)v14 + 1);
          unsigned int v16 = *(int **)(a1 + 40);
          if (v16)
          {
            uint64_t v17 = *(int *)(a1 + 32);
            int v18 = *v16;
            if ((int)v17 < *v16)
            {
              *(_DWORD *)(a1 + 3sub_100050A8C((void *)this + 2) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
              goto LABEL_30;
            }
            if (v18 == *(_DWORD *)(a1 + 36))
            {
LABEL_28:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v18 + 1);
              unsigned int v16 = *(int **)(a1 + 40);
              int v18 = *v16;
            }
            int *v16 = v18 + 1;
            uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<TSP::SparseReferenceArray_Entry>(*(void *)(a1 + 24));
            uint64_t v20 = *(void *)(a1 + 40);
            uint64_t v21 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_100050A8C((void *)this + 2) = v21 + 1;
            *(void *)(v20 + 8 * v21 + 8) = v19;
            unsigned int v15 = v29;
LABEL_30:
            unsigned int v14 = sub_100058D60(a3, v19, v15);
            int v29 = v14;
            if (!v14) {
              goto LABEL_46;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(unsigned char *)v14 != 18) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        int v18 = *(_DWORD *)(a1 + 36);
        goto LABEL_28;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      unint64_t v22 = (google::protobuf::internal *)((char *)v8 + 1);
      LODWORD(v2sub_100071874((void *)this + 3) = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v24 = *(char *)v22;
      int v23 = (const char *)(v23 + (v24 << 7) - 128);
      if ((v24 & 0x80000000) == 0)
      {
        unint64_t v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
        int v29 = v22;
        *(_DWORD *)(a1 + 48) = v23;
        int v5 = 1;
        goto LABEL_38;
      }
      uint64_t v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v23);
      int v29 = v27;
      *(_DWORD *)(a1 + 48) = v28;
      int v5 = 1;
      if (!v27) {
        goto LABEL_46;
      }
LABEL_38:
      if (sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    unsigned int v8 = (google::protobuf::internal *)((char *)v29 + 2);
LABEL_7:
    int v29 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

google::protobuf::internal *sub_100058D60(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::SparseReferenceArray_Entry::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::SparseReferenceArray::_InternalSerialize(TSP::SparseReferenceArray *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned int v6 = *((_DWORD *)this + 12);
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unsigned int v8 = v7 >> 7;
          ++a2;
          unsigned int v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  int v10 = *((_DWORD *)this + 8);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v12 = *(TSP::SparseReferenceArray_Entry **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v13 = *((_DWORD *)v12 + 5);
      if (v13 > 0x7F)
      {
        a2[1] = v13 | 0x80;
        unsigned int v15 = v13 >> 7;
        if (v13 >> 14)
        {
          unsigned int v14 = a2 + 3;
          do
          {
            *(v14 - sub_1000333D0((uint64_t *)this + 1) = v15 | 0x80;
            unsigned int v16 = v15 >> 7;
            ++v14;
            unsigned int v17 = v15 >> 14;
            v15 >>= 7;
          }
          while (v17);
          *(v14 - sub_1000333D0((uint64_t *)this + 1) = v16;
        }
        else
        {
          a2[2] = v15;
          unsigned int v14 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v13;
        unsigned int v14 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::SparseReferenceArray_Entry::_InternalSerialize(v12, v14, a3, a4);
    }
  }
  uint64_t v18 = *((void *)this + 1);
  if ((v18 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v18 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::SparseReferenceArray::ByteSizeLong(TSP::SparseReferenceArray *this)
{
  if (*((unsigned char *)this + 16)) {
    uint64_t v2 = ((9 * (__clz(*((_DWORD *)this + 12) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *((int *)this + 8);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + v3);
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    unsigned int v6 = (TSP::Reference ***)(v5 + 8);
  }
  else {
    unsigned int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unsigned int v8 = *v6++;
      unsigned int v9 = TSP::SparseReferenceArray_Entry::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::SparseReferenceArray *)((char *)this + 8), v4, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v4;
    return (char *)v4;
  }
}

void TSP::SparseReferenceArray::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::SparseReferenceArray::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::SparseReferenceArray::MergeFrom(void **this, const TSP::SparseReferenceArray *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    unsigned int v6 = (TSP::SparseReferenceArray_Entry **)(*((void *)a2 + 5) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 3), *((_DWORD *)a2 + 8));
    this = sub_1000718F4(v3 + 3, (void ***)v7, v6, v5, *(_DWORD *)v3[5] - *((_DWORD *)v3 + 8));
    signed int v8 = *((_DWORD *)v3 + 8) + v5;
    *((_DWORD *)v3 + 8) = v8;
    unsigned int v9 = (signed int *)v3[5];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  if (*((unsigned char *)a2 + 16))
  {
    int v10 = *((_DWORD *)a2 + 12);
    *((_DWORD *)v3 + 4) |= 1u;
    *((_DWORD *)v3 + 1sub_100050A8C((void *)this + 2) = v10;
  }
  return this;
}

void TSP::SparseReferenceArray::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::SparseReferenceArray::Clear(this);
    TSP::SparseReferenceArray::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::SparseReferenceArray::IsInitialized(TSP::SparseReferenceArray *this)
{
  if (*((unsigned char *)this + 16)) {
    return sub_100059298((uint64_t)this + 24);
  }
  else {
    return 0;
  }
}

uint64_t sub_100059298(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    int v5 = *(_DWORD *)(v4 + 16);
    if ((~v5 & 3) != 0 || (v5 & 1) != 0 && (*(unsigned char *)(*(void *)(v4 + 24) + 16) & 1) == 0) {
      break;
    }
    if (--v2 <= 1) {
      return 1;
    }
  }
  return 0;
}

uint64_t TSP::SparseReferenceArray::GetMetadata(TSP::SparseReferenceArray *this)
{
  return off_1001EA298[6];
}

void TSP::Point::~Point(TSP::Point *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::Point::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::Point::Clear(TSP::Point *this)
{
  if ((*((unsigned char *)this + 16) & 3) != 0) {
    *((void *)this + sub_100071874((void *)this + 3) = 0;
  }
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_100050A8C((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::Point::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v19 + 1);
      unsigned int v9 = *(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, (const char *)(v10 - 128));
      uint64_t v19 = TagFallback;
      if (!TagFallback) {
        goto LABEL_31;
      }
      signed int v8 = TagFallback;
      unsigned int v9 = v18;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 == 21)
        {
          int v15 = *(_DWORD *)v8;
          unsigned int v14 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 2u;
          *(_DWORD *)(a1 + 28) = v15;
LABEL_24:
          uint64_t v19 = v14;
          goto LABEL_25;
        }
      }
      else if (v9 >> 3 == 1 && v9 == 13)
      {
        int v16 = *(_DWORD *)v8;
        unsigned int v14 = (google::protobuf::internal *)((char *)v8 + 4);
        v5 |= 1u;
        *(_DWORD *)(a1 + 24) = v16;
        goto LABEL_24;
      }
      if (v9) {
        BOOL v12 = (v9 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
        goto LABEL_2;
      }
      if (*v7)
      {
        unsigned int v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unsigned int v13 = sub_10003562C((unint64_t *)(a1 + 8));
        signed int v8 = v19;
      }
      uint64_t v19 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
      if (!v19)
      {
LABEL_31:
        uint64_t v19 = 0;
        goto LABEL_2;
      }
LABEL_25:
      if (sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    signed int v8 = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_7:
    uint64_t v19 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

const google::protobuf::UnknownFieldSet *TSP::Point::_InternalSerialize(TSP::Point *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    int v7 = *((_DWORD *)this + 6);
    *a2 = 13;
    *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v7;
    a2 += 5;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    int v8 = *((_DWORD *)this + 7);
    *a2 = 21;
    *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v8;
    a2 += 5;
  }
  uint64_t v9 = *((void *)this + 1);
  if ((v9 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v9 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::Point::ByteSizeLong(TSP::Point *this)
{
  int v1 = *((_DWORD *)this + 4);
  uint64_t v2 = 5;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 5;
  }
  if ((~v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 10;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::Point *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v3, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v3;
  return (char *)v3;
}

void TSP::Point::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::Point::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::Point::MergeFrom(void **this, const TSP::Point *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      *((_DWORD *)v3 + 6) = *((_DWORD *)a2 + 6);
    }
    if ((v5 & 2) != 0) {
      *((_DWORD *)v3 + 7) = *((_DWORD *)a2 + 7);
    }
    *((_DWORD *)v3 + 4) |= v5;
  }
  return this;
}

void TSP::Point::CopyFrom(TSP::Point *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::Point::Clear(this);
    TSP::Point::MergeFrom((void **)this, a2);
  }
}

BOOL TSP::Point::IsInitialized(TSP::Point *this)
{
  return (~*((_DWORD *)this + 4) & 3) == 0;
}

uint64_t TSP::Point::GetMetadata(TSP::Point *this)
{
  return off_1001EA298[8];
}

void TSP::Pose3D::~Pose3D(TSP::Pose3D *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::Pose3D::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::Pose3D::Clear(TSP::Pose3D *this)
{
  if ((*((unsigned char *)this + 16) & 7) != 0)
  {
    *((_DWORD *)this + 8) = 0;
    *((void *)this + sub_100071874((void *)this + 3) = 0;
  }
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_100050A8C((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::Pose3D::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v21 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v21, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      int v8 = (google::protobuf::internal *)((char *)v21 + 1);
      unsigned int v9 = *(unsigned __int8 *)v21;
      if ((*(char *)v21 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v21, (const char *)(v10 - 128));
      uint64_t v21 = TagFallback;
      if (!TagFallback) {
        goto LABEL_34;
      }
      int v8 = TagFallback;
      unsigned int v9 = v20;
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 == 29)
        {
          int v16 = *(_DWORD *)v8;
          int v15 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 4u;
          *(_DWORD *)(a1 + 3sub_100050A8C((void *)this + 2) = v16;
LABEL_27:
          uint64_t v21 = v15;
          goto LABEL_28;
        }
      }
      else if (v11 == 2)
      {
        if (v9 == 21)
        {
          int v17 = *(_DWORD *)v8;
          int v15 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 2u;
          *(_DWORD *)(a1 + 28) = v17;
          goto LABEL_27;
        }
      }
      else if (v11 == 1 && v9 == 13)
      {
        int v18 = *(_DWORD *)v8;
        int v15 = (google::protobuf::internal *)((char *)v8 + 4);
        v5 |= 1u;
        *(_DWORD *)(a1 + 24) = v18;
        goto LABEL_27;
      }
      if (v9) {
        BOOL v13 = (v9 & 7) == 4;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
        goto LABEL_2;
      }
      if (*v7)
      {
        unsigned int v14 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unsigned int v14 = sub_10003562C((unint64_t *)(a1 + 8));
        int v8 = v21;
      }
      uint64_t v21 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v14, v8);
      if (!v21)
      {
LABEL_34:
        uint64_t v21 = 0;
        goto LABEL_2;
      }
LABEL_28:
      if (sub_1000355B8(a3, &v21, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    int v8 = (google::protobuf::internal *)((char *)v21 + 2);
LABEL_7:
    uint64_t v21 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v21;
}

const google::protobuf::UnknownFieldSet *TSP::Pose3D::_InternalSerialize(TSP::Pose3D *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    int v7 = *((_DWORD *)this + 6);
    *a2 = 13;
    *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v7;
    a2 += 5;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v8 = *((_DWORD *)this + 7);
  *a2 = 21;
  *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v8;
  a2 += 5;
  if ((v6 & 4) != 0)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    int v9 = *((_DWORD *)this + 8);
    *a2 = 29;
    *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v9;
    a2 += 5;
  }
LABEL_14:
  uint64_t v10 = *((void *)this + 1);
  if ((v10 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::Pose3D::ByteSizeLong(TSP::Pose3D *this)
{
  int v1 = *((_DWORD *)this + 4);
  uint64_t v2 = 5;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 5;
  }
  if ((v1 & 4) != 0) {
    v2 += 5;
  }
  if ((~v1 & 7) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 15;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::Pose3D *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v3, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v3;
  return (char *)v3;
}

void TSP::Pose3D::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::Pose3D::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::Pose3D::MergeFrom(void **this, const TSP::Pose3D *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      *((_DWORD *)v3 + 6) = *((_DWORD *)a2 + 6);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
        {
LABEL_8:
          *((_DWORD *)v3 + 4) |= v5;
          return this;
        }
LABEL_7:
        *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
        goto LABEL_8;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 7) = *((_DWORD *)a2 + 7);
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  return this;
}

void TSP::Pose3D::CopyFrom(TSP::Pose3D *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::Pose3D::Clear(this);
    TSP::Pose3D::MergeFrom((void **)this, a2);
  }
}

BOOL TSP::Pose3D::IsInitialized(TSP::Pose3D *this)
{
  return (~*((_DWORD *)this + 4) & 7) == 0;
}

uint64_t TSP::Pose3D::GetMetadata(TSP::Pose3D *this)
{
  return off_1001EA298[10];
}

void TSP::Rect::~Rect(TSP::Rect *this)
{
  if (this != (TSP::Rect *)&TSP::_Rect_default_instance_)
  {
    uint64_t v1 = *((void *)this + 3);
    if (v1)
    {
      sub_1000333D0((uint64_t *)(v1 + 8));
      operator delete();
    }
    uint64_t v2 = *((void *)this + 4);
    if (v2)
    {
      sub_1000333D0((uint64_t *)(v2 + 8));
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::Rect::~Rect(this);
  operator delete();
}

uint64_t TSP::Rect::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::Rect::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      this = TSP::Point::Clear(this[3]);
    }
    if ((v2 & 2) != 0) {
      this = TSP::Size::Clear(*(TSP::Size **)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_100035820((unint64_t *)v3);
  }
  return this;
}

google::protobuf::Arena **TSP::Size::Clear(TSP::Size *this)
{
  if ((*((unsigned char *)this + 16) & 3) != 0) {
    *((void *)this + sub_100071874((void *)this + 3) = 0;
  }
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_100050A8C((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::Rect::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v20 = a2;
  if ((sub_1000355B8(a3, &v20, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      int v7 = (google::protobuf::internal *)((char *)v20 + 1);
      unsigned int v8 = *(unsigned __int8 *)v20;
      if ((*(char *)v20 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v20, (const char *)(v9 - 128));
      unsigned int v20 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      int v7 = TagFallback;
      unsigned int v8 = v19;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v14 = *(void *)(a1 + 32);
          if (!v14)
          {
            int v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
            if (*v6) {
              int v15 = (void *)*v15;
            }
            uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<TSP::Size>(v15);
            *(void *)(a1 + 3sub_100050A8C((void *)this + 2) = v14;
            int v7 = v20;
          }
          BOOL v13 = sub_10005A1A0(a3, v14, v7);
          goto LABEL_31;
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 24);
        if (!v16)
        {
          int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
          if (*v6) {
            int v17 = (void *)*v17;
          }
          uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<TSP::Point>(v17);
          *(void *)(a1 + 24) = v16;
          int v7 = v20;
        }
        BOOL v13 = sub_10005A0D0(a3, v16, v7);
        goto LABEL_31;
      }
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
        return v20;
      }
      if (*v6)
      {
        BOOL v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        BOOL v12 = sub_10003562C((unint64_t *)(a1 + 8));
        int v7 = v20;
      }
      BOOL v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
LABEL_31:
      unsigned int v20 = v13;
      if (!v13) {
        return 0;
      }
      if (sub_1000355B8(a3, &v20, *(_DWORD *)(a3 + 92))) {
        return v20;
      }
    }
    int v7 = (google::protobuf::internal *)((char *)v20 + 2);
LABEL_7:
    unsigned int v20 = v7;
    goto LABEL_8;
  }
  return v20;
}

google::protobuf::internal *sub_10005A0D0(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::Point::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

google::protobuf::internal *sub_10005A1A0(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::Size::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::Rect::_InternalSerialize(TSP::Rect *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    int v7 = (TSP::Point *)*((void *)this + 3);
    *a2 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 5);
    if (v8 > 0x7F)
    {
      a2[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        int v9 = a2 + 3;
        do
        {
          *(v9 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
          unsigned int v11 = v10 >> 7;
          ++v9;
          unsigned int v12 = v10 >> 14;
          v10 >>= 7;
        }
        while (v12);
        *(v9 - sub_1000333D0((uint64_t *)this + 1) = v11;
      }
      else
      {
        a2[2] = v10;
        int v9 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v8;
      int v9 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::Point::_InternalSerialize(v7, v9, a3, a4);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    BOOL v13 = (TSP::Size *)*((void *)this + 4);
    *a2 = 18;
    unsigned int v14 = *((_DWORD *)v13 + 5);
    if (v14 > 0x7F)
    {
      a2[1] = v14 | 0x80;
      unsigned int v16 = v14 >> 7;
      if (v14 >> 14)
      {
        int v15 = a2 + 3;
        do
        {
          *(v15 - sub_1000333D0((uint64_t *)this + 1) = v16 | 0x80;
          unsigned int v17 = v16 >> 7;
          ++v15;
          unsigned int v18 = v16 >> 14;
          v16 >>= 7;
        }
        while (v18);
        *(v15 - sub_1000333D0((uint64_t *)this + 1) = v17;
      }
      else
      {
        a2[2] = v16;
        int v15 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v14;
      int v15 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::Size::_InternalSerialize(v13, v15, a3, a4);
  }
  uint64_t v19 = *((void *)this + 1);
  if ((v19 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v19 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

uint64_t TSP::Rect::RequiredFieldsByteSizeFallback(TSP::Rect *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      return v3;
    }
    goto LABEL_5;
  }
  char v4 = TSP::Point::ByteSizeLong(*((TSP::Point **)this + 3));
  uint64_t v3 = (uint64_t)&v4[((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1];
  if ((*((_DWORD *)this + 4) & 2) != 0)
  {
LABEL_5:
    int v5 = TSP::Size::ByteSizeLong(*((TSP::Size **)this + 4));
    v3 += (uint64_t)&v5[((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  return v3;
}

char *TSP::Rect::ByteSizeLong(TSP::Point **this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0)
  {
    char v4 = (const google::protobuf::UnknownFieldSet *)TSP::Rect::RequiredFieldsByteSizeFallback((TSP::Rect *)this);
  }
  else
  {
    int v2 = TSP::Point::ByteSizeLong(this[3]);
    uint64_t v3 = TSP::Size::ByteSizeLong(this[4]);
    char v4 = (const google::protobuf::UnknownFieldSet *)&v3[(void)v2
                                                      + 2
                                                      + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6)
                                                      + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), v4, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v4;
    return (char *)v4;
  }
}

void TSP::Rect::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::Rect::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::Rect::MergeFrom(void **this, const TSP::Rect *a2)
{
  uint64_t v3 = this;
  char v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      *((_DWORD *)v3 + 4) |= 1u;
      int v7 = (void **)v3[3];
      if (!v7)
      {
        unsigned int v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v8 = (void *)*v8;
        }
        int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Point>(v8);
        v3[3] = v7;
      }
      if (*((void *)a2 + 3)) {
        int v9 = (const TSP::Point *)*((void *)a2 + 3);
      }
      else {
        int v9 = (const TSP::Point *)&TSP::_Point_default_instance_;
      }
      this = TSP::Point::MergeFrom(v7, v9);
    }
    if ((v6 & 2) != 0)
    {
      *((_DWORD *)v3 + 4) |= 2u;
      unsigned int v10 = (void **)v3[4];
      if (!v10)
      {
        unsigned int v11 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v11 = (void *)*v11;
        }
        unsigned int v10 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Size>(v11);
        v3[4] = v10;
      }
      if (*((void *)a2 + 4)) {
        unsigned int v12 = (const TSP::Size *)*((void *)a2 + 4);
      }
      else {
        unsigned int v12 = (const TSP::Size *)&TSP::_Size_default_instance_;
      }
      return TSP::Size::MergeFrom(v10, v12);
    }
  }
  return this;
}

void **TSP::Size::MergeFrom(void **this, const TSP::Size *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      *((_DWORD *)v3 + 6) = *((_DWORD *)a2 + 6);
    }
    if ((v5 & 2) != 0) {
      *((_DWORD *)v3 + 7) = *((_DWORD *)a2 + 7);
    }
    *((_DWORD *)v3 + 4) |= v5;
  }
  return this;
}

void TSP::Rect::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::Rect::Clear(this);
    TSP::Rect::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::Rect::IsInitialized(TSP::Rect *this)
{
  int v1 = *((_DWORD *)this + 4);
  return (~v1 & 3) == 0
      && ((v1 & 1) == 0 || (~*(_DWORD *)(*((void *)this + 3) + 16) & 3) == 0)
      && ((v1 & 2) == 0 || (~*(_DWORD *)(*((void *)this + 4) + 16) & 3) == 0);
}

BOOL TSP::Size::IsInitialized(TSP::Size *this)
{
  return (~*((_DWORD *)this + 4) & 3) == 0;
}

uint64_t TSP::Rect::GetMetadata(TSP::Rect *this)
{
  return off_1001EA298[12];
}

void TSP::Size::~Size(TSP::Size *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::Size::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::internal *TSP::Size::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v8 = (google::protobuf::internal *)((char *)v19 + 1);
      unsigned int v9 = *(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, (const char *)(v10 - 128));
      uint64_t v19 = TagFallback;
      if (!TagFallback) {
        goto LABEL_31;
      }
      unsigned int v8 = TagFallback;
      unsigned int v9 = v18;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 == 21)
        {
          int v15 = *(_DWORD *)v8;
          unsigned int v14 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 2u;
          *(_DWORD *)(a1 + 28) = v15;
LABEL_24:
          uint64_t v19 = v14;
          goto LABEL_25;
        }
      }
      else if (v9 >> 3 == 1 && v9 == 13)
      {
        int v16 = *(_DWORD *)v8;
        unsigned int v14 = (google::protobuf::internal *)((char *)v8 + 4);
        v5 |= 1u;
        *(_DWORD *)(a1 + 24) = v16;
        goto LABEL_24;
      }
      if (v9) {
        BOOL v12 = (v9 & 7) == 4;
      }
      else {
        BOOL v12 = 1;
      }
      if (v12)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
        goto LABEL_2;
      }
      if (*v7)
      {
        BOOL v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        BOOL v13 = sub_10003562C((unint64_t *)(a1 + 8));
        unsigned int v8 = v19;
      }
      uint64_t v19 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
      if (!v19)
      {
LABEL_31:
        uint64_t v19 = 0;
        goto LABEL_2;
      }
LABEL_25:
      if (sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    unsigned int v8 = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_7:
    uint64_t v19 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

const google::protobuf::UnknownFieldSet *TSP::Size::_InternalSerialize(TSP::Size *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    int v7 = *((_DWORD *)this + 6);
    *a2 = 13;
    *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v7;
    a2 += 5;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    int v8 = *((_DWORD *)this + 7);
    *a2 = 21;
    *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v8;
    a2 += 5;
  }
  uint64_t v9 = *((void *)this + 1);
  if ((v9 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v9 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::Size::ByteSizeLong(TSP::Size *this)
{
  int v1 = *((_DWORD *)this + 4);
  uint64_t v2 = 5;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 5;
  }
  if ((~v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 10;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::Size *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v3, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v3;
  return (char *)v3;
}

void TSP::Size::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::Size::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void TSP::Size::CopyFrom(TSP::Size *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::Size::Clear(this);
    TSP::Size::MergeFrom((void **)this, a2);
  }
}

uint64_t TSP::Size::GetMetadata(TSP::Size *this)
{
  return off_1001EA298[14];
}

void TSP::Range::~Range(TSP::Range *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::Range::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::Range::Clear(TSP::Range *this)
{
  if ((*((unsigned char *)this + 16) & 3) != 0) {
    *((void *)this + sub_100071874((void *)this + 3) = 0;
  }
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_100050A8C((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::Range::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v26 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      int v8 = (google::protobuf::internal *)((char *)v26 + 1);
      unsigned int v9 = *(unsigned __int8 *)v26;
      if ((*(char *)v26 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v26, (const char *)(v10 - 128));
      unsigned int v26 = TagFallback;
      if (!TagFallback) {
        goto LABEL_40;
      }
      int v8 = TagFallback;
      unsigned int v9 = v21;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 16) {
          goto LABEL_13;
        }
        v5 |= 2u;
        unsigned int v14 = (google::protobuf::internal *)((char *)v8 + 1);
        LODWORD(v15) = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v16 = *(char *)v14;
        int v15 = (const char *)(v15 + (v16 << 7) - 128);
        if ((v16 & 0x80000000) == 0)
        {
          unsigned int v14 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_25:
          unsigned int v26 = v14;
          *(_DWORD *)(a1 + 28) = v15;
          goto LABEL_30;
        }
        unint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v15);
        unsigned int v26 = v22;
        *(_DWORD *)(a1 + 28) = v23;
        if (!v22) {
          goto LABEL_40;
        }
      }
      else
      {
        if (v9 >> 3 != 1 || v9 != 8)
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            BOOL v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            BOOL v13 = sub_10003562C((unint64_t *)(a1 + 8));
            int v8 = v26;
          }
          unsigned int v26 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
          if (!v26)
          {
LABEL_40:
            unsigned int v26 = 0;
            goto LABEL_2;
          }
          goto LABEL_30;
        }
        v5 |= 1u;
        unsigned int v17 = (google::protobuf::internal *)((char *)v8 + 1);
        LODWORD(v18) = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v19 = *(char *)v17;
        unsigned int v18 = (const char *)(v18 + (v19 << 7) - 128);
        if ((v19 & 0x80000000) == 0)
        {
          unsigned int v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_29:
          unsigned int v26 = v17;
          *(_DWORD *)(a1 + 24) = v18;
          goto LABEL_30;
        }
        int v24 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v18);
        unsigned int v26 = v24;
        *(_DWORD *)(a1 + 24) = v25;
        if (!v24) {
          goto LABEL_40;
        }
      }
LABEL_30:
      if (sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    int v8 = (google::protobuf::internal *)((char *)v26 + 2);
LABEL_7:
    unsigned int v26 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

const google::protobuf::UnknownFieldSet *TSP::Range::_InternalSerialize(TSP::Range *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned int v7 = *((_DWORD *)this + 6);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unsigned int v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unsigned int v11 = v8 >> 7;
        ++a2;
        unsigned int v12 = v8 >> 14;
        v8 >>= 7;
      }
      while (v12);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v11;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_23;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned int v9 = *((_DWORD *)this + 7);
  *a2 = 16;
  if (v9 > 0x7F)
  {
    a2[1] = v9 | 0x80;
    unsigned int v10 = v9 >> 7;
    if (v9 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
        unsigned int v13 = v10 >> 7;
        ++a2;
        unsigned int v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      a2[2] = v10;
      a2 += 3;
    }
  }
  else
  {
    a2[1] = v9;
    a2 += 2;
  }
LABEL_23:
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

uint64_t TSP::Range::RequiredFieldsByteSizeFallback(TSP::Range *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2)
  {
    uint64_t result = ((9 * (__clz(*((_DWORD *)this + 6) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_5:
  }
    result += ((9 * (__clz(*((_DWORD *)this + 7) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return result;
}

char *TSP::Range::ByteSizeLong(TSP::Range *this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0) {
    int v2 = (const google::protobuf::UnknownFieldSet *)TSP::Range::RequiredFieldsByteSizeFallback(this);
  }
  else {
    int v2 = (const google::protobuf::UnknownFieldSet *)(((9 * (__clz(*((_DWORD *)this + 6) | 1) ^ 0x1F) + 73) >> 6)
  }
                                                   + ((9 * (__clz(*((_DWORD *)this + 7) | 1) ^ 0x1F) + 73) >> 6)
                                                   + 2);
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::Range *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::Range::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::Range::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::Range::MergeFrom(void **this, const TSP::Range *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      *((_DWORD *)v3 + 6) = *((_DWORD *)a2 + 6);
    }
    if ((v5 & 2) != 0) {
      *((_DWORD *)v3 + 7) = *((_DWORD *)a2 + 7);
    }
    *((_DWORD *)v3 + 4) |= v5;
  }
  return this;
}

void TSP::Range::CopyFrom(TSP::Range *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::Range::Clear(this);
    TSP::Range::MergeFrom((void **)this, a2);
  }
}

BOOL TSP::Range::IsInitialized(TSP::Range *this)
{
  return (~*((_DWORD *)this + 4) & 3) == 0;
}

uint64_t TSP::Range::GetMetadata(TSP::Range *this)
{
  return off_1001EA298[16];
}

void TSP::Date::~Date(TSP::Date *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::Date::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::Date::Clear(TSP::Date *this)
{
  char v2 = *((unsigned char *)this + 8);
  uint64_t result = (google::protobuf::Arena **)((char *)this + 8);
  result[2] = 0;
  *((_DWORD *)result + sub_100050A8C((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::Date::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v15 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v15, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v7 = (google::protobuf::internal *)((char *)v15 + 1);
      unsigned int v8 = *(unsigned __int8 *)v15;
      if ((*(char *)v15 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v15, (const char *)(v9 - 128));
      uint64_t v15 = TagFallback;
      if (!TagFallback) {
        goto LABEL_24;
      }
      unsigned int v7 = TagFallback;
      unsigned int v8 = v13;
LABEL_7:
      if (v8 == 9)
      {
        *(void *)(a1 + 24) = *(void *)v7;
        uint64_t v15 = (google::protobuf::internal *)((char *)v7 + 8);
        int v5 = 1;
      }
      else
      {
        if (v8) {
          BOOL v10 = (v8 & 7) == 4;
        }
        else {
          BOOL v10 = 1;
        }
        if (v10)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
          goto LABEL_23;
        }
        if (*v6)
        {
          unsigned int v11 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          unsigned int v11 = sub_10003562C((unint64_t *)(a1 + 8));
          unsigned int v7 = v15;
        }
        uint64_t v15 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v11, v7);
        if (!v15)
        {
LABEL_24:
          uint64_t v15 = 0;
          goto LABEL_23;
        }
      }
      if (sub_1000355B8(a3, &v15, *(_DWORD *)(a3 + 92))) {
        goto LABEL_23;
      }
    }
    unsigned int v7 = (google::protobuf::internal *)((char *)v15 + 2);
LABEL_6:
    uint64_t v15 = v7;
    goto LABEL_7;
  }
LABEL_23:
  *(_DWORD *)(a1 + 16) |= v5;
  return v15;
}

const google::protobuf::UnknownFieldSet *TSP::Date::_InternalSerialize(TSP::Date *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    uint64_t v6 = *((void *)this + 3);
    *a2 = 9;
    *(void *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v6;
    a2 += 9;
  }
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::Date::ByteSizeLong(TSP::Date *this)
{
  if (*((unsigned char *)this + 16)) {
    uint64_t v1 = 9;
  }
  else {
    uint64_t v1 = 0;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::Date *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v1, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v1;
  return (char *)v1;
}

void TSP::Date::MergeFrom(TSP::Date *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::Date::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

double TSP::Date::MergeFrom(TSP::Date *this, const TSP::Date *a2)
{
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  if (*((unsigned char *)a2 + 16))
  {
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 4) |= 1u;
    *((double *)this + sub_100071874((void *)this + 3) = result;
  }
  return result;
}

void TSP::Date::CopyFrom(TSP::Date *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    int v5 = (char *)this + 8;
    *((void *)v5 + sub_100050A8C((void *)this + 2) = 0;
    *((_DWORD *)v5 + sub_100050A8C((void *)this + 2) = 0;
    if (v6) {
      sub_100035820((unint64_t *)v5);
    }
    TSP::Date::MergeFrom(this, lpsrc);
  }
}

uint64_t TSP::Date::IsInitialized(TSP::Date *this)
{
  return *((_DWORD *)this + 4) & 1;
}

uint64_t TSP::Date::GetMetadata(TSP::Date *this)
{
  return off_1001EA298[18];
}

uint64_t TSP::IndexSet::IndexSet(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001C9EE8;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_100050A8C((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_IndexSet_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_IndexSet_TSPMessages_2eproto);
  }
  return a1;
}

void sub_10005B844(_Unwind_Exception *a1)
{
  sub_1000719B4(v1);
  _Unwind_Resume(a1);
}

void TSP::IndexSet::~IndexSet(TSP::IndexSet *this)
{
}

{
  uint64_t vars8;

  TSP::IndexSet::~IndexSet(this);
  operator delete();
}

uint64_t TSP::IndexSet::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::IndexSet::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::Range **)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::Range::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  int v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *TSP::IndexSet::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unint64_t v22 = a2;
  if ((sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v22 + 1);
      unsigned int v7 = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, (const char *)(v8 - 128));
      unint64_t v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        unsigned int v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          unsigned int v12 = (google::protobuf::internal *)((char *)v11 + 1);
          unint64_t v22 = (google::protobuf::internal *)((char *)v11 + 1);
          unsigned int v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              unsigned int v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            *unsigned int v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<TSP::Range>(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            unsigned int v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          unsigned int v11 = sub_10005BB38(a3, v16, v12);
          unint64_t v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        BOOL v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        BOOL v10 = sub_10003562C((unint64_t *)(a1 + 8));
        char v6 = v22;
      }
      unint64_t v22 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92))) {
        return v22;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    unint64_t v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

google::protobuf::internal *sub_10005BB38(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    double result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  double result = TSP::Range::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::IndexSet::_InternalSerialize(TSP::IndexSet *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v8 = *(TSP::Range **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Range::_InternalSerialize(v8, v10, a3, a4);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::IndexSet::ByteSizeLong(TSP::IndexSet *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (TSP::Range **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::Range::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::IndexSet *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void TSP::IndexSet::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::IndexSet::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::IndexSet::MergeFrom(void **this, const TSP::IndexSet *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (TSP::Range **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    this = sub_100071A40(v3 + 2, (void ***)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v8;
    unsigned int v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  return this;
}

void TSP::IndexSet::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::IndexSet::Clear(this);
    TSP::IndexSet::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::IndexSet::IsInitialized(TSP::IndexSet *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 4) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

uint64_t TSP::IndexSet::GetMetadata(TSP::IndexSet *this)
{
  return off_1001EA298[20];
}

void TSP::Color::~Color(TSP::Color *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::Color::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::Color::Clear(TSP::Color *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((_BYTE)v1)
  {
    *(_OWORD *)((char *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0u;
    *(_OWORD *)((char *)this + 24) = 0u;
  }
  if ((v1 & 0x700) != 0)
  {
    *((void *)this + 7) = 0x100000001;
    *((_DWORD *)this + 16) = 1065353216;
  }
  char v3 = *((unsigned char *)this + 8);
  double result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_1000719B4((void *)this + 2) = 0;
  if (v3) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::Color::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  id v36 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v36, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v36 + 1);
      unsigned int v9 = *(unsigned __int8 *)v36;
      if (*(char *)v36 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v36, (const char *)(v10 - 128));
          id v36 = TagFallback;
          if (!TagFallback) {
            goto LABEL_69;
          }
          signed int v8 = TagFallback;
          unsigned int v9 = v16;
          goto LABEL_8;
        }
        signed int v8 = (google::protobuf::internal *)((char *)v36 + 2);
      }
      id v36 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_46;
          }
          unsigned int v11 = (google::protobuf::internal *)((char *)v8 + 1);
          uint64_t v12 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v13 = *(char *)v11;
          int v14 = v12 + (v13 << 7);
          uint64_t v12 = (v14 - 128);
          if (v13 < 0)
          {
            id v36 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, (v14 - 128));
            if (!v36) {
              goto LABEL_69;
            }
            uint64_t v12 = v32;
          }
          else
          {
            unsigned int v11 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_13:
            id v36 = v11;
          }
          if ((v12 - 1) <= 2)
          {
            *(_DWORD *)(a1 + 16) |= 0x200u;
            *(_DWORD *)(a1 + 6google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v12;
            goto LABEL_37;
          }
          if (*v7) {
            id v34 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else {
            id v34 = sub_10003562C((unint64_t *)(a1 + 8));
          }
          unsigned int v35 = 1;
          goto LABEL_64;
        case 3u:
          if (v9 != 29) {
            goto LABEL_46;
          }
          int v18 = *(_DWORD *)v8;
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 1u;
          *(_DWORD *)(a1 + 24) = v18;
          goto LABEL_36;
        case 4u:
          if (v9 != 37) {
            goto LABEL_46;
          }
          int v19 = *(_DWORD *)v8;
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 2u;
          *(_DWORD *)(a1 + 28) = v19;
          goto LABEL_36;
        case 5u:
          if (v9 != 45) {
            goto LABEL_46;
          }
          int v20 = *(_DWORD *)v8;
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 4u;
          *(_DWORD *)(a1 + 3sub_1000719B4((void *)this + 2) = v20;
          goto LABEL_36;
        case 6u:
          if (v9 != 53) {
            goto LABEL_46;
          }
          int v21 = *(_DWORD *)v8;
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 0x400u;
          *(_DWORD *)(a1 + 64) = v21;
          goto LABEL_36;
        case 7u:
          if (v9 != 61) {
            goto LABEL_46;
          }
          int v22 = *(_DWORD *)v8;
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 8u;
          *(_DWORD *)(a1 + 36) = v22;
          goto LABEL_36;
        case 8u:
          if (v9 != 69) {
            goto LABEL_46;
          }
          int v23 = *(_DWORD *)v8;
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 0x10u;
          *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v23;
          goto LABEL_36;
        case 9u:
          if (v9 != 77) {
            goto LABEL_46;
          }
          int v24 = *(_DWORD *)v8;
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 0x20u;
          *(_DWORD *)(a1 + 44) = v24;
          goto LABEL_36;
        case 0xAu:
          if (v9 != 85) {
            goto LABEL_46;
          }
          int v25 = *(_DWORD *)v8;
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 0x40u;
          *(_DWORD *)(a1 + 48) = v25;
          goto LABEL_36;
        case 0xBu:
          if (v9 != 93) {
            goto LABEL_46;
          }
          int v26 = *(_DWORD *)v8;
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 4);
          v5 |= 0x80u;
          *(_DWORD *)(a1 + 5sub_1000719B4((void *)this + 2) = v26;
LABEL_36:
          id v36 = v17;
          goto LABEL_37;
        case 0xCu:
          if (v9 != 96) {
            goto LABEL_46;
          }
          uint64_t v27 = (google::protobuf::internal *)((char *)v8 + 1);
          uint64_t v12 = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_43;
          }
          int v28 = *(char *)v27;
          int v29 = v12 + (v28 << 7);
          uint64_t v12 = (v29 - 128);
          if (v28 < 0)
          {
            id v36 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, (v29 - 128));
            if (!v36) {
              goto LABEL_69;
            }
            uint64_t v12 = v33;
          }
          else
          {
            uint64_t v27 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_43:
            id v36 = v27;
          }
          if ((v12 - 1) > 1)
          {
            if (*v7) {
              id v34 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
            }
            else {
              id v34 = sub_10003562C((unint64_t *)(a1 + 8));
            }
            unsigned int v35 = 12;
LABEL_64:
            google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v34, v35, v12);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x100u;
            *(_DWORD *)(a1 + 56) = v12;
          }
          goto LABEL_37;
        default:
LABEL_46:
          if (v9) {
            BOOL v30 = (v9 & 7) == 4;
          }
          else {
            BOOL v30 = 1;
          }
          if (v30)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            uint64_t v31 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            uint64_t v31 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v36;
          }
          id v36 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v31, v8);
          if (!v36)
          {
LABEL_69:
            id v36 = 0;
            goto LABEL_2;
          }
LABEL_37:
          if (sub_1000355B8(a3, &v36, *(_DWORD *)(a3 + 92))) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v36;
}

const google::protobuf::UnknownFieldSet *TSP::Color::_InternalSerialize(TSP::Color *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((int *)this + 15);
    *a2 = 8;
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      if (v7 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
          unint64_t v9 = v8 >> 7;
          ++a2;
          unint64_t v10 = v8 >> 14;
          v8 >>= 7;
        }
        while (v10);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v9;
        if (v6) {
          goto LABEL_24;
        }
      }
      else
      {
        a2[2] = v8;
        a2 += 3;
        if (v6) {
          goto LABEL_24;
        }
      }
    }
    else
    {
      a2[1] = v7;
      a2 += 2;
      if (v6) {
        goto LABEL_24;
      }
    }
LABEL_3:
    if ((v6 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_27;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_3;
  }
LABEL_24:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v11 = *((_DWORD *)this + 6);
  *a2 = 29;
  *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v11;
  a2 += 5;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_30;
  }
LABEL_27:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v12 = *((_DWORD *)this + 7);
  *a2 = 37;
  *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v12;
  a2 += 5;
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x400) == 0) {
      goto LABEL_6;
    }
    goto LABEL_33;
  }
LABEL_30:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v13 = *((_DWORD *)this + 8);
  *a2 = 45;
  *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v13;
  a2 += 5;
  if ((v6 & 0x400) == 0)
  {
LABEL_6:
    if ((v6 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_36;
  }
LABEL_33:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v14 = *((_DWORD *)this + 16);
  *a2 = 53;
  *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v14;
  a2 += 5;
  if ((v6 & 8) == 0)
  {
LABEL_7:
    if ((v6 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_39;
  }
LABEL_36:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v15 = *((_DWORD *)this + 9);
  *a2 = 61;
  *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v15;
  a2 += 5;
  if ((v6 & 0x10) == 0)
  {
LABEL_8:
    if ((v6 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_42;
  }
LABEL_39:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v16 = *((_DWORD *)this + 10);
  *a2 = 69;
  *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v16;
  a2 += 5;
  if ((v6 & 0x20) == 0)
  {
LABEL_9:
    if ((v6 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_45;
  }
LABEL_42:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v17 = *((_DWORD *)this + 11);
  *a2 = 77;
  *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v17;
  a2 += 5;
  if ((v6 & 0x40) == 0)
  {
LABEL_10:
    if ((v6 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_48;
  }
LABEL_45:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v18 = *((_DWORD *)this + 12);
  *a2 = 85;
  *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v18;
  a2 += 5;
  if ((v6 & 0x80) == 0)
  {
LABEL_11:
    if ((v6 & 0x100) == 0) {
      goto LABEL_60;
    }
    goto LABEL_51;
  }
LABEL_48:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v19 = *((_DWORD *)this + 13);
  *a2 = 93;
  *(_DWORD *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v19;
  a2 += 5;
  if ((v6 & 0x100) != 0)
  {
LABEL_51:
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v20 = *((int *)this + 14);
    *a2 = 96;
    if (v20 > 0x7F)
    {
      a2[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      if (v20 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v21 | 0x80;
          unint64_t v22 = v21 >> 7;
          ++a2;
          unint64_t v23 = v21 >> 14;
          v21 >>= 7;
        }
        while (v23);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v22;
      }
      else
      {
        a2[2] = v21;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v20;
      a2 += 2;
    }
  }
LABEL_60:
  uint64_t v24 = *((void *)this + 1);
  if ((v24 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v24 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::Color::ByteSizeLong(TSP::Color *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 0x200) != 0)
  {
    int v3 = *((_DWORD *)this + 15);
    if (v3 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((_DWORD *)this + 4))
  {
    if (v1) {
      v2 += 5;
    }
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 5;
    }
    if ((v1 & 0x80) != 0) {
      v2 += 5;
    }
  }
  if ((v1 & 0x100) != 0)
  {
    int v4 = *((_DWORD *)this + 14);
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v5;
  }
  if ((v1 & 0x400) != 0) {
    int v6 = (const google::protobuf::UnknownFieldSet *)(v2 + 5);
  }
  else {
    int v6 = (const google::protobuf::UnknownFieldSet *)v2;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::Color *)((char *)this + 8), v6, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v6;
  return (char *)v6;
}

void TSP::Color::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::Color::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::Color::MergeFrom(void **this, const TSP::Color *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((_BYTE)v5)
  {
    if (v5)
    {
      *((_DWORD *)v3 + 6) = *((_DWORD *)a2 + 6);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_23;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)v3 + 7) = *((_DWORD *)a2 + 7);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_24;
    }
LABEL_23:
    *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_25;
    }
LABEL_24:
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_26;
    }
LABEL_25:
    *((_DWORD *)v3 + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *((_DWORD *)a2 + 10);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_27;
    }
LABEL_26:
    *((_DWORD *)v3 + 1sub_1000333D0((uint64_t *)this + 1) = *((_DWORD *)a2 + 11);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0)
      {
LABEL_13:
        *((_DWORD *)v3 + 4) |= v5;
        goto LABEL_14;
      }
LABEL_12:
      *((_DWORD *)v3 + 1sub_100071874((void *)this + 3) = *((_DWORD *)a2 + 13);
      goto LABEL_13;
    }
LABEL_27:
    *((_DWORD *)v3 + 1sub_1000719B4((void *)this + 2) = *((_DWORD *)a2 + 12);
    if ((v5 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  if ((v5 & 0x700) == 0) {
    return this;
  }
  if ((v5 & 0x100) == 0)
  {
    if ((v5 & 0x200) == 0) {
      goto LABEL_17;
    }
LABEL_30:
    *((_DWORD *)v3 + 15) = *((_DWORD *)a2 + 15);
    if ((v5 & 0x400) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  *((_DWORD *)v3 + 14) = *((_DWORD *)a2 + 14);
  if ((v5 & 0x200) != 0) {
    goto LABEL_30;
  }
LABEL_17:
  if ((v5 & 0x400) != 0) {
LABEL_18:
  }
    *((_DWORD *)v3 + 16) = *((_DWORD *)a2 + 16);
LABEL_19:
  *((_DWORD *)v3 + 4) |= v5;
  return this;
}

void TSP::Color::CopyFrom(TSP::Color *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::Color::Clear(this);
    TSP::Color::MergeFrom((void **)this, a2);
  }
}

uint64_t TSP::Color::IsInitialized(TSP::Color *this)
{
  return (*((unsigned __int8 *)this + 17) >> 1) & 1;
}

uint64_t TSP::Color::GetMetadata(TSP::Color *this)
{
  return off_1001EA298[22];
}

uint64_t TSP::Path_Element::Path_Element(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CA048;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 3sub_1000719B4((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_Path_Element_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Path_Element_TSPMessages_2eproto);
  }
  *(_DWORD *)(a1 + 48) = 1;
  return a1;
}

void sub_10005CBC8(_Unwind_Exception *a1)
{
  sub_1000719B4(v1);
  _Unwind_Resume(a1);
}

void TSP::Path_Element::~Path_Element(TSP::Path_Element *this)
{
}

{
  uint64_t vars8;

  TSP::Path_Element::~Path_Element(this);
  operator delete();
}

uint64_t TSP::Path_Element::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::Path_Element::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    int v3 = (TSP::Point **)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::Point::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_1000719B4((void *)this + 2) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 1;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::Path_Element::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v29 = a2;
  if ((sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    char v6 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v7 = (google::protobuf::internal *)((char *)v29 + 1);
      unsigned int v8 = *(unsigned __int8 *)v29;
      if ((*(char *)v29 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v29, (const char *)(v9 - 128));
      int v29 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unint64_t v7 = TagFallback;
      unsigned int v8 = v26;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 18) {
          goto LABEL_13;
        }
        int v13 = (google::protobuf::internal *)((char *)v7 - 1);
        while (2)
        {
          int v14 = (google::protobuf::internal *)((char *)v13 + 1);
          int v29 = (google::protobuf::internal *)((char *)v13 + 1);
          int v15 = *(int **)(a1 + 40);
          if (v15)
          {
            uint64_t v16 = *(int *)(a1 + 32);
            int v17 = *v15;
            if ((int)v16 < *v15)
            {
              *(_DWORD *)(a1 + 3sub_1000719B4((void *)this + 2) = v16 + 1;
              uint64_t v18 = *(void *)&v15[2 * v16 + 2];
              goto LABEL_30;
            }
            if (v17 == *(_DWORD *)(a1 + 36))
            {
LABEL_28:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v17 + 1);
              int v15 = *(int **)(a1 + 40);
              int v17 = *v15;
            }
            *int v15 = v17 + 1;
            uint64_t v18 = google::protobuf::Arena::CreateMaybeMessage<TSP::Point>(*(void *)(a1 + 24));
            uint64_t v19 = *(void *)(a1 + 40);
            uint64_t v20 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_1000719B4((void *)this + 2) = v20 + 1;
            *(void *)(v19 + 8 * v20 + 8) = v18;
            int v14 = v29;
LABEL_30:
            int v13 = sub_10005A0D0(a3, v18, v14);
            int v29 = v13;
            if (!v13) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v13 || *(unsigned char *)v13 != 18) {
              goto LABEL_40;
            }
            continue;
          }
          break;
        }
        int v17 = *(_DWORD *)(a1 + 36);
        goto LABEL_28;
      }
      if (v8 >> 3 == 1 && v8 == 8)
      {
        unint64_t v21 = (google::protobuf::internal *)((char *)v7 + 1);
        uint64_t v22 = *(unsigned __int8 *)v7;
        if ((*(char *)v7 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v23 = *(char *)v21;
        int v24 = v22 + (v23 << 7);
        uint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          int v29 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v7, (v24 - 128));
          if (!v29) {
            return 0;
          }
          uint64_t v22 = v27;
        }
        else
        {
          unint64_t v21 = (google::protobuf::internal *)((char *)v7 + 2);
LABEL_37:
          int v29 = v21;
        }
        if ((v22 - 1) > 4)
        {
          if (*v6) {
            int v28 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else {
            int v28 = sub_10003562C((unint64_t *)(a1 + 8));
          }
          google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v28, 1u, v22);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 48) = v22;
        }
        goto LABEL_40;
      }
LABEL_13:
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
        return v29;
      }
      if (*v6)
      {
        int v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        int v12 = sub_10003562C((unint64_t *)(a1 + 8));
        unint64_t v7 = v29;
      }
      int v29 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
      if (!v29) {
        return 0;
      }
LABEL_40:
      if (sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92))) {
        return v29;
      }
    }
    unint64_t v7 = (google::protobuf::internal *)((char *)v29 + 2);
LABEL_7:
    int v29 = v7;
    goto LABEL_8;
  }
  return v29;
}

const google::protobuf::UnknownFieldSet *TSP::Path_Element::_InternalSerialize(TSP::Path_Element *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v6 = *((int *)this + 12);
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unint64_t v8 = v7 >> 7;
          ++a2;
          unint64_t v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  int v10 = *((_DWORD *)this + 8);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v12 = *(TSP::Point **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v13 = *((_DWORD *)v12 + 5);
      if (v13 > 0x7F)
      {
        a2[1] = v13 | 0x80;
        unsigned int v15 = v13 >> 7;
        if (v13 >> 14)
        {
          int v14 = a2 + 3;
          do
          {
            *(v14 - sub_1000333D0((uint64_t *)this + 1) = v15 | 0x80;
            unsigned int v16 = v15 >> 7;
            ++v14;
            unsigned int v17 = v15 >> 14;
            v15 >>= 7;
          }
          while (v17);
          *(v14 - sub_1000333D0((uint64_t *)this + 1) = v16;
        }
        else
        {
          a2[2] = v15;
          int v14 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v13;
        int v14 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Point::_InternalSerialize(v12, v14, a3, a4);
    }
  }
  uint64_t v18 = *((void *)this + 1);
  if ((v18 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v18 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::Path_Element::ByteSizeLong(TSP::Path_Element *this)
{
  if (*((unsigned char *)this + 16))
  {
    int v3 = *((_DWORD *)this + 12);
    if (v3 < 0) {
      uint64_t v2 = 11;
    }
    else {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = *((int *)this + 8);
  uint64_t v5 = (const google::protobuf::UnknownFieldSet *)(v2 + v4);
  uint64_t v6 = *((void *)this + 5);
  if (v6) {
    unint64_t v7 = (TSP::Point **)(v6 + 8);
  }
  else {
    unint64_t v7 = 0;
  }
  if (v4)
  {
    uint64_t v8 = 8 * v4;
    do
    {
      unint64_t v9 = *v7++;
      int v10 = TSP::Point::ByteSizeLong(v9);
      uint64_t v5 = (const google::protobuf::UnknownFieldSet *)((char *)v5
                                                     + (void)v10
                                                     + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6));
      v8 -= 8;
    }
    while (v8);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::Path_Element *)((char *)this + 8), v5, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v5;
    return (char *)v5;
  }
}

void TSP::Path_Element::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::Path_Element::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::Path_Element::MergeFrom(void **this, const TSP::Path_Element *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    uint64_t v6 = (TSP::Point **)(*((void *)a2 + 5) + 8);
    unint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 3), *((_DWORD *)a2 + 8));
    this = sub_100071B00(v3 + 3, (void ***)v7, v6, v5, *(_DWORD *)v3[5] - *((_DWORD *)v3 + 8));
    signed int v8 = *((_DWORD *)v3 + 8) + v5;
    *((_DWORD *)v3 + 8) = v8;
    unint64_t v9 = (signed int *)v3[5];
    if (*v9 < v8) {
      *unint64_t v9 = v8;
    }
  }
  if (*((unsigned char *)a2 + 16))
  {
    int v10 = *((_DWORD *)a2 + 12);
    *((_DWORD *)v3 + 4) |= 1u;
    *((_DWORD *)v3 + 1sub_1000719B4((void *)this + 2) = v10;
  }
  return this;
}

void TSP::Path_Element::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::Path_Element::Clear(this);
    TSP::Path_Element::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::Path_Element::IsInitialized(TSP::Path_Element *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 0;
  }
  uint64_t v2 = *((unsigned int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  do
  {
    BOOL result = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = *(void *)(v3 + 8 * v2--);
  }
  while ((~*(_DWORD *)(v4 + 16) & 3) == 0);
  return result;
}

uint64_t TSP::Path_Element::GetMetadata(TSP::Path_Element *this)
{
  return off_1001EA298[24];
}

uint64_t TSP::Path::Path(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CA0F8;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_1000719B4((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_Path_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Path_TSPMessages_2eproto);
  }
  return a1;
}

void sub_10005D4C4(_Unwind_Exception *a1)
{
  sub_100071BC0(v1);
  _Unwind_Resume(a1);
}

void TSP::Path::~Path(TSP::Path *this)
{
}

{
  uint64_t vars8;

  TSP::Path::~Path(this);
  operator delete();
}

uint64_t TSP::Path::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::Path::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::Arena ***)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::Path_Element::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  unsigned int v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *TSP::Path::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v22 = a2;
  if ((sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v22 + 1);
      unsigned int v7 = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, (const char *)(v8 - 128));
      uint64_t v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        BOOL v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          int v12 = (google::protobuf::internal *)((char *)v11 + 1);
          uint64_t v22 = (google::protobuf::internal *)((char *)v11 + 1);
          unsigned int v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              unsigned int v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            *unsigned int v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<TSP::Path_Element>(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            int v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          BOOL v11 = sub_10005D7B8(a3, v16, v12);
          uint64_t v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        int v10 = sub_10003562C((unint64_t *)(a1 + 8));
        char v6 = v22;
      }
      uint64_t v22 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92))) {
        return v22;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    uint64_t v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

google::protobuf::internal *sub_10005D7B8(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  unsigned int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::Path_Element::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::Path::_InternalSerialize(TSP::Path *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v8 = *(TSP::Path_Element **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Path_Element::_InternalSerialize(v8, v10, a3, a4);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::Path::ByteSizeLong(TSP::Path *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (TSP::Path_Element **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::Path_Element::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::Path *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void TSP::Path::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::Path::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::Path::MergeFrom(void **this, const TSP::Path *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (TSP::Path_Element **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    this = sub_100071C40(v3 + 2, (void ***)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v8;
    unsigned int v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  return this;
}

void TSP::Path::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::Path::Clear(this);
    TSP::Path::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::Path::IsInitialized(TSP::Path *this)
{
  return sub_10003DC94((uint64_t)this + 16);
}

uint64_t TSP::Path::GetMetadata(TSP::Path *this)
{
  return off_1001EA298[26];
}

void TSP::ReferenceDictionary_Entry::~ReferenceDictionary_Entry(TSP::ReferenceDictionary_Entry *this)
{
  if (this != (TSP::ReferenceDictionary_Entry *)&TSP::_ReferenceDictionary_Entry_default_instance_)
  {
    uint64_t v1 = *((void *)this + 3);
    if (v1)
    {
      sub_1000333D0((uint64_t *)(v1 + 8));
      operator delete();
    }
    uint64_t v2 = *((void *)this + 4);
    if (v2)
    {
      sub_1000333D0((uint64_t *)(v2 + 8));
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::ReferenceDictionary_Entry::~ReferenceDictionary_Entry(this);
  operator delete();
}

uint64_t TSP::ReferenceDictionary_Entry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ReferenceDictionary_Entry::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      this = TSP::Reference::Clear(this[3]);
    }
    if ((v2 & 2) != 0) {
      this = TSP::Reference::Clear(*(TSP::Reference **)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_100035820((unint64_t *)v3);
  }
  return this;
}

google::protobuf::internal *TSP::ReferenceDictionary_Entry::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v19 = a2;
  if ((sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v7 = (google::protobuf::internal *)((char *)v19 + 1);
      unsigned int v8 = *(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, (const char *)(v9 - 128));
      uint64_t v19 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unsigned int v7 = TagFallback;
      unsigned int v8 = v18;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v14 = *(void *)(a1 + 32);
          if (!v14)
          {
            int v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
            if (*v6) {
              int v15 = (void *)*v15;
            }
            uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v15);
            *(void *)(a1 + 3sub_100071BC0((void *)this + 2) = v14;
LABEL_29:
            unsigned int v7 = v19;
          }
LABEL_30:
          unsigned int v13 = sub_100034100(a3, v14, v7);
          goto LABEL_31;
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v14 = *(void *)(a1 + 24);
        if (!v14)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v16);
          *(void *)(a1 + 24) = v14;
          goto LABEL_29;
        }
        goto LABEL_30;
      }
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
        return v19;
      }
      if (*v6)
      {
        unsigned int v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unsigned int v12 = sub_10003562C((unint64_t *)(a1 + 8));
        unsigned int v7 = v19;
      }
      unsigned int v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
LABEL_31:
      uint64_t v19 = v13;
      if (!v13) {
        return 0;
      }
      if (sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92))) {
        return v19;
      }
    }
    unsigned int v7 = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_7:
    uint64_t v19 = v7;
    goto LABEL_8;
  }
  return v19;
}

const google::protobuf::UnknownFieldSet *TSP::ReferenceDictionary_Entry::_InternalSerialize(TSP::ReferenceDictionary_Entry *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned int v7 = (TSP::Reference *)*((void *)this + 3);
    *a2 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 5);
    if (v8 > 0x7F)
    {
      a2[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        unsigned int v9 = a2 + 3;
        do
        {
          *(v9 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
          unsigned int v11 = v10 >> 7;
          ++v9;
          unsigned int v12 = v10 >> 14;
          v10 >>= 7;
        }
        while (v12);
        *(v9 - sub_1000333D0((uint64_t *)this + 1) = v11;
      }
      else
      {
        a2[2] = v10;
        unsigned int v9 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v8;
      unsigned int v9 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v7, v9, a3, a4);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned int v13 = (TSP::Reference *)*((void *)this + 4);
    *a2 = 18;
    unsigned int v14 = *((_DWORD *)v13 + 5);
    if (v14 > 0x7F)
    {
      a2[1] = v14 | 0x80;
      unsigned int v16 = v14 >> 7;
      if (v14 >> 14)
      {
        int v15 = a2 + 3;
        do
        {
          *(v15 - sub_1000333D0((uint64_t *)this + 1) = v16 | 0x80;
          unsigned int v17 = v16 >> 7;
          ++v15;
          unsigned int v18 = v16 >> 14;
          v16 >>= 7;
        }
        while (v18);
        *(v15 - sub_1000333D0((uint64_t *)this + 1) = v17;
      }
      else
      {
        a2[2] = v16;
        int v15 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v14;
      int v15 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v13, v15, a3, a4);
  }
  uint64_t v19 = *((void *)this + 1);
  if ((v19 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v19 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

uint64_t TSP::ReferenceDictionary_Entry::RequiredFieldsByteSizeFallback(TSP::ReferenceDictionary_Entry *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      return v3;
    }
    goto LABEL_5;
  }
  char v4 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 3));
  uint64_t v3 = (uint64_t)&v4[((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1];
  if ((*((_DWORD *)this + 4) & 2) != 0)
  {
LABEL_5:
    unsigned int v5 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 4));
    v3 += (uint64_t)&v5[((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  return v3;
}

char *TSP::ReferenceDictionary_Entry::ByteSizeLong(TSP::Reference **this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0)
  {
    char v4 = (const google::protobuf::UnknownFieldSet *)TSP::ReferenceDictionary_Entry::RequiredFieldsByteSizeFallback((TSP::ReferenceDictionary_Entry *)this);
  }
  else
  {
    int v2 = TSP::Reference::ByteSizeLong(this[3]);
    uint64_t v3 = TSP::Reference::ByteSizeLong(this[4]);
    char v4 = (const google::protobuf::UnknownFieldSet *)&v3[(void)v2
                                                      + 2
                                                      + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6)
                                                      + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), v4, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v4;
    return (char *)v4;
  }
}

void TSP::ReferenceDictionary_Entry::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ReferenceDictionary_Entry::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::ReferenceDictionary_Entry::MergeFrom(void **this, const TSP::ReferenceDictionary_Entry *a2)
{
  uint64_t v3 = this;
  char v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      *((_DWORD *)v3 + 4) |= 1u;
      unsigned int v7 = (void **)v3[3];
      if (!v7)
      {
        unsigned int v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v8 = (void *)*v8;
        }
        unsigned int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v8);
        v3[3] = v7;
      }
      if (*((void *)a2 + 3)) {
        unsigned int v9 = (const TSP::Reference *)*((void *)a2 + 3);
      }
      else {
        unsigned int v9 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
      }
      this = TSP::Reference::MergeFrom(v7, v9);
    }
    if ((v6 & 2) != 0)
    {
      *((_DWORD *)v3 + 4) |= 2u;
      unsigned int v10 = (void **)v3[4];
      if (!v10)
      {
        unsigned int v11 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v11 = (void *)*v11;
        }
        unsigned int v10 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v11);
        v3[4] = v10;
      }
      if (*((void *)a2 + 4)) {
        unsigned int v12 = (const TSP::Reference *)*((void *)a2 + 4);
      }
      else {
        unsigned int v12 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
      }
      return TSP::Reference::MergeFrom(v10, v12);
    }
  }
  return this;
}

void TSP::ReferenceDictionary_Entry::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::ReferenceDictionary_Entry::Clear(this);
    TSP::ReferenceDictionary_Entry::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::ReferenceDictionary_Entry::IsInitialized(TSP::ReferenceDictionary_Entry *this)
{
  int v1 = *((_DWORD *)this + 4);
  return (~v1 & 3) == 0
      && ((v1 & 1) == 0 || (*(unsigned char *)(*((void *)this + 3) + 16) & 1) != 0)
      && ((v1 & 2) == 0 || (*(unsigned char *)(*((void *)this + 4) + 16) & 1) != 0);
}

uint64_t TSP::ReferenceDictionary_Entry::GetMetadata(TSP::ReferenceDictionary_Entry *this)
{
  return off_1001EA298[28];
}

uint64_t TSP::ReferenceDictionary::ReferenceDictionary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CA258;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_100071BC0((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_ReferenceDictionary_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ReferenceDictionary_TSPMessages_2eproto);
  }
  return a1;
}

void sub_10005E524(_Unwind_Exception *a1)
{
  sub_100071D00(v1);
  _Unwind_Resume(a1);
}

void TSP::ReferenceDictionary::~ReferenceDictionary(TSP::ReferenceDictionary *this)
{
}

{
  uint64_t vars8;

  TSP::ReferenceDictionary::~ReferenceDictionary(this);
  operator delete();
}

uint64_t TSP::ReferenceDictionary::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ReferenceDictionary::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::Arena ***)((char *)this[4] + 8);
    do
    {
      char v4 = *v3++;
      this = TSP::ReferenceDictionary_Entry::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *TSP::ReferenceDictionary::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v22 = a2;
  if ((sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v22 + 1);
      unsigned int v7 = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, (const char *)(v8 - 128));
      uint64_t v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        unsigned int v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          unsigned int v12 = (google::protobuf::internal *)((char *)v11 + 1);
          uint64_t v22 = (google::protobuf::internal *)((char *)v11 + 1);
          unsigned int v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              unsigned int v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            *unsigned int v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<TSP::ReferenceDictionary_Entry>(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            unsigned int v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          unsigned int v11 = sub_10005E818(a3, v16, v12);
          uint64_t v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        unsigned int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unsigned int v10 = sub_10003562C((unint64_t *)(a1 + 8));
        char v6 = v22;
      }
      uint64_t v22 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92))) {
        return v22;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    uint64_t v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

google::protobuf::internal *sub_10005E818(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::ReferenceDictionary_Entry::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::ReferenceDictionary::_InternalSerialize(TSP::ReferenceDictionary *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v8 = *(TSP::ReferenceDictionary_Entry **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::ReferenceDictionary_Entry::_InternalSerialize(v8, v10, a3, a4);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::ReferenceDictionary::ByteSizeLong(TSP::ReferenceDictionary *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    char v4 = (TSP::Reference ***)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::ReferenceDictionary_Entry::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::ReferenceDictionary *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void TSP::ReferenceDictionary::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ReferenceDictionary::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::ReferenceDictionary::MergeFrom(void **this, const TSP::ReferenceDictionary *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (TSP::ReferenceDictionary_Entry **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    this = sub_100071D80(v3 + 2, (void ***)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v8;
    unsigned int v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  return this;
}

void TSP::ReferenceDictionary::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::ReferenceDictionary::Clear(this);
    TSP::ReferenceDictionary::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::ReferenceDictionary::IsInitialized(TSP::ReferenceDictionary *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  uint64_t v2 = *((void *)this + 4);
  do
  {
    int v3 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v4 = v1 - 1;
    BOOL IsInitialized = TSP::ReferenceDictionary_Entry::IsInitialized(*(TSP::ReferenceDictionary_Entry **)(v2 + 8 * v1));
    uint64_t v1 = v4;
  }
  while (IsInitialized);
  return v3 < 1;
}

uint64_t TSP::ReferenceDictionary::GetMetadata(TSP::ReferenceDictionary *this)
{
  return off_1001EA298[30];
}

void TSP::UUID::~UUID(TSP::UUID *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::UUID::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::UUID::Clear(TSP::UUID *this)
{
  if ((*((unsigned char *)this + 16) & 3) != 0)
  {
    *((void *)this + sub_1000719B4((void *)this + 3) = 0;
    *((void *)this + 4) = 0;
  }
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_100071D00((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::UUID::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v26 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v26 + 1);
      unsigned int v9 = *(unsigned __int8 *)v26;
      if ((*(char *)v26 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v26, (const char *)(v10 - 128));
      unsigned int v26 = TagFallback;
      if (!TagFallback) {
        goto LABEL_40;
      }
      signed int v8 = TagFallback;
      unsigned int v9 = v21;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 16) {
          goto LABEL_13;
        }
        v5 |= 2u;
        uint64_t v14 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v15 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v16 = *(char *)v14;
        unint64_t v15 = v15 + (v16 << 7) - 128;
        if ((v16 & 0x80000000) == 0)
        {
          uint64_t v14 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_25:
          unsigned int v26 = v14;
          *(void *)(a1 + 3sub_100071D00((void *)this + 2) = v15;
          goto LABEL_30;
        }
        uint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v15);
        unsigned int v26 = v22;
        *(void *)(a1 + 3sub_100071D00((void *)this + 2) = v23;
        if (!v22) {
          goto LABEL_40;
        }
      }
      else
      {
        if (v9 >> 3 != 1 || v9 != 8)
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unsigned int v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v13 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v26;
          }
          unsigned int v26 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
          if (!v26)
          {
LABEL_40:
            unsigned int v26 = 0;
            goto LABEL_2;
          }
          goto LABEL_30;
        }
        v5 |= 1u;
        uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v18 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v19 = *(char *)v17;
        unint64_t v18 = v18 + (v19 << 7) - 128;
        if ((v19 & 0x80000000) == 0)
        {
          uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_29:
          unsigned int v26 = v17;
          *(void *)(a1 + 24) = v18;
          goto LABEL_30;
        }
        int v24 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v18);
        unsigned int v26 = v24;
        *(void *)(a1 + 24) = v25;
        if (!v24) {
          goto LABEL_40;
        }
      }
LABEL_30:
      if (sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    signed int v8 = (google::protobuf::internal *)((char *)v26 + 2);
LABEL_7:
    unsigned int v26 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

const google::protobuf::UnknownFieldSet *TSP::UUID::_InternalSerialize(TSP::UUID *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v7 = *((void *)this + 3);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unint64_t v11 = v8 >> 7;
        ++a2;
        unint64_t v12 = v8 >> 14;
        v8 >>= 7;
      }
      while (v12);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v11;
      if ((v6 & 2) == 0) {
        goto LABEL_23;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_23;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v9 = *((void *)this + 4);
  *a2 = 16;
  if (v9 > 0x7F)
  {
    a2[1] = v9 | 0x80;
    unint64_t v10 = v9 >> 7;
    if (v9 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
        unint64_t v13 = v10 >> 7;
        ++a2;
        unint64_t v14 = v10 >> 14;
        v10 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
    }
    else
    {
      a2[2] = v10;
      a2 += 3;
    }
  }
  else
  {
    a2[1] = v9;
    a2 += 2;
  }
LABEL_23:
  uint64_t v15 = *((void *)this + 1);
  if ((v15 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v15 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

unint64_t TSP::UUID::RequiredFieldsByteSizeFallback(TSP::UUID *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 1) == 0)
  {
    unint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      return v2;
    }
    goto LABEL_5;
  }
  unint64_t v2 = ((9 * (__clz(*((void *)this + 3) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
LABEL_5:
  }
    v2 += ((9 * (__clz(*((void *)this + 4) | 1) ^ 0x3F) + 73) >> 6) + 1;
  return v2;
}

char *TSP::UUID::ByteSizeLong(TSP::UUID *this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0) {
    unint64_t v2 = (const google::protobuf::UnknownFieldSet *)TSP::UUID::RequiredFieldsByteSizeFallback(this);
  }
  else {
    unint64_t v2 = (const google::protobuf::UnknownFieldSet *)(((9 * (__clz(*((void *)this + 3) | 1) ^ 0x3F) + 73) >> 6)
  }
                                                   + ((9 * (__clz(*((void *)this + 4) | 1) ^ 0x3F) + 73) >> 6)
                                                   + 2);
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::UUID *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::UUID::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::UUID::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::UUID::MergeFrom(void **this, const TSP::UUID *a2)
{
  int v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      v3[3] = (void *)*((void *)a2 + 3);
    }
    if ((v5 & 2) != 0) {
      v3[4] = (void *)*((void *)a2 + 4);
    }
    *((_DWORD *)v3 + 4) |= v5;
  }
  return this;
}

void TSP::UUID::CopyFrom(TSP::UUID *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::UUID::Clear(this);
    TSP::UUID::MergeFrom((void **)this, a2);
  }
}

BOOL TSP::UUID::IsInitialized(TSP::UUID *this)
{
  return (~*((_DWORD *)this + 4) & 3) == 0;
}

uint64_t TSP::UUID::GetMetadata(TSP::UUID *this)
{
  return off_1001EA298[32];
}

void *TSP::CFUUIDArchive::CFUUIDArchive(void *a1, uint64_t a2)
{
  *a1 = off_1001CA3B8;
  a1[1] = a2;
  a1[2] = 0;
  if (atomic_load_explicit(scc_info_CFUUIDArchive_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_CFUUIDArchive_TSPMessages_2eproto);
  }
  a1[4] = 0;
  a1[5] = 0;
  a1[3] = &google::protobuf::internal::fixed_address_empty_string;
  return a1;
}

void TSP::CFUUIDArchive::~CFUUIDArchive(TSP::CFUUIDArchive *this)
{
  uint64_t v1 = *((void *)this + 3);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::CFUUIDArchive::~CFUUIDArchive(this);
  operator delete();
}

uint64_t TSP::CFUUIDArchive::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::CFUUIDArchive::Clear(TSP::CFUUIDArchive *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    unint64_t v2 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 2sub_1000719B4((void *)this + 3) = 0;
    }
  }
  if ((v1 & 0x1E) != 0)
  {
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
  }
  char v4 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_100071D00((void *)this + 2) = 0;
  if (v4) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::CFUUIDArchive::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v39 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v39, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v8 = (google::protobuf::internal *)((char *)v39 + 1);
      unsigned int v9 = *(unsigned __int8 *)v39;
      if (*(char *)v39 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v39, (const char *)(v10 - 128));
          uint64_t v39 = TagFallback;
          if (!TagFallback) {
            goto LABEL_55;
          }
          unint64_t v8 = TagFallback;
          unsigned int v9 = v30;
          goto LABEL_8;
        }
        unint64_t v8 = (google::protobuf::internal *)((char *)v39 + 2);
      }
      uint64_t v39 = v8;
LABEL_8:
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_33;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          unint64_t v12 = (google::protobuf::Arena *)(v11 & 0xFFFFFFFFFFFFFFFELL);
          if (v11) {
            unint64_t v12 = *(google::protobuf::Arena **)v12;
          }
          unint64_t v13 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 24), v12);
          unint64_t v14 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v13, (std::string::value_type *)v39, a3);
          goto LABEL_40;
        case 2u:
          if (v9 != 16) {
            goto LABEL_33;
          }
          v5 |= 2u;
          uint64_t v15 = (google::protobuf::internal *)((char *)v8 + 1);
          LODWORD(v16) = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_17;
          }
          int v17 = *(char *)v15;
          int v16 = (const char *)(v16 + (v17 << 7) - 128);
          if (v17 < 0)
          {
            uint64_t v31 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v16);
            uint64_t v39 = v31;
            *(_DWORD *)(a1 + 3sub_100071D00((void *)this + 2) = v32;
            if (!v31) {
              goto LABEL_55;
            }
          }
          else
          {
            uint64_t v15 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_17:
            uint64_t v39 = v15;
            *(_DWORD *)(a1 + 3sub_100071D00((void *)this + 2) = v16;
          }
          goto LABEL_41;
        case 3u:
          if (v9 != 24) {
            goto LABEL_33;
          }
          v5 |= 4u;
          unint64_t v18 = (google::protobuf::internal *)((char *)v8 + 1);
          LODWORD(v19) = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_22;
          }
          int v20 = *(char *)v18;
          int v19 = (const char *)(v19 + (v20 << 7) - 128);
          if (v20 < 0)
          {
            uint64_t v33 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v19);
            uint64_t v39 = v33;
            *(_DWORD *)(a1 + 36) = v34;
            if (!v33) {
              goto LABEL_55;
            }
          }
          else
          {
            unint64_t v18 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_22:
            uint64_t v39 = v18;
            *(_DWORD *)(a1 + 36) = v19;
          }
          goto LABEL_41;
        case 4u:
          if (v9 != 32) {
            goto LABEL_33;
          }
          v5 |= 8u;
          unsigned int v21 = (google::protobuf::internal *)((char *)v8 + 1);
          LODWORD(v2sub_100071D00((void *)this + 2) = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_27;
          }
          int v23 = *(char *)v21;
          uint64_t v22 = (const char *)(v22 + (v23 << 7) - 128);
          if (v23 < 0)
          {
            unsigned int v35 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v22);
            uint64_t v39 = v35;
            *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v36;
            if (!v35) {
              goto LABEL_55;
            }
          }
          else
          {
            unsigned int v21 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_27:
            uint64_t v39 = v21;
            *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v22;
          }
          goto LABEL_41;
        case 5u:
          if (v9 != 40) {
            goto LABEL_33;
          }
          v5 |= 0x10u;
          int v24 = (google::protobuf::internal *)((char *)v8 + 1);
          LODWORD(v25) = *(unsigned __int8 *)v8;
          if ((*(char *)v8 & 0x80000000) == 0) {
            goto LABEL_32;
          }
          int v26 = *(char *)v24;
          uint64_t v25 = (const char *)(v25 + (v26 << 7) - 128);
          if (v26 < 0)
          {
            unsigned int v37 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v25);
            uint64_t v39 = v37;
            *(_DWORD *)(a1 + 44) = v38;
            if (!v37) {
              goto LABEL_55;
            }
          }
          else
          {
            int v24 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_32:
            uint64_t v39 = v24;
            *(_DWORD *)(a1 + 44) = v25;
          }
          goto LABEL_41;
        default:
LABEL_33:
          if (v9) {
            BOOL v27 = (v9 & 7) == 4;
          }
          else {
            BOOL v27 = 1;
          }
          if (v27)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            int v28 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            int v28 = sub_10003562C((unint64_t *)(a1 + 8));
            unint64_t v8 = v39;
          }
          unint64_t v14 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v28, v8);
LABEL_40:
          uint64_t v39 = v14;
          if (!v14)
          {
LABEL_55:
            uint64_t v39 = 0;
            goto LABEL_2;
          }
LABEL_41:
          if (sub_1000355B8(a3, &v39, *(_DWORD *)(a3 + 92))) {
            goto LABEL_2;
          }
          break;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v39;
}

const google::protobuf::UnknownFieldSet *TSP::CFUUIDArchive::_InternalSerialize(TSP::CFUUIDArchive *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    char v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_19:
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
      }
      unsigned int v11 = *((_DWORD *)this + 9);
      unsigned __int8 *v4 = 24;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unsigned int v12 = v11 >> 7;
        if (v11 >> 14)
        {
          v4 += 3;
          do
          {
            *(v4 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
            unsigned int v13 = v12 >> 7;
            ++v4;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
          }
          while (v14);
          *(v4 - sub_1000333D0((uint64_t *)this + 1) = v13;
          if ((v6 & 8) != 0) {
            goto LABEL_30;
          }
        }
        else
        {
          v4[2] = v12;
          v4 += 3;
          if ((v6 & 8) != 0) {
            goto LABEL_30;
          }
        }
      }
      else
      {
        v4[1] = v11;
        v4 += 2;
        if ((v6 & 8) != 0) {
          goto LABEL_30;
        }
      }
LABEL_5:
      if ((v6 & 0x10) == 0) {
        goto LABEL_50;
      }
      goto LABEL_41;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned int v7 = *((_DWORD *)this + 8);
  unsigned __int8 *v4 = 16;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unsigned int v8 = v7 >> 7;
    if (v7 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        ++v4;
        unsigned int v10 = v8 >> 14;
        v8 >>= 7;
      }
      while (v10);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v9;
      if ((v6 & 4) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      v4[2] = v8;
      v4 += 3;
      if ((v6 & 4) != 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 4) != 0) {
      goto LABEL_19;
    }
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    goto LABEL_5;
  }
LABEL_30:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned int v15 = *((_DWORD *)this + 10);
  unsigned __int8 *v4 = 32;
  if (v15 > 0x7F)
  {
    v4[1] = v15 | 0x80;
    unsigned int v16 = v15 >> 7;
    if (v15 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v16 | 0x80;
        unsigned int v17 = v16 >> 7;
        ++v4;
        unsigned int v18 = v16 >> 14;
        v16 >>= 7;
      }
      while (v18);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v17;
      if ((v6 & 0x10) == 0) {
        goto LABEL_50;
      }
    }
    else
    {
      v4[2] = v16;
      v4 += 3;
      if ((v6 & 0x10) == 0) {
        goto LABEL_50;
      }
    }
  }
  else
  {
    v4[1] = v15;
    v4 += 2;
    if ((v6 & 0x10) == 0) {
      goto LABEL_50;
    }
  }
LABEL_41:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned int v19 = *((_DWORD *)this + 11);
  unsigned __int8 *v4 = 40;
  if (v19 > 0x7F)
  {
    v4[1] = v19 | 0x80;
    unsigned int v20 = v19 >> 7;
    if (v19 >> 14)
    {
      v4 += 3;
      do
      {
        *(v4 - sub_1000333D0((uint64_t *)this + 1) = v20 | 0x80;
        unsigned int v21 = v20 >> 7;
        ++v4;
        unsigned int v22 = v20 >> 14;
        v20 >>= 7;
      }
      while (v22);
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v21;
    }
    else
    {
      v4[2] = v20;
      v4 += 3;
    }
  }
  else
  {
    v4[1] = v19;
    v4 += 2;
  }
LABEL_50:
  uint64_t v23 = *((void *)this + 1);
  if ((v23 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v23 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *TSP::CFUUIDArchive::ByteSizeLong(TSP::CFUUIDArchive *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 0x1F) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_14;
  }
  if ((v1 & 1) == 0)
  {
    unint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    unint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                   + ((9 * (__clz(*((_DWORD *)this + 8) | 1) ^ 0x1F) + 73) >> 6)
                                                   + 1);
    goto LABEL_10;
  }
  unint64_t v3 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  unint64_t v2 = (const google::protobuf::UnknownFieldSet *)(v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1);
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v1 & 4) != 0)
  {
    unint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                   + ((9 * (__clz(*((_DWORD *)this + 9) | 1) ^ 0x1F) + 73) >> 6)
                                                   + 1);
    if ((v1 & 8) == 0)
    {
LABEL_12:
      if ((v1 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                 + ((9 * (__clz(*((_DWORD *)this + 10) | 1) ^ 0x1F) + 73) >> 6)
                                                 + 1);
  if ((v1 & 0x10) != 0) {
LABEL_13:
  }
    unint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                   + ((9 * (__clz(*((_DWORD *)this + 11) | 1) ^ 0x1F) + 73) >> 6)
                                                   + 1);
LABEL_14:
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::CFUUIDArchive *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + 5) = v2;
  return (char *)v2;
}

void TSP::CFUUIDArchive::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::CFUUIDArchive::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::CFUUIDArchive::MergeFrom(std::string *this, const TSP::CFUUIDArchive *a2)
{
  unint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 0x1F) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v8 = (google::protobuf::Arena *)(size & 0xFFFFFFFFFFFFFFFELL);
      if (size) {
        unsigned int v8 = *(google::protobuf::Arena **)v8;
      }
      this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1], v6, v8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *((_DWORD *)a2 + 8);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *((_DWORD *)a2 + 9);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v5;
        return this;
      }
LABEL_9:
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *((_DWORD *)a2 + 11);
      goto LABEL_10;
    }
LABEL_17:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *((_DWORD *)a2 + 10);
    if ((v5 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  return this;
}

void TSP::CFUUIDArchive::CopyFrom(TSP::CFUUIDArchive *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::CFUUIDArchive::Clear(this);
    TSP::CFUUIDArchive::MergeFrom((std::string *)this, a2);
  }
}

uint64_t TSP::CFUUIDArchive::IsInitialized(TSP::CFUUIDArchive *this)
{
  return 1;
}

uint64_t TSP::CFUUIDArchive::GetMetadata(TSP::CFUUIDArchive *this)
{
  return off_1001EA298[34];
}

uint64_t TSP::UUIDSetArchive::UUIDSetArchive(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CA468;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_100071D00((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_UUIDSetArchive_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_UUIDSetArchive_TSPMessages_2eproto);
  }
  return a1;
}

void sub_10005FED8(_Unwind_Exception *a1)
{
  sub_100050800(v1);
  _Unwind_Resume(a1);
}

void TSP::UUIDSetArchive::~UUIDSetArchive(TSP::UUIDSetArchive *this)
{
}

{
  uint64_t vars8;

  TSP::UUIDSetArchive::~UUIDSetArchive(this);
  operator delete();
}

uint64_t TSP::UUIDSetArchive::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::UUIDSetArchive::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (TSP::UUID **)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::UUID::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  int v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *TSP::UUIDSetArchive::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v22 = a2;
  if ((sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v22 + 1);
      unsigned int v7 = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, (const char *)(v8 - 128));
      unsigned int v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        unsigned int v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          unsigned int v12 = (google::protobuf::internal *)((char *)v11 + 1);
          unsigned int v22 = (google::protobuf::internal *)((char *)v11 + 1);
          unsigned int v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              unsigned int v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            *unsigned int v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            unsigned int v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          unsigned int v11 = sub_10003F83C(a3, v16, v12);
          unsigned int v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        unsigned int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unsigned int v10 = sub_10003562C((unint64_t *)(a1 + 8));
        char v6 = v22;
      }
      unsigned int v22 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92))) {
        return v22;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    unsigned int v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

const google::protobuf::UnknownFieldSet *TSP::UUIDSetArchive::_InternalSerialize(TSP::UUIDSetArchive *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      unsigned int v8 = *(TSP::UUID **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          unsigned int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          unsigned int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        unsigned int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v8, v10, a3, a4);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::UUIDSetArchive::ByteSizeLong(TSP::UUIDSetArchive *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (TSP::UUID **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::UUID::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::UUIDSetArchive *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void TSP::UUIDSetArchive::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::UUIDSetArchive::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::UUIDSetArchive::MergeFrom(void **this, const TSP::UUIDSetArchive *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (TSP::UUID **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    this = sub_100071E40(v3 + 2, (void ***)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v8;
    unsigned int v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  return this;
}

void TSP::UUIDSetArchive::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::UUIDSetArchive::Clear(this);
    TSP::UUIDSetArchive::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::UUIDSetArchive::IsInitialized(TSP::UUIDSetArchive *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 4) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

uint64_t TSP::UUIDSetArchive::GetMetadata(TSP::UUIDSetArchive *this)
{
  return off_1001EA298[36];
}

uint64_t TSP::UUIDMapArchive::UUIDMapArchive(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  *(void *)a1 = off_1001CA518;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_100050800((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  if (atomic_load_explicit(scc_info_UUIDMapArchive_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_UUIDMapArchive_TSPMessages_2eproto);
  }
  return a1;
}

void sub_100060638(_Unwind_Exception *a1)
{
  sub_100050800(v2);
  sub_100050800(v1);
  _Unwind_Resume(a1);
}

void TSP::UUIDMapArchive::~UUIDMapArchive(TSP::UUIDMapArchive *this)
{
}

{
  uint64_t vars8;

  TSP::UUIDMapArchive::~UUIDMapArchive(this);
  operator delete();
}

uint64_t TSP::UUIDMapArchive::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

google::protobuf::Arena **TSP::UUIDMapArchive::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::UUID **)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::UUID::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    int v6 = (TSP::UUID **)(*(void *)(v1 + 56) + 8);
    do
    {
      unsigned int v7 = *v6++;
      this = TSP::UUID::Clear(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  signed int v8 = (unint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_100035820(v8);
  }
  return this;
}

google::protobuf::internal *TSP::UUIDMapArchive::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v31 = a2;
  if ((sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v7 = (google::protobuf::internal *)((char *)v31 + 1);
      unsigned int v8 = *(unsigned __int8 *)v31;
      if ((*(char *)v31 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v31, (const char *)(v9 - 128));
      uint64_t v31 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unsigned int v7 = TagFallback;
      unsigned int v8 = v30;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 18) {
          goto LABEL_13;
        }
        unsigned int v13 = (google::protobuf::internal *)((char *)v7 - 1);
        while (2)
        {
          uint64_t v14 = (google::protobuf::internal *)((char *)v13 + 1);
          uint64_t v31 = (google::protobuf::internal *)((char *)v13 + 1);
          int v15 = *(int **)(a1 + 56);
          if (v15)
          {
            uint64_t v16 = *(int *)(a1 + 48);
            int v17 = *v15;
            if ((int)v16 < *v15)
            {
              *(_DWORD *)(a1 + 48) = v16 + 1;
              uint64_t v18 = *(void *)&v15[2 * v16 + 2];
              goto LABEL_30;
            }
            if (v17 == *(_DWORD *)(a1 + 52))
            {
LABEL_28:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 40), v17 + 1);
              int v15 = *(int **)(a1 + 56);
              int v17 = *v15;
            }
            *int v15 = v17 + 1;
            uint64_t v18 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(*(void *)(a1 + 40));
            uint64_t v19 = *(void *)(a1 + 56);
            uint64_t v20 = *(int *)(a1 + 48);
            *(_DWORD *)(a1 + 48) = v20 + 1;
            *(void *)(v19 + 8 * v20 + 8) = v18;
            uint64_t v14 = v31;
LABEL_30:
            unsigned int v13 = sub_10003F83C(a3, v18, v14);
            uint64_t v31 = v13;
            if (!v13) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v13 || *(unsigned char *)v13 != 18) {
              goto LABEL_45;
            }
            continue;
          }
          break;
        }
        int v17 = *(_DWORD *)(a1 + 52);
        goto LABEL_28;
      }
      if (v8 >> 3 == 1 && v8 == 10)
      {
        unsigned int v21 = (google::protobuf::internal *)((char *)v7 - 1);
        while (1)
        {
          unsigned int v22 = (google::protobuf::internal *)((char *)v21 + 1);
          uint64_t v31 = (google::protobuf::internal *)((char *)v21 + 1);
          uint64_t v23 = *(int **)(a1 + 32);
          if (!v23) {
            break;
          }
          uint64_t v24 = *(int *)(a1 + 24);
          int v25 = *v23;
          if ((int)v24 >= *v23)
          {
            if (v25 == *(_DWORD *)(a1 + 28))
            {
LABEL_40:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v25 + 1);
              uint64_t v23 = *(int **)(a1 + 32);
              int v25 = *v23;
            }
            *uint64_t v23 = v25 + 1;
            uint64_t v26 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(*(void *)(a1 + 16));
            uint64_t v27 = *(void *)(a1 + 32);
            uint64_t v28 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v28 + 1;
            *(void *)(v27 + 8 * v28 + 8) = v26;
            unsigned int v22 = v31;
            goto LABEL_42;
          }
          *(_DWORD *)(a1 + 24) = v24 + 1;
          uint64_t v26 = *(void *)&v23[2 * v24 + 2];
LABEL_42:
          unsigned int v21 = sub_10003F83C(a3, v26, v22);
          uint64_t v31 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *(unsigned char *)v21 != 10) {
            goto LABEL_45;
          }
        }
        int v25 = *(_DWORD *)(a1 + 28);
        goto LABEL_40;
      }
LABEL_13:
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
        return v31;
      }
      if (*v6)
      {
        unsigned int v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unsigned int v12 = sub_10003562C((unint64_t *)(a1 + 8));
        unsigned int v7 = v31;
      }
      uint64_t v31 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
      if (!v31) {
        return 0;
      }
LABEL_45:
      if (sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92))) {
        return v31;
      }
    }
    unsigned int v7 = (google::protobuf::internal *)((char *)v31 + 2);
LABEL_7:
    uint64_t v31 = v7;
    goto LABEL_8;
  }
  return v31;
}

const google::protobuf::UnknownFieldSet *TSP::UUIDMapArchive::_InternalSerialize(TSP::UUIDMapArchive *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      unsigned int v8 = *(TSP::UUID **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          unsigned int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          unsigned int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        unsigned int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v8, v10, a3, a4);
    }
  }
  int v14 = *((_DWORD *)this + 12);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v16 = *(TSP::UUID **)(*((void *)this + 7) + 8 * j + 8);
      *a2 = 18;
      unsigned int v17 = *((_DWORD *)v16 + 5);
      if (v17 > 0x7F)
      {
        a2[1] = v17 | 0x80;
        unsigned int v19 = v17 >> 7;
        if (v17 >> 14)
        {
          uint64_t v18 = a2 + 3;
          do
          {
            *(v18 - sub_1000333D0((uint64_t *)this + 1) = v19 | 0x80;
            unsigned int v20 = v19 >> 7;
            ++v18;
            unsigned int v21 = v19 >> 14;
            v19 >>= 7;
          }
          while (v21);
          *(v18 - sub_1000333D0((uint64_t *)this + 1) = v20;
        }
        else
        {
          a2[2] = v19;
          uint64_t v18 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v17;
        uint64_t v18 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v16, v18, a3, a4);
    }
  }
  uint64_t v22 = *((void *)this + 1);
  if ((v22 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v22 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::UUIDMapArchive::ByteSizeLong(TSP::UUIDMapArchive *this)
{
  uint64_t v2 = *((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (TSP::UUID **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::UUID::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 12);
  unsigned int v9 = (const google::protobuf::UnknownFieldSet *)(v2 + v8);
  uint64_t v10 = *((void *)this + 7);
  if (v10) {
    unsigned int v11 = (TSP::UUID **)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      int v14 = TSP::UUID::ByteSizeLong(v13);
      unsigned int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v9
                                                     + (void)v14
                                                     + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6));
      v12 -= 8;
    }
    while (v12);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::UUIDMapArchive *)((char *)this + 8), v9, (_DWORD *)this + 16);
  }
  else
  {
    *((_DWORD *)this + 16) = v9;
    return (char *)v9;
  }
}

void TSP::UUIDMapArchive::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::UUIDMapArchive::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::UUIDMapArchive::MergeFrom(void **this, const TSP::UUIDMapArchive *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (TSP::UUID **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), *((_DWORD *)a2 + 6));
    this = sub_100071E40(v3 + 2, (void ***)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v8;
    unsigned int v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    unsigned int v11 = (TSP::UUID **)(*((void *)a2 + 7) + 8);
    uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 5), v10);
    this = sub_100071E40(v3 + 5, (void ***)v12, v11, v10, *(_DWORD *)v3[7] - *((_DWORD *)v3 + 12));
    signed int v13 = *((_DWORD *)v3 + 12) + v10;
    *((_DWORD *)v3 + 1sub_100050800((void *)this + 2) = v13;
    int v14 = (signed int *)v3[7];
    if (*v14 < v13) {
      *int v14 = v13;
    }
  }
  return this;
}

void TSP::UUIDMapArchive::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::UUIDMapArchive::Clear(this);
    TSP::UUIDMapArchive::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::UUIDMapArchive::IsInitialized(TSP::UUIDMapArchive *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*((void *)this + 4) + 8 * v1--);
    if ((~*(_DWORD *)(v2 + 16) & 3) != 0) {
      return 0;
    }
  }
  uint64_t v4 = *((unsigned int *)this + 12);
  uint64_t v5 = *((void *)this + 7);
  do
  {
    BOOL result = (int)v4 < 1;
    if ((int)v4 < 1) {
      break;
    }
    uint64_t v6 = *(void *)(v5 + 8 * v4--);
  }
  while ((~*(_DWORD *)(v6 + 16) & 3) == 0);
  return result;
}

uint64_t TSP::UUIDMapArchive::GetMetadata(TSP::UUIDMapArchive *this)
{
  return off_1001EA298[38];
}

uint64_t TSP::UUIDMultiMapArchive::UUIDMultiMapArchive(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  *(void *)a1 = off_1001CA5C8;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_100050800((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  if (atomic_load_explicit(scc_info_UUIDMultiMapArchive_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_UUIDMultiMapArchive_TSPMessages_2eproto);
  }
  return a1;
}

void sub_100061054(_Unwind_Exception *a1)
{
  sub_100050800(v2);
  sub_100050800(v1);
  _Unwind_Resume(a1);
}

void TSP::UUIDMultiMapArchive::~UUIDMultiMapArchive(TSP::UUIDMultiMapArchive *this)
{
}

{
  uint64_t vars8;

  TSP::UUIDMultiMapArchive::~UUIDMultiMapArchive(this);
  operator delete();
}

uint64_t TSP::UUIDMultiMapArchive::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

google::protobuf::Arena **TSP::UUIDMultiMapArchive::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::UUID **)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::UUID::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (TSP::UUID **)(*(void *)(v1 + 56) + 8);
    do
    {
      unsigned int v7 = *v6++;
      this = TSP::UUID::Clear(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  signed int v8 = (unint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_100035820(v8);
  }
  return this;
}

google::protobuf::internal *TSP::UUIDMultiMapArchive::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v31 = a2;
  if ((sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v7 = (google::protobuf::internal *)((char *)v31 + 1);
      unsigned int v8 = *(unsigned __int8 *)v31;
      if ((*(char *)v31 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v31, (const char *)(v9 - 128));
      uint64_t v31 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unsigned int v7 = TagFallback;
      unsigned int v8 = v30;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 18) {
          goto LABEL_13;
        }
        signed int v13 = (google::protobuf::internal *)((char *)v7 - 1);
        while (2)
        {
          int v14 = (google::protobuf::internal *)((char *)v13 + 1);
          uint64_t v31 = (google::protobuf::internal *)((char *)v13 + 1);
          int v15 = *(int **)(a1 + 56);
          if (v15)
          {
            uint64_t v16 = *(int *)(a1 + 48);
            int v17 = *v15;
            if ((int)v16 < *v15)
            {
              *(_DWORD *)(a1 + 48) = v16 + 1;
              uint64_t v18 = *(void *)&v15[2 * v16 + 2];
              goto LABEL_30;
            }
            if (v17 == *(_DWORD *)(a1 + 52))
            {
LABEL_28:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 40), v17 + 1);
              int v15 = *(int **)(a1 + 56);
              int v17 = *v15;
            }
            *int v15 = v17 + 1;
            uint64_t v18 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(*(void *)(a1 + 40));
            uint64_t v19 = *(void *)(a1 + 56);
            uint64_t v20 = *(int *)(a1 + 48);
            *(_DWORD *)(a1 + 48) = v20 + 1;
            *(void *)(v19 + 8 * v20 + 8) = v18;
            int v14 = v31;
LABEL_30:
            signed int v13 = sub_10003F83C(a3, v18, v14);
            uint64_t v31 = v13;
            if (!v13) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v13 || *(unsigned char *)v13 != 18) {
              goto LABEL_45;
            }
            continue;
          }
          break;
        }
        int v17 = *(_DWORD *)(a1 + 52);
        goto LABEL_28;
      }
      if (v8 >> 3 == 1 && v8 == 10)
      {
        unsigned int v21 = (google::protobuf::internal *)((char *)v7 - 1);
        while (1)
        {
          uint64_t v22 = (google::protobuf::internal *)((char *)v21 + 1);
          uint64_t v31 = (google::protobuf::internal *)((char *)v21 + 1);
          uint64_t v23 = *(int **)(a1 + 32);
          if (!v23) {
            break;
          }
          uint64_t v24 = *(int *)(a1 + 24);
          int v25 = *v23;
          if ((int)v24 >= *v23)
          {
            if (v25 == *(_DWORD *)(a1 + 28))
            {
LABEL_40:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v25 + 1);
              uint64_t v23 = *(int **)(a1 + 32);
              int v25 = *v23;
            }
            *uint64_t v23 = v25 + 1;
            uint64_t v26 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(*(void *)(a1 + 16));
            uint64_t v27 = *(void *)(a1 + 32);
            uint64_t v28 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v28 + 1;
            *(void *)(v27 + 8 * v28 + 8) = v26;
            uint64_t v22 = v31;
            goto LABEL_42;
          }
          *(_DWORD *)(a1 + 24) = v24 + 1;
          uint64_t v26 = *(void *)&v23[2 * v24 + 2];
LABEL_42:
          unsigned int v21 = sub_10003F83C(a3, v26, v22);
          uint64_t v31 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *(unsigned char *)v21 != 10) {
            goto LABEL_45;
          }
        }
        int v25 = *(_DWORD *)(a1 + 28);
        goto LABEL_40;
      }
LABEL_13:
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
        return v31;
      }
      if (*v6)
      {
        uint64_t v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        uint64_t v12 = sub_10003562C((unint64_t *)(a1 + 8));
        unsigned int v7 = v31;
      }
      uint64_t v31 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
      if (!v31) {
        return 0;
      }
LABEL_45:
      if (sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92))) {
        return v31;
      }
    }
    unsigned int v7 = (google::protobuf::internal *)((char *)v31 + 2);
LABEL_7:
    uint64_t v31 = v7;
    goto LABEL_8;
  }
  return v31;
}

const google::protobuf::UnknownFieldSet *TSP::UUIDMultiMapArchive::_InternalSerialize(TSP::UUIDMultiMapArchive *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      unsigned int v8 = *(TSP::UUID **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          unsigned int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          unsigned int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        unsigned int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v8, v10, a3, a4);
    }
  }
  int v14 = *((_DWORD *)this + 12);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v16 = *(TSP::UUID **)(*((void *)this + 7) + 8 * j + 8);
      *a2 = 18;
      unsigned int v17 = *((_DWORD *)v16 + 5);
      if (v17 > 0x7F)
      {
        a2[1] = v17 | 0x80;
        unsigned int v19 = v17 >> 7;
        if (v17 >> 14)
        {
          uint64_t v18 = a2 + 3;
          do
          {
            *(v18 - sub_1000333D0((uint64_t *)this + 1) = v19 | 0x80;
            unsigned int v20 = v19 >> 7;
            ++v18;
            unsigned int v21 = v19 >> 14;
            v19 >>= 7;
          }
          while (v21);
          *(v18 - sub_1000333D0((uint64_t *)this + 1) = v20;
        }
        else
        {
          a2[2] = v19;
          uint64_t v18 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v17;
        uint64_t v18 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v16, v18, a3, a4);
    }
  }
  uint64_t v22 = *((void *)this + 1);
  if ((v22 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v22 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::UUIDMultiMapArchive::ByteSizeLong(TSP::UUIDMultiMapArchive *this)
{
  uint64_t v2 = *((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (TSP::UUID **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::UUID::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 12);
  unsigned int v9 = (const google::protobuf::UnknownFieldSet *)(v2 + v8);
  uint64_t v10 = *((void *)this + 7);
  if (v10) {
    unsigned int v11 = (TSP::UUID **)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      int v14 = TSP::UUID::ByteSizeLong(v13);
      unsigned int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v9
                                                     + (void)v14
                                                     + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6));
      v12 -= 8;
    }
    while (v12);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::UUIDMultiMapArchive *)((char *)this + 8), v9, (_DWORD *)this + 16);
  }
  else
  {
    *((_DWORD *)this + 16) = v9;
    return (char *)v9;
  }
}

void TSP::UUIDMultiMapArchive::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::UUIDMultiMapArchive::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::UUIDMultiMapArchive::MergeFrom(void **this, const TSP::UUIDMultiMapArchive *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (TSP::UUID **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), *((_DWORD *)a2 + 6));
    this = sub_100071E40(v3 + 2, (void ***)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v8;
    unsigned int v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    unsigned int v11 = (TSP::UUID **)(*((void *)a2 + 7) + 8);
    uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 5), v10);
    this = sub_100071E40(v3 + 5, (void ***)v12, v11, v10, *(_DWORD *)v3[7] - *((_DWORD *)v3 + 12));
    signed int v13 = *((_DWORD *)v3 + 12) + v10;
    *((_DWORD *)v3 + 1sub_100050800((void *)this + 2) = v13;
    int v14 = (signed int *)v3[7];
    if (*v14 < v13) {
      *int v14 = v13;
    }
  }
  return this;
}

void TSP::UUIDMultiMapArchive::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::UUIDMultiMapArchive::Clear(this);
    TSP::UUIDMultiMapArchive::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::UUIDMultiMapArchive::IsInitialized(TSP::UUIDMultiMapArchive *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*((void *)this + 4) + 8 * v1--);
    if ((~*(_DWORD *)(v2 + 16) & 3) != 0) {
      return 0;
    }
  }
  uint64_t v4 = *((unsigned int *)this + 12);
  uint64_t v5 = *((void *)this + 7);
  do
  {
    BOOL result = (int)v4 < 1;
    if ((int)v4 < 1) {
      break;
    }
    uint64_t v6 = *(void *)(v5 + 8 * v4--);
  }
  while ((~*(_DWORD *)(v6 + 16) & 3) == 0);
  return result;
}

uint64_t TSP::UUIDMultiMapArchive::GetMetadata(TSP::UUIDMultiMapArchive *this)
{
  return off_1001EA298[40];
}

void TSP::UUIDCoordArchive::~UUIDCoordArchive(TSP::UUIDCoordArchive *this)
{
  if (this != (TSP::UUIDCoordArchive *)&TSP::_UUIDCoordArchive_default_instance_)
  {
    uint64_t v1 = *((void *)this + 3);
    if (v1)
    {
      sub_1000333D0((uint64_t *)(v1 + 8));
      operator delete();
    }
    uint64_t v2 = *((void *)this + 4);
    if (v2)
    {
      sub_1000333D0((uint64_t *)(v2 + 8));
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::UUIDCoordArchive::~UUIDCoordArchive(this);
  operator delete();
}

uint64_t TSP::UUIDCoordArchive::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::UUIDCoordArchive::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      this = TSP::UUID::Clear(this[3]);
    }
    if ((v2 & 2) != 0) {
      this = TSP::UUID::Clear(*(TSP::UUID **)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_100035820((unint64_t *)v3);
  }
  return this;
}

google::protobuf::internal *TSP::UUIDCoordArchive::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v19 = a2;
  if ((sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v7 = (google::protobuf::internal *)((char *)v19 + 1);
      unsigned int v8 = *(unsigned __int8 *)v19;
      if ((*(char *)v19 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v19, (const char *)(v9 - 128));
      unsigned int v19 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unsigned int v7 = TagFallback;
      unsigned int v8 = v18;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v14 = *(void *)(a1 + 32);
          if (!v14)
          {
            int v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
            if (*v6) {
              int v15 = (void *)*v15;
            }
            uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v15);
            *(void *)(a1 + 3sub_100050800((void *)this + 2) = v14;
LABEL_29:
            unsigned int v7 = v19;
          }
LABEL_30:
          signed int v13 = sub_10003F83C(a3, v14, v7);
          goto LABEL_31;
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v14 = *(void *)(a1 + 24);
        if (!v14)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v14 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v16);
          *(void *)(a1 + 24) = v14;
          goto LABEL_29;
        }
        goto LABEL_30;
      }
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
        return v19;
      }
      if (*v6)
      {
        uint64_t v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        uint64_t v12 = sub_10003562C((unint64_t *)(a1 + 8));
        unsigned int v7 = v19;
      }
      signed int v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
LABEL_31:
      unsigned int v19 = v13;
      if (!v13) {
        return 0;
      }
      if (sub_1000355B8(a3, &v19, *(_DWORD *)(a3 + 92))) {
        return v19;
      }
    }
    unsigned int v7 = (google::protobuf::internal *)((char *)v19 + 2);
LABEL_7:
    unsigned int v19 = v7;
    goto LABEL_8;
  }
  return v19;
}

const google::protobuf::UnknownFieldSet *TSP::UUIDCoordArchive::_InternalSerialize(TSP::UUIDCoordArchive *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned int v7 = (TSP::UUID *)*((void *)this + 3);
    *a2 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 5);
    if (v8 > 0x7F)
    {
      a2[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        unsigned int v9 = a2 + 3;
        do
        {
          *(v9 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
          unsigned int v11 = v10 >> 7;
          ++v9;
          unsigned int v12 = v10 >> 14;
          v10 >>= 7;
        }
        while (v12);
        *(v9 - sub_1000333D0((uint64_t *)this + 1) = v11;
      }
      else
      {
        a2[2] = v10;
        unsigned int v9 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v8;
      unsigned int v9 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v7, v9, a3, a4);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    signed int v13 = (TSP::UUID *)*((void *)this + 4);
    *a2 = 18;
    unsigned int v14 = *((_DWORD *)v13 + 5);
    if (v14 > 0x7F)
    {
      a2[1] = v14 | 0x80;
      unsigned int v16 = v14 >> 7;
      if (v14 >> 14)
      {
        int v15 = a2 + 3;
        do
        {
          *(v15 - sub_1000333D0((uint64_t *)this + 1) = v16 | 0x80;
          unsigned int v17 = v16 >> 7;
          ++v15;
          unsigned int v18 = v16 >> 14;
          v16 >>= 7;
        }
        while (v18);
        *(v15 - sub_1000333D0((uint64_t *)this + 1) = v17;
      }
      else
      {
        a2[2] = v16;
        int v15 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v14;
      int v15 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v13, v15, a3, a4);
  }
  uint64_t v19 = *((void *)this + 1);
  if ((v19 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v19 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

uint64_t TSP::UUIDCoordArchive::RequiredFieldsByteSizeFallback(TSP::UUIDCoordArchive *this)
{
  int v2 = *((_DWORD *)this + 4);
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      return v3;
    }
    goto LABEL_5;
  }
  char v4 = TSP::UUID::ByteSizeLong(*((TSP::UUID **)this + 3));
  uint64_t v3 = (uint64_t)&v4[((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1];
  if ((*((_DWORD *)this + 4) & 2) != 0)
  {
LABEL_5:
    uint64_t v5 = TSP::UUID::ByteSizeLong(*((TSP::UUID **)this + 4));
    v3 += (uint64_t)&v5[((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  return v3;
}

char *TSP::UUIDCoordArchive::ByteSizeLong(TSP::UUID **this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0)
  {
    char v4 = (const google::protobuf::UnknownFieldSet *)TSP::UUIDCoordArchive::RequiredFieldsByteSizeFallback((TSP::UUIDCoordArchive *)this);
  }
  else
  {
    int v2 = TSP::UUID::ByteSizeLong(this[3]);
    uint64_t v3 = TSP::UUID::ByteSizeLong(this[4]);
    char v4 = (const google::protobuf::UnknownFieldSet *)&v3[(void)v2
                                                      + 2
                                                      + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6)
                                                      + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), v4, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v4;
    return (char *)v4;
  }
}

void TSP::UUIDCoordArchive::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::UUIDCoordArchive::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::UUIDCoordArchive::MergeFrom(void **this, const TSP::UUIDCoordArchive *a2)
{
  uint64_t v3 = this;
  char v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      *((_DWORD *)v3 + 4) |= 1u;
      unsigned int v7 = (void **)v3[3];
      if (!v7)
      {
        unsigned int v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v8 = (void *)*v8;
        }
        unsigned int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v8);
        v3[3] = v7;
      }
      if (*((void *)a2 + 3)) {
        unsigned int v9 = (const TSP::UUID *)*((void *)a2 + 3);
      }
      else {
        unsigned int v9 = (const TSP::UUID *)&TSP::_UUID_default_instance_;
      }
      this = TSP::UUID::MergeFrom(v7, v9);
    }
    if ((v6 & 2) != 0)
    {
      *((_DWORD *)v3 + 4) |= 2u;
      unsigned int v10 = (void **)v3[4];
      if (!v10)
      {
        unsigned int v11 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v11 = (void *)*v11;
        }
        unsigned int v10 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v11);
        v3[4] = v10;
      }
      if (*((void *)a2 + 4)) {
        unsigned int v12 = (const TSP::UUID *)*((void *)a2 + 4);
      }
      else {
        unsigned int v12 = (const TSP::UUID *)&TSP::_UUID_default_instance_;
      }
      return TSP::UUID::MergeFrom(v10, v12);
    }
  }
  return this;
}

void TSP::UUIDCoordArchive::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::UUIDCoordArchive::Clear(this);
    TSP::UUIDCoordArchive::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::UUIDCoordArchive::IsInitialized(TSP::UUIDCoordArchive *this)
{
  int v1 = *((_DWORD *)this + 4);
  return (~v1 & 3) == 0
      && ((v1 & 1) == 0 || (~*(_DWORD *)(*((void *)this + 3) + 16) & 3) == 0)
      && ((v1 & 2) == 0 || (~*(_DWORD *)(*((void *)this + 4) + 16) & 3) == 0);
}

uint64_t TSP::UUIDCoordArchive::GetMetadata(TSP::UUIDCoordArchive *this)
{
  return off_1001EA298[42];
}

uint64_t TSP::UUIDRectArchive::UUIDRectArchive(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  *(void *)a1 = off_1001CA728;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_100050800((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  if (atomic_load_explicit(scc_info_UUIDRectArchive_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_UUIDRectArchive_TSPMessages_2eproto);
  }
  return a1;
}

void sub_1000622F4(_Unwind_Exception *a1)
{
  sub_100050800(v2);
  sub_100050800(v1);
  _Unwind_Resume(a1);
}

void TSP::UUIDRectArchive::~UUIDRectArchive(TSP::UUIDRectArchive *this)
{
}

{
  uint64_t vars8;

  TSP::UUIDRectArchive::~UUIDRectArchive(this);
  operator delete();
}

uint64_t TSP::UUIDRectArchive::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

google::protobuf::Arena **TSP::UUIDRectArchive::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::UUID **)((char *)this[4] + 8);
    do
    {
      char v4 = *v3++;
      this = TSP::UUID::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    int v6 = (TSP::UUID **)(*(void *)(v1 + 56) + 8);
    do
    {
      unsigned int v7 = *v6++;
      this = TSP::UUID::Clear(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  unsigned int v8 = (unint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_100035820(v8);
  }
  return this;
}

google::protobuf::internal *TSP::UUIDRectArchive::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v31 = a2;
  if ((sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v7 = (google::protobuf::internal *)((char *)v31 + 1);
      unsigned int v8 = *(unsigned __int8 *)v31;
      if ((*(char *)v31 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v31, (const char *)(v9 - 128));
      uint64_t v31 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unsigned int v7 = TagFallback;
      unsigned int v8 = v30;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 18) {
          goto LABEL_13;
        }
        signed int v13 = (google::protobuf::internal *)((char *)v7 - 1);
        while (2)
        {
          unsigned int v14 = (google::protobuf::internal *)((char *)v13 + 1);
          uint64_t v31 = (google::protobuf::internal *)((char *)v13 + 1);
          int v15 = *(int **)(a1 + 56);
          if (v15)
          {
            uint64_t v16 = *(int *)(a1 + 48);
            int v17 = *v15;
            if ((int)v16 < *v15)
            {
              *(_DWORD *)(a1 + 48) = v16 + 1;
              uint64_t v18 = *(void *)&v15[2 * v16 + 2];
              goto LABEL_30;
            }
            if (v17 == *(_DWORD *)(a1 + 52))
            {
LABEL_28:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 40), v17 + 1);
              int v15 = *(int **)(a1 + 56);
              int v17 = *v15;
            }
            *int v15 = v17 + 1;
            uint64_t v18 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(*(void *)(a1 + 40));
            uint64_t v19 = *(void *)(a1 + 56);
            uint64_t v20 = *(int *)(a1 + 48);
            *(_DWORD *)(a1 + 48) = v20 + 1;
            *(void *)(v19 + 8 * v20 + 8) = v18;
            unsigned int v14 = v31;
LABEL_30:
            signed int v13 = sub_10003F83C(a3, v18, v14);
            uint64_t v31 = v13;
            if (!v13) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v13 || *(unsigned char *)v13 != 18) {
              goto LABEL_45;
            }
            continue;
          }
          break;
        }
        int v17 = *(_DWORD *)(a1 + 52);
        goto LABEL_28;
      }
      if (v8 >> 3 == 1 && v8 == 10)
      {
        unsigned int v21 = (google::protobuf::internal *)((char *)v7 - 1);
        while (1)
        {
          uint64_t v22 = (google::protobuf::internal *)((char *)v21 + 1);
          uint64_t v31 = (google::protobuf::internal *)((char *)v21 + 1);
          uint64_t v23 = *(int **)(a1 + 32);
          if (!v23) {
            break;
          }
          uint64_t v24 = *(int *)(a1 + 24);
          int v25 = *v23;
          if ((int)v24 >= *v23)
          {
            if (v25 == *(_DWORD *)(a1 + 28))
            {
LABEL_40:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v25 + 1);
              uint64_t v23 = *(int **)(a1 + 32);
              int v25 = *v23;
            }
            *uint64_t v23 = v25 + 1;
            uint64_t v26 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(*(void *)(a1 + 16));
            uint64_t v27 = *(void *)(a1 + 32);
            uint64_t v28 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v28 + 1;
            *(void *)(v27 + 8 * v28 + 8) = v26;
            uint64_t v22 = v31;
            goto LABEL_42;
          }
          *(_DWORD *)(a1 + 24) = v24 + 1;
          uint64_t v26 = *(void *)&v23[2 * v24 + 2];
LABEL_42:
          unsigned int v21 = sub_10003F83C(a3, v26, v22);
          uint64_t v31 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *(unsigned char *)v21 != 10) {
            goto LABEL_45;
          }
        }
        int v25 = *(_DWORD *)(a1 + 28);
        goto LABEL_40;
      }
LABEL_13:
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
        return v31;
      }
      if (*v6)
      {
        unsigned int v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unsigned int v12 = sub_10003562C((unint64_t *)(a1 + 8));
        unsigned int v7 = v31;
      }
      uint64_t v31 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
      if (!v31) {
        return 0;
      }
LABEL_45:
      if (sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92))) {
        return v31;
      }
    }
    unsigned int v7 = (google::protobuf::internal *)((char *)v31 + 2);
LABEL_7:
    uint64_t v31 = v7;
    goto LABEL_8;
  }
  return v31;
}

const google::protobuf::UnknownFieldSet *TSP::UUIDRectArchive::_InternalSerialize(TSP::UUIDRectArchive *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      unsigned int v8 = *(TSP::UUID **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          unsigned int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          unsigned int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        unsigned int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v8, v10, a3, a4);
    }
  }
  int v14 = *((_DWORD *)this + 12);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v16 = *(TSP::UUID **)(*((void *)this + 7) + 8 * j + 8);
      *a2 = 18;
      unsigned int v17 = *((_DWORD *)v16 + 5);
      if (v17 > 0x7F)
      {
        a2[1] = v17 | 0x80;
        unsigned int v19 = v17 >> 7;
        if (v17 >> 14)
        {
          uint64_t v18 = a2 + 3;
          do
          {
            *(v18 - sub_1000333D0((uint64_t *)this + 1) = v19 | 0x80;
            unsigned int v20 = v19 >> 7;
            ++v18;
            unsigned int v21 = v19 >> 14;
            v19 >>= 7;
          }
          while (v21);
          *(v18 - sub_1000333D0((uint64_t *)this + 1) = v20;
        }
        else
        {
          a2[2] = v19;
          uint64_t v18 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v17;
        uint64_t v18 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v16, v18, a3, a4);
    }
  }
  uint64_t v22 = *((void *)this + 1);
  if ((v22 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v22 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::UUIDRectArchive::ByteSizeLong(TSP::UUIDRectArchive *this)
{
  uint64_t v2 = *((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    char v4 = (TSP::UUID **)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::UUID::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 12);
  unsigned int v9 = (const google::protobuf::UnknownFieldSet *)(v2 + v8);
  uint64_t v10 = *((void *)this + 7);
  if (v10) {
    unsigned int v11 = (TSP::UUID **)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      int v14 = TSP::UUID::ByteSizeLong(v13);
      unsigned int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v9
                                                     + (void)v14
                                                     + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6));
      v12 -= 8;
    }
    while (v12);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::UUIDRectArchive *)((char *)this + 8), v9, (_DWORD *)this + 16);
  }
  else
  {
    *((_DWORD *)this + 16) = v9;
    return (char *)v9;
  }
}

void TSP::UUIDRectArchive::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::UUIDRectArchive::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::UUIDRectArchive::MergeFrom(void **this, const TSP::UUIDRectArchive *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (TSP::UUID **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), *((_DWORD *)a2 + 6));
    this = sub_100071E40(v3 + 2, (void ***)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v8;
    unsigned int v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 12);
  if (v10)
  {
    unsigned int v11 = (TSP::UUID **)(*((void *)a2 + 7) + 8);
    uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 5), v10);
    this = sub_100071E40(v3 + 5, (void ***)v12, v11, v10, *(_DWORD *)v3[7] - *((_DWORD *)v3 + 12));
    signed int v13 = *((_DWORD *)v3 + 12) + v10;
    *((_DWORD *)v3 + 1sub_100050800((void *)this + 2) = v13;
    int v14 = (signed int *)v3[7];
    if (*v14 < v13) {
      *int v14 = v13;
    }
  }
  return this;
}

void TSP::UUIDRectArchive::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::UUIDRectArchive::Clear(this);
    TSP::UUIDRectArchive::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::UUIDRectArchive::IsInitialized(TSP::UUIDRectArchive *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*((void *)this + 4) + 8 * v1--);
    if ((~*(_DWORD *)(v2 + 16) & 3) != 0) {
      return 0;
    }
  }
  uint64_t v4 = *((unsigned int *)this + 12);
  uint64_t v5 = *((void *)this + 7);
  do
  {
    BOOL result = (int)v4 < 1;
    if ((int)v4 < 1) {
      break;
    }
    uint64_t v6 = *(void *)(v5 + 8 * v4--);
  }
  while ((~*(_DWORD *)(v6 + 16) & 3) == 0);
  return result;
}

uint64_t TSP::UUIDRectArchive::GetMetadata(TSP::UUIDRectArchive *this)
{
  return off_1001EA298[44];
}

void TSP::SparseUUIDArray_Entry::~SparseUUIDArray_Entry(TSP::SparseUUIDArray_Entry *this)
{
  if (this != (TSP::SparseUUIDArray_Entry *)&TSP::_SparseUUIDArray_Entry_default_instance_)
  {
    uint64_t v1 = *((void *)this + 3);
    if (v1)
    {
      sub_1000333D0((uint64_t *)(v1 + 8));
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::SparseUUIDArray_Entry::~SparseUUIDArray_Entry(this);
  operator delete();
}

uint64_t TSP::SparseUUIDArray_Entry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::SparseUUIDArray_Entry::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::UUID::Clear(this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::SparseUUIDArray_Entry::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v24 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v24 + 1);
      unsigned int v9 = *(unsigned __int8 *)v24;
      if ((*(char *)v24 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v24, (const char *)(v10 - 128));
      uint64_t v24 = TagFallback;
      if (!TagFallback) {
        goto LABEL_40;
      }
      signed int v8 = TagFallback;
      unsigned int v9 = v21;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v15 = *(void *)(a1 + 24);
          if (!v15)
          {
            uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              uint64_t v16 = (void *)*v16;
            }
            uint64_t v15 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v16);
            *(void *)(a1 + 24) = v15;
            signed int v8 = v24;
          }
          int v14 = sub_10003F83C(a3, v15, v8);
        }
        else
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            signed int v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            signed int v13 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v24;
          }
          int v14 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
        }
        uint64_t v24 = v14;
        if (!v14) {
          goto LABEL_40;
        }
        goto LABEL_32;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      v5 |= 2u;
      unsigned int v17 = (google::protobuf::internal *)((char *)v8 + 1);
      LODWORD(v18) = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_31;
      }
      int v19 = *(char *)v17;
      uint64_t v18 = (const char *)(v18 + (v19 << 7) - 128);
      if ((v19 & 0x80000000) == 0)
      {
        unsigned int v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_31:
        uint64_t v24 = v17;
        *(_DWORD *)(a1 + 3sub_100050800((void *)this + 2) = v18;
        goto LABEL_32;
      }
      uint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v18);
      uint64_t v24 = v22;
      *(_DWORD *)(a1 + 3sub_100050800((void *)this + 2) = v23;
      if (!v22)
      {
LABEL_40:
        uint64_t v24 = 0;
        goto LABEL_2;
      }
LABEL_32:
      if (sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    signed int v8 = (google::protobuf::internal *)((char *)v24 + 2);
LABEL_7:
    uint64_t v24 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

const google::protobuf::UnknownFieldSet *TSP::SparseUUIDArray_Entry::_InternalSerialize(TSP::SparseUUIDArray_Entry *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned int v7 = *((_DWORD *)this + 8);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unsigned int v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unsigned int v13 = v8 >> 7;
        ++a2;
        unsigned int v14 = v8 >> 14;
        v8 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
      if ((v6 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned int v9 = (TSP::UUID *)*((void *)this + 3);
  *a2 = 18;
  unsigned int v10 = *((_DWORD *)v9 + 5);
  if (v10 > 0x7F)
  {
    a2[1] = v10 | 0x80;
    unsigned int v12 = v10 >> 7;
    if (v10 >> 14)
    {
      unsigned int v11 = a2 + 3;
      do
      {
        *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unsigned int v15 = v12 >> 7;
        ++v11;
        unsigned int v16 = v12 >> 14;
        v12 >>= 7;
      }
      while (v16);
      *(v11 - sub_1000333D0((uint64_t *)this + 1) = v15;
    }
    else
    {
      a2[2] = v12;
      unsigned int v11 = a2 + 3;
    }
  }
  else
  {
    a2[1] = v10;
    unsigned int v11 = a2 + 2;
  }
  a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v9, v11, a3, a4);
LABEL_24:
  uint64_t v17 = *((void *)this + 1);
  if ((v17 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::SparseUUIDArray_Entry::RequiredFieldsByteSizeFallback(TSP::SparseUUIDArray_Entry *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2)
  {
    uint64_t v4 = TSP::UUID::ByteSizeLong(*((TSP::UUID **)this + 3));
    BOOL result = &v4[((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1];
    if ((*((_DWORD *)this + 4) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  BOOL result = 0;
  if ((v2 & 2) != 0) {
LABEL_5:
  }
    result += ((9 * (__clz(*((_DWORD *)this + 8) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return result;
}

char *TSP::SparseUUIDArray_Entry::ByteSizeLong(TSP::UUID **this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0)
  {
    char v3 = TSP::SparseUUIDArray_Entry::RequiredFieldsByteSizeFallback((TSP::SparseUUIDArray_Entry *)this);
  }
  else
  {
    int v2 = TSP::UUID::ByteSizeLong(this[3]);
    char v3 = &v2[((9 * (__clz(*((_DWORD *)this + 8) | 1) ^ 0x1F) + 73) >> 6)
           + 2
           + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), (const google::protobuf::UnknownFieldSet *)v3, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v3;
    return v3;
  }
}

void TSP::SparseUUIDArray_Entry::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::SparseUUIDArray_Entry::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::SparseUUIDArray_Entry::MergeFrom(void **this, const TSP::SparseUUIDArray_Entry *a2)
{
  char v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      *((_DWORD *)v3 + 4) |= 1u;
      unsigned int v7 = (void **)v3[3];
      if (!v7)
      {
        unsigned int v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v8 = (void *)*v8;
        }
        unsigned int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v8);
        v3[3] = v7;
      }
      if (*((void *)a2 + 3)) {
        unsigned int v9 = (const TSP::UUID *)*((void *)a2 + 3);
      }
      else {
        unsigned int v9 = (const TSP::UUID *)&TSP::_UUID_default_instance_;
      }
      this = TSP::UUID::MergeFrom(v7, v9);
    }
    if ((v6 & 2) != 0) {
      *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    }
    *((_DWORD *)v3 + 4) |= v6;
  }
  return this;
}

void TSP::SparseUUIDArray_Entry::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::SparseUUIDArray_Entry::Clear(this);
    TSP::SparseUUIDArray_Entry::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::SparseUUIDArray_Entry::IsInitialized(TSP::SparseUUIDArray_Entry *this)
{
  int v1 = *((_DWORD *)this + 4);
  return (~v1 & 3) == 0 && ((v1 & 1) == 0 || (~*(_DWORD *)(*((void *)this + 3) + 16) & 3) == 0);
}

uint64_t TSP::SparseUUIDArray_Entry::GetMetadata(TSP::SparseUUIDArray_Entry *this)
{
  return off_1001EA298[46];
}

uint64_t TSP::SparseUUIDArray::SparseUUIDArray(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CA888;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 3sub_100050800((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_SparseUUIDArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SparseUUIDArray_TSPMessages_2eproto);
  }
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_1000634DC(_Unwind_Exception *a1)
{
  sub_100071F00(v1);
  _Unwind_Resume(a1);
}

void TSP::SparseUUIDArray::~SparseUUIDArray(TSP::SparseUUIDArray *this)
{
}

{
  uint64_t vars8;

  TSP::SparseUUIDArray::~SparseUUIDArray(this);
  operator delete();
}

uint64_t TSP::SparseUUIDArray::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::SparseUUIDArray::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    char v3 = (google::protobuf::Arena ***)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::SparseUUIDArray_Entry::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_100050800((void *)this + 2) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::SparseUUIDArray::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v29 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v8 = (google::protobuf::internal *)((char *)v29 + 1);
      unsigned int v9 = *(unsigned __int8 *)v29;
      if ((*(char *)v29 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v29, (const char *)(v10 - 128));
      int v29 = TagFallback;
      if (!TagFallback) {
        goto LABEL_46;
      }
      unsigned int v8 = TagFallback;
      unsigned int v9 = v26;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 18)
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unsigned int v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v13 = sub_10003562C((unint64_t *)(a1 + 8));
            unsigned int v8 = v29;
          }
          int v29 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
          if (!v29)
          {
LABEL_46:
            int v29 = 0;
            goto LABEL_2;
          }
          goto LABEL_38;
        }
        unsigned int v14 = (google::protobuf::internal *)((char *)v8 - 1);
        while (2)
        {
          unsigned int v15 = (google::protobuf::internal *)((char *)v14 + 1);
          int v29 = (google::protobuf::internal *)((char *)v14 + 1);
          unsigned int v16 = *(int **)(a1 + 40);
          if (v16)
          {
            uint64_t v17 = *(int *)(a1 + 32);
            int v18 = *v16;
            if ((int)v17 < *v16)
            {
              *(_DWORD *)(a1 + 3sub_100050800((void *)this + 2) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
              goto LABEL_30;
            }
            if (v18 == *(_DWORD *)(a1 + 36))
            {
LABEL_28:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v18 + 1);
              unsigned int v16 = *(int **)(a1 + 40);
              int v18 = *v16;
            }
            int *v16 = v18 + 1;
            uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<TSP::SparseUUIDArray_Entry>(*(void *)(a1 + 24));
            uint64_t v20 = *(void *)(a1 + 40);
            uint64_t v21 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_100050800((void *)this + 2) = v21 + 1;
            *(void *)(v20 + 8 * v21 + 8) = v19;
            unsigned int v15 = v29;
LABEL_30:
            unsigned int v14 = sub_100063860(a3, v19, v15);
            int v29 = v14;
            if (!v14) {
              goto LABEL_46;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(unsigned char *)v14 != 18) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        int v18 = *(_DWORD *)(a1 + 36);
        goto LABEL_28;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 1);
      LODWORD(v2sub_100071F00((void *)this + 3) = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v24 = *(char *)v22;
      int v23 = (const char *)(v23 + (v24 << 7) - 128);
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
        int v29 = v22;
        *(_DWORD *)(a1 + 48) = v23;
        int v5 = 1;
        goto LABEL_38;
      }
      uint64_t v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v23);
      int v29 = v27;
      *(_DWORD *)(a1 + 48) = v28;
      int v5 = 1;
      if (!v27) {
        goto LABEL_46;
      }
LABEL_38:
      if (sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    unsigned int v8 = (google::protobuf::internal *)((char *)v29 + 2);
LABEL_7:
    int v29 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

google::protobuf::internal *sub_100063860(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::SparseUUIDArray_Entry::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::SparseUUIDArray::_InternalSerialize(TSP::SparseUUIDArray *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned int v6 = *((_DWORD *)this + 12);
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unsigned int v8 = v7 >> 7;
          ++a2;
          unsigned int v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  int v10 = *((_DWORD *)this + 8);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v12 = *(TSP::SparseUUIDArray_Entry **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v13 = *((_DWORD *)v12 + 5);
      if (v13 > 0x7F)
      {
        a2[1] = v13 | 0x80;
        unsigned int v15 = v13 >> 7;
        if (v13 >> 14)
        {
          unsigned int v14 = a2 + 3;
          do
          {
            *(v14 - sub_1000333D0((uint64_t *)this + 1) = v15 | 0x80;
            unsigned int v16 = v15 >> 7;
            ++v14;
            unsigned int v17 = v15 >> 14;
            v15 >>= 7;
          }
          while (v17);
          *(v14 - sub_1000333D0((uint64_t *)this + 1) = v16;
        }
        else
        {
          a2[2] = v15;
          unsigned int v14 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v13;
        unsigned int v14 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::SparseUUIDArray_Entry::_InternalSerialize(v12, v14, a3, a4);
    }
  }
  uint64_t v18 = *((void *)this + 1);
  if ((v18 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v18 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::SparseUUIDArray::ByteSizeLong(TSP::SparseUUIDArray *this)
{
  if (*((unsigned char *)this + 16)) {
    uint64_t v2 = ((9 * (__clz(*((_DWORD *)this + 12) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *((int *)this + 8);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + v3);
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    unsigned int v6 = (TSP::UUID ***)(v5 + 8);
  }
  else {
    unsigned int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unsigned int v8 = *v6++;
      unsigned int v9 = TSP::SparseUUIDArray_Entry::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::SparseUUIDArray *)((char *)this + 8), v4, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v4;
    return (char *)v4;
  }
}

void TSP::SparseUUIDArray::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::SparseUUIDArray::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::SparseUUIDArray::MergeFrom(void **this, const TSP::SparseUUIDArray *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    unsigned int v6 = (TSP::SparseUUIDArray_Entry **)(*((void *)a2 + 5) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 3), *((_DWORD *)a2 + 8));
    this = sub_100071F80(v3 + 3, (void ***)v7, v6, v5, *(_DWORD *)v3[5] - *((_DWORD *)v3 + 8));
    signed int v8 = *((_DWORD *)v3 + 8) + v5;
    *((_DWORD *)v3 + 8) = v8;
    unsigned int v9 = (signed int *)v3[5];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  if (*((unsigned char *)a2 + 16))
  {
    int v10 = *((_DWORD *)a2 + 12);
    *((_DWORD *)v3 + 4) |= 1u;
    *((_DWORD *)v3 + 1sub_100050800((void *)this + 2) = v10;
  }
  return this;
}

void TSP::SparseUUIDArray::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::SparseUUIDArray::Clear(this);
    TSP::SparseUUIDArray::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::SparseUUIDArray::IsInitialized(TSP::SparseUUIDArray *this)
{
  if (*((unsigned char *)this + 16)) {
    return sub_100063D98((uint64_t)this + 24);
  }
  else {
    return 0;
  }
}

uint64_t sub_100063D98(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v2 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    int v5 = *(_DWORD *)(v4 + 16);
    if ((~v5 & 3) != 0 || (v5 & 1) != 0 && (~*(_DWORD *)(*(void *)(v4 + 24) + 16) & 3) != 0) {
      break;
    }
    if (--v2 <= 1) {
      return 1;
    }
  }
  return 0;
}

uint64_t TSP::SparseUUIDArray::GetMetadata(TSP::SparseUUIDArray *this)
{
  return off_1001EA298[48];
}

uint64_t TSP::UUIDPath::UUIDPath(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CA938;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_100050800((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_UUIDPath_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_UUIDPath_TSPMessages_2eproto);
  }
  return a1;
}

void sub_100063EA4(_Unwind_Exception *a1)
{
  sub_100050800(v1);
  _Unwind_Resume(a1);
}

void TSP::UUIDPath::~UUIDPath(TSP::UUIDPath *this)
{
}

{
  uint64_t vars8;

  TSP::UUIDPath::~UUIDPath(this);
  operator delete();
}

uint64_t TSP::UUIDPath::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::UUIDPath::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::UUID **)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::UUID::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  int v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *TSP::UUIDPath::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v22 = a2;
  if ((sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v22 + 1);
      unsigned int v7 = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, (const char *)(v8 - 128));
      uint64_t v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        BOOL v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          int v12 = (google::protobuf::internal *)((char *)v11 + 1);
          uint64_t v22 = (google::protobuf::internal *)((char *)v11 + 1);
          unsigned int v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              unsigned int v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            *unsigned int v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            int v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          BOOL v11 = sub_10003F83C(a3, v16, v12);
          uint64_t v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        int v10 = sub_10003562C((unint64_t *)(a1 + 8));
        char v6 = v22;
      }
      uint64_t v22 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92))) {
        return v22;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    uint64_t v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

const google::protobuf::UnknownFieldSet *TSP::UUIDPath::_InternalSerialize(TSP::UUIDPath *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      unsigned int v8 = *(TSP::UUID **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v8, v10, a3, a4);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::UUIDPath::ByteSizeLong(TSP::UUIDPath *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (TSP::UUID **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::UUID::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::UUIDPath *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void TSP::UUIDPath::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::UUIDPath::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::UUIDPath::MergeFrom(void **this, const TSP::UUIDPath *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (TSP::UUID **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    this = sub_100071E40(v3 + 2, (void ***)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + 6) = v8;
    unsigned int v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  return this;
}

void TSP::UUIDPath::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::UUIDPath::Clear(this);
    TSP::UUIDPath::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::UUIDPath::IsInitialized(TSP::UUIDPath *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 4) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

uint64_t TSP::UUIDPath::GetMetadata(TSP::UUIDPath *this)
{
  return off_1001EA298[50];
}

void TSP::SparseUUIDPathArray_Entry::~SparseUUIDPathArray_Entry(TSP::SparseUUIDPathArray_Entry *this)
{
  if (this != (TSP::SparseUUIDPathArray_Entry *)&TSP::_SparseUUIDPathArray_Entry_default_instance_)
  {
    int v2 = (TSP::UUIDPath *)*((void *)this + 3);
    if (v2)
    {
      TSP::UUIDPath::~UUIDPath(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::SparseUUIDPathArray_Entry::~SparseUUIDPathArray_Entry(this);
  operator delete();
}

uint64_t TSP::SparseUUIDPathArray_Entry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::SparseUUIDPathArray_Entry::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::UUIDPath::Clear((google::protobuf::Arena **)this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::SparseUUIDPathArray_Entry::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v24 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v24 + 1);
      unsigned int v9 = *(unsigned __int8 *)v24;
      if ((*(char *)v24 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v24, (const char *)(v10 - 128));
      int v24 = TagFallback;
      if (!TagFallback) {
        goto LABEL_40;
      }
      signed int v8 = TagFallback;
      unsigned int v9 = v21;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 == 18)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v15 = *(void *)(a1 + 24);
          if (!v15)
          {
            uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
            if (*v7) {
              uint64_t v16 = (void *)*v16;
            }
            uint64_t v15 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDPath>(v16);
            *(void *)(a1 + 24) = v15;
            signed int v8 = v24;
          }
          uint64_t v14 = sub_10006486C(a3, v15, v8);
        }
        else
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unsigned int v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v13 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v24;
          }
          uint64_t v14 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
        }
        int v24 = v14;
        if (!v14) {
          goto LABEL_40;
        }
        goto LABEL_32;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      v5 |= 2u;
      uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 1);
      LODWORD(v18) = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_31;
      }
      int v19 = *(char *)v17;
      uint64_t v18 = (const char *)(v18 + (v19 << 7) - 128);
      if ((v19 & 0x80000000) == 0)
      {
        uint64_t v17 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_31:
        int v24 = v17;
        *(_DWORD *)(a1 + 3sub_100050800((void *)this + 2) = v18;
        goto LABEL_32;
      }
      uint64_t v22 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v18);
      int v24 = v22;
      *(_DWORD *)(a1 + 3sub_100050800((void *)this + 2) = v23;
      if (!v22)
      {
LABEL_40:
        int v24 = 0;
        goto LABEL_2;
      }
LABEL_32:
      if (sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    signed int v8 = (google::protobuf::internal *)((char *)v24 + 2);
LABEL_7:
    int v24 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

google::protobuf::internal *sub_10006486C(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    int v6 = result;
  }
  else
  {
    int v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::UUIDPath::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::SparseUUIDPathArray_Entry::_InternalSerialize(TSP::SparseUUIDPathArray_Entry *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned int v7 = *((_DWORD *)this + 8);
    *a2 = 8;
    if (v7 <= 0x7F)
    {
      a2[1] = v7;
      a2 += 2;
      if ((v6 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
    a2[1] = v7 | 0x80;
    unsigned int v8 = v7 >> 7;
    if (v7 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8 | 0x80;
        unsigned int v13 = v8 >> 7;
        ++a2;
        unsigned int v14 = v8 >> 14;
        v8 >>= 7;
      }
      while (v14);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v13;
      if ((v6 & 1) == 0) {
        goto LABEL_24;
      }
      goto LABEL_10;
    }
    a2[2] = v8;
    a2 += 3;
  }
  if ((v6 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_10:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v9 = (TSP::UUIDPath *)*((void *)this + 3);
  *a2 = 18;
  unsigned int v10 = *((_DWORD *)v9 + 10);
  if (v10 > 0x7F)
  {
    a2[1] = v10 | 0x80;
    unsigned int v12 = v10 >> 7;
    if (v10 >> 14)
    {
      BOOL v11 = a2 + 3;
      do
      {
        *(v11 - sub_1000333D0((uint64_t *)this + 1) = v12 | 0x80;
        unsigned int v15 = v12 >> 7;
        ++v11;
        unsigned int v16 = v12 >> 14;
        v12 >>= 7;
      }
      while (v16);
      *(v11 - sub_1000333D0((uint64_t *)this + 1) = v15;
    }
    else
    {
      a2[2] = v12;
      BOOL v11 = a2 + 3;
    }
  }
  else
  {
    a2[1] = v10;
    BOOL v11 = a2 + 2;
  }
  a2 = (unsigned __int8 *)TSP::UUIDPath::_InternalSerialize(v9, v11, a3, a4);
LABEL_24:
  uint64_t v17 = *((void *)this + 1);
  if ((v17 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v17 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::SparseUUIDPathArray_Entry::RequiredFieldsByteSizeFallback(TSP::SparseUUIDPathArray_Entry *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2)
  {
    uint64_t v4 = TSP::UUIDPath::ByteSizeLong(*((TSP::UUIDPath **)this + 3));
    BOOL result = &v4[((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1];
    if ((*((_DWORD *)this + 4) & 2) == 0) {
      return result;
    }
    goto LABEL_5;
  }
  BOOL result = 0;
  if ((v2 & 2) != 0) {
LABEL_5:
  }
    result += ((9 * (__clz(*((_DWORD *)this + 8) | 1) ^ 0x1F) + 73) >> 6) + 1;
  return result;
}

char *TSP::SparseUUIDPathArray_Entry::ByteSizeLong(TSP::UUIDPath **this)
{
  if ((~*((_DWORD *)this + 4) & 3) != 0)
  {
    char v3 = TSP::SparseUUIDPathArray_Entry::RequiredFieldsByteSizeFallback((TSP::SparseUUIDPathArray_Entry *)this);
  }
  else
  {
    int v2 = TSP::UUIDPath::ByteSizeLong(this[3]);
    char v3 = &v2[((9 * (__clz(*((_DWORD *)this + 8) | 1) ^ 0x1F) + 73) >> 6)
           + 2
           + ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), (const google::protobuf::UnknownFieldSet *)v3, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v3;
    return v3;
  }
}

void TSP::SparseUUIDPathArray_Entry::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::SparseUUIDPathArray_Entry::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::SparseUUIDPathArray_Entry::MergeFrom(void **this, const TSP::SparseUUIDPathArray_Entry *a2)
{
  char v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 4);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      *((_DWORD *)v3 + 4) |= 1u;
      unsigned int v7 = (void **)v3[3];
      if (!v7)
      {
        unsigned int v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          unsigned int v8 = (void *)*v8;
        }
        unsigned int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDPath>(v8);
        v3[3] = v7;
      }
      if (*((void *)a2 + 3)) {
        int v9 = (const TSP::UUIDPath *)*((void *)a2 + 3);
      }
      else {
        int v9 = (const TSP::UUIDPath *)&TSP::_UUIDPath_default_instance_;
      }
      this = TSP::UUIDPath::MergeFrom(v7, v9);
    }
    if ((v6 & 2) != 0) {
      *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    }
    *((_DWORD *)v3 + 4) |= v6;
  }
  return this;
}

void TSP::SparseUUIDPathArray_Entry::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::SparseUUIDPathArray_Entry::Clear(this);
    TSP::SparseUUIDPathArray_Entry::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::SparseUUIDPathArray_Entry::IsInitialized(TSP::SparseUUIDPathArray_Entry *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((~v1 & 3) != 0) {
    return 0;
  }
  if ((v1 & 1) == 0) {
    return 1;
  }
  uint64_t v3 = *((void *)this + 3);
  uint64_t v4 = *(unsigned int *)(v3 + 24);
  uint64_t v5 = *(void *)(v3 + 32);
  do
  {
    BOOL result = (int)v4 < 1;
    if ((int)v4 < 1) {
      break;
    }
    uint64_t v6 = *(void *)(v5 + 8 * v4--);
  }
  while ((~*(_DWORD *)(v6 + 16) & 3) == 0);
  return result;
}

uint64_t TSP::SparseUUIDPathArray_Entry::GetMetadata(TSP::SparseUUIDPathArray_Entry *this)
{
  return off_1001EA298[52];
}

uint64_t TSP::SparseUUIDPathArray::SparseUUIDPathArray(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CAA98;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 3sub_100050800((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_SparseUUIDPathArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SparseUUIDPathArray_TSPMessages_2eproto);
  }
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_100064EB8(_Unwind_Exception *a1)
{
  sub_100072040(v1);
  _Unwind_Resume(a1);
}

void TSP::SparseUUIDPathArray::~SparseUUIDPathArray(TSP::SparseUUIDPathArray *this)
{
}

{
  uint64_t vars8;

  TSP::SparseUUIDPathArray::~SparseUUIDPathArray(this);
  operator delete();
}

uint64_t TSP::SparseUUIDPathArray::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::SparseUUIDPathArray::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (google::protobuf::Arena ***)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::SparseUUIDPathArray_Entry::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_100050800((void *)this + 2) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::SparseUUIDPathArray::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v29 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v8 = (google::protobuf::internal *)((char *)v29 + 1);
      unsigned int v9 = *(unsigned __int8 *)v29;
      if ((*(char *)v29 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v29, (const char *)(v10 - 128));
      int v29 = TagFallback;
      if (!TagFallback) {
        goto LABEL_46;
      }
      unsigned int v8 = TagFallback;
      unsigned int v9 = v26;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 18)
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unsigned int v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v13 = sub_10003562C((unint64_t *)(a1 + 8));
            unsigned int v8 = v29;
          }
          int v29 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
          if (!v29)
          {
LABEL_46:
            int v29 = 0;
            goto LABEL_2;
          }
          goto LABEL_38;
        }
        unsigned int v14 = (google::protobuf::internal *)((char *)v8 - 1);
        while (2)
        {
          unsigned int v15 = (google::protobuf::internal *)((char *)v14 + 1);
          int v29 = (google::protobuf::internal *)((char *)v14 + 1);
          unsigned int v16 = *(int **)(a1 + 40);
          if (v16)
          {
            uint64_t v17 = *(int *)(a1 + 32);
            int v18 = *v16;
            if ((int)v17 < *v16)
            {
              *(_DWORD *)(a1 + 3sub_100050800((void *)this + 2) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
              goto LABEL_30;
            }
            if (v18 == *(_DWORD *)(a1 + 36))
            {
LABEL_28:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v18 + 1);
              unsigned int v16 = *(int **)(a1 + 40);
              int v18 = *v16;
            }
            int *v16 = v18 + 1;
            uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<TSP::SparseUUIDPathArray_Entry>(*(void *)(a1 + 24));
            uint64_t v20 = *(void *)(a1 + 40);
            uint64_t v21 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_100050800((void *)this + 2) = v21 + 1;
            *(void *)(v20 + 8 * v21 + 8) = v19;
            unsigned int v15 = v29;
LABEL_30:
            unsigned int v14 = sub_10006523C(a3, v19, v15);
            int v29 = v14;
            if (!v14) {
              goto LABEL_46;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(unsigned char *)v14 != 18) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        int v18 = *(_DWORD *)(a1 + 36);
        goto LABEL_28;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 1);
      LODWORD(v2sub_100072040((void *)this + 3) = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v24 = *(char *)v22;
      int v23 = (const char *)(v23 + (v24 << 7) - 128);
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
        int v29 = v22;
        *(_DWORD *)(a1 + 48) = v23;
        int v5 = 1;
        goto LABEL_38;
      }
      uint64_t v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v23);
      int v29 = v27;
      *(_DWORD *)(a1 + 48) = v28;
      int v5 = 1;
      if (!v27) {
        goto LABEL_46;
      }
LABEL_38:
      if (sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    unsigned int v8 = (google::protobuf::internal *)((char *)v29 + 2);
LABEL_7:
    int v29 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

google::protobuf::internal *sub_10006523C(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  int v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::SparseUUIDPathArray_Entry::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::SparseUUIDPathArray::_InternalSerialize(TSP::SparseUUIDPathArray *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned int v6 = *((_DWORD *)this + 12);
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unsigned int v8 = v7 >> 7;
          ++a2;
          unsigned int v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  int v10 = *((_DWORD *)this + 8);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v12 = *(TSP::SparseUUIDPathArray_Entry **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v13 = *((_DWORD *)v12 + 5);
      if (v13 > 0x7F)
      {
        a2[1] = v13 | 0x80;
        unsigned int v15 = v13 >> 7;
        if (v13 >> 14)
        {
          unsigned int v14 = a2 + 3;
          do
          {
            *(v14 - sub_1000333D0((uint64_t *)this + 1) = v15 | 0x80;
            unsigned int v16 = v15 >> 7;
            ++v14;
            unsigned int v17 = v15 >> 14;
            v15 >>= 7;
          }
          while (v17);
          *(v14 - sub_1000333D0((uint64_t *)this + 1) = v16;
        }
        else
        {
          a2[2] = v15;
          unsigned int v14 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v13;
        unsigned int v14 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::SparseUUIDPathArray_Entry::_InternalSerialize(v12, v14, a3, a4);
    }
  }
  uint64_t v18 = *((void *)this + 1);
  if ((v18 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v18 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::SparseUUIDPathArray::ByteSizeLong(TSP::SparseUUIDPathArray *this)
{
  if (*((unsigned char *)this + 16)) {
    uint64_t v2 = ((9 * (__clz(*((_DWORD *)this + 12) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *((int *)this + 8);
  uint64_t v4 = (const google::protobuf::UnknownFieldSet *)(v2 + v3);
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    unsigned int v6 = (TSP::UUIDPath ***)(v5 + 8);
  }
  else {
    unsigned int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      unsigned int v8 = *v6++;
      unsigned int v9 = TSP::SparseUUIDPathArray_Entry::ByteSizeLong(v8);
      uint64_t v4 = (const google::protobuf::UnknownFieldSet *)((char *)v4
                                                     + (void)v9
                                                     + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6));
      v7 -= 8;
    }
    while (v7);
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::SparseUUIDPathArray *)((char *)this + 8), v4, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v4;
    return (char *)v4;
  }
}

void TSP::SparseUUIDPathArray::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::SparseUUIDPathArray::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::SparseUUIDPathArray::MergeFrom(void **this, const TSP::SparseUUIDPathArray *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    unsigned int v6 = (TSP::SparseUUIDPathArray_Entry **)(*((void *)a2 + 5) + 8);
    uint64_t v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 3), *((_DWORD *)a2 + 8));
    this = sub_1000720C0(v3 + 3, (void ***)v7, v6, v5, *(_DWORD *)v3[5] - *((_DWORD *)v3 + 8));
    signed int v8 = *((_DWORD *)v3 + 8) + v5;
    *((_DWORD *)v3 + 8) = v8;
    unsigned int v9 = (signed int *)v3[5];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  if (*((unsigned char *)a2 + 16))
  {
    int v10 = *((_DWORD *)a2 + 12);
    *((_DWORD *)v3 + 4) |= 1u;
    *((_DWORD *)v3 + 1sub_100050800((void *)this + 2) = v10;
  }
  return this;
}

void TSP::SparseUUIDPathArray::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::SparseUUIDPathArray::Clear(this);
    TSP::SparseUUIDPathArray::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::SparseUUIDPathArray::IsInitialized(TSP::SparseUUIDPathArray *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 0;
  }
  uint64_t v2 = *((unsigned int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  do
  {
    BOOL v1 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL IsInitialized = TSP::SparseUUIDPathArray_Entry::IsInitialized(*(TSP::SparseUUIDPathArray_Entry **)(v3 + 8 * v2));
    uint64_t v2 = v4;
  }
  while (IsInitialized);
  return v1;
}

uint64_t TSP::SparseUUIDPathArray::GetMetadata(TSP::SparseUUIDPathArray *this)
{
  return off_1001EA298[54];
}

uint64_t TSP::PasteboardObject::PasteboardObject(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CAB48;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 3sub_100050800((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 7sub_100050800((void *)this + 2) = a2;
  *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 11sub_100050800((void *)this + 2) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  if (atomic_load_explicit(scc_info_PasteboardObject_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_PasteboardObject_TSPMessages_2eproto);
  }
  *(_OWORD *)(a1 + 17google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0u;
  return a1;
}

void sub_1000658B0(_Unwind_Exception *a1)
{
  sub_1000719B4(v5);
  sub_100072180(v4);
  sub_100072180(v3);
  sub_100072180(v2);
  sub_100072180(v1);
  _Unwind_Resume(a1);
}

void TSP::PasteboardObject::~PasteboardObject(TSP::PasteboardObject *this)
{
}

{
  uint64_t vars8;

  TSP::PasteboardObject::~PasteboardObject(this);
  operator delete();
}

uint64_t sub_100065968(uint64_t result)
{
  if ((_UNKNOWN *)result != &TSP::_PasteboardObject_default_instance_)
  {
    uint64_t v1 = *(void *)(result + 144);
    if (v1)
    {
      sub_1000333D0((uint64_t *)(v1 + 8));
      operator delete();
    }
    uint64_t v2 = *(void *)(result + 152);
    if (v2)
    {
      sub_1000333D0((uint64_t *)(v2 + 8));
      operator delete();
    }
    uint64_t v3 = *(void *)(result + 160);
    if (v3)
    {
      sub_1000333D0((uint64_t *)(v3 + 8));
      operator delete();
    }
    uint64_t v4 = *(void *)(result + 168);
    if (v4)
    {
      sub_1000333D0((uint64_t *)(v4 + 8));
      operator delete();
    }
    uint64_t v5 = *(void *)(result + 176);
    if (v5)
    {
      sub_1000333D0((uint64_t *)(v5 + 8));
      operator delete();
    }
  }
  return result;
}

uint64_t TSP::PasteboardObject::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::PasteboardObject::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::Reference **)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::Reference::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_100050800((void *)this + 2) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    unsigned int v6 = (TSP::Reference **)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      this = TSP::Reference::Clear(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 5sub_100072180((void *)this + 6) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    unsigned int v9 = (TSP::Reference **)(*(void *)(v1 + 88) + 8);
    do
    {
      int v10 = *v9++;
      this = TSP::Reference::Clear(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    int v12 = (TSP::Reference **)(*(void *)(v1 + 112) + 8);
    do
    {
      unsigned int v13 = *v12++;
      this = TSP::Reference::Clear(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  uint64_t v14 = *(unsigned int *)(v1 + 128);
  if ((int)v14 >= 1)
  {
    unsigned int v15 = (TSP::Range **)(*(void *)(v1 + 136) + 8);
    do
    {
      unsigned int v16 = *v15++;
      this = TSP::Range::Clear(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(v1 + 128) = 0;
  }
  int v17 = *(_DWORD *)(v1 + 16);
  if ((v17 & 0x1F) == 0) {
    goto LABEL_28;
  }
  if (v17)
  {
    this = TSP::Reference::Clear(*(TSP::Reference **)(v1 + 144));
    if ((v17 & 2) == 0)
    {
LABEL_24:
      if ((v17 & 4) == 0) {
        goto LABEL_25;
      }
LABEL_34:
      this = TSP::Reference::Clear(*(TSP::Reference **)(v1 + 160));
      if ((v17 & 8) == 0)
      {
LABEL_26:
        if ((v17 & 0x10) == 0) {
          goto LABEL_28;
        }
        goto LABEL_27;
      }
      goto LABEL_35;
    }
  }
  else if ((v17 & 2) == 0)
  {
    goto LABEL_24;
  }
  this = TSP::Reference::Clear(*(TSP::Reference **)(v1 + 152));
  if ((v17 & 4) != 0) {
    goto LABEL_34;
  }
LABEL_25:
  if ((v17 & 8) == 0) {
    goto LABEL_26;
  }
LABEL_35:
  this = TSP::Reference::Clear(*(TSP::Reference **)(v1 + 168));
  if ((v17 & 0x10) != 0) {
LABEL_27:
  }
    this = TSP::Reference::Clear(*(TSP::Reference **)(v1 + 176));
LABEL_28:
  char v19 = *(unsigned char *)(v1 + 8);
  uint64_t v18 = v1 + 8;
  *(_WORD *)(v18 + 17sub_100072180((void *)this + 6) = 0;
  *(_DWORD *)(v18 + 8) = 0;
  if (v19)
  {
    return sub_100035820((unint64_t *)v18);
  }
  return this;
}

google::protobuf::internal *TSP::PasteboardObject::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v72 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v72, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (2)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v72 + 1);
      unsigned int v9 = *(unsigned __int8 *)v72;
      if (*(char *)v72 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v72, (const char *)(v10 - 128));
          uint64_t v72 = TagFallback;
          if (!TagFallback) {
            goto LABEL_128;
          }
          uint64_t v8 = TagFallback;
          unsigned int v9 = v14;
LABEL_8:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 10) {
                goto LABEL_116;
              }
              *(_DWORD *)(a1 + 16) |= 1u;
              uint64_t v11 = *(void *)(a1 + 144);
              if (v11) {
                goto LABEL_99;
              }
              int v12 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
              if (*v7) {
                int v12 = (void *)*v12;
              }
              uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v12);
              *(void *)(a1 + 144) = v11;
              goto LABEL_98;
            case 2u:
              if (v9 != 18) {
                goto LABEL_116;
              }
              unsigned int v15 = (google::protobuf::internal *)((char *)v8 - 1);
              while (1)
              {
                unsigned int v16 = (google::protobuf::internal *)((char *)v15 + 1);
                uint64_t v72 = (google::protobuf::internal *)((char *)v15 + 1);
                int v17 = *(int **)(a1 + 40);
                if (!v17) {
                  break;
                }
                uint64_t v18 = *(int *)(a1 + 32);
                int v19 = *v17;
                if ((int)v18 >= *v17)
                {
                  if (v19 == *(_DWORD *)(a1 + 36))
                  {
LABEL_23:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v19 + 1);
                    int v17 = *(int **)(a1 + 40);
                    int v19 = *v17;
                  }
                  *int v17 = v19 + 1;
                  uint64_t v20 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(*(void *)(a1 + 24));
                  uint64_t v21 = *(void *)(a1 + 40);
                  uint64_t v22 = *(int *)(a1 + 32);
                  *(_DWORD *)(a1 + 3sub_100050800((void *)this + 2) = v22 + 1;
                  *(void *)(v21 + 8 * v22 + 8) = v20;
                  unsigned int v16 = v72;
                  goto LABEL_25;
                }
                *(_DWORD *)(a1 + 3sub_100050800((void *)this + 2) = v18 + 1;
                uint64_t v20 = *(void *)&v17[2 * v18 + 2];
LABEL_25:
                unsigned int v15 = sub_100034100(a3, v20, v16);
                uint64_t v72 = v15;
                if (!v15) {
                  goto LABEL_128;
                }
                if (*(void *)a3 <= (unint64_t)v15 || *(unsigned char *)v15 != 18) {
                  goto LABEL_101;
                }
              }
              int v19 = *(_DWORD *)(a1 + 36);
              goto LABEL_23;
            case 3u:
              if (v9 != 26) {
                goto LABEL_116;
              }
              int v23 = (google::protobuf::internal *)((char *)v8 - 1);
              while (1)
              {
                int v24 = (google::protobuf::internal *)((char *)v23 + 1);
                uint64_t v72 = (google::protobuf::internal *)((char *)v23 + 1);
                int v25 = *(int **)(a1 + 64);
                if (!v25) {
                  break;
                }
                uint64_t v26 = *(int *)(a1 + 56);
                int v27 = *v25;
                if ((int)v26 >= *v25)
                {
                  if (v27 == *(_DWORD *)(a1 + 60))
                  {
LABEL_36:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v27 + 1);
                    int v25 = *(int **)(a1 + 64);
                    int v27 = *v25;
                  }
                  int *v25 = v27 + 1;
                  uint64_t v28 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(*(void *)(a1 + 48));
                  uint64_t v29 = *(void *)(a1 + 64);
                  uint64_t v30 = *(int *)(a1 + 56);
                  *(_DWORD *)(a1 + 5sub_100072180((void *)this + 6) = v30 + 1;
                  *(void *)(v29 + 8 * v30 + 8) = v28;
                  int v24 = v72;
                  goto LABEL_38;
                }
                *(_DWORD *)(a1 + 5sub_100072180((void *)this + 6) = v26 + 1;
                uint64_t v28 = *(void *)&v25[2 * v26 + 2];
LABEL_38:
                int v23 = sub_100034100(a3, v28, v24);
                uint64_t v72 = v23;
                if (!v23) {
                  goto LABEL_128;
                }
                if (*(void *)a3 <= (unint64_t)v23 || *(unsigned char *)v23 != 26) {
                  goto LABEL_101;
                }
              }
              int v27 = *(_DWORD *)(a1 + 60);
              goto LABEL_36;
            case 5u:
              if (v9 != 42) {
                goto LABEL_116;
              }
              *(_DWORD *)(a1 + 16) |= 2u;
              uint64_t v11 = *(void *)(a1 + 152);
              if (v11) {
                goto LABEL_99;
              }
              uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
              if (*v7) {
                uint64_t v31 = (void *)*v31;
              }
              uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v31);
              *(void *)(a1 + 15sub_100050800((void *)this + 2) = v11;
              goto LABEL_98;
            case 6u:
              if (v9 != 50) {
                goto LABEL_116;
              }
              *(_DWORD *)(a1 + 16) |= 4u;
              uint64_t v11 = *(void *)(a1 + 160);
              if (v11) {
                goto LABEL_99;
              }
              int v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
              if (*v7) {
                int v32 = (void *)*v32;
              }
              uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v32);
              *(void *)(a1 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v11;
              goto LABEL_98;
            case 7u:
              if (v9 != 56) {
                goto LABEL_116;
              }
              v5 |= 0x20u;
              uint64_t v33 = (google::protobuf::internal *)((char *)v8 + 1);
              unint64_t v34 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_56;
              }
              int v35 = *(char *)v33;
              unint64_t v34 = v34 + (v35 << 7) - 128;
              if (v35 < 0)
              {
                uint64_t v68 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v34);
                uint64_t v72 = v68;
                *(unsigned char *)(a1 + 184) = v69 != 0;
                if (!v68) {
                  goto LABEL_128;
                }
              }
              else
              {
                uint64_t v33 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_56:
                uint64_t v72 = v33;
                *(unsigned char *)(a1 + 184) = v34 != 0;
              }
              goto LABEL_101;
            case 8u:
              if (v9 != 64) {
                goto LABEL_116;
              }
              v5 |= 0x40u;
              int v36 = (google::protobuf::internal *)((char *)v8 + 1);
              unint64_t v37 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_61;
              }
              int v38 = *(char *)v36;
              unint64_t v37 = v37 + (v38 << 7) - 128;
              if (v38 < 0)
              {
                uint64_t v70 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v37);
                uint64_t v72 = v70;
                *(unsigned char *)(a1 + 18sub_100050800((void *)this + 5) = v71 != 0;
                if (!v70) {
                  goto LABEL_128;
                }
              }
              else
              {
                int v36 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_61:
                uint64_t v72 = v36;
                *(unsigned char *)(a1 + 18sub_100050800((void *)this + 5) = v37 != 0;
              }
              goto LABEL_101;
            case 9u:
              if (v9 != 74) {
                goto LABEL_116;
              }
              *(_DWORD *)(a1 + 16) |= 8u;
              uint64_t v11 = *(void *)(a1 + 168);
              if (v11) {
                goto LABEL_99;
              }
              uint64_t v39 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
              if (*v7) {
                uint64_t v39 = (void *)*v39;
              }
              uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v39);
              *(void *)(a1 + 168) = v11;
              goto LABEL_98;
            case 0xAu:
              if (v9 != 82) {
                goto LABEL_116;
              }
              unsigned int v40 = (google::protobuf::internal *)((char *)v8 - 1);
              while (1)
              {
                uint64_t v41 = (google::protobuf::internal *)((char *)v40 + 1);
                uint64_t v72 = (google::protobuf::internal *)((char *)v40 + 1);
                uint64_t v42 = *(int **)(a1 + 88);
                if (!v42) {
                  break;
                }
                uint64_t v43 = *(int *)(a1 + 80);
                int v44 = *v42;
                if ((int)v43 >= *v42)
                {
                  if (v44 == *(_DWORD *)(a1 + 84))
                  {
LABEL_74:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 72), v44 + 1);
                    uint64_t v42 = *(int **)(a1 + 88);
                    int v44 = *v42;
                  }
                  int *v42 = v44 + 1;
                  uint64_t v45 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(*(void *)(a1 + 72));
                  uint64_t v46 = *(void *)(a1 + 88);
                  uint64_t v47 = *(int *)(a1 + 80);
                  *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v47 + 1;
                  *(void *)(v46 + 8 * v47 + 8) = v45;
                  uint64_t v41 = v72;
                  goto LABEL_76;
                }
                *(_DWORD *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v43 + 1;
                uint64_t v45 = *(void *)&v42[2 * v43 + 2];
LABEL_76:
                unsigned int v40 = sub_100034100(a3, v45, v41);
                uint64_t v72 = v40;
                if (!v40) {
                  goto LABEL_128;
                }
                if (*(void *)a3 <= (unint64_t)v40 || *(unsigned char *)v40 != 82) {
                  goto LABEL_101;
                }
              }
              int v44 = *(_DWORD *)(a1 + 84);
              goto LABEL_74;
            case 0xBu:
              if (v9 != 90) {
                goto LABEL_116;
              }
              int v48 = (google::protobuf::internal *)((char *)v8 - 1);
              while (1)
              {
                uint64_t v49 = (google::protobuf::internal *)((char *)v48 + 1);
                uint64_t v72 = (google::protobuf::internal *)((char *)v48 + 1);
                int v50 = *(int **)(a1 + 112);
                if (!v50) {
                  break;
                }
                uint64_t v51 = *(int *)(a1 + 104);
                int v52 = *v50;
                if ((int)v51 >= *v50)
                {
                  if (v52 == *(_DWORD *)(a1 + 108))
                  {
LABEL_87:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 96), v52 + 1);
                    int v50 = *(int **)(a1 + 112);
                    int v52 = *v50;
                  }
                  int *v50 = v52 + 1;
                  uint64_t v53 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(*(void *)(a1 + 96));
                  uint64_t v54 = *(void *)(a1 + 112);
                  uint64_t v55 = *(int *)(a1 + 104);
                  *(_DWORD *)(a1 + 104) = v55 + 1;
                  *(void *)(v54 + 8 * v55 + 8) = v53;
                  uint64_t v49 = v72;
                  goto LABEL_89;
                }
                *(_DWORD *)(a1 + 104) = v51 + 1;
                uint64_t v53 = *(void *)&v50[2 * v51 + 2];
LABEL_89:
                int v48 = sub_100034100(a3, v53, v49);
                uint64_t v72 = v48;
                if (!v48) {
                  goto LABEL_128;
                }
                if (*(void *)a3 <= (unint64_t)v48 || *(unsigned char *)v48 != 90) {
                  goto LABEL_101;
                }
              }
              int v52 = *(_DWORD *)(a1 + 108);
              goto LABEL_87;
            case 0xCu:
              if (v9 != 98) {
                goto LABEL_116;
              }
              *(_DWORD *)(a1 + 16) |= 0x10u;
              uint64_t v11 = *(void *)(a1 + 176);
              if (v11) {
                goto LABEL_99;
              }
              unsigned int v56 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFELL);
              if (*v7) {
                unsigned int v56 = (void *)*v56;
              }
              uint64_t v11 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v56);
              *(void *)(a1 + 17sub_100072180((void *)this + 6) = v11;
LABEL_98:
              uint64_t v8 = v72;
LABEL_99:
              uint64_t v57 = sub_100034100(a3, v11, v8);
              goto LABEL_100;
            case 0xDu:
              if (v9 != 106) {
                goto LABEL_116;
              }
              uint64_t v58 = (google::protobuf::internal *)((char *)v8 - 1);
              break;
            default:
LABEL_116:
              if (v9) {
                BOOL v66 = (v9 & 7) == 4;
              }
              else {
                BOOL v66 = 1;
              }
              if (v66)
              {
                *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
                goto LABEL_2;
              }
              if (*v7)
              {
                uint64_t v67 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
              }
              else
              {
                uint64_t v67 = sub_10003562C((unint64_t *)(a1 + 8));
                uint64_t v8 = v72;
              }
              uint64_t v57 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v67, v8);
LABEL_100:
              uint64_t v72 = v57;
              if (!v57)
              {
LABEL_128:
                uint64_t v72 = 0;
                goto LABEL_2;
              }
LABEL_101:
              if (sub_1000355B8(a3, &v72, *(_DWORD *)(a3 + 92))) {
                goto LABEL_2;
              }
              continue;
          }
          while (1)
          {
            uint64_t v59 = (google::protobuf::internal *)((char *)v58 + 1);
            uint64_t v72 = (google::protobuf::internal *)((char *)v58 + 1);
            uint64_t v60 = *(int **)(a1 + 136);
            if (!v60) {
              break;
            }
            uint64_t v61 = *(int *)(a1 + 128);
            int v62 = *v60;
            if ((int)v61 >= *v60)
            {
              if (v62 == *(_DWORD *)(a1 + 132))
              {
LABEL_110:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 120), v62 + 1);
                uint64_t v60 = *(int **)(a1 + 136);
                int v62 = *v60;
              }
              int *v60 = v62 + 1;
              uint64_t v63 = google::protobuf::Arena::CreateMaybeMessage<TSP::Range>(*(void *)(a1 + 120));
              uint64_t v64 = *(void *)(a1 + 136);
              uint64_t v65 = *(int *)(a1 + 128);
              *(_DWORD *)(a1 + 128) = v65 + 1;
              *(void *)(v64 + 8 * v65 + 8) = v63;
              uint64_t v59 = v72;
              goto LABEL_112;
            }
            *(_DWORD *)(a1 + 128) = v61 + 1;
            uint64_t v63 = *(void *)&v60[2 * v61 + 2];
LABEL_112:
            uint64_t v58 = sub_10005BB38(a3, v63, v59);
            uint64_t v72 = v58;
            if (!v58) {
              goto LABEL_128;
            }
            if (*(void *)a3 <= (unint64_t)v58 || *(unsigned char *)v58 != 106) {
              goto LABEL_101;
            }
          }
          int v62 = *(_DWORD *)(a1 + 132);
          goto LABEL_110;
        }
        uint64_t v8 = (google::protobuf::internal *)((char *)v72 + 2);
      }
      break;
    }
    uint64_t v72 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v72;
}

const google::protobuf::UnknownFieldSet *TSP::PasteboardObject::_InternalSerialize(TSP::PasteboardObject *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 4);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    uint64_t v7 = (TSP::Reference *)*((void *)this + 18);
    *a2 = 10;
    unsigned int v8 = *((_DWORD *)v7 + 5);
    if (v8 > 0x7F)
    {
      a2[1] = v8 | 0x80;
      unsigned int v10 = v8 >> 7;
      if (v8 >> 14)
      {
        unsigned int v9 = a2 + 3;
        do
        {
          *(v9 - sub_1000333D0((uint64_t *)this + 1) = v10 | 0x80;
          unsigned int v11 = v10 >> 7;
          ++v9;
          unsigned int v12 = v10 >> 14;
          v10 >>= 7;
        }
        while (v12);
        *(v9 - sub_1000333D0((uint64_t *)this + 1) = v11;
      }
      else
      {
        a2[2] = v10;
        unsigned int v9 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v8;
      unsigned int v9 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v7, v9, a3, a4);
  }
  int v13 = *((_DWORD *)this + 8);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      unsigned int v15 = *(TSP::Reference **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v16 = *((_DWORD *)v15 + 5);
      if (v16 > 0x7F)
      {
        a2[1] = v16 | 0x80;
        unsigned int v18 = v16 >> 7;
        if (v16 >> 14)
        {
          int v17 = a2 + 3;
          do
          {
            *(v17 - sub_1000333D0((uint64_t *)this + 1) = v18 | 0x80;
            unsigned int v19 = v18 >> 7;
            ++v17;
            unsigned int v20 = v18 >> 14;
            v18 >>= 7;
          }
          while (v20);
          *(v17 - sub_1000333D0((uint64_t *)this + 1) = v19;
        }
        else
        {
          a2[2] = v18;
          int v17 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v16;
        int v17 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v15, v17, a3, a4);
    }
  }
  int v21 = *((_DWORD *)this + 14);
  if (v21)
  {
    for (int j = 0; j != v21; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v23 = *(TSP::Reference **)(*((void *)this + 8) + 8 * j + 8);
      *a2 = 26;
      unsigned int v24 = *((_DWORD *)v23 + 5);
      if (v24 > 0x7F)
      {
        a2[1] = v24 | 0x80;
        unsigned int v26 = v24 >> 7;
        if (v24 >> 14)
        {
          int v25 = a2 + 3;
          do
          {
            *(v25 - sub_1000333D0((uint64_t *)this + 1) = v26 | 0x80;
            unsigned int v27 = v26 >> 7;
            ++v25;
            unsigned int v28 = v26 >> 14;
            v26 >>= 7;
          }
          while (v28);
          *(v25 - sub_1000333D0((uint64_t *)this + 1) = v27;
        }
        else
        {
          a2[2] = v26;
          int v25 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v24;
        int v25 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v23, v25, a3, a4);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    uint64_t v29 = (TSP::Reference *)*((void *)this + 19);
    *a2 = 42;
    unsigned int v30 = *((_DWORD *)v29 + 5);
    if (v30 > 0x7F)
    {
      a2[1] = v30 | 0x80;
      unsigned int v32 = v30 >> 7;
      if (v30 >> 14)
      {
        uint64_t v31 = a2 + 3;
        do
        {
          *(v31 - sub_1000333D0((uint64_t *)this + 1) = v32 | 0x80;
          unsigned int v33 = v32 >> 7;
          ++v31;
          unsigned int v34 = v32 >> 14;
          v32 >>= 7;
        }
        while (v34);
        *(v31 - sub_1000333D0((uint64_t *)this + 1) = v33;
      }
      else
      {
        a2[2] = v32;
        uint64_t v31 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v30;
      uint64_t v31 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v29, v31, a3, a4);
    if ((v6 & 4) == 0)
    {
LABEL_38:
      if ((v6 & 0x20) == 0) {
        goto LABEL_39;
      }
      goto LABEL_62;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_38;
  }
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  int v35 = (TSP::Reference *)*((void *)this + 20);
  *a2 = 50;
  unsigned int v36 = *((_DWORD *)v35 + 5);
  if (v36 > 0x7F)
  {
    a2[1] = v36 | 0x80;
    unsigned int v38 = v36 >> 7;
    if (v36 >> 14)
    {
      unint64_t v37 = a2 + 3;
      do
      {
        *(v37 - sub_1000333D0((uint64_t *)this + 1) = v38 | 0x80;
        unsigned int v39 = v38 >> 7;
        ++v37;
        unsigned int v40 = v38 >> 14;
        v38 >>= 7;
      }
      while (v40);
      *(v37 - sub_1000333D0((uint64_t *)this + 1) = v39;
    }
    else
    {
      a2[2] = v38;
      unint64_t v37 = a2 + 3;
    }
  }
  else
  {
    a2[1] = v36;
    unint64_t v37 = a2 + 2;
  }
  a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v35, v37, a3, a4);
  if ((v6 & 0x20) == 0)
  {
LABEL_39:
    if ((v6 & 0x40) == 0) {
      goto LABEL_40;
    }
    goto LABEL_65;
  }
LABEL_62:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v41 = *((unsigned char *)this + 184);
  *a2 = 56;
  a2[1] = v41;
  a2 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_40:
    if ((v6 & 8) == 0) {
      goto LABEL_78;
    }
    goto LABEL_68;
  }
LABEL_65:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v42 = *((unsigned char *)this + 185);
  *a2 = 64;
  a2[1] = v42;
  a2 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_68:
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    uint64_t v43 = (TSP::Reference *)*((void *)this + 21);
    *a2 = 74;
    unsigned int v44 = *((_DWORD *)v43 + 5);
    if (v44 > 0x7F)
    {
      a2[1] = v44 | 0x80;
      unsigned int v46 = v44 >> 7;
      if (v44 >> 14)
      {
        uint64_t v45 = a2 + 3;
        do
        {
          *(v45 - sub_1000333D0((uint64_t *)this + 1) = v46 | 0x80;
          unsigned int v47 = v46 >> 7;
          ++v45;
          unsigned int v48 = v46 >> 14;
          v46 >>= 7;
        }
        while (v48);
        *(v45 - sub_1000333D0((uint64_t *)this + 1) = v47;
      }
      else
      {
        a2[2] = v46;
        uint64_t v45 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v44;
      uint64_t v45 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v43, v45, a3, a4);
  }
LABEL_78:
  int v49 = *((_DWORD *)this + 20);
  if (v49)
  {
    for (int k = 0; k != v49; ++k)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v51 = *(TSP::Reference **)(*((void *)this + 11) + 8 * k + 8);
      *a2 = 82;
      unsigned int v52 = *((_DWORD *)v51 + 5);
      if (v52 > 0x7F)
      {
        a2[1] = v52 | 0x80;
        unsigned int v54 = v52 >> 7;
        if (v52 >> 14)
        {
          uint64_t v53 = a2 + 3;
          do
          {
            *(v53 - sub_1000333D0((uint64_t *)this + 1) = v54 | 0x80;
            unsigned int v55 = v54 >> 7;
            ++v53;
            unsigned int v56 = v54 >> 14;
            v54 >>= 7;
          }
          while (v56);
          *(v53 - sub_1000333D0((uint64_t *)this + 1) = v55;
        }
        else
        {
          a2[2] = v54;
          uint64_t v53 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v52;
        uint64_t v53 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v51, v53, a3, a4);
    }
  }
  int v57 = *((_DWORD *)this + 26);
  if (v57)
  {
    for (int m = 0; m != v57; ++m)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v59 = *(TSP::Reference **)(*((void *)this + 14) + 8 * m + 8);
      *a2 = 90;
      unsigned int v60 = *((_DWORD *)v59 + 5);
      if (v60 > 0x7F)
      {
        a2[1] = v60 | 0x80;
        unsigned int v62 = v60 >> 7;
        if (v60 >> 14)
        {
          uint64_t v61 = a2 + 3;
          do
          {
            *(v61 - sub_1000333D0((uint64_t *)this + 1) = v62 | 0x80;
            unsigned int v63 = v62 >> 7;
            ++v61;
            unsigned int v64 = v62 >> 14;
            v62 >>= 7;
          }
          while (v64);
          *(v61 - sub_1000333D0((uint64_t *)this + 1) = v63;
        }
        else
        {
          a2[2] = v62;
          uint64_t v61 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v60;
        uint64_t v61 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v59, v61, a3, a4);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    uint64_t v65 = (TSP::Reference *)*((void *)this + 22);
    *a2 = 98;
    unsigned int v66 = *((_DWORD *)v65 + 5);
    if (v66 > 0x7F)
    {
      a2[1] = v66 | 0x80;
      unsigned int v68 = v66 >> 7;
      if (v66 >> 14)
      {
        uint64_t v67 = a2 + 3;
        do
        {
          *(v67 - sub_1000333D0((uint64_t *)this + 1) = v68 | 0x80;
          unsigned int v69 = v68 >> 7;
          ++v67;
          unsigned int v70 = v68 >> 14;
          v68 >>= 7;
        }
        while (v70);
        *(v67 - sub_1000333D0((uint64_t *)this + 1) = v69;
      }
      else
      {
        a2[2] = v68;
        uint64_t v67 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v66;
      uint64_t v67 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v65, v67, a3, a4);
  }
  int v71 = *((_DWORD *)this + 32);
  if (v71)
  {
    for (int n = 0; n != v71; ++n)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      int v73 = *(TSP::Range **)(*((void *)this + 17) + 8 * n + 8);
      *a2 = 106;
      unsigned int v74 = *((_DWORD *)v73 + 5);
      if (v74 > 0x7F)
      {
        a2[1] = v74 | 0x80;
        unsigned int v76 = v74 >> 7;
        if (v74 >> 14)
        {
          uint64_t v75 = a2 + 3;
          do
          {
            *(v75 - sub_1000333D0((uint64_t *)this + 1) = v76 | 0x80;
            unsigned int v77 = v76 >> 7;
            ++v75;
            unsigned int v78 = v76 >> 14;
            v76 >>= 7;
          }
          while (v78);
          *(v75 - sub_1000333D0((uint64_t *)this + 1) = v77;
        }
        else
        {
          a2[2] = v76;
          uint64_t v75 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v74;
        uint64_t v75 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Range::_InternalSerialize(v73, v75, a3, a4);
    }
  }
  uint64_t v79 = *((void *)this + 1);
  if ((v79 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v79 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::PasteboardObject::ByteSizeLong(TSP::PasteboardObject *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (TSP::Reference **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      uint64_t v7 = TSP::Reference::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    unsigned int v11 = (TSP::Reference **)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      int v13 = *v11++;
      unsigned int v14 = TSP::Reference::ByteSizeLong(v13);
      v9 += (uint64_t)&v14[(9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6];
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *((int *)this + 20);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *((void *)this + 11);
  if (v17) {
    unsigned int v18 = (TSP::Reference **)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      unsigned int v20 = *v18++;
      int v21 = TSP::Reference::ByteSizeLong(v20);
      v16 += (uint64_t)&v21[(9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6];
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *((int *)this + 26);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *((void *)this + 14);
  if (v24) {
    int v25 = (TSP::Reference **)(v24 + 8);
  }
  else {
    int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      unsigned int v27 = *v25++;
      unsigned int v28 = TSP::Reference::ByteSizeLong(v27);
      v23 += (uint64_t)&v28[(9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6];
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *((int *)this + 32);
  unsigned int v30 = (const google::protobuf::UnknownFieldSet *)(v23 + v29);
  uint64_t v31 = *((void *)this + 17);
  if (v31) {
    unsigned int v32 = (TSP::Range **)(v31 + 8);
  }
  else {
    unsigned int v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      unsigned int v34 = *v32++;
      int v35 = TSP::Range::ByteSizeLong(v34);
      unsigned int v30 = (const google::protobuf::UnknownFieldSet *)((char *)v30
                                                      + (void)v35
                                                      + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6));
      v33 -= 8;
    }
    while (v33);
  }
  int v36 = *((_DWORD *)this + 4);
  if ((v36 & 0x7F) != 0)
  {
    if (v36)
    {
      unsigned int v40 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 18));
      unsigned int v30 = (const google::protobuf::UnknownFieldSet *)&v40[((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v30];
      if ((v36 & 2) == 0)
      {
LABEL_36:
        if ((v36 & 4) == 0) {
          goto LABEL_37;
        }
        goto LABEL_49;
      }
    }
    else if ((v36 & 2) == 0)
    {
      goto LABEL_36;
    }
    unsigned __int8 v41 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 19));
    unsigned int v30 = (const google::protobuf::UnknownFieldSet *)&v41[((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6)
                                                        + 1
                                                        + (void)v30];
    if ((v36 & 4) == 0)
    {
LABEL_37:
      if ((v36 & 8) == 0) {
        goto LABEL_38;
      }
      goto LABEL_50;
    }
LABEL_49:
    unsigned __int8 v42 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 20));
    unsigned int v30 = (const google::protobuf::UnknownFieldSet *)&v42[((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6)
                                                        + 1
                                                        + (void)v30];
    if ((v36 & 8) == 0)
    {
LABEL_38:
      if ((v36 & 0x10) == 0)
      {
LABEL_40:
        unsigned int v38 = (const google::protobuf::UnknownFieldSet *)((char *)v30 + 2);
        if ((v36 & 0x20) == 0) {
          unsigned int v38 = v30;
        }
        if ((v36 & 0x40) != 0) {
          unsigned int v30 = (const google::protobuf::UnknownFieldSet *)((char *)v38 + 2);
        }
        else {
          unsigned int v30 = v38;
        }
        goto LABEL_45;
      }
LABEL_39:
      unint64_t v37 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 22));
      unsigned int v30 = (const google::protobuf::UnknownFieldSet *)&v37[((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6)
                                                          + 1
                                                          + (void)v30];
      goto LABEL_40;
    }
LABEL_50:
    uint64_t v43 = TSP::Reference::ByteSizeLong(*((TSP::Reference **)this + 21));
    unsigned int v30 = (const google::protobuf::UnknownFieldSet *)&v43[((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6)
                                                        + 1
                                                        + (void)v30];
    if ((v36 & 0x10) == 0) {
      goto LABEL_40;
    }
    goto LABEL_39;
  }
LABEL_45:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::PasteboardObject *)((char *)this + 8), v30, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v30;
    return (char *)v30;
  }
}

void TSP::PasteboardObject::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::PasteboardObject::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::PasteboardObject::MergeFrom(void **this, const TSP::PasteboardObject *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    uint64_t v7 = (TSP::Reference **)(*((void *)a2 + 5) + 8);
    uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 3), *((_DWORD *)a2 + 8));
    this = sub_10007220C(v3 + 3, (void ***)v8, v7, v6, *(_DWORD *)v3[5] - *((_DWORD *)v3 + 8));
    signed int v9 = *((_DWORD *)v3 + 8) + v6;
    *((_DWORD *)v3 + 8) = v9;
    uint64_t v10 = (signed int *)v3[5];
    if (*v10 < v9) {
      signed int *v10 = v9;
    }
  }
  unsigned int v11 = *((_DWORD *)a2 + 14);
  if (v11)
  {
    uint64_t v12 = (TSP::Reference **)(*((void *)a2 + 8) + 8);
    int v13 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 6), *((_DWORD *)a2 + 14));
    this = sub_10007220C(v3 + 6, (void ***)v13, v12, v11, *(_DWORD *)v3[8] - *((_DWORD *)v3 + 14));
    signed int v14 = *((_DWORD *)v3 + 14) + v11;
    *((_DWORD *)v3 + 14) = v14;
    uint64_t v15 = (signed int *)v3[8];
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  unsigned int v16 = *((_DWORD *)a2 + 20);
  if (v16)
  {
    uint64_t v17 = (TSP::Reference **)(*((void *)a2 + 11) + 8);
    unsigned int v18 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 9), *((_DWORD *)a2 + 20));
    this = sub_10007220C(v3 + 9, (void ***)v18, v17, v16, *(_DWORD *)v3[11] - *((_DWORD *)v3 + 20));
    signed int v19 = *((_DWORD *)v3 + 20) + v16;
    *((_DWORD *)v3 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v19;
    unsigned int v20 = (signed int *)v3[11];
    if (*v20 < v19) {
      *unsigned int v20 = v19;
    }
  }
  unsigned int v21 = *((_DWORD *)a2 + 26);
  if (v21)
  {
    uint64_t v22 = (TSP::Reference **)(*((void *)a2 + 14) + 8);
    uint64_t v23 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 12), *((_DWORD *)a2 + 26));
    this = sub_10007220C(v3 + 12, (void ***)v23, v22, v21, *(_DWORD *)v3[14] - *((_DWORD *)v3 + 26));
    signed int v24 = *((_DWORD *)v3 + 26) + v21;
    *((_DWORD *)v3 + 2sub_100072180((void *)this + 6) = v24;
    int v25 = (signed int *)v3[14];
    if (*v25 < v24) {
      signed int *v25 = v24;
    }
  }
  unsigned int v26 = *((_DWORD *)a2 + 32);
  if (v26)
  {
    unsigned int v27 = (TSP::Range **)(*((void *)a2 + 17) + 8);
    unsigned int v28 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 15), *((_DWORD *)a2 + 32));
    this = sub_100071A40(v3 + 15, (void ***)v28, v27, v26, *(_DWORD *)v3[17] - *((_DWORD *)v3 + 32));
    signed int v29 = *((_DWORD *)v3 + 32) + v26;
    *((_DWORD *)v3 + 3sub_100050800((void *)this + 2) = v29;
    unsigned int v30 = (signed int *)v3[17];
    if (*v30 < v29) {
      signed int *v30 = v29;
    }
  }
  int v31 = *((_DWORD *)a2 + 4);
  if ((v31 & 0x7F) != 0)
  {
    if (v31)
    {
      *((_DWORD *)v3 + 4) |= 1u;
      unsigned int v32 = (void **)v3[18];
      if (!v32)
      {
        uint64_t v33 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
        if (*v4) {
          uint64_t v33 = (void *)*v33;
        }
        unsigned int v32 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v33);
        v3[18] = v32;
      }
      if (*((void *)a2 + 18)) {
        unsigned int v34 = (const TSP::Reference *)*((void *)a2 + 18);
      }
      else {
        unsigned int v34 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
      }
      this = TSP::Reference::MergeFrom(v32, v34);
      if ((v31 & 2) == 0)
      {
LABEL_21:
        if ((v31 & 4) == 0) {
          goto LABEL_22;
        }
        goto LABEL_45;
      }
    }
    else if ((v31 & 2) == 0)
    {
      goto LABEL_21;
    }
    *((_DWORD *)v3 + 4) |= 2u;
    int v35 = (void **)v3[19];
    if (!v35)
    {
      int v36 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        int v36 = (void *)*v36;
      }
      int v35 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v36);
      v3[19] = v35;
    }
    if (*((void *)a2 + 19)) {
      unint64_t v37 = (const TSP::Reference *)*((void *)a2 + 19);
    }
    else {
      unint64_t v37 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
    }
    this = TSP::Reference::MergeFrom(v35, v37);
    if ((v31 & 4) == 0)
    {
LABEL_22:
      if ((v31 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_53;
    }
LABEL_45:
    *((_DWORD *)v3 + 4) |= 4u;
    unsigned int v38 = (void **)v3[20];
    if (!v38)
    {
      unsigned int v39 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        unsigned int v39 = (void *)*v39;
      }
      unsigned int v38 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v39);
      v3[20] = v38;
    }
    if (*((void *)a2 + 20)) {
      unsigned int v40 = (const TSP::Reference *)*((void *)a2 + 20);
    }
    else {
      unsigned int v40 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
    }
    this = TSP::Reference::MergeFrom(v38, v40);
    if ((v31 & 8) == 0)
    {
LABEL_23:
      if ((v31 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_61;
    }
LABEL_53:
    *((_DWORD *)v3 + 4) |= 8u;
    unsigned __int8 v41 = (void **)v3[21];
    if (!v41)
    {
      unsigned __int8 v42 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        unsigned __int8 v42 = (void *)*v42;
      }
      unsigned __int8 v41 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v42);
      v3[21] = v41;
    }
    if (*((void *)a2 + 21)) {
      uint64_t v43 = (const TSP::Reference *)*((void *)a2 + 21);
    }
    else {
      uint64_t v43 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
    }
    this = TSP::Reference::MergeFrom(v41, v43);
    if ((v31 & 0x10) == 0)
    {
LABEL_24:
      if ((v31 & 0x20) == 0) {
        goto LABEL_25;
      }
      goto LABEL_69;
    }
LABEL_61:
    *((_DWORD *)v3 + 4) |= 0x10u;
    unsigned int v44 = (void **)v3[22];
    if (!v44)
    {
      uint64_t v45 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        uint64_t v45 = (void *)*v45;
      }
      unsigned int v44 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v45);
      v3[22] = v44;
    }
    if (*((void *)a2 + 22)) {
      unsigned int v46 = (const TSP::Reference *)*((void *)a2 + 22);
    }
    else {
      unsigned int v46 = (const TSP::Reference *)&TSP::_Reference_default_instance_;
    }
    this = TSP::Reference::MergeFrom(v44, v46);
    if ((v31 & 0x20) == 0)
    {
LABEL_25:
      if ((v31 & 0x40) == 0)
      {
LABEL_27:
        *((_DWORD *)v3 + 4) |= v31;
        return this;
      }
LABEL_26:
      *((unsigned char *)v3 + 18sub_100050800((void *)this + 5) = *((unsigned char *)a2 + 185);
      goto LABEL_27;
    }
LABEL_69:
    *((unsigned char *)v3 + 184) = *((unsigned char *)a2 + 184);
    if ((v31 & 0x40) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  return this;
}

void TSP::PasteboardObject::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::PasteboardObject::Clear(this);
    TSP::PasteboardObject::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::PasteboardObject::IsInitialized(TSP::PasteboardObject *this)
{
  uint64_t v1 = *((unsigned int *)this + 8);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*((void *)this + 5) + 8 * v1--);
    if ((*(unsigned char *)(v2 + 16) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v3 = *((unsigned int *)this + 14);
  while ((int)v3 >= 1)
  {
    uint64_t v4 = *(void *)(*((void *)this + 8) + 8 * v3--);
    if ((*(unsigned char *)(v4 + 16) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *((unsigned int *)this + 20);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = *(void *)(*((void *)this + 11) + 8 * v5--);
    if ((*(unsigned char *)(v6 + 16) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v7 = *((unsigned int *)this + 26);
  while ((int)v7 >= 1)
  {
    uint64_t v8 = *(void *)(*((void *)this + 14) + 8 * v7--);
    if ((*(unsigned char *)(v8 + 16) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v9 = *((unsigned int *)this + 32);
  while ((int)v9 >= 1)
  {
    uint64_t v10 = *(void *)(*((void *)this + 17) + 8 * v9--);
    if ((~*(_DWORD *)(v10 + 16) & 3) != 0) {
      return 0;
    }
  }
  int v11 = *((_DWORD *)this + 4);
  return ((v11 & 1) == 0 || (*(unsigned char *)(*((void *)this + 18) + 16) & 1) != 0)
      && ((v11 & 2) == 0 || (*(unsigned char *)(*((void *)this + 19) + 16) & 1) != 0)
      && ((v11 & 4) == 0 || (*(unsigned char *)(*((void *)this + 20) + 16) & 1) != 0)
      && ((v11 & 8) == 0 || (*(unsigned char *)(*((void *)this + 21) + 16) & 1) != 0)
      && ((v11 & 0x10) == 0 || (*(unsigned char *)(*((void *)this + 22) + 16) & 1) != 0);
}

uint64_t TSP::PasteboardObject::GetMetadata(TSP::PasteboardObject *this)
{
  return off_1001EA298[56];
}

uint64_t TSP::ObjectCollection::ObjectCollection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CABF8;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 1sub_100072180((void *)this + 6) = a2;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 3sub_100050800((void *)this + 2) = 0;
  *(_DWORD *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_ObjectCollection_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ObjectCollection_TSPMessages_2eproto);
  }
  return a1;
}

void sub_100067544(_Unwind_Exception *a1)
{
  sub_100072180(v1);
  _Unwind_Resume(a1);
}

void TSP::ObjectCollection::~ObjectCollection(TSP::ObjectCollection *this)
{
}

{
  uint64_t vars8;

  TSP::ObjectCollection::~ObjectCollection(this);
  operator delete();
}

uint64_t TSP::ObjectCollection::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ObjectCollection::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::Reference **)((char *)this[4] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::Reference::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (unint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_100035820(v5);
  }
  return this;
}

google::protobuf::internal *TSP::ObjectCollection::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v22 = a2;
  if ((sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = (google::protobuf::internal *)((char *)v22 + 1);
      unsigned int v7 = *(unsigned __int8 *)v22;
      if ((*(char *)v22 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v22, (const char *)(v8 - 128));
      uint64_t v22 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      char v6 = TagFallback;
      unsigned int v7 = v20;
LABEL_7:
      if (v7 == 10)
      {
        int v11 = (google::protobuf::internal *)((char *)v6 - 1);
        while (1)
        {
          uint64_t v12 = (google::protobuf::internal *)((char *)v11 + 1);
          uint64_t v22 = (google::protobuf::internal *)((char *)v11 + 1);
          int v13 = *(int **)(a1 + 32);
          if (!v13) {
            break;
          }
          uint64_t v14 = *(int *)(a1 + 24);
          int v15 = *v13;
          if ((int)v14 >= *v13)
          {
            if (v15 == *(_DWORD *)(a1 + 28))
            {
LABEL_22:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 16), v15 + 1);
              int v13 = *(int **)(a1 + 32);
              int v15 = *v13;
            }
            *int v13 = v15 + 1;
            uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(*(void *)(a1 + 16));
            uint64_t v17 = *(void *)(a1 + 32);
            uint64_t v18 = *(int *)(a1 + 24);
            *(_DWORD *)(a1 + 24) = v18 + 1;
            *(void *)(v17 + 8 * v18 + 8) = v16;
            uint64_t v12 = v22;
            goto LABEL_24;
          }
          *(_DWORD *)(a1 + 24) = v14 + 1;
          uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_24:
          int v11 = sub_100034100(a3, v16, v12);
          uint64_t v22 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
            goto LABEL_27;
          }
        }
        int v15 = *(_DWORD *)(a1 + 28);
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
        return v22;
      }
      if (*v5)
      {
        uint64_t v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        uint64_t v10 = sub_10003562C((unint64_t *)(a1 + 8));
        char v6 = v22;
      }
      uint64_t v22 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v22) {
        return 0;
      }
LABEL_27:
      if (sub_1000355B8(a3, &v22, *(_DWORD *)(a3 + 92))) {
        return v22;
      }
    }
    char v6 = (google::protobuf::internal *)((char *)v22 + 2);
LABEL_6:
    uint64_t v22 = v6;
    goto LABEL_7;
  }
  return v22;
}

const google::protobuf::UnknownFieldSet *TSP::ObjectCollection::_InternalSerialize(TSP::ObjectCollection *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 6);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      unsigned int v8 = *(TSP::Reference **)(*((void *)this + 4) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          uint64_t v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          uint64_t v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        uint64_t v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v8, v10, a3, a4);
    }
  }
  uint64_t v14 = *((void *)this + 1);
  if ((v14 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v14 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::ObjectCollection::ByteSizeLong(TSP::ObjectCollection *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 6);
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    uint64_t v4 = (TSP::Reference **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::Reference::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::ObjectCollection *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void TSP::ObjectCollection::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ObjectCollection::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::ObjectCollection::MergeFrom(void **this, const TSP::ObjectCollection *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    int v6 = (TSP::Reference **)(*((void *)a2 + 4) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 2), v5);
    this = sub_10007220C(v3 + 2, (void ***)v7, v6, v5, *(_DWORD *)v3[4] - *((_DWORD *)v3 + 6));
    signed int v8 = *((_DWORD *)v3 + 6) + v5;
    *((_DWORD *)v3 + sub_100072180((void *)this + 6) = v8;
    unsigned int v9 = (signed int *)v3[4];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  return this;
}

void TSP::ObjectCollection::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::ObjectCollection::Clear(this);
    TSP::ObjectCollection::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::ObjectCollection::IsInitialized(TSP::ObjectCollection *this)
{
  uint64_t v1 = *((unsigned int *)this + 6);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 4) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 1) != 0);
  return v2 < 1;
}

uint64_t TSP::ObjectCollection::GetMetadata(TSP::ObjectCollection *this)
{
  return off_1001EA298[58];
}

uint64_t TSP::ObjectContainer::ObjectContainer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CACA8;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 1sub_100072180((void *)this + 6) = 0;
  *(void *)(a1 + 3sub_100072180((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  if (atomic_load_explicit(scc_info_ObjectContainer_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ObjectContainer_TSPMessages_2eproto);
  }
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_100067C8C(_Unwind_Exception *a1)
{
  sub_100072180(v1);
  _Unwind_Resume(a1);
}

void TSP::ObjectContainer::~ObjectContainer(TSP::ObjectContainer *this)
{
}

{
  uint64_t vars8;

  TSP::ObjectContainer::~ObjectContainer(this);
  operator delete();
}

uint64_t TSP::ObjectContainer::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::ObjectContainer::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::Reference **)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::Reference::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_100072180((void *)this + 2) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::ObjectContainer::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  signed int v29 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v29 + 1);
      unsigned int v9 = *(unsigned __int8 *)v29;
      if ((*(char *)v29 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v29, (const char *)(v10 - 128));
      signed int v29 = TagFallback;
      if (!TagFallback) {
        goto LABEL_46;
      }
      signed int v8 = TagFallback;
      unsigned int v9 = v26;
LABEL_8:
      if (v9 >> 3 == 2)
      {
        if (v9 != 18)
        {
LABEL_13:
          if (v9) {
            BOOL v12 = (v9 & 7) == 4;
          }
          else {
            BOOL v12 = 1;
          }
          if (v12)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            unsigned int v13 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            unsigned int v13 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v29;
          }
          signed int v29 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v13, v8);
          if (!v29)
          {
LABEL_46:
            signed int v29 = 0;
            goto LABEL_2;
          }
          goto LABEL_38;
        }
        uint64_t v14 = (google::protobuf::internal *)((char *)v8 - 1);
        while (2)
        {
          int v15 = (google::protobuf::internal *)((char *)v14 + 1);
          signed int v29 = (google::protobuf::internal *)((char *)v14 + 1);
          uint64_t v16 = *(int **)(a1 + 40);
          if (v16)
          {
            uint64_t v17 = *(int *)(a1 + 32);
            int v18 = *v16;
            if ((int)v17 < *v16)
            {
              *(_DWORD *)(a1 + 3sub_100072180((void *)this + 2) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
              goto LABEL_30;
            }
            if (v18 == *(_DWORD *)(a1 + 36))
            {
LABEL_28:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v18 + 1);
              uint64_t v16 = *(int **)(a1 + 40);
              int v18 = *v16;
            }
            int *v16 = v18 + 1;
            uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(*(void *)(a1 + 24));
            uint64_t v20 = *(void *)(a1 + 40);
            uint64_t v21 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_100072180((void *)this + 2) = v21 + 1;
            *(void *)(v20 + 8 * v21 + 8) = v19;
            int v15 = v29;
LABEL_30:
            uint64_t v14 = sub_100034100(a3, v19, v15);
            signed int v29 = v14;
            if (!v14) {
              goto LABEL_46;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(unsigned char *)v14 != 18) {
              goto LABEL_38;
            }
            continue;
          }
          break;
        }
        int v18 = *(_DWORD *)(a1 + 36);
        goto LABEL_28;
      }
      if (v9 >> 3 != 1 || v9 != 8) {
        goto LABEL_13;
      }
      uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 1);
      LODWORD(v2sub_100072180((void *)this + 3) = *(unsigned __int8 *)v8;
      if ((*(char *)v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v24 = *(char *)v22;
      uint64_t v23 = (const char *)(v23 + (v24 << 7) - 128);
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_37:
        signed int v29 = v22;
        *(_DWORD *)(a1 + 48) = v23;
        int v5 = 1;
        goto LABEL_38;
      }
      unsigned int v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v23);
      signed int v29 = v27;
      *(_DWORD *)(a1 + 48) = v28;
      int v5 = 1;
      if (!v27) {
        goto LABEL_46;
      }
LABEL_38:
      if (sub_1000355B8(a3, &v29, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    signed int v8 = (google::protobuf::internal *)((char *)v29 + 2);
LABEL_7:
    signed int v29 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

const google::protobuf::UnknownFieldSet *TSP::ObjectContainer::_InternalSerialize(TSP::ObjectContainer *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned int v6 = *((_DWORD *)this + 12);
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unsigned int v8 = v7 >> 7;
          ++a2;
          unsigned int v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  int v10 = *((_DWORD *)this + 8);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      BOOL v12 = *(TSP::Reference **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v13 = *((_DWORD *)v12 + 5);
      if (v13 > 0x7F)
      {
        a2[1] = v13 | 0x80;
        unsigned int v15 = v13 >> 7;
        if (v13 >> 14)
        {
          uint64_t v14 = a2 + 3;
          do
          {
            *(v14 - sub_1000333D0((uint64_t *)this + 1) = v15 | 0x80;
            unsigned int v16 = v15 >> 7;
            ++v14;
            unsigned int v17 = v15 >> 14;
            v15 >>= 7;
          }
          while (v17);
          *(v14 - sub_1000333D0((uint64_t *)this + 1) = v16;
        }
        else
        {
          a2[2] = v15;
          uint64_t v14 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v13;
        uint64_t v14 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v12, v14, a3, a4);
    }
  }
  uint64_t v18 = *((void *)this + 1);
  if ((v18 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v18 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::ObjectContainer::ByteSizeLong(TSP::ObjectContainer *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (TSP::Reference **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      unsigned int v6 = *v4++;
      unsigned int v7 = TSP::Reference::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 16)) {
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
  }
                                                   + ((9 * (__clz(*((_DWORD *)this + 12) | 1) ^ 0x1F) + 73) >> 6)
                                                   + 1);
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::ObjectContainer *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::ObjectContainer::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::ObjectContainer::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::ObjectContainer::MergeFrom(void **this, const TSP::ObjectContainer *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    unsigned int v6 = (TSP::Reference **)(*((void *)a2 + 5) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 3), *((_DWORD *)a2 + 8));
    this = sub_10007220C(v3 + 3, (void ***)v7, v6, v5, *(_DWORD *)v3[5] - *((_DWORD *)v3 + 8));
    signed int v8 = *((_DWORD *)v3 + 8) + v5;
    *((_DWORD *)v3 + 8) = v8;
    unsigned int v9 = (signed int *)v3[5];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  if (*((unsigned char *)a2 + 16))
  {
    int v10 = *((_DWORD *)a2 + 12);
    *((_DWORD *)v3 + 4) |= 1u;
    *((_DWORD *)v3 + 1sub_100072180((void *)this + 2) = v10;
  }
  return this;
}

void TSP::ObjectContainer::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::ObjectContainer::Clear(this);
    TSP::ObjectContainer::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::ObjectContainer::IsInitialized(TSP::ObjectContainer *this)
{
  uint64_t v1 = *((unsigned int *)this + 8);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 5) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 1) != 0);
  return v2 < 1;
}

uint64_t TSP::ObjectContainer::GetMetadata(TSP::ObjectContainer *this)
{
  return off_1001EA298[60];
}

void TSP::DataAttributes::~DataAttributes(TSP::DataAttributes *this)
{
}

{
  uint64_t vars8;

  TSP::DataAttributes::~DataAttributes(this);
  operator delete();
}

uint64_t TSP::DataAttributes::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::DataAttributes::Clear(TSP::DataAttributes *this)
{
  BOOL result = (google::protobuf::Arena **)google::protobuf::internal::ExtensionSet::Clear((unsigned char *)this + 16);
  char v4 = *((unsigned char *)this + 8);
  uint64_t v3 = (unint64_t *)((char *)this + 8);
  if (v4)
  {
    return sub_100035820(v3);
  }
  return result;
}

google::protobuf::internal *TSP::DataAttributes::_InternalParse(uint64_t a1, google::protobuf::internal *a2, int32x2_t *a3)
{
  unsigned int v15 = a2;
  if ((sub_1000355B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    unsigned int v5 = (unint64_t *)(a1 + 8);
    unsigned int v6 = (google::protobuf::internal::ExtensionSet *)(a1 + 16);
    while (1)
    {
      unsigned int v7 = (google::protobuf::internal *)((char *)v15 + 1);
      LODWORD(v8) = *(unsigned __int8 *)v15;
      if ((*(char *)v15 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      signed int v8 = (const char *)(v8 + (*(unsigned __int8 *)v7 << 7) - 128);
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v15, v8);
      unsigned int v15 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unsigned int v7 = TagFallback;
LABEL_7:
      if (v8) {
        BOOL v9 = (v8 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        a3[10].i32[0] = v8 - 1;
        return v15;
      }
      unint64_t v10 = v8;
      if (v8 < 0x320)
      {
        if (*v5)
        {
          BOOL v12 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          BOOL v12 = sub_10003562C(v5);
          unsigned int v7 = v15;
        }
        unsigned int v11 = google::protobuf::internal::UnknownFieldParse(v10, (google::protobuf::UnknownFieldSet *)v12, v7);
      }
      else
      {
        unsigned int v11 = (google::protobuf::internal *)google::protobuf::internal::ExtensionSet::ParseField(v6, v8, v7, (uint64_t)&TSP::_DataAttributes_default_instance_, v5, a3);
      }
      unsigned int v15 = v11;
      if (!v11) {
        return 0;
      }
      if (sub_1000355B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    unsigned int v7 = (google::protobuf::internal *)((char *)v15 + 2);
LABEL_6:
    unsigned int v15 = v7;
    goto LABEL_7;
  }
  return v15;
}

const google::protobuf::UnknownFieldSet *TSP::DataAttributes::_InternalSerialize(TSP::DataAttributes *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  BOOL result = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::_InternalSerialize((TSP::DataAttributes *)((char *)this + 16), 100, 0x20000000, a2, a3);
  uint64_t v7 = *((void *)this + 1);
  if (v7)
  {
    return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8), result, a3, v6);
  }
  return result;
}

char *TSP::DataAttributes::ByteSizeLong(TSP::DataAttributes *this)
{
  int v2 = (const google::protobuf::UnknownFieldSet *)google::protobuf::internal::ExtensionSet::ByteSize((TSP::DataAttributes *)((char *)this + 16));
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::DataAttributes *)((char *)this + 8), v2, (_DWORD *)this + 10);
  }
  else
  {
    *((_DWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v2;
    return (char *)v2;
  }
}

void TSP::DataAttributes::MergeFrom(TSP::DataAttributes *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::DataAttributes::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, this, v5);
  }
}

void TSP::DataAttributes::MergeFrom(TSP::DataAttributes *this, const TSP::DataAttributes *a2)
{
  google::protobuf::internal::ExtensionSet::MergeFrom((TSP::DataAttributes *)((char *)this + 16), (const TSP::DataAttributes *)((char *)a2 + 16));
  uint64_t v4 = *((void *)a2 + 1);
  if (v4)
  {
    sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
}

void TSP::DataAttributes::CopyFrom(TSP::DataAttributes *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::DataAttributes::Clear(this);
    TSP::DataAttributes::MergeFrom(this, a2);
  }
}

uint64_t TSP::DataAttributes::IsInitialized(TSP::DataAttributes *this)
{
  return google::protobuf::internal::ExtensionSet::IsInitialized((TSP::DataAttributes *)((char *)this + 16));
}

uint64_t TSP::DataAttributes::GetMetadata(TSP::DataAttributes *this)
{
  return off_1001EA298[62];
}

void *TSP::LargeArraySegment::LargeArraySegment(void *a1, uint64_t a2)
{
  *a1 = off_1001CAE08;
  a1[1] = a2;
  a1[2] = 0;
  if (atomic_load_explicit(scc_info_LargeArraySegment_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeArraySegment_TSPMessages_2eproto);
  }
  a1[3] = &google::protobuf::internal::fixed_address_empty_string;
  a1[4] = 0;
  return a1;
}

void TSP::LargeArraySegment::~LargeArraySegment(TSP::LargeArraySegment *this)
{
  uint64_t v1 = *((void *)this + 3);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::LargeArraySegment::~LargeArraySegment(this);
  operator delete();
}

uint64_t TSP::LargeArraySegment::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeArraySegment::Clear(TSP::LargeArraySegment *this)
{
  int v1 = *((_DWORD *)this + 4);
  if (v1)
  {
    unint64_t v2 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 2sub_100072180((void *)this + 3) = 0;
    }
  }
  if ((v1 & 6) != 0) {
    *((void *)this + 4) = 0;
  }
  char v4 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_100072180((void *)this + 2) = 0;
  if (v4) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::LargeArraySegment::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v31 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      signed int v8 = (google::protobuf::internal *)((char *)v31 + 1);
      unsigned int v9 = *(unsigned __int8 *)v31;
      if ((*(char *)v31 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((*(char *)v8 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v31, (const char *)(v10 - 128));
      int v31 = TagFallback;
      if (!TagFallback) {
        goto LABEL_46;
      }
      signed int v8 = TagFallback;
      unsigned int v9 = v26;
LABEL_8:
      unsigned int v11 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 == 26)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v16 = *(void *)(a1 + 8);
          unsigned int v17 = (google::protobuf::Arena *)(v16 & 0xFFFFFFFFFFFFFFFELL);
          if (v16) {
            unsigned int v17 = *(google::protobuf::Arena **)v17;
          }
          uint64_t v18 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 24), v17);
          unsigned int v15 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v18, (std::string::value_type *)v31, a3);
        }
        else
        {
LABEL_14:
          if (v9) {
            BOOL v13 = (v9 & 7) == 4;
          }
          else {
            BOOL v13 = 1;
          }
          if (v13)
          {
            *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
            goto LABEL_2;
          }
          if (*v7)
          {
            uint64_t v14 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else
          {
            uint64_t v14 = sub_10003562C((unint64_t *)(a1 + 8));
            signed int v8 = v31;
          }
          unsigned int v15 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v14, v8);
        }
        int v31 = v15;
        if (!v15) {
          goto LABEL_46;
        }
        goto LABEL_36;
      }
      if (v11 == 2)
      {
        if (v9 != 16) {
          goto LABEL_14;
        }
        v5 |= 4u;
        uint64_t v19 = (google::protobuf::internal *)((char *)v8 + 1);
        LODWORD(v2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v21 = *(char *)v19;
        uint64_t v20 = (const char *)(v20 + (v21 << 7) - 128);
        if ((v21 & 0x80000000) == 0)
        {
          uint64_t v19 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_31:
          int v31 = v19;
          *(_DWORD *)(a1 + 3sub_100072180((void *)this + 6) = v20;
          goto LABEL_36;
        }
        unsigned int v27 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v20);
        int v31 = v27;
        *(_DWORD *)(a1 + 3sub_100072180((void *)this + 6) = v28;
        if (!v27) {
          goto LABEL_46;
        }
      }
      else
      {
        if (v11 != 1 || v9 != 8) {
          goto LABEL_14;
        }
        v5 |= 2u;
        uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 1);
        unint64_t v23 = *(unsigned __int8 *)v8;
        if ((*(char *)v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v24 = *(char *)v22;
        unint64_t v23 = v23 + (v24 << 7) - 128;
        if ((v24 & 0x80000000) == 0)
        {
          uint64_t v22 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_35:
          int v31 = v22;
          *(unsigned char *)(a1 + 3sub_100072180((void *)this + 2) = v23 != 0;
          goto LABEL_36;
        }
        signed int v29 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v23);
        int v31 = v29;
        *(unsigned char *)(a1 + 3sub_100072180((void *)this + 2) = v30 != 0;
        if (!v29)
        {
LABEL_46:
          int v31 = 0;
          goto LABEL_2;
        }
      }
LABEL_36:
      if (sub_1000355B8(a3, &v31, *(_DWORD *)(a3 + 92))) {
        goto LABEL_2;
      }
    }
    signed int v8 = (google::protobuf::internal *)((char *)v31 + 2);
LABEL_7:
    int v31 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

const google::protobuf::UnknownFieldSet *TSP::LargeArraySegment::_InternalSerialize(TSP::LargeArraySegment *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  char v4 = a2;
  int v6 = *((_DWORD *)this + 4);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned __int8 v9 = *((unsigned char *)this + 32);
    unsigned __int8 *v4 = 8;
    v4[1] = v9;
    v4 += 2;
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, v4);
  }
  unsigned int v10 = *((_DWORD *)this + 9);
  unsigned __int8 *v4 = 16;
  if (v10 <= 0x7F)
  {
    v4[1] = v10;
    v4 += 2;
    if ((v6 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_4:
    char v4 = sub_100034480(a3, 3, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), v4);
    goto LABEL_5;
  }
  v4[1] = v10 | 0x80;
  unsigned int v11 = v10 >> 7;
  if (v10 >> 14)
  {
    v4 += 3;
    do
    {
      *(v4 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      ++v4;
      unsigned int v13 = v11 >> 14;
      v11 >>= 7;
    }
    while (v13);
    *(v4 - sub_1000333D0((uint64_t *)this + 1) = v12;
    if (v6) {
      goto LABEL_4;
    }
  }
  else
  {
    v4[2] = v11;
    v4 += 3;
    if (v6) {
      goto LABEL_4;
    }
  }
LABEL_5:
  uint64_t v7 = *((void *)this + 1);
  if ((v7 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v7 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *TSP::LargeArraySegment::ByteSizeLong(TSP::LargeArraySegment *this)
{
  int v1 = *((_DWORD *)this + 4);
  if ((v1 & 7) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = (const google::protobuf::UnknownFieldSet *)(v2 + 2);
    }
    else {
      uint64_t v3 = (const google::protobuf::UnknownFieldSet *)v2;
    }
    if ((v1 & 4) != 0) {
      uint64_t v3 = (const google::protobuf::UnknownFieldSet *)((char *)v3
    }
                                                     + ((9 * (__clz(*((_DWORD *)this + 9) | 1) ^ 0x1F) + 73) >> 6)
                                                     + 1);
  }
  else
  {
    uint64_t v3 = 0;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::LargeArraySegment *)((char *)this + 8), v3, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + sub_100050800((void *)this + 5) = v3;
  return (char *)v3;
}

void TSP::LargeArraySegment::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeArraySegment::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::LargeArraySegment::MergeFrom(std::string *this, const TSP::LargeArraySegment *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v5 = *((_DWORD *)a2 + 4);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      signed int v8 = (google::protobuf::Arena *)(size & 0xFFFFFFFFFFFFFFFELL);
      if (size) {
        signed int v8 = *(google::protobuf::Arena **)v8;
      }
      this = google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1], v6, v8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0)
        {
LABEL_8:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v5;
          return this;
        }
LABEL_7:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *((_DWORD *)a2 + 9);
        goto LABEL_8;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    v3[1].__r_.__value_.__s.__data_[8] = *((unsigned char *)a2 + 32);
    if ((v5 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  return this;
}

void TSP::LargeArraySegment::CopyFrom(TSP::LargeArraySegment *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::LargeArraySegment::Clear(this);
    TSP::LargeArraySegment::MergeFrom((std::string *)this, a2);
  }
}

uint64_t TSP::LargeArraySegment::IsInitialized(TSP::LargeArraySegment *this)
{
  return 1;
}

uint64_t TSP::LargeArraySegment::GetMetadata(TSP::LargeArraySegment *this)
{
  return off_1001EA298[64];
}

void *TSP::LargeNumberArraySegment::LargeNumberArraySegment(void *a1, uint64_t a2)
{
  a1[4] = a2;
  *a1 = off_1001CAEB8;
  a1[1] = a2;
  a1[2] = 0;
  a1[3] = 0;
  if (atomic_load_explicit(scc_info_LargeNumberArraySegment_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeNumberArraySegment_TSPMessages_2eproto);
  }
  a1[5] = 0;
  return a1;
}

void sub_10006917C(_Unwind_Exception *exception_object)
{
  if (*(int *)(v1 + 28) >= 1) {
    sub_100163A7C(v2);
  }
  _Unwind_Resume(exception_object);
}

void TSP::LargeNumberArraySegment::~LargeNumberArraySegment(TSP::LargeNumberArraySegment *this)
{
  if (this != (TSP::LargeNumberArraySegment *)TSP::_LargeNumberArraySegment_default_instance_)
  {
    uint64_t v2 = (TSP::LargeArraySegment *)*((void *)this + 5);
    if (v2)
    {
      TSP::LargeArraySegment::~LargeArraySegment(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  if (*((int *)this + 7) >= 1)
  {
    uint64_t v3 = *((void *)this + 4);
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t v4 = (void *)(v3 - 8);
    if (!v5) {
      operator delete(v4);
    }
  }
}

{
  uint64_t vars8;

  TSP::LargeNumberArraySegment::~LargeNumberArraySegment(this);
  operator delete();
}

uint64_t TSP::LargeNumberArraySegment::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeNumberArraySegment::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  *((_DWORD *)this + sub_100072180((void *)this + 6) = 0;
  if ((_BYTE)this[2]) {
    this = TSP::LargeArraySegment::Clear(this[5]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::LargeNumberArraySegment::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  int v24 = a2;
  if ((sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v7 = (unsigned int *)(a1 + 24);
    signed int v8 = (void *)(a1 + 8);
    while (1)
    {
      unsigned __int8 v9 = (google::protobuf::internal *)((char *)v24 + 1);
      unsigned int v10 = *(unsigned __int8 *)v24;
      if ((*(char *)v24 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v11 = v10 + (*(unsigned __int8 *)v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((*(char *)v9 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v24, (const char *)(v11 - 128));
      int v24 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unsigned __int8 v9 = TagFallback;
      unsigned int v10 = v23;
LABEL_8:
      if (v10 >> 3 == 2)
      {
        if (v10 == 17)
        {
          uint64_t v16 = (char *)v9 - 1;
          unsigned int v17 = *v7;
          do
          {
            uint64_t v18 = (google::protobuf::internal *)(v16 + 1);
            int v24 = (google::protobuf::internal *)(v16 + 1);
            uint64_t v19 = *(void *)(v16 + 1);
            if (v17 == *(_DWORD *)(a1 + 28))
            {
              google::protobuf::RepeatedField<double>::Reserve((unsigned int *)(a1 + 24), v17 + 1);
              *(void *)(*(void *)(a1 + 32) + 8 * v17) = v19;
              uint64_t v18 = v24;
            }
            else
            {
              *(void *)(*(void *)(a1 + 32) + 8 * v17) = v19;
            }
            *uint64_t v7 = ++v17;
            uint64_t v16 = (char *)v18 + 8;
            int v24 = (google::protobuf::internal *)((char *)v18 + 8);
          }
          while (*(void *)a3 > (unint64_t)v18 + 8 && *v16 == 17);
          goto LABEL_34;
        }
        if (v10 == 18)
        {
          unsigned int v15 = (google::protobuf::internal *)google::protobuf::internal::PackedDoubleParser((google::protobuf::internal *)(a1 + 24), v9, (const char *)a3, v5);
          goto LABEL_33;
        }
      }
      else if (v10 >> 3 == 1 && v10 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v20 = *(void *)(a1 + 40);
        if (!v20)
        {
          int v21 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFELL);
          if (*v8) {
            int v21 = (void *)*v21;
          }
          uint64_t v20 = google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArraySegment>(v21);
          *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v20;
          unsigned __int8 v9 = v24;
        }
        unsigned int v15 = sub_1000694E4(a3, v20, v9);
        goto LABEL_33;
      }
      if (v10) {
        BOOL v13 = (v10 & 7) == 4;
      }
      else {
        BOOL v13 = 1;
      }
      if (v13)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v10 - 1;
        return v24;
      }
      if (*v8)
      {
        uint64_t v14 = (google::protobuf::Arena **)((*v8 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        uint64_t v14 = sub_10003562C((unint64_t *)(a1 + 8));
        unsigned __int8 v9 = v24;
      }
      unsigned int v15 = google::protobuf::internal::UnknownFieldParse(v10, (google::protobuf::UnknownFieldSet *)v14, v9);
LABEL_33:
      int v24 = v15;
      if (!v15) {
        return 0;
      }
LABEL_34:
      if (sub_1000355B8(a3, &v24, *(_DWORD *)(a3 + 92))) {
        return v24;
      }
    }
    unsigned __int8 v9 = (google::protobuf::internal *)((char *)v24 + 2);
LABEL_7:
    int v24 = v9;
    goto LABEL_8;
  }
  return v24;
}

google::protobuf::internal *sub_1000694E4(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    unint64_t v6 = result;
  }
  else
  {
    unint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::LargeArraySegment::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::LargeNumberArraySegment::_InternalSerialize(TSP::LargeNumberArraySegment *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v6 = (TSP::LargeArraySegment *)*((void *)this + 5);
    *a2 = 10;
    unsigned int v7 = *((_DWORD *)v6 + 5);
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unsigned int v9 = v7 >> 7;
      if (v7 >> 14)
      {
        uint64_t v8 = a2 + 3;
        do
        {
          *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
          unsigned int v10 = v9 >> 7;
          ++v8;
          unsigned int v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
      }
      else
      {
        a2[2] = v9;
        uint64_t v8 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v7;
      uint64_t v8 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::LargeArraySegment::_InternalSerialize(v6, v8, a3);
  }
  uint64_t v12 = *((unsigned int *)this + 6);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v15 = *(void *)(*((void *)this + 4) + v13);
      *a2 = 17;
      *(void *)(a2 + sub_1000333D0((uint64_t *)this + 1) = v15;
      a2 += 9;
      v13 += 8;
    }
    while (v14 != v13);
  }
  uint64_t v16 = *((void *)this + 1);
  if ((v16 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v16 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::LargeNumberArraySegment::ByteSizeLong(TSP::LargeArraySegment **this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)(9 * *((unsigned int *)this + 6));
  if ((_BYTE)this[2])
  {
    char v3 = TSP::LargeArraySegment::ByteSizeLong(this[5]);
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v3[(void)v2
                                                      + 1
                                                      + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::LargeNumberArraySegment::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeNumberArraySegment::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::LargeNumberArraySegment::MergeFrom(std::string *this, const TSP::LargeNumberArraySegment *a2)
{
  char v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  int v6 = *((_DWORD *)a2 + 6);
  if (v6)
  {
    uint64_t data_low = SLODWORD(v3[1].__r_.__value_.__l.__data_);
    google::protobuf::RepeatedField<double>::Reserve((unsigned int *)&v3[1], data_low + v6);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v3[1].__r_.__value_.__l.__data_) += *((_DWORD *)a2 + 6);
    this = (std::string *)memcpy((void *)(size + 8 * data_low), *((const void **)a2 + 4), 8 * *((int *)a2 + 6));
  }
  if (*((unsigned char *)a2 + 16))
  {
    unsigned int v9 = (const TSP::LargeArraySegment *)*((void *)a2 + 5);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    unsigned int v10 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v10)
    {
      unsigned int v11 = (void *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
      if (*p_size) {
        unsigned int v11 = (void *)*v11;
      }
      unsigned int v10 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArraySegment>(v11);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v10;
      unsigned int v9 = (const TSP::LargeArraySegment *)*((void *)a2 + 5);
    }
    if (v9) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = (const TSP::LargeArraySegment *)TSP::_LargeArraySegment_default_instance_;
    }
    return TSP::LargeArraySegment::MergeFrom(v10, v12);
  }
  return this;
}

void TSP::LargeNumberArraySegment::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::LargeNumberArraySegment::Clear(this);
    TSP::LargeNumberArraySegment::MergeFrom((std::string *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::LargeNumberArraySegment::IsInitialized(TSP::LargeNumberArraySegment *this)
{
  return 1;
}

uint64_t TSP::LargeNumberArraySegment::GetMetadata(TSP::LargeNumberArraySegment *this)
{
  return off_1001EA298[66];
}

void TSP::LargeStringArraySegment_OptionalElement::~LargeStringArraySegment_OptionalElement(TSP::LargeStringArraySegment_OptionalElement *this)
{
  uint64_t v1 = *((void *)this + 3);
  if ((uint64_t *)v1 != &google::protobuf::internal::fixed_address_empty_string)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    operator delete();
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::LargeStringArraySegment_OptionalElement::~LargeStringArraySegment_OptionalElement(this);
  operator delete();
}

uint64_t TSP::LargeStringArraySegment_OptionalElement::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeStringArraySegment_OptionalElement::Clear(TSP::LargeStringArraySegment_OptionalElement *this)
{
  if (*((unsigned char *)this + 16))
  {
    unint64_t v1 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 2sub_100072180((void *)this + 3) = 0;
    }
  }
  char v3 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + sub_100072180((void *)this + 2) = 0;
  if (v3) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::LargeStringArraySegment_OptionalElement::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  uint64_t v18 = a2;
  if ((sub_1000355B8(a3, &v18, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      int v6 = (google::protobuf::internal *)((char *)v18 + 1);
      unsigned int v7 = *(unsigned __int8 *)v18;
      if ((*(char *)v18 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v18, (const char *)(v8 - 128));
      uint64_t v18 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      int v6 = TagFallback;
      unsigned int v7 = v16;
LABEL_7:
      if (v7 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
        if (v12) {
          uint64_t v13 = *(google::protobuf::Arena **)v13;
        }
        uint64_t v14 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)(a1 + 24), v13);
        unsigned int v11 = (google::protobuf::internal *)google::protobuf::internal::InlineGreedyStringParser(v14, (std::string::value_type *)v18, a3);
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
          return v18;
        }
        if (*v5)
        {
          unsigned int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          unsigned int v10 = sub_10003562C((unint64_t *)(a1 + 8));
          int v6 = v18;
        }
        unsigned int v11 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      }
      uint64_t v18 = v11;
      if (!v11) {
        return 0;
      }
      if (sub_1000355B8(a3, &v18, *(_DWORD *)(a3 + 92))) {
        return v18;
      }
    }
    int v6 = (google::protobuf::internal *)((char *)v18 + 2);
LABEL_6:
    uint64_t v18 = v6;
    goto LABEL_7;
  }
  return v18;
}

const google::protobuf::UnknownFieldSet *TSP::LargeStringArraySegment_OptionalElement::_InternalSerialize(TSP::LargeStringArraySegment_OptionalElement *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3)
{
  uint64_t v4 = a2;
  if (*((unsigned char *)this + 16)) {
    uint64_t v4 = sub_100034480(a3, 1, (const void **)(*((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  uint64_t v6 = *((void *)this + 1);
  if ((v6 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)v4;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v6 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)v4, a3, (google::protobuf::io::EpsCopyOutputStream *)v4);
}

char *TSP::LargeStringArraySegment_OptionalElement::ByteSizeLong(TSP::LargeStringArraySegment_OptionalElement *this)
{
  if (*((unsigned char *)this + 16))
  {
    unint64_t v2 = *((void *)this + 3) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    unint64_t v1 = (const google::protobuf::UnknownFieldSet *)(v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1);
  }
  else
  {
    unint64_t v1 = 0;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::LargeStringArraySegment_OptionalElement *)((char *)this + 8), v1, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + sub_100050800((void *)this + 5) = v1;
  return (char *)v1;
}

void TSP::LargeStringArraySegment_OptionalElement::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeStringArraySegment_OptionalElement::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::LargeStringArraySegment_OptionalElement::MergeFrom(std::string *this, const TSP::LargeStringArraySegment_OptionalElement *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  if (*((unsigned char *)a2 + 16))
  {
    unint64_t v5 = *((void *)a2 + 3) & 0xFFFFFFFFFFFFFFFELL;
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    unsigned int v7 = (google::protobuf::Arena *)(size & 0xFFFFFFFFFFFFFFFELL);
    if (size) {
      unsigned int v7 = *(google::protobuf::Arena **)v7;
    }
    return google::protobuf::internal::ArenaStringPtr::Set((std::string **)&v3[1], v5, v7);
  }
  return this;
}

void TSP::LargeStringArraySegment_OptionalElement::CopyFrom(TSP::LargeStringArraySegment_OptionalElement *this, const google::protobuf::Message *a2)
{
  if (a2 != this)
  {
    TSP::LargeStringArraySegment_OptionalElement::Clear(this);
    TSP::LargeStringArraySegment_OptionalElement::MergeFrom((std::string *)this, a2);
  }
}

uint64_t TSP::LargeStringArraySegment_OptionalElement::IsInitialized(TSP::LargeStringArraySegment_OptionalElement *this)
{
  return 1;
}

uint64_t TSP::LargeStringArraySegment_OptionalElement::GetMetadata(TSP::LargeStringArraySegment_OptionalElement *this)
{
  return off_1001EA298[68];
}

void *TSP::LargeStringArraySegment::LargeStringArraySegment(void *a1, uint64_t a2)
{
  *a1 = off_1001CB018;
  a1[1] = a2;
  a1[3] = a2;
  a1[2] = 0;
  a1[4] = 0;
  a1[5] = 0;
  if (atomic_load_explicit(scc_info_LargeStringArraySegment_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeStringArraySegment_TSPMessages_2eproto);
  }
  a1[6] = 0;
  return a1;
}

void sub_100069F60(_Unwind_Exception *a1)
{
  sub_1000722CC(v1);
  _Unwind_Resume(a1);
}

void TSP::LargeStringArraySegment::~LargeStringArraySegment(TSP::LargeStringArraySegment *this)
{
  if (this != (TSP::LargeStringArraySegment *)TSP::_LargeStringArraySegment_default_instance_)
  {
    uint64_t v2 = (TSP::LargeArraySegment *)*((void *)this + 6);
    if (v2)
    {
      TSP::LargeArraySegment::~LargeArraySegment(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_1000722CC((void *)this + 3);
}

{
  uint64_t vars8;

  TSP::LargeStringArraySegment::~LargeStringArraySegment(this);
  operator delete();
}

uint64_t TSP::LargeStringArraySegment::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeStringArraySegment::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::LargeStringArraySegment_OptionalElement **)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::LargeStringArraySegment_OptionalElement::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_100072180((void *)this + 2) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    this = TSP::LargeArraySegment::Clear(*(TSP::LargeArraySegment **)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::LargeStringArraySegment::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v26 = a2;
  if ((sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    char v6 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v7 = (google::protobuf::internal *)((char *)v26 + 1);
      unsigned int v8 = *(unsigned __int8 *)v26;
      if ((*(char *)v26 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v26, (const char *)(v9 - 128));
      unsigned int v26 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unsigned int v7 = TagFallback;
      unsigned int v8 = v25;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 18) {
          goto LABEL_13;
        }
        uint64_t v14 = (google::protobuf::internal *)((char *)v7 - 1);
        while (2)
        {
          uint64_t v15 = (google::protobuf::internal *)((char *)v14 + 1);
          unsigned int v26 = (google::protobuf::internal *)((char *)v14 + 1);
          unsigned int v16 = *(int **)(a1 + 40);
          if (v16)
          {
            uint64_t v17 = *(int *)(a1 + 32);
            int v18 = *v16;
            if ((int)v17 < *v16)
            {
              *(_DWORD *)(a1 + 3sub_100072180((void *)this + 2) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
              goto LABEL_29;
            }
            if (v18 == *(_DWORD *)(a1 + 36))
            {
LABEL_27:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v18 + 1);
              unsigned int v16 = *(int **)(a1 + 40);
              int v18 = *v16;
            }
            int *v16 = v18 + 1;
            uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<TSP::LargeStringArraySegment_OptionalElement>(*(void *)(a1 + 24));
            uint64_t v20 = *(void *)(a1 + 40);
            uint64_t v21 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_100072180((void *)this + 2) = v21 + 1;
            *(void *)(v20 + 8 * v21 + 8) = v19;
            uint64_t v15 = v26;
LABEL_29:
            uint64_t v14 = sub_10006A300(a3, v19, v15);
            unsigned int v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(unsigned char *)v14 != 18) {
              goto LABEL_39;
            }
            continue;
          }
          break;
        }
        int v18 = *(_DWORD *)(a1 + 36);
        goto LABEL_27;
      }
      if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 48);
        if (!v22)
        {
          unsigned int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
          if (*v6) {
            unsigned int v23 = (void *)*v23;
          }
          uint64_t v22 = google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArraySegment>(v23);
          *(void *)(a1 + 48) = v22;
          unsigned int v7 = v26;
        }
        uint64_t v13 = sub_1000694E4(a3, v22, v7);
        goto LABEL_38;
      }
LABEL_13:
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
        return v26;
      }
      if (*v6)
      {
        uint64_t v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        uint64_t v12 = sub_10003562C((unint64_t *)(a1 + 8));
        unsigned int v7 = v26;
      }
      uint64_t v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
LABEL_38:
      unsigned int v26 = v13;
      if (!v13) {
        return 0;
      }
LABEL_39:
      if (sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92))) {
        return v26;
      }
    }
    unsigned int v7 = (google::protobuf::internal *)((char *)v26 + 2);
LABEL_7:
    unsigned int v26 = v7;
    goto LABEL_8;
  }
  return v26;
}

google::protobuf::internal *sub_10006A300(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    char v6 = result;
  }
  else
  {
    char v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::LargeStringArraySegment_OptionalElement::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::LargeStringArraySegment::_InternalSerialize(TSP::LargeStringArraySegment *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    char v6 = (TSP::LargeArraySegment *)*((void *)this + 6);
    *a2 = 10;
    unsigned int v7 = *((_DWORD *)v6 + 5);
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unsigned int v9 = v7 >> 7;
      if (v7 >> 14)
      {
        uint64_t v8 = a2 + 3;
        do
        {
          *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
          unsigned int v10 = v9 >> 7;
          ++v8;
          unsigned int v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
      }
      else
      {
        a2[2] = v9;
        uint64_t v8 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v7;
      uint64_t v8 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::LargeArraySegment::_InternalSerialize(v6, v8, a3);
  }
  int v12 = *((_DWORD *)this + 8);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v14 = *(TSP::LargeStringArraySegment_OptionalElement **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v15 = *((_DWORD *)v14 + 5);
      if (v15 > 0x7F)
      {
        a2[1] = v15 | 0x80;
        unsigned int v17 = v15 >> 7;
        if (v15 >> 14)
        {
          unsigned int v16 = a2 + 3;
          do
          {
            *(v16 - sub_1000333D0((uint64_t *)this + 1) = v17 | 0x80;
            unsigned int v18 = v17 >> 7;
            ++v16;
            unsigned int v19 = v17 >> 14;
            v17 >>= 7;
          }
          while (v19);
          *(v16 - sub_1000333D0((uint64_t *)this + 1) = v18;
        }
        else
        {
          a2[2] = v17;
          unsigned int v16 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v15;
        unsigned int v16 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::LargeStringArraySegment_OptionalElement::_InternalSerialize(v14, v16, a3);
    }
  }
  uint64_t v20 = *((void *)this + 1);
  if ((v20 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v20 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::LargeStringArraySegment::ByteSizeLong(TSP::LargeStringArraySegment *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (TSP::LargeStringArraySegment_OptionalElement **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      char v6 = *v4++;
      unsigned int v7 = TSP::LargeStringArraySegment_OptionalElement::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 16))
  {
    uint64_t v8 = TSP::LargeArraySegment::ByteSizeLong(*((TSP::LargeArraySegment **)this + 6));
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v8[(void)v2
                                                      + 1
                                                      + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::LargeStringArraySegment *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::LargeStringArraySegment::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeStringArraySegment::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::LargeStringArraySegment::MergeFrom(std::string *this, const TSP::LargeStringArraySegment *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    unsigned int v7 = (TSP::LargeStringArraySegment_OptionalElement **)(*((void *)a2 + 5) + 8);
    uint64_t v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1], *((_DWORD *)a2 + 8));
    this = sub_10007234C(v3 + 1, (std::string **)v8, v7, v6, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    signed int v9 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v6;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v9;
    unsigned int v10 = (signed int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v10 < v9) {
      signed int *v10 = v9;
    }
  }
  if (*((unsigned char *)a2 + 16))
  {
    unsigned int v11 = (const TSP::LargeArraySegment *)*((void *)a2 + 6);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      uint64_t v13 = (void *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
      if (*p_size) {
        uint64_t v13 = (void *)*v13;
      }
      data = (std::string *)google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArraySegment>(v13);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      unsigned int v11 = (const TSP::LargeArraySegment *)*((void *)a2 + 6);
    }
    if (v11) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = (const TSP::LargeArraySegment *)TSP::_LargeArraySegment_default_instance_;
    }
    return TSP::LargeArraySegment::MergeFrom(data, v14);
  }
  return this;
}

void TSP::LargeStringArraySegment::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::LargeStringArraySegment::Clear(this);
    TSP::LargeStringArraySegment::MergeFrom((std::string *)this, (const google::protobuf::Message *)a2);
  }
}

uint64_t TSP::LargeStringArraySegment::IsInitialized(TSP::LargeStringArraySegment *this)
{
  return 1;
}

uint64_t TSP::LargeStringArraySegment::GetMetadata(TSP::LargeStringArraySegment *this)
{
  return off_1001EA298[70];
}

void *TSP::LargeUUIDArraySegment::LargeUUIDArraySegment(void *a1, uint64_t a2)
{
  *a1 = off_1001CB0C8;
  a1[1] = a2;
  a1[3] = a2;
  a1[2] = 0;
  a1[4] = 0;
  a1[5] = 0;
  if (atomic_load_explicit(scc_info_LargeUUIDArraySegment_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeUUIDArraySegment_TSPMessages_2eproto);
  }
  a1[6] = 0;
  return a1;
}

void sub_10006A94C(_Unwind_Exception *a1)
{
  sub_100050800(v1);
  _Unwind_Resume(a1);
}

void TSP::LargeUUIDArraySegment::~LargeUUIDArraySegment(TSP::LargeUUIDArraySegment *this)
{
  if (this != (TSP::LargeUUIDArraySegment *)TSP::_LargeUUIDArraySegment_default_instance_)
  {
    uint64_t v2 = (TSP::LargeArraySegment *)*((void *)this + 6);
    if (v2)
    {
      TSP::LargeArraySegment::~LargeArraySegment(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_100050800((void *)this + 3);
}

{
  uint64_t vars8;

  TSP::LargeUUIDArraySegment::~LargeUUIDArraySegment(this);
  operator delete();
}

uint64_t TSP::LargeUUIDArraySegment::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeUUIDArraySegment::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::UUID **)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::UUID::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_100072180((void *)this + 2) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    this = TSP::LargeArraySegment::Clear(*(TSP::LargeArraySegment **)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::LargeUUIDArraySegment::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v26 = a2;
  if ((sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    char v6 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v7 = (google::protobuf::internal *)((char *)v26 + 1);
      unsigned int v8 = *(unsigned __int8 *)v26;
      if ((*(char *)v26 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v26, (const char *)(v9 - 128));
      unsigned int v26 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unsigned int v7 = TagFallback;
      unsigned int v8 = v25;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 18) {
          goto LABEL_13;
        }
        uint64_t v14 = (google::protobuf::internal *)((char *)v7 - 1);
        while (2)
        {
          unsigned int v15 = (google::protobuf::internal *)((char *)v14 + 1);
          unsigned int v26 = (google::protobuf::internal *)((char *)v14 + 1);
          unsigned int v16 = *(int **)(a1 + 40);
          if (v16)
          {
            uint64_t v17 = *(int *)(a1 + 32);
            int v18 = *v16;
            if ((int)v17 < *v16)
            {
              *(_DWORD *)(a1 + 3sub_100072180((void *)this + 2) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
              goto LABEL_29;
            }
            if (v18 == *(_DWORD *)(a1 + 36))
            {
LABEL_27:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v18 + 1);
              unsigned int v16 = *(int **)(a1 + 40);
              int v18 = *v16;
            }
            int *v16 = v18 + 1;
            uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(*(void *)(a1 + 24));
            uint64_t v20 = *(void *)(a1 + 40);
            uint64_t v21 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_100072180((void *)this + 2) = v21 + 1;
            *(void *)(v20 + 8 * v21 + 8) = v19;
            unsigned int v15 = v26;
LABEL_29:
            uint64_t v14 = sub_10003F83C(a3, v19, v15);
            unsigned int v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(unsigned char *)v14 != 18) {
              goto LABEL_39;
            }
            continue;
          }
          break;
        }
        int v18 = *(_DWORD *)(a1 + 36);
        goto LABEL_27;
      }
      if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 48);
        if (!v22)
        {
          unsigned int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
          if (*v6) {
            unsigned int v23 = (void *)*v23;
          }
          uint64_t v22 = google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArraySegment>(v23);
          *(void *)(a1 + 48) = v22;
          unsigned int v7 = v26;
        }
        uint64_t v13 = sub_1000694E4(a3, v22, v7);
        goto LABEL_38;
      }
LABEL_13:
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
        return v26;
      }
      if (*v6)
      {
        int v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        int v12 = sub_10003562C((unint64_t *)(a1 + 8));
        unsigned int v7 = v26;
      }
      uint64_t v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
LABEL_38:
      unsigned int v26 = v13;
      if (!v13) {
        return 0;
      }
LABEL_39:
      if (sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92))) {
        return v26;
      }
    }
    unsigned int v7 = (google::protobuf::internal *)((char *)v26 + 2);
LABEL_7:
    unsigned int v26 = v7;
    goto LABEL_8;
  }
  return v26;
}

const google::protobuf::UnknownFieldSet *TSP::LargeUUIDArraySegment::_InternalSerialize(TSP::LargeUUIDArraySegment *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    char v6 = (TSP::LargeArraySegment *)*((void *)this + 6);
    *a2 = 10;
    unsigned int v7 = *((_DWORD *)v6 + 5);
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unsigned int v9 = v7 >> 7;
      if (v7 >> 14)
      {
        unsigned int v8 = a2 + 3;
        do
        {
          *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
          unsigned int v10 = v9 >> 7;
          ++v8;
          unsigned int v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
      }
      else
      {
        a2[2] = v9;
        unsigned int v8 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v7;
      unsigned int v8 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::LargeArraySegment::_InternalSerialize(v6, v8, a3);
  }
  int v12 = *((_DWORD *)this + 8);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v14 = *(TSP::UUID **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v15 = *((_DWORD *)v14 + 5);
      if (v15 > 0x7F)
      {
        a2[1] = v15 | 0x80;
        unsigned int v17 = v15 >> 7;
        if (v15 >> 14)
        {
          unsigned int v16 = a2 + 3;
          do
          {
            *(v16 - sub_1000333D0((uint64_t *)this + 1) = v17 | 0x80;
            unsigned int v18 = v17 >> 7;
            ++v16;
            unsigned int v19 = v17 >> 14;
            v17 >>= 7;
          }
          while (v19);
          *(v16 - sub_1000333D0((uint64_t *)this + 1) = v18;
        }
        else
        {
          a2[2] = v17;
          unsigned int v16 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v15;
        unsigned int v16 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::UUID::_InternalSerialize(v14, v16, a3, a4);
    }
  }
  uint64_t v20 = *((void *)this + 1);
  if ((v20 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v20 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::LargeUUIDArraySegment::ByteSizeLong(TSP::LargeUUIDArraySegment *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (TSP::UUID **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      char v6 = *v4++;
      unsigned int v7 = TSP::UUID::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 16))
  {
    unsigned int v8 = TSP::LargeArraySegment::ByteSizeLong(*((TSP::LargeArraySegment **)this + 6));
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v8[(void)v2
                                                      + 1
                                                      + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::LargeUUIDArraySegment *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::LargeUUIDArraySegment::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeUUIDArraySegment::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::LargeUUIDArraySegment::MergeFrom(std::string *this, const TSP::LargeUUIDArraySegment *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    unsigned int v7 = (TSP::UUID **)(*((void *)a2 + 5) + 8);
    unsigned int v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1], *((_DWORD *)a2 + 8));
    this = (std::string *)sub_100071E40((void **)&v3[1].__r_.__value_.__l.__data_, (void ***)v8, v7, v6, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    signed int v9 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v6;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v9;
    unsigned int v10 = (signed int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v10 < v9) {
      signed int *v10 = v9;
    }
  }
  if (*((unsigned char *)a2 + 16))
  {
    unsigned int v11 = (const TSP::LargeArraySegment *)*((void *)a2 + 6);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      uint64_t v13 = (void *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
      if (*p_size) {
        uint64_t v13 = (void *)*v13;
      }
      data = (std::string *)google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArraySegment>(v13);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      unsigned int v11 = (const TSP::LargeArraySegment *)*((void *)a2 + 6);
    }
    if (v11) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = (const TSP::LargeArraySegment *)TSP::_LargeArraySegment_default_instance_;
    }
    return TSP::LargeArraySegment::MergeFrom(data, v14);
  }
  return this;
}

void TSP::LargeUUIDArraySegment::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::LargeUUIDArraySegment::Clear(this);
    TSP::LargeUUIDArraySegment::MergeFrom((std::string *)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::LargeUUIDArraySegment::IsInitialized(TSP::LargeUUIDArraySegment *this)
{
  uint64_t v1 = *((unsigned int *)this + 8);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 5) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

uint64_t TSP::LargeUUIDArraySegment::GetMetadata(TSP::LargeUUIDArraySegment *this)
{
  return off_1001EA298[72];
}

void *TSP::LargeLazyObjectArraySegment::LargeLazyObjectArraySegment(void *a1, uint64_t a2)
{
  *a1 = off_1001CB178;
  a1[1] = a2;
  a1[3] = a2;
  a1[2] = 0;
  a1[4] = 0;
  a1[5] = 0;
  if (atomic_load_explicit(scc_info_LargeLazyObjectArraySegment_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeLazyObjectArraySegment_TSPMessages_2eproto);
  }
  a1[6] = 0;
  return a1;
}

void sub_10006B298(_Unwind_Exception *a1)
{
  sub_100072180(v1);
  _Unwind_Resume(a1);
}

void TSP::LargeLazyObjectArraySegment::~LargeLazyObjectArraySegment(TSP::LargeLazyObjectArraySegment *this)
{
  if (this != (TSP::LargeLazyObjectArraySegment *)TSP::_LargeLazyObjectArraySegment_default_instance_)
  {
    int v2 = (TSP::LargeArraySegment *)*((void *)this + 6);
    if (v2)
    {
      TSP::LargeArraySegment::~LargeArraySegment(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_100072180((void *)this + 3);
}

{
  uint64_t vars8;

  TSP::LargeLazyObjectArraySegment::~LargeLazyObjectArraySegment(this);
  operator delete();
}

uint64_t TSP::LargeLazyObjectArraySegment::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeLazyObjectArraySegment::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::Reference **)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::Reference::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_100072180((void *)this + 2) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    this = TSP::LargeArraySegment::Clear(*(TSP::LargeArraySegment **)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::LargeLazyObjectArraySegment::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v26 = a2;
  if ((sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    char v6 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v7 = (google::protobuf::internal *)((char *)v26 + 1);
      unsigned int v8 = *(unsigned __int8 *)v26;
      if ((*(char *)v26 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v26, (const char *)(v9 - 128));
      unsigned int v26 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unsigned int v7 = TagFallback;
      unsigned int v8 = v25;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 18) {
          goto LABEL_13;
        }
        uint64_t v14 = (google::protobuf::internal *)((char *)v7 - 1);
        while (2)
        {
          unsigned int v15 = (google::protobuf::internal *)((char *)v14 + 1);
          unsigned int v26 = (google::protobuf::internal *)((char *)v14 + 1);
          unsigned int v16 = *(int **)(a1 + 40);
          if (v16)
          {
            uint64_t v17 = *(int *)(a1 + 32);
            int v18 = *v16;
            if ((int)v17 < *v16)
            {
              *(_DWORD *)(a1 + 3sub_100072180((void *)this + 2) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
              goto LABEL_29;
            }
            if (v18 == *(_DWORD *)(a1 + 36))
            {
LABEL_27:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v18 + 1);
              unsigned int v16 = *(int **)(a1 + 40);
              int v18 = *v16;
            }
            int *v16 = v18 + 1;
            uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(*(void *)(a1 + 24));
            uint64_t v20 = *(void *)(a1 + 40);
            uint64_t v21 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_100072180((void *)this + 2) = v21 + 1;
            *(void *)(v20 + 8 * v21 + 8) = v19;
            unsigned int v15 = v26;
LABEL_29:
            uint64_t v14 = sub_100034100(a3, v19, v15);
            unsigned int v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(unsigned char *)v14 != 18) {
              goto LABEL_39;
            }
            continue;
          }
          break;
        }
        int v18 = *(_DWORD *)(a1 + 36);
        goto LABEL_27;
      }
      if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 48);
        if (!v22)
        {
          unsigned int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
          if (*v6) {
            unsigned int v23 = (void *)*v23;
          }
          uint64_t v22 = google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArraySegment>(v23);
          *(void *)(a1 + 48) = v22;
          unsigned int v7 = v26;
        }
        uint64_t v13 = sub_1000694E4(a3, v22, v7);
        goto LABEL_38;
      }
LABEL_13:
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
        return v26;
      }
      if (*v6)
      {
        int v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        int v12 = sub_10003562C((unint64_t *)(a1 + 8));
        unsigned int v7 = v26;
      }
      uint64_t v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
LABEL_38:
      unsigned int v26 = v13;
      if (!v13) {
        return 0;
      }
LABEL_39:
      if (sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92))) {
        return v26;
      }
    }
    unsigned int v7 = (google::protobuf::internal *)((char *)v26 + 2);
LABEL_7:
    unsigned int v26 = v7;
    goto LABEL_8;
  }
  return v26;
}

const google::protobuf::UnknownFieldSet *TSP::LargeLazyObjectArraySegment::_InternalSerialize(TSP::LargeLazyObjectArraySegment *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    char v6 = (TSP::LargeArraySegment *)*((void *)this + 6);
    *a2 = 10;
    unsigned int v7 = *((_DWORD *)v6 + 5);
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unsigned int v9 = v7 >> 7;
      if (v7 >> 14)
      {
        unsigned int v8 = a2 + 3;
        do
        {
          *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
          unsigned int v10 = v9 >> 7;
          ++v8;
          unsigned int v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
      }
      else
      {
        a2[2] = v9;
        unsigned int v8 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v7;
      unsigned int v8 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::LargeArraySegment::_InternalSerialize(v6, v8, a3);
  }
  int v12 = *((_DWORD *)this + 8);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v14 = *(TSP::Reference **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v15 = *((_DWORD *)v14 + 5);
      if (v15 > 0x7F)
      {
        a2[1] = v15 | 0x80;
        unsigned int v17 = v15 >> 7;
        if (v15 >> 14)
        {
          unsigned int v16 = a2 + 3;
          do
          {
            *(v16 - sub_1000333D0((uint64_t *)this + 1) = v17 | 0x80;
            unsigned int v18 = v17 >> 7;
            ++v16;
            unsigned int v19 = v17 >> 14;
            v17 >>= 7;
          }
          while (v19);
          *(v16 - sub_1000333D0((uint64_t *)this + 1) = v18;
        }
        else
        {
          a2[2] = v17;
          unsigned int v16 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v15;
        unsigned int v16 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v14, v16, a3, a4);
    }
  }
  uint64_t v20 = *((void *)this + 1);
  if ((v20 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v20 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::LargeLazyObjectArraySegment::ByteSizeLong(TSP::LargeLazyObjectArraySegment *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (TSP::Reference **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      char v6 = *v4++;
      unsigned int v7 = TSP::Reference::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 16))
  {
    unsigned int v8 = TSP::LargeArraySegment::ByteSizeLong(*((TSP::LargeArraySegment **)this + 6));
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v8[(void)v2
                                                      + 1
                                                      + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::LargeLazyObjectArraySegment *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::LargeLazyObjectArraySegment::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeLazyObjectArraySegment::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::LargeLazyObjectArraySegment::MergeFrom(std::string *this, const TSP::LargeLazyObjectArraySegment *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    unsigned int v7 = (TSP::Reference **)(*((void *)a2 + 5) + 8);
    unsigned int v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1], *((_DWORD *)a2 + 8));
    this = (std::string *)sub_10007220C((void **)&v3[1].__r_.__value_.__l.__data_, (void ***)v8, v7, v6, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    signed int v9 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v6;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v9;
    unsigned int v10 = (signed int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v10 < v9) {
      signed int *v10 = v9;
    }
  }
  if (*((unsigned char *)a2 + 16))
  {
    unsigned int v11 = (const TSP::LargeArraySegment *)*((void *)a2 + 6);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      uint64_t v13 = (void *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
      if (*p_size) {
        uint64_t v13 = (void *)*v13;
      }
      data = (std::string *)google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArraySegment>(v13);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      unsigned int v11 = (const TSP::LargeArraySegment *)*((void *)a2 + 6);
    }
    if (v11) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = (const TSP::LargeArraySegment *)TSP::_LargeArraySegment_default_instance_;
    }
    return TSP::LargeArraySegment::MergeFrom(data, v14);
  }
  return this;
}

void TSP::LargeLazyObjectArraySegment::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::LargeLazyObjectArraySegment::Clear(this);
    TSP::LargeLazyObjectArraySegment::MergeFrom((std::string *)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::LargeLazyObjectArraySegment::IsInitialized(TSP::LargeLazyObjectArraySegment *this)
{
  uint64_t v1 = *((unsigned int *)this + 8);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 5) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 1) != 0);
  return v2 < 1;
}

uint64_t TSP::LargeLazyObjectArraySegment::GetMetadata(TSP::LargeLazyObjectArraySegment *this)
{
  return off_1001EA298[74];
}

void *TSP::LargeObjectArraySegment::LargeObjectArraySegment(void *a1, uint64_t a2)
{
  *a1 = off_1001CB228;
  a1[1] = a2;
  a1[3] = a2;
  a1[2] = 0;
  a1[4] = 0;
  a1[5] = 0;
  if (atomic_load_explicit(scc_info_LargeObjectArraySegment_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeObjectArraySegment_TSPMessages_2eproto);
  }
  a1[6] = 0;
  return a1;
}

void sub_10006BBDC(_Unwind_Exception *a1)
{
  sub_100072180(v1);
  _Unwind_Resume(a1);
}

void TSP::LargeObjectArraySegment::~LargeObjectArraySegment(TSP::LargeObjectArraySegment *this)
{
  if (this != (TSP::LargeObjectArraySegment *)TSP::_LargeObjectArraySegment_default_instance_)
  {
    int v2 = (TSP::LargeArraySegment *)*((void *)this + 6);
    if (v2)
    {
      TSP::LargeArraySegment::~LargeArraySegment(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
  sub_100072180((void *)this + 3);
}

{
  uint64_t vars8;

  TSP::LargeObjectArraySegment::~LargeObjectArraySegment(this);
  operator delete();
}

uint64_t TSP::LargeObjectArraySegment::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeObjectArraySegment::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::Reference **)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::Reference::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_100072180((void *)this + 2) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    this = TSP::LargeArraySegment::Clear(*(TSP::LargeArraySegment **)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_100035820((unint64_t *)v5);
  }
  return this;
}

google::protobuf::internal *TSP::LargeObjectArraySegment::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v26 = a2;
  if ((sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    char v6 = (void *)(a1 + 8);
    while (1)
    {
      unsigned int v7 = (google::protobuf::internal *)((char *)v26 + 1);
      unsigned int v8 = *(unsigned __int8 *)v26;
      if ((*(char *)v26 & 0x80000000) == 0) {
        goto LABEL_7;
      }
      unsigned int v9 = v8 + (*(unsigned __int8 *)v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((*(char *)v7 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v26, (const char *)(v9 - 128));
      unsigned int v26 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      unsigned int v7 = TagFallback;
      unsigned int v8 = v25;
LABEL_8:
      if (v8 >> 3 == 2)
      {
        if (v8 != 18) {
          goto LABEL_13;
        }
        uint64_t v14 = (google::protobuf::internal *)((char *)v7 - 1);
        while (2)
        {
          unsigned int v15 = (google::protobuf::internal *)((char *)v14 + 1);
          unsigned int v26 = (google::protobuf::internal *)((char *)v14 + 1);
          unsigned int v16 = *(int **)(a1 + 40);
          if (v16)
          {
            uint64_t v17 = *(int *)(a1 + 32);
            int v18 = *v16;
            if ((int)v17 < *v16)
            {
              *(_DWORD *)(a1 + 3sub_100072180((void *)this + 2) = v17 + 1;
              uint64_t v19 = *(void *)&v16[2 * v17 + 2];
              goto LABEL_29;
            }
            if (v18 == *(_DWORD *)(a1 + 36))
            {
LABEL_27:
              google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v18 + 1);
              unsigned int v16 = *(int **)(a1 + 40);
              int v18 = *v16;
            }
            int *v16 = v18 + 1;
            uint64_t v19 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(*(void *)(a1 + 24));
            uint64_t v20 = *(void *)(a1 + 40);
            uint64_t v21 = *(int *)(a1 + 32);
            *(_DWORD *)(a1 + 3sub_100072180((void *)this + 2) = v21 + 1;
            *(void *)(v20 + 8 * v21 + 8) = v19;
            unsigned int v15 = v26;
LABEL_29:
            uint64_t v14 = sub_100034100(a3, v19, v15);
            unsigned int v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(unsigned char *)v14 != 18) {
              goto LABEL_39;
            }
            continue;
          }
          break;
        }
        int v18 = *(_DWORD *)(a1 + 36);
        goto LABEL_27;
      }
      if (v8 >> 3 == 1 && v8 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 48);
        if (!v22)
        {
          unsigned int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFELL);
          if (*v6) {
            unsigned int v23 = (void *)*v23;
          }
          uint64_t v22 = google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArraySegment>(v23);
          *(void *)(a1 + 48) = v22;
          unsigned int v7 = v26;
        }
        uint64_t v13 = sub_1000694E4(a3, v22, v7);
        goto LABEL_38;
      }
LABEL_13:
      if (v8) {
        BOOL v11 = (v8 & 7) == 4;
      }
      else {
        BOOL v11 = 1;
      }
      if (v11)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8 - 1;
        return v26;
      }
      if (*v6)
      {
        int v12 = (google::protobuf::Arena **)((*v6 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        int v12 = sub_10003562C((unint64_t *)(a1 + 8));
        unsigned int v7 = v26;
      }
      uint64_t v13 = google::protobuf::internal::UnknownFieldParse(v8, (google::protobuf::UnknownFieldSet *)v12, v7);
LABEL_38:
      unsigned int v26 = v13;
      if (!v13) {
        return 0;
      }
LABEL_39:
      if (sub_1000355B8(a3, &v26, *(_DWORD *)(a3 + 92))) {
        return v26;
      }
    }
    unsigned int v7 = (google::protobuf::internal *)((char *)v26 + 2);
LABEL_7:
    unsigned int v26 = v7;
    goto LABEL_8;
  }
  return v26;
}

const google::protobuf::UnknownFieldSet *TSP::LargeObjectArraySegment::_InternalSerialize(TSP::LargeObjectArraySegment *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    char v6 = (TSP::LargeArraySegment *)*((void *)this + 6);
    *a2 = 10;
    unsigned int v7 = *((_DWORD *)v6 + 5);
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unsigned int v9 = v7 >> 7;
      if (v7 >> 14)
      {
        unsigned int v8 = a2 + 3;
        do
        {
          *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
          unsigned int v10 = v9 >> 7;
          ++v8;
          unsigned int v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
      }
      else
      {
        a2[2] = v9;
        unsigned int v8 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v7;
      unsigned int v8 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::LargeArraySegment::_InternalSerialize(v6, v8, a3);
  }
  int v12 = *((_DWORD *)this + 8);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v14 = *(TSP::Reference **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 18;
      unsigned int v15 = *((_DWORD *)v14 + 5);
      if (v15 > 0x7F)
      {
        a2[1] = v15 | 0x80;
        unsigned int v17 = v15 >> 7;
        if (v15 >> 14)
        {
          unsigned int v16 = a2 + 3;
          do
          {
            *(v16 - sub_1000333D0((uint64_t *)this + 1) = v17 | 0x80;
            unsigned int v18 = v17 >> 7;
            ++v16;
            unsigned int v19 = v17 >> 14;
            v17 >>= 7;
          }
          while (v19);
          *(v16 - sub_1000333D0((uint64_t *)this + 1) = v18;
        }
        else
        {
          a2[2] = v17;
          unsigned int v16 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v15;
        unsigned int v16 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v14, v16, a3, a4);
    }
  }
  uint64_t v20 = *((void *)this + 1);
  if ((v20 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v20 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::LargeObjectArraySegment::ByteSizeLong(TSP::LargeObjectArraySegment *this)
{
  uint64_t v2 = (const google::protobuf::UnknownFieldSet *)*((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (TSP::Reference **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * (void)v2;
    do
    {
      char v6 = *v4++;
      unsigned int v7 = TSP::Reference::ByteSizeLong(v6);
      uint64_t v2 = (const google::protobuf::UnknownFieldSet *)((char *)v2
                                                     + (void)v7
                                                     + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6));
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*((unsigned char *)this + 16))
  {
    unsigned int v8 = TSP::LargeArraySegment::ByteSizeLong(*((TSP::LargeArraySegment **)this + 6));
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v8[(void)v2
                                                      + 1
                                                      + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6)];
  }
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::LargeObjectArraySegment *)((char *)this + 8), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::LargeObjectArraySegment::MergeFrom(std::string *this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeObjectArraySegment::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

std::string *TSP::LargeObjectArraySegment::MergeFrom(std::string *this, const TSP::LargeObjectArraySegment *a2)
{
  uint64_t v3 = this;
  p_std::string::size_type size = &this->__r_.__value_.__l.__size_;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = (std::string *)sub_1000357D4(&this->__r_.__value_.__l.__size_, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v6 = *((_DWORD *)a2 + 8);
  if (v6)
  {
    unsigned int v7 = (TSP::Reference **)(*((void *)a2 + 5) + 8);
    unsigned int v8 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)&v3[1], *((_DWORD *)a2 + 8));
    this = (std::string *)sub_10007220C((void **)&v3[1].__r_.__value_.__l.__data_, (void ***)v8, v7, v6, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    signed int v9 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v6;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v9;
    unsigned int v10 = (signed int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v10 < v9) {
      signed int *v10 = v9;
    }
  }
  if (*((unsigned char *)a2 + 16))
  {
    unsigned int v11 = (const TSP::LargeArraySegment *)*((void *)a2 + 6);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      uint64_t v13 = (void *)(*p_size & 0xFFFFFFFFFFFFFFFELL);
      if (*p_size) {
        uint64_t v13 = (void *)*v13;
      }
      data = (std::string *)google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArraySegment>(v13);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      unsigned int v11 = (const TSP::LargeArraySegment *)*((void *)a2 + 6);
    }
    if (v11) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = (const TSP::LargeArraySegment *)TSP::_LargeArraySegment_default_instance_;
    }
    return TSP::LargeArraySegment::MergeFrom(data, v14);
  }
  return this;
}

void TSP::LargeObjectArraySegment::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::LargeObjectArraySegment::Clear(this);
    TSP::LargeObjectArraySegment::MergeFrom((std::string *)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::LargeObjectArraySegment::IsInitialized(TSP::LargeObjectArraySegment *this)
{
  uint64_t v1 = *((unsigned int *)this + 8);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*((void *)this + 5) + 8 * v1--);
  }
  while ((*(unsigned char *)(v3 + 16) & 1) != 0);
  return v2 < 1;
}

uint64_t TSP::LargeObjectArraySegment::GetMetadata(TSP::LargeObjectArraySegment *this)
{
  return off_1001EA298[76];
}

uint64_t TSP::LargeArray::LargeArray(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = off_1001CB2D8;
  *(void *)(a1 + 8) = a2;
  *(void *)(a1 + 1sub_100072180((void *)this + 6) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 3sub_100072180((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  *(void *)(a1 + 5sub_100072180((void *)this + 6) = 0;
  *(void *)(a1 + 64) = 0;
  if (atomic_load_explicit(scc_info_LargeArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeArray_TSPMessages_2eproto);
  }
  *(void *)(a1 + 104) = 0;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 7sub_100072180((void *)this + 2) = 0u;
  return a1;
}

void sub_10006C540(_Unwind_Exception *a1)
{
  sub_100072180(v2);
  sub_1000719B4(v1);
  _Unwind_Resume(a1);
}

void TSP::LargeArray::~LargeArray(TSP::LargeArray *this)
{
}

{
  uint64_t vars8;

  TSP::LargeArray::~LargeArray(this);
  operator delete();
}

uint64_t TSP::LargeArray::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeArray::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  uint64_t v2 = *((unsigned int *)this + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (TSP::Range **)((char *)this[5] + 8);
    do
    {
      uint64_t v4 = *v3++;
      this = TSP::Range::Clear(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 3sub_100072180((void *)this + 2) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    unsigned int v6 = (TSP::Reference **)(*(void *)(v1 + 64) + 8);
    do
    {
      unsigned int v7 = *v6++;
      this = TSP::Reference::Clear(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 5sub_100072180((void *)this + 6) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 0x7F) != 0)
  {
    *(void *)(v1 + 104) = 0;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 7sub_100072180((void *)this + 2) = 0u;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_100035820((unint64_t *)v8);
  }
  return this;
}

google::protobuf::internal *TSP::LargeArray::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v66 = a2;
  int v5 = 0;
  if ((sub_1000355B8(a3, &v66, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    unsigned int v7 = (void *)(a1 + 8);
    while (2)
    {
      uint64_t v8 = (google::protobuf::internal *)((char *)v66 + 1);
      unsigned int v9 = *(unsigned __int8 *)v66;
      if (*(char *)v66 < 0)
      {
        unsigned int v10 = v9 + (*(unsigned __int8 *)v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*(char *)v8 < 0)
        {
          TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v66, (const char *)(v10 - 128));
          unsigned int v66 = TagFallback;
          if (!TagFallback) {
            goto LABEL_97;
          }
          uint64_t v8 = TagFallback;
          unsigned int v9 = v20;
LABEL_8:
          switch(v9 >> 3)
          {
            case 1u:
              if (v9 != 10) {
                goto LABEL_72;
              }
              unsigned int v11 = (google::protobuf::internal *)((char *)v8 - 1);
              while (1)
              {
                int v12 = (google::protobuf::internal *)((char *)v11 + 1);
                unsigned int v66 = (google::protobuf::internal *)((char *)v11 + 1);
                uint64_t v13 = *(int **)(a1 + 40);
                if (!v13) {
                  break;
                }
                uint64_t v14 = *(int *)(a1 + 32);
                int v15 = *v13;
                if ((int)v14 >= *v13)
                {
                  if (v15 == *(_DWORD *)(a1 + 36))
                  {
LABEL_16:
                    google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 24), v15 + 1);
                    uint64_t v13 = *(int **)(a1 + 40);
                    int v15 = *v13;
                  }
                  *uint64_t v13 = v15 + 1;
                  uint64_t v16 = google::protobuf::Arena::CreateMaybeMessage<TSP::Range>(*(void *)(a1 + 24));
                  uint64_t v17 = *(void *)(a1 + 40);
                  uint64_t v18 = *(int *)(a1 + 32);
                  *(_DWORD *)(a1 + 3sub_100072180((void *)this + 2) = v18 + 1;
                  *(void *)(v17 + 8 * v18 + 8) = v16;
                  int v12 = v66;
                  goto LABEL_18;
                }
                *(_DWORD *)(a1 + 3sub_100072180((void *)this + 2) = v14 + 1;
                uint64_t v16 = *(void *)&v13[2 * v14 + 2];
LABEL_18:
                unsigned int v11 = sub_10005BB38(a3, v16, v12);
                unsigned int v66 = v11;
                if (!v11) {
                  goto LABEL_97;
                }
                if (*(void *)a3 <= (unint64_t)v11 || *(unsigned char *)v11 != 10) {
                  goto LABEL_79;
                }
              }
              int v15 = *(_DWORD *)(a1 + 36);
              goto LABEL_16;
            case 2u:
              if (v9 != 18) {
                goto LABEL_72;
              }
              uint64_t v21 = (google::protobuf::internal *)((char *)v8 - 1);
              break;
            case 3u:
              if (v9 != 24) {
                goto LABEL_72;
              }
              v5 |= 1u;
              signed int v29 = (google::protobuf::internal *)((char *)v8 + 1);
              unint64_t v30 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_41;
              }
              int v31 = *(char *)v29;
              unint64_t v30 = v30 + (v31 << 7) - 128;
              if (v31 < 0)
              {
                unsigned int v52 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v30);
                unsigned int v66 = v52;
                *(void *)(a1 + 7sub_100072180((void *)this + 2) = v53;
                if (!v52) {
                  goto LABEL_97;
                }
              }
              else
              {
                signed int v29 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_41:
                unsigned int v66 = v29;
                *(void *)(a1 + 7sub_100072180((void *)this + 2) = v30;
              }
              goto LABEL_79;
            case 4u:
              if (v9 != 32) {
                goto LABEL_72;
              }
              v5 |= 2u;
              unsigned int v32 = (google::protobuf::internal *)((char *)v8 + 1);
              unint64_t v33 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_46;
              }
              int v34 = *(char *)v32;
              unint64_t v33 = v33 + (v34 << 7) - 128;
              if (v34 < 0)
              {
                unsigned int v54 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v33);
                unsigned int v66 = v54;
                *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v55;
                if (!v54) {
                  goto LABEL_97;
                }
              }
              else
              {
                unsigned int v32 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_46:
                unsigned int v66 = v32;
                *(void *)(a1 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v33;
              }
              goto LABEL_79;
            case 5u:
              if (v9 != 40) {
                goto LABEL_72;
              }
              v5 |= 8u;
              int v35 = (google::protobuf::internal *)((char *)v8 + 1);
              unint64_t v36 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_51;
              }
              int v37 = *(char *)v35;
              unint64_t v36 = v36 + (v37 << 7) - 128;
              if (v37 < 0)
              {
                unsigned int v56 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v36);
                unsigned int v66 = v56;
                *(unsigned char *)(a1 + 9sub_100072180((void *)this + 2) = v57 != 0;
                if (!v56) {
                  goto LABEL_97;
                }
              }
              else
              {
                int v35 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_51:
                unsigned int v66 = v35;
                *(unsigned char *)(a1 + 9sub_100072180((void *)this + 2) = v36 != 0;
              }
              goto LABEL_79;
            case 6u:
              if (v9 != 48) {
                goto LABEL_72;
              }
              v5 |= 4u;
              unsigned int v38 = (google::protobuf::internal *)((char *)v8 + 1);
              LODWORD(v3sub_100072180((void *)this + 9) = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_56;
              }
              int v40 = *(char *)v38;
              unsigned int v39 = (const char *)(v39 + (v40 << 7) - 128);
              if (v40 < 0)
              {
                uint64_t v58 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow32(v8, v39);
                unsigned int v66 = v58;
                *(_DWORD *)(a1 + 88) = v59;
                if (!v58) {
                  goto LABEL_97;
                }
              }
              else
              {
                unsigned int v38 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_56:
                unsigned int v66 = v38;
                *(_DWORD *)(a1 + 88) = v39;
              }
              goto LABEL_79;
            case 7u:
              if (v9 != 56) {
                goto LABEL_72;
              }
              v5 |= 0x10u;
              unsigned __int8 v41 = (google::protobuf::internal *)((char *)v8 + 1);
              unint64_t v42 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_61;
              }
              int v43 = *(char *)v41;
              unint64_t v42 = v42 + (v43 << 7) - 128;
              if (v43 < 0)
              {
                unsigned int v60 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v42);
                unsigned int v66 = v60;
                *(unsigned char *)(a1 + 9sub_1000719B4((void *)this + 3) = v61 != 0;
                if (!v60) {
                  goto LABEL_97;
                }
              }
              else
              {
                unsigned __int8 v41 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_61:
                unsigned int v66 = v41;
                *(unsigned char *)(a1 + 9sub_1000719B4((void *)this + 3) = v42 != 0;
              }
              goto LABEL_79;
            case 8u:
              if (v9 != 64) {
                goto LABEL_72;
              }
              v5 |= 0x20u;
              unsigned int v44 = (google::protobuf::internal *)((char *)v8 + 1);
              unint64_t v45 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_66;
              }
              int v46 = *(char *)v44;
              unint64_t v45 = v45 + (v46 << 7) - 128;
              if (v46 < 0)
              {
                unsigned int v62 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v45);
                unsigned int v66 = v62;
                *(void *)(a1 + 9sub_100072180((void *)this + 6) = v63;
                if (!v62) {
                  goto LABEL_97;
                }
              }
              else
              {
                unsigned int v44 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_66:
                unsigned int v66 = v44;
                *(void *)(a1 + 9sub_100072180((void *)this + 6) = v45;
              }
              goto LABEL_79;
            case 9u:
              if (v9 != 72) {
                goto LABEL_72;
              }
              v5 |= 0x40u;
              unsigned int v47 = (google::protobuf::internal *)((char *)v8 + 1);
              unint64_t v48 = *(unsigned __int8 *)v8;
              if ((*(char *)v8 & 0x80000000) == 0) {
                goto LABEL_71;
              }
              int v49 = *(char *)v47;
              unint64_t v48 = v48 + (v49 << 7) - 128;
              if (v49 < 0)
              {
                unsigned int v64 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v8, v48);
                unsigned int v66 = v64;
                *(void *)(a1 + 104) = v65;
                if (!v64) {
                  goto LABEL_97;
                }
              }
              else
              {
                unsigned int v47 = (google::protobuf::internal *)((char *)v8 + 2);
LABEL_71:
                unsigned int v66 = v47;
                *(void *)(a1 + 104) = v48;
              }
              goto LABEL_79;
            default:
LABEL_72:
              if (v9) {
                BOOL v50 = (v9 & 7) == 4;
              }
              else {
                BOOL v50 = 1;
              }
              if (v50)
              {
                *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v9 - 1;
                goto LABEL_2;
              }
              if (*v7)
              {
                uint64_t v51 = (google::protobuf::Arena **)((*v7 & 0xFFFFFFFFFFFFFFFELL) + 8);
              }
              else
              {
                uint64_t v51 = sub_10003562C((unint64_t *)(a1 + 8));
                uint64_t v8 = v66;
              }
              unsigned int v66 = google::protobuf::internal::UnknownFieldParse(v9, (google::protobuf::UnknownFieldSet *)v51, v8);
              if (!v66)
              {
LABEL_97:
                unsigned int v66 = 0;
                goto LABEL_2;
              }
LABEL_79:
              if (sub_1000355B8(a3, &v66, *(_DWORD *)(a3 + 92))) {
                goto LABEL_2;
              }
              continue;
          }
          while (1)
          {
            uint64_t v22 = (google::protobuf::internal *)((char *)v21 + 1);
            unsigned int v66 = (google::protobuf::internal *)((char *)v21 + 1);
            unsigned int v23 = *(int **)(a1 + 64);
            if (!v23) {
              break;
            }
            uint64_t v24 = *(int *)(a1 + 56);
            int v25 = *v23;
            if ((int)v24 >= *v23)
            {
              if (v25 == *(_DWORD *)(a1 + 60))
              {
LABEL_31:
                google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)(a1 + 48), v25 + 1);
                unsigned int v23 = *(int **)(a1 + 64);
                int v25 = *v23;
              }
              *unsigned int v23 = v25 + 1;
              uint64_t v26 = google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(*(void *)(a1 + 48));
              uint64_t v27 = *(void *)(a1 + 64);
              uint64_t v28 = *(int *)(a1 + 56);
              *(_DWORD *)(a1 + 5sub_100072180((void *)this + 6) = v28 + 1;
              *(void *)(v27 + 8 * v28 + 8) = v26;
              uint64_t v22 = v66;
              goto LABEL_33;
            }
            *(_DWORD *)(a1 + 5sub_100072180((void *)this + 6) = v24 + 1;
            uint64_t v26 = *(void *)&v23[2 * v24 + 2];
LABEL_33:
            uint64_t v21 = sub_100034100(a3, v26, v22);
            unsigned int v66 = v21;
            if (!v21) {
              goto LABEL_97;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *(unsigned char *)v21 != 18) {
              goto LABEL_79;
            }
          }
          int v25 = *(_DWORD *)(a1 + 60);
          goto LABEL_31;
        }
        uint64_t v8 = (google::protobuf::internal *)((char *)v66 + 2);
      }
      break;
    }
    unsigned int v66 = v8;
    goto LABEL_8;
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v66;
}

const google::protobuf::UnknownFieldSet *TSP::LargeArray::_InternalSerialize(TSP::LargeArray *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  int v6 = *((_DWORD *)this + 8);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v8 = *(TSP::Range **)(*((void *)this + 5) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *((_DWORD *)v8 + 5);
      if (v9 > 0x7F)
      {
        a2[1] = v9 | 0x80;
        unsigned int v11 = v9 >> 7;
        if (v9 >> 14)
        {
          unsigned int v10 = a2 + 3;
          do
          {
            *(v10 - sub_1000333D0((uint64_t *)this + 1) = v11 | 0x80;
            unsigned int v12 = v11 >> 7;
            ++v10;
            unsigned int v13 = v11 >> 14;
            v11 >>= 7;
          }
          while (v13);
          *(v10 - sub_1000333D0((uint64_t *)this + 1) = v12;
        }
        else
        {
          a2[2] = v11;
          unsigned int v10 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v9;
        unsigned int v10 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Range::_InternalSerialize(v8, v10, a3, a4);
    }
  }
  int v14 = *((_DWORD *)this + 14);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
      }
      uint64_t v16 = *(TSP::Reference **)(*((void *)this + 8) + 8 * j + 8);
      *a2 = 18;
      unsigned int v17 = *((_DWORD *)v16 + 5);
      if (v17 > 0x7F)
      {
        a2[1] = v17 | 0x80;
        unsigned int v19 = v17 >> 7;
        if (v17 >> 14)
        {
          uint64_t v18 = a2 + 3;
          do
          {
            *(v18 - sub_1000333D0((uint64_t *)this + 1) = v19 | 0x80;
            unsigned int v20 = v19 >> 7;
            ++v18;
            unsigned int v21 = v19 >> 14;
            v19 >>= 7;
          }
          while (v21);
          *(v18 - sub_1000333D0((uint64_t *)this + 1) = v20;
        }
        else
        {
          a2[2] = v19;
          uint64_t v18 = a2 + 3;
        }
      }
      else
      {
        a2[1] = v17;
        uint64_t v18 = a2 + 2;
      }
      a2 = (unsigned __int8 *)TSP::Reference::_InternalSerialize(v16, v18, a3, a4);
    }
  }
  int v22 = *((_DWORD *)this + 4);
  if ((v22 & 1) == 0)
  {
    if ((v22 & 2) == 0) {
      goto LABEL_27;
    }
LABEL_44:
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v27 = *((void *)this + 10);
    *a2 = 32;
    if (v27 > 0x7F)
    {
      a2[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      if (v27 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v28 | 0x80;
          unint64_t v29 = v28 >> 7;
          ++a2;
          unint64_t v30 = v28 >> 14;
          v28 >>= 7;
        }
        while (v30);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v29;
        if ((v22 & 8) != 0) {
          goto LABEL_55;
        }
      }
      else
      {
        a2[2] = v28;
        a2 += 3;
        if ((v22 & 8) != 0) {
          goto LABEL_55;
        }
      }
    }
    else
    {
      a2[1] = v27;
      a2 += 2;
      if ((v22 & 8) != 0) {
        goto LABEL_55;
      }
    }
LABEL_28:
    if ((v22 & 4) == 0) {
      goto LABEL_29;
    }
LABEL_58:
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unsigned int v32 = *((_DWORD *)this + 22);
    *a2 = 48;
    if (v32 > 0x7F)
    {
      a2[1] = v32 | 0x80;
      unsigned int v33 = v32 >> 7;
      if (v32 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v33 | 0x80;
          unsigned int v34 = v33 >> 7;
          ++a2;
          unsigned int v35 = v33 >> 14;
          v33 >>= 7;
        }
        while (v35);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v34;
        if ((v22 & 0x10) != 0) {
          goto LABEL_69;
        }
      }
      else
      {
        a2[2] = v33;
        a2 += 3;
        if ((v22 & 0x10) != 0) {
          goto LABEL_69;
        }
      }
    }
    else
    {
      a2[1] = v32;
      a2 += 2;
      if ((v22 & 0x10) != 0) {
        goto LABEL_69;
      }
    }
LABEL_30:
    if ((v22 & 0x20) == 0) {
      goto LABEL_31;
    }
    goto LABEL_72;
  }
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v23 = *((void *)this + 9);
  *a2 = 24;
  if (v23 > 0x7F)
  {
    a2[1] = v23 | 0x80;
    unint64_t v24 = v23 >> 7;
    if (v23 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v24 | 0x80;
        unint64_t v25 = v24 >> 7;
        ++a2;
        unint64_t v26 = v24 >> 14;
        v24 >>= 7;
      }
      while (v26);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v25;
      if ((v22 & 2) != 0) {
        goto LABEL_44;
      }
    }
    else
    {
      a2[2] = v24;
      a2 += 3;
      if ((v22 & 2) != 0) {
        goto LABEL_44;
      }
    }
  }
  else
  {
    a2[1] = v23;
    a2 += 2;
    if ((v22 & 2) != 0) {
      goto LABEL_44;
    }
  }
LABEL_27:
  if ((v22 & 8) == 0) {
    goto LABEL_28;
  }
LABEL_55:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v31 = *((unsigned char *)this + 92);
  *a2 = 40;
  a2[1] = v31;
  a2 += 2;
  if ((v22 & 4) != 0) {
    goto LABEL_58;
  }
LABEL_29:
  if ((v22 & 0x10) == 0) {
    goto LABEL_30;
  }
LABEL_69:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unsigned __int8 v36 = *((unsigned char *)this + 93);
  *a2 = 56;
  a2[1] = v36;
  a2 += 2;
  if ((v22 & 0x20) == 0)
  {
LABEL_31:
    if ((v22 & 0x40) == 0) {
      goto LABEL_92;
    }
    goto LABEL_83;
  }
LABEL_72:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v37 = *((void *)this + 12);
  *a2 = 64;
  if (v37 > 0x7F)
  {
    a2[1] = v37 | 0x80;
    unint64_t v38 = v37 >> 7;
    if (v37 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v38 | 0x80;
        unint64_t v39 = v38 >> 7;
        ++a2;
        unint64_t v40 = v38 >> 14;
        v38 >>= 7;
      }
      while (v40);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v39;
      if ((v22 & 0x40) == 0) {
        goto LABEL_92;
      }
    }
    else
    {
      a2[2] = v38;
      a2 += 3;
      if ((v22 & 0x40) == 0) {
        goto LABEL_92;
      }
    }
  }
  else
  {
    a2[1] = v37;
    a2 += 2;
    if ((v22 & 0x40) == 0) {
      goto LABEL_92;
    }
  }
LABEL_83:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
  }
  unint64_t v41 = *((void *)this + 13);
  *a2 = 72;
  if (v41 > 0x7F)
  {
    a2[1] = v41 | 0x80;
    unint64_t v42 = v41 >> 7;
    if (v41 >> 14)
    {
      a2 += 3;
      do
      {
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v42 | 0x80;
        unint64_t v43 = v42 >> 7;
        ++a2;
        unint64_t v44 = v42 >> 14;
        v42 >>= 7;
      }
      while (v44);
      *(a2 - sub_1000333D0((uint64_t *)this + 1) = v43;
    }
    else
    {
      a2[2] = v42;
      a2 += 3;
    }
  }
  else
  {
    a2[1] = v41;
    a2 += 2;
  }
LABEL_92:
  uint64_t v45 = *((void *)this + 1);
  if ((v45 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v45 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::LargeArray::ByteSizeLong(TSP::LargeArray *this)
{
  uint64_t v2 = *((int *)this + 8);
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    uint64_t v4 = (TSP::Range **)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      int v6 = *v4++;
      unsigned int v7 = TSP::Range::ByteSizeLong(v6);
      v2 += (uint64_t)&v7[(9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6];
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *((int *)this + 14);
  unsigned int v9 = (const google::protobuf::UnknownFieldSet *)(v2 + v8);
  uint64_t v10 = *((void *)this + 8);
  if (v10) {
    unsigned int v11 = (TSP::Reference **)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      unsigned int v13 = *v11++;
      int v14 = TSP::Reference::ByteSizeLong(v13);
      unsigned int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v9
                                                     + (void)v14
                                                     + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6));
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *((_DWORD *)this + 4);
  if ((v15 & 0x7F) != 0)
  {
    if (v15)
    {
      unsigned int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v9
                                                     + ((9 * (__clz(*((void *)this + 9) | 1) ^ 0x3F) + 73) >> 6)
                                                     + 1);
      if ((v15 & 2) == 0)
      {
LABEL_18:
        if ((v15 & 4) == 0)
        {
LABEL_20:
          uint64_t v16 = (const google::protobuf::UnknownFieldSet *)((char *)v9 + 2);
          if ((v15 & 8) == 0) {
            uint64_t v16 = v9;
          }
          if ((v15 & 0x10) != 0) {
            unsigned int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v16 + 2);
          }
          else {
            unsigned int v9 = v16;
          }
          if ((v15 & 0x20) != 0) {
            unsigned int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v9
          }
                                                           + ((9 * (__clz(*((void *)this + 12) | 1) ^ 0x3F) + 73) >> 6)
                                                           + 1);
          if ((v15 & 0x40) != 0) {
            unsigned int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v9
          }
                                                           + ((9 * (__clz(*((void *)this + 13) | 1) ^ 0x3F) + 73) >> 6)
                                                           + 1);
          goto LABEL_29;
        }
LABEL_19:
        unsigned int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v9
                                                       + ((9 * (__clz(*((_DWORD *)this + 22) | 1) ^ 0x1F) + 73) >> 6)
                                                       + 1);
        goto LABEL_20;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_18;
    }
    unsigned int v9 = (const google::protobuf::UnknownFieldSet *)((char *)v9
                                                   + ((9 * (__clz(*((void *)this + 10) | 1) ^ 0x3F) + 73) >> 6)
                                                   + 1);
    if ((v15 & 4) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_29:
  if (*((unsigned char *)this + 8))
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::LargeArray *)((char *)this + 8), v9, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v9;
    return (char *)v9;
  }
}

void TSP::LargeArray::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeArray::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::LargeArray::MergeFrom(void **this, const TSP::LargeArray *a2)
{
  uint64_t v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  unsigned int v5 = *((_DWORD *)a2 + 8);
  if (v5)
  {
    int v6 = (TSP::Range **)(*((void *)a2 + 5) + 8);
    unsigned int v7 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 3), *((_DWORD *)a2 + 8));
    this = sub_100071A40(v3 + 3, (void ***)v7, v6, v5, *(_DWORD *)v3[5] - *((_DWORD *)v3 + 8));
    signed int v8 = *((_DWORD *)v3 + 8) + v5;
    *((_DWORD *)v3 + 8) = v8;
    unsigned int v9 = (signed int *)v3[5];
    if (*v9 < v8) {
      *unsigned int v9 = v8;
    }
  }
  unsigned int v10 = *((_DWORD *)a2 + 14);
  if (v10)
  {
    unsigned int v11 = (TSP::Reference **)(*((void *)a2 + 8) + 8);
    uint64_t v12 = google::protobuf::internal::RepeatedPtrFieldBase::InternalExtend((google::protobuf::internal::RepeatedPtrFieldBase *)(v3 + 6), *((_DWORD *)a2 + 14));
    this = sub_10007220C(v3 + 6, (void ***)v12, v11, v10, *(_DWORD *)v3[8] - *((_DWORD *)v3 + 14));
    signed int v13 = *((_DWORD *)v3 + 14) + v10;
    *((_DWORD *)v3 + 14) = v13;
    int v14 = (signed int *)v3[8];
    if (*v14 < v13) {
      *int v14 = v13;
    }
  }
  int v15 = *((_DWORD *)a2 + 4);
  if ((v15 & 0x7F) != 0)
  {
    if (v15)
    {
      v3[9] = (void *)*((void *)a2 + 9);
      if ((v15 & 2) == 0)
      {
LABEL_12:
        if ((v15 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_22;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_12;
    }
    v3[10] = (void *)*((void *)a2 + 10);
    if ((v15 & 4) == 0)
    {
LABEL_13:
      if ((v15 & 8) == 0) {
        goto LABEL_14;
      }
      goto LABEL_23;
    }
LABEL_22:
    *((_DWORD *)v3 + 2sub_100072180((void *)this + 2) = *((_DWORD *)a2 + 22);
    if ((v15 & 8) == 0)
    {
LABEL_14:
      if ((v15 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_24;
    }
LABEL_23:
    *((unsigned char *)v3 + 9sub_100072180((void *)this + 2) = *((unsigned char *)a2 + 92);
    if ((v15 & 0x10) == 0)
    {
LABEL_15:
      if ((v15 & 0x20) == 0) {
        goto LABEL_16;
      }
      goto LABEL_25;
    }
LABEL_24:
    *((unsigned char *)v3 + 9sub_1000719B4((void *)this + 3) = *((unsigned char *)a2 + 93);
    if ((v15 & 0x20) == 0)
    {
LABEL_16:
      if ((v15 & 0x40) == 0)
      {
LABEL_18:
        *((_DWORD *)v3 + 4) |= v15;
        return this;
      }
LABEL_17:
      v3[13] = (void *)*((void *)a2 + 13);
      goto LABEL_18;
    }
LABEL_25:
    v3[12] = (void *)*((void *)a2 + 12);
    if ((v15 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  return this;
}

void TSP::LargeArray::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::LargeArray::Clear(this);
    TSP::LargeArray::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::LargeArray::IsInitialized(TSP::LargeArray *this)
{
  uint64_t v1 = *((unsigned int *)this + 8);
  while ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(*((void *)this + 5) + 8 * v1--);
    if ((~*(_DWORD *)(v2 + 16) & 3) != 0) {
      return 0;
    }
  }
  uint64_t v4 = *((unsigned int *)this + 14);
  uint64_t v5 = *((void *)this + 8);
  do
  {
    BOOL result = (int)v4 < 1;
    if ((int)v4 < 1) {
      break;
    }
    uint64_t v6 = *(void *)(v5 + 8 * v4--);
  }
  while ((*(unsigned char *)(v6 + 16) & 1) != 0);
  return result;
}

uint64_t TSP::LargeArray::GetMetadata(TSP::LargeArray *this)
{
  return off_1001EA298[78];
}

void TSP::LargeNumberArray::~LargeNumberArray(TSP::LargeNumberArray *this)
{
  if (this != (TSP::LargeNumberArray *)&TSP::_LargeNumberArray_default_instance_)
  {
    uint64_t v2 = (TSP::LargeArray *)*((void *)this + 3);
    if (v2)
    {
      TSP::LargeArray::~LargeArray(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::LargeNumberArray::~LargeNumberArray(this);
  operator delete();
}

uint64_t TSP::LargeNumberArray::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeNumberArray::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::LargeArray::Clear((google::protobuf::Arena **)this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::LargeNumberArray::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v17 = a2;
  if ((sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = (google::protobuf::internal *)((char *)v17 + 1);
      unsigned int v7 = *(unsigned __int8 *)v17;
      if ((*(char *)v17 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v17, (const char *)(v8 - 128));
      unsigned int v17 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v6 = TagFallback;
      unsigned int v7 = v15;
LABEL_7:
      if (v7 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          signed int v13 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
          if (*v5) {
            signed int v13 = (void *)*v13;
          }
          uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArray>(v13);
          *(void *)(a1 + 24) = v12;
          uint64_t v6 = v17;
        }
        unsigned int v11 = sub_10006D8FC(a3, v12, v6);
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
          return v17;
        }
        if (*v5)
        {
          unsigned int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          unsigned int v10 = sub_10003562C((unint64_t *)(a1 + 8));
          uint64_t v6 = v17;
        }
        unsigned int v11 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      }
      unsigned int v17 = v11;
      if (!v11) {
        return 0;
      }
      if (sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92))) {
        return v17;
      }
    }
    uint64_t v6 = (google::protobuf::internal *)((char *)v17 + 2);
LABEL_6:
    unsigned int v17 = v6;
    goto LABEL_7;
  }
  return v17;
}

google::protobuf::internal *sub_10006D8FC(uint64_t a1, uint64_t a2, google::protobuf::internal *this)
{
  uint64_t v5 = (const char *)*(unsigned __int8 *)this;
  if (*(char *)this < 0)
  {
    BOOL result = (google::protobuf::internal *)google::protobuf::internal::ReadSizeFallback(this, v5);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
  }
  else
  {
    uint64_t v6 = (google::protobuf::internal *)((char *)this + 1);
  }
  uint64_t v8 = *(void *)(a1 + 8);
  int v9 = v5 + v6 - v8;
  *(void *)a1 = v8 + (v9 & (v9 >> 31));
  int v10 = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v9;
  LODWORD(v8) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v8, 1);
  LODWORD(v8) = v8 - 1;
  *(_DWORD *)(a1 + 88) = v8;
  if ((int)v8 < 0 != v11) {
    return 0;
  }
  BOOL result = TSP::LargeArray::_InternalParse(a2, v6, a1);
  if (!result) {
    return result;
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v12 = *(_DWORD *)(a1 + 28) + v10 - v9;
  *(_DWORD *)(a1 + 28) = v12;
  *(void *)a1 = *(void *)(a1 + 8) + (v12 & (v12 >> 31));
  return result;
}

const google::protobuf::UnknownFieldSet *TSP::LargeNumberArray::_InternalSerialize(TSP::LargeNumberArray *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    uint64_t v6 = (TSP::LargeArray *)*((void *)this + 3);
    *a2 = 10;
    unsigned int v7 = *((_DWORD *)v6 + 5);
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unsigned int v9 = v7 >> 7;
      if (v7 >> 14)
      {
        uint64_t v8 = a2 + 3;
        do
        {
          *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
          unsigned int v10 = v9 >> 7;
          ++v8;
          unsigned int v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
      }
      else
      {
        a2[2] = v9;
        uint64_t v8 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v7;
      uint64_t v8 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::LargeArray::_InternalSerialize(v6, v8, a3, a4);
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v12 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::LargeNumberArray::ByteSizeLong(TSP::LargeArray **this)
{
  if ((_BYTE)this[2])
  {
    char v3 = TSP::LargeArray::ByteSizeLong(this[3]);
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v3[((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::LargeNumberArray::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeNumberArray::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::LargeNumberArray::MergeFrom(void **this, const TSP::LargeNumberArray *a2)
{
  char v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v6 = (const TSP::LargeArray *)*((void *)a2 + 3);
    *((_DWORD *)v3 + 4) |= 1u;
    unsigned int v7 = (void **)v3[3];
    if (!v7)
    {
      uint64_t v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        uint64_t v8 = (void *)*v8;
      }
      unsigned int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArray>(v8);
      v3[3] = v7;
      uint64_t v6 = (const TSP::LargeArray *)*((void *)a2 + 3);
    }
    if (v6) {
      unsigned int v9 = v6;
    }
    else {
      unsigned int v9 = (const TSP::LargeArray *)&TSP::_LargeArray_default_instance_;
    }
    return TSP::LargeArray::MergeFrom(v7, v9);
  }
  return this;
}

void TSP::LargeNumberArray::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::LargeNumberArray::Clear(this);
    TSP::LargeNumberArray::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::LargeNumberArray::IsInitialized(TSP::LargeNumberArray *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = TSP::LargeArray::IsInitialized(*((TSP::LargeArray **)this + 3));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t TSP::LargeNumberArray::GetMetadata(TSP::LargeNumberArray *this)
{
  return off_1001EA298[80];
}

void TSP::LargeStringArray::~LargeStringArray(TSP::LargeStringArray *this)
{
  if (this != (TSP::LargeStringArray *)&TSP::_LargeStringArray_default_instance_)
  {
    uint64_t v2 = (TSP::LargeArray *)*((void *)this + 3);
    if (v2)
    {
      TSP::LargeArray::~LargeArray(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::LargeStringArray::~LargeStringArray(this);
  operator delete();
}

uint64_t TSP::LargeStringArray::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeStringArray::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::LargeArray::Clear((google::protobuf::Arena **)this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::LargeStringArray::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v17 = a2;
  if ((sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = (google::protobuf::internal *)((char *)v17 + 1);
      unsigned int v7 = *(unsigned __int8 *)v17;
      if ((*(char *)v17 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v17, (const char *)(v8 - 128));
      unsigned int v17 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v6 = TagFallback;
      unsigned int v7 = v15;
LABEL_7:
      if (v7 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          signed int v13 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
          if (*v5) {
            signed int v13 = (void *)*v13;
          }
          uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArray>(v13);
          *(void *)(a1 + 24) = v12;
          uint64_t v6 = v17;
        }
        unsigned int v11 = sub_10006D8FC(a3, v12, v6);
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
          return v17;
        }
        if (*v5)
        {
          unsigned int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          unsigned int v10 = sub_10003562C((unint64_t *)(a1 + 8));
          uint64_t v6 = v17;
        }
        unsigned int v11 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      }
      unsigned int v17 = v11;
      if (!v11) {
        return 0;
      }
      if (sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92))) {
        return v17;
      }
    }
    uint64_t v6 = (google::protobuf::internal *)((char *)v17 + 2);
LABEL_6:
    unsigned int v17 = v6;
    goto LABEL_7;
  }
  return v17;
}

const google::protobuf::UnknownFieldSet *TSP::LargeStringArray::_InternalSerialize(TSP::LargeStringArray *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    uint64_t v6 = (TSP::LargeArray *)*((void *)this + 3);
    *a2 = 10;
    unsigned int v7 = *((_DWORD *)v6 + 5);
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unsigned int v9 = v7 >> 7;
      if (v7 >> 14)
      {
        unsigned int v8 = a2 + 3;
        do
        {
          *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
          unsigned int v10 = v9 >> 7;
          ++v8;
          unsigned int v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
      }
      else
      {
        a2[2] = v9;
        unsigned int v8 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v7;
      unsigned int v8 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::LargeArray::_InternalSerialize(v6, v8, a3, a4);
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v12 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::LargeStringArray::ByteSizeLong(TSP::LargeArray **this)
{
  if ((_BYTE)this[2])
  {
    char v3 = TSP::LargeArray::ByteSizeLong(this[3]);
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v3[((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::LargeStringArray::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeStringArray::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::LargeStringArray::MergeFrom(void **this, const TSP::LargeStringArray *a2)
{
  char v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v6 = (const TSP::LargeArray *)*((void *)a2 + 3);
    *((_DWORD *)v3 + 4) |= 1u;
    unsigned int v7 = (void **)v3[3];
    if (!v7)
    {
      unsigned int v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        unsigned int v8 = (void *)*v8;
      }
      unsigned int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArray>(v8);
      v3[3] = v7;
      uint64_t v6 = (const TSP::LargeArray *)*((void *)a2 + 3);
    }
    if (v6) {
      unsigned int v9 = v6;
    }
    else {
      unsigned int v9 = (const TSP::LargeArray *)&TSP::_LargeArray_default_instance_;
    }
    return TSP::LargeArray::MergeFrom(v7, v9);
  }
  return this;
}

void TSP::LargeStringArray::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::LargeStringArray::Clear(this);
    TSP::LargeStringArray::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::LargeStringArray::IsInitialized(TSP::LargeStringArray *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = TSP::LargeArray::IsInitialized(*((TSP::LargeArray **)this + 3));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t TSP::LargeStringArray::GetMetadata(TSP::LargeStringArray *this)
{
  return off_1001EA298[82];
}

void TSP::LargeLazyObjectArray::~LargeLazyObjectArray(TSP::LargeLazyObjectArray *this)
{
  if (this != (TSP::LargeLazyObjectArray *)&TSP::_LargeLazyObjectArray_default_instance_)
  {
    uint64_t v2 = (TSP::LargeArray *)*((void *)this + 3);
    if (v2)
    {
      TSP::LargeArray::~LargeArray(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::LargeLazyObjectArray::~LargeLazyObjectArray(this);
  operator delete();
}

uint64_t TSP::LargeLazyObjectArray::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeLazyObjectArray::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::LargeArray::Clear((google::protobuf::Arena **)this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::LargeLazyObjectArray::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v17 = a2;
  if ((sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = (google::protobuf::internal *)((char *)v17 + 1);
      unsigned int v7 = *(unsigned __int8 *)v17;
      if ((*(char *)v17 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v17, (const char *)(v8 - 128));
      unsigned int v17 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v6 = TagFallback;
      unsigned int v7 = v15;
LABEL_7:
      if (v7 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          signed int v13 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
          if (*v5) {
            signed int v13 = (void *)*v13;
          }
          uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArray>(v13);
          *(void *)(a1 + 24) = v12;
          uint64_t v6 = v17;
        }
        unsigned int v11 = sub_10006D8FC(a3, v12, v6);
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
          return v17;
        }
        if (*v5)
        {
          unsigned int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          unsigned int v10 = sub_10003562C((unint64_t *)(a1 + 8));
          uint64_t v6 = v17;
        }
        unsigned int v11 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      }
      unsigned int v17 = v11;
      if (!v11) {
        return 0;
      }
      if (sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92))) {
        return v17;
      }
    }
    uint64_t v6 = (google::protobuf::internal *)((char *)v17 + 2);
LABEL_6:
    unsigned int v17 = v6;
    goto LABEL_7;
  }
  return v17;
}

const google::protobuf::UnknownFieldSet *TSP::LargeLazyObjectArray::_InternalSerialize(TSP::LargeLazyObjectArray *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    uint64_t v6 = (TSP::LargeArray *)*((void *)this + 3);
    *a2 = 10;
    unsigned int v7 = *((_DWORD *)v6 + 5);
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unsigned int v9 = v7 >> 7;
      if (v7 >> 14)
      {
        unsigned int v8 = a2 + 3;
        do
        {
          *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
          unsigned int v10 = v9 >> 7;
          ++v8;
          unsigned int v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
      }
      else
      {
        a2[2] = v9;
        unsigned int v8 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v7;
      unsigned int v8 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::LargeArray::_InternalSerialize(v6, v8, a3, a4);
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v12 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::LargeLazyObjectArray::ByteSizeLong(TSP::LargeArray **this)
{
  if ((_BYTE)this[2])
  {
    char v3 = TSP::LargeArray::ByteSizeLong(this[3]);
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v3[((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::LargeLazyObjectArray::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeLazyObjectArray::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::LargeLazyObjectArray::MergeFrom(void **this, const TSP::LargeLazyObjectArray *a2)
{
  char v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v6 = (const TSP::LargeArray *)*((void *)a2 + 3);
    *((_DWORD *)v3 + 4) |= 1u;
    unsigned int v7 = (void **)v3[3];
    if (!v7)
    {
      unsigned int v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        unsigned int v8 = (void *)*v8;
      }
      unsigned int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArray>(v8);
      v3[3] = v7;
      uint64_t v6 = (const TSP::LargeArray *)*((void *)a2 + 3);
    }
    if (v6) {
      unsigned int v9 = v6;
    }
    else {
      unsigned int v9 = (const TSP::LargeArray *)&TSP::_LargeArray_default_instance_;
    }
    return TSP::LargeArray::MergeFrom(v7, v9);
  }
  return this;
}

void TSP::LargeLazyObjectArray::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::LargeLazyObjectArray::Clear(this);
    TSP::LargeLazyObjectArray::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::LargeLazyObjectArray::IsInitialized(TSP::LargeLazyObjectArray *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = TSP::LargeArray::IsInitialized(*((TSP::LargeArray **)this + 3));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t TSP::LargeLazyObjectArray::GetMetadata(TSP::LargeLazyObjectArray *this)
{
  return off_1001EA298[84];
}

void TSP::LargeObjectArray::~LargeObjectArray(TSP::LargeObjectArray *this)
{
  if (this != (TSP::LargeObjectArray *)&TSP::_LargeObjectArray_default_instance_)
  {
    uint64_t v2 = (TSP::LargeArray *)*((void *)this + 3);
    if (v2)
    {
      TSP::LargeArray::~LargeArray(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::LargeObjectArray::~LargeObjectArray(this);
  operator delete();
}

uint64_t TSP::LargeObjectArray::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeObjectArray::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::LargeArray::Clear((google::protobuf::Arena **)this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::LargeObjectArray::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v17 = a2;
  if ((sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = (google::protobuf::internal *)((char *)v17 + 1);
      unsigned int v7 = *(unsigned __int8 *)v17;
      if ((*(char *)v17 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v17, (const char *)(v8 - 128));
      unsigned int v17 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v6 = TagFallback;
      unsigned int v7 = v15;
LABEL_7:
      if (v7 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          signed int v13 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
          if (*v5) {
            signed int v13 = (void *)*v13;
          }
          uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArray>(v13);
          *(void *)(a1 + 24) = v12;
          uint64_t v6 = v17;
        }
        unsigned int v11 = sub_10006D8FC(a3, v12, v6);
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
          return v17;
        }
        if (*v5)
        {
          unsigned int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          unsigned int v10 = sub_10003562C((unint64_t *)(a1 + 8));
          uint64_t v6 = v17;
        }
        unsigned int v11 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      }
      unsigned int v17 = v11;
      if (!v11) {
        return 0;
      }
      if (sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92))) {
        return v17;
      }
    }
    uint64_t v6 = (google::protobuf::internal *)((char *)v17 + 2);
LABEL_6:
    unsigned int v17 = v6;
    goto LABEL_7;
  }
  return v17;
}

const google::protobuf::UnknownFieldSet *TSP::LargeObjectArray::_InternalSerialize(TSP::LargeObjectArray *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    uint64_t v6 = (TSP::LargeArray *)*((void *)this + 3);
    *a2 = 10;
    unsigned int v7 = *((_DWORD *)v6 + 5);
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unsigned int v9 = v7 >> 7;
      if (v7 >> 14)
      {
        unsigned int v8 = a2 + 3;
        do
        {
          *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
          unsigned int v10 = v9 >> 7;
          ++v8;
          unsigned int v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
      }
      else
      {
        a2[2] = v9;
        unsigned int v8 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v7;
      unsigned int v8 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::LargeArray::_InternalSerialize(v6, v8, a3, a4);
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v12 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::LargeObjectArray::ByteSizeLong(TSP::LargeArray **this)
{
  if ((_BYTE)this[2])
  {
    char v3 = TSP::LargeArray::ByteSizeLong(this[3]);
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v3[((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::LargeObjectArray::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeObjectArray::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::LargeObjectArray::MergeFrom(void **this, const TSP::LargeObjectArray *a2)
{
  char v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v6 = (const TSP::LargeArray *)*((void *)a2 + 3);
    *((_DWORD *)v3 + 4) |= 1u;
    unsigned int v7 = (void **)v3[3];
    if (!v7)
    {
      unsigned int v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        unsigned int v8 = (void *)*v8;
      }
      unsigned int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArray>(v8);
      v3[3] = v7;
      uint64_t v6 = (const TSP::LargeArray *)*((void *)a2 + 3);
    }
    if (v6) {
      unsigned int v9 = v6;
    }
    else {
      unsigned int v9 = (const TSP::LargeArray *)&TSP::_LargeArray_default_instance_;
    }
    return TSP::LargeArray::MergeFrom(v7, v9);
  }
  return this;
}

void TSP::LargeObjectArray::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::LargeObjectArray::Clear(this);
    TSP::LargeObjectArray::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::LargeObjectArray::IsInitialized(TSP::LargeObjectArray *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = TSP::LargeArray::IsInitialized(*((TSP::LargeArray **)this + 3));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t TSP::LargeObjectArray::GetMetadata(TSP::LargeObjectArray *this)
{
  return off_1001EA298[86];
}

void TSP::LargeUUIDArray::~LargeUUIDArray(TSP::LargeUUIDArray *this)
{
  if (this != (TSP::LargeUUIDArray *)&TSP::_LargeUUIDArray_default_instance_)
  {
    uint64_t v2 = (TSP::LargeArray *)*((void *)this + 3);
    if (v2)
    {
      TSP::LargeArray::~LargeArray(v2);
      operator delete();
    }
  }
  sub_1000333D0((uint64_t *)this + 1);
}

{
  uint64_t vars8;

  TSP::LargeUUIDArray::~LargeUUIDArray(this);
  operator delete();
}

uint64_t TSP::LargeUUIDArray::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::LargeUUIDArray::Clear(google::protobuf::Arena **this)
{
  uint64_t v1 = (uint64_t)this;
  if ((_BYTE)this[2]) {
    this = TSP::LargeArray::Clear((google::protobuf::Arena **)this[3]);
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_100035820((unint64_t *)v2);
  }
  return this;
}

google::protobuf::internal *TSP::LargeUUIDArray::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v17 = a2;
  if ((sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = (google::protobuf::internal *)((char *)v17 + 1);
      unsigned int v7 = *(unsigned __int8 *)v17;
      if ((*(char *)v17 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v17, (const char *)(v8 - 128));
      unsigned int v17 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v6 = TagFallback;
      unsigned int v7 = v15;
LABEL_7:
      if (v7 == 10)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          signed int v13 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFELL);
          if (*v5) {
            signed int v13 = (void *)*v13;
          }
          uint64_t v12 = google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArray>(v13);
          *(void *)(a1 + 24) = v12;
          uint64_t v6 = v17;
        }
        unsigned int v11 = sub_10006D8FC(a3, v12, v6);
      }
      else
      {
        if (v7) {
          BOOL v9 = (v7 & 7) == 4;
        }
        else {
          BOOL v9 = 1;
        }
        if (v9)
        {
          *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
          return v17;
        }
        if (*v5)
        {
          unsigned int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
        }
        else
        {
          unsigned int v10 = sub_10003562C((unint64_t *)(a1 + 8));
          uint64_t v6 = v17;
        }
        unsigned int v11 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      }
      unsigned int v17 = v11;
      if (!v11) {
        return 0;
      }
      if (sub_1000355B8(a3, &v17, *(_DWORD *)(a3 + 92))) {
        return v17;
      }
    }
    uint64_t v6 = (google::protobuf::internal *)((char *)v17 + 2);
LABEL_6:
    unsigned int v17 = v6;
    goto LABEL_7;
  }
  return v17;
}

const google::protobuf::UnknownFieldSet *TSP::LargeUUIDArray::_InternalSerialize(TSP::LargeUUIDArray *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    uint64_t v6 = (TSP::LargeArray *)*((void *)this + 3);
    *a2 = 10;
    unsigned int v7 = *((_DWORD *)v6 + 5);
    if (v7 > 0x7F)
    {
      a2[1] = v7 | 0x80;
      unsigned int v9 = v7 >> 7;
      if (v7 >> 14)
      {
        unsigned int v8 = a2 + 3;
        do
        {
          *(v8 - sub_1000333D0((uint64_t *)this + 1) = v9 | 0x80;
          unsigned int v10 = v9 >> 7;
          ++v8;
          unsigned int v11 = v9 >> 14;
          v9 >>= 7;
        }
        while (v11);
        *(v8 - sub_1000333D0((uint64_t *)this + 1) = v10;
      }
      else
      {
        a2[2] = v9;
        unsigned int v8 = a2 + 3;
      }
    }
    else
    {
      a2[1] = v7;
      unsigned int v8 = a2 + 2;
    }
    a2 = (unsigned __int8 *)TSP::LargeArray::_InternalSerialize(v6, v8, a3, a4);
  }
  uint64_t v12 = *((void *)this + 1);
  if ((v12 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v12 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::LargeUUIDArray::ByteSizeLong(TSP::LargeArray **this)
{
  if ((_BYTE)this[2])
  {
    char v3 = TSP::LargeArray::ByteSizeLong(this[3]);
    uint64_t v2 = (const google::protobuf::UnknownFieldSet *)&v3[((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1];
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((_BYTE)this[1])
  {
    return google::protobuf::internal::ComputeUnknownFieldsSize((google::protobuf::UnknownFieldSet *)(this + 1), v2, (_DWORD *)this + 5);
  }
  else
  {
    *((_DWORD *)this + sub_100050800((void *)this + 5) = v2;
    return (char *)v2;
  }
}

void TSP::LargeUUIDArray::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::LargeUUIDArray::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::LargeUUIDArray::MergeFrom(void **this, const TSP::LargeUUIDArray *a2)
{
  char v3 = this;
  uint64_t v4 = this + 1;
  uint64_t v5 = *((void *)a2 + 1);
  if (v5) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v5 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  if (*((unsigned char *)a2 + 16))
  {
    uint64_t v6 = (const TSP::LargeArray *)*((void *)a2 + 3);
    *((_DWORD *)v3 + 4) |= 1u;
    unsigned int v7 = (void **)v3[3];
    if (!v7)
    {
      unsigned int v8 = (void *)(*v4 & 0xFFFFFFFFFFFFFFFELL);
      if (*v4) {
        unsigned int v8 = (void *)*v8;
      }
      unsigned int v7 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArray>(v8);
      v3[3] = v7;
      uint64_t v6 = (const TSP::LargeArray *)*((void *)a2 + 3);
    }
    if (v6) {
      unsigned int v9 = v6;
    }
    else {
      unsigned int v9 = (const TSP::LargeArray *)&TSP::_LargeArray_default_instance_;
    }
    return TSP::LargeArray::MergeFrom(v7, v9);
  }
  return this;
}

void TSP::LargeUUIDArray::CopyFrom(google::protobuf::Arena **this, google::protobuf::Arena **a2)
{
  if (a2 != this)
  {
    TSP::LargeUUIDArray::Clear(this);
    TSP::LargeUUIDArray::MergeFrom((void **)this, (const google::protobuf::Message *)a2);
  }
}

BOOL TSP::LargeUUIDArray::IsInitialized(TSP::LargeUUIDArray *this)
{
  if ((*((unsigned char *)this + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = TSP::LargeArray::IsInitialized(*((TSP::LargeArray **)this + 3));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t TSP::LargeUUIDArray::GetMetadata(TSP::LargeUUIDArray *this)
{
  return off_1001EA298[88];
}

void TSP::FieldOptions::~FieldOptions(TSP::FieldOptions *this)
{
}

{
  uint64_t vars8;

  sub_1000333D0((uint64_t *)this + 1);
  operator delete();
}

uint64_t TSP::FieldOptions::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a2;
  return this;
}

google::protobuf::Arena **TSP::FieldOptions::Clear(TSP::FieldOptions *this)
{
  char v2 = *((unsigned char *)this + 8);
  BOOL result = (google::protobuf::Arena **)((char *)this + 8);
  *((_DWORD *)result + 4) = 0;
  *((_DWORD *)result + sub_100072180((void *)this + 2) = 0;
  if (v2) {
    return sub_100035820((unint64_t *)result);
  }
  return result;
}

google::protobuf::internal *TSP::FieldOptions::_InternalParse(uint64_t a1, google::protobuf::internal *a2, uint64_t a3)
{
  unsigned int v20 = a2;
  if ((sub_1000355B8(a3, &v20, *(_DWORD *)(a3 + 92)) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = (google::protobuf::internal *)((char *)v20 + 1);
      unsigned int v7 = *(unsigned __int8 *)v20;
      if ((*(char *)v20 & 0x80000000) == 0) {
        goto LABEL_6;
      }
      unsigned int v8 = v7 + (*(unsigned __int8 *)v6 << 7);
      unsigned int v7 = v8 - 128;
      if ((*(char *)v6 & 0x80000000) == 0) {
        break;
      }
      TagFallbacint k = (google::protobuf::internal *)google::protobuf::internal::ReadTagFallback(v20, (const char *)(v8 - 128));
      unsigned int v20 = TagFallback;
      if (!TagFallback) {
        return 0;
      }
      uint64_t v6 = TagFallback;
      unsigned int v7 = v16;
LABEL_7:
      if (v7 == 8)
      {
        unsigned int v11 = (google::protobuf::internal *)((char *)v6 + 1);
        uint64_t v12 = *(unsigned __int8 *)v6;
        if ((*(char *)v6 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v13 = *(char *)v11;
        int v14 = v12 + (v13 << 7);
        uint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          unsigned int v20 = (google::protobuf::internal *)google::protobuf::internal::VarintParseSlow64(v6, (v14 - 128));
          if (!v20) {
            return 0;
          }
          uint64_t v12 = v17;
        }
        else
        {
          unsigned int v11 = (google::protobuf::internal *)((char *)v6 + 2);
LABEL_19:
          unsigned int v20 = v11;
        }
        if (v12 > 7)
        {
          if (*v5) {
            uint64_t v18 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
          }
          else {
            uint64_t v18 = sub_10003562C((unint64_t *)(a1 + 8));
          }
          google::protobuf::UnknownFieldSet::AddVarint((google::protobuf::UnknownFieldSet *)v18, 1u, v12);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 24) = v12;
        }
        goto LABEL_22;
      }
      if (v7) {
        BOOL v9 = (v7 & 7) == 4;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9)
      {
        *(_DWORD *)(a3 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v7 - 1;
        return v20;
      }
      if (*v5)
      {
        unsigned int v10 = (google::protobuf::Arena **)((*v5 & 0xFFFFFFFFFFFFFFFELL) + 8);
      }
      else
      {
        unsigned int v10 = sub_10003562C((unint64_t *)(a1 + 8));
        uint64_t v6 = v20;
      }
      unsigned int v20 = google::protobuf::internal::UnknownFieldParse(v7, (google::protobuf::UnknownFieldSet *)v10, v6);
      if (!v20) {
        return 0;
      }
LABEL_22:
      if (sub_1000355B8(a3, &v20, *(_DWORD *)(a3 + 92))) {
        return v20;
      }
    }
    uint64_t v6 = (google::protobuf::internal *)((char *)v20 + 2);
LABEL_6:
    unsigned int v20 = v6;
    goto LABEL_7;
  }
  return v20;
}

const google::protobuf::UnknownFieldSet *TSP::FieldOptions::_InternalSerialize(TSP::FieldOptions *this, unsigned __int8 *a2, google::protobuf::io::EpsCopyOutputStream *a3, google::protobuf::io::EpsCopyOutputStream *a4)
{
  if (*((unsigned char *)this + 16))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (unsigned __int8 *)google::protobuf::io::EpsCopyOutputStream::EnsureSpaceFallback(a3, a2);
    }
    unint64_t v6 = *((int *)this + 6);
    *a2 = 8;
    if (v6 > 0x7F)
    {
      a2[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      if (v6 >> 14)
      {
        a2 += 3;
        do
        {
          *(a2 - sub_1000333D0((uint64_t *)this + 1) = v7 | 0x80;
          unint64_t v8 = v7 >> 7;
          ++a2;
          unint64_t v9 = v7 >> 14;
          v7 >>= 7;
        }
        while (v9);
        *(a2 - sub_1000333D0((uint64_t *)this + 1) = v8;
      }
      else
      {
        a2[2] = v7;
        a2 += 3;
      }
    }
    else
    {
      a2[1] = v6;
      a2 += 2;
    }
  }
  uint64_t v10 = *((void *)this + 1);
  if ((v10 & 1) == 0) {
    return (const google::protobuf::UnknownFieldSet *)a2;
  }
  return google::protobuf::internal::WireFormat::InternalSerializeUnknownFieldsToArray((google::protobuf::internal::WireFormat *)((v10 & 0xFFFFFFFFFFFFFFFELL) + 8), (const google::protobuf::UnknownFieldSet *)a2, a3, a4);
}

char *TSP::FieldOptions::ByteSizeLong(TSP::FieldOptions *this)
{
  if (*((unsigned char *)this + 16))
  {
    int v2 = *((_DWORD *)this + 6);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  if (*((unsigned char *)this + 8)) {
    return google::protobuf::internal::ComputeUnknownFieldsSize((TSP::FieldOptions *)((char *)this + 8), (const google::protobuf::UnknownFieldSet *)v1, (_DWORD *)this + 5);
  }
  *((_DWORD *)this + sub_100050800((void *)this + 5) = v1;
  return (char *)v1;
}

void TSP::FieldOptions::MergeFrom(void **this, const google::protobuf::Message *lpsrc)
{
  if (v4)
  {
    TSP::FieldOptions::MergeFrom(this, v4);
  }
  else
  {
    google::protobuf::internal::ReflectionOps::Merge(lpsrc, (const google::protobuf::Message *)this, v5);
  }
}

void **TSP::FieldOptions::MergeFrom(void **this, const TSP::FieldOptions *a2)
{
  char v3 = this;
  uint64_t v4 = *((void *)a2 + 1);
  if (v4) {
    this = sub_1000357D4((unint64_t *)this + 1, (const google::protobuf::UnknownFieldSet *)((v4 & 0xFFFFFFFFFFFFFFFELL) + 8));
  }
  if (*((unsigned char *)a2 + 16))
  {
    int v5 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 4) |= 1u;
    *((_DWORD *)v3 + sub_100072180((void *)this + 6) = v5;
  }
  return this;
}

void TSP::FieldOptions::CopyFrom(TSP::FieldOptions *this, const google::protobuf::Message *lpsrc)
{
  if (lpsrc != this)
  {
    char v6 = *((unsigned char *)this + 8);
    int v5 = (char *)this + 8;
    *((_DWORD *)v5 + 4) = 0;
    *((_DWORD *)v5 + sub_100072180((void *)this + 2) = 0;
    if (v6) {
      sub_100035820((unint64_t *)v5);
    }
    TSP::FieldOptions::MergeFrom((void **)this, lpsrc);
  }
}

uint64_t TSP::FieldOptions::IsInitialized(TSP::FieldOptions *this)
{
  return 1;
}

uint64_t TSP::FieldOptions::GetMetadata(TSP::FieldOptions *this)
{
  return off_1001EA298[90];
}

void *sub_10006FA38(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100072490(this, 1);
  *BOOL result = off_1001C9808;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  *(void *)((char *)result + 2sub_100072180((void *)this + 9) = 0;
  return result;
}

void *sub_10006FAAC(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100072568(this, 1);
  *BOOL result = off_1001C98B8;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_10006FB1C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_100072640(a1);
}

void sub_10006FBC0()
{
}

void *sub_10006FBE8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100072774(a1, 1);
  TSP::SparseReferenceArray::SparseReferenceArray((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10006FC4C()
{
}

void *sub_10006FC74(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100072830(this, 1);
  *BOOL result = off_1001C9AC8;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_10006FCE4(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100072908(this, 1);
  *BOOL result = off_1001C9B78;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  *((_DWORD *)result + 8) = 0;
  return result;
}

void *sub_10006FD58(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1000729E0(a1);
}

void sub_10006FDF8()
{
}

void *sub_10006FE20(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100072B10(this, 1);
  *BOOL result = off_1001C9CD8;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_10006FE90(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100072BE8(this, 1);
  *BOOL result = off_1001C9D88;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_10006FF00(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  BOOL result = sub_100072CC0(this, 1);
  *BOOL result = off_1001C9E38;
  result[1] = this;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_10006FF70(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100072D98(a1, 1);
  TSP::IndexSet::IndexSet((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10006FFD4()
{
}

double sub_10006FFFC(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  uint64_t v2 = sub_100072E54(this, 1);
  void *v2 = off_1001C9F98;
  v2[1] = this;
  *((_OWORD *)v2 + sub_1000333D0((uint64_t *)this + 1) = 0u;
  *((_OWORD *)v2 + sub_100072180((void *)this + 2) = 0u;
  v2[6] = 0;
  *(void *)&double result = 0x100000001;
  v2[7] = 0x100000001;
  *((_DWORD *)v2 + 1sub_100072180((void *)this + 6) = 1065353216;
  return result;
}

void *sub_100070084(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100072F2C(a1, 1);
  TSP::Path_Element::Path_Element((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000700E8()
{
}

void *sub_100070110(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100072FE8(a1, 1);
  TSP::Path::Path((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_100070174()
{
}

void *sub_10007019C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1000730A4(a1);
}

void sub_10007023C()
{
}

void *sub_100070264(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000731D4(a1, 1);
  TSP::ReferenceDictionary::ReferenceDictionary((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000702C8()
{
}

void *sub_1000702F0(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  double result = sub_100073290(this, 1);
  *double result = off_1001CA308;
  result[1] = this;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_100070364(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100073368(a1, 1);
  TSP::CFUUIDArchive::CFUUIDArchive(v2, (uint64_t)a1);
  return v2;
}

void sub_1000703C8()
{
}

void *sub_1000703F0(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100073424(a1, 1);
  TSP::UUIDSetArchive::UUIDSetArchive((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_100070454()
{
}

void *sub_10007047C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000734E0(a1, 1);
  TSP::UUIDMapArchive::UUIDMapArchive((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000704E0()
{
}

void *sub_100070508(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_10007359C(a1, 1);
  TSP::UUIDMultiMapArchive::UUIDMultiMapArchive((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10007056C()
{
}

void *sub_100070594(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_100073658(a1);
}

void sub_100070634()
{
}

void *sub_10007065C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100073788(a1, 1);
  TSP::UUIDRectArchive::UUIDRectArchive((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000706C0()
{
}

void *sub_1000706E8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_100073844(a1);
}

void sub_10007078C()
{
}

void *sub_1000707B4(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100073978(a1, 1);
  TSP::SparseUUIDArray::SparseUUIDArray((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_100070818()
{
}

void *sub_100070840(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100073A34(a1, 1);
  TSP::UUIDPath::UUIDPath((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000708A4()
{
}

void *sub_1000708CC(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_100073AF0(a1);
}

void sub_100070970()
{
}

void *sub_100070998(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100073C24(a1, 1);
  TSP::SparseUUIDPathArray::SparseUUIDPathArray((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_1000709FC()
{
}

void *sub_100070A24(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100073CE0(a1, 1);
  TSP::PasteboardObject::PasteboardObject((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_100070A88()
{
}

void *sub_100070AB0(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100073D9C(a1, 1);
  TSP::ObjectCollection::ObjectCollection((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_100070B14()
{
}

void *sub_100070B3C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100073E58(a1, 1);
  TSP::ObjectContainer::ObjectContainer((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_100070BA0()
{
}

void *sub_100070BC8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100073F14(a1, 1);
  void *v2 = off_1001CAD58;
  v2[1] = a1;
  google::protobuf::internal::ExtensionSet::ExtensionSet((uint64_t)(v2 + 2), (uint64_t)a1);
  *((_DWORD *)v2 + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return v2;
}

void sub_100070C68()
{
}

void *sub_100070C90(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100073FD0(a1, 1);
  TSP::LargeArraySegment::LargeArraySegment(v2, (uint64_t)a1);
  return v2;
}

void sub_100070CF4()
{
}

void *sub_100070D1C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_10007408C(a1, 1);
  TSP::LargeNumberArraySegment::LargeNumberArraySegment(v2, (uint64_t)a1);
  return v2;
}

void sub_100070D80()
{
}

void *sub_100070DA8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_100074148(a1);
}

void sub_100070E50()
{
}

void *sub_100070E78(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100074280(a1, 1);
  TSP::LargeStringArraySegment::LargeStringArraySegment(v2, (uint64_t)a1);
  return v2;
}

void sub_100070EDC()
{
}

void *sub_100070F04(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_10007433C(a1, 1);
  TSP::LargeUUIDArraySegment::LargeUUIDArraySegment(v2, (uint64_t)a1);
  return v2;
}

void sub_100070F68()
{
}

void *sub_100070F90(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000743F8(a1, 1);
  TSP::LargeLazyObjectArraySegment::LargeLazyObjectArraySegment(v2, (uint64_t)a1);
  return v2;
}

void sub_100070FF4()
{
}

void *sub_10007101C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_1000744B4(a1, 1);
  TSP::LargeObjectArraySegment::LargeObjectArraySegment(v2, (uint64_t)a1);
  return v2;
}

void sub_100071080()
{
}

void *sub_1000710A8(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  uint64_t v2 = sub_100074570(a1, 1);
  TSP::LargeArray::LargeArray((uint64_t)v2, (uint64_t)a1);
  return v2;
}

void sub_10007110C()
{
}

void *sub_100071134(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_10007462C(a1);
}

void sub_1000711D4()
{
}

void *sub_1000711FC(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_10007475C(a1);
}

void sub_10007129C()
{
}

void *sub_1000712C4(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_10007488C(a1);
}

void sub_100071364()
{
}

void *sub_10007138C(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1000749BC(a1);
}

void sub_10007142C()
{
}

void *sub_100071454(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  return sub_100074AEC(a1);
}

void sub_1000714F4()
{
}

void *sub_10007151C(google::protobuf::Arena *this)
{
  if (!this) {
    operator new();
  }
  double result = sub_100074C1C(this, 1);
  *double result = off_1001CB6F8;
  result[1] = this;
  result[2] = 0;
  *((_DWORD *)result + sub_100072180((void *)this + 6) = 0;
  return result;
}

uint64_t sub_10007158C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(0);
}

uint64_t sub_100071594(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(a2);
}

uint64_t sub_10007159C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataReference>(0);
}

uint64_t sub_1000715A4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataReference>(a2);
}

uint64_t sub_1000715AC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SparseReferenceArray_Entry>(0);
}

uint64_t sub_1000715B4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SparseReferenceArray_Entry>(a2);
}

uint64_t sub_1000715BC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SparseReferenceArray>(0);
}

uint64_t sub_1000715C4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SparseReferenceArray>(a2);
}

uint64_t sub_1000715CC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Point>(0);
}

uint64_t sub_1000715D4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Point>(a2);
}

uint64_t sub_1000715DC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Pose3D>(0);
}

uint64_t sub_1000715E4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Pose3D>(a2);
}

uint64_t sub_1000715EC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Rect>(0);
}

uint64_t sub_1000715F4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Rect>(a2);
}

uint64_t sub_1000715FC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Size>(0);
}

uint64_t sub_100071604(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Size>(a2);
}

uint64_t sub_10007160C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Range>(0);
}

uint64_t sub_100071614(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Range>(a2);
}

uint64_t sub_10007161C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Date>(0);
}

uint64_t sub_100071624(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Date>(a2);
}

uint64_t sub_10007162C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::IndexSet>(0);
}

uint64_t sub_100071634(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::IndexSet>(a2);
}

uint64_t sub_10007163C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Color>(0);
}

uint64_t sub_100071644(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Color>(a2);
}

uint64_t sub_10007164C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Path_Element>(0);
}

uint64_t sub_100071654(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Path_Element>(a2);
}

uint64_t sub_10007165C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Path>(0);
}

uint64_t sub_100071664(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::Path>(a2);
}

uint64_t sub_10007166C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ReferenceDictionary_Entry>(0);
}

uint64_t sub_100071674(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ReferenceDictionary_Entry>(a2);
}

uint64_t sub_10007167C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ReferenceDictionary>(0);
}

uint64_t sub_100071684(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ReferenceDictionary>(a2);
}

uint64_t sub_10007168C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(0);
}

uint64_t sub_100071694(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(a2);
}

uint64_t sub_10007169C()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::CFUUIDArchive>(0);
}

uint64_t sub_1000716A4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::CFUUIDArchive>(a2);
}

uint64_t sub_1000716AC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDSetArchive>(0);
}

uint64_t sub_1000716B4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDSetArchive>(a2);
}

uint64_t sub_1000716BC()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDMapArchive>(0);
}

uint64_t sub_1000716C4(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDMapArchive>(a2);
}

uint64_t sub_1000716CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_1000716D4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDMultiMapArchive>(0);
}

uint64_t sub_1000716DC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDMultiMapArchive>(a2);
}

uint64_t sub_1000716E4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDCoordArchive>(0);
}

uint64_t sub_1000716EC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDCoordArchive>(a2);
}

uint64_t sub_1000716F4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDRectArchive>(0);
}

uint64_t sub_1000716FC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDRectArchive>(a2);
}

uint64_t sub_100071704()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SparseUUIDArray_Entry>(0);
}

uint64_t sub_10007170C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SparseUUIDArray_Entry>(a2);
}

uint64_t sub_100071714()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SparseUUIDArray>(0);
}

uint64_t sub_10007171C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SparseUUIDArray>(a2);
}

uint64_t sub_100071724()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDPath>(0);
}

uint64_t sub_10007172C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::UUIDPath>(a2);
}

uint64_t sub_100071734()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SparseUUIDPathArray_Entry>(0);
}

uint64_t sub_10007173C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SparseUUIDPathArray_Entry>(a2);
}

uint64_t sub_100071744()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SparseUUIDPathArray>(0);
}

uint64_t sub_10007174C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::SparseUUIDPathArray>(a2);
}

uint64_t sub_100071754()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::PasteboardObject>(0);
}

uint64_t sub_10007175C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::PasteboardObject>(a2);
}

uint64_t sub_100071764()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectCollection>(0);
}

uint64_t sub_10007176C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectCollection>(a2);
}

uint64_t sub_100071774()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectContainer>(0);
}

uint64_t sub_10007177C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::ObjectContainer>(a2);
}

uint64_t sub_100071784()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataAttributes>(0);
}

uint64_t sub_10007178C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::DataAttributes>(a2);
}

uint64_t sub_100071794()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArraySegment>(0);
}

uint64_t sub_10007179C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArraySegment>(a2);
}

uint64_t sub_1000717A4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeNumberArraySegment>(0);
}

uint64_t sub_1000717AC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeNumberArraySegment>(a2);
}

uint64_t sub_1000717B4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeStringArraySegment_OptionalElement>(0);
}

uint64_t sub_1000717BC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeStringArraySegment_OptionalElement>(a2);
}

uint64_t sub_1000717C4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeStringArraySegment>(0);
}

uint64_t sub_1000717CC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeStringArraySegment>(a2);
}

uint64_t sub_1000717D4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeUUIDArraySegment>(0);
}

uint64_t sub_1000717DC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeUUIDArraySegment>(a2);
}

uint64_t sub_1000717E4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeLazyObjectArraySegment>(0);
}

uint64_t sub_1000717EC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeLazyObjectArraySegment>(a2);
}

uint64_t sub_1000717F4()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeObjectArraySegment>(0);
}

uint64_t sub_1000717FC(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeObjectArraySegment>(a2);
}

uint64_t sub_100071804()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArray>(0);
}

uint64_t sub_10007180C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeArray>(a2);
}

uint64_t sub_100071814()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeNumberArray>(0);
}

uint64_t sub_10007181C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeNumberArray>(a2);
}

uint64_t sub_100071824()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeStringArray>(0);
}

uint64_t sub_10007182C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeStringArray>(a2);
}

uint64_t sub_100071834()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeLazyObjectArray>(0);
}

uint64_t sub_10007183C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeLazyObjectArray>(a2);
}

uint64_t sub_100071844()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeObjectArray>(0);
}

uint64_t sub_10007184C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeObjectArray>(a2);
}

uint64_t sub_100071854()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeUUIDArray>(0);
}

uint64_t sub_10007185C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::LargeUUIDArray>(a2);
}

uint64_t sub_100071864()
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::FieldOptions>(0);
}

uint64_t sub_10007186C(uint64_t a1, uint64_t a2)
{
  return google::protobuf::Arena::CreateMaybeMessage<TSP::FieldOptions>(a2);
}

void sub_100071874(void *a1)
{
  uint64_t v2 = (TSP::SparseReferenceArray_Entry **)a1[2];
  if (v2 && !*a1)
  {
    char v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::SparseReferenceArray_Entry::~SparseReferenceArray_Entry(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (TSP::SparseReferenceArray_Entry **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void **sub_1000718F4(void **result, void ***a2, TSP::SparseReferenceArray_Entry **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      int v13 = v14;
      unsigned int v15 = *v12++;
      double result = sub_1000719A4(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unsigned int v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      unsigned int v21 = *v19++;
      int v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::SparseReferenceArray_Entry>(v18);
      double result = sub_1000719A4(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_1000719A4(TSP::SparseReferenceArray_Entry *a1, void **this)
{
  return TSP::SparseReferenceArray_Entry::MergeFrom(this, a1);
}

void sub_1000719B4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    char v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*(void *)v3)
        {
          sub_1000333D0((uint64_t *)(*(void *)v3 + 8));
          operator delete();
        }
        v3 += 2;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void **sub_100071A40(void **result, void ***a2, TSP::Range **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      int v13 = v14;
      unsigned int v15 = *v12++;
      double result = sub_100071AF0(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unsigned int v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      unsigned int v21 = *v19++;
      int v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Range>(v18);
      double result = sub_100071AF0(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_100071AF0(TSP::Range *a1, void **this)
{
  return TSP::Range::MergeFrom(this, a1);
}

void **sub_100071B00(void **result, void ***a2, TSP::Point **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      int v13 = v14;
      unsigned int v15 = *v12++;
      double result = sub_100071BB0(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unsigned int v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      unsigned int v21 = *v19++;
      int v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Point>(v18);
      double result = sub_100071BB0(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_100071BB0(TSP::Point *a1, void **this)
{
  return TSP::Point::MergeFrom(this, a1);
}

void sub_100071BC0(void *a1)
{
  uint64_t v2 = (TSP::Path_Element **)a1[2];
  if (v2 && !*a1)
  {
    char v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::Path_Element::~Path_Element(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (TSP::Path_Element **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void **sub_100071C40(void **result, void ***a2, TSP::Path_Element **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      int v13 = v14;
      unsigned int v15 = *v12++;
      double result = sub_100071CF0(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unsigned int v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      unsigned int v21 = *v19++;
      int v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Path_Element>(v18);
      double result = sub_100071CF0(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_100071CF0(TSP::Path_Element *a1, void **this)
{
  return TSP::Path_Element::MergeFrom(this, a1);
}

void sub_100071D00(void *a1)
{
  uint64_t v2 = (TSP::ReferenceDictionary_Entry **)a1[2];
  if (v2 && !*a1)
  {
    char v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::ReferenceDictionary_Entry::~ReferenceDictionary_Entry(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (TSP::ReferenceDictionary_Entry **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void **sub_100071D80(void **result, void ***a2, TSP::ReferenceDictionary_Entry **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      int v13 = v14;
      unsigned int v15 = *v12++;
      double result = sub_100071E30(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unsigned int v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      unsigned int v21 = *v19++;
      int v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::ReferenceDictionary_Entry>(v18);
      double result = sub_100071E30(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_100071E30(TSP::ReferenceDictionary_Entry *a1, void **this)
{
  return TSP::ReferenceDictionary_Entry::MergeFrom(this, a1);
}

void **sub_100071E40(void **result, void ***a2, TSP::UUID **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      int v13 = v14;
      unsigned int v15 = *v12++;
      double result = sub_100071EF0(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unsigned int v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      unsigned int v21 = *v19++;
      int v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::UUID>(v18);
      double result = sub_100071EF0(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_100071EF0(TSP::UUID *a1, void **this)
{
  return TSP::UUID::MergeFrom(this, a1);
}

void sub_100071F00(void *a1)
{
  uint64_t v2 = (TSP::SparseUUIDArray_Entry **)a1[2];
  if (v2 && !*a1)
  {
    char v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::SparseUUIDArray_Entry::~SparseUUIDArray_Entry(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (TSP::SparseUUIDArray_Entry **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void **sub_100071F80(void **result, void ***a2, TSP::SparseUUIDArray_Entry **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      int v13 = v14;
      unsigned int v15 = *v12++;
      double result = sub_100072030(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unsigned int v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      unsigned int v21 = *v19++;
      int v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::SparseUUIDArray_Entry>(v18);
      double result = sub_100072030(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_100072030(TSP::SparseUUIDArray_Entry *a1, void **this)
{
  return TSP::SparseUUIDArray_Entry::MergeFrom(this, a1);
}

void sub_100072040(void *a1)
{
  uint64_t v2 = (TSP::SparseUUIDPathArray_Entry **)a1[2];
  if (v2 && !*a1)
  {
    char v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::SparseUUIDPathArray_Entry::~SparseUUIDPathArray_Entry(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (TSP::SparseUUIDPathArray_Entry **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void **sub_1000720C0(void **result, void ***a2, TSP::SparseUUIDPathArray_Entry **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      int v13 = v14;
      unsigned int v15 = *v12++;
      double result = sub_100072170(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unsigned int v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      unsigned int v21 = *v19++;
      int v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::SparseUUIDPathArray_Entry>(v18);
      double result = sub_100072170(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_100072170(TSP::SparseUUIDPathArray_Entry *a1, void **this)
{
  return TSP::SparseUUIDPathArray_Entry::MergeFrom(this, a1);
}

void sub_100072180(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    char v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*(void *)v3)
        {
          sub_1000333D0((uint64_t *)(*(void *)v3 + 8));
          operator delete();
        }
        v3 += 2;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void **sub_10007220C(void **result, void ***a2, TSP::Reference **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      int v13 = v14;
      unsigned int v15 = *v12++;
      double result = sub_1000722BC(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    uint64_t v18 = *v9;
    unsigned int v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      unsigned int v21 = *v19++;
      int v22 = (void **)google::protobuf::Arena::CreateMaybeMessage<TSP::Reference>(v18);
      double result = sub_1000722BC(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

void **sub_1000722BC(TSP::Reference *a1, void **this)
{
  return TSP::Reference::MergeFrom(this, a1);
}

void sub_1000722CC(void *a1)
{
  uint64_t v2 = (TSP::LargeStringArraySegment_OptionalElement **)a1[2];
  if (v2 && !*a1)
  {
    char v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          TSP::LargeStringArraySegment_OptionalElement::~LargeStringArraySegment_OptionalElement(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (TSP::LargeStringArraySegment_OptionalElement **)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_10007234C(std::string *result, std::string **a2, TSP::LargeStringArraySegment_OptionalElement **a3, unsigned int a4, unsigned int a5)
{
  unint64_t v9 = (std::string::__raw *)result;
  if ((int)a5 >= (int)a4) {
    uint64_t v10 = a4;
  }
  else {
    uint64_t v10 = a5;
  }
  if ((int)v10 >= 1)
  {
    unsigned int v11 = a3;
    uint64_t v12 = a2;
    do
    {
      int v14 = *v11++;
      int v13 = v14;
      unsigned int v15 = *v12++;
      double result = sub_1000723FC(v13, v15);
      --v10;
    }
    while (v10);
  }
  BOOL v16 = __OFSUB__(a4, a5);
  int v17 = a4 - a5;
  if (!((v17 < 0) ^ v16 | (v17 == 0)))
  {
    std::string::size_type v18 = v9->__words[0];
    unsigned int v19 = &a3[a5];
    unsigned int v20 = &a2[a5];
    do
    {
      unsigned int v21 = *v19++;
      int v22 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<TSP::LargeStringArraySegment_OptionalElement>(v18);
      double result = sub_1000723FC(v21, v22);
      *v20++ = v22;
      --v17;
    }
    while (v17);
  }
  return result;
}

std::string *sub_1000723FC(TSP::LargeStringArraySegment_OptionalElement *a1, std::string *this)
{
  return TSP::LargeStringArraySegment_OptionalElement::MergeFrom(this, a1);
}

void sub_10007240C(google::protobuf::FieldOptions *a1, char a2, char a3)
{
  int v5 = (int)a1;
  char v6 = google::protobuf::FieldOptions::default_instance(a1);
  if (atomic_load_explicit(scc_info_FieldOptions_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_TSPMessages_2eproto);
  }
  google::protobuf::internal::ExtensionSet::RegisterMessageExtension((unint64_t)v6, v5, a2, 0, a3, (uint64_t)&TSP::_FieldOptions_default_instance_);
}

void *sub_100072490(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))sub_100072548);
}

uint64_t *sub_100072548(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100072568(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_100072620);
}

uint64_t *sub_100072620(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100072640(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_1000726B8(a1, 1);
  void *v2 = off_1001C9968;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_SparseReferenceArray_Entry_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SparseReferenceArray_Entry_TSPMessages_2eproto);
  }
  *((_DWORD *)v2 + 8) = 0;
  v2[3] = 0;
  return v2;
}

void *sub_1000726B8(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))TSP::SparseReferenceArray_Entry::~SparseReferenceArray_Entry);
}

void *sub_100072774(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))TSP::SparseReferenceArray::~SparseReferenceArray);
}

void *sub_100072830(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_1000728E8);
}

uint64_t *sub_1000728E8(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100072908(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))sub_1000729C0);
}

uint64_t *sub_1000729C0(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_1000729E0(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_100072A54(a1, 1);
  void *v2 = off_1001C9C28;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_Rect_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_Rect_TSPMessages_2eproto);
  }
  v2[3] = 0;
  v2[4] = 0;
  return v2;
}

void *sub_100072A54(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))TSP::Rect::~Rect);
}

void *sub_100072B10(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_100072BC8);
}

uint64_t *sub_100072BC8(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100072BE8(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_100072CA0);
}

uint64_t *sub_100072CA0(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100072CC0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_100072D78);
}

uint64_t *sub_100072D78(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100072D98(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::IndexSet::~IndexSet);
}

void *sub_100072E54(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x48uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x48uLL, (void (*)(void *))sub_100072F0C);
}

uint64_t *sub_100072F0C(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100072F2C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))TSP::Path_Element::~Path_Element);
}

void *sub_100072FE8(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::Path::~Path);
}

void *sub_1000730A4(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_100073118(a1, 1);
  void *v2 = off_1001CA1A8;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_ReferenceDictionary_Entry_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_ReferenceDictionary_Entry_TSPMessages_2eproto);
  }
  v2[3] = 0;
  v2[4] = 0;
  return v2;
}

void *sub_100073118(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))TSP::ReferenceDictionary_Entry::~ReferenceDictionary_Entry);
}

void *sub_1000731D4(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::ReferenceDictionary::~ReferenceDictionary);
}

void *sub_100073290(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))sub_100073348);
}

uint64_t *sub_100073348(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void *sub_100073368(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::CFUUIDArchive::~CFUUIDArchive);
}

void *sub_100073424(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::UUIDSetArchive::~UUIDSetArchive);
}

void *sub_1000734E0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x48uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x48uLL, (void (*)(void *))TSP::UUIDMapArchive::~UUIDMapArchive);
}

void *sub_10007359C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x48uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x48uLL, (void (*)(void *))TSP::UUIDMultiMapArchive::~UUIDMultiMapArchive);
}

void *sub_100073658(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_1000736CC(a1, 1);
  void *v2 = off_1001CA678;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_UUIDCoordArchive_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_UUIDCoordArchive_TSPMessages_2eproto);
  }
  v2[3] = 0;
  v2[4] = 0;
  return v2;
}

void *sub_1000736CC(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))TSP::UUIDCoordArchive::~UUIDCoordArchive);
}

void *sub_100073788(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x48uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x48uLL, (void (*)(void *))TSP::UUIDRectArchive::~UUIDRectArchive);
}

void *sub_100073844(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_1000738BC(a1, 1);
  void *v2 = off_1001CA7D8;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_SparseUUIDArray_Entry_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SparseUUIDArray_Entry_TSPMessages_2eproto);
  }
  *((_DWORD *)v2 + 8) = 0;
  v2[3] = 0;
  return v2;
}

void *sub_1000738BC(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))TSP::SparseUUIDArray_Entry::~SparseUUIDArray_Entry);
}

void *sub_100073978(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))TSP::SparseUUIDArray::~SparseUUIDArray);
}

void *sub_100073A34(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::UUIDPath::~UUIDPath);
}

void *sub_100073AF0(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_100073B68(a1, 1);
  void *v2 = off_1001CA9E8;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_SparseUUIDPathArray_Entry_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_SparseUUIDPathArray_Entry_TSPMessages_2eproto);
  }
  *((_DWORD *)v2 + 8) = 0;
  v2[3] = 0;
  return v2;
}

void *sub_100073B68(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))TSP::SparseUUIDPathArray_Entry::~SparseUUIDPathArray_Entry);
}

void *sub_100073C24(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))TSP::SparseUUIDPathArray::~SparseUUIDPathArray);
}

void *sub_100073CE0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0xC0uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0xC0uLL, (void (*)(void *))TSP::PasteboardObject::~PasteboardObject);
}

void *sub_100073D9C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::ObjectCollection::~ObjectCollection);
}

void *sub_100073E58(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))TSP::ObjectContainer::~ObjectContainer);
}

void *sub_100073F14(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::DataAttributes::~DataAttributes);
}

void *sub_100073FD0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x28uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x28uLL, (void (*)(void *))TSP::LargeArraySegment::~LargeArraySegment);
}

void *sub_10007408C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x30uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x30uLL, (void (*)(void *))TSP::LargeNumberArraySegment::~LargeNumberArraySegment);
}

void *sub_100074148(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_1000741C4(a1, 1);
  void *v2 = off_1001CAF68;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_LargeStringArraySegment_OptionalElement_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeStringArraySegment_OptionalElement_TSPMessages_2eproto);
  }
  v2[3] = &google::protobuf::internal::fixed_address_empty_string;
  return v2;
}

void *sub_1000741C4(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))TSP::LargeStringArraySegment_OptionalElement::~LargeStringArraySegment_OptionalElement);
}

void *sub_100074280(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))TSP::LargeStringArraySegment::~LargeStringArraySegment);
}

void *sub_10007433C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))TSP::LargeUUIDArraySegment::~LargeUUIDArraySegment);
}

void *sub_1000743F8(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))TSP::LargeLazyObjectArraySegment::~LargeLazyObjectArraySegment);
}

void *sub_1000744B4(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x38uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x38uLL, (void (*)(void *))TSP::LargeObjectArraySegment::~LargeObjectArraySegment);
}

void *sub_100074570(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x70uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x70uLL, (void (*)(void *))TSP::LargeArray::~LargeArray);
}

void *sub_10007462C(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_1000746A0(a1, 1);
  void *v2 = off_1001CB388;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_LargeNumberArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeNumberArray_TSPMessages_2eproto);
  }
  v2[3] = 0;
  return v2;
}

void *sub_1000746A0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))TSP::LargeNumberArray::~LargeNumberArray);
}

void *sub_10007475C(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_1000747D0(a1, 1);
  void *v2 = off_1001CB438;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_LargeStringArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeStringArray_TSPMessages_2eproto);
  }
  v2[3] = 0;
  return v2;
}

void *sub_1000747D0(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))TSP::LargeStringArray::~LargeStringArray);
}

void *sub_10007488C(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_100074900(a1, 1);
  void *v2 = off_1001CB4E8;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_LargeLazyObjectArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeLazyObjectArray_TSPMessages_2eproto);
  }
  v2[3] = 0;
  return v2;
}

void *sub_100074900(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))TSP::LargeLazyObjectArray::~LargeLazyObjectArray);
}

void *sub_1000749BC(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_100074A30(a1, 1);
  void *v2 = off_1001CB598;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_LargeObjectArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeObjectArray_TSPMessages_2eproto);
  }
  v2[3] = 0;
  return v2;
}

void *sub_100074A30(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))TSP::LargeObjectArray::~LargeObjectArray);
}

void *sub_100074AEC(google::protobuf::Arena *a1)
{
  uint64_t v2 = sub_100074B60(a1, 1);
  void *v2 = off_1001CB648;
  v2[1] = a1;
  v2[2] = 0;
  if (atomic_load_explicit(scc_info_LargeUUIDArray_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_LargeUUIDArray_TSPMessages_2eproto);
  }
  v2[3] = 0;
  return v2;
}

void *sub_100074B60(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))TSP::LargeUUIDArray::~LargeUUIDArray);
}

void *sub_100074C1C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x20uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x20uLL, (void (*)(void *))sub_100074CD4);
}

uint64_t *sub_100074CD4(uint64_t a1)
{
  return sub_1000333D0((uint64_t *)(a1 + 8));
}

void sub_100074CF4()
{
  google::protobuf::internal::AddDescriptors((std::string::size_type)&descriptor_table_TSPMessages_2eproto);
  if (atomic_load_explicit(scc_info_FieldOptions_TSPMessages_2eproto, memory_order_acquire)) {
    google::protobuf::internal::InitSCCImpl(scc_info_FieldOptions_TSPMessages_2eproto);
  }
  TSP::field_options = 51234;
  qword_1001ED2A8 = (uint64_t)&TSP::_FieldOptions_default_instance_;
  sub_10007240C((google::protobuf::FieldOptions *)0xC822, 11, 0);
}

void sub_100074FE4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007512C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  _Unwind_Resume(a1);
}

void sub_100075200(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000752AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_100075FD4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100076018(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100076288(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100076694(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100076898(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000768DC(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100076A44(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100076AC0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x34u);
}

void sub_1000777CC(id a1)
{
  TSUDefaultCat_log_t = TSULogCreateCategory("TSUDefaultCat");
}

void sub_10007798C(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100077B38(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100078264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10007827C(uint64_t result, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  if (*(void *)(result + 40) == a2)
  {
    *(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a3;
    *a4 = 1;
  }
  return result;
}

id sub_100078360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) replacePointerAtIndex:*(void *)(a1 + 40) + a3 withPointer:a2];
}

void sub_100078538(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 4;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 16 * a2;
    }
  }
  else
  {
    sub_100078E64((void **)a1, a2 - v2);
  }
}

char *sub_100078994(uint64_t a1, char *__src, char *a3)
{
  char v3 = a3;
  uint64_t v4 = __src;
  char v6 = *(char **)(a1 + 8);
  uint64_t v8 = a1 + 16;
  unint64_t v7 = *(void *)(a1 + 16);
  if ((unint64_t)v6 >= v7)
  {
    int v13 = *(char **)a1;
    unint64_t v14 = ((uint64_t)&v6[-*(void *)a1] >> 4) + 1;
    if (v14 >> 60) {
      sub_100078F84();
    }
    uint64_t v15 = __src - v13;
    uint64_t v16 = (__src - v13) >> 4;
    uint64_t v17 = v7 - (void)v13;
    if (v17 >> 3 > v14) {
      unint64_t v14 = v17 >> 3;
    }
    if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v18 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v18 = v14;
    }
    uint64_t v30 = a1 + 16;
    if (v18) {
      unsigned int v19 = (char *)sub_10007902C(a1 + 16, v18);
    }
    else {
      unsigned int v19 = 0;
    }
    unsigned int v20 = &v19[16 * v16];
    __p = v19;
    unint64_t v27 = v20;
    unint64_t v28 = v20;
    unint64_t v29 = &v19[16 * v18];
    if (v16 == v18)
    {
      if (v15 < 1)
      {
        if (v13 == v4) {
          unint64_t v22 = 1;
        }
        else {
          unint64_t v22 = v15 >> 3;
        }
        unint64_t v23 = (char *)sub_10007902C(v8, v22);
        unsigned int v20 = &v23[16 * (v22 >> 2)];
        __p = v23;
        unint64_t v27 = v20;
        unint64_t v29 = &v23[16 * v24];
        if (v19) {
          operator delete(v19);
        }
      }
      else
      {
        unint64_t v21 = v16 + 2;
        if (v16 >= -1) {
          unint64_t v21 = v16 + 1;
        }
        v20 -= 16 * (v21 >> 1);
        unint64_t v27 = v20;
      }
    }
    *(_OWORD *)unsigned int v20 = *(_OWORD *)v3;
    unint64_t v28 = v20 + 16;
    uint64_t v4 = (char *)sub_1000791E8((void **)a1, (uint64_t)&__p, v4);
    if (v28 != v27) {
      v28 += (v27 - v28 + 15) & 0xFFFFFFFFFFFFFFF0;
    }
    if (__p) {
      operator delete(__p);
    }
  }
  else if (__src == v6)
  {
    *(_OWORD *)__src = *(_OWORD *)a3;
    *(void *)(a1 + 8) = __src + 16;
  }
  else
  {
    unint64_t v9 = __src + 16;
    uint64_t v10 = v6 - 16;
    unsigned int v11 = *(_OWORD **)(a1 + 8);
    while (v10 < v6)
    {
      long long v12 = *(_OWORD *)v10;
      v10 += 16;
      *v11++ = v12;
    }
    *(void *)(a1 + 8) = v11;
    if (v6 != v9) {
      memmove(&v6[-16 * ((v6 - v9) >> 4)], __src, v6 - v9);
    }
    if (v4 <= v3) {
      v3 += 16 * (*(void *)(a1 + 8) > (unint64_t)v3);
    }
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v3;
  }
  return v4;
}

void sub_100078BA4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_100078E64(void **a1, unint64_t a2)
{
  char v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  int v5 = v6;
  unint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 4)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 16 * a2);
      v7 += 16 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - (unsigned char *)*a1;
    unint64_t v9 = a2 + (v8 >> 4);
    if (v9 >> 60) {
      sub_100078F84();
    }
    uint64_t v10 = v8 >> 4;
    uint64_t v11 = v5 - (unsigned char *)*a1;
    if (v11 >> 3 > v9) {
      unint64_t v9 = v11 >> 3;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v12 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    if (v12) {
      int v13 = (char *)sub_10007902C(v4, v12);
    }
    else {
      int v13 = 0;
    }
    unint64_t v14 = &v13[16 * v10];
    uint64_t v15 = &v13[16 * v12];
    bzero(v14, 16 * a2);
    uint64_t v16 = &v14[16 * a2];
    unint64_t v18 = (char *)*a1;
    uint64_t v17 = (char *)a1[1];
    if (v17 != *a1)
    {
      do
      {
        *((_OWORD *)v14 - sub_1000333D0((uint64_t *)this + 1) = *((_OWORD *)v17 - 1);
        v14 -= 16;
        v17 -= 16;
      }
      while (v17 != v18);
      uint64_t v17 = (char *)*a1;
    }
    *a1 = v14;
    a1[1] = v16;
    a1[2] = v15;
    if (v17)
    {
      operator delete(v17);
    }
  }
}

void sub_100078F84()
{
}

void sub_100078F9C(const char *a1)
{
  exceptioint n = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_100078FF8(exception, a1);
}

void sub_100078FE4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_100078FF8(std::logic_error *a1, const char *a2)
{
  double result = std::logic_error::logic_error(a1, a2);
  return result;
}

void *sub_10007902C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_100079064();
  }
  return operator new(16 * a2);
}

void sub_100079064()
{
  exceptioint n = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

char *sub_100079098(char *result, char *__src, uint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = *((void *)result + 2);
  unint64_t v9 = *(char **)result;
  if (a4 > (v8 - *(void *)result) >> 4)
  {
    if (v9)
    {
      *((void *)result + sub_1000333D0((uint64_t *)this + 1) = v9;
      operator delete(v9);
      uint64_t v8 = 0;
      *unint64_t v7 = 0;
      v7[1] = 0;
      v7[2] = 0;
    }
    if (a4 >> 60) {
      sub_100078F84();
    }
    uint64_t v10 = v8 >> 3;
    if (v8 >> 3 <= a4) {
      uint64_t v10 = a4;
    }
    if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v10;
    }
    double result = sub_1000791A4(v7, v11);
    int v13 = (char *)v7[1];
    unint64_t v12 = (void **)(v7 + 1);
    unint64_t v9 = v13;
LABEL_16:
    size_t v17 = a3 - (void)__src;
    if (v17)
    {
      unint64_t v18 = v9;
      unsigned int v19 = __src;
      goto LABEL_18;
    }
    goto LABEL_19;
  }
  unint64_t v12 = (void **)(result + 8);
  unint64_t v14 = (unsigned char *)*((void *)result + 1);
  unint64_t v15 = (v14 - v9) >> 4;
  if (v15 >= a4) {
    goto LABEL_16;
  }
  uint64_t v16 = &__src[16 * v15];
  if (v14 != v9)
  {
    double result = (char *)memmove(*(void **)result, __src, v14 - v9);
    unint64_t v9 = (char *)*v12;
  }
  size_t v17 = a3 - (void)v16;
  if (v17)
  {
    unint64_t v18 = v9;
    unsigned int v19 = v16;
LABEL_18:
    double result = (char *)memmove(v18, v19, v17);
  }
LABEL_19:
  *unint64_t v12 = &v9[v17];
  return result;
}

char *sub_1000791A4(void *a1, unint64_t a2)
{
  if (a2 >> 60) {
    sub_100078F84();
  }
  double result = (char *)sub_10007902C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[16 * v4];
  return result;
}

void *sub_1000791E8(void **a1, uint64_t a2, char *__src)
{
  int v5 = *(void **)(a2 + 8);
  char v6 = (char *)*a1;
  unint64_t v7 = v5;
  if (*a1 != __src)
  {
    uint64_t v8 = __src;
    uint64_t v9 = *(void *)(a2 + 8);
    do
    {
      unint64_t v7 = (void *)(v9 - 16);
      *(_OWORD *)(v9 - 1sub_100072180((void *)this + 6) = *((_OWORD *)v8 - 1);
      v8 -= 16;
      v9 -= 16;
    }
    while (v8 != v6);
  }
  *(void *)(a2 + 8) = v7;
  uint64_t v10 = a1[1];
  uint64_t v11 = *(void *)(a2 + 16);
  int64_t v12 = v10 - __src;
  if (v10 != __src)
  {
    memmove(*(void **)(a2 + 16), __src, v10 - __src);
    unint64_t v7 = *(void **)(a2 + 8);
  }
  *(void *)(a2 + 1sub_100072180((void *)this + 6) = v11 + v12;
  int v13 = (char *)*a1;
  *a1 = v7;
  *(void *)(a2 + 8) = v13;
  unint64_t v14 = a1[1];
  a1[1] = *(void **)(a2 + 16);
  *(void *)(a2 + 1sub_100072180((void *)this + 6) = v14;
  unint64_t v15 = a1[2];
  a1[2] = *(void **)(a2 + 24);
  *(void *)(a2 + 24) = v15;
  *(void *)a2 = *(void *)(a2 + 8);
  return v5;
}

void sub_100079638(id a1)
{
  uint64_t v1 = SFUMainBundle();
  uint64_t v5 = [v1 URLForResource:@"Defaults" withExtension:@"plist"];

  if (v5)
  {
    unint64_t v2 = +[NSDictionary dictionaryWithContentsOfURL:](NSDictionary, "dictionaryWithContentsOfURL:");
    char v3 = v2;
    if (v2 && [v2 count])
    {
      uint64_t v4 = +[NSUserDefaults standardUserDefaults];
      [v4 registerDefaults:v3];
    }
  }
  _objc_release_x2();
}

uint64_t tsu_reachable_statfs(void *a1, statfs *a2)
{
  objc_msgSend(a1, "tsu_reachableFileURLByDeletingUnreachablePathComponents");
  id v3 = objc_claimAutoreleasedReturnValue();
  uint64_t v4 = (const char *)[v3 fileSystemRepresentation];
  if (v4) {
    uint64_t v5 = statfs(v4, a2);
  }
  else {
    uint64_t v5 = 0xFFFFFFFFLL;
  }

  return v5;
}

void sub_100079B64(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100079F84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100079FAC(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

CGImageSourceRef sub_100079FF0(uint64_t a1, CFURLRef url)
{
  CGImageSourceRef result = CGImageSourceCreateWithURL(url, 0);
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  return result;
}

void sub_10007A028(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007A740(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007A784(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007A8B8(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007A9EC(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007AB20(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007AEC4(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007B2A0(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007B2E4(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007B8BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10007B8D4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return result;
}

void sub_10007B8E4(uint64_t a1)
{
}

void sub_10007B8EC(uint64_t a1, void *a2, uint64_t a3, BOOL *a4)
{
  id v6 = a2;
  if ([v6 resultType] == (id)2048)
  {
    unint64_t v7 = [v6 phoneNumber];
    if (![v7 length])
    {
      int v8 = +[TSUAssertionHandler _atomicIncrementAssertCount];
      if (TSUAssertCat_init_token != -1) {
        dispatch_once(&TSUAssertCat_init_token, &stru_1001CBF40);
      }
      uint64_t v9 = TSUAssertCat_log_t;
      if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_100164744(v8, v9);
      }
      uint64_t v10 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "+[NSURL(TSUAdditions) tsu_urlFromUserProvidedTelephoneString:withDataDetector:]_block_invoke");
      uint64_t v11 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSURL_TSUAdditions.m"];
      +[TSUAssertionHandler handleFailureInFunction:v10 file:v11 lineNumber:559 isFatal:0 description:"Expected phone number match from NSDataDetector"];

      +[TSUAssertionHandler logBacktraceThrottled];
    }
    if ([v7 length])
    {
      int64_t v12 = +[NSCharacterSet alphanumericCharacterSet];
      int v13 = [v7 stringByAddingPercentEncodingWithAllowedCharacters:v12];
      unint64_t v14 = [@"tel:" stringByAppendingString:v13];
      uint64_t v15 = +[NSURL URLWithString:v14];
      uint64_t v16 = *(void *)(*(void *)(a1 + 32) + 8);
      size_t v17 = *(void **)(v16 + 40);
      *(void *)(v16 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v15;

      *a4 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
    }
  }
}

void sub_10007BAC8(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t sub_10007BB78()
{
  return objc_opt_class();
}

id sub_10007BB90()
{
  return [v0 code];
}

uint64_t sub_10007BBA8()
{
  return v0;
}

void sub_10007BE58(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);

    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

void sub_10007C0AC(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_10007C1CC(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_10007C2F8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_10007CECC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007D194(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007D694(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007DB60(id a1)
{
  uint64_t v1 = +[NSCharacterSet characterSetWithCharactersInString:](NSCharacterSet, "characterSetWithCharactersInString:", @"*?+[(){}^$|\\./");
  objc_storeStrong((id *)&qword_1001EB8C8, v1);
  if (!qword_1001EB8C8)
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CC068);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100164B54();
    }
    unint64_t v2 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[NSString(TSUAdditions) tsu_escapeForIcuRegex]_block_invoke");
    id v3 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSString_TSUAdditions.m"];
    +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v2, v3, 411, 0, "invalid nil value for '%{public}s'", "icuRegexCharSet");

    +[TSUAssertionHandler logBacktraceThrottled];
  }
}

void sub_10007DCAC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007E37C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

NSUInteger sub_10007E3A0(void *a1, uint64_t a2, NSRange a3, uint64_t a4, uint64_t a5, unsigned char *a6)
{
  NSRange v9 = NSUnionRange(*(NSRange *)(*(void *)(a1[4] + 8) + 32), a3);
  NSUInteger result = v9.location;
  *(NSRange *)(*(void *)(a1[4] + 8) + 3sub_100072180((void *)this + 2) = v9;
  if (++*(void *)(*(void *)(a1[5] + 8) + 24) >= a1[6]) {
    *a6 = 1;
  }
  return result;
}

void sub_10007E638(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10007E650(uint64_t a1, uint64_t a2, NSRange a3, uint64_t a4, uint64_t a5, unsigned char *a6)
{
  NSRange v8 = NSUnionRange(*(NSRange *)(*(void *)(*(void *)(a1 + 56) + 8) + 32), a3);
  NSRange v9 = objc_msgSend(*(id *)(a1 + 32), "substringWithRange:", v8.location, v8.length);
  id v11 = [v9 stringByAppendingString:*(void *)(a1 + 40)];

  [v11 sizeWithAttributes:*(void *)(a1 + 48)];
  if (*(double *)(a1 + 64) >= v10) {
    *(NSRange *)(*(void *)(*(void *)(a1 + 56) + 8) + 3sub_100072180((void *)this + 2) = v8;
  }
  else {
    *a6 = 1;
  }
}

void sub_10007ED5C(id a1)
{
  uint64_t v1 = +[NSString stringWithCString:"a" encoding:1];
  qword_1001EB8D8 = objc_opt_class();

  unint64_t v2 = NSStringFromClass((Class)qword_1001EB8D8);
  unsigned __int8 v3 = [v2 isEqual:@"NSTaggedPointerString"];

  if ((v3 & 1) == 0)
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CC0F8);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100164BF0();
    }
    uint64_t v4 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[NSString(TSUAdditions) tsu_isTaggedPointer]_block_invoke");
    uint64_t v5 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSString_TSUAdditions.m"];
    +[TSUAssertionHandler handleFailureInFunction:v4 file:v5 lineNumber:746 isFatal:0 description:"expecting NSTaggedPointerString class here"];

    +[TSUAssertionHandler logBacktraceThrottled];
  }
}

void sub_10007EEA4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10007F680(uint64_t a1, uint64_t a2, void *a3)
{
  id v9 = a3;
  id v5 = [*(id *)(a1 + 32) rangeOfString:a2];
  if (v5 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    unint64_t v7 = *(void **)(a1 + 40);
    NSRange v8 = +[NSValue valueWithRange:](NSValue, "valueWithRange:", v5, v6);
    [v7 setObject:v9 forKeyedSubscript:v8];
  }
}

int64_t sub_10007F714(id a1, NSValue *a2, NSValue *a3)
{
  uint64_t v4 = a3;
  id v5 = [(NSValue *)a2 rangeValue];
  id v6 = [(NSValue *)v4 rangeValue];

  if (v5 > v6) {
    return -1;
  }
  else {
    return v5 < v6;
  }
}

void sub_10007FA90(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

CFStringTokenizerTokenType sub_100080890(uint64_t a1, CFStringTokenizerRef tokenizer)
{
  do
  {
    while (1)
    {
      Tokeint n = CFStringTokenizerAdvanceToNextToken(tokenizer);
      CFStringTokenizerTokenType v5 = Token;
      if (Token) {
        break;
      }
      if (CFStringTokenizerGetCurrentTokenRange(tokenizer).location == -1) {
        return v5;
      }
    }
    if (*(unsigned char *)(a1 + 32)) {
      BOOL v6 = 1;
    }
    else {
      BOOL v6 = (Token & 0x10) == 0;
    }
  }
  while (!v6);
  return v5;
}

void sub_100080964(id a1)
{
  __int16 v3 = -4;
  id v1 = [objc_alloc((Class)NSString) initWithCharacters:&v3 length:1];
  unint64_t v2 = (void *)qword_1001EB8E8;
  qword_1001EB8E8 = (uint64_t)v1;
}

void sub_100080B9C(id a1)
{
  qword_1001EB900 = +[NSCharacterSet characterSetWithCharactersInString:@"ـ‑-‐–—"];
  _objc_release_x1();
}

void sub_100080C50(id a1)
{
  qword_1001EB910 = +[NSCharacterSet characterSetWithCharactersInString:@"'\"’‘‚“”„«»‹›」「』『"];
  _objc_release_x1();
}

void sub_100081038(id a1)
{
  uint64_t v1 = +[NSMutableCharacterSet characterSetWithRange:](NSMutableCharacterSet, "characterSetWithRange:", 0, 32);
  unint64_t v2 = (void *)qword_1001EB918;
  qword_1001EB918 = v1;

  [(id)qword_1001EB918 addCharactersInString:@"\"\\""];
  int v4 = 539566120;
  id v3 = [objc_alloc((Class)NSString) initWithCharacters:&v4 length:2];
  [(id)qword_1001EB918 addCharactersInString:v3];
}

void sub_1000817A8(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

id sub_1000819F0(void *a1)
{
  uint64_t v1 = [a1 componentsSeparatedByString:@"."];
  if ((unint64_t)[v1 count] >= 2)
  {
    id v3 = [v1 valueForKey:@"integerValue"];
    if ((unint64_t)[v3 count] >= 3)
    {
      id v4 = v3;
    }
    else
    {
      id v4 = [v3 arrayByAddingObject:&off_1001D7008];
    }
    unint64_t v2 = v4;
  }
  else
  {
    unint64_t v2 = 0;
  }

  return v2;
}

void sub_100082154(id a1)
{
  id v4 = 0;
  id v1 = [objc_alloc((Class)NSRegularExpression) initWithPattern:@"<REDACT .*? REDACT>" options:8 error:&v4];
  id v2 = v4;
  id v3 = (void *)qword_1001EB928;
  qword_1001EB928 = (uint64_t)v1;
}

void sub_100082660(_Unwind_Exception *a1)
{
}

void sub_100082680(void *exc_buf, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10)
{
  if (a2 == 2)
  {
    id v11 = objc_begin_catch(exc_buf);
    signed int v12 = objc_msgSend(v11, "sfu_localErrno");
    int v13 = [v11 userInfo];
    uint64_t v14 = +[NSError errorWithDomain:NSPOSIXErrorDomain code:v12 userInfo:v13];
    uint64_t v15 = *(void **)(v10 + 32);
    *(void *)(v10 + 3sub_100072180((void *)this + 2) = v14;

    objc_end_catch();
  }
  else
  {
    objc_begin_catch(exc_buf);
  }
  JUMPOUT(0x100082614);
}

void sub_100082868()
{
}

NSObject *TSUCreateRecursiveQueue(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  CFStringTokenizerTokenType v5 = dispatch_queue_create((const char *)[v3 UTF8String], v4);

  dispatch_queue_set_specific(v5, off_1001EA440, v5, 0);
  return v5;
}

void sub_100083380(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_10008363C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100083A74(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100083E74(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100084258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_100084290(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = objc_loadWeakRetained((id *)(a1 + 40));
  if (v2)
  {
    [WeakRetained maxValue];
    if (v3 > 0.0)
    {
      double v4 = v3;
      [WeakRetained value];
      [v2 setCompletedUnitCount:(uint64_t)(v5 / v4 * (double)*(uint64_t *)(a1 + 48))];
    }
  }
}

void sub_10008432C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

id SFUMainBundle()
{
  return +[NSBundle tsu_resourcesBundle];
}

void sub_100084A80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  if (*(void *)(a1 + 32))
  {
    id v2 = *(void (**)(uint64_t, void))(v1 + 16);
    uint64_t v3 = *(void *)(a1 + 40);
    v2(v3, 0);
  }
  else
  {
    +[NSError tsu_fileReadUnknownErrorWithUserInfo:](NSError, "tsu_fileReadUnknownErrorWithUserInfo:");
    id v4 = (id)objc_claimAutoreleasedReturnValue();
    (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0, v4);
  }
}

void sub_100084D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100084D70(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return result;
}

void sub_100084D80(uint64_t a1)
{
}

void sub_100084D88(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  NSRange v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100084FD4(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000853B0(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000853F4(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100085438(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

id sub_100085764(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addEntry:a2];
}

void sub_100085770(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_1000859F8(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100085C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_100085C9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(void *)(v2 + 64))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  }
  else
  {
    id v3 = *(id *)(v2 + 56);
    if (!v3)
    {
      +[TSUAssertionHandler _atomicIncrementAssertCount];
      if (TSUAssertCat_init_token != -1) {
        dispatch_once(&TSUAssertCat_init_token, &stru_1001CC480);
      }
      if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_1001653E0();
      }
      id v5 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUZipFileArchive copyToTemporaryLocationRelativeToURL:error:]_block_invoke");
      id v6 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipFileArchive.m"];
      +[TSUAssertionHandler handleFailureInFunction:v5 file:v6 lineNumber:326 isFatal:0 description:"File should be opened."];

      +[TSUAssertionHandler logBacktraceThrottled];
    }
    [*(id *)(a1 + 32) createTemporaryDirectoryRelativeToURL:*(void *)(a1 + 40)];
    uint64_t v7 = [*(id *)(*(void *)(a1 + 32) + 64) URLByAppendingPathComponent:@"Temp.zip"];
    if (v7)
    {
      NSRange v8 = [TSUFileIOChannel alloc];
      uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
      id obj = *(id *)(v9 + 40);
      id v10 = [(TSUFileIOChannel *)v8 initForStreamWritingURL:v7 error:&obj];
      objc_storeStrong((id *)(v9 + 40), obj);
    }
    else
    {
      id v10 = 0;
    }
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v10 != 0;
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
    {
      uint64_t v34 = 0;
      unsigned int v35 = &v34;
      uint64_t v36 = 0x3032000000;
      unint64_t v37 = sub_100084D70;
      unint64_t v38 = sub_100084D80;
      id v39 = 0;
      id v11 = dispatch_group_create();
      dispatch_group_enter(v11);
      id v12 = [v3 readChannel];
      v30[0] = _NSConcreteStackBlock;
      v30[1] = 3221225472;
      v30[2] = sub_100086290;
      v30[3] = &unk_1001CC4D0;
      unsigned int v33 = &v34;
      int v13 = v11;
      unsigned __int8 v31 = v13;
      id v14 = v10;
      id v32 = v14;
      [v12 readFromOffset:0 length:-1 handler:v30];

      dispatch_group_wait(v13, 0xFFFFFFFFFFFFFFFFLL);
      [v14 close];

      uint64_t v15 = v35;
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v35[5] == 0;
      if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24))
      {
        objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40), (id)v15[5]);
        if (TSUDefaultCat_init_token != -1) {
          dispatch_once(&TSUDefaultCat_init_token, &stru_1001CC4F0);
        }
        uint64_t v16 = TSUDefaultCat_log_t;
        if (os_log_type_enabled((os_log_t)v16, OS_LOG_TYPE_ERROR))
        {
          unint64_t v22 = [*(id *)(a1 + 40) path];
          unint64_t v23 = [v7 path];
          uint64_t v24 = (objc_class *)objc_opt_class();
          NSStringFromClass(v24);
          id v25 = (id)objc_claimAutoreleasedReturnValue();
          id v26 = [(id)v35[5] domain];
          id v27 = [(id)v35[5] code];
          uint64_t v28 = v35[5];
          *(_DWORD *)buf = 138413570;
          unint64_t v42 = v22;
          __int16 v43 = 2112;
          unint64_t v44 = v23;
          __int16 v45 = 2114;
          id v46 = v25;
          __int16 v47 = 2114;
          id v48 = v26;
          __int16 v49 = 2048;
          id v50 = v27;
          __int16 v51 = 2112;
          uint64_t v52 = v28;
          _os_log_error_impl((void *)&_mh_execute_header, (os_log_t)v16, OS_LOG_TYPE_ERROR, "Failed to copy zip file from %@ to %@. errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", buf, 0x3Eu);
        }
      }

      _Block_object_dispose(&v34, 8);
      id v10 = 0;
    }
    else
    {
      if (TSUDefaultCat_init_token != -1) {
        dispatch_once(&TSUDefaultCat_init_token, &stru_1001CC510);
      }
      size_t v17 = TSUDefaultCat_log_t;
      if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_100165348(v17, v7);
      }
    }
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8);
    if (*(unsigned char *)(v18 + 24))
    {
      unsigned int v19 = *(void **)(a1 + 32);
      uint64_t v20 = *(void *)(*(void *)(a1 + 48) + 8);
      id v29 = *(id *)(v20 + 40);
      unsigned __int8 v21 = [v19 reopenWithTemporaryURL:v7 error:&v29];
      objc_storeStrong((id *)(v20 + 40), v29);
      uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8);
    }
    else
    {
      unsigned __int8 v21 = 0;
    }
    *(unsigned char *)(v18 + 24) = v21;
    if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24)) {
      [*(id *)(a1 + 32) removeTemporaryDirectory];
    }

    [v3 waitForAccessToEnd];
  }
}

void sub_100086228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008624C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100086290(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  unint64_t v8 = a4;
  uint64_t v9 = (void *)v8;
  if (v7 && !(v8 | *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)))
  {
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1000863A0;
    v14[3] = &unk_1001CC4A8;
    id v10 = *(void **)(a1 + 40);
    uint64_t v16 = *(void *)(a1 + 48);
    id v15 = *(id *)(a1 + 32);
    [v10 writeData:v7 handler:v14];
  }
  if (a2)
  {
    if (v9)
    {
      uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8);
      uint64_t v13 = *(void *)(v11 + 40);
      id v12 = (id *)(v11 + 40);
      if (!v13) {
        objc_storeStrong(v12, a4);
      }
    }
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
  }
}

void sub_1000863A0(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  if (a2)
  {
    id v11 = v7;
    if (v7)
    {
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
      uint64_t v10 = *(void *)(v8 + 40);
      uint64_t v9 = (id *)(v8 + 40);
      if (!v10) {
        objc_storeStrong(v9, a4);
      }
    }
    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
    id v7 = v11;
  }
}

void sub_10008641C(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100086460(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t sub_100086558(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 48);
  return result;
}

void sub_10008665C(uint64_t a1)
{
  id v2 = *(id *)(*(void *)(a1 + 32) + 56);
  id v3 = v2;
  if (v2)
  {
    uint64_t v4 = dup((int)[v2 fileDescriptor]);
    if ((v4 & 0x80000000) != 0)
    {
      if (TSUDefaultCat_init_token != -1) {
        dispatch_once(&TSUDefaultCat_init_token, &stru_1001CC5A0);
      }
      id v12 = TSUDefaultCat_log_t;
      if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_100165534(v12);
      }
    }
    else
    {
      uint64_t v5 = v4;
      if (([*(id *)(a1 + 32) options] & 0x10) != 0 && fcntl(v5, 48, 1) == -1)
      {
        if (TSUDefaultCat_init_token != -1) {
          dispatch_once(&TSUDefaultCat_init_token, &stru_1001CC558);
        }
        id v6 = TSUDefaultCat_log_t;
        if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
          sub_1001654AC(v6);
        }
      }
      [v3 beginAccess];
      id v7 = [TSUFileIOChannel alloc];
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      v13[2] = sub_1000868C0;
      v13[3] = &unk_1001CC580;
      int v15 = v5;
      id v14 = v3;
      id v8 = [(TSUFileIOChannel *)v7 initForReadingDescriptor:v5 cleanupHandler:v13];
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
      uint64_t v10 = *(void **)(v9 + 40);
      *(void *)(v9 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8;
    }
  }
  else
  {
    if (TSUDefaultCat_init_token != -1) {
      dispatch_once(&TSUDefaultCat_init_token, &stru_1001CC5C0);
    }
    id v11 = TSUDefaultCat_log_t;
    if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100165468(v11);
    }
  }
}

void sub_10008687C(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

id sub_1000868C0(uint64_t a1)
{
  close(*(_DWORD *)(a1 + 40));
  id v2 = *(void **)(a1 + 32);
  return _[v2 endAccess];
}

void sub_1000868FC(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100086940(id a1)
{
  TSULogCreateCategory("TSUDefaultCat");
  TSUDefaultCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

ssize_t sub_100086A38(uint64_t a1)
{
  id v2 = *(void **)(*(void *)(a1 + 32) + 56);
  if (v2) {
    ssize_t result = (ssize_t)[v2 fileDescriptor];
  }
  else {
    ssize_t result = 0xFFFFFFFFLL;
  }
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (int)result >= 0;
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    char v4 = 0;
    ssize_t result = read(result, &v4, 0);
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result == 0;
  }
  return result;
}

void sub_100086DEC(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t sub_100086F34(uint64_t a1)
{
  return close(*(_DWORD *)(a1 + 32));
}

void sub_100086FF8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_1000871A4(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_10008733C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sub_100087364(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained[22];
    id v6 = v2;
    if (v3)
    {
      (*(void (**)(void))(v3 + 16))();
      id v2 = v6;
      char v4 = (void *)v6[22];
    }
    else
    {
      char v4 = 0;
    }
    v2[22] = 0;
  }
  return _objc_release_x1();
}

void sub_1000877D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  _Block_object_dispose((const void *)(v21 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100087818(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return result;
}

void sub_100087828(uint64_t a1)
{
}

id sub_100087830(uint64_t a1)
{
  return _objc_msgSend(*(id *)(a1 + 32), "addExistingEntry:");
}

void sub_100087838(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

uint64_t sub_10008787C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v3 = WeakRetained[22];
    id v6 = v2;
    if (v3)
    {
      (*(void (**)(void))(v3 + 16))();
      id v2 = v6;
      char v4 = (void *)v6[22];
    }
    else
    {
      char v4 = 0;
    }
    v2[22] = 0;
  }
  return _objc_release_x1();
}

void sub_1000878FC(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (v4) {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_100087C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100087C8C(id a1)
{
  TSULogCreateCategory("TSUAssertCat");
  TSUAssertCat_log_t = (_UNKNOWN *)objc_claimAutoreleasedReturnValue();
  _objc_release_x1();
}

void sub_100087CD0(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a3;
  [v4 addObject:v5];
  id v6 = [v5 size];

  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) += v6;
}

int64_t sub_100087D34(id a1, TSUZipEntry *a2, TSUZipEntry *a3)
{
  id v4 = a3;
  unint64_t v5 = [(TSUZipEntry *)a2 offset];
  unint64_t v6 = [(TSUZipEntry *)v4 offset];

  if (v5 < v6) {
    return -1;
  }
  else {
    return v5 > v6;
  }
}

void sub_10008807C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_1000880C0(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (a2)
  {
    id v10 = v5;
    objc_msgSend(*(id *)(a1 + 32), "setCompletedUnitCount:", (char *)objc_msgSend(*(id *)(a1 + 40), "size") + (void)objc_msgSend(*(id *)(a1 + 32), "completedUnitCount"));
    id v5 = [*(id *)(a1 + 48) copyRemainingEntries:*(void *)(a1 + 56) fromArchive:*(void *)(a1 + 64) progress:*(void *)(a1 + 32) completionHandler:*(void *)(a1 + 72)];
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 72);
    if (!v7) {
      goto LABEL_8;
    }
    id v10 = v5;
    if (v5)
    {
      id v5 = (id)(*(uint64_t (**)(uint64_t, id))(v7 + 16))(v7, v5);
    }
    else
    {
      id v8 = +[NSError tsu_fileWriteUnknownErrorWithUserInfo:0];
      (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);
    }
  }
  id v6 = v10;
LABEL_8:
  return _objc_release_x1(v5, v6);
}

void sub_1000883D8(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008841C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_100088530(uint64_t a1, int a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v7 = a5;
  if (a2)
  {
    uint64_t v8 = *(void *)(a1 + 32);
    if (v8) {
      (*(void (**)(uint64_t, BOOL))(v8 + 16))(v8, v7 == 0);
    }
  }
  return _objc_release_x2();
}

void sub_100089194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&STACK[0x290], 8);
  _Block_object_dispose(&a64, 8);
  _Unwind_Resume(a1);
}

void sub_100089200(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100089244(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100089288(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000892CC(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_100089310(uint64_t a1)
{
  char v2 = 0;
  return (*(uint64_t (**)(void, uint64_t, void, void, void, char *))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), 1, 0, 0, *(void *)(a1 + 32), &v2);
}

void sub_100089354(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  char v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_100089398(void *a1, uint64_t a2, NSObject *a3, void *a4, unsigned char *a5)
{
  uint64_t v13 = a4;
  if (a3) {
    *(void *)(*(void *)(a1[5] + 8) + 24) += dispatch_data_get_size(a3);
  }
  uint64_t v8 = (id *)(*(uint64_t (**)(void))(a1[4] + 16))();
  uint64_t v9 = v13;
  if (!v13 && *a5)
  {
    uint64_t v8 = +[NSError errorWithDomain:NSCocoaErrorDomain code:3072 userInfo:0];
    uint64_t v9 = v8;
  }
  if (v9)
  {
    uint64_t v10 = *(void *)(a1[6] + 8);
    uint64_t v11 = *(void *)(v10 + 40);
    uint64_t v8 = (id *)(v10 + 40);
    if (!v11)
    {
      id v14 = v9;
      objc_storeStrong(v8, v9);
      uint64_t v9 = v14;
    }
  }
  return _objc_release_x1(v8, v9);
}

void sub_100089488(void *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  char v7 = 0;
  uint64_t v4 = a1[4];
  if (!a2) {
    uint64_t v2 = *(void *)(*(void *)(a1[5] + 8) + 40);
  }
  (*(void (**)(uint64_t, uint64_t, void, void, uint64_t, char *))(v4 + 16))(v4, 1, a1[6], a1[6], v2, &v7);
  uint64_t v5 = *(void *)(a1[5] + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
}

void sub_1000897FC(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100089CB0(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100089CF4(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008A6B4(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008A8A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v11 - 80), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008A8CC(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return result;
}

void sub_10008A8DC(uint64_t a1)
{
}

void sub_10008A8E4(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v7 = a2;
  id v8 = a3;
  int v9 = *(unsigned __int8 *)(a1 + 64);
  unsigned int v10 = [v8 shouldPreserveForIntent:*(unsigned int *)(a1 + 56)];
  if (v9)
  {
    if ((v10 & 1) == 0)
    {
      uint64_t v11 = *(void *)(a1 + 48);
      uint64_t v12 = *(unsigned int *)(a1 + 60);
      uint64_t v13 = *(void *)(*(void *)(a1 + 32) + 8);
      id obj = *(id *)(v13 + 40);
      unsigned __int8 v14 = [v8 setAttributeToPathFileSystemRepresentation:v11 options:v12 error:&obj];
      objc_storeStrong((id *)(v13 + 40), obj);
      if ((v14 & 1) == 0) {
        *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
      }
    }
  }
  else if (v10)
  {
    uint64_t v15 = *(void *)(a1 + 48);
    uint64_t v16 = *(unsigned int *)(a1 + 60);
    uint64_t v17 = *(void *)(*(void *)(a1 + 32) + 8);
    id v20 = *(id *)(v17 + 40);
    unsigned __int8 v18 = [v8 setAttributeToPathFileSystemRepresentation:v15 options:v16 error:&v20];
    objc_storeStrong((id *)(v17 + 40), v20);
    if ((v18 & 1) == 0)
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
      *a4 = 0;
    }
  }
}

void sub_10008ADC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_10008ADD8(uint64_t a1, uint64_t a2, void *a3, unsigned char *a4)
{
  id result = [a3 size];
  if (result)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

void sub_10008B04C(uint64_t a1, void *a2)
{
  id v3 = a2;
  [*(id *)(a1 + 32) close];
  if (v3)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(unsigned char **)(a1 + 40);
    if (v5[32])
    {
      [v5 collapseCommonRootDirectory];
      uint64_t v5 = *(unsigned char **)(a1 + 40);
    }
    uint64_t v4 = v5;
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10008B144;
  block[3] = &unk_1001CCA10;
  id v6 = *(NSObject **)(a1 + 48);
  id v7 = *(id *)(a1 + 56);
  id v12 = v3;
  id v13 = v7;
  id v11 = v4;
  id v8 = v3;
  int v9 = v4;
  dispatch_async(v6, block);
}

uint64_t sub_10008B144(void *a1)
{
  return (*(uint64_t (**)(void, void, void))(a1[6] + 16))(a1[6], a1[4], a1[5]);
}

void sub_10008B15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
    v4();
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 56);
    id v8 = *(void **)(a1 + 32);
    id v7 = *(void **)(a1 + 40);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_10008B268;
    v11[3] = &unk_1001CCA80;
    v11[4] = v8;
    id v12 = v7;
    id v9 = *(id *)(a1 + 48);
    uint64_t v10 = *(void *)(a1 + 56);
    id v13 = v9;
    uint64_t v14 = v10;
    [v8 readEndOfCentralDirectoryData:a2 eocdOffset:v6 channel:v12 completion:v11];
  }
}

void sub_10008B268(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if ((*(unsigned char *)(*(void *)(a1 + 32) + 32) & 4) != 0
    && [v3 code] == (id)259
    && ([v4 domain],
        uint64_t v5 = objc_claimAutoreleasedReturnValue(),
        unsigned int v6 = [v5 isEqualToString:NSCocoaErrorDomain],
        v5,
        v6))
  {
    id v7 = [v4 userInfo];
    id v8 = [v7 objectForKeyedSubscript:@"TSUZipArchiveErrorDescription"];

    if (v8)
    {
      if (TSUDefaultCat_init_token != -1) {
        dispatch_once(&TSUDefaultCat_init_token, &stru_1001CCA58);
      }
      id v9 = TSUDefaultCat_log_t;
      if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_100165CD0((uint64_t)v8, v9, v10, v11, v12, v13, v14, v15);
      }
      [*(id *)(a1 + 32) readLocalFileHeaderEntriesFromChannel:*(void *)(a1 + 40) offset:0 previousEntry:0 seekAttempts:0 seekForward:0 completion:*(void *)(a1 + 48)];
    }
    else
    {
      (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
    }
  }
  else
  {
    if (!v4) {
      *(void *)(*(void *)(a1 + 32) + 24) = *(void *)(a1 + 56);
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

void sub_10008B3C8(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008B40C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = +[NSError tsu_fileReadUnknownErrorWithUserInfo:0];
  (*(void (**)(uint64_t, void, id))(v1 + 16))(v1, 0, v2);
}

id sub_10008B86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return (id)(*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else {
    return _[*(id *)(a1 + 32) readZip64EndOfCentralDirectoryLocatorData:a2 channel:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
}

id sub_10008BB64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return (id)(*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else {
    return _[*(id *)(a1 + 32) readZip64EndOfCentralDirectoryData:a2 channel:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
  }
}

id sub_10008BE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3) {
    return (id)(*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else {
    return _[*(id *)(a1 + 32) readCentralDirectoryData:a2 entryCount:*(void *)(a1 + 48) completion:*(void *)(a1 + 40)];
  }
}

void sub_10008C7D0(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008CC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    uint64_t v4 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
    v4();
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 64);
    id v7 = *(void **)(a1 + 32);
    uint64_t v8 = *(void *)(a1 + 40);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    v9[2] = sub_10008CD5C;
    v9[3] = &unk_1001CCBA0;
    v9[4] = v7;
    id v10 = *(id *)(a1 + 48);
    char v14 = *(unsigned char *)(a1 + 76);
    int v13 = *(_DWORD *)(a1 + 72);
    id v11 = *(id *)(a1 + 40);
    id v12 = *(id *)(a1 + 56);
    [v7 readLocalFileHeaderData:a2 atOffset:v6 channel:v8 completion:v9];
  }
}

void sub_10008CD5C(uint64_t a1, void *a2, void *a3, char a4)
{
  id v7 = a2;
  id v8 = a3;
  if (!v8)
  {
    if (v7)
    {
      [*(id *)(a1 + 32) addEntry:v7];
      id v10 = *(void **)(a1 + 40);
      if (v10 && !*(unsigned char *)(a1 + 68) && *(_DWORD *)(a1 + 64)) {
        objc_msgSend(v10, "setCompressedSize:", (char *)objc_msgSend(*(id *)(a1 + 40), "compressedSize") - *(unsigned int *)(a1 + 64));
      }
      id v11 = (char *)[v7 offset];
      id v12 = &v11[(void)[v7 fileHeaderLength]];
      int v13 = (char *)[v7 compressedSize] + (void)v12;
      char v14 = *(void **)(a1 + 32);
      uint64_t v15 = *(void *)(a1 + 48);
      uint64_t v16 = *(void *)(a1 + 56);
      id v17 = v7;
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      goto LABEL_10;
    }
    if (a4)
    {
LABEL_43:
      id v9 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
      goto LABEL_3;
    }
    uint64_t v20 = *(unsigned int *)(a1 + 64);
    if (*(unsigned char *)(a1 + 68))
    {
      if (v20)
      {
LABEL_25:
        int v24 = 1;
        unint64_t v22 = 100;
        goto LABEL_26;
      }
LABEL_20:
      if (TSUDefaultCat_init_token != -1) {
        dispatch_once(&TSUDefaultCat_init_token, &stru_1001CCB38);
      }
      unint64_t v23 = TSUDefaultCat_log_t;
      if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_100165E30(a1, v23);
      }
      LODWORD(v2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
      goto LABEL_25;
    }
    id v21 = [*(id *)(a1 + 40) compressedSize];
    if ((unint64_t)v21 >= 0x64) {
      unint64_t v22 = 100;
    }
    else {
      unint64_t v22 = (unint64_t)v21;
    }
    if (v22 == v20) {
      goto LABEL_20;
    }
    if (v20)
    {
      int v24 = 0;
LABEL_26:
      if (v22 > v20)
      {
        uint64_t v25 = (v20 + 1);
        if (v24)
        {
          id v26 = (char *)[*(id *)(a1 + 40) offset];
          id v27 = [*(id *)(a1 + 40) fileHeaderLength];
          int v13 = &v26[v25
                   + (unint64_t)[*(id *)(a1 + 40) compressedSize]
                   + (void)v27];
          uint64_t v19 = 1;
LABEL_37:
          char v14 = *(void **)(a1 + 32);
          id v17 = *(id *)(a1 + 40);
          uint64_t v15 = *(void *)(a1 + 48);
          uint64_t v16 = *(void *)(a1 + 56);
          uint64_t v18 = v25;
LABEL_10:
          [v14 readLocalFileHeaderEntriesFromChannel:v15 offset:v13 previousEntry:v17 seekAttempts:v18 seekForward:v19 completion:v16];
          goto LABEL_11;
        }
LABEL_36:
        id v29 = (char *)[*(id *)(a1 + 40) offset];
        id v30 = [*(id *)(a1 + 40) fileHeaderLength];
        id v31 = [*(id *)(a1 + 40) compressedSize];
        uint64_t v19 = 0;
        int v13 = &v29[(unint64_t)v31 + (void)v30 - v25];
        goto LABEL_37;
      }
      goto LABEL_39;
    }
    if (TSUDefaultCat_init_token != -1) {
      dispatch_once(&TSUDefaultCat_init_token, &stru_1001CCB58);
    }
    uint64_t v28 = TSUDefaultCat_log_t;
    if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR))
    {
      sub_100165EC4(a1, v28);
      if (v22) {
        goto LABEL_35;
      }
    }
    else if (v22)
    {
LABEL_35:
      uint64_t v25 = 1;
      goto LABEL_36;
    }
LABEL_39:
    if (TSUDefaultCat_init_token != -1) {
      dispatch_once(&TSUDefaultCat_init_token, &stru_1001CCB78);
    }
    id v32 = TSUDefaultCat_log_t;
    if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100165DC4(v22, v32, v33, v34, v35, v36, v37, v38);
    }
    goto LABEL_43;
  }
  id v9 = *(void (**)(void))(*(void *)(a1 + 56) + 16);
LABEL_3:
  v9();
LABEL_11:
}

void sub_10008D038(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  id v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008D07C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  id v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008D0C0(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  id v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008D508(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6
    || (id v7 = *(void **)(a1 + 32),
        uint64_t v8 = *(void *)(a1 + 40),
        id v15 = 0,
        unsigned int v9 = [v7 readLocalFileHeaderFilenameAndExtraFieldsData:v5 forEntry:v8 error:&v15], v6 = v15, !v9))
  {
    char v14 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
  }
  else
  {
    id v10 = (char *)[*(id *)(a1 + 40) offset];
    id v11 = &v10[(void)[*(id *)(a1 + 40) fileHeaderLength]];
    id v12 = (char *)[*(id *)(a1 + 40) compressedSize];
    uint64_t v13 = *(void *)(a1 + 32);
    if ((uint64_t)&v12[(void)v11] > *(void *)(v13 + 24)) {
      *(void *)(v13 + 24) = &v12[(void)v11];
    }
    char v14 = *(void (**)(void))(*(void *)(a1 + 48) + 16);
  }
  v14();
}

void sub_10008D8B0(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  id v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

TSUZipInflateReadChannel *sub_10008DAFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [TSUZipInflateReadChannel alloc];
  [*(id *)(a1 + 32) size];
  id v5 = -[TSUZipInflateReadChannel initWithReadChannel:uncompressedSize:CRC:validateCRC:](v4, "initWithReadChannel:uncompressedSize:CRC:validateCRC:", v3, [*(id *)(a1 + 32) size], objc_msgSend(*(id *)(a1 + 32), "CRC"), *(unsigned __int8 *)(a1 + 40));

  return v5;
}

void sub_10008DB90(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008DD9C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008E258(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10008E280(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return result;
}

void sub_10008E290(uint64_t a1)
{
}

void sub_10008E298(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v21 = [a2 pathComponents];
  if ((unint64_t)[v21 count] < 2
    || ([v21 objectAtIndexedSubscript:0],
        id v6 = objc_claimAutoreleasedReturnValue(),
        unsigned __int8 v7 = [v6 isEqualToString:@"__MACOSX"],
        v6,
        uint64_t v8 = v21,
        (v7 & 1) == 0))
  {
    unsigned int v9 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    if (v9)
    {
      unint64_t v10 = 0;
      if (![v9 count]) {
        goto LABEL_10;
      }
      do
      {
        if (v10 >= (unint64_t)[v21 count]) {
          break;
        }
        id v11 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) objectAtIndexedSubscript:v10];
        id v12 = [v21 objectAtIndexedSubscript:v10];
        id v13 = [v11 compare:v12 options:*(void *)(a1 + 40)];

        if (v13) {
          break;
        }
        ++v10;
      }
      while (v10 < (unint64_t)[*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) count]);
      if (v10 == 0x7FFFFFFFFFFFFFFFLL)
      {
        uint64_t v14 = *(void *)(*(void *)(a1 + 32) + 8);
        id v15 = *(void **)(v14 + 40);
        *(void *)(v14 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;

        *a4 = 1;
      }
      else
      {
LABEL_10:
        BOOL v16 = v10 >= (unint64_t)[*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) count];
        uint64_t v8 = v21;
        if (v16) {
          goto LABEL_14;
        }
        id v17 = *(void **)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
        objc_msgSend(v17, "removeObjectsInRange:", v10, (char *)objc_msgSend(v17, "count") - v10);
      }
    }
    else
    {
      id v18 = [objc_alloc((Class)NSMutableArray) initWithArray:v21];
      uint64_t v19 = *(void *)(*(void *)(a1 + 32) + 8);
      uint64_t v20 = *(void **)(v19 + 40);
      *(void *)(v19 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v18;

      [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) removeLastObject];
    }
    uint64_t v8 = v21;
  }
LABEL_14:
}

void sub_10008E474(uint64_t a1, void *a2, void *a3)
{
  id v7 = a2;
  id v5 = a3;
  if ((unint64_t)[v7 length] <= *(void *)(a1 + 48) + 1)
  {
    [*(id *)(*(void *)(a1 + 40) + 16) removeObject:v5];
  }
  else if (([v7 hasPrefix:@"__MACOSX"] & 1) == 0)
  {
    id v6 = [v7 substringFromIndex:*(void *)(a1 + 48) + 1];
    [v5 setCollapsedName:v6];
    [*(id *)(a1 + 32) setObject:v5 forKeyedSubscript:v6];
  }
}

void sub_10008E764(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008E9C4(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008EC24(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008EEFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
}

void sub_10008EF24(uint64_t a1)
{
  uint64_t v2 = a1 + 40;
  id v3 = [*(id *)(a1 + 32) streamReadChannelForEntry:*(void *)(a1 + 40)];
  if (v3)
  {
    dispatch_suspend(*(dispatch_object_t *)(a1 + 48));
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_10008F0B8;
    v16[3] = &unk_1001CC4D0;
    v16[4] = v3;
    long long v15 = *(_OWORD *)(a1 + 48);
    id v4 = (id)v15;
    long long v17 = v15;
    [v3 readWithHandler:v16];
  }
  else
  {
    if (TSUDefaultCat_init_token != -1) {
      dispatch_once(&TSUDefaultCat_init_token, &stru_1001CCD20);
    }
    id v5 = TSUDefaultCat_log_t;
    if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_1001660D4(v2, v5, v6, v7, v8, v9, v10, v11);
    }
    uint64_t v12 = +[NSError tsu_fileReadCorruptedFileErrorWithUserInfo:0];
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v12;
  }
}

void sub_10008F074(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10008F0B8(uint64_t a1, int a2, void *a3, void *a4)
{
  id v11 = a3;
  id v7 = a4;
  if (!v7 || (v8 = *(void *)(*(void *)(a1 + 48) + 8), v10 = *(void *)(v8 + 40), uint64_t v9 = (id *)(v8 + 40), v10))
  {
    if (!a2) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  objc_storeStrong(v9, a4);
  if (a2)
  {
LABEL_4:
    [*(id *)(a1 + 32) close];
    dispatch_resume(*(dispatch_object_t *)(a1 + 40));
  }
LABEL_5:
}

void sub_10008F150(void *a1)
{
  uint64_t v2 = (void *)a1[5];
  if (v2)
  {
    id v3 = a1[4];
    if (v3)
    {
      v7[0] = _NSConcreteStackBlock;
      v7[1] = 3221225472;
      v7[2] = sub_10008F220;
      v7[3] = &unk_1001CCD70;
      id v4 = v2;
      uint64_t v5 = a1[6];
      id v8 = v4;
      uint64_t v9 = v5;
      dispatch_async(v3, v7);
    }
    else
    {
      uint64_t v6 = (void (*)(void))v2[2];
      v6();
    }
  }
}

uint64_t sub_10008F220(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 32) + 16))(*(void *)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
}

void sub_10008F37C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008F394(uint64_t a1, void *a2)
{
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  id v4 = a2;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_10008F5DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008F5F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, BOOL *a5)
{
  id v7 = a4;
  id v8 = (objc_class *)objc_opt_class();
  uint64_t v9 = [v7 objectForKeyedSubscript:@"TSUZipArchiveErrorDescription"];

  uint64_t v10 = TSUCheckedDynamicCast(v8, (uint64_t)v9);
  uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v10;

  *a5 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_10008F788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10008F7A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, BOOL *a5)
{
  id v7 = a4;
  id v8 = (objc_class *)objc_opt_class();
  uint64_t v9 = [v7 objectForKeyedSubscript:@"TSUZipArchiveErrorEntryName"];

  uint64_t v10 = TSUCheckedDynamicCast(v8, (uint64_t)v9);
  uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v12 = *(void **)(v11 + 40);
  *(void *)(v11 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v10;

  *a5 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) != 0;
}

void sub_10008F84C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void sub_10008FAA4(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

BOOL sub_100090204(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  uint64_t v6 = a2;
  id v7 = a4;
  if (a3 == 2)
  {
    CFStringRef v9 = @"com.apple.iWork.TSUtility";
  }
  else
  {
    if (a3 == 28)
    {
      id v8 = &NSPOSIXErrorDomain;
    }
    else
    {
      if (a3 != 640)
      {
        unsigned __int8 v10 = 0;
        goto LABEL_10;
      }
      id v8 = &NSCocoaErrorDomain;
    }
    CFStringRef v9 = (const __CFString *)*v8;
  }
  unsigned __int8 v10 = [(NSString *)v6 isEqualToString:v9];
LABEL_10:

  return v10;
}

BOOL sub_1000902A8(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  uint64_t v6 = a2;
  id v7 = a4;
  if (a3 == 3072)
  {
    if (![(NSString *)v6 isEqualToString:NSCocoaErrorDomain])
    {
      CFStringRef v8 = @"_OnDemandResourcesErrorDomain";
      goto LABEL_8;
    }
    unsigned __int8 v9 = 1;
  }
  else
  {
    if (a3 == -999)
    {
      CFStringRef v8 = (const __CFString *)NSURLErrorDomain;
LABEL_8:
      unsigned __int8 v9 = [(NSString *)v6 isEqualToString:v8];
      goto LABEL_9;
    }
    unsigned __int8 v9 = 0;
  }
LABEL_9:

  return v9;
}

BOOL sub_100090358(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  uint64_t v6 = a2;
  id v7 = a4;
  if (a3 == 17)
  {
    CFStringRef v8 = &NSPOSIXErrorDomain;
  }
  else
  {
    if (a3 != 516)
    {
      unsigned __int8 v9 = 0;
      goto LABEL_7;
    }
    CFStringRef v8 = &NSCocoaErrorDomain;
  }
  unsigned __int8 v9 = [(NSString *)v6 isEqualToString:*v8];
LABEL_7:

  return v9;
}

BOOL sub_1000903E8(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  uint64_t v6 = a2;
  id v7 = a4;
  if (a3 == 2)
  {
    CFStringRef v8 = &NSPOSIXErrorDomain;
  }
  else
  {
    if (a3 != 260 && a3 != 4)
    {
      unsigned __int8 v9 = 0;
      goto LABEL_8;
    }
    CFStringRef v8 = &NSCocoaErrorDomain;
  }
  unsigned __int8 v9 = [(NSString *)v6 isEqualToString:*v8];
LABEL_8:

  return v9;
}

BOOL sub_100090480(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  uint64_t v6 = a2;
  id v7 = a4;
  unsigned __int8 v8 = 0;
  if (a3 <= 512)
  {
    if (a3 != 1)
    {
      if (a3 != 257) {
        goto LABEL_14;
      }
      goto LABEL_7;
    }
    if ([(NSString *)v6 isEqualToString:NSPOSIXErrorDomain])
    {
LABEL_12:
      unsigned __int8 v8 = 1;
      goto LABEL_14;
    }
    CFStringRef v9 = @"NSFileProviderInternalErrorDomain";
LABEL_11:
    if (![(NSString *)v6 isEqualToString:v9])
    {
      unsigned __int8 v8 = 0;
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (a3 == 513)
  {
    CFStringRef v9 = (const __CFString *)NSCocoaErrorDomain;
    goto LABEL_11;
  }
  if (a3 == 5124) {
LABEL_7:
  }
    unsigned __int8 v8 = [(NSString *)v6 isEqualToString:NSCocoaErrorDomain];
LABEL_14:

  return v8;
}

BOOL sub_10009056C(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  if (a3 == 3328) {
    return -[NSString isEqualToString:](a2, "isEqualToString:", NSCocoaErrorDomain, a4);
  }
  else {
    return 0;
  }
}

void sub_10009076C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_100090784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  if (result)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a5 = 1;
  }
  return result;
}

void sub_100090D64(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100090D90(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100090DBC(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100090DE8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000911F0(id a1)
{
  size_t size = 0;
  sysctlbyname("kern.osversion", 0, &size, 0, 0);
  uint64_t v1 = malloc_type_malloc(size, 0x20F9CBCEuLL);
  sysctlbyname("kern.osversion", v1, &size, 0, 0);
  qword_1001EB938 = (uint64_t)[objc_alloc((Class)NSString) initWithUTF8String:v1];
  free(v1);
}

void sub_1000912CC(id a1)
{
  size_t size = 0;
  sysctlbyname("hw.model", 0, &size, 0, 0);
  uint64_t v1 = malloc_type_malloc(size, 0x9FCCDB36uLL);
  sysctlbyname("hw.model", v1, &size, 0, 0);
  qword_1001EB948 = (uint64_t)[objc_alloc((Class)NSString) initWithUTF8String:v1];
  free(v1);
}

void sub_1000916E0(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

BOOL TSUHandleSqlite(uint64_t a1, void *a2, int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  if (!a1) {
    return a1 == 0;
  }
  if (a7)
  {
    *(void *)uint64_t v19 = &a9;
    CFStringRef v13 = (const __CFString *)[objc_alloc((Class)NSString) initWithFormat:a7 arguments:&a9];
  }
  else
  {
    CFStringRef v13 = @"SQLite error";
  }
  if (a1 == 101)
  {
    uint64_t v14 = "not enough rows returned";
    if (!a3) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v14 = sqlite3_errmsg((sqlite3 *)[a4 _sqliteDatabase]);
    if (!a3) {
      goto LABEL_12;
    }
  }
  if (TSUDefaultCat_init_token != -1) {
    dispatch_once(&TSUDefaultCat_init_token, &stru_1001CD0F0);
  }
  long long v15 = TSUDefaultCat_log_t;
  if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)uint64_t v19 = 138412802;
    *(void *)&void v19[4] = v13;
    __int16 v20 = 2080;
    id v21 = v14;
    __int16 v22 = 1024;
    int v23 = a1;
    _os_log_error_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_ERROR, "%@: %s (%d)", v19, 0x1Cu);
    if (!a2) {
      return a1 == 0;
    }
    goto LABEL_13;
  }
LABEL_12:
  if (!a2) {
    return a1 == 0;
  }
LABEL_13:
  if (*a2) {
    return a1 == 0;
  }
  uint64_t v16 = 0;
  if ((int)a1 > 265)
  {
    if (a1 == 266 || a1 == 522) {
      goto LABEL_28;
    }
    if (a1 != 778) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (a1 > 0x19) {
    goto LABEL_30;
  }
  if (((1 << a1) & 0x27A0000) != 0)
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CD110);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100166498();
    }
    +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "BOOL TSUHandleSqlite(int, NSError **, BOOL, TSUDatabase *, SEL, long, NSString *, ...)", *(void *)v19), +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUDatabase.m"], 370, 0, "SQLite misused");
    +[TSUAssertionHandler logBacktraceThrottled];
    uint64_t v16 = 0;
    goto LABEL_30;
  }
  if (a1 == 13)
  {
LABEL_29:
    uint64_t v16 = 2;
    goto LABEL_30;
  }
  if (a1 == 14) {
LABEL_28:
  }
    uint64_t v16 = 1;
LABEL_30:
  id v17 = +[NSMutableDictionary dictionary];
  objc_msgSend(v17, "setObject:forKeyedSubscript:", +[NSNumber numberWithInt:](NSNumber, "numberWithInt:", a1), @"TSUDatabaseSqliteErrorCode");
  if (v13) {
    [v17 setObject:v13 forKeyedSubscript:@"TSUDatabaseErrorMessage"];
  }
  if (v14) {
    objc_msgSend(v17, "setObject:forKeyedSubscript:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", v14), @"TSUDatabaseSqliteErrorMessage");
  }
  *a2 = +[NSError tsu_errorWithCode:v16 userInfo:v17];
  return a1 == 0;
}

void sub_100091D20(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100091E30(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100091F90(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_10009212C(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100092300(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000924EC(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000926A8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000928CC(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100092A94(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100092AD0(id a1)
{
  TSUDefaultCat_log_t = TSULogCreateCategory("TSUDefaultCat");
}

void sub_100092AFC(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100092CB0(id a1)
{
  TSUDefaultCat_log_t = TSULogCreateCategory("TSUDefaultCat");
}

void sub_1000932DC(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t (*sfu_pbkdf2(uint64_t (*result)(uint64_t, uint64_t, char *, uint64_t, char *), uint64_t a2, uint64_t a3, uint64_t a4, void *__src, size_t __n, unsigned int a7, char *a8, unsigned int a9, char *a10))(uint64_t, uint64_t, char *, uint64_t, char *)
{
  uint64_t v16 = result;
  uint64_t v17 = a9 / a2;
  id v18 = &a10[a2];
  size_t v24 = a9 % a2;
  if (a2 <= a9)
  {
    uint64_t v25 = a2;
    unsigned int v19 = 1;
    do
    {
      id v26 = a8;
      int v23 = a8;
      uint64_t v20 = a2;
      id v21 = v18;
      uint64_t v22 = v17;
      uint64_t result = (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, char *))sub_100093548(v16, a2, a3, a4, __src, __n, a7, v19, v23, v18);
      uint64_t v17 = v22;
      id v18 = v21;
      a2 = v20;
      a8 = &v26[v25];
      ++v19;
    }
    while (v19 <= v17);
  }
  else
  {
    unsigned int v19 = 1;
  }
  if (v24)
  {
    sub_100093548(v16, a2, a3, a4, __src, __n, a7, v19, a10, v18);
    return (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, char *))memcpy(a8, a10, v24);
  }
  return result;
}

void *sub_100093548(uint64_t (*a1)(uint64_t, uint64_t, char *, uint64_t, char *), uint64_t a2, uint64_t a3, uint64_t a4, void *__src, size_t __n, unsigned int a7, int a8, void *a9, char *a10)
{
  int v11 = __n;
  size_t v16 = a2;
  uint64_t v17 = a10;
  id v18 = &a10[a2];
  memcpy(v18, __src, __n);
  v18[v11] = HIBYTE(a8);
  v18[v11 + 1] = BYTE2(a8);
  v18[v11 + 2] = BYTE1(a8);
  v18[v11 + 3] = a8;
  a1(a3, a4, v18, (v11 + 4), a10);
  size_t v19 = v16;
  uint64_t result = memcpy(a9, a10, v16);
  if (a7 >= 2)
  {
    unsigned int v21 = 2;
    do
    {
      uint64_t v22 = v18;
      uint64_t result = (void *)a1(a3, a4, v17, a2, v18);
      if (a2)
      {
        size_t v23 = v19;
        size_t v24 = a9;
        uint64_t v25 = v18;
        do
        {
          char v26 = *v25++;
          *v24++ ^= v26;
          --v23;
        }
        while (v23);
      }
      ++v21;
      id v18 = v17;
      uint64_t v17 = v22;
    }
    while (v21 <= a7);
  }
  return result;
}

os_log_t TSULogCreateCategory(char *category)
{
  os_log_t v1 = os_log_create("com.apple.iwork", category);
  return v1;
}

id sub_100093888(void *a1)
{
  id result = [*(id *)(a1[4] + 8) containsObject:a1[5]];
  *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = (_BYTE)result;
  return result;
}

id sub_10009396C(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 8) count];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

uint64_t sub_100093A94(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return result;
}

void sub_100093AA4(uint64_t a1)
{
}

uint64_t sub_100093AAC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 8) allObjects];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v2;
  return _objc_release_x1(v2, v4);
}

uint64_t sub_100093BEC(uint64_t a1)
{
  uint64_t v2 = +[NSSet setWithSet:*(void *)(*(void *)(a1 + 32) + 8)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v2;
  return _objc_release_x1(v2, v4);
}

id sub_100093CDC(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) addObject:*(void *)(a1 + 40)];
}

id sub_100093D80(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) removeObject:*(void *)(a1 + 40)];
}

uint64_t sub_100093E7C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 8) description];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v2;
  return _objc_release_x1(v2, v4);
}

void sub_100094FF8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

uint64_t sub_1000955EC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1000956A4(uint64_t a1)
{
  id result = (id)(*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  if (result)
  {
    id v3 = result;
    uint64_t v4 = *(void **)(a1 + 32);
    return [v4 addObject:v3];
  }
  return result;
}

void sub_100095974(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100095A80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100095A98(uint64_t a1, uint64_t a2)
{
}

void sub_100095AA8(uint64_t a1)
{
}

id sub_100095AB4(uint64_t a1, void *a2, void *a3)
{
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id result = [a2 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (result)
  {
    id v7 = result;
    uint64_t v8 = *(void *)v12;
    do
    {
      CFStringRef v9 = 0;
      do
      {
        if (*(void *)v12 != v8) {
          objc_enumerationMutation(a2);
        }
        uint64_t v10 = *(void *)(*((void *)&v11 + 1) + 8 * (void)v9);
        objc_opt_class();
        if (objc_opt_isKindOfClass()) {
          (*(void (**)(void))(*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) + 16))();
        }
        else {
          [a3 addObject:v10];
        }
        CFStringRef v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id result = [a2 countByEnumeratingWithState:&v11 objects:v15 count:16];
      id v7 = result;
    }
    while (result);
  }
  return result;
}

void sub_100095D08(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100095FD8(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);

    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

void sub_100096490(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000964BC(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000966CC(void *a1)
{
  objc_begin_catch(a1);
  fclose(v1);
  objc_exception_rethrow();
}

void sub_1000966E4(_Unwind_Exception *a1)
{
}

void sub_100096888(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000969C8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100096CE4(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_100096EBC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100096ED8(id a1)
{
  TSUErrorCat_log_t = TSULogCreateCategory("TSUErrorCat");
}

void sub_100096FAC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000973B4(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000973F8(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009743C(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

id sub_10009760C(uint64_t a1)
{
  return [*(id *)(a1 + 32) _close];
}

void sub_100097B3C(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100097B80(uint64_t a1, char a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  CFStringRef v9 = v8;
  uint64_t v10 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v10 + 88))
  {
    if (v8)
    {
      +[TSUAssertionHandler _atomicIncrementAssertCount];
      if (TSUAssertCat_init_token != -1) {
        dispatch_once(&TSUAssertCat_init_token, &stru_1001CD3D8);
      }
      long long v11 = TSUAssertCat_log_t;
      if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
        sub_1001670F4(v11, v9);
      }
      long long v12 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUBufferedReadChannel _resetStreamReadChannelIfNeededForOffset:length:]_block_invoke");
      long long v13 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUBufferedReadChannel.m"];
      long long v14 = (objc_class *)objc_opt_class();
      long long v15 = NSStringFromClass(v14);
      size_t v16 = [v9 domain];
      +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v12, v13, 196, 0, "Error reading from filter TSUStreamReadChannel: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v15, v16, [v9 code], v9);

      +[TSUAssertionHandler logBacktraceThrottled];
      a2 = 1;
    }
    else if (v7)
    {
      *(void *)(v10 + 112) += dispatch_data_get_size(v7);
      uint64_t v17 = *(void *)(a1 + 32);
      id v18 = *(NSObject **)(v17 + 120);
      if (v18)
      {
        dispatch_data_t concat = dispatch_data_create_concat(v18, v7);
        uint64_t v20 = *(void *)(a1 + 32);
        unsigned int v21 = *(void **)(v20 + 120);
        *(void *)(v20 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = concat;
      }
      else
      {
        uint64_t v22 = v7;
        unsigned int v21 = *(void **)(v17 + 120);
        *(void *)(v17 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v22;
      }
    }
    *(unsigned char *)(*(void *)(a1 + 32) + 88) = a2;
  }
}

void sub_100097D64(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100097E94(void *a1)
{
  uint64_t v2 = a1[4];
  if (*(void *)(v2 + 48))
  {
    id v3 = +[NSThread currentThread];
    uint64_t v4 = [v3 threadDictionary];
    [v4 setObject:&__kCFBooleanTrue forKeyedSubscript:@"TSUBufferedReadChannelInvokingHandler"];

    (*(void (**)(void))(a1[5] + 16))();
    id v10 = +[NSThread currentThread];
    uint64_t v5 = [v10 threadDictionary];
    [v5 setObject:&__kCFBooleanFalse forKeyedSubscript:@"TSUBufferedReadChannelInvokingHandler"];
  }
  else
  {
    dispatch_suspend(*(dispatch_object_t *)(v2 + 8));
    uint64_t v6 = a1[6];
    uint64_t v7 = a1[7];
    id v8 = (void *)a1[4];
    uint64_t v9 = a1[5];
    [v8 _readFromOffset:v6 length:v7 handler:v9];
  }
}

void sub_100098238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100098250(void *a1, int a2, void *a3, void *a4)
{
  uint64_t v7 = a3;
  id v8 = a4;
  uint64_t v9 = v8;
  uint64_t v10 = a1[4];
  if (*(void *)(v10 + 48)) {
    goto LABEL_38;
  }
  if (*(void *)(v10 + 80))
  {
    if (!v8) {
      goto LABEL_4;
    }
  }
  else
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CD420);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100167358();
    }
    long long v12 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUBufferedReadChannel _readFromOffset:length:handler:]_block_invoke");
    long long v13 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUBufferedReadChannel.m"];
    +[TSUAssertionHandler handleFailureInFunction:v12 file:v13 lineNumber:283 isFatal:0 description:"The source handler for the stream read channel should not be nil"];

    +[TSUAssertionHandler logBacktraceThrottled];
    if (!v9)
    {
      uint64_t v9 = +[NSError tsu_fileReadUnknownErrorWithUserInfo:0];
      if (!v9)
      {
LABEL_4:
        if (v7) {
          size_t size = dispatch_data_get_size(v7);
        }
        else {
          size_t size = 0;
        }
        *(void *)(*(void *)(a1[6] + 8) + 24) += size;
        if (*(void *)(*(void *)(a1[6] + 8) + 24) > a1[7])
        {
          unsigned int v24 = +[TSUAssertionHandler _atomicIncrementAssertCount];
          if (TSUAssertCat_init_token != -1) {
            dispatch_once(&TSUAssertCat_init_token, &stru_1001CD460);
          }
          uint64_t v25 = TSUAssertCat_log_t;
          if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR))
          {
            uint64_t v34 = a1[7];
            uint64_t v35 = *(void *)(*(void *)(a1[6] + 8) + 24);
            *(_DWORD *)buf = 67110402;
            unsigned int v47 = v24;
            __int16 v48 = 2082;
            __int16 v49 = "-[TSUBufferedReadChannel _readFromOffset:length:handler:]_block_invoke";
            __int16 v50 = 2082;
            __int16 v51 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUBufferedReadChannel.m";
            __int16 v52 = 1024;
            int v53 = 305;
            __int16 v54 = 2048;
            uint64_t v55 = v35;
            __int16 v56 = 2048;
            uint64_t v57 = v34;
            _os_log_error_impl((void *)&_mh_execute_header, v25, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Received more data than requested: %zu instead of %zu", buf, 0x36u);
          }
          char v26 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUBufferedReadChannel _readFromOffset:length:handler:]_block_invoke");
          id v27 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUBufferedReadChannel.m"];
          +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v26, v27, 305, 0, "Received more data than requested: %zu instead of %zu", *(void *)(*(void *)(a1[6] + 8) + 24), a1[7]);

          +[TSUAssertionHandler logBacktraceThrottled];
        }
        if (a2)
        {
          BOOL v28 = *(void *)(*(void *)(a1[6] + 8) + 24) < a1[7];
          if (v7) {
            goto LABEL_29;
          }
        }
        else
        {
          BOOL v28 = 0;
          if (v7) {
            goto LABEL_29;
          }
        }
        if (!v28)
        {
LABEL_31:
          if (v28)
          {
            uint64_t v30 = a1[4];
            id v31 = *(void **)(v30 + 80);
            *(void *)(v30 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
          }
          if (a2)
          {
            *(void *)(a1[4] + 32) += *(void *)(*(void *)(a1[6] + 8) + 24);
            id v32 = (void *)a1[4];
            uint64_t v33 = v32[5];
            if (v33 != -1)
            {
              v32[5] = v33 - *(void *)(*(void *)(a1[6] + 8) + 24);
              id v32 = (void *)a1[4];
            }
            [v32 _readFromOffset:a1[8] length:a1[9] handler:a1[5]];
          }
          uint64_t v9 = 0;
          goto LABEL_38;
        }
LABEL_29:
        uint64_t v29 = *(void *)(a1[4] + 80);
        if (!v29)
        {
          +[TSUAssertionHandler _atomicIncrementAssertCount];
          if (TSUAssertCat_init_token != -1) {
            dispatch_once(&TSUAssertCat_init_token, &stru_1001CD480);
          }
          if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
            sub_1001671DC();
          }
          TSUSetCrashReporterInfo((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d invalid nil value for '%{public}s'", v36, v37, v38, v39, v40, v41, v42, (char)"-[TSUBufferedReadChannel _readFromOffset:length:handler:]_block_invoke");
          __int16 v43 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUBufferedReadChannel _readFromOffset:length:handler:]_block_invoke");
          unint64_t v44 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUBufferedReadChannel.m"];
          +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v43, v44, 310, 1, "invalid nil value for '%{public}s'", "_streamReadChannelSourceHandler", "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUBufferedReadChannel.m", 310, "_streamReadChannelSourceHandler");

          TSUCrashBreakpoint(v45);
          abort();
        }
        (*(void (**)(uint64_t, BOOL, NSObject *, void))(v29 + 16))(v29, v28, v7, 0);
        goto LABEL_31;
      }
    }
  }
  +[TSUAssertionHandler _atomicIncrementAssertCount];
  if (TSUAssertCat_init_token != -1) {
    dispatch_once(&TSUAssertCat_init_token, &stru_1001CD440);
  }
  long long v14 = TSUAssertCat_log_t;
  if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
    sub_100167270(v14, v9);
  }
  long long v15 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUBufferedReadChannel _readFromOffset:length:handler:]_block_invoke");
  size_t v16 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUBufferedReadChannel.m"];
  uint64_t v17 = (objc_class *)objc_opt_class();
  id v18 = NSStringFromClass(v17);
  size_t v19 = [v9 domain];
  +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v15, v16, 296, 0, "Error reading from source TSUReadChannel: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", v18, v19, [v9 code], v9);

  +[TSUAssertionHandler logBacktraceThrottled];
  uint64_t v20 = +[NSThread currentThread];
  unsigned int v21 = [v20 threadDictionary];
  [v21 setObject:&__kCFBooleanTrue forKeyedSubscript:@"TSUBufferedReadChannelInvokingHandler"];

  (*(void (**)(void))(a1[5] + 16))();
  uint64_t v22 = +[NSThread currentThread];
  size_t v23 = [v22 threadDictionary];
  [v23 setObject:&__kCFBooleanFalse forKeyedSubscript:@"TSUBufferedReadChannelInvokingHandler"];

  objc_storeStrong((id *)(a1[4] + 48), v9);
  dispatch_resume(*(dispatch_object_t *)(a1[4] + 8));
LABEL_38:
}

void sub_1000988CC(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100098910(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100098954(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100098998(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100098C24(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100098E64(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009905C(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100099264(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000992E8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x4Au);
}

void sub_100099614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009962C(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100099670(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_1000996B4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return result;
}

void sub_1000996C4(uint64_t a1)
{
}

void sub_1000996CC(uint64_t a1, int a2, void *a3, void *a4)
{
  data2 = a3;
  id v7 = a4;
  id v8 = *(NSObject **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (v8)
  {
    if (v7)
    {
      uint64_t v9 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
LABEL_8:
      v9();
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8);
      long long v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;

      goto LABEL_9;
    }
    if (data2)
    {
      dispatch_data_t concat = dispatch_data_create_concat(v8, data2);
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8);
      long long v12 = *(void **)(v11 + 40);
      *(void *)(v11 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = concat;
    }
    if (a2)
    {
      uint64_t v9 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
      goto LABEL_8;
    }
  }
LABEL_9:
}

void sub_100099A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100099AA4(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100099AE8(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_100099B2C(uint64_t a1, int a2, void *a3, void *a4)
{
  data2 = a3;
  id v7 = a4;
  id v8 = *(NSObject **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  if (v8)
  {
    if (v7)
    {
      uint64_t v9 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
LABEL_8:
      v9();
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8);
      long long v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;

      goto LABEL_9;
    }
    if (data2)
    {
      dispatch_data_t concat = dispatch_data_create_concat(v8, data2);
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8);
      long long v12 = *(void **)(v11 + 40);
      *(void *)(v11 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = concat;
    }
    if (a2)
    {
      uint64_t v9 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
      goto LABEL_8;
    }
  }
LABEL_9:
}

void sub_100099E14(id a1)
{
  os_log_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

intptr_t sub_100099F30(uint64_t a1, int a2)
{
  intptr_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  if (a2)
  {
    uint64_t v5 = *(NSObject **)(a1 + 32);
    return dispatch_semaphore_signal(v5);
  }
  return result;
}

intptr_t sub_10009A078(uint64_t a1, int a2)
{
  intptr_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  if (a2)
  {
    uint64_t v5 = *(NSObject **)(a1 + 32);
    return dispatch_semaphore_signal(v5);
  }
  return result;
}

id sub_10009A0D0(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  id v6 = [v5 readToBuffer:a2 size:a3];

  return v6;
}

char *sub_10009A2AC(void *a1, uint64_t a2)
{
  id v3 = a1;
  uint64_t v4 = [v3 offset];
  [v3 seekToOffset:&v4[a2]];
  id v5 = (char *)((unsigned char *)[v3 offset] - v4);

  return v5;
}

void sub_10009A494(void *a1)
{
  id v1 = a1;
  [v1 seekToOffset:0];
}

void sub_10009A678(_Unwind_Exception *a1)
{
}

void sub_10009A694(void *a1)
{
  id v1 = a1;
  [v1 close];
  CFRelease(v1);
}

void sub_10009A87C(_Unwind_Exception *a1)
{
}

void sub_10009A898(id a1)
{
  id v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009A8DC(id a1)
{
  id v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009A920(id a1)
{
  id v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009A964(id a1)
{
  id v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

id TSUArrayDescription(void *a1)
{
  id v1 = a1;
  +[TSUDescription descriptionWithObject:format:](TSUDescription, "descriptionWithObject:format:", v1, @"; count=%lu",
  uint64_t v2 = [v1 count]);
  if ([v1 count])
  {
    unint64_t v3 = 0;
    do
    {
      uint64_t v4 = +[NSString stringWithFormat:@"[%lu]", v3];
      id v5 = [v1 objectAtIndexedSubscript:v3];
      [v2 addField:v4, @"%@", v5 format];

      ++v3;
    }
    while (v3 < (unint64_t)[v1 count]);
  }
  [v2 setFieldOptionCommaSeparated];
  id v6 = [v2 descriptionString];

  return v6;
}

__CFString *TSUObjectReferenceDescription(void *a1)
{
  id v1 = a1;
  if (v1)
  {
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();
    ClassName = object_getClassName(v1);
    if (isKindOfClass) {
      +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"(%s*)%p; count=%lu",
    }
        ClassName,
        v1,
        [v1 count]);
    else {
    uint64_t v4 = +[NSString stringWithFormat:@"(%s*)%p", ClassName, v1, v6];
    }
  }
  else
  {
    uint64_t v4 = @"<nil>";
  }

  return v4;
}

void sub_10009BD18(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009BE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10009BEB0(uint64_t a1, int a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(v10 + 8);
  if (*(unsigned char *)(v11 + 24))
  {
    if (v8)
    {
      *(unsigned char *)(v11 + 24) = 0;
      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    }
    else
    {
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      v14[2] = sub_10009C040;
      v14[3] = &unk_1001CD708;
      uint64_t v16 = v10;
      id v15 = *(id *)(a1 + 40);
      [*(id *)(a1 + 32) setHandler:v14];
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
      {
        applier[0] = _NSConcreteStackBlock;
        applier[1] = 3221225472;
        applier[2] = sub_10009C104;
        applier[3] = &unk_1001C92A8;
        id v13 = *(id *)(a1 + 32);
        *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = dispatch_data_apply(v7, applier);
        if (a2 && *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
          [*(id *)(a1 + 32) didFinishProcessing];
        }
      }
    }
  }
}

uint64_t sub_10009C040(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v8 = a2;
  id v9 = a4;
  id v10 = a5;
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8);
  if (*(unsigned char *)(v12 + 24))
  {
    if (v10) {
      *(unsigned char *)(v12 + 24) = 0;
    }
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  }
  uint64_t v13 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);

  return v13;
}

id sub_10009C104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return [*(id *)(a1 + 32) processBytes:a4 size:a5];
}

void sub_10009C308(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009C5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 144), 8);
  _Block_object_dispose((const void *)(v17 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10009C5E8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return result;
}

void sub_10009C5F8(uint64_t a1)
{
}

void sub_10009C600(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  int v10 = *(unsigned __int8 *)(v9 + 24);
  if (v8 && *(unsigned char *)(v9 + 24))
  {
    *(unsigned char *)(v9 + 24) = 0;
    [*(id *)(a1 + 32) handleFailureWithHandler:*(void *)(a1 + 40) error:v8];
    int v10 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  }
  if (v10 && (uint64_t v11 = *(NSObject **)(*(void *)(*(void *)(a1 + 56) + 8) + 40)) != 0)
  {
    if (v7)
    {
      dispatch_data_t concat = dispatch_data_create_concat(v11, v7);
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8);
      long long v14 = *(void **)(v13 + 40);
      *(void *)(v13 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = concat;

      uint64_t v11 = *(NSObject **)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
    }
    id v15 = v11;

    size_t size = dispatch_data_get_size(v15);
    if ((a2 & 1) != 0 || size >= 0x1E)
    {
      uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8);
      size_t v19 = *(void **)(v18 + 40);
      *(void *)(v18 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;

      id v34 = v8;
      size_t v35 = 0;
      unsigned __int8 v20 = [*(id *)(a1 + 32) readFileHeaderFromData:v15 headerLength:&v35 error:&v34];
      id v17 = v34;

      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = v20;
      size_t v21 = v35;
      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = v35 != *(void *)(a1 + 80);
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
      {
        if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
        {
          [*(id *)(a1 + 32) readWithFileHeaderLength:v21 handler:*(void *)(a1 + 40)];
        }
        else
        {
          size_t v22 = dispatch_data_get_size(v15);
          if (v22 >= v21)
          {
            dispatch_data_t subrange = dispatch_data_create_subrange(v15, v21, v22 - v21);

            id v15 = subrange;
          }
          else
          {
            size_t v23 = v22;
            if (TSUDefaultCat_init_token != -1) {
              dispatch_once(&TSUDefaultCat_init_token, &stru_1001CD770);
            }
            unsigned int v24 = TSUDefaultCat_log_t;
            if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR))
            {
              id v31 = *(void **)(*(void *)(a1 + 32) + 8);
              id v32 = v24;
              uint64_t v33 = [v31 name];
              *(_DWORD *)buf = 138412802;
              uint64_t v39 = v33;
              __int16 v40 = 2048;
              size_t v41 = v23;
              __int16 v42 = 2048;
              size_t v43 = v35;
              _os_log_error_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_ERROR, "Read was less than file header size for entry %@. dataSize=%zu, headerLength=%zu", buf, 0x20u);
            }
            v36[0] = @"TSUZipArchiveErrorDescription";
            v36[1] = @"TSUZipArchiveErrorEntryName";
            v37[0] = @"Entry is too small";
            uint64_t v25 = [*(id *)(*(void *)(a1 + 32) + 8) name];
            char v26 = (void *)v25;
            CFStringRef v27 = &stru_1001D3790;
            if (v25) {
              CFStringRef v27 = (const __CFString *)v25;
            }
            v37[1] = v27;
            BOOL v28 = +[NSDictionary dictionaryWithObjects:v37 forKeys:v36 count:2];
            uint64_t v29 = +[NSError tsu_fileReadCorruptedFileErrorWithUserInfo:v28];

            *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
            id v17 = (id)v29;
          }
        }
      }
      if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
        [*(id *)(a1 + 32) handleFailureWithHandler:*(void *)(a1 + 40) error:v17];
      }
    }
    else
    {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
      id v17 = v8;
    }
  }
  else
  {
    id v17 = v8;
    id v15 = v7;
  }
  if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)
    && !*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 32) processData:v15 CRC:*(void *)(*(void *)(a1 + 72)+ 8)+ 24 isDone:a2 handler:*(void *)(a1 + 40)];
  }
}

void sub_10009C9D4(id a1)
{
  id v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009CC74(id a1)
{
  id v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009CCB8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v13 = 0;
  if (v6
    || (id v7 = *(void **)(a1 + 32),
        id v12 = 0,
        unsigned int v8 = [v7 readFileHeaderFromData:v5 headerLength:&v13 error:&v12],
        id v6 = v12,
        !v8))
  {
    [*(id *)(a1 + 32) handleFailureWithHandler:*(void *)(a1 + 40) error:v6];
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 32);
    int v10 = *(void **)(v9 + 32);
    uint64_t v11 = (char *)[*(id *)(v9 + 8) offset];
    [v10 readFromOffset:&v11[v13 + *(void *)(a1 + 48)] length:*(void *)(a1 + 56) handler:*(void *)(a1 + 40)];
  }
}

void sub_10009D1BC(id a1)
{
  id v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009D200(id a1)
{
  id v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009D244(id a1)
{
  id v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009D3C8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_10009D3F4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v10 = a3;
  id v7 = a4;
  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
  int v9 = *(unsigned __int8 *)(v8 + 24);
  if (v7 && *(unsigned char *)(v8 + 24))
  {
    *(unsigned char *)(v8 + 24) = 0;
    [*(id *)(a1 + 32) handleFailureWithHandler:*(void *)(a1 + 40) error:v7];
    int v9 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  }
  if (v9) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 32) processData:v10 CRC:*(void *)(*(void *)(a1 + 56)+ 8)+ 24 isDone:a2 handler:*(void *)(a1 + 40)];
  }
}

uint64_t sub_10009D6DC(uint64_t a1, int a2, int a3, Bytef *buf, unint64_t len)
{
  uLong v7 = **(unsigned int **)(a1 + 32);
  if (HIDWORD(len))
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CD888);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100167B6C();
    }
    id v10 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUZipReadChannel processData:CRC:isDone:handler:]_block_invoke");
    uint64_t v11 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipReadChannel.m"];
    +[TSUAssertionHandler handleFailureInFunction:v10 file:v11 lineNumber:262 isFatal:0 description:"Out-of-bounds type assignment was clamped to max"];

    +[TSUAssertionHandler logBacktraceThrottled];
    uInt v8 = -1;
  }
  else
  {
    uInt v8 = len;
  }
  **(_DWORD **)(a1 + 3sub_100072180((void *)this + 2) = crc32(v7, buf, v8);
  return 1;
}

void sub_10009D81C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009D860(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009DCE8(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009DD2C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009DE90(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_10009DF44(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x12u);
}

void sub_10009E2B8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

BOOL p_sortFunction(_NSRange a1, _NSRange a2)
{
  if (a1.location == a2.location) {
    return a2.location + a2.length < a1.location + a1.length;
  }
  else {
    return a1.location < a2.location;
  }
}

void TSUNormalizeRangeVector(char **a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  if ((unint64_t)(v3 - v2) < 0x11) {
    return;
  }
  uint64_t v25 = p_sortFunction;
  unint64_t v5 = 126 - 2 * __clz((v3 - v2) >> 4);
  if (v3 == v2) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = v5;
  }
  sub_10009E810(v2, v3, (uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))&v25, v6, 1);
  uInt v8 = *a1;
  uLong v7 = a1[1];
  uint64_t v9 = v7 - *a1;
  BOOL v10 = v7 != *a1;
  unint64_t v11 = 0;
  if ((unint64_t)v9 >= 0x11 && v7 != v8)
  {
    unint64_t v13 = v9 >> 4;
    unint64_t v14 = *(void *)v8;
    unint64_t v15 = 1;
    while (2)
    {
      if (v13 <= v15 + 1) {
        unint64_t v16 = v15 + 1;
      }
      else {
        unint64_t v16 = v13;
      }
      id v17 = &v8[16 * v15 + 8];
      while (1)
      {
        unint64_t v18 = *((void *)v17 - 1);
        if (v14 != v18) {
          break;
        }
        ++v15;
        v17 += 16;
        if (v16 == v15)
        {
          if (v11 >= v13) {
            return;
          }
          goto LABEL_28;
        }
      }
      size_t v19 = &v8[16 * v11];
      uint64_t v21 = *(void *)v19;
      uint64_t v20 = *((void *)v19 + 1);
      uint64_t v22 = *(void *)v17;
      if (v20 + v21 >= v18)
      {
        unint64_t v23 = v22 + v18;
        if (v20 + v21 >= v23)
        {
LABEL_24:
          ++v15;
          BOOL v10 = v11 < v13;
          if (v15 < v13)
          {
            unint64_t v14 = v18;
            if (v11 < v13) {
              continue;
            }
          }
          goto LABEL_10;
        }
        uint64_t v22 = v23 - v21;
      }
      else
      {
        ++v11;
        *(void *)&v8[16 * v11] = v18;
      }
      break;
    }
    *(void *)&v8[16 * v11 + 8] = v22;
    goto LABEL_24;
  }
LABEL_10:
  if (v10)
  {
LABEL_28:
    uint64_t v24 = (uint64_t)&v8[16 * v11 + 16];
    if ((char *)v24 != v7) {
      a1[1] = (char *)v24;
    }
  }
}

void sub_10009E810(char *a1, char *a2, uint64_t (**a3)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a4, char a5)
{
LABEL_1:
  unint64_t v11 = a1;
LABEL_2:
  uint64_t v12 = 1 - a4;
  while (1)
  {
    a1 = v11;
    uint64_t v13 = v12;
    uint64_t v14 = a2 - v11;
    unint64_t v15 = (a2 - v11) >> 4;
    if (!(!v6 & v5))
    {
      switch(v15)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          uint64_t v21 = *((void *)a2 - 2);
          uint64_t v22 = *((void *)a2 - 1);
          unint64_t v23 = a2 - 16;
          if ((*a3)(v21, v22, *(void *)v11, *((void *)v11 + 1)))
          {
            long long v25 = *(_OWORD *)v11;
            *(_OWORD *)unint64_t v11 = *(_OWORD *)v23;
            *(_OWORD *)unint64_t v23 = v25;
          }
          break;
        case 3uLL:
          sub_10009ED70(v11, (void *)v11 + 2, (void *)a2 - 2, a3);
          break;
        case 4uLL:
          sub_10009F2B8(v11, (void *)v11 + 2, (void *)v11 + 4, (void *)a2 - 2, a3);
          break;
        case 5uLL:
          sub_10009F374(v11, (void *)v11 + 2, (void *)v11 + 4, (void *)v11 + 6, (void *)a2 - 2, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return;
    }
    if (v14 <= 383) {
      break;
    }
    if (v13 == 1)
    {
      if (v11 != a2)
      {
        sub_10009F458(v11, a2, a2, a3);
      }
      return;
    }
    unint64_t v16 = v15 >> 1;
    id v17 = &v11[16 * (v15 >> 1)];
    if ((unint64_t)v14 >= 0x801)
    {
      sub_10009ED70(v11, &v11[16 * (v15 >> 1)], (void *)a2 - 2, a3);
      sub_10009ED70((void *)v11 + 2, (void *)v17 - 2, (void *)a2 - 4, a3);
      sub_10009ED70((void *)v11 + 4, &v11[16 * v16 + 16], (void *)a2 - 6, a3);
      sub_10009ED70((void *)v17 - 2, v17, &v11[16 * v16 + 16], a3);
      long long v24 = *(_OWORD *)v11;
      *(_OWORD *)unint64_t v11 = *(_OWORD *)v17;
      *(_OWORD *)id v17 = v24;
      if (a5) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_10009ED70(&v11[16 * (v15 >> 1)], v11, (void *)a2 - 2, a3);
      if (a5) {
        goto LABEL_13;
      }
    }
    if (((*a3)(*((void *)v11 - 2), *((void *)v11 - 1), *(void *)v11, *((void *)v11 + 1)) & 1) == 0)
    {
      unint64_t v11 = (char *)sub_10009EE70(v11, a2, a3);
      goto LABEL_18;
    }
LABEL_13:
    unint64_t v18 = (char *)sub_10009EFA8((uint64_t *)v11, (uint64_t *)a2, a3);
    if ((v19 & 1) == 0) {
      goto LABEL_16;
    }
    BOOL v20 = sub_10009F0DC(v11, v18, a3);
    unint64_t v11 = v18 + 16;
    if (sub_10009F0DC(v18 + 16, a2, a3))
    {
      a4 = -v13;
      a2 = v18;
      if (v20) {
        return;
      }
      goto LABEL_1;
    }
    uint64_t v12 = v13 + 1;
    if (!v20)
    {
LABEL_16:
      sub_10009E810(a1, v18, a3, -v13, a5 & 1);
      unint64_t v11 = v18 + 16;
LABEL_18:
      a5 = 0;
      a4 = -v13;
      goto LABEL_2;
    }
  }
  if (a5)
  {
    sub_10009EBE8((uint64_t)v11, a2, a3);
  }
  else
  {
    sub_10009ECC0((uint64_t)v11, a2, a3);
  }
}

uint64_t sub_10009EBE8(uint64_t result, void *a2, uint64_t (**a3)(uint64_t, uint64_t, void, void))
{
  if ((void *)result != a2)
  {
    uint64_t v4 = (void *)result;
    char v5 = (void *)(result + 16);
    if ((void *)(result + 16) != a2)
    {
      uint64_t v7 = 0;
      uInt v8 = (void *)result;
      do
      {
        uint64_t v9 = v5;
        intptr_t result = (*a3)(v8[2], v8[3], *v8, v8[1]);
        if (result)
        {
          uint64_t v10 = *v9;
          uint64_t v11 = v8[3];
          uint64_t v12 = v7;
          while (1)
          {
            *(_OWORD *)((char *)v4 + v12 + 1sub_100072180((void *)this + 6) = *(_OWORD *)((char *)v4 + v12);
            if (!v12) {
              break;
            }
            intptr_t result = (*a3)(v10, v11, *(void *)((char *)v4 + v12 - 16), *(void *)((char *)v4 + v12 - 8));
            v12 -= 16;
            if ((result & 1) == 0)
            {
              uint64_t v13 = (void *)((char *)v4 + v12 + 16);
              goto LABEL_10;
            }
          }
          uint64_t v13 = v4;
LABEL_10:
          *uint64_t v13 = v10;
          v13[1] = v11;
        }
        char v5 = v9 + 2;
        v7 += 16;
        uInt v8 = v9;
      }
      while (v9 + 2 != a2);
    }
  }
  return result;
}

uint64_t sub_10009ECC0(uint64_t result, void *a2, uint64_t (**a3)(uint64_t, uint64_t, void, void))
{
  if ((void *)result != a2)
  {
    uint64_t v4 = (void *)result;
    char v5 = (void *)(result + 16);
    if ((void *)(result + 16) != a2)
    {
      do
      {
        uint64_t v7 = v5;
        intptr_t result = (*a3)(v4[2], v4[3], *v4, v4[1]);
        if (result)
        {
          uint64_t v8 = *v7;
          uint64_t v9 = v4[3];
          uint64_t v10 = v7;
          do
          {
            uint64_t v11 = v10 - 1;
            _OWORD *v10 = *(v10 - 1);
            intptr_t result = (*a3)(v8, v9, *((void *)v10 - 4), *((void *)v10 - 3));
            uint64_t v10 = v11;
          }
          while ((result & 1) != 0);
          *uint64_t v11 = v8;
          v11[1] = v9;
        }
        char v5 = v7 + 2;
        uint64_t v4 = v7;
      }
      while (v7 + 2 != a2);
    }
  }
  return result;
}

uint64_t sub_10009ED70(void *a1, void *a2, void *a3, uint64_t (**a4)(void, void, void, void))
{
  char v8 = (*a4)(*a2, a2[1], *a1, a1[1]);
  uint64_t result = (*a4)(*a3, a3[1], *a2, a2[1]);
  if ((v8 & 1) == 0)
  {
    if (!result) {
      return result;
    }
    long long v11 = *(_OWORD *)a2;
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *(_OWORD *)a3 = v11;
    if (!(*a4)(*a2, a2[1], *a1, a1[1])) {
      return 1;
    }
    long long v12 = *(_OWORD *)a1;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)a2 = v12;
    return 2;
  }
  if (!result)
  {
    long long v13 = *(_OWORD *)a1;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)a2 = v13;
    if (!(*a4)(*a3, a3[1], *a2, a2[1])) {
      return 1;
    }
    long long v14 = *(_OWORD *)a2;
    *(_OWORD *)a2 = *(_OWORD *)a3;
    *(_OWORD *)a3 = v14;
    return 2;
  }
  long long v10 = *(_OWORD *)a1;
  *(_OWORD *)a1 = *(_OWORD *)a3;
  *(_OWORD *)a3 = v10;
  return 1;
}

void *sub_10009EE70(void *a1, _OWORD *a2, uint64_t (**a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a2;
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  if ((*a3)(*a1, v7, *((void *)a2 - 2), *((void *)a2 - 1)))
  {
    char v8 = a1;
    do
    {
      uint64_t v9 = v8[2];
      uint64_t v10 = v8[3];
      v8 += 2;
    }
    while (((*a3)(v6, v7, v9, v10) & 1) == 0);
  }
  else
  {
    long long v11 = a1 + 2;
    do
    {
      char v8 = v11;
      if (v11 >= (void *)v4) {
        break;
      }
      int v12 = (*a3)(v6, v7, *v11, v11[1]);
      long long v11 = v8 + 2;
    }
    while (!v12);
  }
  if (v8 < (void *)v4)
  {
    do
    {
      uint64_t v13 = *((void *)v4 - 2);
      uint64_t v14 = *((void *)v4-- - 1);
    }
    while (((*a3)(v6, v7, v13, v14) & 1) != 0);
  }
  while (v8 < (void *)v4)
  {
    long long v20 = *(_OWORD *)v8;
    *(_OWORD *)char v8 = *v4;
    _OWORD *v4 = v20;
    do
    {
      uint64_t v15 = v8[2];
      uint64_t v16 = v8[3];
      v8 += 2;
    }
    while (!(*a3)(v6, v7, v15, v16));
    do
    {
      uint64_t v17 = *((void *)v4 - 2);
      uint64_t v18 = *((void *)v4-- - 1);
    }
    while (((*a3)(v6, v7, v17, v18) & 1) != 0);
  }
  if (v8 - 2 != a1) {
    *(_OWORD *)a1 = *((_OWORD *)v8 - 1);
  }
  *(v8 - sub_100072180((void *)this + 2) = v6;
  *(v8 - sub_1000333D0((uint64_t *)this + 1) = v7;
  return v8;
}

uint64_t *sub_10009EFA8(uint64_t *a1, uint64_t *a2, uint64_t (**a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = 0;
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  do
  {
    char v9 = (*a3)(a1[v6 + 2], a1[v6 + 3], v7, v8);
    v6 += 2;
  }
  while ((v9 & 1) != 0);
  uint64_t v10 = &a1[v6];
  if (v6 == 2)
  {
    do
    {
      if (v10 >= a2) {
        break;
      }
      uint64_t v13 = *(a2 - 2);
      uint64_t v14 = *(a2 - 1);
      a2 -= 2;
    }
    while (((*a3)(v13, v14, v7, v8) & 1) == 0);
  }
  else
  {
    do
    {
      uint64_t v11 = *(a2 - 2);
      uint64_t v12 = *(a2 - 1);
      a2 -= 2;
    }
    while (!(*a3)(v11, v12, v7, v8));
  }
  uint64_t v15 = &a1[v6];
  if (v10 < a2)
  {
    uint64_t v16 = a2;
    do
    {
      long long v17 = *(_OWORD *)v15;
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *(_OWORD *)uint64_t v16 = v17;
      do
      {
        uint64_t v18 = v15[2];
        uint64_t v19 = v15[3];
        v15 += 2;
      }
      while (((*a3)(v18, v19, v7, v8) & 1) != 0);
      do
      {
        uint64_t v20 = *(v16 - 2);
        uint64_t v21 = *(v16 - 1);
        v16 -= 2;
      }
      while (!(*a3)(v20, v21, v7, v8));
    }
    while (v15 < v16);
  }
  uint64_t result = v15 - 2;
  if (v15 - 2 != a1) {
    *(_OWORD *)a1 = *(_OWORD *)result;
  }
  *(v15 - sub_100072180((void *)this + 2) = v7;
  *(v15 - sub_1000333D0((uint64_t *)this + 1) = v8;
  return result;
}

BOOL sub_10009F0DC(char *a1, char *a2, uint64_t (**a3)(uint64_t, uint64_t, void, void))
{
  uint64_t v6 = (a2 - a1) >> 4;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      uint64_t v8 = a2 - 16;
      if ((*a3)(*((void *)a2 - 2), *((void *)a2 - 1), *(void *)a1, *((void *)a1 + 1)))
      {
        long long v9 = *(_OWORD *)a1;
        *(_OWORD *)a1 = *(_OWORD *)v8;
        *(_OWORD *)uint64_t v8 = v9;
      }
      return 1;
    case 3:
      sub_10009ED70(a1, (void *)a1 + 2, (void *)a2 - 2, a3);
      return 1;
    case 4:
      sub_10009F2B8(a1, (void *)a1 + 2, (void *)a1 + 4, (void *)a2 - 2, a3);
      return 1;
    case 5:
      sub_10009F374(a1, (void *)a1 + 2, (void *)a1 + 4, (void *)a1 + 6, (void *)a2 - 2, a3);
      return 1;
    default:
      uint64_t v10 = a1 + 32;
      sub_10009ED70(a1, (void *)a1 + 2, (void *)a1 + 4, a3);
      uint64_t v11 = a1 + 48;
      if (a1 + 48 == a2) {
        return 1;
      }
      uint64_t v12 = 0;
      int v13 = 0;
      break;
  }
  while (1)
  {
    if ((*a3)(*(void *)v11, *((void *)v11 + 1), *(void *)v10, *((void *)v10 + 1)))
    {
      uint64_t v14 = *(void *)v11;
      uint64_t v15 = *((void *)v11 + 1);
      uint64_t v16 = v12;
      while (1)
      {
        long long v17 = &a1[v16];
        *(_OWORD *)&a1[v16 + 48] = *(_OWORD *)&a1[v16 + 32];
        if (v16 == -32) {
          break;
        }
        v16 -= 16;
        if (((*a3)(v14, v15, *((void *)v17 + 2), *((void *)v17 + 3)) & 1) == 0)
        {
          uint64_t v18 = &a1[v16 + 48];
          goto LABEL_12;
        }
      }
      uint64_t v18 = a1;
LABEL_12:
      *(void *)uint64_t v18 = v14;
      *((void *)v18 + sub_1000333D0((uint64_t *)this + 1) = v15;
      if (++v13 == 8) {
        return v11 + 16 == a2;
      }
    }
    uint64_t v10 = v11;
    v12 += 16;
    v11 += 16;
    if (v11 == a2) {
      return 1;
    }
  }
}

__n128 sub_10009F2B8(void *a1, void *a2, void *a3, void *a4, uint64_t (**a5)(void, void, void, void))
{
  sub_10009ED70(a1, a2, a3, a5);
  if ((*a5)(*a4, a4[1], *a3, a3[1]))
  {
    long long v11 = *(_OWORD *)a3;
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(_OWORD *)a4 = v11;
    if ((*a5)(*a3, a3[1], *a2, a2[1]))
    {
      long long v12 = *(_OWORD *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)a3 = v12;
      if ((*a5)(*a2, a2[1], *a1, a1[1]))
      {
        __n128 result = *(__n128 *)a1;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(__n128 *)a2 = result;
      }
    }
  }
  return result;
}

__n128 sub_10009F374(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t (**a6)(void, void, void, void))
{
  __n128 v12 = sub_10009F2B8(a1, a2, a3, a4, a6);
  if (((unsigned int (*)(void, void, void, void, __n128))*a6)(*a5, a5[1], *a4, a4[1], v12))
  {
    long long v14 = *(_OWORD *)a4;
    *(_OWORD *)a4 = *(_OWORD *)a5;
    *(_OWORD *)a5 = v14;
    if ((*a6)(*a4, a4[1], *a3, a3[1]))
    {
      long long v15 = *(_OWORD *)a3;
      *(_OWORD *)a3 = *(_OWORD *)a4;
      *(_OWORD *)a4 = v15;
      if ((*a6)(*a3, a3[1], *a2, a2[1]))
      {
        long long v16 = *(_OWORD *)a2;
        *(_OWORD *)a2 = *(_OWORD *)a3;
        *(_OWORD *)a3 = v16;
        if ((*a6)(*a2, a2[1], *a1, a1[1]))
        {
          __n128 result = *(__n128 *)a1;
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *(__n128 *)a2 = result;
        }
      }
    }
  }
  return result;
}

char *sub_10009F458(char *a1, char *a2, char *a3, uint64_t (**a4)(void, void, uint64_t, uint64_t))
{
  if (a1 != a2)
  {
    uint64_t v8 = a2 - a1;
    uint64_t v9 = (a2 - a1) >> 4;
    if (a2 - a1 >= 17)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      __n128 v12 = &a1[16 * v10];
      do
      {
        sub_10009F5C4((uint64_t)a1, (unsigned int (**)(void, void, void, void))a4, v9, v12);
        v12 -= 16;
        --v11;
      }
      while (v11);
    }
    int v13 = a2;
    if (a2 != a3)
    {
      long long v14 = a2;
      do
      {
        if ((*a4)(*(void *)v14, *((void *)v14 + 1), *(void *)a1, *((void *)a1 + 1)))
        {
          long long v15 = *(_OWORD *)v14;
          *(_OWORD *)long long v14 = *(_OWORD *)a1;
          *(_OWORD *)a1 = v15;
          sub_10009F5C4((uint64_t)a1, (unsigned int (**)(void, void, void, void))a4, v9, a1);
        }
        v14 += 16;
      }
      while (v14 != a3);
      int v13 = a3;
    }
    if (v8 >= 17)
    {
      uint64_t v16 = (unint64_t)v8 >> 4;
      long long v17 = a2 - 16;
      do
      {
        long long v21 = *(_OWORD *)a1;
        uint64_t v18 = (char *)sub_10009F708(a1, (unsigned int (**)(void, void, void, void))a4, v16);
        if (v17 == v18)
        {
          *(_OWORD *)uint64_t v18 = v21;
        }
        else
        {
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v17;
          *(_OWORD *)long long v17 = v21;
          sub_10009F7BC((uint64_t)a1, (uint64_t)(v18 + 16), a4, (v18 + 16 - a1) >> 4);
        }
        v17 -= 16;
      }
      while (v16-- > 2);
    }
    return v13;
  }
  return a3;
}

uint64_t sub_10009F5C4(uint64_t result, unsigned int (**a2)(void, void, void, void), uint64_t a3, void *a4)
{
  unint64_t v4 = a3 - 2;
  if (a3 >= 2)
  {
    char v5 = a4;
    uint64_t v6 = result;
    int64_t v17 = v4 >> 1;
    if ((uint64_t)(v4 >> 1) >= ((uint64_t)a4 - result) >> 4)
    {
      uint64_t v9 = ((uint64_t)a4 - result) >> 3;
      uint64_t v10 = v9 + 1;
      unint64_t v11 = (void *)(result + 16 * (v9 + 1));
      uint64_t v12 = v9 + 2;
      if (v9 + 2 < a3 && (*a2)(*v11, v11[1], v11[2], v11[3]))
      {
        v11 += 2;
        uint64_t v10 = v12;
      }
      __n128 result = ((uint64_t (*)(void, void, void, void))*a2)(*v11, v11[1], *v5, v5[1]);
      if ((result & 1) == 0)
      {
        uint64_t v13 = *v5;
        uint64_t v14 = v5[1];
        do
        {
          long long v15 = v11;
          *(_OWORD *)char v5 = *(_OWORD *)v11;
          if (v17 < v10) {
            break;
          }
          uint64_t v16 = (2 * v10) | 1;
          unint64_t v11 = (void *)(v6 + 16 * v16);
          if (2 * v10 + 2 < a3)
          {
            if ((*a2)(*v11, v11[1], v11[2], v11[3]))
            {
              v11 += 2;
              uint64_t v16 = 2 * v10 + 2;
            }
          }
          __n128 result = ((uint64_t (*)(void, void, uint64_t, uint64_t))*a2)(*v11, v11[1], v13, v14);
          char v5 = v15;
          uint64_t v10 = v16;
        }
        while (!result);
        *long long v15 = v13;
        v15[1] = v14;
      }
    }
  }
  return result;
}

_OWORD *sub_10009F708(_OWORD *a1, unsigned int (**a2)(void, void, void, void), uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = &a1[v6 + 1];
    uint64_t v10 = (2 * v6) | 1;
    uint64_t v11 = 2 * v6 + 2;
    if (v11 < a3
      && (*a2)(*(void *)&a1[v6 + 1], *((void *)&a1[v6 + 1] + 1), *(void *)&a1[v6 + 2], *((void *)&a1[v6 + 2] + 1)))
    {
      ++v9;
      uint64_t v10 = v11;
    }
    *a1 = *v9;
    a1 = v9;
    uint64_t v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

uint64_t sub_10009F7BC(uint64_t result, uint64_t a2, uint64_t (**a3)(void, void, uint64_t, uint64_t), uint64_t a4)
{
  unint64_t v4 = a4 - 2;
  if (a4 >= 2)
  {
    uint64_t v7 = result;
    unint64_t v8 = v4 >> 1;
    uint64_t v9 = (void *)(result + 16 * (v4 >> 1));
    uint64_t v10 = (_OWORD *)(a2 - 16);
    __n128 result = (*a3)(*v9, v9[1], *(void *)(a2 - 16), *(void *)(a2 - 8));
    if (result)
    {
      uint64_t v11 = *(void *)(a2 - 16);
      uint64_t v12 = *(void *)(a2 - 8);
      do
      {
        uint64_t v13 = v9;
        _OWORD *v10 = *(_OWORD *)v9;
        if (!v8) {
          break;
        }
        unint64_t v8 = (v8 - 1) >> 1;
        uint64_t v9 = (void *)(v7 + 16 * v8);
        __n128 result = (*a3)(*v9, v9[1], v11, v12);
        uint64_t v10 = v13;
      }
      while ((result & 1) != 0);
      *uint64_t v13 = v11;
      v13[1] = v12;
    }
  }
  return result;
}

FILE *SFUFileOpen(void *a1, const char *a2)
{
  unint64_t v3 = fopen((const char *)[a1 fileSystemRepresentation], a2);
  if (!v3) {
    +[NSException sfu_errnoRaise:@"SFUFileOpenError", @"Could not open %@", a1 format];
  }
  return v3;
}

uint64_t SFUOpen(void *a1, int a2, unsigned int a3)
{
  uint64_t v4 = open((const char *)[a1 fileSystemRepresentation], a2, a3);
  if (v4 == -1) {
    +[NSException sfu_errnoRaise:@"SFUOpenError", @"Could not open %@", a1 format];
  }
  return v4;
}

uint64_t SFUDup(uint64_t a1)
{
  uint64_t v2 = dup(a1);
  if (v2 == -1) {
    +[NSException sfu_errnoRaise:@"SFUDupError", @"Could not dup %d", a1 format];
  }
  return v2;
}

void sub_10009FBD0(void *a1)
{
}

void sub_10009FD38(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A148C(id a1)
{
  uint64_t v1 = objc_alloc_init(TSULogHelper);
  uint64_t v2 = qword_1001EB958;
  qword_1001EB958 = (uint64_t)v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A1694(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUPerformanceCat");
  uint64_t v2 = TSUPerformanceCat_log_t;
  TSUPerformanceCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A16D4(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUPerformanceCat");
  uint64_t v2 = TSUPerformanceCat_log_t;
  TSUPerformanceCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A19D4(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A1B7C(_Unwind_Exception *exception_object, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(exception_object);

    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

void sub_1000A1E40(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000A21B4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1000A26DC(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A28CC(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A2A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 128), 8);
  _Block_object_dispose((const void *)(v11 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1000A2AA8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v11 = a3;
  id v7 = a4;
  uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
  int v9 = *(unsigned __int8 *)(v8 + 24);
  if (v7 && *(unsigned char *)(v8 + 24))
  {
    *(unsigned char *)(v8 + 24) = 0;
    [*(id *)(a1 + 32) handleFailureWithHandler:*(void *)(a1 + 40) error:v7];
    int v9 = *(unsigned __int8 *)(*(void *)(*(void *)(a1 + 48) + 8) + 24);
  }
  if (v9)
  {
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    if (!*(_DWORD *)(v10 + 24))
    {
      if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
      {
        [*(id *)(a1 + 32) prepareBuffer];
        *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 0;
        uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = [*(id *)(a1 + 32) processData:v11 inflateResult:v10 + 24 CRC:*(void *)(*(void *)(a1 + 72)+ 8)+ 24 isDone:a2 handler:*(void *)(a1 + 40)];
    }
  }
}

void sub_1000A2DF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A2E08(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  id v8 = a2;
  if (HIDWORD(a5))
  {
    if (TSUDefaultCat_init_token != -1) {
      dispatch_once(&TSUDefaultCat_init_token, &stru_1001CDA70);
    }
    if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100168150();
    }
LABEL_41:
    uint64_t v11 = 0;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 0;
    goto LABEL_42;
  }
  uint64_t v9 = *(void *)(a1 + 32);
  if (!*(_DWORD *)(v9 + 64))
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CDA90);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_1001681C4();
    }
    uint64_t v30 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUZipInflateReadChannel processData:inflateResult:CRC:isDone:handler:]_block_invoke");
    id v31 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipInflateReadChannel.m"];
    +[TSUAssertionHandler handleFailureInFunction:v30 file:v31 lineNumber:132 isFatal:0 description:"Buffer should have been initialized."];

    +[TSUAssertionHandler logBacktraceThrottled];
    goto LABEL_41;
  }
  *(_DWORD *)(v9 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a5;
  *(void *)(*(void *)(a1 + 32) + 3sub_100072180((void *)this + 2) = a4;
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = 1;
  if (*(_DWORD *)(v10 + 40))
  {
    uint64_t v12 = (int **)(a1 + 56);
    while (1)
    {
      if (**v12)
      {
LABEL_43:
        uint64_t v11 = 1;
        goto LABEL_42;
      }
      int v13 = inflate((z_streamp)(v10 + 32), 0);
      **uint64_t v12 = v13;
      if ((v13 + 5) > 6 || ((1 << (v13 + 5)) & 0x61) == 0) {
        break;
      }
      int v15 = v13;
      uint64_t v10 = *(void *)(a1 + 32);
      if (v13 == 1 || !*(_DWORD *)(v10 + 64))
      {
        size_t v16 = *(void *)(v10 + 144);
        size_t v17 = v16 - *(unsigned int *)(v10 + 64);
        if (*(unsigned char *)(v10 + 28))
        {
          uint64_t v18 = *(unsigned int **)(a1 + 64);
          if (v18)
          {
            uLong v19 = *v18;
            uint64_t v20 = *(const Bytef **)(v10 + 152);
            if (HIDWORD(v17))
            {
              unsigned int v35 = +[TSUAssertionHandler _atomicIncrementAssertCount];
              if (TSUAssertCat_init_token != -1) {
                dispatch_once(&TSUAssertCat_init_token, &stru_1001CDAD0);
              }
              log = TSUAssertCat_log_t;
              if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR))
              {
                *(_DWORD *)buf = 67109890;
                unsigned int v38 = v35;
                __int16 v39 = 2082;
                __int16 v40 = "-[TSUZipInflateReadChannel processData:inflateResult:CRC:isDone:handler:]_block_invoke_2";
                __int16 v41 = 2082;
                __int16 v42 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipInflateReadChannel.m";
                __int16 v43 = 1024;
                int v44 = 156;
                _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Out-of-bounds type assignment was clamped to max", buf, 0x22u);
              }
              uint64_t v36 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUZipInflateReadChannel processData:inflateResult:CRC:isDone:handler:]_block_invoke");
              uint64_t v33 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipInflateReadChannel.m"];
              +[TSUAssertionHandler handleFailureInFunction:v36 file:v33 lineNumber:156 isFatal:0 description:"Out-of-bounds type assignment was clamped to max"];

              +[TSUAssertionHandler logBacktraceThrottled];
              uInt v21 = -1;
            }
            else
            {
              uInt v21 = v16 - *(_DWORD *)(v10 + 64);
            }
            **(_DWORD **)(a1 + 64) = crc32(v19, v20, v21);
            uint64_t v10 = *(void *)(a1 + 32);
            size_t v16 = *(void *)(v10 + 144);
          }
        }
        dispatch_data_t v22 = dispatch_data_create(*(const void **)(v10 + 152), v16, 0, _dispatch_data_destructor_free);
        dispatch_data_t v23 = v22;
        if (*(void *)(*(void *)(a1 + 32) + 144) == v17) {
          dispatch_data_t subrange = v22;
        }
        else {
          dispatch_data_t subrange = dispatch_data_create_subrange(v22, 0, v17);
        }
        dispatch_data_t v25 = subrange;
        (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
        *(void *)(*(void *)(a1 + 32) + 144) = 0;
        *(void *)(*(void *)(a1 + 32) + 15sub_100072180((void *)this + 2) = 0;
        uint64_t v26 = *(void *)(a1 + 32);
        size_t v27 = *(void *)(v26 + 16);
        BOOL v28 = v27 >= v17;
        size_t v29 = v27 - v17;
        if (!v28) {
          size_t v29 = 0;
        }
        *(void *)(v26 + 1sub_100072180((void *)this + 6) = v29;
        if (v15 != 1) {
          [*(id *)(a1 + 32) prepareBuffer];
        }

        uint64_t v10 = *(void *)(a1 + 32);
      }
      if (!*(_DWORD *)(v10 + 40)) {
        goto LABEL_43;
      }
    }
    if (TSUDefaultCat_init_token != -1) {
      dispatch_once(&TSUDefaultCat_init_token, &stru_1001CDAB0);
    }
    if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100168260();
    }
    goto LABEL_41;
  }
LABEL_42:

  return v11;
}

void sub_1000A3308(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A334C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A3390(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A33D4(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A3418(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A345C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t SFUHash(char *a1, uint64_t a2)
{
  return SFUHashWithSeed(a1, a2, 2166136261);
}

uint64_t SFUHashWithSeed(char *a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    do
    {
      unsigned int v4 = *a1++;
      a3 = (16777619 * a3) ^ v4;
      --a2;
    }
    while (a2);
  }
  else
  {
    int v5 = +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CDB58);
    }
    uint64_t v6 = TSUAssertCat_log_t;
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_1001682DC(v5, v6);
    }
    +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "unsigned int SFUHashWithSeed(const char *, size_t, unsigned int)"), +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUHash.m"], 25, 0, "SFUHash must have at least one byte of input.");
    +[TSUAssertionHandler logBacktraceThrottled];
  }
  return a3;
}

void sub_1000A3F34(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A41A0(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A41E4(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A44C8(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A450C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A473C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A4E0C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A4E50(uint64_t a1)
{
  long long v35 = 0u;
  long long v36 = 0u;
  long long v37 = 0u;
  long long v38 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v35 objects:v55 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v36;
    *(void *)&long long v4 = 138545154;
    long long v28 = v4;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v36 != v6) {
          objc_enumerationMutation(v2);
        }
        id v8 = *(void **)(*((void *)&v35 + 1) + 8 * (void)v7);
        uint64_t v9 = *(void **)(a1 + 40);
        id v34 = 0;
        unsigned int v10 = objc_msgSend(v9, "removeItemAtURL:error:", v8, &v34, v28);
        id v11 = v34;
        uint64_t v12 = v11;
        if (v10)
        {
          if (TSUDefaultCat_init_token != -1) {
            dispatch_once(&TSUDefaultCat_init_token, &stru_1001CDC38);
          }
          int v13 = TSUDefaultCat_log_t;
          if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR))
          {
            uint64_t v14 = *(void **)(a1 + 48);
            log = v13;
            int v15 = [v14 publicString];
            size_t v16 = [*(id *)(a1 + 48) privateString];
            uint64_t v17 = *(void *)(a1 + 56);
            uint64_t v18 = [v8 path];
            *(_DWORD *)buf = 138544130;
            __int16 v40 = v15;
            __int16 v41 = 2112;
            __int16 v42 = v16;
            __int16 v43 = 2114;
            uint64_t v44 = v17;
            __int16 v45 = 2112;
            id v46 = v18;
            uLong v19 = log;
            _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "%{public}@ %@ Removed item due to '%{public}@' at url '%@'", buf, 0x2Au);

LABEL_18:
          }
        }
        else if ((objc_msgSend(v11, "tsu_isNoSuchFileError") & 1) == 0)
        {
          if (TSUDefaultCat_init_token != -1) {
            dispatch_once(&TSUDefaultCat_init_token, &stru_1001CDC58);
          }
          uint64_t v20 = TSUDefaultCat_log_t;
          if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR))
          {
            uInt v21 = *(void **)(a1 + 48);
            loga = v20;
            id v31 = [v21 publicString];
            dispatch_data_t v22 = [*(id *)(a1 + 48) privateString];
            uint64_t v30 = *(void *)(a1 + 56);
            size_t v29 = [v8 path];
            dispatch_data_t v23 = (objc_class *)objc_opt_class();
            long long v24 = NSStringFromClass(v23);
            dispatch_data_t v25 = [v12 domain];
            id v26 = [v12 code];
            *(_DWORD *)buf = v28;
            __int16 v40 = v31;
            __int16 v41 = 2112;
            __int16 v42 = v22;
            __int16 v43 = 2114;
            uint64_t v44 = v30;
            __int16 v45 = 2112;
            id v46 = v29;
            __int16 v47 = 2114;
            __int16 v48 = v24;
            __int16 v49 = 2114;
            __int16 v50 = v25;
            __int16 v51 = 2048;
            id v52 = v26;
            __int16 v53 = 2112;
            __int16 v54 = v12;
            uLong v19 = loga;
            _os_log_error_impl((void *)&_mh_execute_header, loga, OS_LOG_TYPE_ERROR, "%{public}@ %@ Failed to remove item due to '%{public}@' at url '%@' after error: errorClass=%{public}@, domain=%{public}@, code=%zd (%@) ", buf, 0x52u);

            goto LABEL_18;
          }
        }

        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v27 = [v2 countByEnumeratingWithState:&v35 objects:v55 count:16];
      id v5 = v27;
    }
    while (v27);
  }
}

void sub_1000A51F0(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  id v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A5234(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  id v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

BOOL SFUEqualCryptoKeys(unint64_t a1, unint64_t a2)
{
  if (!(a1 | a2)) {
    return 1;
  }
  BOOL result = 0;
  BOOL v5 = a1 != 0;
  if (a2) {
    BOOL v6 = a1 != 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (a2) {
    BOOL v5 = 0;
  }
  if (!v5 && v6)
  {
    id v7 = [(id)a1 keyLength];
    return v7 == [(id)a2 keyLength]
        && memcmp([(id)a1 keyData], objc_msgSend((id)a2, "keyData"), (size_t)v7) == 0;
  }
  return result;
}

void sub_1000A5CB8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A5CE4(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A5D10(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A5D3C(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A5D68(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A6280(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A62AC(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A62D8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A65C8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A6C70(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A6C9C(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A6CC8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A6DD4(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A70F8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A724C(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A73B4(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A7904(_Unwind_Exception *exc_buf, int a2, ...)
{
  va_start(va, a2);
  if (!a2) {
    _Unwind_Resume(exc_buf);
  }
  if (a2 == 2)
  {
    id v2 = objc_begin_catch(exc_buf);
    if (TSUErrorCat_init_token != -1) {
      dispatch_once(&TSUErrorCat_init_token, &stru_1001CDEA0);
    }
    id v3 = TSUErrorCat_log_t;
    if (os_log_type_enabled((os_log_t)TSUErrorCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100168F80((uint64_t)[v2 reason], (uint8_t *)va, v3);
    }
    objc_end_catch();
  }
  else
  {
    objc_begin_catch(exc_buf);
  }
  JUMPOUT(0x1000A78B8);
}

void sub_1000A79F0(id a1)
{
  TSUErrorCat_log_t = TSULogCreateCategory("TSUErrorCat");
}

void sub_1000A806C(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1000A7FE8);
  }
  _Unwind_Resume(a1);
}

void sub_1000A80A4(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A80D0(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A84B0(_Unwind_Exception *exception_object)
{
  if (v1) {
    objc_end_catch();
  }
  _Unwind_Resume(exception_object);
}

void sub_1000A8DA8(id a1)
{
  TSUErrorCat_log_t = TSULogCreateCategory("TSUErrorCat");
}

void sub_1000A9044(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000A9490(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000A94B8(uint64_t result)
{
  uint64_t v1 = *(void *)(*(void *)(result + 40) + 8);
  if (!*(unsigned char *)(v1 + 24))
  {
    uint64_t v2 = result;
    BOOL result = *(void *)(result + 32);
    if (result)
    {
      BOOL result = (*(uint64_t (**)(void))(result + 16))();
      uint64_t v1 = *(void *)(*(void *)(v2 + 40) + 8);
    }
    *(unsigned char *)(v1 + 24) = 1;
  }
  return result;
}

uint64_t sub_1000A950C(uint64_t a1, uint64_t a2)
{
  close(*(_DWORD *)(a1 + 40));
  if (a2)
  {
    if (TSUDefaultCat_init_token != -1) {
      dispatch_once(&TSUDefaultCat_init_token, &stru_1001CDF68);
    }
    long long v4 = TSUDefaultCat_log_t;
    if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_1001691FC(v4, a2);
    }
  }
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  }
  return result;
}

void sub_1000A95B4(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A95F8(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_1000A9838(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    if (TSUDefaultCat_init_token != -1) {
      dispatch_once(&TSUDefaultCat_init_token, &stru_1001CDFD0);
    }
    long long v4 = TSUDefaultCat_log_t;
    if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_1001691FC(v4, a2);
    }
  }
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a2);
  }
  return result;
}

void sub_1000A98D8(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A9B44(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A9B88(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  if (a4)
  {
    BOOL v6 = +[NSError tsu_fileReadPOSIXErrorWithNumber:a4 userInfo:0];
  }
  else
  {
    BOOL v6 = 0;
  }
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1000A9E4C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000A9E90(void *a1, uint64_t a2, void *a3, int a4)
{
  size_t size = a3;
  unsigned int v10 = size;
  if (a4)
  {
    uint64_t v8 = a1[4];
    uint64_t v9 = +[NSError errorWithDomain:NSPOSIXErrorDomain code:a4 userInfo:0];
    (*(void (**)(uint64_t, uint64_t, void, void *))(v8 + 16))(v8, a2, 0, v9);
  }
  else
  {
    if (size) {
      size_t size = dispatch_data_get_size(size);
    }
    atomic_exchange((atomic_ullong *volatile)(*(void *)(a1[5] + 8) + 24), a1[6] - (void)size);
    (*(void (**)(void))(a1[4] + 16))();
  }
}

void sub_1000AA150(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

intptr_t sub_1000AA194(uint64_t a1)
{
  dispatch_fd_t descriptor = dispatch_io_get_descriptor(*(dispatch_io_t *)(*(void *)(a1 + 32) + 16));
  if (descriptor == -1)
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CE0E8);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100169448();
    }
    BOOL v5 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUFileIOChannel close]_block_invoke");
    BOOL v6 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUFileIOChannel.m"];
    +[TSUAssertionHandler handleFailureInFunction:v5 file:v6 lineNumber:276 isFatal:0 description:"Channel file descriptor is closed"];

    +[TSUAssertionHandler logBacktraceThrottled];
  }
  else if (fcntl(descriptor, 51, 0) == -1)
  {
    id v3 = +[NSError tsu_fileReadPOSIXErrorWithNumber:*__error() userInfo:0];
    if (TSUDefaultCat_init_token != -1) {
      dispatch_once(&TSUDefaultCat_init_token, &stru_1001CE0C8);
    }
    long long v4 = TSUDefaultCat_log_t;
    if (os_log_type_enabled((os_log_t)TSUDefaultCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_1001694D0(v4, v3);
    }
  }
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_1000AA350(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AA394(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AA508(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AA670(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AA83C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AA880(uint64_t a1)
{
  dispatch_fd_t descriptor = dispatch_io_get_descriptor(*(dispatch_io_t *)(*(void *)(a1 + 32) + 16));
  if (descriptor == -1)
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CE168);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_10016975C();
    }
    long long v4 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUFileIOChannel flushWithCompletion:]_block_invoke");
    BOOL v5 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUFileIOChannel.m"];
    +[TSUAssertionHandler handleFailureInFunction:v4 file:v5 lineNumber:315 isFatal:0 description:"Channel file descriptor is closed"];

    +[TSUAssertionHandler logBacktraceThrottled];
  }
  else if (fsync(descriptor) == -1)
  {
    id v3 = +[NSError tsu_fileReadPOSIXErrorWithNumber:*__error() userInfo:0];
    goto LABEL_10;
  }
  id v3 = 0;
LABEL_10:
  uint64_t v6 = *(void *)(a1 + 40);
  if (v6) {
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v3);
  }
}

void sub_1000AA9E8(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AABC4(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AAC08(void *a1)
{
  dispatch_fd_t descriptor = dispatch_io_get_descriptor(*(dispatch_io_t *)(a1[4] + 16));
  if (descriptor == -1)
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CE1A8);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_10016986C();
    }
    long long v4 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUFileIOChannel truncateToLength:completion:]_block_invoke");
    BOOL v5 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUFileIOChannel.m"];
    +[TSUAssertionHandler handleFailureInFunction:v4 file:v5 lineNumber:333 isFatal:0 description:"Channel is closed"];

    +[TSUAssertionHandler logBacktraceThrottled];
  }
  else if (ftruncate(descriptor, a1[6]) == -1)
  {
    id v3 = +[NSError tsu_fileReadPOSIXErrorWithNumber:*__error() userInfo:0];
    goto LABEL_10;
  }
  id v3 = 0;
LABEL_10:
  uint64_t v6 = a1[5];
  if (v6) {
    (*(void (**)(uint64_t, void *))(v6 + 16))(v6, v3);
  }
}

void sub_1000AAD74(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AB078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000AB0A0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return result;
}

void sub_1000AB0B0(uint64_t a1)
{
}

void sub_1000AB0B8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  uint64_t v7 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v8 = *(void **)(v7 + 40);
  *(void *)(v7 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v5;
  id v12 = v5;

  uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 8);
  unsigned int v10 = *(void **)(v9 + 40);
  *(void *)(v9 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v6;
  id v11 = v6;

  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void sub_1000AB52C(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AB864(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

BOOL TSUEncodedBlockInfoAreEqual(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  id v5 = [v3 encodedLength];
  if (v5 == [v4 encodedLength])
  {
    id v6 = [v3 decodedLength];
    BOOL v7 = v6 == [v4 decodedLength];
  }
  else
  {
    BOOL v7 = 0;
  }

  return v7;
}

TSUEncodedBlockInfoWithDecodedLengthInternal *TSUEncodedBlockInfoCreate(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    uint64_t v2 = [[TSUEncodedBlockInfoInternal alloc] initWithEncodedLength:a1];
  }
  else {
    uint64_t v2 = [[TSUEncodedBlockInfoWithDecodedLengthInternal alloc] initWithEncodedLength:a1 decodedLength:a2];
  }
  return v2;
}

void sub_1000ABEC0(id a1)
{
  uint64_t v1 = +[NSBundle bundleWithIdentifier:@"com.apple.iwork.iWorkQuickLookGenerator"];
  uint64_t v2 = (void *)qword_1001EB970;
  qword_1001EB970 = v1;

  if (!qword_1001EB970)
  {
    uint64_t v3 = +[NSBundle bundleForClass:NSClassFromString(@"iWorkQuickLookBundleClass")];
    uint64_t v4 = qword_1001EB970;
    qword_1001EB970 = v3;
    _objc_release_x1(v3, v4);
  }
}

BOOL sub_1000AC2B8(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  id v6 = a2;
  BOOL v7 = a4;
  if (a3 == 256 && [(NSString *)v6 isEqualToString:NSCocoaErrorDomain])
  {
    unsigned __int8 v8 = 1;
  }
  else
  {
    uint64_t v9 = [(NSDictionary *)v7 objectForKeyedSubscript:@"TSUIOErrorType"];
    unsigned __int8 v8 = [v9 isEqual:&off_1001D7020];
  }
  return v8;
}

BOOL sub_1000AC360(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  if (a3 == 259) {
    return -[NSString isEqualToString:](a2, "isEqualToString:", NSCocoaErrorDomain, a4);
  }
  else {
    return 0;
  }
}

BOOL sub_1000AC390(id a1, NSString *a2, int64_t a3, NSDictionary *a4)
{
  id v6 = a2;
  BOOL v7 = a4;
  if (a3 == 512 && [(NSString *)v6 isEqualToString:NSCocoaErrorDomain])
  {
    unsigned __int8 v8 = 1;
  }
  else
  {
    uint64_t v9 = [(NSDictionary *)v7 objectForKeyedSubscript:@"TSUIOErrorType"];
    unsigned __int8 v8 = [v9 isEqual:&off_1001D7038];
  }
  return v8;
}

id sub_1000AC5E8(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) entriesCountImpl];
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = result;
  return result;
}

void sub_1000AC804(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000AC820(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AC864(uint64_t a1)
{
  id WeakRetained = (dispatch_semaphore_t *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    uint64_t v2 = WeakRetained;
    dispatch_semaphore_signal(WeakRetained[4]);
    id WeakRetained = v2;
  }
}

id sub_1000AC99C(uint64_t a1)
{
  return [*(id *)(a1 + 32) beginEntryWithNameImpl:*(void *)(a1 + 40) force32BitSize:*(unsigned __int8 *)(a1 + 68) lastModificationDate:*(void *)(a1 + 48) size:*(void *)(a1 + 56) CRC:*(unsigned int *)(a1 + 64) forceCalculatingSizeAndCRCForPreservingLastModificationDate:*(unsigned __int8 *)(a1 + 69)];
}

void sub_1000ACD78(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000ACDBC(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

id sub_1000ACEF0(uint64_t a1)
{
  return [*(id *)(a1 + 32) addDataImpl:*(void *)(a1 + 40) queue:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
}

void sub_1000AD288(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_1000AD2CC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

uint64_t sub_1000AD2E0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1000AD2F4(uint64_t a1, uint64_t a2, uint64_t a3, const Bytef *a4, unint64_t a5)
{
  unsigned int v8 = [*(id *)(*(void *)(a1 + 32) + 64) CRC];
  if (HIDWORD(a5))
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CE3D0);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100169C3C();
    }
    unsigned int v10 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUZipWriter addDataImpl:queue:completion:]_block_invoke");
    id v11 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipWriter.m"];
    +[TSUAssertionHandler handleFailureInFunction:v10 file:v11 lineNumber:274 isFatal:0 description:"Out-of-bounds type assignment was clamped to max"];

    +[TSUAssertionHandler logBacktraceThrottled];
    LODWORD(asub_100050800((void *)this + 5) = -1;
  }
  objc_msgSend(*(id *)(*(void *)(a1 + 32) + 64), "setCRC:", crc32(v8, a4, a5));
  return 1;
}

void sub_1000AD448(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AD654(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 72))
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CE3F0);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100169CC4();
    }
    TSUSetCrashReporterInfo((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Trying to flush while closed.", v10, v11, v12, v13, v14, v15, v16, (char)"-[TSUZipWriter flushCurrentEntryWithQueue:completion:]_block_invoke");
    uint64_t v17 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUZipWriter flushCurrentEntryWithQueue:completion:]_block_invoke");
    uint64_t v18 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipWriter.m"];
    +[TSUAssertionHandler handleFailureInFunction:v17 file:v18 lineNumber:292 isFatal:1 description:"Trying to flush while closed."];

    TSUCrashBreakpoint(v19);
    abort();
  }
  uint64_t v3 = *(void **)(v2 + 160);
  if (v3)
  {
    id v4 = v3;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000AD8D4;
    block[3] = &unk_1001CC350;
    id v5 = *(NSObject **)(a1 + 40);
    id v6 = *(id *)(a1 + 48);
    id v24 = v4;
    id v25 = v6;
    id v7 = v4;
    dispatch_async(v5, block);
  }
  else
  {
    [(id)v2 finishEntry];
    uint64_t v8 = *(void *)(a1 + 32);
    uint64_t v9 = *(NSObject **)(v8 + 16);
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    v20[2] = sub_1000AD8E8;
    v20[3] = &unk_1001CE440;
    v20[4] = v8;
    id v22 = *(id *)(a1 + 48);
    id v21 = *(id *)(a1 + 40);
    dispatch_async(v9, v20);
  }
}

void sub_1000AD890(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_1000AD8D4(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000AD8E8(uint64_t a1)
{
  dispatch_suspend(*(dispatch_object_t *)(*(void *)(a1 + 32) + 16));
  uint64_t v2 = objc_msgSend(*(id *)(a1 + 32), "p_writeChannel");
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000AD9AC;
  v6[3] = &unk_1001CE418;
  id v3 = *(id *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(a1 + 40);
  id v8 = v3;
  v6[4] = v4;
  id v7 = v5;
  [v2 flushWithCompletion:v6];
}

void sub_1000AD9AC(void *a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = v3;
  if (a1[6])
  {
    id v5 = v3;
    if (!v3) {
      id v5 = *(void **)(a1[4] + 160);
    }
    id v6 = v5;
    id v7 = (void (**)(void, void))a1[6];
    if (v7)
    {
      id v8 = a1[5];
      if (v8)
      {
        v9[0] = _NSConcreteStackBlock;
        v9[1] = 3221225472;
        v9[2] = sub_1000ADAAC;
        v9[3] = &unk_1001CC350;
        uint64_t v11 = v7;
        id v10 = v6;
        dispatch_async(v8, v9);
      }
      else
      {
        ((void (**)(void, id))v7)[2](v7, v6);
      }
    }
  }
  dispatch_resume(*(dispatch_object_t *)(a1[4] + 16));
}

uint64_t sub_1000ADAAC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000ADCA4(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000ADDD0(uint64_t a1, int a2, void *a3, void *a4)
{
  id v9 = a3;
  id v7 = a4;
  if (a2)
  {
    uint64_t v8 = *(void *)(a1 + 32);
    if (v8) {
      (*(void (**)(uint64_t, BOOL, id))(v8 + 16))(v8, v7 == 0, v7);
    }
  }
}

void sub_1000AE078(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AE0BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v1 + 72))
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CE4F0);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100169E34();
    }
    TSUSetCrashReporterInfo((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Already closed.", v4, v5, v6, v7, v8, v9, v10, (char)"-[TSUZipWriter writeEntryWithName:force32BitSize:lastModificationDate:size:CRC:fromReadChannel:writeHandler:]_block_invoke");
    uint64_t v11 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUZipWriter writeEntryWithName:force32BitSize:lastModificationDate:size:CRC:fromReadChannel:writeHandler:]_block_invoke");
    uint64_t v12 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipWriter.m"];
    +[TSUAssertionHandler handleFailureInFunction:v11 file:v12 lineNumber:368 isFatal:1 description:"Already closed."];

    TSUCrashBreakpoint(v13);
    abort();
  }
  dispatch_suspend(*(dispatch_object_t *)(v1 + 144));
  [*(id *)(a1 + 32) beginEntryWithNameImpl:*(void *)(a1 + 40) force32BitSize:*(unsigned __int8 *)(a1 + 84) lastModificationDate:*(void *)(a1 + 48) size:*(void *)(a1 + 72) CRC:*(unsigned int *)(a1 + 80) forceCalculatingSizeAndCRCForPreservingLastModificationDate:0];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_1000AE2B8;
  v14[3] = &unk_1001CE518;
  void v14[4] = *(void *)(a1 + 32);
  id v3 = *(void **)(a1 + 56);
  id v15 = *(id *)(a1 + 64);
  [v3 readWithHandler:v14];
}

void sub_1000AE274(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AE2B8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v7 = a3;
  [*(id *)(a1 + 32) handleWriteError:a4];
  if (v7)
  {
    uint64_t v8 = *(void **)(a1 + 32);
    if (!v8[20]) {
      [v8 addDataImpl:v7 queue:0 completion:0];
    }
  }
  uint64_t v9 = *(void *)(a1 + 40);
  if (v9)
  {
    char v12 = 0;
    (*(void (**)(uint64_t, uint64_t, id, void, char *))(v9 + 16))(v9, a2, v7, *(void *)(*(void *)(a1 + 32) + 160), &v12);
    if (v12)
    {
      uint64_t v10 = *(void **)(a1 + 32);
      uint64_t v11 = +[NSError errorWithDomain:NSCocoaErrorDomain code:3072 userInfo:0];
      [v10 handleWriteError:v11];
    }
  }
  if (a2) {
    dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 32) + 144));
  }
}

id sub_1000AE47C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) addExistingEntryImpl:*(void *)(a1 + 40)];
}

id sub_1000AE630(uint64_t a1)
{
  return [*(id *)(a1 + 32) setEntryInsertionOffsetImpl:*(void *)(a1 + 40)];
}

void sub_1000AE6F0(uint64_t a1)
{
  dispatch_suspend(*(dispatch_object_t *)(*(void *)(a1 + 32) + 144));
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(NSObject **)(v2 + 16);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000AE794;
  v4[3] = &unk_1001C59F0;
  v4[4] = v2;
  id v5 = *(id *)(a1 + 40);
  dispatch_async(v3, v4);
}

void sub_1000AE794(uint64_t a1)
{
  dispatch_suspend(*(dispatch_object_t *)(*(void *)(a1 + 32) + 16));
  uint64_t v2 = objc_msgSend(*(id *)(a1 + 32), "p_writeChannel");
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1000AE844;
  v4[3] = &unk_1001CC350;
  id v3 = *(id *)(a1 + 40);
  v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  [v2 addBarrier:v4];
}

void sub_1000AE844(uint64_t a1)
{
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
  dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 32) + 16));
  uint64_t v2 = *(NSObject **)(*(void *)(a1 + 32) + 144);
  dispatch_resume(v2);
}

void sub_1000AE95C(id *a1)
{
  uint64_t v2 = a1[4];
  if (v2[72])
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CE560);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100169EBC();
    }
    TSUSetCrashReporterInfo((uint64_t)"Fatal Assertion failure: %{public}s %{public}s:%d Shouldn't have closed twice.", v9, v10, v11, v12, v13, v14, v15, (char)"-[TSUZipWriter closeWithQueue:completion:]_block_invoke");
    uint64_t v16 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUZipWriter closeWithQueue:completion:]_block_invoke");
    uint64_t v17 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipWriter.m"];
    +[TSUAssertionHandler handleFailureInFunction:v16 file:v17 lineNumber:461 isFatal:1 description:"Shouldn't have closed twice."];

    TSUCrashBreakpoint(v18);
    abort();
  }
  if (*((void *)v2 + 20))
  {
    v2[72] = 1;
    id v3 = *((id *)a1[4] + 20);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1000AEC00;
    block[3] = &unk_1001CC350;
    uint64_t v4 = a1[5];
    id v5 = a1[6];
    id v23 = v3;
    id v24 = v5;
    id v6 = v3;
    dispatch_async(v4, block);
  }
  else
  {
    [v2 finishEntry];
    [a1[4] writeCentralDirectory];
    *((unsigned char *)a1[4] + 7sub_100072180((void *)this + 2) = 1;
    id v7 = a1[4];
    uint64_t v8 = *((void *)v7 + 2);
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 3221225472;
    v19[2] = sub_1000AEC14;
    v19[3] = &unk_1001CE440;
    void v19[4] = v7;
    id v21 = a1[6];
    id v20 = a1[5];
    dispatch_async(v8, v19);
  }
}

void sub_1000AEBBC(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_1000AEC00(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000AEC14(id *a1)
{
  dispatch_suspend(*((dispatch_object_t *)a1[4] + 2));
  uint64_t v2 = objc_msgSend(a1[4], "p_writeChannel");
  objc_initWeak(&location, v2);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1000AED2C;
  v3[3] = &unk_1001CE5D0;
  objc_copyWeak(&v6, &location);
  v3[4] = a1[4];
  id v5 = a1[6];
  id v4 = a1[5];
  [v2 addBarrier:v3];

  objc_destroyWeak(&v6);
  objc_destroyWeak(&location);
}

void sub_1000AED10(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1000AED2C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!WeakRetained)
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CE580);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_100169F44();
    }
    id v3 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUZipWriter closeWithQueue:completion:]_block_invoke");
    id v4 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUZipWriter.m"];
    +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v3, v4, 492, 0, "invalid nil value for '%{public}s'", "strongWriteChannel");

    +[TSUAssertionHandler logBacktraceThrottled];
  }
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = *(NSObject **)(v5 + 144);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1000AEF2C;
  block[3] = &unk_1001CE5A8;
  id v9 = WeakRetained;
  uint64_t v10 = v5;
  id v12 = *(id *)(a1 + 48);
  id v11 = *(id *)(a1 + 40);
  id v7 = WeakRetained;
  dispatch_async(v6, block);
}

void sub_1000AEEE8(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AEF2C(uint64_t a1)
{
  [*(id *)(a1 + 32) close];
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(*(void *)(a1 + 40) + 32), 0xFFFFFFFFFFFFFFFFLL);
  if (*(void *)(a1 + 56))
  {
    id v2 = *(id *)(*(void *)(a1 + 40) + 160);
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1000AF010;
    v6[3] = &unk_1001CC350;
    id v3 = *(NSObject **)(a1 + 48);
    id v4 = *(id *)(a1 + 56);
    id v7 = v2;
    id v8 = v4;
    id v5 = v2;
    dispatch_async(v3, v6);
  }
  dispatch_resume(*(dispatch_object_t *)(*(void *)(a1 + 40) + 16));
}

uint64_t sub_1000AF010(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000AF3A8(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  id v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AF6C0(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  id v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000AFA98(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void (***)(void, void))(a1 + 40);
  if (v4)
  {
    id v5 = *(NSObject **)(a1 + 32);
    if (v5)
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_1000AFB60;
      v6[3] = &unk_1001CC350;
      id v8 = v4;
      id v7 = v3;
      dispatch_async(v5, v6);
    }
    else
    {
      ((void (**)(void, id))v4)[2](v4, v3);
    }
  }
}

uint64_t sub_1000AFB60(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1000AFC44(uint64_t a1)
{
  dispatch_suspend(*(dispatch_object_t *)(*(void *)(a1 + 32) + 16));
  v9[0] = 0;
  v9[1] = v9;
  v9[2] = 0x3032000000;
  v9[3] = sub_1000AFD7C;
  void v9[4] = sub_1000AFD8C;
  id v10 = 0;
  id v2 = objc_msgSend(*(id *)(a1 + 32), "p_writeChannel");
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1000AFD94;
  v6[3] = &unk_1001CE660;
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v8 = v9;
  void v6[4] = v3;
  uint64_t v5 = *(void *)(a1 + 56);
  id v7 = *(id *)(a1 + 48);
  [v2 writeData:v4 offset:v5 handler:v6];

  _Block_object_dispose(v9, 8);
}

void sub_1000AFD64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000AFD7C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return result;
}

void sub_1000AFD8C(uint64_t a1)
{
}

void sub_1000AFD94(void *a1, int a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  if (v7 && (v8 = *(void *)(a1[6] + 8), v10 = *(void *)(v8 + 40), id v9 = (id *)(v8 + 40), !v10))
  {
    objc_storeStrong(v9, a4);
    if (!a2) {
      goto LABEL_11;
    }
  }
  else if (!a2)
  {
    goto LABEL_11;
  }
  uint64_t v11 = a1[6];
  if (*(void *)(*(void *)(v11 + 8) + 40))
  {
    uint64_t v12 = a1[4];
    uint64_t v13 = *(NSObject **)(v12 + 144);
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_1000AFE94;
    v15[3] = &unk_1001CC5E8;
    void v15[4] = v12;
    void v15[5] = v11;
    dispatch_async(v13, v15);
  }
  uint64_t v14 = a1[5];
  if (v14) {
    (*(void (**)(uint64_t, void))(v14 + 16))(v14, *(void *)(*(void *)(a1[6] + 8) + 40));
  }
  dispatch_resume(*(dispatch_object_t *)(a1[4] + 16));
LABEL_11:
}

id sub_1000AFE94(uint64_t a1)
{
  return [*(id *)(a1 + 32) handleWriteError:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

void sub_1000B00C8(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUAssertCat");
  id v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

uint64_t sub_1000B01B8(uint64_t result)
{
  *(void *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 112);
  return result;
}

void sub_1000B0314(id a1)
{
  uint64_t v1 = TSULogCreateCategory("TSUDefaultCat");
  id v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B0358(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "p_writeChannel");
  id v1 = (id)objc_claimAutoreleasedReturnValue();
  [v1 close];
}

void sub_1000B0434(uint64_t a1)
{
  unsigned __int8 v16 = 0;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 40);
  id v3 = [v2 countByEnumeratingWithState:&v12 objects:v17 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v13;
LABEL_3:
    uint64_t v6 = 0;
    while (1)
    {
      if (*(void *)v13 != v5) {
        objc_enumerationMutation(v2);
      }
      id v7 = *(void **)(*((void *)&v12 + 1) + 8 * v6);
      uint64_t v8 = objc_alloc_init(TSUZipEntry);
      id v9 = objc_msgSend(v7, "name", (void)v12);
      [(TSUZipEntry *)v8 setName:v9];

      id v10 = [(TSUZipEntry *)v8 name];
      -[TSUZipEntry setNameLength:](v8, "setNameLength:", (unsigned __int16)strlen((const char *)[v10 UTF8String]));

      uint64_t v11 = [v7 lastModificationDate];
      [(TSUZipEntry *)v8 setLastModificationDate:v11];

      -[TSUZipEntry setSize:](v8, "setSize:", [v7 size]);
      -[TSUZipEntry setCompressedSize:](v8, "setCompressedSize:", [v7 size]);
      -[TSUZipEntry setOffset:](v8, "setOffset:", [v7 offset]);
      -[TSUZipEntry setCRC:](v8, "setCRC:", [v7 CRC]);
      (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
      LODWORD(v7) = v16;

      if (v7) {
        break;
      }
      if (v4 == (id)++v6)
      {
        id v4 = [v2 countByEnumeratingWithState:&v12 objects:v17 count:16];
        if (v4) {
          goto LABEL_3;
        }
        break;
      }
    }
  }
}

int64_t sub_1000B0684(id a1, TSUZipWriterEntry *a2, TSUZipWriterEntry *a3)
{
  id v4 = a3;
  unint64_t v5 = [(TSUZipWriterEntry *)a2 offset];
  unint64_t v6 = [(TSUZipWriterEntry *)v4 offset];

  if (v5 < v6) {
    return -1;
  }
  else {
    return v5 > v6;
  }
}

uint64_t sub_1000B07CC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) sortedEntriesImpl];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v2;
  return _objc_release_x1(v2, v4);
}

uint64_t sub_1000B08C4(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(unsigned char *)(*(void *)(result + 32) + 72);
  return result;
}

uint64_t sub_1000B09E8(void *a1)
{
  uint64_t v2 = [*(id *)(a1[4] + 56) objectForKeyedSubscript:a1[5]];
  uint64_t v3 = *(void *)(a1[6] + 8);
  uint64_t v4 = *(void *)(v3 + 40);
  *(void *)(v3 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v2;
  return _objc_release_x1(v2, v4);
}

id sub_1000B0AE0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) truncateToNumberOfEntriesImpl:*(void *)(a1 + 48) completion:*(void *)(a1 + 40)];
}

id sub_1000B0CE4(uint64_t a1)
{
  return [*(id *)(a1 + 32) truncateToOffsetImpl:*(void *)(a1 + 48) completion:*(void *)(a1 + 40)];
}

void sub_1000B0F14(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B1564(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B1774(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B17A0(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B1A9C(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B1BAC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B1C20(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B1C9C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B1DEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B1E18(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  id result = objc_msgSend(*(id *)(a1 + 32), "intersectsIndexesInRange:", a2, a3);
  if (result)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a4 = 1;
  }
  return result;
}

void sub_1000B1F0C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B2068(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000B2088(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return result;
}

void sub_1000B2098(uint64_t a1)
{
}

id sub_1000B20A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), "addIndexesInRange:", a2, a3);
}

void sub_1000B22B0(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v2 - 80), 8);

  _Unwind_Resume(a1);
}

id sub_1000B22F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000B2370;
  v5[3] = &unk_1001CE7F8;
  uint64_t v3 = *(void **)(a1 + 32);
  v5[4] = *(void *)(a1 + 40);
  return objc_msgSend(v3, "enumerateRangesInRange:options:usingBlock:", a2, a3, 0, v5);
}

id sub_1000B2370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), "addIndexesInRange:", a2, a3);
}

id sub_1000B2388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1000B2408;
  v5[3] = &unk_1001CE7F8;
  uint64_t v3 = *(void **)(a1 + 32);
  v5[4] = *(void *)(a1 + 40);
  return objc_msgSend(v3, "enumerateRangesInRange:options:usingBlock:", a2, a3, 0, v5);
}

id sub_1000B2408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), "addIndexesInRange:", a2, a3);
}

void sub_1000B2480(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B24FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B2604(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void *sub_1000B2630(void *result, uint64_t a2, unsigned char *a3)
{
  uint64_t v3 = *(void *)(result[4] + 8);
  uint64_t v4 = *(void *)(v3 + 24);
  *(void *)(v3 + 24) = v4 + 1;
  if (v4 == result[6])
  {
    *(void *)(*(void *)(result[5] + 8) + 24) = a2;
    *a3 = 1;
  }
  return result;
}

void sub_1000B2740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000B2758(uint64_t result, uint64_t a2, unsigned char *a3)
{
  if (*(void *)(result + 40) == a2) {
    *a3 = 1;
  }
  else {
    ++*(void *)(*(void *)(*(void *)(result + 32) + 8) + 24);
  }
  return result;
}

void sub_1000B2840(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1000B2864(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  ++*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24);
  return result;
}

void sub_1000B29AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__n128 sub_1000B29C4(__n128 *a1, __n128 *a2)
{
  __n128 result = a2[3];
  a1[3] = result;
  return result;
}

NSUInteger sub_1000B29D4(uint64_t a1, NSRange range2, unsigned char *a3)
{
  NSUInteger length = range2.length;
  v4.locatioint n = range2.location;
  NSRange v6 = *(NSRange *)(*(void *)(*(void *)(a1 + 32) + 8) + 48);
  if (v6.length + v6.location == v4.location || v4.location + length == v6.location)
  {
    v4.NSUInteger length = length;
    NSRange v6 = NSUnionRange(v6, v4);
    *(NSRange *)(*(void *)(*(void *)(a1 + 32) + 8) + 48) = v6;
  }
  else
  {
    *a3 = 1;
  }
  return v6.location;
}

void sub_1000B2B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

NSUInteger sub_1000B2B4C(uint64_t a1, NSRange range2, unsigned char *a3)
{
  NSUInteger length = range2.length;
  v4.locatioint n = range2.location;
  NSRange v6 = *(NSRange *)(*(void *)(*(void *)(a1 + 32) + 8) + 48);
  if (v6.length + v6.location == v4.location || v4.location + length == v6.location)
  {
    v4.NSUInteger length = length;
    NSRange v6 = NSUnionRange(v6, v4);
    *(NSRange *)(*(void *)(*(void *)(a1 + 32) + 8) + 48) = v6;
  }
  else
  {
    *a3 = 1;
  }
  return v6.location;
}

void sub_1000B2C7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, ...)
{
  va_start(va, a7);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B2CA0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  NSRange v6 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_1000B2D50;
  v8[3] = &unk_1001CE898;
  v8[4] = *(void *)(a1 + 40);
  id result = objc_msgSend(v6, "enumerateIndexesInRange:options:usingBlock:", a2, a3, 0, v8);
  if (*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) != 0x7FFFFFFFFFFFFFFFLL) {
    *a4 = 1;
  }
  return result;
}

uint64_t sub_1000B2D50(uint64_t result, uint64_t a2, unsigned char *a3)
{
  *(void *)(*(void *)(*(void *)(result + 32) + 8) + 24) = a2;
  *a3 = 1;
  return result;
}

void sub_1000B2E28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1000B2E44(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 < 3)
  {
    id v10 = *(void **)(a1 + 32);
    uint64_t v11 = +[NSString localizedStringWithFormat:@"%lu", a2 + 1];
    [v10 addObject:v11];
    if (a3 == 2)
    {

      long long v12 = *(void **)(a1 + 32);
      uint64_t v11 = +[NSString localizedStringWithFormat:@"%lu", a2 + 2];
      [v12 addObject:v11];
    }
    uint64_t v9 = v11;
  }
  else
  {
    NSRange v6 = SFUMainBundle();
    uint64_t v13 = [v6 localizedStringForKey:@"TSU_UNSIGNED_INTEGER_RANGE" value:@"%1$lu to %2$lu" table:@"TSUtility"];

    id v7 = *(void **)(a1 + 32);
    uint64_t v8 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v13, a2 + 1, a2 + a3);
    [v7 addObject:v8];

    uint64_t v9 = (void *)v13;
  }
}

void sub_1000B2F94(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B32E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B3330(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B3374(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B3480(id a1)
{
  id v1 = +[NSProcessInfo processInfo];
  unint64_t v2 = 2 * (void)[v1 processorCount];

  uint64_t v3 = 16;
  if (v2 > 0x10) {
    uint64_t v3 = v2;
  }
  qword_1001EB980 = v3;
}

void sub_1000B34D0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1000B3708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);

  _Block_object_dispose(va, 8);
  *(void *)(v18 - 9sub_100072180((void *)this + 6) = v15;
  sub_1000B3FC8((void ***)(v18 - 96));

  _Unwind_Resume(a1);
}

__n128 sub_1000B3774(__n128 *a1, __n128 *a2)
{
  a1[3].n128_u64[0] = 0;
  a1[3].n128_u64[1] = 0;
  a1[4].n128_u64[0] = 0;
  __n128 result = a2[3];
  a1[3] = result;
  a1[4].n128_u64[0] = a2[4].n128_u64[0];
  a2[3].n128_u64[0] = 0;
  a2[3].n128_u64[1] = 0;
  a2[4].n128_u64[0] = 0;
  return result;
}

void sub_1000B3798(uint64_t a1)
{
  id v1 = (void **)(a1 + 48);
  sub_1000B3FC8(&v1);
}

void sub_1000B37C4(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = (v3 - *(void *)a1) >> 3;
  if (a2 <= v4)
  {
    if (a2 < v4)
    {
      uint64_t v6 = *(void *)a1 + 8 * a2;
      while (v3 != v6)
      {
        id v7 = *(void **)(v3 - 8);
        v3 -= 8;
      }
      *(void *)(a1 + 8) = v6;
    }
  }
  else
  {
    unint64_t v5 = a2 - v4;
    sub_1000B4048((char **)a1, v5);
  }
}

void sub_1000B384C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 64) + v4 * a2;
  if (objc_msgSend(*(id *)(a1 + 32), "intersectsIndexesInRange:", v5, v4))
  {
    uint64_t v6 = (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
    id v7 = *(void **)(a1 + 32);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    v11[2] = sub_1000B3984;
    v11[3] = &unk_1001CE948;
    id v13 = *(id *)(a1 + 48);
    id v8 = v6;
    id v12 = v8;
    objc_msgSend(v7, "enumerateRangesInRange:options:usingBlock:", v5, v4, 0, v11);
  }
  else
  {
    id v8 = 0;
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 48);
  id v10 = *(void **)(v9 + 8 * a2);
  *(void *)(v9 + 8 * asub_100072180((void *)this + 2) = v8;
}

void sub_1000B3964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

uint64_t sub_1000B3984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), a2, a3, *(void *)(a1 + 32));
}

void sub_1000B3A3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_1000B3A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id result = [*(id *)(a1 + 32) indexGreaterThanIndex:a2 + a3];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    uint64_t v5 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);
    return (id)v5();
  }
  return result;
}

void sub_1000B3B78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

id sub_1000B3B90(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  unint64_t v6 = a2 + a3;
  id result = [*(id *)(a1 + 32) indexGreaterThanIndex:a2 + a3];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL && v6 < (unint64_t)result)
  {
    unint64_t v9 = (unint64_t)result;
    do
    {
      while (1)
      {
        id result = (id)(*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
        if (a4) {
          break;
        }
        if (++v6 >= v9) {
          return result;
        }
      }
      ++v6;
      if (*a4) {
        BOOL v10 = 1;
      }
      else {
        BOOL v10 = v6 >= v9;
      }
    }
    while (!v10);
  }
  return result;
}

void sub_1000B3D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id a20)
{
  _Unwind_Resume(a1);
}

id sub_1000B3D50(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2 + a3;
  unint64_t v4 = *(void *)(a1 + 40);
  unint64_t v5 = a2 - v4;
  if (a2 < v4) {
    unint64_t v5 = 0;
  }
  BOOL v6 = __CFADD__(v3, v4);
  unint64_t v7 = v3 + v4;
  if (v6) {
    unint64_t v7 = -1;
  }
  if (v5 <= v7) {
    unint64_t v8 = v7;
  }
  else {
    unint64_t v8 = v5;
  }
  if (v5 >= v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = v5;
  }
  return _objc_msgSend(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40), "addIndexesInRange:", v9, v8 - v9);
}

void sub_1000B3EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

id sub_1000B3ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _objc_msgSend(*(id *)(a1 + 32), "addIndexesInRange:", a2 - *(void *)(a1 + 40) + *(void *)(a1 + 56), a3);
}

void sub_1000B3FA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1000B3FC8(void ***a1)
{
  id v1 = *a1;
  unint64_t v2 = (char *)**a1;
  if (v2)
  {
    unint64_t v4 = (char *)v1[1];
    unint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        BOOL v6 = (void *)*((void *)v4 - 1);
        v4 -= 8;
      }
      while (v4 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_1000B4048(char **a1, unint64_t a2)
{
  BOOL v6 = a1[2];
  uint64_t v4 = (uint64_t)(a1 + 2);
  unint64_t v5 = v6;
  unint64_t v7 = *(char **)(v4 - 8);
  if (a2 <= (v6 - v7) >> 3)
  {
    if (a2)
    {
      bzero(*(void **)(v4 - 8), 8 * a2);
      v7 += 8 * a2;
    }
    a1[1] = v7;
  }
  else
  {
    uint64_t v8 = v7 - *a1;
    unint64_t v9 = a2 + (v8 >> 3);
    if (v9 >> 61) {
      sub_100078F84();
    }
    uint64_t v10 = v8 >> 3;
    uint64_t v11 = v5 - *a1;
    if (v11 >> 2 > v9) {
      unint64_t v9 = v11 >> 2;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFF8) {
      unint64_t v12 = 0x1FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v9;
    }
    uint64_t v25 = v4;
    if (v12) {
      id v13 = (char *)sub_1000B4170(v4, v12);
    }
    else {
      id v13 = 0;
    }
    long long v14 = &v13[8 * v10];
    uint64_t v15 = &v13[8 * v12];
    id v24 = v15;
    bzero(v14, 8 * a2);
    unsigned __int8 v16 = &v14[8 * a2];
    v23.i64[1] = (uint64_t)v16;
    uint64_t v18 = *a1;
    uint64_t v17 = a1[1];
    if (v17 == *a1)
    {
      int64x2_t v20 = vdupq_n_s64((unint64_t)v17);
    }
    else
    {
      do
      {
        uint64_t v19 = *((void *)v17 - 1);
        v17 -= 8;
        *(void *)uint64_t v17 = 0;
        *((void *)v14 - sub_1000333D0((uint64_t *)this + 1) = v19;
        v14 -= 8;
      }
      while (v17 != v18);
      int64x2_t v20 = *(int64x2_t *)a1;
      unsigned __int8 v16 = (char *)v23.i64[1];
      uint64_t v15 = v24;
    }
    *a1 = v14;
    a1[1] = v16;
    int64x2_t v23 = v20;
    id v21 = a1[2];
    a1[2] = v15;
    id v24 = v21;
    uint64_t v22 = v20.i64[0];
    sub_1000B41A8((uint64_t)&v22);
  }
}

void *sub_1000B4170(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_100079064();
  }
  return operator new(8 * a2);
}

uint64_t sub_1000B41A8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 1sub_100072180((void *)this + 6) = i - 8;
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1000B439C(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B44FC(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

uint64_t TSUDynamicCast(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (objc_opt_isKindOfClass()) {
    return a2;
  }
  return 0;
}

void *TSUProtocolCast(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v9 = a1;
  id v13 = &a9;
  long long v14 = &a9;
  if (a1)
  {
    uint64_t v10 = a2;
    if (a2)
    {
      while (1)
      {
        uint64_t v11 = v14++;
        if ((objc_msgSend(v9, "conformsToProtocol:", *v11, v13) & 1) == 0) {
          break;
        }
        if (!--v10) {
          return v9;
        }
      }
      return 0;
    }
  }
  return v9;
}

uint64_t TSUCheckedDynamicCast(objc_class *a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (a2 && (objc_opt_isKindOfClass() & 1) == 0)
  {
    unsigned int v4 = +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CEA48);
    }
    unint64_t v5 = TSUAssertCat_log_t;
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = (objc_class *)objc_opt_class();
      *(_DWORD *)buf = 67110402;
      unsigned int v13 = v4;
      __int16 v14 = 2082;
      uint64_t v15 = "id TSUCheckedDynamicCast(Class, id<NSObject>)";
      __int16 v16 = 2082;
      uint64_t v17 = "/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUCast.m";
      __int16 v18 = 1024;
      int v19 = 160;
      __int16 v20 = 2114;
      id v21 = NSStringFromClass(v11);
      __int16 v22 = 2114;
      int64x2_t v23 = NSStringFromClass(a1);
      _os_log_error_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_ERROR, "#Assert *** Assertion failure #%u: %{public}s %{public}s:%d Unexpected object type %{public}@ in checked dynamic cast to %{public}@", buf, 0x36u);
    }
    BOOL v6 = +[NSString stringWithUTF8String:"id TSUCheckedDynamicCast(Class, id<NSObject>)"];
    unint64_t v7 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUCast.m"];
    uint64_t v8 = (objc_class *)objc_opt_class();
    unint64_t v9 = NSStringFromClass(v8);
    +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v6, v7, 160, 0, "Unexpected object type %{public}@ in checked dynamic cast to %{public}@", v9, NSStringFromClass(a1));
    +[TSUAssertionHandler logFullBacktrace];
    return 0;
  }
  return v2;
}

void sub_1000B487C(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B4A5C(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B4D98(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B5014(id a1)
{
  id v1 = TSULogCreateCategory("TSUDefaultCat");
  uint64_t v2 = TSUDefaultCat_log_t;
  TSUDefaultCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B5058(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B52A8(id a1)
{
  id v1 = SFUMainBundle();
  uint64_t v2 = [v1 bundleIdentifier];

  id v3 = objc_alloc((Class)NSString);
  if (v2) {
    CFStringRef v4 = v2;
  }
  else {
    CFStringRef v4 = @"com.apple.Unknown";
  }
  id v5 = [v3 initWithFormat:@"%@_%d", v4, getpid()];
  objc_storeStrong((id *)&qword_1001EB990, v5);
  if (!qword_1001EB990)
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CEB08);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_10016A734();
    }
    BOOL v6 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[TSUTemporaryDirectory _createDirectoryWithSignature:subdirectory:error:]_block_invoke");
    unint64_t v7 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/TSUTemporaryDirectory.m"];
    +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", v6, v7, 112, 0, "invalid nil value for '%{public}s'", "secretSubdirectoryNameBase");

    +[TSUAssertionHandler logBacktraceThrottled];
  }
}

void sub_1000B5430(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B5B6C(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B5D88(uint64_t a1, void *a2, void *a3, unsigned char *a4)
{
  id v7 = a2;
  id v8 = a3;
  if (([v8 conformsToProtocol:&OBJC_PROTOCOL___NSCopying] & 1) == 0)
  {
    int v9 = +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CEB48);
    }
    uint64_t v10 = TSUAssertCat_log_t;
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_10016A924((uint64_t)v8, v9, v10);
    }
    uint64_t v11 = +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "-[NSDictionary(TSUAdditions) tsu_invertedCopy]_block_invoke");
    unint64_t v12 = +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/NSDictionaryAdditions.m"];
    +[TSUAssertionHandler handleFailureInFunction:v11, v12, 30, 0, "Source is not invertible because of non-copyable object: %@", v8 file lineNumber isFatal description];

    +[TSUAssertionHandler logBacktraceThrottled];
    *a4 = 1;
  }
  [*(id *)(a1 + 32) setObject:v7 forKeyedSubscript:v8];
}

void sub_1000B5EEC(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B5F30(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B6160(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

id sub_1000B62BC()
{
  uint64_t v0 = objc_opt_new();
  return v0;
}

void sub_1000B6A98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va1, a12);
  va_start(va, a12);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v12 - 144), 8);
  _Block_object_dispose((const void *)(v12 - 112), 8);
  _Unwind_Resume(a1);
}

BOOL sub_1000B6AD8(void *a1, int a2, int a3, void *__src, size_t a5)
{
  if (*(void *)(*(void *)(a1[5] + 8) + 24) >= a5) {
    size_t v6 = a5;
  }
  else {
    size_t v6 = *(void *)(*(void *)(a1[5] + 8) + 24);
  }
  memcpy(*(void **)(*(void *)(a1[6] + 8) + 24), __src, v6);
  *(void *)(*(void *)(a1[5] + 8) + 24) -= v6;
  *(void *)(*(void *)(a1[6] + 8) + 24) += v6;
  *(void *)(a1[4] + 24) += v6;
  return *(void *)(*(void *)(a1[5] + 8) + 24) != 0;
}

uint64_t sub_1000B6B6C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = *(void *)(a2 + 40);
  *(void *)(a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  return result;
}

void sub_1000B6B7C(uint64_t a1)
{
}

void sub_1000B6B84(uint64_t a1, char a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  int v9 = v8;
  if (!v7 || v8)
  {
    if (v8) {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 64) + 8) + 40), a4);
    }
  }
  else
  {
    uint64_t v21 = 0;
    __int16 v22 = &v21;
    uint64_t v23 = 0x2020000000;
    uint64_t v24 = 0;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 3221225472;
    v18[2] = sub_1000B6D1C;
    void v18[3] = &unk_1001CEC20;
    long long v19 = *(_OWORD *)(a1 + 48);
    v18[4] = *(void *)(a1 + 32);
    __int16 v20 = &v21;
    dispatch_data_apply(v7, v18);
    if (!*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24))
    {
      size_t size = dispatch_data_get_size(v7);
      size_t v11 = v22[3];
      if (size > v11)
      {
        uint64_t v12 = *(NSObject **)(*(void *)(a1 + 32) + 16);
        dispatch_data_t subrange = dispatch_data_create_subrange(v7, v11, size - v11);
        dispatch_data_t concat = dispatch_data_create_concat(v12, subrange);
        uint64_t v15 = *(void *)(a1 + 32);
        uint64_t v16 = *(void **)(v15 + 16);
        *(void *)(v15 + 1sub_100072180((void *)this + 6) = concat;
      }
    }
    _Block_object_dispose(&v21, 8);
  }
  char v17 = a2 ^ 1;
  if (v9) {
    char v17 = 0;
  }
  if ((v17 & 1) == 0 && !*(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24))
  {
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 1;
  }
}

BOOL sub_1000B6D1C(void *a1, int a2, uint64_t a3, void *__src, size_t a5)
{
  if (*(void *)(*(void *)(a1[5] + 8) + 24) >= a5) {
    size_t v7 = a5;
  }
  else {
    size_t v7 = *(void *)(*(void *)(a1[5] + 8) + 24);
  }
  memcpy(*(void **)(*(void *)(a1[6] + 8) + 24), __src, v7);
  *(void *)(*(void *)(a1[5] + 8) + 24) -= v7;
  *(void *)(*(void *)(a1[6] + 8) + 24) += v7;
  *(void *)(a1[4] + 24) += v7;
  *(void *)(*(void *)(a1[7] + 8) + 24) = v7 + a3;
  return *(void *)(*(void *)(a1[5] + 8) + 24) != 0;
}

void sub_1000B6DCC(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B6FA8(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

BOOL sub_1000B7448(id a1, TSUStreamCompression *a2, BOOL a3, OS_dispatch_data *a4, NSError *a5)
{
  if (!a4) {
    return 1;
  }
  uint64_t v5 = a3;
  size_t v7 = a4;
  id v8 = a2;
  uint64_t v9 = objc_opt_class();
  uint64_t v10 = TSUDynamicCast(v9, (uint64_t)v8);

  LOBYTE(vsub_100050800((void *)this + 5) = [v10 handleData:v7 isDone:v5];
  return v5;
}

uint64_t sub_1000B75C4(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a4;
  id v11 = a5;
  uint64_t v12 = v11;
  uint64_t v13 = 1;
  if (v10 && v11)
  {
    uint64_t v14 = objc_opt_class();
    uint64_t v15 = TSUDynamicCast(v14, (uint64_t)v9);
    uint64_t v13 = (uint64_t)[v15 handleData:v10 isDone:a3];
  }
  uint64_t v16 = *(void *)(a1 + 32);
  if (v16) {
    uint64_t v13 = (*(unsigned int (**)(uint64_t, id, uint64_t, id, void *))(v16 + 16))(v16, v9, a3, v10, v12) & v13;
  }

  return v13;
}

void sub_1000B77F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1000B780C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  id result = objc_msgSend(*(id *)(a1 + 32), "processBytes:size:", a2);
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = (_BYTE)result;
  *a5 = *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) ^ 1;
  return result;
}

id sub_1000B7BEC(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "tsu_processLocalizedPropertyList:");
}

void sub_1000B7BF4(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B7D9C(id a1)
{
  id v1 = TSULogCreateCategory("TSUAssertCat");
  uint64_t v2 = TSUAssertCat_log_t;
  TSUAssertCat_log_t = v1;
  _objc_release_x1(v1, v2);
}

void sub_1000B83FC(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B8428(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B8D88(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B9168(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B943C(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

uint64_t SFUDeriveAes128Key(uint64_t a1, unint64_t a2, unsigned int a3, char *a4, uint64_t a5, void *a6, size_t a7)
{
  if (a4) {
    BOOL v7 = a5 == 16;
  }
  else {
    BOOL v7 = 0;
  }
  BOOL v10 = v7 && a1 != 0 && a3 >= 0x3E8 && HIDWORD(a2) == 0;
  int v11 = !v10;
  if (v10)
  {
    unsigned int v14 = a5;
    uint64_t v19 = a7 + 4;
    if (a7 + 4 <= 0x14) {
      uint64_t v19 = 20;
    }
    __int16 v20 = (char *)malloc_type_calloc(1uLL, v19 + 40, 0xA2988ADBuLL);
    sfu_pbkdf2((uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, char *))sub_1000B9558, 20, a1, a2, a6, a7, a3, a4, v14, v20);
    free(v20);
  }
  return v11 ^ 1u;
}

void sub_1000B9558(void *key, size_t keyLength, void *data, size_t dataLength, void *macOut)
{
}

void sub_1000B97A8(uint64_t a1, void *a2, char a3)
{
  if (TSUAssertCat_init_token != -1) {
    dispatch_once(&TSUAssertCat_init_token, &stru_1001CEE38);
  }
  size_t v6 = TSUAssertCat_log_t;
  if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR))
  {
    sub_10016AE88(v6);
    if (a3) {
      goto LABEL_5;
    }
  }
  else if (a3)
  {
LABEL_5:
    BOOL v7 = *(void **)(a1 + 32);
    id v8 = +[NSString stringWithFormat:@"Terminating application due to %@", a2];
    goto LABEL_9;
  }
  if (*(unsigned char *)(a1 + 40)) {
    return;
  }
  BOOL v7 = *(void **)(a1 + 32);
  id v8 = (NSString *)[a2 copy];
LABEL_9:
  [v7 addObject:v8];
}

void sub_1000B987C(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B99B8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000B9B40(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000BA1B8(id a1)
{
  qword_1001EB9D0 = (uint64_t)+[NSDictionary sharedKeySetForKeys:&off_1001D6FF0];
  qword_1001EB9D8 = (uint64_t)objc_alloc_init((Class)NSMutableDictionary);
  dword_1001EB9E0 = 0;
}

void TSUSetCrashReporterInfov(uint64_t a1, char *a2)
{
  v5[1] = a2;
  v5[2] = a2;
  id v2 = objc_msgSend(objc_alloc((Class)NSString), "tsu_initRedactedWithFormat:arguments:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", a1), a2);
  id v3 = (const char *)[v2 UTF8String];
  v5[0] = 0;
  if (v3) {
    asprintf(v5, "%s", v3);
  }

  CFStringRef v4 = v5[0];
  if (!v5[0]) {
    CFStringRef v4 = "TSUSetCrashReporterInfo: unknown reason";
  }
  __crashreporter_info__ = (uint64_t)v4;
}

void TSUSetCrashReporterInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
}

void sub_1000BA55C(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000BA678(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000BAB30(_Unwind_Exception *exc_buf, int a2)
{
  if (!a2) {
    _Unwind_Resume(exc_buf);
  }
  if (a2 != 2)
  {
    objc_begin_catch(exc_buf);
    JUMPOUT(0x1000BAAB4);
  }
  objc_begin_catch(exc_buf);
  objc_exception_rethrow();
}

void sub_1000BABE8(uint64_t a1, int a2)
{
  if (a2)
  {
    objc_end_catch();
    JUMPOUT(0x1000BABB8);
  }
  JUMPOUT(0x1000BAB80);
}

void sub_1000BABF8(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000BAC24(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

uint64_t sub_1000BAC64(void *a1, uint64_t a2, int a3)
{
  uint64_t v3 = (uint64_t)[a1 readToBuffer:a2 size:a3];
  if (v3 >= 0x80000000)
  {
    +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CEFC8);
    }
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_10016B120();
    }
    +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", +[NSString stringWithUTF8String:](NSString, "stringWithUTF8String:", "int SFUXmlReaderIORead(void *, char *, int)"), +[NSString stringWithUTF8String:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUDataRepresentation.m"], 475, 0, "Overflow in SFUXmlReaderIORead");
    +[TSUAssertionHandler logBacktraceThrottled];
  }
  return v3;
}

uint64_t sub_1000BAE14(void *a1)
{
  return 0;
}

void sub_1000BB0F4(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000BB1BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9)
{
  if (a2 == 1)
  {
    id v11 = objc_begin_catch(exception_object);
    int v12 = +[TSUAssertionHandler _atomicIncrementAssertCount];
    if (TSUAssertCat_init_token != -1) {
      dispatch_once(&TSUAssertCat_init_token, &stru_1001CEFA8);
    }
    uint64_t v13 = TSUAssertCat_log_t;
    if (os_log_type_enabled((os_log_t)TSUAssertCat_log_t, OS_LOG_TYPE_ERROR)) {
      sub_10016B230((uint64_t)v11, v12, v13);
    }
    +[TSUAssertionHandler handleFailureInFunction:file:lineNumber:isFatal:description:](TSUAssertionHandler, "handleFailureInFunction:file:lineNumber:isFatal:description:", +[NSString stringWithUTF8String:"[(SFUDataRepresentation *)NSString readIntoData:"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/utility/sf/SFUDataRepresentation.m"], 248, 0, "Caught exception trying to read storage into NSMutableData: %@""];
    +[TSUAssertionHandler logBacktraceThrottled];
    [v9 setLength:v10];
    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

void sub_1000BB2C4(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

void sub_1000BB410(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_1000BB75C(void *a1, const char *a2, uint64_t a3)
{
  return [a1 readToBuffer:a2 size:a3];
}

char *sub_1000BB768(void *a1, uint64_t a2)
{
  CFStringRef v4 = [a1 offset];
  [a1 seekToOffset:&v4[a2]];
  return (char *)((unsigned char *)[a1 offset] - v4);
}

id sub_1000BB7B4(void *a1, const char *a2)
{
  return [a1 seekToOffset:0];
}

void sub_1000BB7BC(void *a1)
{
  [a1 closeLocalStream];
}

void sub_1000BB7F4(id a1)
{
  TSUAssertCat_log_t = TSULogCreateCategory("TSUAssertCat");
}

uint64_t sub_1000BB820(uint64_t a1)
{
  return (***(uint64_t (****)(void))a1)(**(void **)(*(void *)a1 + 8));
}

void *sub_1000BB834(unsigned char *__dst, void *__src, unint64_t a3)
{
  uint64_t v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_1000BB8D4();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    id v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    void *v5 = v8;
    uint64_t v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }
  return memmove(v5, __src, a3 + 1);
}

void sub_1000BB8D4()
{
}

uint64_t sub_1000BB8EC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000BB8D4();
  }
  if (a2 > 0x16)
  {
    uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17) {
      uint64_t v4 = a2 | 7;
    }
    uint64_t v5 = v4 + 1;
    uint64_t v6 = operator new(v4 + 1);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 1sub_100072180((void *)this + 6) = v5 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 1sub_100072180((void *)this + 6) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 2sub_1000719B4((void *)this + 3) = a2;
  }
  return a1;
}

void *sub_1000BB974(void *a1, uint64_t *a2, const char *a3)
{
  if (*((char *)a2 + 23) >= 0) {
    uint64_t v4 = a2;
  }
  else {
    uint64_t v4 = (uint64_t *)*a2;
  }
  *a1 = v4;
  a1[1] = 0;
  if (*((char *)a2 + 23) < 0)
  {
    unint64_t v5 = a2[1];
    if ((v5 & 0x8000000000000000) != 0) {
      google::protobuf::StringPiece::LogFatalSizeTooBig((google::protobuf::StringPiece *)v5, "size_t to int conversion", a3);
    }
  }
  else
  {
    unint64_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  a1[1] = v5;
  return a1;
}

void *sub_1000BB9D8(void *__dst, void *__src, size_t __len)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000BB8D4();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    *__dst = v6;
  }
  else
  {
    *((unsigned char *)__dst + 2sub_1000719B4((void *)this + 3) = __len;
    uint64_t v6 = __dst;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __dst;
}

void *sub_1000BBA84(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_1000BB8D4();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 2sub_1000719B4((void *)this + 3) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + vsub_100050800((void *)this + 5) = 0;
  return a1;
}

void *sub_1000BBB38(google::protobuf::Arena *a1)
{
  if (!a1) {
    operator new();
  }
  id result = sub_1000BBB7C(a1, 0);
  *id result = 0;
  result[1] = 0;
  result[2] = 0;
  return result;
}

void *sub_1000BBB7C(google::protobuf::Arena *this, int a2)
{
  if (*((unsigned char *)this + 24))
  {
    if (a2) {
      goto LABEL_3;
    }
  }
  else if (a2)
  {
LABEL_3:
    return (void *)google::protobuf::Arena::AllocateAlignedNoHook(this, 0x18uLL);
  }
  return google::protobuf::internal::ArenaImpl::AllocateAlignedAndAddCleanup(this, 0x18uLL, (void (*)(void *))sub_1000BBC34);
}

void sub_1000BBC34(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

const char *google::protobuf::FileDescriptor::SyntaxName(int a1)
{
  switch(a1)
  {
    case 0:
      return "unknown";
    case 2:
      return "proto2";
    case 3:
      return "proto3";
  }
  google::protobuf::internal::LogMessage::LogMessage((uint64_t)v4, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 230);
  id v2 = google::protobuf::internal::LogMessage::operator<<(v4, "can't reach here.");
  google::protobuf::internal::LogFinisher::operator=((int)&v3, (const char **)&v2->__r_.__value_.__l.__data_);
  google::protobuf::internal::LogMessage::~LogMessage((void **)&v4[0].__r_.__value_.__l.__data_);
  return 0;
}

void sub_1000BBCE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

google::protobuf::DescriptorPool::Tables *google::protobuf::DescriptorPool::Tables::Tables(google::protobuf::DescriptorPool::Tables *this)
{
  *((void *)this + sub_100072180((void *)this + 6) = 0;
  *((_OWORD *)this + sub_1000333D0((uint64_t *)this + 1) = 0u;
  *((_OWORD *)this + sub_100072180((void *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  *((_DWORD *)this + 14) = 1065353216;
  sub_1000D98B4((uint64_t)this + 24, 3uLL);
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + sub_100050800((void *)this + 5) = 0u;
  *((_DWORD *)this + 24) = 1065353216;
  sub_1000D98B4((uint64_t)this + 64, 3uLL);
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0u;
  *((_DWORD *)this + 34) = 1065353216;
  sub_1000D98B4((uint64_t)this + 104, 3uLL);
  *((_OWORD *)this + sub_100072180((void *)this + 9) = 0u;
  *((_OWORD *)this + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0u;
  *((_DWORD *)this + 44) = 1065353216;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 23sub_100072180((void *)this + 2) = 0u;
  *(_OWORD *)((char *)this + 28google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0u;
  *(_OWORD *)((char *)this + 20google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0u;
  *(_OWORD *)((char *)this + 21sub_100072180((void *)this + 6) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 29sub_100072180((void *)this + 6) = 0u;
  *(_OWORD *)((char *)this + 31sub_100072180((void *)this + 2) = 0u;
  *((void *)this + 4sub_1000333D0((uint64_t *)this + 1) = 0;
  *((_DWORD *)this + 84) = 1065353216;
  sub_1000D98B4((uint64_t)this + 304, 3uLL);
  *(_OWORD *)((char *)this + 344) = 0u;
  *(_OWORD *)((char *)this + 36google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0u;
  *((_DWORD *)this + 94) = 1065353216;
  sub_1000D98B4((uint64_t)this + 344, 3uLL);
  *((void *)this + 4sub_100072180((void *)this + 9) = 0;
  *((void *)this + 5google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  *((void *)this + 48) = (char *)this + 392;
  *(_OWORD *)((char *)this + 408) = 0u;
  *(_OWORD *)((char *)this + 424) = 0u;
  *(_OWORD *)((char *)this + 44google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0u;
  *(_OWORD *)((char *)this + 45sub_100072180((void *)this + 6) = 0u;
  *(_OWORD *)((char *)this + 47sub_100072180((void *)this + 2) = 0u;
  *(_OWORD *)((char *)this + 488) = 0u;
  sub_1000BBA84(v5, "google.protobuf.DoubleValue");
  int v6 = 1;
  sub_1000BBA84(v7, "google.protobuf.FloatValue");
  int v8 = 2;
  sub_1000BBA84(v9, "google.protobuf.Int64Value");
  int v10 = 3;
  sub_1000BBA84(v11, "google.protobuf.UInt64Value");
  int v12 = 4;
  sub_1000BBA84(v13, "google.protobuf.Int32Value");
  int v14 = 5;
  sub_1000BBA84(v15, "google.protobuf.UInt32Value");
  int v16 = 6;
  sub_1000BBA84(v17, "google.protobuf.StringValue");
  int v18 = 7;
  sub_1000BBA84(v19, "google.protobuf.BytesValue");
  int v20 = 8;
  sub_1000BBA84(v21, "google.protobuf.BoolValue");
  int v22 = 9;
  sub_1000BBA84(v23, "google.protobuf.Any");
  int v24 = 10;
  sub_1000BBA84(v25, "google.protobuf.FieldMask");
  int v26 = 11;
  sub_1000BBA84(v27, "google.protobuf.Duration");
  int v28 = 12;
  sub_1000BBA84(v29, "google.protobuf.Timestamp");
  int v30 = 13;
  sub_1000BBA84(v31, "google.protobuf.Value");
  int v32 = 14;
  sub_1000BBA84(v33, "google.protobuf.ListValue");
  int v34 = 15;
  sub_1000BBA84(v35, "google.protobuf.Struct");
  uint64_t v2 = 0;
  int v36 = 16;
  do
  {
    sub_1000D9FE4((uint64_t)this + 144, (unsigned __int8 *)&v5[v2], (uint64_t)&v5[v2]);
    v2 += 4;
  }
  while (v2 != 64);
  uint64_t v3 = 64;
  do
  {
    if (*((char *)&v5[v3 - 1] - 1) < 0) {
      operator delete((void *)v5[v3 - 4]);
    }
    v3 -= 4;
  }
  while (v3 * 8);
  return this;
}

void sub_1000BC0A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, _Unwind_Exception *exception_object, void **a11, uint64_t a12, void *a13, uint64_t a14, void *a15)
{
  while (1)
  {
    if (*((char *)v21 - 9) < 0) {
      operator delete((void *)*(v21 - 4));
    }
    v21 -= 4;
    if (v21 == (uint64_t *)&a15)
    {
      int v22 = (void *)v15[60];
      if (v22)
      {
        v15[61] = v22;
        operator delete(v22);
      }
      uint64_t v23 = (void *)v15[57];
      if (v23)
      {
        v15[58] = v23;
        operator delete(v23);
      }
      int v24 = (void *)v15[54];
      if (v24)
      {
        v15[55] = v24;
        operator delete(v24);
      }
      uint64_t v25 = *v19;
      if (*v19)
      {
        v15[52] = v25;
        operator delete(v25);
      }
      sub_10002770C((uint64_t)(v15 + 48), *a11);
      sub_1000D9B88(v20);
      sub_1000D9B88(a12);
      sub_1000D9F0C((void ***)&a15);
      a15 = (void *)(v18 + 112);
      sub_1000D9E54((void ***)&a15);
      sub_1000D9D94((void ***)&a15);
      a15 = (void *)(v18 + 64);
      sub_1000D9C80((void ***)&a15);
      a15 = a13;
      sub_1000D9BD4((void ***)&a15);
      sub_1000D9B00(v18);
      sub_1000D9B88(v17);
      sub_1000D9B00(v16);
      sub_1000D9B00(a14);
      a15 = v15;
      sub_1000D9860((void ***)&a15);
      _Unwind_Resume(a1);
    }
  }
}

void google::protobuf::DescriptorPool::Tables::~Tables(google::protobuf::DescriptorPool::Tables *this)
{
  uint64_t v2 = (void *)*((void *)this + 60);
  if (v2)
  {
    *((void *)this + 6sub_1000333D0((uint64_t *)this + 1) = v2;
    operator delete(v2);
  }
  uint64_t v3 = (void *)*((void *)this + 57);
  if (v3)
  {
    *((void *)this + 58) = v3;
    operator delete(v3);
  }
  size_t v4 = (void *)*((void *)this + 54);
  if (v4)
  {
    *((void *)this + 5sub_100050800((void *)this + 5) = v4;
    operator delete(v4);
  }
  size_t v5 = (void *)*((void *)this + 51);
  if (v5)
  {
    *((void *)this + 5sub_100072180((void *)this + 2) = v5;
    operator delete(v5);
  }
  sub_10002770C((uint64_t)this + 384, *((void **)this + 49));
  sub_1000D9B88((uint64_t)this + 344);
  sub_1000D9B88((uint64_t)this + 304);
  int v6 = (void **)((char *)this + 280);
  sub_1000D9F0C(&v6);
  int v6 = (void **)((char *)this + 256);
  sub_1000D9E54(&v6);
  int v6 = (void **)((char *)this + 232);
  sub_1000D9D94(&v6);
  int v6 = (void **)((char *)this + 208);
  sub_1000D9C80(&v6);
  int v6 = (void **)((char *)this + 184);
  sub_1000D9BD4(&v6);
  sub_1000D9B00((uint64_t)this + 144);
  sub_1000D9B88((uint64_t)this + 104);
  sub_1000D9B00((uint64_t)this + 64);
  sub_1000D9B00((uint64_t)this + 24);
  int v6 = (void **)this;
  sub_1000D9860(&v6);
}

void google::protobuf::FileDescriptorTables::FileDescriptorTables(google::protobuf::FileDescriptorTables *this)
{
  *(_OWORD *)this = 0u;
  *((_OWORD *)this + sub_1000333D0((uint64_t *)this + 1) = 0u;
  *((_DWORD *)this + 8) = 1065353216;
  sub_1000DA8C4((uint64_t)this, 3uLL);
  *(_OWORD *)((char *)this + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0u;
  *(_OWORD *)((char *)this + 5sub_100072180((void *)this + 6) = 0u;
  *((_DWORD *)this + 18) = 1065353216;
  sub_1000DA8C4((uint64_t)this + 40, 3uLL);
  operator new();
}

void sub_1000BC4D8(_Unwind_Exception *a1)
{
  uint64_t v8 = v5;
  sub_1000D9B00(v8);
  sub_1000D9B88(v7);
  sub_1000D9B88(v6);
  sub_1000D9B88(v4);
  sub_1000DAAC0((uint64_t *)(v1 + 136));
  sub_1000D9B88(v3);
  sub_1000DAAC0((uint64_t *)(v1 + 80));
  sub_1000D9B88(v2);
  sub_1000D9B88(v1);
  _Unwind_Resume(a1);
}

void sub_1000BC568()
{
}

void google::protobuf::FileDescriptorTables::~FileDescriptorTables(google::protobuf::FileDescriptorTables *this)
{
  std::mutex::~mutex((std::mutex *)this + 5);
  sub_1000D9B00((uint64_t)this + 280);
  sub_1000D9B88((uint64_t)this + 232);
  sub_1000D9B88((uint64_t)this + 192);
  sub_1000D9B88((uint64_t)this + 152);
  sub_1000DAAC0((uint64_t *)this + 17);
  sub_1000D9B88((uint64_t)this + 96);
  sub_1000DAAC0((uint64_t *)this + 10);
  sub_1000D9B88((uint64_t)this + 40);
  sub_1000D9B88((uint64_t)this);
}

void google::protobuf::DescriptorPool::Tables::AddCheckpoint(google::protobuf::DescriptorPool::Tables *this)
{
  sub_1000D78A4(&v18, this);
  uint64_t v2 = (_OWORD *)*((void *)this + 52);
  unint64_t v3 = *((void *)this + 53);
  if ((unint64_t)v2 >= v3)
  {
    uint64_t v6 = *((void *)this + 51);
    uint64_t v7 = ((uint64_t)v2 - v6) >> 5;
    unint64_t v8 = v7 + 1;
    if ((unint64_t)(v7 + 1) >> 59) {
      sub_100078F84();
    }
    uint64_t v9 = v3 - v6;
    if (v9 >> 4 > v8) {
      unint64_t v8 = v9 >> 4;
    }
    if ((unint64_t)v9 >= 0x7FFFFFFFFFFFFFE0) {
      unint64_t v10 = 0x7FFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v10 = v8;
    }
    if (v10) {
      id v11 = (char *)sub_1000DAB10((uint64_t)this + 424, v10);
    }
    else {
      id v11 = 0;
    }
    int v12 = &v11[32 * v7];
    uint64_t v13 = &v11[32 * v10];
    long long v14 = v19;
    *(_OWORD *)int v12 = v18;
    *((_OWORD *)v12 + sub_1000333D0((uint64_t *)this + 1) = v14;
    uint64_t v5 = v12 + 32;
    uint64_t v16 = (char *)*((void *)this + 51);
    uint64_t v15 = (char *)*((void *)this + 52);
    if (v15 != v16)
    {
      do
      {
        long long v17 = *((_OWORD *)v15 - 1);
        *((_OWORD *)v12 - sub_100072180((void *)this + 2) = *((_OWORD *)v15 - 2);
        *((_OWORD *)v12 - sub_1000333D0((uint64_t *)this + 1) = v17;
        v12 -= 32;
        v15 -= 32;
      }
      while (v15 != v16);
      uint64_t v15 = (char *)*((void *)this + 51);
    }
    *((void *)this + 5sub_1000333D0((uint64_t *)this + 1) = v12;
    *((void *)this + 5sub_100072180((void *)this + 2) = v5;
    *((void *)this + 5sub_1000719B4((void *)this + 3) = v13;
    if (v15) {
      operator delete(v15);
    }
  }
  else
  {
    long long v4 = v19;
    _OWORD *v2 = v18;
    v2[1] = v4;
    uint64_t v5 = v2 + 2;
  }
  *((void *)this + 5sub_100072180((void *)this + 2) = v5;
}

void google::protobuf::DescriptorPool::Tables::RollbackToLastCheckpoint(google::protobuf::DescriptorPool::Tables *this)
{
  uint64_t v2 = *((void *)this + 52);
  unint64_t v3 = *(int *)(v2 - 12);
  for (uint64_t i = *((void *)this + 54); v3 < (*((void *)this + 55) - i) >> 3; uint64_t i = *((void *)this + 54))
  {
    sub_1000D7924(v10, *(char **)(i + 8 * v3));
    sub_1000DAB48((void *)this + 38, v10);
    ++v3;
  }
  unint64_t v5 = *(int *)(v2 - 8);
  for (uint64_t j = *((void *)this + 57); v5 < (*((void *)this + 58) - j) >> 3; uint64_t j = *((void *)this + 57))
  {
    sub_1000D7924(v10, *(char **)(j + 8 * v5));
    sub_1000DAB48((void *)this + 43, v10);
    ++v5;
  }
  unint64_t v7 = *(int *)(v2 - 4);
  uint64_t v8 = *((void *)this + 60);
  if (v7 < (*((void *)this + 61) - v8) >> 4)
  {
    uint64_t v9 = 16 * v7;
    do
    {
      sub_1000DAE20((uint64_t **)this + 48, (unint64_t *)(v8 + v9));
      ++v7;
      uint64_t v8 = *((void *)this + 60);
      v9 += 16;
    }
    while (v7 < (*((void *)this + 61) - v8) >> 4);
  }
  sub_1000BC870((uint64_t)this + 432, *(int *)(v2 - 12));
  sub_1000BC870((uint64_t)this + 456, *(int *)(v2 - 8));
  sub_1000BC8A0((uint64_t)this + 480, *(int *)(v2 - 4));
  sub_1000BC8D0((uint64_t *)this + 26, *(int *)(v2 - 32));
  sub_1000BC900((uint64_t *)this + 29, *(int *)(v2 - 28));
  sub_1000BC9B0((uint64_t *)this + 32, *(int *)(v2 - 24));
  sub_1000BC9E0((uint64_t)this + 280, *(int *)(v2 - 20));
  sub_1000BCA70((uint64_t *)this + 23, *(int *)(v2 - 16));
  *((void *)this + 52) -= 32;
}

void sub_1000BC870(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 8 * a2;
    }
  }
  else
  {
    sub_1000DB26C((void **)a1, a2 - v2);
  }
}

void sub_1000BC8A0(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = (uint64_t)(*(void *)(a1 + 8) - *(void *)a1) >> 4;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      *(void *)(a1 + 8) = *(void *)a1 + 16 * a2;
    }
  }
  else
  {
    sub_1000DB380((void **)a1, a2 - v2);
  }
}

void sub_1000BC8D0(uint64_t *a1, unint64_t a2)
{
  unint64_t v2 = (a1[1] - *a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      sub_1000D9CD4((uint64_t)a1, (uint64_t *)(*a1 + 8 * a2));
    }
  }
  else
  {
    sub_1000DB4B4(a1, a2 - v2);
  }
}

void sub_1000BC900(uint64_t *a1, unint64_t a2)
{
  unint64_t v3 = (void *)a1[1];
  unint64_t v4 = ((uint64_t)v3 - *a1) >> 3;
  if (a2 <= v4)
  {
    if (a2 < v4)
    {
      uint64_t v6 = *a1 + 8 * a2;
      while (v3 != (void *)v6)
      {
        uint64_t v8 = *--v3;
        uint64_t v7 = v8;
        void *v3 = 0;
        if (v8) {
          (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
        }
      }
      a1[1] = v6;
    }
  }
  else
  {
    unint64_t v5 = a2 - v4;
    sub_1000DB7D8(a1, v5);
  }
}

void sub_1000BC9B0(uint64_t *a1, unint64_t a2)
{
  unint64_t v2 = (a1[1] - *a1) >> 3;
  if (a2 <= v2)
  {
    if (a2 < v2) {
      sub_1000D9EA8((uint64_t)a1, (void *)(*a1 + 8 * a2));
    }
  }
  else
  {
    sub_1000DBB38(a1, a2 - v2);
  }
}

void sub_1000BC9E0(uint64_t a1, unint64_t a2)
{
  unint64_t v3 = *(google::protobuf::FileDescriptorTables ***)(a1 + 8);
  unint64_t v4 = ((uint64_t)v3 - *(void *)a1) >> 3;
  if (a2 <= v4)
  {
    if (a2 < v4)
    {
      uint64_t v6 = *(void *)a1 + 8 * a2;
      while (v3 != (google::protobuf::FileDescriptorTables **)v6)
        sub_1000D9F94(--v3, 0);
      *(void *)(a1 + 8) = v6;
    }
  }
  else
  {
    unint64_t v5 = a2 - v4;
    sub_1000DBE78((char **)a1, v5);
  }
}

void sub_1000BCA70(uint64_t *a1, unint64_t a2)
{
  uint64_t v3 = a1[1];
  unint64_t v4 = 0xAAAAAAAAAAAAAAABLL * ((v3 - *a1) >> 3);
  BOOL v5 = a2 >= v4;
  unint64_t v6 = a2 - v4;
  if (v6 != 0 && v5)
  {
    sub_1000DBFF4(a1, v6);
  }
  else if (!v5)
  {
    uint64_t v7 = *a1 + 24 * a2;
    if (v3 != v7)
    {
      uint64_t v8 = a1[1];
      do
      {
        unint64_t v10 = *(void **)(v8 - 24);
        v8 -= 24;
        uint64_t v9 = v10;
        if (v10)
        {
          *(void *)(v3 - 1sub_100072180((void *)this + 6) = v9;
          operator delete(v9);
        }
        uint64_t v3 = v8;
      }
      while (v8 != v7);
    }
    a1[1] = v7;
  }
}

unint64_t google::protobuf::DescriptorPool::Tables::FindByNameHelper(void *a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v8 = *(std::mutex **)a2;
  if (!*(void *)a2) {
    goto LABEL_6;
  }
  std::mutex::lock(*(std::mutex **)a2);
  if (!a1[11] && !a1[6])
  {
    long long v18 = a3;
    uint64_t v19 = a4;
    long long v17 = sub_1000D7974(a1 + 38, &v18);
    if (v17)
    {
      unint64_t v12 = v17[4];
      if (v12)
      {
        unint64_t v11 = HIDWORD(v12);
        goto LABEL_20;
      }
    }
  }
  std::mutex::unlock(v8);
  uint64_t v8 = *(std::mutex **)a2;
  if (*(void *)a2)
  {
    std::mutex::lock(*(std::mutex **)a2);
    char v9 = 0;
  }
  else
  {
LABEL_6:
    char v9 = 1;
  }
  if (*(void *)(a2 + 8))
  {
    sub_1000DC38C((uint64_t)(a1 + 8));
    sub_1000DC38C((uint64_t)(a1 + 3));
  }
  long long v18 = a3;
  uint64_t v19 = a4;
  unint64_t v10 = sub_1000D7974(a1 + 38, &v18);
  if (v10)
  {
    LODWORD(v1sub_100072180((void *)this + 2) = *((_DWORD *)v10 + 8);
    unint64_t v11 = *((unsigned int *)v10 + 9);
    if (v12) {
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v11 = 0;
  }
  uint64_t v13 = *(void *)(a2 + 24);
  if (!v13 {
    || (unint64_t v14 = google::protobuf::DescriptorPool::Tables::FindByNameHelper(*(void *)(v13 + 32), v13, a3, a4),
  }
        unint64_t v11 = HIDWORD(v14),
        (LODWORD(v1sub_100072180((void *)this + 2) = v14) == 0))
  {
    if (google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase((google::protobuf::DescriptorPool *)a2, (uint64_t)a3, a4))
    {
      long long v18 = a3;
      uint64_t v19 = a4;
      uint64_t v15 = sub_1000D7974(a1 + 38, &v18);
      if (v15) {
        unint64_t v12 = v15[4];
      }
      else {
        unint64_t v12 = 0;
      }
      unint64_t v11 = HIDWORD(v12);
      if ((v9 & 1) == 0) {
        goto LABEL_20;
      }
      return v12 | (v11 << 32);
    }
    LODWORD(v1sub_100072180((void *)this + 2) = 0;
  }
LABEL_19:
  if ((v9 & 1) == 0) {
LABEL_20:
  }
    std::mutex::unlock(v8);
  return v12 | (v11 << 32);
}

void sub_1000BCCA8(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::TryFindSymbolInFallbackDatabase(google::protobuf::DescriptorPool *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a2;
  uint64_t v15 = a3;
  if (!*((void *)a1 + 1)) {
    return 0;
  }
  sub_1000D7AF4((uint64_t)&v14, v12);
  if (sub_1000DD0D4((void *)(*((void *)a1 + 4) + 64), (unsigned __int8 *)v12))
  {
    uint64_t v4 = 0;
  }
  else
  {
    google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v10, 0);
    if ((google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType((uint64_t)a1, v14, v15) & 1) != 0
      || !(*(unsigned int (**)(void, void **, unsigned char *))(**((void **)a1 + 1) + 24))(*((void *)a1 + 1), v12, v10)|| (v6 = *((void *)a1 + 4), sub_1000BB974(&v9, (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFELL), v5), v16 = v9, (uint64_t v7 = sub_1000D7974((void *)(v6 + 344), (char **)&v16)) != 0)&& v7[4]|| !google::protobuf::DescriptorPool::BuildFileFromDatabase(a1, (const google::protobuf::FileDescriptorProto *)v10))
    {
      sub_1000DD1D8(*((void *)a1 + 4) + 64, (unsigned __int8 *)v12, (uint64_t)v12);
      uint64_t v4 = 0;
    }
    else
    {
      uint64_t v4 = 1;
    }
    google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v10);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  return v4;
}

void sub_1000BCE0C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, char a11)
{
  if (*(char *)(v11 - 65) < 0) {
    operator delete(*(void **)(v11 - 88));
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FileDescriptorTables::FieldsByLowercaseNamesLazyInitInternal(uint64_t this)
{
  uint64_t v1 = *(void **)(this + 168);
  if (v1)
  {
    uint64_t v2 = this + 40;
    while (1)
    {
      uint64_t v3 = v1[4];
      if (!*(unsigned char *)(v3 + 67)) {
        break;
      }
      uint64_t v4 = *(void *)(v3 + 96);
      if (!v4)
      {
        BOOL v5 = (uint64_t *)(v3 + 40);
LABEL_7:
        uint64_t v4 = *v5;
      }
      uint64_t v6 = *(char **)(v3 + 16);
      if (v6[23] < 0) {
        uint64_t v6 = *(char **)v6;
      }
      *(void *)&long long v7 = v4;
      sub_1000D7924((void *)&v7 + 1, v6);
      this = sub_1000BCED8(v2, &v7, v1 + 4);
      uint64_t v1 = (void *)*v1;
      if (!v1) {
        return this;
      }
    }
    BOOL v5 = (uint64_t *)(v3 + 80);
    goto LABEL_7;
  }
  return this;
}

uint64_t sub_1000BCED8(uint64_t a1, long long *a2, uint64_t *a3)
{
  long long v30 = *a2;
  uint64_t v5 = *((void *)a2 + 2);
  uint64_t v6 = *a3;
  *(void *)&long long v31 = v5;
  *((void *)&v31 + sub_1000333D0((uint64_t *)this + 1) = v6;
  if (v5 < 1)
  {
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = (char *)*((void *)&v30 + 1);
    unint64_t v9 = *((void *)&v30 + 1) + v5;
    do
    {
      uint64_t v10 = *v8++;
      uint64_t v7 = 5 * v7 + v10;
    }
    while ((unint64_t)v8 < v9);
  }
  unint64_t v11 = v7 ^ (16777619 * v30);
  unint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    uint8x8_t v13 = (uint8x8_t)vcnt_s8((int8x8_t)v12);
    v13.i16[0] = vaddlv_u8(v13);
    unint64_t v14 = v13.u32[0];
    if (v13.u32[0] > 1uLL)
    {
      uint64_t v3 = v7 ^ (16777619 * v30);
      if (v11 >= v12) {
        uint64_t v3 = v11 % v12;
      }
    }
    else
    {
      uint64_t v3 = (v12 - 1) & v11;
    }
    uint64_t v15 = *(void **)(*(void *)a1 + 8 * v3);
    if (v15)
    {
      long long v16 = (void *)*v15;
      if (*v15)
      {
        do
        {
          unint64_t v17 = v16[1];
          if (v17 == v11)
          {
            if (sub_1000D7BE8(a1 + 32, v16 + 2, &v30)) {
              return 0;
            }
          }
          else
          {
            if (v14 > 1)
            {
              if (v17 >= v12) {
                v17 %= v12;
              }
            }
            else
            {
              v17 &= v12 - 1;
            }
            if (v17 != v3) {
              break;
            }
          }
          long long v16 = (void *)*v16;
        }
        while (v16);
      }
    }
  }
  long long v18 = operator new(0x30uLL);
  *long long v18 = 0;
  v18[1] = v11;
  long long v19 = v31;
  *((_OWORD *)v18 + sub_1000333D0((uint64_t *)this + 1) = v30;
  *((_OWORD *)v18 + sub_100072180((void *)this + 2) = v19;
  float v20 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v21 = *(float *)(a1 + 32);
  if (!v12 || (float)(v21 * (float)v12) < v20)
  {
    BOOL v22 = 1;
    if (v12 >= 3) {
      BOOL v22 = (v12 & (v12 - 1)) != 0;
    }
    unint64_t v23 = v22 | (2 * v12);
    unint64_t v24 = vcvtps_u32_f32(v20 / v21);
    if (v23 <= v24) {
      size_t v25 = v24;
    }
    else {
      size_t v25 = v23;
    }
    sub_1000DA8C4(a1, v25);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12) {
        uint64_t v3 = v11 % v12;
      }
      else {
        uint64_t v3 = v11;
      }
    }
    else
    {
      uint64_t v3 = (v12 - 1) & v11;
    }
  }
  uint64_t v26 = *(void *)a1;
  id v27 = *(void **)(*(void *)a1 + 8 * v3);
  if (v27)
  {
    *long long v18 = *v27;
LABEL_43:
    void *v27 = v18;
    goto LABEL_44;
  }
  *long long v18 = *(void *)(a1 + 16);
  *(void *)(a1 + 1sub_100072180((void *)this + 6) = v18;
  *(void *)(v26 + 8 * vsub_1000719B4((void *)this + 3) = a1 + 16;
  if (*v18)
  {
    unint64_t v28 = *(void *)(*v18 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v28 >= v12) {
        v28 %= v12;
      }
    }
    else
    {
      v28 &= v12 - 1;
    }
    id v27 = (void *)(*(void *)a1 + 8 * v28);
    goto LABEL_43;
  }
LABEL_44:
  ++*(void *)(a1 + 24);
  return 1;
}

void sub_1000BD148(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddSymbol(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = a2;
  uint64_t v8 = (uint64_t)(a1 + 38);
  if (a2[23] < 0) {
    a2 = *(char **)a2;
  }
  sub_1000D7924(&v27, a2);
  long long v28 = v27;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  sub_1000DC3E4(v8, (char **)&v28, &v28);
  char v10 = v9;
  if (v9)
  {
    if (v6[23] >= 0) {
      unint64_t v11 = v6;
    }
    else {
      unint64_t v11 = *(char **)v6;
    }
    uint8x8_t v13 = (char **)a1[55];
    unint64_t v12 = a1[56];
    if ((unint64_t)v13 >= v12)
    {
      uint64_t v15 = a1[54];
      uint64_t v16 = ((uint64_t)v13 - v15) >> 3;
      if ((unint64_t)(v16 + 1) >> 61) {
        sub_100078F84();
      }
      uint64_t v17 = v12 - v15;
      uint64_t v18 = v17 >> 2;
      if (v17 >> 2 <= (unint64_t)(v16 + 1)) {
        uint64_t v18 = v16 + 1;
      }
      if ((unint64_t)v17 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v19 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v19 = v18;
      }
      if (v19) {
        float v20 = (char *)sub_1000B4170((uint64_t)(a1 + 56), v19);
      }
      else {
        float v20 = 0;
      }
      float v21 = &v20[8 * v16];
      BOOL v22 = &v20[8 * v19];
      *(void *)float v21 = v11;
      unint64_t v14 = v21 + 8;
      unint64_t v24 = (char *)a1[54];
      unint64_t v23 = (char *)a1[55];
      if (v23 != v24)
      {
        do
        {
          uint64_t v25 = *((void *)v23 - 1);
          v23 -= 8;
          *((void *)v21 - sub_1000333D0((uint64_t *)this + 1) = v25;
          v21 -= 8;
        }
        while (v23 != v24);
        unint64_t v23 = (char *)a1[54];
      }
      a1[54] = v21;
      a1[55] = v14;
      a1[56] = v22;
      if (v23) {
        operator delete(v23);
      }
    }
    else
    {
      *uint8x8_t v13 = v11;
      unint64_t v14 = v13 + 1;
    }
    a1[55] = v14;
  }
  return v10 & 1;
}

uint64_t google::protobuf::FileDescriptorTables::AddAliasUnderParent(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  if (a3[23] >= 0) {
    char v9 = a3;
  }
  else {
    char v9 = *(char **)a3;
  }
  *(void *)&long long v32 = a2;
  sub_1000D7924((void *)&v32 + 1, v9);
  long long v34 = v32;
  *(void *)&long long v35 = v33;
  *((void *)&v35 + sub_1000333D0((uint64_t *)this + 1) = a4;
  uint64_t v36 = a5;
  if (v33 < 1)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v11 = (char *)*((void *)&v34 + 1);
    do
    {
      uint64_t v12 = *v11++;
      uint64_t v10 = 5 * v10 + v12;
    }
    while ((unint64_t)v11 < *((void *)&v34 + 1) + v33);
  }
  unint64_t v13 = v10 ^ (16777619 * v32);
  unint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    uint8x8_t v15 = (uint8x8_t)vcnt_s8((int8x8_t)v14);
    v15.i16[0] = vaddlv_u8(v15);
    unint64_t v16 = v15.u32[0];
    if (v15.u32[0] > 1uLL)
    {
      uint64_t v5 = v10 ^ (16777619 * v32);
      if (v13 >= v14) {
        uint64_t v5 = v13 % v14;
      }
    }
    else
    {
      uint64_t v5 = (v14 - 1) & v13;
    }
    uint64_t v17 = *(void **)(*(void *)a1 + 8 * v5);
    if (v17)
    {
      uint64_t v18 = (void *)*v17;
      if (*v17)
      {
        do
        {
          unint64_t v19 = v18[1];
          if (v19 == v13)
          {
            if (sub_1000D7BE8(a1 + 32, v18 + 2, &v34)) {
              return 0;
            }
          }
          else
          {
            if (v16 > 1)
            {
              if (v19 >= v14) {
                v19 %= v14;
              }
            }
            else
            {
              v19 &= v14 - 1;
            }
            if (v19 != v5) {
              break;
            }
          }
          uint64_t v18 = (void *)*v18;
        }
        while (v18);
      }
    }
  }
  float v20 = operator new(0x38uLL);
  *float v20 = 0;
  v20[1] = v13;
  long long v21 = v35;
  *((_OWORD *)v20 + sub_1000333D0((uint64_t *)this + 1) = v34;
  *((_OWORD *)v20 + sub_100072180((void *)this + 2) = v21;
  v20[6] = v36;
  float v22 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v23 = *(float *)(a1 + 32);
  if (!v14 || (float)(v23 * (float)v14) < v22)
  {
    BOOL v24 = 1;
    if (v14 >= 3) {
      BOOL v24 = (v14 & (v14 - 1)) != 0;
    }
    unint64_t v25 = v24 | (2 * v14);
    unint64_t v26 = vcvtps_u32_f32(v22 / v23);
    if (v25 <= v26) {
      size_t v27 = v26;
    }
    else {
      size_t v27 = v25;
    }
    sub_1000DA8C4(a1, v27);
    unint64_t v14 = *(void *)(a1 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v13 >= v14) {
        uint64_t v5 = v13 % v14;
      }
      else {
        uint64_t v5 = v13;
      }
    }
    else
    {
      uint64_t v5 = (v14 - 1) & v13;
    }
  }
  uint64_t v28 = *(void *)a1;
  uint64_t v29 = *(void **)(*(void *)a1 + 8 * v5);
  if (v29)
  {
    *float v20 = *v29;
LABEL_46:
    void *v29 = v20;
    goto LABEL_47;
  }
  *float v20 = *(void *)(a1 + 16);
  *(void *)(a1 + 1sub_100072180((void *)this + 6) = v20;
  *(void *)(v28 + 8 * vsub_100050800((void *)this + 5) = a1 + 16;
  if (*v20)
  {
    unint64_t v30 = *(void *)(*v20 + 8);
    if ((v14 & (v14 - 1)) != 0)
    {
      if (v30 >= v14) {
        v30 %= v14;
      }
    }
    else
    {
      v30 &= v14 - 1;
    }
    uint64_t v29 = (void *)(*(void *)a1 + 8 * v30);
    goto LABEL_46;
  }
LABEL_47:
  ++*(void *)(a1 + 24);
  return 1;
}

void sub_1000BD544(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddFile(google::protobuf::DescriptorPool::Tables *this, char **a2)
{
  uint64_t v4 = (char *)this + 344;
  uint64_t v5 = *a2;
  if (v5[23] < 0) {
    uint64_t v5 = *(char **)v5;
  }
  sub_1000D7924(&v24, v5);
  long long v25 = v24;
  unint64_t v26 = (const google::protobuf::FileDescriptor *)a2;
  sub_1000DC650((uint64_t)v4, (char **)&v25, (uint64_t)&v25);
  char v7 = v6;
  if (v6)
  {
    uint64_t v8 = *a2;
    if ((*a2)[23] < 0) {
      uint64_t v8 = *(char **)v8;
    }
    uint64_t v10 = (char **)*((void *)this + 58);
    unint64_t v9 = *((void *)this + 59);
    if ((unint64_t)v10 >= v9)
    {
      uint64_t v12 = *((void *)this + 57);
      uint64_t v13 = ((uint64_t)v10 - v12) >> 3;
      if ((unint64_t)(v13 + 1) >> 61) {
        sub_100078F84();
      }
      uint64_t v14 = v9 - v12;
      uint64_t v15 = v14 >> 2;
      if (v14 >> 2 <= (unint64_t)(v13 + 1)) {
        uint64_t v15 = v13 + 1;
      }
      if ((unint64_t)v14 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v16 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v16 = v15;
      }
      if (v16) {
        uint64_t v17 = (char *)sub_1000B4170((uint64_t)this + 472, v16);
      }
      else {
        uint64_t v17 = 0;
      }
      uint64_t v18 = (char **)&v17[8 * v13];
      unint64_t v19 = &v17[8 * v16];
      *uint64_t v18 = v8;
      unint64_t v11 = v18 + 1;
      long long v21 = (char *)*((void *)this + 57);
      float v20 = (char *)*((void *)this + 58);
      if (v20 != v21)
      {
        do
        {
          float v22 = (char *)*((void *)v20 - 1);
          v20 -= 8;
          *--uint64_t v18 = v22;
        }
        while (v20 != v21);
        float v20 = (char *)*((void *)this + 57);
      }
      *((void *)this + 57) = v18;
      *((void *)this + 58) = v11;
      *((void *)this + 5sub_100072180((void *)this + 9) = v19;
      if (v20) {
        operator delete(v20);
      }
    }
    else
    {
      void *v10 = v8;
      unint64_t v11 = v10 + 1;
    }
    *((void *)this + 58) = v11;
  }
  return v7 & 1;
}

uint64_t google::protobuf::FileDescriptorTables::AddFieldByStylizedNames(google::protobuf::FileDescriptorTables *this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v12 = a2;
  if (*((unsigned char *)a2 + 67))
  {
    uint64_t v4 = *((void *)a2 + 12);
    if (v4) {
      goto LABEL_6;
    }
    uint64_t v5 = (char *)a2 + 40;
  }
  else
  {
    uint64_t v5 = (char *)a2 + 80;
  }
  uint64_t v4 = *(void *)v5;
LABEL_6:
  char v6 = (char *)*((void *)a2 + 2);
  if (v6[23] < 0) {
    char v6 = *(char **)v6;
  }
  *(void *)&long long v11 = v4;
  sub_1000D7924((void *)&v11 + 1, v6);
  if ((sub_1000BCED8(*((void *)this + 10), &v11, (uint64_t *)&v12) & 1) == 0)
  {
    *(void *)&long long v10 = sub_1000BD7A0(*((void **)this + 10), &v11);
    sub_1000BCED8((uint64_t)this + 40, &v11, (uint64_t *)&v10);
  }
  char v7 = (char *)*((void *)a2 + 3);
  if (v7[23] < 0) {
    char v7 = *(char **)v7;
  }
  *(void *)&long long v10 = v4;
  sub_1000D7924((void *)&v10 + 1, v7);
  uint64_t result = sub_1000BCED8(*((void *)this + 17), &v10, (uint64_t *)&v12);
  if ((result & 1) == 0)
  {
    uint64_t v9 = sub_1000BD7A0(*((void **)this + 17), &v10);
    return sub_1000BCED8((uint64_t)this + 96, &v10, &v9);
  }
  return result;
}

uint64_t sub_1000BD7A0(void *a1, void *a2)
{
  uint64_t v3 = a2[2];
  if (v3 < 1)
  {
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = (char *)a2[1];
    char v6 = &v5[v3];
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v4 = 5 * v4 + v7;
    }
    while (v5 < v6);
  }
  int8x8_t v8 = (int8x8_t)a1[1];
  if (v8)
  {
    unint64_t v9 = v4 ^ (16777619 * *a2);
    uint8x8_t v10 = (uint8x8_t)vcnt_s8(v8);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      uint64_t v12 = v4 ^ (16777619 * *a2);
      if (v9 >= *(void *)&v8) {
        uint64_t v12 = v9 % *(void *)&v8;
      }
    }
    else
    {
      uint64_t v12 = (*(void *)&v8 - 1) & v9;
    }
    uint64_t v13 = *(void **)(*a1 + 8 * v12);
    if (v13)
    {
      uint64_t v14 = (void *)*v13;
      if (*v13)
      {
        uint64_t v15 = (uint64_t)(a1 + 4);
        do
        {
          unint64_t v16 = v14[1];
          if (v16 == v9)
          {
            if (sub_1000D7BE8(v15, v14 + 2, a2)) {
              return v14[5];
            }
          }
          else
          {
            if (v11 > 1)
            {
              if (v16 >= *(void *)&v8) {
                v16 %= *(void *)&v8;
              }
            }
            else
            {
              v16 &= *(void *)&v8 - 1;
            }
            if (v16 != v12) {
              return 0;
            }
          }
          uint64_t v14 = (void *)*v14;
        }
        while (v14);
      }
    }
  }
  return 0;
}

uint64_t google::protobuf::FileDescriptorTables::AddFieldByNumber(google::protobuf::FileDescriptorTables *this, const google::protobuf::FieldDescriptor *a2)
{
  uint64_t v5 = *((void *)a2 + 10);
  int v6 = *((_DWORD *)a2 + 17);
  uint64_t v7 = (uint64_t *)((char *)this + 152);
  unint64_t v8 = (16777619 * v6) ^ (16777499 * v5);
  unint64_t v9 = *((void *)this + 20);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      uint64_t v2 = (16777619 * v6) ^ (16777499 * v5);
      if (v8 >= v9) {
        uint64_t v2 = v8 % v9;
      }
    }
    else
    {
      uint64_t v2 = v8 & (v9 - 1);
    }
    unint64_t v11 = *(uint64_t ***)(*v7 + 8 * v2);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == v5 && *((_DWORD *)i + 6) == v6) {
            return 0;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v2) {
            break;
          }
        }
      }
    }
  }
  uint64_t v15 = operator new(0x28uLL);
  *uint64_t v15 = 0;
  v15[1] = v8;
  v15[2] = v5;
  *((_DWORD *)v15 + sub_100072180((void *)this + 6) = v6;
  void v15[4] = a2;
  float v16 = (float)(unint64_t)(*((void *)this + 22) + 1);
  float v17 = *((float *)this + 46);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    BOOL v18 = 1;
    if (v9 >= 3) {
      BOOL v18 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v9);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_1000DA8C4((uint64_t)v7, v21);
    unint64_t v9 = *((void *)this + 20);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        uint64_t v2 = v8 % v9;
      }
      else {
        uint64_t v2 = (16777619 * v6) ^ (16777499 * v5);
      }
    }
    else
    {
      uint64_t v2 = (v9 - 1) & v8;
    }
  }
  uint64_t v22 = *v7;
  float v23 = *(void **)(*v7 + 8 * v2);
  if (v23)
  {
    *uint64_t v15 = *v23;
LABEL_42:
    *float v23 = v15;
    goto LABEL_43;
  }
  *uint64_t v15 = *((void *)this + 21);
  *((void *)this + 2sub_1000333D0((uint64_t *)this + 1) = v15;
  *(void *)(v22 + 8 * vsub_100072180((void *)this + 2) = (char *)this + 168;
  if (*v15)
  {
    unint64_t v24 = *(void *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9) {
        v24 %= v9;
      }
    }
    else
    {
      v24 &= v9 - 1;
    }
    float v23 = (void *)(*v7 + 8 * v24);
    goto LABEL_42;
  }
LABEL_43:
  ++*((void *)this + 22);
  return 1;
}

void sub_1000BDB1C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1000BDB30(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *a3;
  unint64_t v8 = (16777619 * (int)v6) ^ (16777499 * *a2);
  unint64_t v9 = *(void *)(a1 + 8);
  uint64_t v26 = v6;
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      uint64_t v3 = (16777619 * (int)v6) ^ (16777499 * *a2);
      if (v8 >= v9) {
        uint64_t v3 = v8 % v9;
      }
    }
    else
    {
      uint64_t v3 = (v9 - 1) & v8;
    }
    unint64_t v11 = *(uint64_t ***)(*(void *)a1 + 8 * v3);
    if (v11)
    {
      for (uint64_t i = *v11; i; uint64_t i = (uint64_t *)*i)
      {
        unint64_t v13 = i[1];
        if (v13 == v8)
        {
          if (i[2] == v5 && *((_DWORD *)i + 6) == v6) {
            return 0;
          }
        }
        else
        {
          if (v10.u32[0] > 1uLL)
          {
            if (v13 >= v9) {
              v13 %= v9;
            }
          }
          else
          {
            v13 &= v9 - 1;
          }
          if (v13 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t v15 = operator new(0x28uLL);
  *uint64_t v15 = 0;
  v15[1] = v8;
  v15[2] = v5;
  void v15[3] = v26;
  void v15[4] = v7;
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v9 || (float)(v17 * (float)v9) < v16)
  {
    BOOL v18 = 1;
    if (v9 >= 3) {
      BOOL v18 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v9);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_1000DA8C4(a1, v21);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        uint64_t v3 = v8 % v9;
      }
      else {
        uint64_t v3 = v8;
      }
    }
    else
    {
      uint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v22 = *(void *)a1;
  float v23 = *(void **)(*(void *)a1 + 8 * v3);
  if (v23)
  {
    *uint64_t v15 = *v23;
LABEL_42:
    *float v23 = v15;
    goto LABEL_43;
  }
  *uint64_t v15 = *(void *)(a1 + 16);
  *(void *)(a1 + 1sub_100072180((void *)this + 6) = v15;
  *(void *)(v22 + 8 * vsub_1000719B4((void *)this + 3) = a1 + 16;
  if (*v15)
  {
    unint64_t v24 = *(void *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v24 >= v9) {
        v24 %= v9;
      }
    }
    else
    {
      v24 &= v9 - 1;
    }
    float v23 = (void *)(*(void *)a1 + 8 * v24);
    goto LABEL_42;
  }
LABEL_43:
  ++*(void *)(a1 + 24);
  return 1;
}

void sub_1000BDD78(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::Tables::AddExtension(uint64_t **this, const google::protobuf::FieldDescriptor *a2)
{
  unint64_t v3 = *((void *)a2 + 10);
  int v4 = *((_DWORD *)a2 + 17);
  unint64_t v21 = v3;
  int v22 = v4;
  float v23 = a2;
  sub_1000DC8C4(this + 48, &v21, (uint64_t)&v21);
  char v6 = v5;
  if (v5)
  {
    unint64_t v8 = this[61];
    uint64_t v7 = this[62];
    if (v8 >= v7)
    {
      uint8x8_t v10 = this[60];
      uint64_t v11 = ((char *)v8 - (char *)v10) >> 4;
      unint64_t v12 = v11 + 1;
      if ((unint64_t)(v11 + 1) >> 60) {
        sub_100078F84();
      }
      uint64_t v13 = (char *)v7 - (char *)v10;
      if (v13 >> 3 > v12) {
        unint64_t v12 = v13 >> 3;
      }
      if ((unint64_t)v13 >= 0x7FFFFFFFFFFFFFF0) {
        unint64_t v14 = 0xFFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v14 = v12;
      }
      if (v14) {
        uint64_t v15 = (char *)sub_10007902C((uint64_t)(this + 62), v14);
      }
      else {
        uint64_t v15 = 0;
      }
      float v16 = &v15[16 * v11];
      float v17 = (uint64_t *)&v15[16 * v14];
      *(void *)float v16 = v3;
      *((_DWORD *)v16 + sub_100072180((void *)this + 2) = v4;
      unint64_t v9 = (uint64_t *)(v16 + 16);
      unint64_t v19 = this[60];
      BOOL v18 = this[61];
      if (v18 != v19)
      {
        do
        {
          *((_OWORD *)v16 - sub_1000333D0((uint64_t *)this + 1) = *((_OWORD *)v18 - 1);
          v16 -= 16;
          v18 -= 2;
        }
        while (v18 != v19);
        BOOL v18 = this[60];
      }
      this[60] = (uint64_t *)v16;
      this[61] = v9;
      this[62] = v17;
      if (v18) {
        operator delete(v18);
      }
    }
    else
    {
      *unint64_t v8 = v3;
      *((_DWORD *)v8 + sub_100072180((void *)this + 2) = v4;
      unint64_t v9 = v8 + 2;
    }
    this[61] = v9;
  }
  return v6 & 1;
}

void google::protobuf::DescriptorPool::Tables::AllocateString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a3;
  operator new();
}

void sub_1000BDFC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  sub_1000DB74C((uint64_t)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorPool::Tables::AllocateEmptyString(google::protobuf::DescriptorPool::Tables *this)
{
}

void sub_1000BE100(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DB74C((uint64_t)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorPool::Tables::AllocateOnceDynamic(google::protobuf::DescriptorPool::Tables *this)
{
}

void sub_1000BE210(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1000DBDDC((uint64_t)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorPool::Tables::AllocateFileTables(google::protobuf::DescriptorPool::Tables *this)
{
}

void sub_1000BE35C()
{
}

uint64_t google::protobuf::DescriptorPool::Tables::AllocateBytes(google::protobuf::DescriptorPool::Tables *this, int a2)
{
  int v6 = a2;
  if (!a2) {
    return 0;
  }
  unint64_t v3 = *((void *)this + 24);
  if (v3 >= *((void *)this + 25))
  {
    uint64_t v4 = sub_1000DC9B8((uint64_t *)this + 23, &v6);
  }
  else
  {
    sub_1000DCAC0(*((void **)this + 24), a2);
    uint64_t v4 = v3 + 24;
    *((void *)this + 24) = v3 + 24;
  }
  *((void *)this + 24) = v4;
  return *(void *)(v4 - 24);
}

void sub_1000BE3F0(_Unwind_Exception *a1)
{
  *(void *)(v1 + 19sub_100072180((void *)this + 2) = v2;
  _Unwind_Resume(a1);
}

void google::protobuf::FileDescriptorTables::BuildLocationsByPath(void *a1)
{
  uint64_t v1 = *(unsigned int *)(a1[1] + 24);
  if ((int)v1 >= 1)
  {
    uint64_t v3 = 0;
    uint64_t v4 = 8 * v1;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(a1[1] + 32) + v3 + 8);
      uint64_t v6 = *a1 + 280;
      sub_1000BE4E0(",", (int *)(v5 + 24), &__p);
      p_p = &__p;
      *((void *)sub_1000DCC40(v6, (unsigned __int8 *)&__p, (uint64_t)&unk_10017F9D8, (long long **)&p_p) + sub_100050800((void *)this + 5) = v5;
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      v3 += 8;
    }
    while (v4 != v3);
  }
}

void sub_1000BE4C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1000BE4E0@<X0>(std::string::value_type *__s@<X1>, int *a2@<X0>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  return sub_1000DCB78(*((std::string **)a2 + 1), (std::string *)(*((void *)a2 + 1) + 4 * *a2), __s, a3);
}

void sub_1000BE524(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FileDescriptorTables::GetSourceLocation(uint64_t a1, std::string **a2, uint64_t a3)
{
  v11[0] = a1;
  v11[1] = a3;
  uint64_t v5 = (std::once_flag::_State_type *)(a1 + 272);
  uint8x8_t v10 = v11;
  if (atomic_load_explicit((atomic_ullong *volatile)v5, memory_order_acquire) != -1)
  {
    __p.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FileDescriptorTables::BuildLocationsByPath;
    __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v10;
    p_p = &__p;
    std::__call_once(v5, &p_p, (void (__cdecl *)(void *))sub_1000DCECC);
  }
  sub_1000BE620(",", a2, &__p);
  uint64_t v6 = sub_1000DCEDC((void *)(a1 + 280), (unsigned __int8 *)&__p);
  if (v6) {
    uint64_t v7 = *((void *)v6 + 5);
  }
  else {
    uint64_t v7 = 0;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  return v7;
}

void sub_1000BE604(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

std::string *sub_1000BE620@<X0>(std::string::value_type *__s@<X1>, std::string **a2@<X0>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  return sub_1000DCB78(*a2, a2[1], __s, a3);
}

void sub_1000BE65C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorPool::DescriptorPool()
{
}

void sub_1000BE72C()
{
}

void google::protobuf::DescriptorPool::~DescriptorPool(google::protobuf::DescriptorPool *this)
{
  uint64_t v2 = *(char **)this;
  if (v2)
  {
    std::mutex::~mutex((std::mutex *)v2);
    operator delete();
  }
  sub_1000DD030((uint64_t)this + 48, *((char **)this + 7));
  sub_1000DCFE0((google::protobuf::DescriptorPool::Tables **)this + 4, 0);
}

uint64_t sub_1000BE7AC()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBA10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001EBA10))
  {
    operator new();
  }
  return qword_1001EBA08;
}

void sub_1000BE83C()
{
}

uint64_t google::protobuf::DescriptorPool::internal_generated_pool(google::protobuf::DescriptorPool *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1001EBA00, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1001EBA00))
  {
    sub_1000BE904();
  }
  return qword_1001EB9F8;
}

void sub_1000BE8EC(_Unwind_Exception *a1)
{
}

void sub_1000BE904()
{
}

void sub_1000BE95C()
{
}

uint64_t google::protobuf::DescriptorPool::generated_pool(google::protobuf::DescriptorPool *this)
{
  uint64_t v1 = google::protobuf::DescriptorPool::internal_generated_pool(this);
  google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
  return v1;
}

void google::protobuf::DescriptorPool::InternalAddGeneratedFile(google::protobuf::DescriptorPool *this, const void *a2)
{
  int v2 = (int)a2;
  uint64_t v4 = (google::protobuf::EncodedDescriptorDatabase *)sub_1000BE7AC();
  if ((google::protobuf::EncodedDescriptorDatabase::Add(v4, (char *)this, v2) & 1) == 0)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v7, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 1371);
    uint64_t v5 = google::protobuf::internal::LogMessage::operator<<(v7, "CHECK failed: GeneratedDatabase()->Add(encoded_file_descriptor, size): ");
    google::protobuf::internal::LogFinisher::operator=((int)&v6, (const char **)&v5->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v7[0].__r_.__value_.__l.__data_);
  }
}

void sub_1000BEA34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::FindFileByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v5 = *(std::mutex **)a1;
  if (*(void *)a1) {
    std::mutex::lock(*(std::mutex **)a1);
  }
  if (*(void *)(a1 + 8))
  {
    sub_1000DC38C(*(void *)(a1 + 32) + 64);
    sub_1000DC38C(*(void *)(a1 + 32) + 24);
  }
  uint64_t v6 = *(void *)(a1 + 32);
  sub_1000BB974(&v17, a2, a3);
  long long v18 = v17;
  uint64_t v7 = sub_1000D7974((void *)(v6 + 344), (char **)&v18);
  if (!v7 || (uint64_t FileByName = v7[4]) == 0)
  {
    uint64_t v10 = *(void *)(a1 + 24);
    if (!v10 || (uint64_t FileByName = google::protobuf::DescriptorPool::FindFileByName(v10, a2)) == 0)
    {
      sub_1000BB974(v16, a2, v8);
      if (!google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase((google::protobuf::DescriptorPool *)a1, v16[0], v16[1])|| (uint64_t v12 = *(void *)(a1 + 32), sub_1000BB974(&v15, a2, v11), v18 = v15, (v13 = sub_1000D7974((void *)(v12 + 344), (char **)&v18)) == 0)|| (FileByName = v13[4]) == 0)
      {
        uint64_t FileByName = 0;
      }
    }
  }
  if (v5) {
    std::mutex::unlock(v5);
  }
  return FileByName;
}

void sub_1000BEB58(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::mutex::unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(google::protobuf::DescriptorPool *a1, uint64_t a2, uint64_t a3)
{
  v9[0] = a2;
  v9[1] = a3;
  if (!*((void *)a1 + 1)) {
    return 0;
  }
  sub_1000D7AF4((uint64_t)v9, v7);
  if (sub_1000DD0D4((void *)(*((void *)a1 + 4) + 24), (unsigned __int8 *)v7))
  {
    uint64_t v4 = 0;
  }
  else
  {
    google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v6, 0);
    if ((*(unsigned int (**)(void, void **, unsigned char *))(**((void **)a1 + 1) + 16))(*((void *)a1 + 1), v7, v6)&& google::protobuf::DescriptorPool::BuildFileFromDatabase(a1, (const google::protobuf::FileDescriptorProto *)v6))
    {
      uint64_t v4 = 1;
    }
    else
    {
      sub_1000DD1D8(*((void *)a1 + 4) + 24, (unsigned __int8 *)v7, (uint64_t)v7);
      uint64_t v4 = 0;
    }
    google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v6);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  return v4;
}

void sub_1000BEC60(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 - 33) < 0) {
    operator delete(*(void **)(v1 - 56));
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000BEC8C(uint64_t a1)
{
  switch(*(_DWORD *)a1)
  {
    case 1:
    case 4:
    case 6:
      uint64_t v1 = *(void *)(a1 + 8);
      goto LABEL_7;
    case 2:
      uint64_t v3 = (uint64_t *)(*(void *)(a1 + 8) + 40);
      goto LABEL_8;
    case 3:
    case 7:
      uint64_t v1 = *(void *)(*(void *)(a1 + 8) + 16);
      goto LABEL_7;
    case 5:
      uint64_t v1 = *(void *)(*(void *)(a1 + 8) + 24);
LABEL_7:
      uint64_t v3 = (uint64_t *)(v1 + 16);
      goto LABEL_8;
    case 8:
      uint64_t v3 = (uint64_t *)(a1 + 8);
LABEL_8:
      uint64_t result = *v3;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t google::protobuf::DescriptorPool::FindMessageTypeByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  sub_1000BB974(v7, a2, a3);
  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(v4, a1, v7[0], (uint64_t)v7[1]) == 1) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t google::protobuf::DescriptorPool::FindExtensionByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4 = *(void **)(a1 + 32);
  sub_1000BB974(v7, a2, a3);
  if (google::protobuf::DescriptorPool::Tables::FindByNameHelper(v4, a1, v7[0], (uint64_t)v7[1]) != 2) {
    return 0;
  }
  uint64_t result = v5;
  if (!*(unsigned char *)(v5 + 67)) {
    return 0;
  }
  return result;
}

uint64_t google::protobuf::DescriptorPool::FindExtensionByNumber(std::mutex **this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  if (!*((_DWORD *)a2 + 31)) {
    return 0;
  }
  uint64_t v6 = *this;
  if (!*this) {
    goto LABEL_10;
  }
  std::mutex::lock(*this);
  uint64_t v7 = this[4];
  long long v17 = a2;
  uint64_t v18 = a3;
  char v8 = sub_1000D7B44((uint64_t)&v7[6], (unint64_t *)&v17);
  if (v7[6].__m_.__opaque == (char *)v8)
  {
    std::mutex::unlock(v6);
  }
  else
  {
    uint64_t ExtensionByNumber = v8[6];
    std::mutex::unlock(v6);
    if (ExtensionByNumber) {
      return ExtensionByNumber;
    }
  }
  uint64_t v6 = *this;
  if (*this)
  {
    std::mutex::lock(*this);
    char v10 = 0;
  }
  else
  {
LABEL_10:
    char v10 = 1;
  }
  if (this[1])
  {
    sub_1000DC38C((uint64_t)&this[4][1]);
    sub_1000DC38C((uint64_t)&this[4]->__m_.__opaque[16]);
  }
  uint64_t v11 = this[4];
  long long v17 = a2;
  uint64_t v18 = a3;
  uint64_t v12 = sub_1000D7B44((uint64_t)&v11[6], (unint64_t *)&v17);
  if (v11[6].__m_.__opaque == (char *)v12 || (uint64_t ExtensionByNumber = v12[6]) == 0)
  {
    uint64_t v13 = (google::protobuf::DescriptorPool *)this[3];
    if (!v13 || (uint64_t ExtensionByNumber = google::protobuf::DescriptorPool::FindExtensionByNumber(v13, a2, a3)) == 0)
    {
      if (!google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase((google::protobuf::DescriptorPool *)this, a2, a3)|| (unint64_t v14 = this[4], v17 = a2, v18 = a3, v15 = sub_1000D7B44((uint64_t)&v14[6], (unint64_t *)&v17), v14[6].__m_.__opaque == (char *)v15)|| (ExtensionByNumber = v15[6]) == 0)
      {
        uint64_t ExtensionByNumber = 0;
      }
    }
  }
  if ((v10 & 1) == 0) {
    std::mutex::unlock(v6);
  }
  return ExtensionByNumber;
}

void sub_1000BEF48(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::DescriptorPool::TryFindExtensionInFallbackDatabase(google::protobuf::DescriptorPool *this, const google::protobuf::Descriptor *a2, uint64_t a3)
{
  if (!*((void *)this + 1)) {
    return 0;
  }
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)v12, 0);
  BOOL v9 = ((*(uint64_t (**)(void, void, uint64_t, unsigned char *))(**((void **)this + 1) + 32))(*((void *)this + 1), *((void *)a2 + 1), a3, v12) & 1) != 0&& ((v7 = *((void *)this + 4), sub_1000BB974(&v11, (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFELL), v6), v14 = v11, (v8 = sub_1000D7974((void *)(v7 + 344), (char **)&v14)) == 0)|| !v8[4])&& google::protobuf::DescriptorPool::BuildFileFromDatabase(this, (const google::protobuf::FileDescriptorProto *)v12) != 0;
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)v12);
  return v9;
}

void sub_1000BF050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(google::protobuf::DescriptorPool *this, const google::protobuf::Descriptor *a2, unsigned int a3)
{
  if (!*((_DWORD *)a2 + 31)) {
    return 0;
  }
  uint64_t v6 = *((void *)this + 4);
  v10[0] = (unint64_t)a2;
  v10[1] = a3;
  uint64_t v7 = sub_1000D7B44(v6 + 384, v10);
  if ((uint64_t *)(v6 + 392) == v7 || (uint64_t result = v7[6]) == 0)
  {
    BOOL v9 = (google::protobuf::DescriptorPool *)*((void *)this + 3);
    if (!v9) {
      return 0;
    }
    uint64_t result = google::protobuf::DescriptorPool::InternalFindExtensionByNumberNoLock(v9, a2, a3);
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t google::protobuf::DescriptorPool::FindExtensionByPrintableName(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  if (!*(_DWORD *)(a2 + 124)) {
    return 0;
  }
  uint64_t result = google::protobuf::DescriptorPool::FindExtensionByName(a1, a3, (const char *)a3);
  if (result && *(void *)(result + 80) == a2) {
    return result;
  }
  if (!*(unsigned char *)(*(void *)(a2 + 32) + 72)) {
    return 0;
  }
  uint64_t result = google::protobuf::DescriptorPool::FindMessageTypeByName(a1, a3, v7);
  if (!result) {
    return result;
  }
  uint64_t v8 = result;
  int v9 = *(_DWORD *)(result + 128);
  if (v9 < 1) {
    return 0;
  }
  uint64_t v10 = 0;
  uint64_t v11 = 152 * v9;
  while (1)
  {
    uint64_t v12 = *(void *)(v8 + 80);
    if (*(void *)(v12 + v10 + 80) == a2)
    {
      uint64_t v13 = *(std::once_flag::_State_type **)(v12 + v10 + 48);
      if (v13)
      {
        uint64_t v14 = v12 + v10;
        long long v15 = google::protobuf::FieldDescriptor::TypeOnceInit;
        if (atomic_load_explicit((atomic_ullong *volatile)v13, memory_order_acquire) != -1)
        {
          v17[0] = &v15;
          v17[1] = &v14;
          float v16 = v17;
          std::__call_once(v13, &v16, (void (__cdecl *)(void *))sub_1000BB820);
        }
      }
      if (*(_DWORD *)(v12 + v10 + 56) == 11
        && *(_DWORD *)(v12 + v10 + 60) == 1
        && google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(v12 + v10)) == v8)
      {
        break;
      }
    }
    v10 += 152;
    if (v11 == v10) {
      return 0;
    }
  }
  return v12 + v10;
}

uint64_t sub_1000BF23C(uint64_t a1)
{
  int v2 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v2)
  {
    uint64_t v4 = a1;
    uint64_t v5 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v7[0] = &v5;
      v7[1] = &v4;
      uint64_t v6 = v7;
      std::__call_once(v2, &v6, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  return *(unsigned int *)(a1 + 56);
}

uint64_t google::protobuf::FieldDescriptor::message_type(google::protobuf::FieldDescriptor *this)
{
  int v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    uint64_t v4 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v6[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v6[1] = &v4;
      uint64_t v5 = v6;
      std::__call_once(v2, &v5, (void (__cdecl *)(void *))sub_1000E10A4);
    }
  }
  return *((void *)this + 13);
}

uint64_t google::protobuf::Descriptor::FindFieldByNumber(google::protobuf::Descriptor *this, int a2)
{
  int v2 = *(int8x8_t **)(*((void *)this + 2) + 144);
  int8x8_t v3 = v2[20];
  if (!*(void *)&v3) {
    return 0;
  }
  unint64_t v4 = (16777619 * a2) ^ (16777499 * (void)this);
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    uint64_t v6 = (16777619 * a2) ^ (16777499 * (void)this);
    if (v4 >= *(void *)&v3) {
      uint64_t v6 = v4 % *(void *)&v3;
    }
  }
  else
  {
    uint64_t v6 = (*(void *)&v3 - 1) & v4;
  }
  uint64_t v7 = *(uint64_t ***)(*(void *)&v2[19] + 8 * v6);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = *v7;
  if (!v8) {
    return 0;
  }
  while (1)
  {
    unint64_t v9 = v8[1];
    if (v4 == v9) {
      break;
    }
    if (v5.u32[0] > 1uLL)
    {
      if (v9 >= *(void *)&v3) {
        v9 %= *(void *)&v3;
      }
    }
    else
    {
      v9 &= *(void *)&v3 - 1;
    }
    if (v9 != v6) {
      return 0;
    }
LABEL_20:
    uint64_t v8 = (uint64_t *)*v8;
    if (!v8) {
      return 0;
    }
  }
  if ((google::protobuf::Descriptor *)v8[2] != this || *((_DWORD *)v8 + 6) != a2) {
    goto LABEL_20;
  }
  uint64_t v12 = v8[4];
  if (!v12) {
    return 0;
  }
  if (*(unsigned char *)(v12 + 67)) {
    return 0;
  }
  else {
    return v8[4];
  }
}

uint64_t google::protobuf::Descriptor::FindFieldByLowercaseName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 144);
  sub_1000BB974(&v8, a2, a3);
  long long v5 = v8;
  uint64_t v11 = v4;
  uint64_t v12 = google::protobuf::FileDescriptorTables::FieldsByLowercaseNamesLazyInitStatic;
  if (atomic_load_explicit((atomic_ullong *volatile)(v4 + 88), memory_order_acquire) != -1)
  {
    unint64_t v9 = &v12;
    *(void *)&long long v10 = &v11;
    uint64_t v13 = &v9;
    long long v7 = v5;
    std::__call_once((std::once_flag::_State_type *)(v4 + 88), &v13, (void (__cdecl *)(void *))sub_1000D7BD4);
    long long v5 = v7;
  }
  unint64_t v9 = (uint64_t (**)(google::protobuf::FileDescriptorTables *__hidden, const google::protobuf::FileDescriptorTables *))a1;
  long long v10 = v5;
  uint64_t result = sub_1000BD7A0((void *)(v4 + 40), &v9);
  if (result)
  {
    if (*(unsigned char *)(result + 67)) {
      return 0;
    }
  }
  return result;
}

uint64_t google::protobuf::Descriptor::FindFieldByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4 = *(void **)(*(void *)(a1 + 16) + 144);
  sub_1000BB974(&v17, a2, a3);
  long long v5 = v17;
  v19[0] = a1;
  v19[1] = v17;
  v19[2] = v18;
  if (v18 < 1)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = 5 * v6 + v7;
    }
    while (v5 < &v17[v18]);
  }
  int8x8_t v8 = (int8x8_t)v4[1];
  if (!*(void *)&v8) {
    return 0;
  }
  unint64_t v9 = v6 ^ (16777619 * a1);
  uint8x8_t v10 = (uint8x8_t)vcnt_s8(v8);
  v10.i16[0] = vaddlv_u8(v10);
  unint64_t v11 = v10.u32[0];
  if (v10.u32[0] > 1uLL)
  {
    uint64_t v12 = v6 ^ (16777619 * a1);
    if (v9 >= *(void *)&v8) {
      uint64_t v12 = v9 % *(void *)&v8;
    }
  }
  else
  {
    uint64_t v12 = (*(void *)&v8 - 1) & v9;
  }
  uint64_t v13 = *(uint64_t ***)(*v4 + 8 * v12);
  if (!v13) {
    return 0;
  }
  uint64_t v14 = *v13;
  if (!*v13) {
    return 0;
  }
  while (1)
  {
    unint64_t v15 = v14[1];
    if (v9 == v15) {
      break;
    }
    if (v11 > 1)
    {
      if (v15 >= *(void *)&v8) {
        v15 %= *(void *)&v8;
      }
    }
    else
    {
      v15 &= *(void *)&v8 - 1;
    }
    if (v15 != v12) {
      return 0;
    }
LABEL_21:
    uint64_t v14 = (uint64_t *)*v14;
    if (!v14) {
      return 0;
    }
  }
  if (!sub_1000D7BE8((uint64_t)(v4 + 4), v14 + 2, v19)) {
    goto LABEL_21;
  }
  if (*((_DWORD *)v14 + 10) != 2) {
    return 0;
  }
  if (*(unsigned char *)(v14[6] + 67)) {
    return 0;
  }
  else {
    return v14[6];
  }
}

uint64_t google::protobuf::Descriptor::map_key(google::protobuf::Descriptor *this)
{
  if (*(unsigned char *)(*((void *)this + 4) + 75)) {
    return *((void *)this + 5);
  }
  else {
    return 0;
  }
}

uint64_t google::protobuf::Descriptor::map_value(google::protobuf::Descriptor *this)
{
  if (*(unsigned char *)(*((void *)this + 4) + 75)) {
    return *((void *)this + 5) + 152;
  }
  else {
    return 0;
  }
}

uint64_t google::protobuf::EnumDescriptor::FindValueByName(uint64_t a1, uint64_t *a2, const char *a3)
{
  uint64_t v4 = *(void **)(*(void *)(a1 + 16) + 144);
  sub_1000BB974(&v17, a2, a3);
  long long v5 = v17;
  v19[0] = a1;
  v19[1] = v17;
  v19[2] = v18;
  if (v18 < 1)
  {
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = 5 * v6 + v7;
    }
    while (v5 < &v17[v18]);
  }
  int8x8_t v8 = (int8x8_t)v4[1];
  if (!*(void *)&v8) {
    return 0;
  }
  unint64_t v9 = v6 ^ (16777619 * a1);
  uint8x8_t v10 = (uint8x8_t)vcnt_s8(v8);
  v10.i16[0] = vaddlv_u8(v10);
  unint64_t v11 = v10.u32[0];
  if (v10.u32[0] > 1uLL)
  {
    uint64_t v12 = v6 ^ (16777619 * a1);
    if (v9 >= *(void *)&v8) {
      uint64_t v12 = v9 % *(void *)&v8;
    }
  }
  else
  {
    uint64_t v12 = (*(void *)&v8 - 1) & v9;
  }
  uint64_t v13 = *(uint64_t ***)(*v4 + 8 * v12);
  if (!v13) {
    return 0;
  }
  uint64_t v14 = *v13;
  if (!*v13) {
    return 0;
  }
  while (1)
  {
    unint64_t v15 = v14[1];
    if (v9 == v15) {
      break;
    }
    if (v11 > 1)
    {
      if (v15 >= *(void *)&v8) {
        v15 %= *(void *)&v8;
      }
    }
    else
    {
      v15 &= *(void *)&v8 - 1;
    }
    if (v15 != v12) {
      return 0;
    }
LABEL_21:
    uint64_t v14 = (uint64_t *)*v14;
    if (!v14) {
      return 0;
    }
  }
  if (!sub_1000D7BE8((uint64_t)(v4 + 4), v14 + 2, v19)) {
    goto LABEL_21;
  }
  if (*((_DWORD *)v14 + 10) == 5) {
    return v14[6];
  }
  else {
    return 0;
  }
}

uint64_t google::protobuf::EnumDescriptor::FindValueByNumber(google::protobuf::EnumDescriptor *this, unsigned int a2)
{
  int v2 = (void *)(*(void *)(*((void *)this + 2) + 144) + 192);
  v4[0] = this;
  v4[1] = a2;
  return sub_1000D7C50(v2, (uint64_t)v4);
}

uint64_t google::protobuf::EnumDescriptor::FindValueByNumberCreatingIfUnknown(google::protobuf::EnumDescriptor *this, uint64_t a2)
{
  return sub_1000BF82C(*(std::mutex **)(*((void *)this + 2) + 144), (std::string::size_type)this, a2);
}

uint64_t sub_1000BF82C(std::mutex *a1, std::string::size_type a2, uint64_t a3)
{
  std::string::size_type v6 = a3;
  v17.__r_.__value_.__r.__words[0] = a2;
  v17.__r_.__value_.__l.__size_ = a3;
  uint64_t v7 = sub_1000D7C50(&a1[3].__m_.__sig, (uint64_t)&v17);
  if (!v7)
  {
    int8x8_t v8 = a1 + 5;
    std::mutex::lock(a1 + 5);
    unint64_t v9 = &a1[3].__m_.__opaque[32];
    v17.__r_.__value_.__r.__words[0] = a2;
    v17.__r_.__value_.__l.__size_ = v6;
    uint64_t v7 = sub_1000D7D2C(v9, (uint64_t)&v17);
    std::mutex::unlock(v8);
    if (!v7)
    {
      std::mutex::lock(v8);
      v17.__r_.__value_.__r.__words[0] = a2;
      v17.__r_.__value_.__l.__size_ = v6;
      uint64_t v7 = sub_1000D7D2C(v9, (uint64_t)&v17);
      if (!v7)
      {
        uint8x8_t v10 = *(void **)a2;
        if (*(char *)(*(void *)a2 + 23) < 0) {
          uint8x8_t v10 = (void *)*v10;
        }
        unint64_t v11 = google::protobuf::StringPrintf((google::protobuf *)"UNKNOWN_ENUM_VALUE_%s_%d", &v17, v10, a3);
        uint64_t v12 = google::protobuf::DescriptorPool::internal_generated_pool((google::protobuf::DescriptorPool *)v11);
        google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_google_2fprotobuf_2fdescriptor_2eproto, 0);
        uint64_t v13 = *(google::protobuf::DescriptorPool::Tables **)(v12 + 32);
        uint64_t v16[2] = google::protobuf::DescriptorPool::Tables::AllocateBytes(v13, 40);
        sub_1000BB974(v16, (uint64_t *)&v17, v14);
        google::protobuf::DescriptorPool::Tables::AllocateString((uint64_t)v13, v16[0], v16[1]);
      }
      std::mutex::unlock(v8);
    }
  }
  return v7;
}

void sub_1000BFA74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34)
{
  if (a34 < 0) {
    operator delete(__p);
  }
  std::mutex::unlock(v34);
  _Unwind_Resume(a1);
}

void google::protobuf::Descriptor::ExtensionRange::CopyTo(google::protobuf::Descriptor::ExtensionRange *this, google::protobuf::DescriptorProto_ExtensionRange *a2)
{
  int v4 = *(_DWORD *)this;
  int v5 = *((_DWORD *)a2 + 4);
  *((_DWORD *)a2 + 4) = v5 | 2;
  int v6 = *((_DWORD *)this + 1);
  *((_DWORD *)a2 + 4) = v5 | 6;
  *((_DWORD *)a2 + 8) = v4;
  *((_DWORD *)a2 + sub_100072180((void *)this + 9) = v6;
  uint64_t v7 = (void *)*((void *)this + 1);
  if (v7 != google::protobuf::ExtensionRangeOptions::default_instance(this))
  {
    int8x8_t v8 = (const google::protobuf::ExtensionRangeOptions *)*((void *)this + 1);
    *((_DWORD *)a2 + 4) |= 1u;
    unint64_t v9 = (google::protobuf::ExtensionRangeOptions *)*((void *)a2 + 3);
    if (!v9)
    {
      uint64_t v10 = *((void *)a2 + 1);
      unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFELL);
      if (v10) {
        unint64_t v11 = (void *)*v11;
      }
      unint64_t v9 = (google::protobuf::ExtensionRangeOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ExtensionRangeOptions>(v11);
      *((void *)a2 + sub_1000719B4((void *)this + 3) = v9;
    }
    google::protobuf::ExtensionRangeOptions::CopyFrom(v9, v8);
  }
}

_DWORD *google::protobuf::Descriptor::FindExtensionRangeContainingNumber(google::protobuf::Descriptor *this, int a2)
{
  uint64_t v2 = *((unsigned int *)this + 31);
  if ((int)v2 < 1) {
    return 0;
  }
  for (uint64_t result = (_DWORD *)*((void *)this + 9); *result > a2 || result[1] <= a2; result += 4)
  {
    if (!--v2) {
      return 0;
    }
  }
  return result;
}

_DWORD *google::protobuf::Descriptor::FindReservedRangeContainingNumber(google::protobuf::Descriptor *this, int a2)
{
  uint64_t v2 = *((unsigned int *)this + 33);
  if ((int)v2 < 1) {
    return 0;
  }
  for (uint64_t result = (_DWORD *)*((void *)this + 11); *result > a2 || result[1] <= a2; result += 2)
  {
    if (!--v2) {
      return 0;
    }
  }
  return result;
}

google::protobuf::FileDescriptor *google::protobuf::DescriptorPool::BuildFileFromDatabase(google::protobuf::DescriptorPool *this, const google::protobuf::FileDescriptorProto *a2)
{
  if (sub_1000DD0D4((void *)(*((void *)this + 4) + 24), (unsigned __int8 *)(*((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL)))
  {
    return 0;
  }
  google::protobuf::DescriptorBuilder::DescriptorBuilder((uint64_t)v6, (uint64_t)this, *((void *)this + 4), *((void *)this + 2));
  int v4 = google::protobuf::DescriptorBuilder::BuildFile((google::protobuf::DescriptorBuilder *)v6, a2);
  google::protobuf::DescriptorBuilder::~DescriptorBuilder(v6);
  if (!v4) {
    sub_1000DDA3C(*((void *)this + 4) + 24, (unsigned __int8 *)(*((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL), *((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL);
  }
  return v4;
}

void sub_1000BFCA8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  google::protobuf::DescriptorBuilder::~DescriptorBuilder((void **)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  sub_1000D7AF4((uint64_t)&v15, &__str);
  std::string::size_type v4 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
  if (v4 == -1)
  {
LABEL_8:
    uint64_t v9 = *(void *)(a1 + 24);
    if (v9) {
      uint64_t IsSubSymbolOfBuiltType = google::protobuf::DescriptorPool::IsSubSymbolOfBuiltType(v9, v15, v16);
    }
    else {
      uint64_t IsSubSymbolOfBuiltType = 0;
    }
  }
  else
  {
    std::string::size_type v5 = v4;
    while (1)
    {
      std::string::basic_string(&v13, &__str, 0, v5, (std::allocator<char> *)&v17);
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
      std::string __str = v13;
      uint64_t v7 = *(void *)(a1 + 32);
      sub_1000BB974(&v12, (uint64_t *)&__str, v6);
      *(_OWORD *)&v13.__r_.__value_.__l.__data_ = v12;
      int8x8_t v8 = sub_1000D7974((void *)(v7 + 304), &v13.__r_.__value_.__l.__data_);
      if (v8)
      {
        if ((*((_DWORD *)v8 + 8) | 8) != 8) {
          break;
        }
      }
      std::string::size_type v5 = std::string::rfind(&__str, 46, 0xFFFFFFFFFFFFFFFFLL);
      if (v5 == -1) {
        goto LABEL_8;
      }
    }
    uint64_t IsSubSymbolOfBuiltType = 1;
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
  return IsSubSymbolOfBuiltType;
}

void sub_1000BFDD0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::is_map_message_type(google::protobuf::FieldDescriptor *this)
{
  return *(unsigned __int8 *)(*(void *)(*((void *)this + 13) + 32) + 75);
}

void google::protobuf::FieldDescriptor::DefaultValueAsString(google::protobuf::FieldDescriptor *this@<X0>, char *a2@<X1>, char *a3@<X2>, std::string *a4@<X8>)
{
  int v4 = (int)a2;
  if (!*((unsigned char *)this + 64))
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v31, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 1982);
    uint64_t v7 = google::protobuf::internal::LogMessage::operator<<(&v31, "CHECK failed: has_default_value(): ");
    int8x8_t v8 = google::protobuf::internal::LogMessage::operator<<(v7, "No default value");
    google::protobuf::internal::LogFinisher::operator=((int)&v28, (const char **)&v8->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v31.__r_.__value_.__l.__data_);
  }
  uint64_t v9 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v9)
  {
    uint64_t v29 = this;
    unint64_t v30 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v9, memory_order_acquire) != -1)
    {
      v31.__r_.__value_.__r.__words[0] = (std::string::size_type)&v30;
      v31.__r_.__value_.__l.__size_ = (std::string::size_type)&v29;
      v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v31;
      std::__call_once(v9, &v28, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  int v10 = *((_DWORD *)this + 14);
  switch(v10)
  {
    case 1:
      google::protobuf::SimpleDtoa(*((double *)this + 18), a2, a4);
      break;
    case 2:
      google::protobuf::SimpleFtoa(*((float *)this + 36), a2, a4);
      break;
    case 3:
    case 16:
    case 18:
      uint64_t v12 = *((void *)this + 18);
      v31.__r_.__value_.__r.__words[0] = (std::string::size_type)&v31.__r_.__value_.__r.__words[2];
      v31.__r_.__value_.__l.__size_ = google::protobuf::FastInt64ToBufferLeft(v12, &v31.__r_.__value_.__s.__data_[16], a3)- (unsigned char *)&v31.__r_.__value_.__r.__words[2];
      sub_1000BB9D8(a4, v31.__r_.__value_.__l.__data_, v31.__r_.__value_.__l.__size_);
      break;
    case 4:
    case 6:
      uint64_t v14 = (google::protobuf *)*((void *)this + 18);
      v31.__r_.__value_.__r.__words[0] = (std::string::size_type)&v31.__r_.__value_.__r.__words[2];
      v31.__r_.__value_.__l.__size_ = google::protobuf::FastUInt64ToBufferLeft(v14, &v31.__r_.__value_.__s.__data_[16], a3)- (unsigned char *)&v31.__r_.__value_.__r.__words[2];
      sub_1000BB9D8(a4, v31.__r_.__value_.__l.__data_, v31.__r_.__value_.__l.__size_);
      break;
    case 5:
    case 15:
    case 17:
      unint64_t v11 = (google::protobuf *)*((unsigned int *)this + 36);
      v31.__r_.__value_.__r.__words[0] = (std::string::size_type)&v31.__r_.__value_.__r.__words[2];
      v31.__r_.__value_.__l.__size_ = google::protobuf::FastInt32ToBufferLeft(v11, &v31.__r_.__value_.__s.__data_[16], a3)- (unsigned char *)&v31.__r_.__value_.__r.__words[2];
      sub_1000BB9D8(a4, v31.__r_.__value_.__l.__data_, v31.__r_.__value_.__l.__size_);
      break;
    case 7:
    case 13:
      std::string v13 = (google::protobuf *)*((unsigned int *)this + 36);
      v31.__r_.__value_.__r.__words[0] = (std::string::size_type)&v31.__r_.__value_.__r.__words[2];
      v31.__r_.__value_.__l.__size_ = google::protobuf::FastUInt32ToBufferLeft(v13, &v31.__r_.__value_.__s.__data_[16], a3)- (unsigned char *)&v31.__r_.__value_.__r.__words[2];
      sub_1000BB9D8(a4, v31.__r_.__value_.__l.__data_, v31.__r_.__value_.__l.__size_);
      break;
    case 8:
      if (*((unsigned char *)this + 144)) {
        uint64_t v15 = "true";
      }
      else {
        uint64_t v15 = "false";
      }
      sub_1000BBA84(a4, v15);
      break;
    case 9:
    case 12:
      if (v4)
      {
        google::protobuf::CEscape(*((uint64_t **)this + 18), a3, &v28);
        unint64_t v20 = std::string::insert(&v28, 0, "\"");
        long long v21 = *(_OWORD *)&v20->__r_.__value_.__l.__data_;
        v31.__r_.__value_.__r.__words[2] = v20->__r_.__value_.__r.__words[2];
        *(_OWORD *)&v31.__r_.__value_.__l.__data_ = v21;
        v20->__r_.__value_.__l.__size_ = 0;
        v20->__r_.__value_.__r.__words[2] = 0;
        v20->__r_.__value_.__r.__words[0] = 0;
        int v22 = std::string::append(&v31, "\"");
        long long v23 = *(_OWORD *)&v22->__r_.__value_.__l.__data_;
        a4->__r_.__value_.__r.__words[2] = v22->__r_.__value_.__r.__words[2];
        *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v23;
        v22->__r_.__value_.__l.__size_ = 0;
        v22->__r_.__value_.__r.__words[2] = 0;
        v22->__r_.__value_.__r.__words[0] = 0;
        if (SHIBYTE(v31.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v31.__r_.__value_.__l.__data_);
        }
        if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v28.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        uint64_t v26 = (std::once_flag::_State_type *)*((void *)this + 6);
        if (v26)
        {
          uint64_t v29 = this;
          unint64_t v30 = google::protobuf::FieldDescriptor::TypeOnceInit;
          if (atomic_load_explicit((atomic_ullong *volatile)v26, memory_order_acquire) != -1)
          {
            v31.__r_.__value_.__r.__words[0] = (std::string::size_type)&v30;
            v31.__r_.__value_.__l.__size_ = (std::string::size_type)&v29;
            v28.__r_.__value_.__r.__words[0] = (std::string::size_type)&v31;
            std::__call_once(v26, &v28, (void (__cdecl *)(void *))sub_1000BB820);
          }
          int v10 = *((_DWORD *)this + 14);
        }
        size_t v27 = (long long *)*((void *)this + 18);
        if (v10 == 12)
        {
          google::protobuf::CEscape((uint64_t *)v27, a3, a4);
        }
        else
        {
          if ((*((char *)v27 + 23) & 0x80000000) == 0)
          {
            long long v18 = *v27;
            std::string::size_type v19 = *((void *)v27 + 2);
            goto LABEL_35;
          }
          sub_1000BB834(a4, *(void **)v27, *((void *)v27 + 1));
        }
      }
      break;
    case 10:
    case 11:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v31, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 2020);
      unint64_t v24 = google::protobuf::internal::LogMessage::operator<<(&v31, "Messages can't have default values!");
      google::protobuf::internal::LogFinisher::operator=((int)&v28, (const char **)&v24->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v31.__r_.__value_.__l.__data_);
      goto LABEL_25;
    case 14:
      uint64_t v16 = google::protobuf::FieldDescriptor::default_value_enum(this);
      char v17 = *(long long **)v16;
      if (*(char *)(*(void *)v16 + 23) < 0)
      {
        sub_1000BB834(a4, *(void **)v17, *((void *)v17 + 1));
      }
      else
      {
        long long v18 = *v17;
        std::string::size_type v19 = *((void *)v17 + 2);
LABEL_35:
        a4->__r_.__value_.__r.__words[2] = v19;
        *(_OWORD *)&a4->__r_.__value_.__l.__data_ = v18;
      }
      break;
    default:
LABEL_25:
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)&v31, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 2023);
      long long v25 = google::protobuf::internal::LogMessage::operator<<(&v31, "Can't get here: failed to get default value as string");
      google::protobuf::internal::LogFinisher::operator=((int)&v28, (const char **)&v25->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v31.__r_.__value_.__l.__data_);
      sub_1000BBA84(a4, "");
      break;
  }
}

void sub_1000C0234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a15 < 0) {
    operator delete(a10);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FieldDescriptor::default_value_enum(google::protobuf::FieldDescriptor *this)
{
  uint64_t v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    int v4 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v6[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v6[1] = &v4;
      std::string::size_type v5 = v6;
      std::__call_once(v2, &v5, (void (__cdecl *)(void *))sub_1000E10A4);
    }
  }
  return *((void *)this + 18);
}

void google::protobuf::FileDescriptor::CopyTo(google::protobuf::FileDescriptor *this, google::protobuf::FileDescriptorProto *a2)
{
  uint64_t v4 = *(void *)this;
  *((_DWORD *)a2 + 4) |= 1u;
  uint64_t v5 = *((void *)a2 + 1);
  int v6 = (google::protobuf::Arena *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    int v6 = *(google::protobuf::Arena **)v6;
  }
  uint64_t v7 = google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 22, v4, v6);
  uint64_t v8 = *((void *)this + 1);
  if (*(char *)(v8 + 23) < 0)
  {
    if (!*(void *)(v8 + 8)) {
      goto LABEL_10;
    }
  }
  else if (!*(unsigned char *)(v8 + 23))
  {
    goto LABEL_10;
  }
  *((_DWORD *)a2 + 4) |= 2u;
  uint64_t v9 = *((void *)a2 + 1);
  int v10 = (google::protobuf::Arena *)(v9 & 0xFFFFFFFFFFFFFFFELL);
  if (v9) {
    int v10 = *(google::protobuf::Arena **)v10;
  }
  uint64_t v7 = google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 23, v8, v10);
LABEL_10:
  if (*((_DWORD *)this + 15) == 3)
  {
    unint64_t v11 = (char *)google::protobuf::FileDescriptor::SyntaxName(3);
    *((_DWORD *)a2 + 4) |= 4u;
    sub_1000BBA84(&__p, v11);
    uint64_t v12 = *((void *)a2 + 1);
    std::string v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
    if (v12) {
      std::string v13 = *(google::protobuf::Arena **)v13;
    }
    google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)a2 + 24, &__p, v13);
    if (v69 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  if (*((int *)this + 8) >= 1)
  {
    int v14 = 0;
    while (1)
    {
      uint64_t v15 = *(const std::string **)google::protobuf::FileDescriptor::dependency(this, v14);
      uint64_t v16 = (int *)*((void *)a2 + 5);
      if (!v16) {
        break;
      }
      uint64_t v17 = *((int *)a2 + 8);
      int v18 = *v16;
      if ((int)v17 >= *v16)
      {
        if (v18 == *((_DWORD *)a2 + 9))
        {
LABEL_22:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 6, v18 + 1);
          uint64_t v16 = (int *)*((void *)a2 + 5);
          int v18 = *v16;
        }
        int *v16 = v18 + 1;
        std::string::size_type v19 = (std::string *)sub_1000BBB38(*((google::protobuf::Arena **)a2 + 3));
        uint64_t v20 = *((void *)a2 + 5);
        uint64_t v21 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v21 + 1;
        *(void *)(v20 + 8 * v21 + 8) = v19;
        goto LABEL_24;
      }
      *((_DWORD *)a2 + 8) = v17 + 1;
      std::string::size_type v19 = *(std::string **)&v16[2 * v17 + 2];
LABEL_24:
      uint64_t v7 = std::string::operator=(v19, v15);
      if (++v14 >= *((_DWORD *)this + 8)) {
        goto LABEL_25;
      }
    }
    int v18 = *((_DWORD *)a2 + 9);
    goto LABEL_22;
  }
LABEL_25:
  if (*((int *)this + 9) >= 1)
  {
    uint64_t v22 = 0;
    unsigned int v23 = *((_DWORD *)a2 + 36);
    do
    {
      int v24 = *(_DWORD *)(*((void *)this + 11) + 4 * v22);
      if (v23 == *((_DWORD *)a2 + 37)) {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a2 + 36, v23 + 1);
      }
      *(_DWORD *)(*((void *)a2 + 19) + 4 * v23++) = v24;
      *((_DWORD *)a2 + 3sub_100072180((void *)this + 6) = v23;
      ++v22;
    }
    while (v22 < *((int *)this + 9));
  }
  if (*((int *)this + 10) >= 1)
  {
    uint64_t v25 = 0;
    unsigned int v26 = *((_DWORD *)a2 + 40);
    do
    {
      int v27 = *(_DWORD *)(*((void *)this + 12) + 4 * v25);
      if (v26 == *((_DWORD *)a2 + 41)) {
        google::protobuf::RepeatedField<int>::Reserve((unsigned int *)a2 + 40, v26 + 1);
      }
      *(_DWORD *)(*((void *)a2 + 21) + 4 * v26++) = v27;
      *((_DWORD *)a2 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v26;
      ++v25;
    }
    while (v25 < *((int *)this + 10));
  }
  if (*((int *)this + 11) >= 1)
  {
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    while (1)
    {
      uint64_t v30 = *((void *)this + 13);
      std::string v31 = (int *)*((void *)a2 + 8);
      if (!v31) {
        break;
      }
      uint64_t v32 = *((int *)a2 + 14);
      int v33 = *v31;
      if ((int)v32 >= *v31)
      {
        if (v33 == *((_DWORD *)a2 + 15))
        {
LABEL_42:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 12, v33 + 1);
          std::string v31 = (int *)*((void *)a2 + 8);
          int v33 = *v31;
        }
        *std::string v31 = v33 + 1;
        long long v34 = (google::protobuf::DescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*((void *)a2 + 6));
        uint64_t v35 = *((void *)a2 + 8);
        uint64_t v36 = *((int *)a2 + 14);
        *((_DWORD *)a2 + 14) = v36 + 1;
        *(void *)(v35 + 8 * v36 + 8) = v34;
        goto LABEL_44;
      }
      *((_DWORD *)a2 + 14) = v32 + 1;
      long long v34 = *(google::protobuf::DescriptorProto **)&v31[2 * v32 + 2];
LABEL_44:
      google::protobuf::Descriptor::CopyTo((google::protobuf::Descriptor *)(v30 + v28), v34);
      ++v29;
      v28 += 144;
      if (v29 >= *((int *)this + 11)) {
        goto LABEL_45;
      }
    }
    int v33 = *((_DWORD *)a2 + 15);
    goto LABEL_42;
  }
LABEL_45:
  if (*((int *)this + 12) >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    while (1)
    {
      uint64_t v39 = *((void *)this + 14);
      __int16 v40 = (int *)*((void *)a2 + 11);
      if (!v40) {
        break;
      }
      uint64_t v41 = *((int *)a2 + 20);
      int v42 = *v40;
      if ((int)v41 >= *v40)
      {
        if (v42 == *((_DWORD *)a2 + 21))
        {
LABEL_52:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 18, v42 + 1);
          __int16 v40 = (int *)*((void *)a2 + 11);
          int v42 = *v40;
        }
        *__int16 v40 = v42 + 1;
        __int16 v43 = (google::protobuf::EnumDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*((void *)a2 + 9));
        uint64_t v44 = *((void *)a2 + 11);
        uint64_t v45 = *((int *)a2 + 20);
        *((_DWORD *)a2 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v45 + 1;
        *(void *)(v44 + 8 * v45 + 8) = v43;
        goto LABEL_54;
      }
      *((_DWORD *)a2 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v41 + 1;
      __int16 v43 = *(google::protobuf::EnumDescriptorProto **)&v40[2 * v41 + 2];
LABEL_54:
      google::protobuf::EnumDescriptor::CopyTo((google::protobuf::EnumDescriptor *)(v39 + v37), v43);
      ++v38;
      v37 += 80;
      if (v38 >= *((int *)this + 12)) {
        goto LABEL_55;
      }
    }
    int v42 = *((_DWORD *)a2 + 21);
    goto LABEL_52;
  }
LABEL_55:
  if (*((int *)this + 13) >= 1)
  {
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    while (1)
    {
      uint64_t v48 = *((void *)this + 15);
      __int16 v49 = (int *)*((void *)a2 + 14);
      if (!v49) {
        break;
      }
      uint64_t v50 = *((int *)a2 + 26);
      int v51 = *v49;
      if ((int)v50 >= *v49)
      {
        if (v51 == *((_DWORD *)a2 + 27))
        {
LABEL_62:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 24, v51 + 1);
          __int16 v49 = (int *)*((void *)a2 + 14);
          int v51 = *v49;
        }
        int *v49 = v51 + 1;
        id v52 = (google::protobuf::ServiceDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceDescriptorProto>(*((void *)a2 + 12));
        uint64_t v53 = *((void *)a2 + 14);
        uint64_t v54 = *((int *)a2 + 26);
        *((_DWORD *)a2 + 2sub_100072180((void *)this + 6) = v54 + 1;
        *(void *)(v53 + 8 * v54 + 8) = v52;
        goto LABEL_64;
      }
      *((_DWORD *)a2 + 2sub_100072180((void *)this + 6) = v50 + 1;
      id v52 = *(google::protobuf::ServiceDescriptorProto **)&v49[2 * v50 + 2];
LABEL_64:
      google::protobuf::ServiceDescriptor::CopyTo((google::protobuf::ServiceDescriptor *)(v48 + v46), v52);
      ++v47;
      v46 += 48;
      if (v47 >= *((int *)this + 13)) {
        goto LABEL_65;
      }
    }
    int v51 = *((_DWORD *)a2 + 27);
    goto LABEL_62;
  }
LABEL_65:
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    while (1)
    {
      uint64_t v57 = *((void *)this + 16);
      uint64_t v58 = (int *)*((void *)a2 + 17);
      if (!v58) {
        break;
      }
      uint64_t v59 = *((int *)a2 + 32);
      int v60 = *v58;
      if ((int)v59 >= *v58)
      {
        if (v60 == *((_DWORD *)a2 + 33))
        {
LABEL_72:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 30, v60 + 1);
          uint64_t v58 = (int *)*((void *)a2 + 17);
          int v60 = *v58;
        }
        *uint64_t v58 = v60 + 1;
        uint64_t v61 = (google::protobuf::FieldDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((void *)a2 + 15));
        uint64_t v62 = *((void *)a2 + 17);
        uint64_t v63 = *((int *)a2 + 32);
        *((_DWORD *)a2 + 3sub_100072180((void *)this + 2) = v63 + 1;
        *(void *)(v62 + 8 * v63 + 8) = v61;
        goto LABEL_74;
      }
      *((_DWORD *)a2 + 3sub_100072180((void *)this + 2) = v59 + 1;
      uint64_t v61 = *(google::protobuf::FieldDescriptorProto **)&v58[2 * v59 + 2];
LABEL_74:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v57 + v55), v61);
      ++v56;
      v55 += 152;
      if (v56 >= *((int *)this + 14)) {
        goto LABEL_75;
      }
    }
    int v60 = *((_DWORD *)a2 + 33);
    goto LABEL_72;
  }
LABEL_75:
  unsigned int v64 = (void *)*((void *)this + 17);
  if (v64 != google::protobuf::FileOptions::default_instance((google::protobuf::FileOptions *)v7))
  {
    *((_DWORD *)a2 + 4) |= 8u;
    uint64_t v65 = (google::protobuf::FileOptions *)*((void *)a2 + 25);
    if (!v65)
    {
      uint64_t v66 = *((void *)a2 + 1);
      uint64_t v67 = (void *)(v66 & 0xFFFFFFFFFFFFFFFELL);
      if (v66) {
        uint64_t v67 = (void *)*v67;
      }
      uint64_t v65 = (google::protobuf::FileOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FileOptions>(v67);
      *((void *)a2 + 2sub_100050800((void *)this + 5) = v65;
    }
    google::protobuf::FileOptions::CopyFrom(v65, *((const google::protobuf::FileOptions **)this + 17));
  }
}

void sub_1000C0900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t google::protobuf::FileDescriptor::dependency(google::protobuf::FileDescriptor *this, int a2)
{
  uint64_t v4 = (std::once_flag::_State_type *)*((void *)this + 3);
  if (v4)
  {
    int v6 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v4, memory_order_acquire) != -1)
    {
      v8[0] = google::protobuf::FileDescriptor::DependenciesOnceInit;
      v8[1] = &v6;
      uint64_t v7 = v8;
      std::__call_once(v4, &v7, (void (__cdecl *)(void *))sub_1000E10B4);
    }
  }
  return *(void *)(*((void *)this + 9) + 8 * a2);
}

void google::protobuf::Descriptor::CopyTo(google::protobuf::Descriptor *this, google::protobuf::DescriptorProto *a2)
{
  uint64_t v4 = *(void *)this;
  *((_DWORD *)a2 + 4) |= 1u;
  uint64_t v5 = *((void *)a2 + 1);
  int v6 = (google::protobuf::Arena *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    int v6 = *(google::protobuf::Arena **)v6;
  }
  uint64_t v7 = google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 27, v4, v6);
  if (*((int *)this + 26) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *((void *)this + 5);
      unint64_t v11 = (int *)*((void *)a2 + 5);
      if (!v11) {
        break;
      }
      uint64_t v12 = *((int *)a2 + 8);
      int v13 = *v11;
      if ((int)v12 >= *v11)
      {
        if (v13 == *((_DWORD *)a2 + 9))
        {
LABEL_10:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 6, v13 + 1);
          unint64_t v11 = (int *)*((void *)a2 + 5);
          int v13 = *v11;
        }
        *unint64_t v11 = v13 + 1;
        int v14 = (google::protobuf::FieldDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((void *)a2 + 3));
        uint64_t v15 = *((void *)a2 + 5);
        uint64_t v16 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v16 + 1;
        *(void *)(v15 + 8 * v16 + 8) = v14;
        goto LABEL_12;
      }
      *((_DWORD *)a2 + 8) = v12 + 1;
      int v14 = *(google::protobuf::FieldDescriptorProto **)&v11[2 * v12 + 2];
LABEL_12:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v10 + v8), v14);
      ++v9;
      v8 += 152;
      if (v9 >= *((int *)this + 26)) {
        goto LABEL_13;
      }
    }
    int v13 = *((_DWORD *)a2 + 9);
    goto LABEL_10;
  }
LABEL_13:
  if (*((int *)this + 27) >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    while (1)
    {
      uint64_t v19 = *((void *)this + 6);
      uint64_t v20 = (int *)*((void *)a2 + 20);
      if (!v20) {
        break;
      }
      uint64_t v21 = *((int *)a2 + 38);
      int v22 = *v20;
      if ((int)v21 >= *v20)
      {
        if (v22 == *((_DWORD *)a2 + 39))
        {
LABEL_20:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 36, v22 + 1);
          uint64_t v20 = (int *)*((void *)a2 + 20);
          int v22 = *v20;
        }
        *uint64_t v20 = v22 + 1;
        unsigned int v23 = (google::protobuf::OneofDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofDescriptorProto>(*((void *)a2 + 18));
        uint64_t v24 = *((void *)a2 + 20);
        uint64_t v25 = *((int *)a2 + 38);
        *((_DWORD *)a2 + 38) = v25 + 1;
        *(void *)(v24 + 8 * v25 + 8) = v23;
        goto LABEL_22;
      }
      *((_DWORD *)a2 + 38) = v21 + 1;
      unsigned int v23 = *(google::protobuf::OneofDescriptorProto **)&v20[2 * v21 + 2];
LABEL_22:
      google::protobuf::OneofDescriptor::CopyTo((google::protobuf::OneofDescriptor *)(v19 + v17), v23);
      ++v18;
      v17 += 48;
      if (v18 >= *((int *)this + 27)) {
        goto LABEL_23;
      }
    }
    int v22 = *((_DWORD *)a2 + 39);
    goto LABEL_20;
  }
LABEL_23:
  if (*((int *)this + 29) >= 1)
  {
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *((void *)this + 7);
      uint64_t v29 = (int *)*((void *)a2 + 8);
      if (!v29) {
        break;
      }
      uint64_t v30 = *((int *)a2 + 14);
      int v31 = *v29;
      if ((int)v30 >= *v29)
      {
        if (v31 == *((_DWORD *)a2 + 15))
        {
LABEL_30:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 12, v31 + 1);
          uint64_t v29 = (int *)*((void *)a2 + 8);
          int v31 = *v29;
        }
        int *v29 = v31 + 1;
        uint64_t v32 = (google::protobuf::DescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto>(*((void *)a2 + 6));
        uint64_t v33 = *((void *)a2 + 8);
        uint64_t v34 = *((int *)a2 + 14);
        *((_DWORD *)a2 + 14) = v34 + 1;
        *(void *)(v33 + 8 * v34 + 8) = v32;
        goto LABEL_32;
      }
      *((_DWORD *)a2 + 14) = v30 + 1;
      uint64_t v32 = *(google::protobuf::DescriptorProto **)&v29[2 * v30 + 2];
LABEL_32:
      uint64_t v7 = (std::string *)google::protobuf::Descriptor::CopyTo((google::protobuf::Descriptor *)(v28 + v26), v32);
      ++v27;
      v26 += 144;
      if (v27 >= *((int *)this + 29)) {
        goto LABEL_33;
      }
    }
    int v31 = *((_DWORD *)a2 + 15);
    goto LABEL_30;
  }
LABEL_33:
  if (*((int *)this + 30) >= 1)
  {
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    while (1)
    {
      uint64_t v37 = *((void *)this + 8);
      uint64_t v38 = (int *)*((void *)a2 + 11);
      if (!v38) {
        break;
      }
      uint64_t v39 = *((int *)a2 + 20);
      int v40 = *v38;
      if ((int)v39 >= *v38)
      {
        if (v40 == *((_DWORD *)a2 + 21))
        {
LABEL_40:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 18, v40 + 1);
          uint64_t v38 = (int *)*((void *)a2 + 11);
          int v40 = *v38;
        }
        *uint64_t v38 = v40 + 1;
        uint64_t v41 = (google::protobuf::EnumDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto>(*((void *)a2 + 9));
        uint64_t v42 = *((void *)a2 + 11);
        uint64_t v43 = *((int *)a2 + 20);
        *((_DWORD *)a2 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v43 + 1;
        *(void *)(v42 + 8 * v43 + 8) = v41;
        goto LABEL_42;
      }
      *((_DWORD *)a2 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v39 + 1;
      uint64_t v41 = *(google::protobuf::EnumDescriptorProto **)&v38[2 * v39 + 2];
LABEL_42:
      google::protobuf::EnumDescriptor::CopyTo((google::protobuf::EnumDescriptor *)(v37 + v35), v41);
      ++v36;
      v35 += 80;
      if (v36 >= *((int *)this + 30)) {
        goto LABEL_43;
      }
    }
    int v40 = *((_DWORD *)a2 + 21);
    goto LABEL_40;
  }
LABEL_43:
  if (*((int *)this + 31) >= 1)
  {
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    while (1)
    {
      uint64_t v46 = *((void *)this + 9);
      uint64_t v47 = (int *)*((void *)a2 + 14);
      if (!v47) {
        break;
      }
      uint64_t v48 = *((int *)a2 + 26);
      int v49 = *v47;
      if ((int)v48 >= *v47)
      {
        if (v49 == *((_DWORD *)a2 + 27))
        {
LABEL_50:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 24, v49 + 1);
          uint64_t v47 = (int *)*((void *)a2 + 14);
          int v49 = *v47;
        }
        int *v47 = v49 + 1;
        uint64_t v50 = (google::protobuf::DescriptorProto_ExtensionRange *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ExtensionRange>(*((void *)a2 + 12));
        uint64_t v51 = *((void *)a2 + 14);
        uint64_t v52 = *((int *)a2 + 26);
        *((_DWORD *)a2 + 2sub_100072180((void *)this + 6) = v52 + 1;
        *(void *)(v51 + 8 * v52 + 8) = v50;
        goto LABEL_52;
      }
      *((_DWORD *)a2 + 2sub_100072180((void *)this + 6) = v48 + 1;
      uint64_t v50 = *(google::protobuf::DescriptorProto_ExtensionRange **)&v47[2 * v48 + 2];
LABEL_52:
      google::protobuf::Descriptor::ExtensionRange::CopyTo((google::protobuf::Descriptor::ExtensionRange *)(v46 + v44), v50);
      ++v45;
      v44 += 16;
      if (v45 >= *((int *)this + 31)) {
        goto LABEL_53;
      }
    }
    int v49 = *((_DWORD *)a2 + 27);
    goto LABEL_50;
  }
LABEL_53:
  if (*((int *)this + 32) >= 1)
  {
    uint64_t v53 = 0;
    uint64_t v54 = 0;
    while (1)
    {
      uint64_t v55 = *((void *)this + 10);
      uint64_t v56 = (int *)*((void *)a2 + 17);
      if (!v56) {
        break;
      }
      uint64_t v57 = *((int *)a2 + 32);
      int v58 = *v56;
      if ((int)v57 >= *v56)
      {
        if (v58 == *((_DWORD *)a2 + 33))
        {
LABEL_60:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 30, v58 + 1);
          uint64_t v56 = (int *)*((void *)a2 + 17);
          int v58 = *v56;
        }
        *uint64_t v56 = v58 + 1;
        uint64_t v59 = (google::protobuf::FieldDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldDescriptorProto>(*((void *)a2 + 15));
        uint64_t v60 = *((void *)a2 + 17);
        uint64_t v61 = *((int *)a2 + 32);
        *((_DWORD *)a2 + 3sub_100072180((void *)this + 2) = v61 + 1;
        *(void *)(v60 + 8 * v61 + 8) = v59;
        goto LABEL_62;
      }
      *((_DWORD *)a2 + 3sub_100072180((void *)this + 2) = v57 + 1;
      uint64_t v59 = *(google::protobuf::FieldDescriptorProto **)&v56[2 * v57 + 2];
LABEL_62:
      google::protobuf::FieldDescriptor::CopyTo((google::protobuf::FieldDescriptor *)(v55 + v53), v59);
      ++v54;
      v53 += 152;
      if (v54 >= *((int *)this + 32)) {
        goto LABEL_63;
      }
    }
    int v58 = *((_DWORD *)a2 + 33);
    goto LABEL_60;
  }
LABEL_63:
  if (*((int *)this + 33) >= 1)
  {
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    while (1)
    {
      unsigned int v64 = (int *)*((void *)a2 + 23);
      if (!v64) {
        break;
      }
      uint64_t v65 = *((int *)a2 + 44);
      int v66 = *v64;
      if ((int)v65 >= *v64)
      {
        if (v66 == *((_DWORD *)a2 + 45))
        {
LABEL_70:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 42, v66 + 1);
          unsigned int v64 = (int *)*((void *)a2 + 23);
          int v66 = *v64;
        }
        int *v64 = v66 + 1;
        uint64_t v7 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::DescriptorProto_ReservedRange>(*((void *)a2 + 21));
        uint64_t v67 = *((void *)a2 + 23);
        uint64_t v68 = *((int *)a2 + 44);
        *((_DWORD *)a2 + 44) = v68 + 1;
        *(void *)(v67 + 8 * v68 + 8) = v7;
        goto LABEL_72;
      }
      *((_DWORD *)a2 + 44) = v65 + 1;
      uint64_t v7 = *(std::string **)&v64[2 * v65 + 2];
LABEL_72:
      char v69 = (int *)(*((void *)this + 11) + v62);
      int v70 = *v69;
      int v71 = v7->__r_.__value_.__r.__words[2];
      LODWORD(v7->__r_.__value_.__r.__words[2]) = v71 | 1;
      LODWORD(v6sub_100072180((void *)this + 9) = v69[1];
      LODWORD(v7->__r_.__value_.__r.__words[2]) = v71 | 3;
      LODWORD(v7[1].__r_.__value_.__l.__data_) = v70;
      HIDWORD(v7[1].__r_.__value_.__r.__words[0]) = v69;
      ++v63;
      v62 += 8;
      if (v63 >= *((int *)this + 33)) {
        goto LABEL_73;
      }
    }
    int v66 = *((_DWORD *)a2 + 45);
    goto LABEL_70;
  }
LABEL_73:
  if (*((int *)this + 34) >= 1)
  {
    uint64_t v72 = 0;
    while (1)
    {
      int v73 = *(const std::string **)(*((void *)this + 12) + 8 * v72);
      unsigned int v74 = (int *)*((void *)a2 + 26);
      if (!v74) {
        break;
      }
      uint64_t v75 = *((int *)a2 + 50);
      int v76 = *v74;
      if ((int)v75 >= *v74)
      {
        if (v76 == *((_DWORD *)a2 + 51))
        {
LABEL_80:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 48, v76 + 1);
          unsigned int v74 = (int *)*((void *)a2 + 26);
          int v76 = *v74;
        }
        *unsigned int v74 = v76 + 1;
        unsigned int v77 = (std::string *)sub_1000BBB38(*((google::protobuf::Arena **)a2 + 24));
        uint64_t v78 = *((void *)a2 + 26);
        uint64_t v79 = *((int *)a2 + 50);
        *((_DWORD *)a2 + 5google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v79 + 1;
        *(void *)(v78 + 8 * v79 + 8) = v77;
        goto LABEL_82;
      }
      *((_DWORD *)a2 + 5google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v75 + 1;
      unsigned int v77 = *(std::string **)&v74[2 * v75 + 2];
LABEL_82:
      uint64_t v7 = std::string::operator=(v77, v73);
      if (++v72 >= *((int *)this + 34)) {
        goto LABEL_83;
      }
    }
    int v76 = *((_DWORD *)a2 + 51);
    goto LABEL_80;
  }
LABEL_83:
  uint64_t v80 = (void *)*((void *)this + 4);
  if (v80 != google::protobuf::MessageOptions::default_instance((google::protobuf::MessageOptions *)v7))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    uint64_t v81 = (google::protobuf::MessageOptions *)*((void *)a2 + 28);
    if (!v81)
    {
      uint64_t v82 = *((void *)a2 + 1);
      uint64_t v83 = (void *)(v82 & 0xFFFFFFFFFFFFFFFELL);
      if (v82) {
        uint64_t v83 = (void *)*v83;
      }
      uint64_t v81 = (google::protobuf::MessageOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MessageOptions>(v83);
      *((void *)a2 + 28) = v81;
    }
    uint64_t v84 = (const google::protobuf::MessageOptions *)*((void *)this + 4);
    google::protobuf::MessageOptions::CopyFrom(v81, v84);
  }
}

void google::protobuf::EnumDescriptor::CopyTo(google::protobuf::EnumDescriptor *this, google::protobuf::EnumDescriptorProto *a2)
{
  uint64_t v4 = *(void *)this;
  *((_DWORD *)a2 + 4) |= 1u;
  uint64_t v5 = *((void *)a2 + 1);
  int v6 = (google::protobuf::Arena *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    int v6 = *(google::protobuf::Arena **)v6;
  }
  uint64_t v7 = google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 12, v4, v6);
  if (*((int *)this + 11) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *((void *)this + 6);
      unint64_t v11 = (int *)*((void *)a2 + 5);
      if (!v11) {
        break;
      }
      uint64_t v12 = *((int *)a2 + 8);
      int v13 = *v11;
      if ((int)v12 >= *v11)
      {
        if (v13 == *((_DWORD *)a2 + 9))
        {
LABEL_10:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 6, v13 + 1);
          unint64_t v11 = (int *)*((void *)a2 + 5);
          int v13 = *v11;
        }
        *unint64_t v11 = v13 + 1;
        int v14 = (google::protobuf::EnumValueDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueDescriptorProto>(*((void *)a2 + 3));
        uint64_t v15 = *((void *)a2 + 5);
        uint64_t v16 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v16 + 1;
        *(void *)(v15 + 8 * v16 + 8) = v14;
        goto LABEL_12;
      }
      *((_DWORD *)a2 + 8) = v12 + 1;
      int v14 = *(google::protobuf::EnumValueDescriptorProto **)&v11[2 * v12 + 2];
LABEL_12:
      google::protobuf::EnumValueDescriptor::CopyTo((google::protobuf::EnumValueDescriptor *)(v10 + v8), v14);
      ++v9;
      v8 += 40;
      if (v9 >= *((int *)this + 11)) {
        goto LABEL_13;
      }
    }
    int v13 = *((_DWORD *)a2 + 9);
    goto LABEL_10;
  }
LABEL_13:
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    while (1)
    {
      uint64_t v19 = (int *)*((void *)a2 + 8);
      if (!v19) {
        break;
      }
      uint64_t v20 = *((int *)a2 + 14);
      int v21 = *v19;
      if ((int)v20 >= *v19)
      {
        if (v21 == *((_DWORD *)a2 + 15))
        {
LABEL_20:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 12, v21 + 1);
          uint64_t v19 = (int *)*((void *)a2 + 8);
          int v21 = *v19;
        }
        *uint64_t v19 = v21 + 1;
        uint64_t v7 = (std::string *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumDescriptorProto_EnumReservedRange>(*((void *)a2 + 6));
        uint64_t v22 = *((void *)a2 + 8);
        uint64_t v23 = *((int *)a2 + 14);
        *((_DWORD *)a2 + 14) = v23 + 1;
        *(void *)(v22 + 8 * v23 + 8) = v7;
        goto LABEL_22;
      }
      *((_DWORD *)a2 + 14) = v20 + 1;
      uint64_t v7 = *(std::string **)&v19[2 * v20 + 2];
LABEL_22:
      uint64_t v24 = (int *)(*((void *)this + 8) + v17);
      int v25 = *v24;
      int v26 = v7->__r_.__value_.__r.__words[2];
      LODWORD(v7->__r_.__value_.__r.__words[2]) = v26 | 1;
      LODWORD(v24) = v24[1];
      LODWORD(v7->__r_.__value_.__r.__words[2]) = v26 | 3;
      LODWORD(v7[1].__r_.__value_.__l.__data_) = v25;
      HIDWORD(v7[1].__r_.__value_.__r.__words[0]) = v24;
      ++v18;
      v17 += 8;
      if (v18 >= *((int *)this + 14)) {
        goto LABEL_23;
      }
    }
    int v21 = *((_DWORD *)a2 + 15);
    goto LABEL_20;
  }
LABEL_23:
  if (*((int *)this + 15) >= 1)
  {
    uint64_t v27 = 0;
    while (1)
    {
      uint64_t v28 = *(const std::string **)(*((void *)this + 9) + 8 * v27);
      uint64_t v29 = (int *)*((void *)a2 + 11);
      if (!v29) {
        break;
      }
      uint64_t v30 = *((int *)a2 + 20);
      int v31 = *v29;
      if ((int)v30 >= *v29)
      {
        if (v31 == *((_DWORD *)a2 + 21))
        {
LABEL_30:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 18, v31 + 1);
          uint64_t v29 = (int *)*((void *)a2 + 11);
          int v31 = *v29;
        }
        int *v29 = v31 + 1;
        uint64_t v32 = (std::string *)sub_1000BBB38(*((google::protobuf::Arena **)a2 + 9));
        uint64_t v33 = *((void *)a2 + 11);
        uint64_t v34 = *((int *)a2 + 20);
        *((_DWORD *)a2 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v34 + 1;
        *(void *)(v33 + 8 * v34 + 8) = v32;
        goto LABEL_32;
      }
      *((_DWORD *)a2 + 2google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v30 + 1;
      uint64_t v32 = *(std::string **)&v29[2 * v30 + 2];
LABEL_32:
      uint64_t v7 = std::string::operator=(v32, v28);
      if (++v27 >= *((int *)this + 15)) {
        goto LABEL_33;
      }
    }
    int v31 = *((_DWORD *)a2 + 21);
    goto LABEL_30;
  }
LABEL_33:
  uint64_t v35 = (void *)*((void *)this + 4);
  if (v35 != google::protobuf::EnumOptions::default_instance((google::protobuf::EnumOptions *)v7))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    uint64_t v36 = (google::protobuf::EnumOptions *)*((void *)a2 + 13);
    if (!v36)
    {
      uint64_t v37 = *((void *)a2 + 1);
      uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFELL);
      if (v37) {
        uint64_t v38 = (void *)*v38;
      }
      uint64_t v36 = (google::protobuf::EnumOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumOptions>(v38);
      *((void *)a2 + 1sub_1000719B4((void *)this + 3) = v36;
    }
    uint64_t v39 = (const google::protobuf::EnumOptions *)*((void *)this + 4);
    google::protobuf::EnumOptions::CopyFrom(v36, v39);
  }
}

void google::protobuf::ServiceDescriptor::CopyTo(google::protobuf::ServiceDescriptor *this, google::protobuf::ServiceDescriptorProto *a2)
{
  uint64_t v4 = *(void *)this;
  *((_DWORD *)a2 + 4) |= 1u;
  uint64_t v5 = *((void *)a2 + 1);
  int v6 = (google::protobuf::Arena *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    int v6 = *(google::protobuf::Arena **)v6;
  }
  uint64_t v7 = google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 6, v4, v6);
  if (*((int *)this + 10) >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    while (1)
    {
      uint64_t v10 = *((void *)this + 4);
      unint64_t v11 = (int *)*((void *)a2 + 5);
      if (!v11) {
        break;
      }
      uint64_t v12 = *((int *)a2 + 8);
      int v13 = *v11;
      if ((int)v12 >= *v11)
      {
        if (v13 == *((_DWORD *)a2 + 9))
        {
LABEL_10:
          google::protobuf::internal::RepeatedPtrFieldBase::Reserve((unsigned int *)a2 + 6, v13 + 1);
          unint64_t v11 = (int *)*((void *)a2 + 5);
          int v13 = *v11;
        }
        *unint64_t v11 = v13 + 1;
        int v14 = (google::protobuf::MethodDescriptorProto *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodDescriptorProto>(*((void *)a2 + 3));
        uint64_t v15 = *((void *)a2 + 5);
        uint64_t v16 = *((int *)a2 + 8);
        *((_DWORD *)a2 + 8) = v16 + 1;
        *(void *)(v15 + 8 * v16 + 8) = v14;
        goto LABEL_12;
      }
      *((_DWORD *)a2 + 8) = v12 + 1;
      int v14 = *(google::protobuf::MethodDescriptorProto **)&v11[2 * v12 + 2];
LABEL_12:
      google::protobuf::MethodDescriptor::CopyTo((google::protobuf::MethodDescriptor *)(v10 + v8), v14);
      ++v9;
      v8 += 104;
      if (v9 >= *((int *)this + 10)) {
        goto LABEL_13;
      }
    }
    int v13 = *((_DWORD *)a2 + 9);
    goto LABEL_10;
  }
LABEL_13:
  uint64_t v17 = (void *)*((void *)this + 3);
  if (v17 != google::protobuf::ServiceOptions::default_instance((google::protobuf::ServiceOptions *)v7))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    uint64_t v18 = (google::protobuf::ServiceOptions *)*((void *)a2 + 7);
    if (!v18)
    {
      uint64_t v19 = *((void *)a2 + 1);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFELL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = (google::protobuf::ServiceOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::ServiceOptions>(v20);
      *((void *)a2 + 7) = v18;
    }
    int v21 = (const google::protobuf::ServiceOptions *)*((void *)this + 3);
    google::protobuf::ServiceOptions::CopyFrom(v18, v21);
  }
}

void google::protobuf::FieldDescriptor::CopyTo(google::protobuf::FieldDescriptor *this, google::protobuf::FieldDescriptorProto *a2)
{
  uint64_t v4 = *(void *)this;
  *((_DWORD *)a2 + 4) |= 1u;
  uint64_t v5 = *((void *)a2 + 1);
  int v6 = (google::protobuf::Arena *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    int v6 = *(google::protobuf::Arena **)v6;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 3, v4, v6);
  int v8 = *((_DWORD *)this + 17);
  int v9 = *((_DWORD *)a2 + 4);
  int v10 = v9 | 0x40;
  *((_DWORD *)a2 + 4) = v9 | 0x40;
  *((_DWORD *)a2 + 18) = v8;
  if (*((unsigned char *)this + 66))
  {
    uint64_t v11 = *((void *)this + 4);
    *((_DWORD *)a2 + 4) = v9 | 0x50;
    uint64_t v12 = *((void *)a2 + 1);
    int v13 = (google::protobuf::Arena *)(v12 & 0xFFFFFFFFFFFFFFFELL);
    if (v12) {
      int v13 = *(google::protobuf::Arena **)v13;
    }
    google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 7, v11, v13);
    int v10 = *((_DWORD *)a2 + 4);
  }
  if (*((unsigned char *)this + 65))
  {
    v10 |= 0x100u;
    *((_DWORD *)a2 + 4) = v10;
    *((unsigned char *)a2 + 8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 1;
  }
  int v14 = *((_DWORD *)this + 15);
  int v15 = v10 | 0x200;
  *((_DWORD *)a2 + 4) = v15;
  *((_DWORD *)a2 + 2sub_1000333D0((uint64_t *)this + 1) = v14;
  uint64_t v16 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v16)
  {
    uint64_t v53 = this;
    uint64_t v54 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v16, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v54;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v53;
      p_p = &__p;
      std::__call_once(v16, &p_p, (void (__cdecl *)(void *))sub_1000BB820);
    }
    int v15 = *((_DWORD *)a2 + 4);
  }
  int v17 = *((_DWORD *)this + 14);
  int v18 = v15 | 0x400;
  *((_DWORD *)a2 + 4) = v15 | 0x400;
  *((_DWORD *)a2 + 2sub_100072180((void *)this + 2) = v17;
  if (*((unsigned char *)this + 67))
  {
    if (!*(unsigned char *)(*((void *)this + 10) + 141))
    {
      *((_DWORD *)a2 + 4) = v15 | 0x402;
      sub_1000BBA84(&__p, ".");
      uint64_t v19 = *((void *)a2 + 1);
      uint64_t v20 = (google::protobuf::Arena *)(v19 & 0xFFFFFFFFFFFFFFFELL);
      if (v19) {
        uint64_t v20 = *(google::protobuf::Arena **)v20;
      }
      google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)a2 + 4, (__n128 *)&__p, v20);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      int v18 = *((_DWORD *)a2 + 4);
    }
    *((_DWORD *)a2 + 4) = v18 | 2;
    uint64_t v21 = *((void *)a2 + 1);
    uint64_t v22 = (google::protobuf::Arena *)(v21 & 0xFFFFFFFFFFFFFFFELL);
    if (v21) {
      uint64_t v22 = *(google::protobuf::Arena **)v22;
    }
    uint64_t v23 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)a2 + 4, v22);
    uint64_t v24 = *(void *)(*((void *)this + 10) + 8);
    int v25 = *(char *)(v24 + 23);
    if (v25 >= 0) {
      int v26 = *(const std::string::value_type **)(*((void *)this + 10) + 8);
    }
    else {
      int v26 = *(const std::string::value_type **)v24;
    }
    if (v25 >= 0) {
      std::string::size_type v27 = *(unsigned __int8 *)(v24 + 23);
    }
    else {
      std::string::size_type v27 = *(void *)(v24 + 8);
    }
    std::string::append(v23, v26, v27);
  }
  uint64_t v28 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v28)
  {
    uint64_t v53 = this;
    uint64_t v54 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v28, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v54;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v53;
      p_p = &__p;
      std::__call_once(v28, &p_p, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  int v29 = *((_DWORD *)this + 14);
  if ((v29 & 0xFFFFFFFE) == 0xA)
  {
    if (*(unsigned char *)(google::protobuf::FieldDescriptor::message_type(this) + 140))
    {
      *((_DWORD *)a2 + 2sub_100072180((void *)this + 2) = 1;
      *((_DWORD *)a2 + 4) &= ~0x400u;
    }
    if (!*(unsigned char *)(google::protobuf::FieldDescriptor::message_type(this) + 141))
    {
      *((_DWORD *)a2 + 4) |= 4u;
      sub_1000BBA84(&__p, ".");
      uint64_t v30 = *((void *)a2 + 1);
      int v31 = (google::protobuf::Arena *)(v30 & 0xFFFFFFFFFFFFFFFELL);
      if (v30) {
        int v31 = *(google::protobuf::Arena **)v31;
      }
      google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)a2 + 5, (__n128 *)&__p, v31);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    *((_DWORD *)a2 + 4) |= 4u;
    uint64_t v32 = *((void *)a2 + 1);
    uint64_t v33 = (google::protobuf::Arena *)(v32 & 0xFFFFFFFFFFFFFFFELL);
    if (v32) {
      uint64_t v33 = *(google::protobuf::Arena **)v33;
    }
    uint64_t v34 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)a2 + 5, v33);
    uint64_t v35 = google::protobuf::FieldDescriptor::message_type(this);
LABEL_56:
    uint64_t v41 = *(void *)(v35 + 8);
    int v42 = *(char *)(v41 + 23);
    if (v42 >= 0) {
      uint64_t v43 = *(const std::string::value_type **)(v35 + 8);
    }
    else {
      uint64_t v43 = *(const std::string::value_type **)v41;
    }
    if (v42 >= 0) {
      std::string::size_type v44 = *(unsigned __int8 *)(v41 + 23);
    }
    else {
      std::string::size_type v44 = *(void *)(v41 + 8);
    }
    uint64_t v36 = std::string::append(v34, v43, v44);
    goto LABEL_63;
  }
  uint64_t v36 = (std::string *)*((void *)this + 6);
  if (v36)
  {
    uint64_t v53 = this;
    uint64_t v54 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v36, memory_order_acquire) != -1)
    {
      __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v54;
      __p.__r_.__value_.__l.__size_ = (std::string::size_type)&v53;
      p_p = &__p;
      std::__call_once((std::once_flag::_State_type *)v36, &p_p, (void (__cdecl *)(void *))sub_1000BB820);
    }
    int v29 = *((_DWORD *)this + 14);
  }
  if (v29 == 14)
  {
    if (!*(unsigned char *)(google::protobuf::FieldDescriptor::enum_type(this) + 41))
    {
      *((_DWORD *)a2 + 4) |= 4u;
      sub_1000BBA84(&__p, ".");
      uint64_t v37 = *((void *)a2 + 1);
      uint64_t v38 = (google::protobuf::Arena *)(v37 & 0xFFFFFFFFFFFFFFFELL);
      if (v37) {
        uint64_t v38 = *(google::protobuf::Arena **)v38;
      }
      google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)a2 + 5, (__n128 *)&__p, v38);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    *((_DWORD *)a2 + 4) |= 4u;
    uint64_t v39 = *((void *)a2 + 1);
    int v40 = (google::protobuf::Arena *)(v39 & 0xFFFFFFFFFFFFFFFELL);
    if (v39) {
      int v40 = *(google::protobuf::Arena **)v40;
    }
    uint64_t v34 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)a2 + 5, v40);
    uint64_t v35 = google::protobuf::FieldDescriptor::enum_type(this);
    goto LABEL_56;
  }
LABEL_63:
  if (*((unsigned char *)this + 64))
  {
    google::protobuf::FieldDescriptor::DefaultValueAsString(this, 0, v7, &__p);
    *((_DWORD *)a2 + 4) |= 8u;
    uint64_t v45 = *((void *)a2 + 1);
    uint64_t v46 = (google::protobuf::Arena *)(v45 & 0xFFFFFFFFFFFFFFFELL);
    if (v45) {
      uint64_t v46 = *(google::protobuf::Arena **)v46;
    }
    google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)a2 + 6, (__n128 *)&__p, v46);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  uint64_t v47 = *((void *)this + 11);
  if (v47 && !*((unsigned char *)this + 67))
  {
    int v48 = -1431655765 * ((unint64_t)(v47 - *(void *)(*(void *)(v47 + 16) + 48)) >> 4);
    *((_DWORD *)a2 + 4) |= 0x80u;
    *((_DWORD *)a2 + 1sub_100072180((void *)this + 9) = v48;
  }
  int v49 = (void *)*((void *)this + 15);
  if (v49 != google::protobuf::FieldOptions::default_instance((google::protobuf::FieldOptions *)v36))
  {
    *((_DWORD *)a2 + 4) |= 0x20u;
    uint64_t v50 = (google::protobuf::FieldOptions *)*((void *)a2 + 8);
    if (!v50)
    {
      uint64_t v51 = *((void *)a2 + 1);
      uint64_t v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFELL);
      if (v51) {
        uint64_t v52 = (void *)*v52;
      }
      uint64_t v50 = (google::protobuf::FieldOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::FieldOptions>(v52);
      *((void *)a2 + 8) = v50;
    }
    google::protobuf::FieldOptions::CopyFrom(v50, *((const google::protobuf::FieldOptions **)this + 15));
  }
}

void sub_1000C1998(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::OneofDescriptor::CopyTo(google::protobuf::OneofDescriptor *this, google::protobuf::OneofDescriptorProto *a2)
{
  uint64_t v4 = *(void *)this;
  *((_DWORD *)a2 + 4) |= 1u;
  uint64_t v5 = *((void *)a2 + 1);
  int v6 = (google::protobuf::Arena *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    int v6 = *(google::protobuf::Arena **)v6;
  }
  uint64_t v7 = google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 3, v4, v6);
  int v8 = (void *)*((void *)this + 5);
  if (v8 != google::protobuf::OneofOptions::default_instance((google::protobuf::OneofOptions *)v7))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    int v9 = (google::protobuf::OneofOptions *)*((void *)a2 + 4);
    if (!v9)
    {
      uint64_t v10 = *((void *)a2 + 1);
      uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFELL);
      if (v10) {
        uint64_t v11 = (void *)*v11;
      }
      int v9 = (google::protobuf::OneofOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::OneofOptions>(v11);
      *((void *)a2 + 4) = v9;
    }
    uint64_t v12 = (const google::protobuf::OneofOptions *)*((void *)this + 5);
    google::protobuf::OneofOptions::CopyFrom(v9, v12);
  }
}

uint64_t google::protobuf::FieldDescriptor::enum_type(google::protobuf::FieldDescriptor *this)
{
  uint64_t v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    uint64_t v4 = this;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v6[0] = google::protobuf::FieldDescriptor::TypeOnceInit;
      v6[1] = &v4;
      uint64_t v5 = v6;
      std::__call_once(v2, &v5, (void (__cdecl *)(void *))sub_1000E10A4);
    }
  }
  return *((void *)this + 14);
}

void google::protobuf::EnumValueDescriptor::CopyTo(google::protobuf::EnumValueDescriptor *this, google::protobuf::EnumValueDescriptorProto *a2)
{
  uint64_t v4 = *(void *)this;
  *((_DWORD *)a2 + 4) |= 1u;
  uint64_t v5 = *((void *)a2 + 1);
  int v6 = (google::protobuf::Arena *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    int v6 = *(google::protobuf::Arena **)v6;
  }
  uint64_t v7 = google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 3, v4, v6);
  int v8 = *((_DWORD *)this + 4);
  *((_DWORD *)a2 + 4) |= 4u;
  *((_DWORD *)a2 + 1google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v8;
  int v9 = (void *)*((void *)this + 4);
  if (v9 != google::protobuf::EnumValueOptions::default_instance((google::protobuf::EnumValueOptions *)v7))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    uint64_t v10 = (google::protobuf::EnumValueOptions *)*((void *)a2 + 4);
    if (!v10)
    {
      uint64_t v11 = *((void *)a2 + 1);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFELL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (google::protobuf::EnumValueOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::EnumValueOptions>(v12);
      *((void *)a2 + 4) = v10;
    }
    int v13 = (const google::protobuf::EnumValueOptions *)*((void *)this + 4);
    google::protobuf::EnumValueOptions::CopyFrom(v10, v13);
  }
}

void google::protobuf::MethodDescriptor::CopyTo(google::protobuf::MethodDescriptor *this, google::protobuf::MethodDescriptorProto *a2)
{
  uint64_t v4 = *(void *)this;
  *((_DWORD *)a2 + 4) |= 1u;
  uint64_t v5 = *((void *)a2 + 1);
  int v6 = (google::protobuf::Arena *)(v5 & 0xFFFFFFFFFFFFFFFELL);
  if (v5) {
    int v6 = *(google::protobuf::Arena **)v6;
  }
  google::protobuf::internal::ArenaStringPtr::Set((std::string **)a2 + 3, v4, v6);
  google::protobuf::internal::LazyDescriptor::Once((google::protobuf::MethodDescriptor *)((char *)this + 24));
  if (!*(unsigned char *)(*((void *)this + 3) + 141))
  {
    *((_DWORD *)a2 + 4) |= 2u;
    sub_1000BBA84(&__p, ".");
    uint64_t v7 = *((void *)a2 + 1);
    int v8 = (google::protobuf::Arena *)(v7 & 0xFFFFFFFFFFFFFFFELL);
    if (v7) {
      int v8 = *(google::protobuf::Arena **)v8;
    }
    google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)a2 + 4, &__p, v8);
    if (v31 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  *((_DWORD *)a2 + 4) |= 2u;
  uint64_t v9 = *((void *)a2 + 1);
  uint64_t v10 = (google::protobuf::Arena *)(v9 & 0xFFFFFFFFFFFFFFFELL);
  if (v9) {
    uint64_t v10 = *(google::protobuf::Arena **)v10;
  }
  uint64_t v11 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)a2 + 4, v10);
  google::protobuf::internal::LazyDescriptor::Once((google::protobuf::MethodDescriptor *)((char *)this + 24));
  uint64_t v12 = *(void *)(*((void *)this + 3) + 8);
  int v13 = *(char *)(v12 + 23);
  if (v13 >= 0) {
    int v14 = *(const std::string::value_type **)(*((void *)this + 3) + 8);
  }
  else {
    int v14 = *(const std::string::value_type **)v12;
  }
  if (v13 >= 0) {
    std::string::size_type v15 = *(unsigned __int8 *)(v12 + 23);
  }
  else {
    std::string::size_type v15 = *(void *)(v12 + 8);
  }
  std::string::append(v11, v14, v15);
  google::protobuf::internal::LazyDescriptor::Once((google::protobuf::MethodDescriptor *)((char *)this + 56));
  if (!*(unsigned char *)(*((void *)this + 7) + 141))
  {
    *((_DWORD *)a2 + 4) |= 4u;
    sub_1000BBA84(&__p, ".");
    uint64_t v16 = *((void *)a2 + 1);
    int v17 = (google::protobuf::Arena *)(v16 & 0xFFFFFFFFFFFFFFFELL);
    if (v16) {
      int v17 = *(google::protobuf::Arena **)v17;
    }
    google::protobuf::internal::ArenaStringPtr::Set((uint64_t *)a2 + 5, &__p, v17);
    if (v31 < 0) {
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  *((_DWORD *)a2 + 4) |= 4u;
  uint64_t v18 = *((void *)a2 + 1);
  uint64_t v19 = (google::protobuf::Arena *)(v18 & 0xFFFFFFFFFFFFFFFELL);
  if (v18) {
    uint64_t v19 = *(google::protobuf::Arena **)v19;
  }
  uint64_t v20 = (std::string *)google::protobuf::internal::ArenaStringPtr::Mutable((uint64_t **)a2 + 5, v19);
  google::protobuf::internal::LazyDescriptor::Once((google::protobuf::MethodDescriptor *)((char *)this + 56));
  uint64_t v21 = *(void *)(*((void *)this + 7) + 8);
  int v22 = *(char *)(v21 + 23);
  if (v22 >= 0) {
    uint64_t v23 = *(const std::string::value_type **)(*((void *)this + 7) + 8);
  }
  else {
    uint64_t v23 = *(const std::string::value_type **)v21;
  }
  if (v22 >= 0) {
    std::string::size_type v24 = *(unsigned __int8 *)(v21 + 23);
  }
  else {
    std::string::size_type v24 = *(void *)(v21 + 8);
  }
  int v25 = std::string::append(v20, v23, v24);
  int v26 = (void *)*((void *)this + 11);
  if (v26 != google::protobuf::MethodOptions::default_instance((google::protobuf::MethodOptions *)v25))
  {
    *((_DWORD *)a2 + 4) |= 8u;
    std::string::size_type v27 = (google::protobuf::MethodOptions *)*((void *)a2 + 6);
    if (!v27)
    {
      uint64_t v28 = *((void *)a2 + 1);
      int v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFELL);
      if (v28) {
        int v29 = (void *)*v29;
      }
      std::string::size_type v27 = (google::protobuf::MethodOptions *)google::protobuf::Arena::CreateMaybeMessage<google::protobuf::MethodOptions>(v29);
      *((void *)a2 + sub_100072180((void *)this + 6) = v27;
    }
    google::protobuf::MethodOptions::CopyFrom(v27, *((const google::protobuf::MethodOptions **)this + 11));
  }
  if (*((unsigned char *)this + 96))
  {
    *((_DWORD *)a2 + 4) |= 0x10u;
    *((unsigned char *)a2 + 5sub_100072180((void *)this + 6) = 1;
  }
  if (*((unsigned char *)this + 97))
  {
    *((_DWORD *)a2 + 4) |= 0x20u;
    *((unsigned char *)a2 + 57) = 1;
  }
}

void sub_1000C1E24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000C1E44(uint64_t a1, std::string *a2)
{
  if (*(unsigned char *)a1)
  {
    uint64_t v4 = *(void *)(a1 + 72);
    for (uint64_t i = *(void *)(a1 + 80); v4 != i; v4 += 24)
    {
      sub_1000D7E08(a1, v4, &__p);
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        p_p = &__p;
      }
      else {
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
      }
      if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
        std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
      }
      else {
        std::string::size_type size = __p.__r_.__value_.__l.__size_;
      }
      std::string::append(a2, (const std::string::value_type *)p_p, size);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      std::string::append(a2, "\n");
    }
    if (*(char *)(a1 + 47) < 0)
    {
      if (!*(void *)(a1 + 32)) {
        return;
      }
    }
    else if (!*(unsigned char *)(a1 + 47))
    {
      return;
    }
    sub_1000D7E08(a1, a1 + 24, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      int v8 = &__p;
    }
    else {
      int v8 = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v9 = __p.__r_.__value_.__l.__size_;
    }
    std::string::append(a2, (const std::string::value_type *)v8, v9);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1000C1F58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1000C1F78(uint64_t a1, std::string *a2)
{
  if (*(unsigned char *)a1)
  {
    if (*(char *)(a1 + 71) < 0)
    {
      if (!*(void *)(a1 + 56)) {
        return;
      }
    }
    else if (!*(unsigned char *)(a1 + 71))
    {
      return;
    }
    sub_1000D7E08(a1, a1 + 48, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    std::string::append(a2, (const std::string::value_type *)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1000C2004(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1000C2020(uint64_t a1)
{
  if (*(char *)(a1 + 127) < 0) {
    operator delete(*(void **)(a1 + 104));
  }
  int8x8_t v3 = (void **)(a1 + 72);
  sub_1000D9860(&v3);
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  return a1;
}

BOOL sub_1000C208C(int a1, google::protobuf::MessageLite *a2, uint64_t a3, std::string *a4)
{
  sub_1000DD45C(&__p, 2 * a1, 32);
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  BOOL v8 = sub_1000D804C(a1, a2, a3, &v19);
  uint64_t v9 = v19;
  if (v8)
  {
    uint64_t v10 = v20;
    if (v19 != v20)
    {
      do
      {
        int v11 = v24;
        p_p = (void **)__p;
        if ((v24 & 0x80u) == 0) {
          p_p = &__p;
        }
        uint64_t v43 = p_p;
        if ((v24 & 0x80u) != 0) {
          int v11 = v23;
        }
        int v44 = v11;
        LODWORD(v1sub_1000719B4((void *)this + 3) = *(char *)(v9 + 23);
        uint64_t v14 = *(void *)v9;
        BOOL v15 = (int)v13 < 0;
        if ((int)v13 >= 0) {
          uint64_t v14 = v9;
        }
        uint64_t v41 = v14;
        LODWORD(v1sub_1000719B4((void *)this + 3) = v13;
        if (v15) {
          uint64_t v13 = *(void *)(v9 + 8);
        }
        int v42 = v13;
        uint64_t v39 = 0;
        int v40 = -1;
        uint64_t v37 = 0;
        int v38 = -1;
        uint64_t v35 = 0;
        int v36 = -1;
        uint64_t v33 = 0;
        int v34 = -1;
        uint64_t v31 = 0;
        int v32 = -1;
        uint64_t v29 = 0;
        int v30 = -1;
        uint64_t v27 = 0;
        int v28 = -1;
        uint64_t v25 = 0;
        int v26 = -1;
        *(void *)&long long v18 = &v31;
        *((void *)&v18 + sub_1000333D0((uint64_t *)this + 1) = &v29;
        google::protobuf::strings::SubstituteAndAppend(a4, "$0option $1;\n",
          (uint64_t)&v43,
          (uint64_t)&v41,
          (uint64_t)&v39,
          (uint64_t)&v37,
          (uint64_t)&v35,
          (uint64_t)&v33,
          v18,
          (uint64_t)&v27,
          (uint64_t)&v25);
        v9 += 24;
      }
      while (v9 != v10);
      uint64_t v9 = v19;
    }
  }
  uint64_t v16 = v20;
  uint64_t v43 = (void **)&v19;
  sub_1000D9860(&v43);
  if ((char)v24 < 0) {
    operator delete(__p);
  }
  return v9 != v16;
}

void sub_1000C225C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  *(void *)(v21 - 144) = &a13;
  sub_1000D9860((void ***)(v21 - 144));
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::EnumDescriptor::DebugString(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  sub_1000DD45C(__b, 2 * a2, 32);
  uint64_t v50 = 0;
  long long v48 = 0u;
  long long v49 = 0u;
  *(_OWORD *)uint64_t v46 = 0u;
  *(_OWORD *)uint64_t v47 = 0u;
  __int16 v51 = *(_WORD *)a4;
  char v52 = *(unsigned char *)(a4 + 2);
  if (SHIBYTE(v56) < 0)
  {
    sub_1000BB834(&v53, __b[0], (unint64_t)__b[1]);
  }
  else
  {
    long long v53 = *(_OWORD *)__b;
    uint64_t v54 = v56;
  }
  if (*(unsigned char *)a4) {
    SourceLocatioint n = google::protobuf::EnumDescriptor::GetSourceLocation(a1, (uint64_t)&v45);
  }
  else {
    SourceLocatioint n = 0;
  }
  v44[0] = SourceLocation;
  sub_1000C1E44((uint64_t)v44, (std::string *)a3);
  int v9 = HIBYTE(v56);
  uint64_t v10 = __b;
  if (v56 < 0) {
    uint64_t v10 = (void **)__b[0];
  }
  p_data = v10;
  if (v56 < 0) {
    int v9 = (int)__b[1];
  }
  int v77 = v9;
  int v11 = *(const char **)a1;
  int v12 = *(char *)(*(void *)a1 + 23);
  uint64_t v13 = *(void *)(*(void *)a1 + 8);
  if (v12 < 0) {
    int v11 = **(const char ***)a1;
  }
  int v73 = v11;
  int v14 = v12;
  if (v12 < 0) {
    int v14 = v13;
  }
  int v74 = v14;
  uint64_t v71 = 0;
  int v72 = -1;
  uint64_t v69 = 0;
  int v70 = -1;
  uint64_t v67 = 0;
  int v68 = -1;
  uint64_t v65 = 0;
  int v66 = -1;
  uint64_t v63 = 0;
  int v64 = -1;
  uint64_t v61 = 0;
  int v62 = -1;
  uint64_t v59 = 0;
  int v60 = -1;
  uint64_t v57 = 0;
  int v58 = -1;
  *(void *)&long long v36 = &v63;
  *((void *)&v36 + sub_1000333D0((uint64_t *)this + 1) = &v61;
  google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0enum $1 {\n", (uint64_t)&p_data, (uint64_t)&v73, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, v36, (uint64_t)&v59, (uint64_t)&v57);
  int v15 = a2 + 1;
  sub_1000C208C(v15, *(google::protobuf::MessageLite **)(a1 + 32), *(void *)(*(void *)(a1 + 16) + 16), (std::string *)a3);
  if (*(int *)(a1 + 44) >= 1)
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    do
    {
      google::protobuf::EnumValueDescriptor::DebugString(*(void *)(a1 + 48) + v16, v15, (std::string *)a3, (__int16 *)a4);
      ++v17;
      v16 += 40;
    }
    while (v17 < *(int *)(a1 + 44));
  }
  if (*(int *)(a1 + 56) > 0)
  {
    int v18 = HIBYTE(v56);
    uint64_t v19 = __b;
    if (v56 < 0) {
      uint64_t v19 = (void **)__b[0];
    }
    p_data = v19;
    if (v56 < 0) {
      int v18 = (int)__b[1];
    }
    int v77 = v18;
    int v73 = 0;
    int v74 = -1;
    uint64_t v71 = 0;
    int v72 = -1;
    uint64_t v69 = 0;
    int v70 = -1;
    uint64_t v67 = 0;
    int v68 = -1;
    uint64_t v65 = 0;
    int v66 = -1;
    uint64_t v63 = 0;
    int v64 = -1;
    uint64_t v61 = 0;
    int v62 = -1;
    uint64_t v59 = 0;
    int v60 = -1;
    uint64_t v57 = 0;
    int v58 = -1;
    *(void *)&long long v37 = &v63;
    *((void *)&v37 + sub_1000333D0((uint64_t *)this + 1) = &v61;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&p_data, (uint64_t)&v73, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, v37, (uint64_t)&v59, (uint64_t)&v57);
    if (*(int *)(a1 + 56) >= 1)
    {
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      do
      {
        uint64_t v23 = (unsigned int *)(*(void *)(a1 + 64) + v21);
        unsigned __int8 v24 = (google::protobuf *)v23[1];
        if (v24 == *v23)
        {
          p_data = (void **)google::protobuf::FastInt32ToBuffer(v24, v78, v20);
          int v77 = strlen((const char *)p_data);
          int v73 = 0;
          int v74 = -1;
          uint64_t v71 = 0;
          int v72 = -1;
          uint64_t v69 = 0;
          int v70 = -1;
          uint64_t v67 = 0;
          int v68 = -1;
          uint64_t v65 = 0;
          int v66 = -1;
          uint64_t v63 = 0;
          int v64 = -1;
          uint64_t v61 = 0;
          int v62 = -1;
          uint64_t v59 = 0;
          int v60 = -1;
          uint64_t v57 = 0;
          int v58 = -1;
          *((void *)&v38 + sub_1000333D0((uint64_t *)this + 1) = &v61;
          *(void *)&long long v38 = &v63;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0, ", (uint64_t)&p_data, (uint64_t)&v73, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, v38, (uint64_t)&v59, (uint64_t)&v57);
        }
        else
        {
          p_data = (void **)google::protobuf::FastInt32ToBuffer((google::protobuf *)*v23, v78, v20);
          int v77 = strlen((const char *)p_data);
          int v73 = google::protobuf::FastInt32ToBuffer((google::protobuf *)v23[1], v75, v25);
          int v74 = strlen(v73);
          uint64_t v71 = 0;
          int v72 = -1;
          uint64_t v69 = 0;
          int v70 = -1;
          uint64_t v67 = 0;
          int v68 = -1;
          uint64_t v65 = 0;
          int v66 = -1;
          uint64_t v63 = 0;
          int v64 = -1;
          uint64_t v61 = 0;
          int v62 = -1;
          uint64_t v59 = 0;
          int v60 = -1;
          uint64_t v57 = 0;
          int v58 = -1;
          *((void *)&v39 + sub_1000333D0((uint64_t *)this + 1) = &v61;
          *(void *)&long long v39 = &v63;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0 to $1, ", (uint64_t)&p_data, (uint64_t)&v73, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, v39, (uint64_t)&v59, (uint64_t)&v57);
        }
        ++v22;
        v21 += 8;
      }
      while (v22 < *(int *)(a1 + 56));
    }
    if (*(char *)(a3 + 23) < 0) {
      uint64_t v26 = *(void *)(a3 + 8);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(a3 + 23);
    }
    std::string::replace((std::string *)a3, v26 - 2, 2uLL, ";\n");
  }
  if (*(int *)(a1 + 60) >= 1)
  {
    int v27 = HIBYTE(v56);
    int v28 = __b;
    if (v56 < 0) {
      int v28 = (void **)__b[0];
    }
    p_data = v28;
    if (v56 < 0) {
      int v27 = (int)__b[1];
    }
    int v77 = v27;
    int v73 = 0;
    int v74 = -1;
    uint64_t v71 = 0;
    int v72 = -1;
    uint64_t v69 = 0;
    int v70 = -1;
    uint64_t v67 = 0;
    int v68 = -1;
    uint64_t v65 = 0;
    int v66 = -1;
    uint64_t v63 = 0;
    int v64 = -1;
    uint64_t v61 = 0;
    int v62 = -1;
    uint64_t v59 = 0;
    int v60 = -1;
    uint64_t v57 = 0;
    int v58 = -1;
    *(void *)&long long v40 = &v63;
    *((void *)&v40 + sub_1000333D0((uint64_t *)this + 1) = &v61;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&p_data, (uint64_t)&v73, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, v40, (uint64_t)&v59, (uint64_t)&v57);
    if (*(int *)(a1 + 60) >= 1)
    {
      uint64_t v30 = 0;
      do
      {
        google::protobuf::CEscape(*(uint64_t **)(*(void *)(a1 + 72) + 8 * v30), v29, &__p);
        p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          p_p = &__p;
        }
        p_data = (void **)&p_p->__r_.__value_.__l.__data_;
        int v32 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
        if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          int v32 = __p.__r_.__value_.__r.__words[1];
        }
        int v77 = v32;
        int v73 = 0;
        int v74 = -1;
        uint64_t v71 = 0;
        int v72 = -1;
        uint64_t v69 = 0;
        int v70 = -1;
        uint64_t v67 = 0;
        int v68 = -1;
        uint64_t v65 = 0;
        int v66 = -1;
        uint64_t v63 = 0;
        int v64 = -1;
        uint64_t v61 = 0;
        int v62 = -1;
        uint64_t v59 = 0;
        int v60 = -1;
        uint64_t v57 = 0;
        int v58 = -1;
        *(void *)&long long v41 = &v63;
        *((void *)&v41 + sub_1000333D0((uint64_t *)this + 1) = &v61;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "\"$0\", ", (uint64_t)&p_data, (uint64_t)&v73, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, v41, (uint64_t)&v59, (uint64_t)&v57);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        ++v30;
      }
      while (v30 < *(int *)(a1 + 60));
    }
    if (*(char *)(a3 + 23) < 0) {
      uint64_t v33 = *(void *)(a3 + 8);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(a3 + 23);
    }
    std::string::replace((std::string *)a3, v33 - 2, 2uLL, ";\n");
  }
  int v34 = HIBYTE(v56);
  uint64_t v35 = __b;
  if (v56 < 0) {
    uint64_t v35 = (void **)__b[0];
  }
  p_data = v35;
  if (v56 < 0) {
    int v34 = (int)__b[1];
  }
  int v77 = v34;
  int v73 = 0;
  int v74 = -1;
  uint64_t v71 = 0;
  int v72 = -1;
  uint64_t v69 = 0;
  int v70 = -1;
  uint64_t v67 = 0;
  int v68 = -1;
  uint64_t v65 = 0;
  int v66 = -1;
  uint64_t v63 = 0;
  int v64 = -1;
  uint64_t v61 = 0;
  int v62 = -1;
  uint64_t v59 = 0;
  int v60 = -1;
  uint64_t v57 = 0;
  int v58 = -1;
  *(void *)&long long v42 = &v63;
  *((void *)&v42 + sub_1000333D0((uint64_t *)this + 1) = &v61;
  google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0}\n", (uint64_t)&p_data, (uint64_t)&v73, (uint64_t)&v71, (uint64_t)&v69, (uint64_t)&v67, (uint64_t)&v65, v42, (uint64_t)&v59, (uint64_t)&v57);
  sub_1000C1F78((uint64_t)v44, (std::string *)a3);
  if (SHIBYTE(v54) < 0) {
    operator delete((void *)v53);
  }
  p_data = (void **)&v49;
  sub_1000D9860(&p_data);
  if (SHIBYTE(v48) < 0) {
    operator delete(v47[1]);
  }
  if (SHIBYTE(v47[0]) < 0) {
    operator delete(v46[0]);
  }
  if (SHIBYTE(v56) < 0) {
    operator delete(__b[0]);
  }
}

void sub_1000C2A3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,void *__p,uint64_t a29,int a30,__int16 a31,char a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,void *a38,uint64_t a39,int a40,__int16 a41,char a42,char a43,void *a44,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  *(void *)(v49 - 144) = &a34;
  sub_1000D9860((void ***)(v49 - 144));
  if (a33 < 0) {
    operator delete(__p);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a49 < 0) {
    operator delete(a44);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::Descriptor::DebugString(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  if (!*(unsigned char *)(*(void *)(a1 + 32) + 75))
  {
    sub_1000DD45C(__b, 2 * a2, 32);
    uint64_t v99 = 0;
    long long v97 = 0u;
    long long v98 = 0u;
    *(_OWORD *)int v95 = 0u;
    *(_OWORD *)int v96 = 0u;
    __int16 v100 = *(_WORD *)a4;
    char v101 = *(unsigned char *)(a4 + 2);
    if (SHIBYTE(v105) < 0)
    {
      sub_1000BB834(&v102, __b[0], (unint64_t)__b[1]);
    }
    else
    {
      long long v102 = *(_OWORD *)__b;
      uint64_t v103 = v105;
    }
    if (*(unsigned char *)a4) {
      SourceLocatioint n = google::protobuf::Descriptor::GetSourceLocation(a1, (uint64_t)&v94);
    }
    else {
      SourceLocatioint n = 0;
    }
    v93[0] = SourceLocation;
    sub_1000C1E44((uint64_t)v93, (std::string *)a3);
    if (a5)
    {
      int v11 = HIBYTE(v105);
      int v12 = __b;
      if (v105 < 0) {
        int v12 = (void **)__b[0];
      }
      p_data = v12;
      if (v105 < 0) {
        int v11 = (int)__b[1];
      }
      LODWORD(v127[0]) = v11;
      uint64_t v13 = *(const char **)a1;
      int v14 = *(char *)(*(void *)a1 + 23);
      uint64_t v15 = *(void *)(*(void *)a1 + 8);
      if (v14 < 0) {
        uint64_t v13 = **(const char ***)a1;
      }
      v123 = v13;
      int v16 = v14;
      if (v14 < 0) {
        int v16 = v15;
      }
      int v124 = v16;
      v120 = 0;
      int v121 = -1;
      uint64_t v118 = 0;
      int v119 = -1;
      uint64_t v116 = 0;
      int v117 = -1;
      uint64_t v114 = 0;
      int v115 = -1;
      uint64_t v112 = 0;
      int v113 = -1;
      uint64_t v110 = 0;
      int v111 = -1;
      uint64_t v108 = 0;
      int v109 = -1;
      uint64_t v106 = 0;
      int v107 = -1;
      *(void *)&long long v78 = &v112;
      *((void *)&v78 + sub_1000333D0((uint64_t *)this + 1) = &v110;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0message $1", (uint64_t)&p_data, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v78, (uint64_t)&v108, (uint64_t)&v106);
    }
    std::string::append((std::string *)a3, " {\n");
    uint64_t v17 = (a2 + 1);
    sub_1000C208C(a2 + 1, *(google::protobuf::MessageLite **)(a1 + 32), *(void *)(*(void *)(a1 + 16) + 16), (std::string *)a3);
    int v89 = a2;
    v92[0] = 0;
    v92[1] = 0;
    uint64_t v91 = (uint64_t *)v92;
    if (*(int *)(a1 + 104) >= 1)
    {
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      do
      {
        uint64_t v21 = *(void *)(a1 + 40);
        uint64_t v22 = v21 + v19;
        uint64_t v23 = *(std::once_flag::_State_type **)(v21 + v19 + 48);
        if (v23)
        {
          v120 = (const char *)google::protobuf::FieldDescriptor::TypeOnceInit;
          uint64_t v118 = v21 + v19;
          if (atomic_load_explicit((atomic_ullong *volatile)v23, memory_order_acquire) != -1)
          {
            p_data = (void **)&v120;
            v127[0] = &v118;
            v123 = (const char *)&p_data;
            std::__call_once(v23, &v123, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        if (*(_DWORD *)(v22 + 56) == 10)
        {
          p_data = (void **)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(*(void *)(a1 + 40) + v19));
          sub_1000DD540(&v91, (unint64_t *)&p_data, (uint64_t *)&p_data);
        }
        ++v20;
        v19 += 152;
      }
      while (v20 < *(int *)(a1 + 104));
    }
    if (*(int *)(a1 + 128) >= 1)
    {
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      do
      {
        uint64_t v26 = *(void *)(a1 + 80);
        uint64_t v27 = v26 + v24;
        int v28 = *(std::once_flag::_State_type **)(v26 + v24 + 48);
        if (v28)
        {
          v120 = (const char *)google::protobuf::FieldDescriptor::TypeOnceInit;
          uint64_t v118 = v26 + v24;
          if (atomic_load_explicit((atomic_ullong *volatile)v28, memory_order_acquire) != -1)
          {
            p_data = (void **)&v120;
            v127[0] = &v118;
            v123 = (const char *)&p_data;
            std::__call_once(v28, &v123, (void (__cdecl *)(void *))sub_1000BB820);
          }
        }
        if (*(_DWORD *)(v27 + 56) == 10)
        {
          p_data = (void **)google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)(*(void *)(a1 + 80) + v24));
          sub_1000DD540(&v91, (unint64_t *)&p_data, (uint64_t *)&p_data);
        }
        ++v25;
        v24 += 152;
      }
      while (v25 < *(int *)(a1 + 128));
    }
    int v29 = *(_DWORD *)(a1 + 116);
    if (v29 >= 1)
    {
      for (uint64_t i = 0; i < v29; ++i)
      {
        unint64_t v31 = *(void *)(a1 + 56) + 144 * i;
        for (uint64_t j = v92[0]; j; uint64_t j = (void *)*j)
        {
          unint64_t v33 = j[4];
          if (v31 >= v33)
          {
            if (v33 >= v31) {
              goto LABEL_42;
            }
            ++j;
          }
        }
        google::protobuf::Descriptor::DebugString(v31, v17, a3, a4, 1);
        int v29 = *(_DWORD *)(a1 + 116);
LABEL_42:
        ;
      }
    }
    if (*(int *)(a1 + 120) >= 1)
    {
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      do
      {
        google::protobuf::EnumDescriptor::DebugString(*(void *)(a1 + 64) + v34, v17, a3, a4);
        ++v35;
        v34 += 80;
      }
      while (v35 < *(int *)(a1 + 120));
    }
    if (*(int *)(a1 + 104) >= 1)
    {
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      do
      {
        uint64_t v38 = *(void *)(a1 + 40) + v36;
        uint64_t v39 = *(void *)(v38 + 88);
        if (v39)
        {
          if (v38 == **(void **)(v39 + 32)) {
            google::protobuf::OneofDescriptor::DebugString(v39, v17, (std::string *)a3, (__int16 *)a4);
          }
        }
        else
        {
          google::protobuf::FieldDescriptor::DebugString(*(void *)(a1 + 40) + v36, v17, a3, a4);
        }
        ++v37;
        v36 += 152;
      }
      while (v37 < *(int *)(a1 + 104));
    }
    if (*(int *)(a1 + 124) >= 1)
    {
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      do
      {
        int v42 = HIBYTE(v105);
        uint64_t v43 = (void **)__b[0];
        if (v105 >= 0) {
          uint64_t v43 = __b;
        }
        p_data = v43;
        if (v105 < 0) {
          int v42 = (int)__b[1];
        }
        LODWORD(v127[0]) = v42;
        v123 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(*(void *)(a1 + 72) + v40), v125, v18);
        int v124 = strlen(v123);
        v120 = google::protobuf::FastInt32ToBuffer((google::protobuf *)(*(_DWORD *)(*(void *)(a1 + 72) + v40 + 4) - 1), v122, v44);
        int v121 = strlen(v120);
        uint64_t v118 = 0;
        int v119 = -1;
        uint64_t v116 = 0;
        int v117 = -1;
        uint64_t v114 = 0;
        int v115 = -1;
        uint64_t v112 = 0;
        int v113 = -1;
        uint64_t v110 = 0;
        int v111 = -1;
        uint64_t v108 = 0;
        int v109 = -1;
        uint64_t v106 = 0;
        int v107 = -1;
        *(void *)&long long v79 = &v112;
        *((void *)&v79 + sub_1000333D0((uint64_t *)this + 1) = &v110;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  extensions $1 to $2;\n",
          (uint64_t)&p_data,
          (uint64_t)&v123,
          (uint64_t)&v120,
          (uint64_t)&v118,
          (uint64_t)&v116,
          (uint64_t)&v114,
          v79,
          (uint64_t)&v108,
          (uint64_t)&v106);
        ++v41;
        v40 += 16;
      }
      while (v41 < *(int *)(a1 + 124));
    }
    if (*(int *)(a1 + 128) >= 1)
    {
      uint64_t v45 = 0;
      uint64_t v46 = 0;
      uint64_t v47 = 80;
      do
      {
        uint64_t v48 = *(void *)(a1 + 80);
        if (*(void *)(v48 + v47) != v46)
        {
          uint64_t v46 = *(void *)(v48 + v47);
          if (v47 != 80)
          {
            int v49 = HIBYTE(v105);
            uint64_t v50 = (void **)__b[0];
            if (v105 >= 0) {
              uint64_t v50 = __b;
            }
            p_data = v50;
            if (v105 < 0) {
              int v49 = (int)__b[1];
            }
            LODWORD(v127[0]) = v49;
            v123 = 0;
            int v124 = -1;
            v120 = 0;
            int v121 = -1;
            uint64_t v118 = 0;
            int v119 = -1;
            uint64_t v116 = 0;
            int v117 = -1;
            uint64_t v114 = 0;
            int v115 = -1;
            uint64_t v112 = 0;
            int v113 = -1;
            uint64_t v110 = 0;
            int v111 = -1;
            uint64_t v108 = 0;
            int v109 = -1;
            uint64_t v106 = 0;
            int v107 = -1;
            *((void *)&v80 + sub_1000333D0((uint64_t *)this + 1) = &v110;
            *(void *)&long long v80 = &v112;
            google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  }\n", (uint64_t)&p_data, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v80, (uint64_t)&v108, (uint64_t)&v106);
            uint64_t v46 = *(void *)(*(void *)(a1 + 80) + v47);
          }
          int v51 = HIBYTE(v105);
          char v52 = (void **)__b[0];
          if (v105 >= 0) {
            char v52 = __b;
          }
          p_data = v52;
          if (v105 < 0) {
            int v51 = (int)__b[1];
          }
          LODWORD(v127[0]) = v51;
          long long v53 = *(const char **)(v46 + 8);
          int v54 = v53[23];
          uint64_t v55 = *((void *)v53 + 1);
          if (v54 < 0) {
            long long v53 = *(const char **)v53;
          }
          v123 = v53;
          int v56 = v54;
          if (v54 < 0) {
            int v56 = v55;
          }
          int v124 = v56;
          v120 = 0;
          int v121 = -1;
          uint64_t v118 = 0;
          int v119 = -1;
          uint64_t v116 = 0;
          int v117 = -1;
          uint64_t v114 = 0;
          int v115 = -1;
          uint64_t v112 = 0;
          int v113 = -1;
          uint64_t v110 = 0;
          int v111 = -1;
          uint64_t v108 = 0;
          int v109 = -1;
          uint64_t v106 = 0;
          int v107 = -1;
          *((void *)&v81 + sub_1000333D0((uint64_t *)this + 1) = &v110;
          *(void *)&long long v81 = &v112;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  extend .$1 {\n", (uint64_t)&p_data, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v81, (uint64_t)&v108, (uint64_t)&v106);
          uint64_t v48 = *(void *)(a1 + 80);
        }
        google::protobuf::FieldDescriptor::DebugString(v48 + v47 - 80, (v89 + 2), a3, a4);
        ++v45;
        uint64_t v57 = *(int *)(a1 + 128);
        v47 += 152;
      }
      while (v45 < v57);
      if ((int)v57 > 0)
      {
        int v58 = HIBYTE(v105);
        uint64_t v59 = __b;
        if (v105 < 0) {
          uint64_t v59 = (void **)__b[0];
        }
        p_data = v59;
        if (v105 < 0) {
          int v58 = (int)__b[1];
        }
        LODWORD(v127[0]) = v58;
        v123 = 0;
        int v124 = -1;
        v120 = 0;
        int v121 = -1;
        uint64_t v118 = 0;
        int v119 = -1;
        uint64_t v116 = 0;
        int v117 = -1;
        uint64_t v114 = 0;
        int v115 = -1;
        uint64_t v112 = 0;
        int v113 = -1;
        uint64_t v110 = 0;
        int v111 = -1;
        uint64_t v108 = 0;
        int v109 = -1;
        uint64_t v106 = 0;
        int v107 = -1;
        *(void *)&long long v82 = &v112;
        *((void *)&v82 + sub_1000333D0((uint64_t *)this + 1) = &v110;
        google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  }\n", (uint64_t)&p_data, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v82, (uint64_t)&v108, (uint64_t)&v106);
      }
    }
    if (*(int *)(a1 + 132) >= 1)
    {
      int v60 = HIBYTE(v105);
      uint64_t v61 = __b;
      if (v105 < 0) {
        uint64_t v61 = (void **)__b[0];
      }
      p_data = v61;
      if (v105 < 0) {
        int v60 = (int)__b[1];
      }
      LODWORD(v127[0]) = v60;
      v123 = 0;
      int v124 = -1;
      v120 = 0;
      int v121 = -1;
      uint64_t v118 = 0;
      int v119 = -1;
      uint64_t v116 = 0;
      int v117 = -1;
      uint64_t v114 = 0;
      int v115 = -1;
      uint64_t v112 = 0;
      int v113 = -1;
      uint64_t v110 = 0;
      int v111 = -1;
      uint64_t v108 = 0;
      int v109 = -1;
      uint64_t v106 = 0;
      int v107 = -1;
      *(void *)&long long v83 = &v112;
      *((void *)&v83 + sub_1000333D0((uint64_t *)this + 1) = &v110;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&p_data, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v83, (uint64_t)&v108, (uint64_t)&v106);
      if (*(int *)(a1 + 132) >= 1)
      {
        uint64_t v63 = 0;
        uint64_t v64 = 0;
        do
        {
          uint64_t v65 = (unsigned int *)(*(void *)(a1 + 88) + v63);
          int v66 = (google::protobuf *)*v65;
          if (v65[1] == v66 + 1)
          {
            p_data = (void **)google::protobuf::FastInt32ToBuffer(v66, (unsigned char *)v127 + 4, v62);
            LODWORD(v127[0]) = strlen((const char *)p_data);
            v123 = 0;
            int v124 = -1;
            v120 = 0;
            int v121 = -1;
            uint64_t v118 = 0;
            int v119 = -1;
            uint64_t v116 = 0;
            int v117 = -1;
            uint64_t v114 = 0;
            int v115 = -1;
            uint64_t v112 = 0;
            int v113 = -1;
            uint64_t v110 = 0;
            int v111 = -1;
            uint64_t v108 = 0;
            int v109 = -1;
            uint64_t v106 = 0;
            int v107 = -1;
            *((void *)&v84 + sub_1000333D0((uint64_t *)this + 1) = &v110;
            *(void *)&long long v84 = &v112;
            google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0, ", (uint64_t)&p_data, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v84, (uint64_t)&v108, (uint64_t)&v106);
          }
          else
          {
            p_data = (void **)google::protobuf::FastInt32ToBuffer(v66, (unsigned char *)v127 + 4, v62);
            LODWORD(v127[0]) = strlen((const char *)p_data);
            v123 = google::protobuf::FastInt32ToBuffer((google::protobuf *)(v65[1] - 1), v125, v67);
            int v124 = strlen(v123);
            v120 = 0;
            int v121 = -1;
            uint64_t v118 = 0;
            int v119 = -1;
            uint64_t v116 = 0;
            int v117 = -1;
            uint64_t v114 = 0;
            int v115 = -1;
            uint64_t v112 = 0;
            int v113 = -1;
            uint64_t v110 = 0;
            int v111 = -1;
            uint64_t v108 = 0;
            int v109 = -1;
            uint64_t v106 = 0;
            int v107 = -1;
            *((void *)&v85 + sub_1000333D0((uint64_t *)this + 1) = &v110;
            *(void *)&long long v85 = &v112;
            google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0 to $1, ", (uint64_t)&p_data, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v85, (uint64_t)&v108, (uint64_t)&v106);
          }
          ++v64;
          v63 += 8;
        }
        while (v64 < *(int *)(a1 + 132));
      }
      if (*(char *)(a3 + 23) < 0) {
        uint64_t v68 = *(void *)(a3 + 8);
      }
      else {
        uint64_t v68 = *(unsigned __int8 *)(a3 + 23);
      }
      std::string::replace((std::string *)a3, v68 - 2, 2uLL, ";\n");
    }
    if (*(int *)(a1 + 136) >= 1)
    {
      int v69 = HIBYTE(v105);
      int v70 = __b;
      if (v105 < 0) {
        int v70 = (void **)__b[0];
      }
      p_data = v70;
      if (v105 < 0) {
        int v69 = (int)__b[1];
      }
      LODWORD(v127[0]) = v69;
      v123 = 0;
      int v124 = -1;
      v120 = 0;
      int v121 = -1;
      uint64_t v118 = 0;
      int v119 = -1;
      uint64_t v116 = 0;
      int v117 = -1;
      uint64_t v114 = 0;
      int v115 = -1;
      uint64_t v112 = 0;
      int v113 = -1;
      uint64_t v110 = 0;
      int v111 = -1;
      uint64_t v108 = 0;
      int v109 = -1;
      uint64_t v106 = 0;
      int v107 = -1;
      *(void *)&long long v86 = &v112;
      *((void *)&v86 + sub_1000333D0((uint64_t *)this + 1) = &v110;
      google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0  reserved ", (uint64_t)&p_data, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v86, (uint64_t)&v108, (uint64_t)&v106);
      if (*(int *)(a1 + 136) >= 1)
      {
        uint64_t v72 = 0;
        do
        {
          google::protobuf::CEscape(*(uint64_t **)(*(void *)(a1 + 96) + 8 * v72), v71, &__p);
          p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            p_p = &__p;
          }
          p_data = (void **)&p_p->__r_.__value_.__l.__data_;
          int v74 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
          if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            int v74 = __p.__r_.__value_.__r.__words[1];
          }
          LODWORD(v127[0]) = v74;
          v123 = 0;
          int v124 = -1;
          v120 = 0;
          int v121 = -1;
          uint64_t v118 = 0;
          int v119 = -1;
          uint64_t v116 = 0;
          int v117 = -1;
          uint64_t v114 = 0;
          int v115 = -1;
          uint64_t v112 = 0;
          int v113 = -1;
          uint64_t v110 = 0;
          int v111 = -1;
          uint64_t v108 = 0;
          int v109 = -1;
          uint64_t v106 = 0;
          int v107 = -1;
          *(void *)&long long v87 = &v112;
          *((void *)&v87 + sub_1000333D0((uint64_t *)this + 1) = &v110;
          google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "\"$0\", ", (uint64_t)&p_data, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v87, (uint64_t)&v108, (uint64_t)&v106);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          ++v72;
        }
        while (v72 < *(int *)(a1 + 136));
      }
      if (*(char *)(a3 + 23) < 0) {
        uint64_t v75 = *(void *)(a3 + 8);
      }
      else {
        uint64_t v75 = *(unsigned __int8 *)(a3 + 23);
      }
      std::string::replace((std::string *)a3, v75 - 2, 2uLL, ";\n");
    }
    int v76 = HIBYTE(v105);
    int v77 = __b;
    if (v105 < 0) {
      int v77 = (void **)__b[0];
    }
    p_data = v77;
    if (v105 < 0) {
      int v76 = (int)__b[1];
    }
    LODWORD(v127[0]) = v76;
    v123 = 0;
    int v124 = -1;
    v120 = 0;
    int v121 = -1;
    uint64_t v118 = 0;
    int v119 = -1;
    uint64_t v116 = 0;
    int v117 = -1;
    uint64_t v114 = 0;
    int v115 = -1;
    uint64_t v112 = 0;
    int v113 = -1;
    uint64_t v110 = 0;
    int v111 = -1;
    uint64_t v108 = 0;
    int v109 = -1;
    uint64_t v106 = 0;
    int v107 = -1;
    *(void *)&long long v88 = &v112;
    *((void *)&v88 + sub_1000333D0((uint64_t *)this + 1) = &v110;
    google::protobuf::strings::SubstituteAndAppend((std::string *)a3, "$0}\n", (uint64_t)&p_data, (uint64_t)&v123, (uint64_t)&v120, (uint64_t)&v118, (uint64_t)&v116, (uint64_t)&v114, v88, (uint64_t)&v108, (uint64_t)&v106);
    sub_1000C1F78((uint64_t)v93, (std::string *)a3);
    sub_10002770C((uint64_t)&v91, v92[0]);
    if (SHIBYTE(v103) < 0) {
      operator delete((void *)v102);
    }
    p_data = (void **)&v98;
    sub_1000D9860(&p_data);
    if (SHIBYTE(v97) < 0) {
      operator delete(v96[1]);
    }
    if (SHIBYTE(v96[0]) < 0) {
      operator delete(v95[0]);
    }
    if (SHIBYTE(v105) < 0) {
      operator delete(__b[0]);
    }
  }
}

void sub_1000C38EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,void *a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,void *a42,uint64_t a43,int a44,__int16 a45,char a46,char a47,void *__p,uint64_t a49,int a50,__int16 a51,char a52,char a53)
{
  if (a53 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::FieldDescriptor::DebugString(uint64_t a1, int a2, std::string *a3, uint64_t a4)
{
  sub_1000DD45C(__b, 2 * a2, 32);
  memset(&v49, 0, sizeof(v49));
  BOOL v8 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v8)
  {
    long long v79 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
    int v77 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a1;
    if (atomic_load_explicit((atomic_ullong *volatile)v8, memory_order_acquire) != -1)
    {
      v55.__r_.__value_.__r.__words[0] = (std::string::size_type)&v79;
      v55.__r_.__value_.__l.__size_ = (std::string::size_type)&v77;
      v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v55;
      std::__call_once(v8, v81, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (*(_DWORD *)(a1 + 56) == 11 && *(unsigned char *)(*(void *)(*(void *)(a1 + 104) + 32) + 75))
  {
    uint64_t v9 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString(*(google::protobuf::FieldDescriptor **)(v9 + 40), &v52);
    uint64_t v10 = v52;
    if ((v54 & 0x80u) == 0) {
      uint64_t v10 = &v52;
    }
    v55.__r_.__value_.__r.__words[0] = (std::string::size_type)v10;
    int v11 = v54;
    if ((v54 & 0x80u) != 0) {
      int v11 = v53;
    }
    LODWORD(v55.__r_.__value_.__r.__words[1]) = v11;
    uint64_t v12 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString((google::protobuf::FieldDescriptor *)(*(void *)(v12 + 40) + 152), &__p);
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)p_p;
    int v14 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v14 = __p.__r_.__value_.__r.__words[1];
    }
    LODWORD(v81[0].__r_.__value_.__r.__words[1]) = v14;
    long long v79 = 0;
    LODWORD(v8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = -1;
    int v77 = 0;
    int v78 = -1;
    uint64_t v75 = 0;
    int v76 = -1;
    int v73 = 0;
    LODWORD(v74) = -1;
    uint64_t v71 = 0;
    int v72 = -1;
    int v69 = 0;
    int v70 = -1;
    uint64_t v67 = 0;
    int v68 = -1;
    uint64_t v65 = 0;
    int v66 = -1;
    *(void *)&long long v44 = &v71;
    *((void *)&v44 + sub_1000333D0((uint64_t *)this + 1) = &v69;
    google::protobuf::strings::SubstituteAndAppend(&v49, "map<$0, $1>", (uint64_t)&v55, (uint64_t)v81, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, v44, (uint64_t)&v67, (uint64_t)&v65);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    if ((char)v54 < 0) {
      operator delete(v52);
    }
  }
  else
  {
    google::protobuf::FieldDescriptor::FieldTypeNameDebugString((google::protobuf::FieldDescriptor *)a1, &v55);
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
    std::string v49 = v55;
  }
  v55.__r_.__value_.__r.__words[0] = (std::string::size_type)google::protobuf::FieldDescriptor::kLabelToName[*(unsigned int *)(a1 + 60)];
  v55.__r_.__value_.__l.__size_ = strlen(v55.__r_.__value_.__l.__data_);
  v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)" ";
  v81[0].__r_.__value_.__l.__size_ = 1;
  google::protobuf::StrCat((uint64_t)&v55, (uint64_t)v81, &__p);
  uint64_t v15 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v15)
  {
    long long v79 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::TypeOnceInit;
    int v77 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a1;
    if (atomic_load_explicit((atomic_ullong *volatile)v15, memory_order_acquire) != -1)
    {
      v55.__r_.__value_.__r.__words[0] = (std::string::size_type)&v79;
      v55.__r_.__value_.__l.__size_ = (std::string::size_type)&v77;
      v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v55;
      std::__call_once(v15, v81, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (*(_DWORD *)(a1 + 56) == 11 && *(unsigned char *)(*(void *)(*(void *)(a1 + 104) + 32) + 75)
    || *(void *)(a1 + 88)
    || *(_DWORD *)(a1 + 60) == 1 && !*(unsigned char *)(a1 + 65) && *(_DWORD *)(*(void *)(a1 + 40) + 60) != 2)
  {
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      *__p.__r_.__value_.__l.__data_ = 0;
      __p.__r_.__value_.__l.__size_ = 0;
    }
    else
    {
      __p.__r_.__value_.__s.__data_[0] = 0;
      *((unsigned char *)&__p.__r_.__value_.__s + 2sub_1000719B4((void *)this + 3) = 0;
    }
  }
  uint64_t v60 = 0;
  long long v59 = 0u;
  long long v58 = 0u;
  long long v57 = 0u;
  long long v56 = 0u;
  __int16 v61 = *(_WORD *)a4;
  char v62 = *(unsigned char *)(a4 + 2);
  if (SHIBYTE(v51) < 0)
  {
    sub_1000BB834(&v63, __b[0], (unint64_t)__b[1]);
  }
  else
  {
    long long v63 = *(_OWORD *)__b;
    uint64_t v64 = v51;
  }
  if (*(unsigned char *)a4) {
    SourceLocatioint n = google::protobuf::FieldDescriptor::GetSourceLocation(a1, (uint64_t)&v55.__r_.__value_.__l.__size_);
  }
  else {
    SourceLocatioint n = 0;
  }
  v55.__r_.__value_.__s.__data_[0] = SourceLocation;
  sub_1000C1E44((uint64_t)&v55, a3);
  int v18 = HIBYTE(v51);
  uint64_t v19 = __b;
  if (v51 < 0) {
    uint64_t v19 = (void **)__b[0];
  }
  v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v19;
  if (v51 < 0) {
    int v18 = (int)__b[1];
  }
  LODWORD(v81[0].__r_.__value_.__r.__words[1]) = v18;
  int v20 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  uint64_t v21 = &__p;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v21 = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  long long v79 = (uint64_t (**)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v21;
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v20 = __p.__r_.__value_.__r.__words[1];
  }
  LODWORD(v8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = v20;
  int v22 = HIBYTE(v49.__r_.__value_.__r.__words[2]);
  uint64_t v23 = &v49;
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v23 = (std::string *)v49.__r_.__value_.__r.__words[0];
  }
  int v77 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))v23;
  if ((v49.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    int v22 = v49.__r_.__value_.__r.__words[1];
  }
  int v78 = v22;
  uint64_t v24 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v24)
  {
    int v69 = google::protobuf::FieldDescriptor::TypeOnceInit;
    uint64_t v67 = a1;
    if (atomic_load_explicit((atomic_ullong *volatile)v24, memory_order_acquire) != -1)
    {
      int v73 = (const char *)&v69;
      int v74 = &v67;
      uint64_t v71 = &v73;
      std::__call_once(v24, &v71, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  uint64_t v25 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))a1;
  if (*(_DWORD *)(a1 + 56) == 10) {
    uint64_t v25 = (uint64_t (***)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
  }
  uint64_t v26 = (uint64_t (*)(google::protobuf::FieldDescriptor *__hidden, const google::protobuf::FieldDescriptor *))*v25;
  int v27 = *((char *)*v25 + 23);
  int v28 = (*v25)[1];
  if (v27 < 0) {
    uint64_t v26 = **v25;
  }
  uint64_t v75 = v26;
  int v29 = v27;
  if (v27 < 0) {
    int v29 = (int)v28;
  }
  int v76 = v29;
  int v73 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(a1 + 68), (unsigned char *)&v74 + 4, v17);
  LODWORD(v74) = strlen(v73);
  uint64_t v71 = 0;
  int v72 = -1;
  int v69 = 0;
  int v70 = -1;
  uint64_t v67 = 0;
  int v68 = -1;
  uint64_t v65 = 0;
  int v66 = -1;
  char v52 = 0;
  LODWORD(v5sub_1000719B4((void *)this + 3) = -1;
  *(void *)&long long v45 = &v69;
  *((void *)&v45 + sub_1000333D0((uint64_t *)this + 1) = &v67;
  google::protobuf::strings::SubstituteAndAppend(a3, "$0$1$2 $3 = $4", (uint64_t)v81, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, (uint64_t)&v71, v45, (uint64_t)&v65, (uint64_t)&v52);
  if (*(unsigned char *)(a1 + 64))
  {
    google::protobuf::FieldDescriptor::DefaultValueAsString((google::protobuf::FieldDescriptor *)a1, (char *)1, v30, &v47);
    unint64_t v31 = (std::string *)v47.__r_.__value_.__r.__words[0];
    if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      unint64_t v31 = &v47;
    }
    v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)v31;
    int v32 = HIBYTE(v47.__r_.__value_.__r.__words[2]);
    if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v32 = v47.__r_.__value_.__r.__words[1];
    }
    LODWORD(v81[0].__r_.__value_.__r.__words[1]) = v32;
    long long v79 = 0;
    LODWORD(v8google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = -1;
    int v77 = 0;
    int v78 = -1;
    uint64_t v75 = 0;
    int v76 = -1;
    int v73 = 0;
    LODWORD(v74) = -1;
    uint64_t v71 = 0;
    int v72 = -1;
    int v69 = 0;
    int v70 = -1;
    uint64_t v67 = 0;
    int v68 = -1;
    uint64_t v65 = 0;
    int v66 = -1;
    char v52 = 0;
    LODWORD(v5sub_1000719B4((void *)this + 3) = -1;
    *(void *)&long long v46 = &v69;
    *((void *)&v46 + sub_1000333D0((uint64_t *)this + 1) = &v67;
    google::protobuf::strings::SubstituteAndAppend(a3, " [default = $0", (uint64_t)v81, (uint64_t)&v79, (uint64_t)&v77, (uint64_t)&v75, (uint64_t)&v73, (uint64_t)&v71, v46, (uint64_t)&v65, (uint64_t)&v52);
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    if (!*(unsigned char *)(a1 + 66)) {
      goto LABEL_80;
    }
    unint64_t v33 = ", ";
LABEL_71:
    std::string::append(a3, v33);
    std::string::append(a3, "json_name = \"");
    google::protobuf::CEscape(*(uint64_t **)(a1 + 32), v34, v81);
    if ((v81[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v35 = v81;
    }
    else {
      uint64_t v35 = (std::string *)v81[0].__r_.__value_.__r.__words[0];
    }
    if ((v81[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(v81[0].__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = v81[0].__r_.__value_.__l.__size_;
    }
    std::string::append(a3, (const std::string::value_type *)v35, size);
    if (SHIBYTE(v81[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v81[0].__r_.__value_.__l.__data_);
    }
    std::string::append(a3, "\"");
LABEL_80:
    int v37 = 1;
    goto LABEL_81;
  }
  if (*(unsigned char *)(a1 + 66))
  {
    unint64_t v33 = " [";
    goto LABEL_71;
  }
  int v37 = 0;
LABEL_81:
  memset(v81, 0, 24);
  if (sub_1000C4A2C(a2, *(google::protobuf::MessageLite **)(a1 + 120), *(void *)(*(void *)(a1 + 40) + 16), v81))
  {
    if (v37) {
      uint64_t v38 = ", ";
    }
    else {
      uint64_t v38 = " [";
    }
    std::string::append(a3, v38);
    if ((v81[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v39 = v81;
    }
    else {
      uint64_t v39 = (std::string *)v81[0].__r_.__value_.__r.__words[0];
    }
    if ((v81[0].__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v40 = HIBYTE(v81[0].__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v40 = v81[0].__r_.__value_.__l.__size_;
    }
    std::string::append(a3, (const std::string::value_type *)v39, v40);
    goto LABEL_93;
  }
  if (v37) {
LABEL_93:
  }
    std::string::append(a3, "]");
  uint64_t v41 = *(std::once_flag::_State_type **)(a1 + 48);
  if (v41)
  {
    uint64_t v75 = google::protobuf::FieldDescriptor::TypeOnceInit;
    int v73 = (const char *)a1;
    if (atomic_load_explicit((atomic_ullong *volatile)v41, memory_order_acquire) != -1)
    {
      long long v79 = &v75;
      long long v80 = &v73;
      int v77 = &v79;
      std::__call_once(v41, &v77, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if (*(_DWORD *)(a1 + 56) != 10)
  {
    int v42 = ";\n";
    goto LABEL_101;
  }
  if (*(unsigned char *)(a4 + 1))
  {
    int v42 = " { ... };\n";
LABEL_101:
    std::string::append(a3, v42);
    goto LABEL_102;
  }
  uint64_t v43 = google::protobuf::FieldDescriptor::message_type((google::protobuf::FieldDescriptor *)a1);
  google::protobuf::Descriptor::DebugString(v43, a2, (uint64_t)a3, a4, 0);
LABEL_102:
  sub_1000C1F78((uint64_t)&v55, a3);
  if (SHIBYTE(v81[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v81[0].__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v64) < 0) {
    operator delete((void *)v63);
  }
  v81[0].__r_.__value_.__r.__words[0] = (std::string::size_type)&v59;
  sub_1000D9860((void ***)v81);
  if (SHIBYTE(v58) < 0) {
    operator delete(*((void **)&v57 + 1));
  }
  if (SBYTE7(v57) < 0) {
    operator delete((void *)v56);
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v49.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v51) < 0) {
    operator delete(__b[0]);
  }
}

void sub_1000C426C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,void *a35,uint64_t a36,int a37,__int16 a38,char a39,char a40)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  if (a40 < 0) {
    operator delete(a35);
  }
  if (a27 < 0) {
    operator delete(a22);
  }
  if (a34 < 0) {
    operator delete(a29);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::OneofDescriptor::DebugString(uint64_t a1, int a2, std::string *a3, __int16 *a4)
{
  sub_1000DD45C(__b, 2 * a2, 32);
  uint64_t v27 = 0;
  long long v26 = 0u;
  long long v25 = 0u;
  *(_OWORD *)uint64_t v24 = 0u;
  *(_OWORD *)uint64_t v23 = 0u;
  __int16 v28 = *a4;
  char v29 = *((unsigned char *)a4 + 2);
  if (SHIBYTE(v33) < 0)
  {
    sub_1000BB834(&__p, __b[0], (unint64_t)__b[1]);
  }
  else
  {
    long long __p = *(_OWORD *)__b;
    uint64_t v31 = v33;
  }
  if (*(unsigned char *)a4) {
    SourceLocatioint n = google::protobuf::OneofDescriptor::GetSourceLocation(a1, (uint64_t)&v22);
  }
  else {
    SourceLocatioint n = 0;
  }
  v21[0] = SourceLocation;
  sub_1000C1E44((uint64_t)v21, a3);
  int v9 = HIBYTE(v33);
  uint64_t v10 = __b;
  if (v33 < 0) {
    uint64_t v10 = (void **)__b[0];
  }
  char v52 = v10;
  if (v33 < 0) {
    int v9 = (int)__b[1];
  }
  int v53 = v9;
  int v11 = *(uint64_t **)a1;
  int v12 = *(char *)(*(void *)a1 + 23);
  uint64_t v13 = *(void *)(*(void *)a1 + 8);
  if (v12 < 0) {
    int v11 = **(uint64_t ***)a1;
  }
  uint64_t v50 = v11;
  int v14 = v12;
  if (v12 < 0) {
    int v14 = v13;
  }
  int v51 = v14;
  uint64_t v48 = 0;
  int v49 = -1;
  uint64_t v46 = 0;
  int v47 = -1;
  uint64_t v44 = 0;
  int v45 = -1;
  uint64_t v42 = 0;
  int v43 = -1;
  uint64_t v40 = 0;
  int v41 = -1;
  uint64_t v38 = 0;
  int v39 = -1;
  uint64_t v36 = 0;
  int v37 = -1;
  uint64_t v34 = 0;
  int v35 = -1;
  *(void *)&long long v19 = &v40;
  *((void *)&v19 + sub_1000333D0((uint64_t *)this + 1) = &v38;
  google::protobuf::strings::SubstituteAndAppend(a3, "$0oneof $1 {", (uint64_t)&v52, (uint64_t)&v50, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v42, v19, (uint64_t)&v36, (uint64_t)&v34);
  uint64_t v15 = (a2 + 1);
  sub_1000C208C(v15, *(google::protobuf::MessageLite **)(a1 + 40), *(void *)(*(void *)(*(void *)(a1 + 16) + 16) + 16), a3);
  if (*((unsigned char *)a4 + 2))
  {
    std::string::append(a3, " ... }\n");
  }
  else
  {
    std::string::append(a3, "\n");
    if (*(int *)(a1 + 24) >= 1)
    {
      uint64_t v16 = 0;
      do
        google::protobuf::FieldDescriptor::DebugString(*(void *)(*(void *)(a1 + 32) + 8 * v16++), v15, a3, a4);
      while (v16 < *(int *)(a1 + 24));
    }
    int v17 = HIBYTE(v33);
    int v18 = __b;
    if (v33 < 0) {
      int v18 = (void **)__b[0];
    }
    char v52 = v18;
    if (v33 < 0) {
      int v17 = (int)__b[1];
    }
    int v53 = v17;
    uint64_t v50 = 0;
    int v51 = -1;
    uint64_t v48 = 0;
    int v49 = -1;
    uint64_t v46 = 0;
    int v47 = -1;
    uint64_t v44 = 0;
    int v45 = -1;
    uint64_t v42 = 0;
    int v43 = -1;
    uint64_t v40 = 0;
    int v41 = -1;
    uint64_t v38 = 0;
    int v39 = -1;
    uint64_t v36 = 0;
    int v37 = -1;
    uint64_t v34 = 0;
    int v35 = -1;
    *(void *)&long long v20 = &v40;
    *((void *)&v20 + sub_1000333D0((uint64_t *)this + 1) = &v38;
    google::protobuf::strings::SubstituteAndAppend(a3, "$0}\n", (uint64_t)&v52, (uint64_t)&v50, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v42, v20, (uint64_t)&v36, (uint64_t)&v34);
  }
  sub_1000C1F78((uint64_t)v21, a3);
  if (SHIBYTE(v31) < 0) {
    operator delete((void *)__p);
  }
  char v52 = (void **)&v26;
  sub_1000D9860(&v52);
  if (SHIBYTE(v25) < 0) {
    operator delete(v24[1]);
  }
  if (SHIBYTE(v24[0]) < 0) {
    operator delete(v23[0]);
  }
  if (SHIBYTE(v33) < 0) {
    operator delete(__b[0]);
  }
}

void sub_1000C4700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,void *a22,uint64_t a23,int a24,__int16 a25,char a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37,void *__p,uint64_t a39,int a40,__int16 a41,char a42,char a43)
{
  if (a43 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void google::protobuf::FieldDescriptor::DebugStringWithOptions(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  if (*(unsigned char *)(a1 + 67))
  {
    int v6 = *(uint64_t **)(*(void *)(a1 + 80) + 8);
    int v7 = *((char *)v6 + 23);
    uint64_t v8 = v6[1];
    if (v7 < 0) {
      int v6 = (uint64_t *)*v6;
    }
    uint64_t v30 = v6;
    int v9 = v7;
    if (v7 < 0) {
      int v9 = v8;
    }
    int v31 = v9;
    uint64_t v28 = 0;
    int v29 = -1;
    uint64_t v26 = 0;
    int v27 = -1;
    uint64_t v24 = 0;
    int v25 = -1;
    uint64_t v22 = 0;
    int v23 = -1;
    uint64_t v20 = 0;
    int v21 = -1;
    uint64_t v18 = 0;
    int v19 = -1;
    uint64_t v16 = 0;
    int v17 = -1;
    uint64_t v14 = 0;
    int v15 = -1;
    uint64_t v12 = 0;
    int v13 = -1;
    *(void *)&long long v11 = &v18;
    *((void *)&v11 + sub_1000333D0((uint64_t *)this + 1) = &v16;
    google::protobuf::strings::SubstituteAndAppend(a3, "extend .$0 {\n", (uint64_t)&v30, (uint64_t)&v28, (uint64_t)&v26, (uint64_t)&v24, (uint64_t)&v22, (uint64_t)&v20, v11, (uint64_t)&v14, (uint64_t)&v12);
    int v10 = 1;
  }
  else
  {
    int v10 = 0;
  }
  google::protobuf::FieldDescriptor::DebugString(a1, v10, a3, a2);
  if (*(unsigned char *)(a1 + 67)) {
    std::string::append(a3, "}\n");
  }
}

void sub_1000C48E8(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void *google::protobuf::FieldDescriptor::FieldTypeNameDebugString@<X0>(google::protobuf::FieldDescriptor *this@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v4)
  {
    uint64_t v8 = this;
    int v9 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v4, memory_order_acquire) != -1)
    {
      long long v11 = &v9;
      uint64_t v12 = &v8;
      int v10 = &v11;
      std::__call_once(v4, &v10, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  int v5 = *((_DWORD *)this + 14);
  if (v5 == 14)
  {
    google::protobuf::FieldDescriptor::enum_type(this);
    return (void *)std::operator+<char>();
  }
  if (v5 == 11)
  {
    google::protobuf::FieldDescriptor::message_type(this);
    return (void *)std::operator+<char>();
  }
  int v7 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v7)
  {
    uint64_t v8 = this;
    int v9 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v7, memory_order_acquire) != -1)
    {
      long long v11 = &v9;
      uint64_t v12 = &v8;
      int v10 = &v11;
      std::__call_once(v7, &v10, (void (__cdecl *)(void *))sub_1000BB820);
    }
    int v5 = *((_DWORD *)this + 14);
  }
  return sub_1000BBA84(a2, google::protobuf::FieldDescriptor::kTypeToName[v5]);
}

BOOL sub_1000C4A2C(int a1, google::protobuf::MessageLite *a2, uint64_t a3, std::string *a4)
{
  int v10 = 0;
  long long v11 = 0;
  uint64_t v12 = 0;
  if (sub_1000D804C(a1, a2, a3, (uint64_t *)&v10))
  {
    sub_1000D8D7C(", ", &v10, &__p);
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      p_p = &__p;
    }
    else {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type size = __p.__r_.__value_.__l.__size_;
    }
    std::string::append(a4, (const std::string::value_type *)p_p, size);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  BOOL v7 = v10 != v11;
  __p.__r_.__value_.__r.__words[0] = (std::string::size_type)&v10;
  sub_1000D9860((void ***)&__p);
  return v7;
}

void sub_1000C4AD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, char *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  std::string __p = &a15;
  sub_1000D9860((void ***)&__p);
  _Unwind_Resume(a1);
}

void google::protobuf::EnumValueDescriptor::DebugString(uint64_t a1, int a2, std::string *a3, __int16 *a4)
{
  sub_1000DD45C(__b, 2 * a2, 32);
  uint64_t v27 = 0;
  long long v26 = 0u;
  long long v25 = 0u;
  *(_OWORD *)uint64_t v24 = 0u;
  *(_OWORD *)int v23 = 0u;
  __int16 v28 = *a4;
  char v29 = *((unsigned char *)a4 + 2);
  if (SHIBYTE(v33) < 0)
  {
    sub_1000BB834(&v30, __b[0], (unint64_t)__b[1]);
  }
  else
  {
    long long v30 = *(_OWORD *)__b;
    uint64_t v31 = v33;
  }
  if (*(unsigned char *)a4) {
    SourceLocatioint n = google::protobuf::EnumValueDescriptor::GetSourceLocation(a1, (uint64_t)&v22);
  }
  else {
    SourceLocatioint n = 0;
  }
  v21[0] = SourceLocation;
  sub_1000C1E44((uint64_t)v21, a3);
  int v10 = HIBYTE(v33);
  long long v11 = __b;
  if (v33 < 0) {
    long long v11 = (void **)__b[0];
  }
  p_data = v11;
  if (v33 < 0) {
    int v10 = (int)__b[1];
  }
  int v54 = v10;
  uint64_t v12 = *(uint64_t **)a1;
  int v13 = *(char *)(*(void *)a1 + 23);
  uint64_t v14 = *(void *)(*(void *)a1 + 8);
  if (v13 < 0) {
    uint64_t v12 = **(uint64_t ***)a1;
  }
  int v51 = v12;
  int v15 = v13;
  if (v13 < 0) {
    int v15 = v14;
  }
  int v52 = v15;
  uint64_t v48 = google::protobuf::FastInt32ToBuffer((google::protobuf *)*(unsigned int *)(a1 + 16), v50, v9);
  int v49 = strlen(v48);
  uint64_t v46 = 0;
  int v47 = -1;
  uint64_t v44 = 0;
  int v45 = -1;
  uint64_t v42 = 0;
  int v43 = -1;
  uint64_t v40 = 0;
  int v41 = -1;
  uint64_t v38 = 0;
  int v39 = -1;
  uint64_t v36 = 0;
  int v37 = -1;
  uint64_t v34 = 0;
  int v35 = -1;
  *(void *)&long long v18 = &v40;
  *((void *)&v18 + sub_1000333D0((uint64_t *)this + 1) = &v38;
  google::protobuf::strings::SubstituteAndAppend(a3, "$0$1 = $2", (uint64_t)&p_data, (uint64_t)&v51, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v42, v18, (uint64_t)&v36, (uint64_t)&v34);
  memset(&__p, 0, sizeof(__p));
  if (sub_1000C4A2C(a2, *(google::protobuf::MessageLite **)(a1 + 32), *(void *)(*(void *)(*(void *)(a1 + 24) + 16) + 16), &__p))
  {
    int v16 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
    p_p = &__p;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
    }
    p_data = (void **)&p_p->__r_.__value_.__l.__data_;
    if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      int v16 = __p.__r_.__value_.__r.__words[1];
    }
    int v54 = v16;
    int v51 = 0;
    int v52 = -1;
    uint64_t v48 = 0;
    int v49 = -1;
    uint64_t v46 = 0;
    int v47 = -1;
    uint64_t v44 = 0;
    int v45 = -1;
    uint64_t v42 = 0;
    int v43 = -1;
    uint64_t v40 = 0;
    int v41 = -1;
    uint64_t v38 = 0;
    int v39 = -1;
    uint64_t v36 = 0;
    int v37 = -1;
    uint64_t v34 = 0;
    int v35 = -1;
    *(void *)&long long v19 = &v40;
    *((void *)&v19 + sub_1000333D0((uint64_t *)this + 1) = &v38;
    google::protobuf::strings::SubstituteAndAppend(a3, " [$0]", (uint64_t)&p_data, (uint64_t)&v51, (uint64_t)&v48, (uint64_t)&v46, (uint64_t)&v44, (uint64_t)&v42, v19, (uint64_t)&v36, (uint64_t)&v34);
  }
  std::string::append(a3, ";\n");
  sub_1000C1F78((uint64_t)v21, a3);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v31) < 0) {
    operator delete((void *)v30);
  }
  p_data = (void **)&v26;
  sub_1000D9860(&p_data);
  if (SHIBYTE(v25) < 0) {
    operator delete(v24[1]);
  }
  if (SHIBYTE(v24[0]) < 0) {
    operator delete(v23[0]);
  }
  if (SHIBYTE(v33) < 0) {
    operator delete(__b[0]);
  }
}

void sub_1000C4E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14, uint64_t a15, int a16, __int16 a17, char a18, char a19, char a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,void *__p,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,void *a45,uint64_t a46,int a47,__int16 a48,char a49,char a50)
{
  *(void *)(v50 - 104) = &a35;
  sub_1000D9860((void ***)(v50 - 104));
  if (a34 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a50 < 0) {
    operator delete(a45);
  }
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::FileDescriptor::GetSourceLocation(uint64_t a1, std::string **a2, uint64_t a3)
{
  if (!a3)
  {
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v15, 3, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 2963);
    int v6 = google::protobuf::internal::LogMessage::operator<<(v15, "CHECK failed: out_location != nullptr: ");
    google::protobuf::internal::LogFinisher::operator=((int)&v14, (const char **)&v6->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v15[0].__r_.__value_.__l.__data_);
  }
  uint64_t v7 = *(void *)(a1 + 152);
  if (!v7) {
    return 0;
  }
  uint64_t result = google::protobuf::FileDescriptorTables::GetSourceLocation(*(void *)(a1 + 144), a2, v7);
  if (!result) {
    return result;
  }
  uint64_t v9 = result;
  int v10 = *(_DWORD *)(result + 48);
  if ((v10 - 3) >= 2) {
    return 0;
  }
  long long v11 = *(_DWORD **)(result + 56);
  *(_DWORD *)a3 = *v11;
  *(_DWORD *)(a3 + 8) = v11[1];
  *(_DWORD *)(a3 + 4) = v11[2 * (v10 != 3)];
  *(_DWORD *)(a3 + 1sub_100072180((void *)this + 2) = v11[v10 - 1];
  std::string::operator=((std::string *)(a3 + 16), (const std::string *)(*(void *)(result + 96) & 0xFFFFFFFFFFFFFFFELL));
  std::string::operator=((std::string *)(a3 + 40), (const std::string *)(*(void *)(v9 + 104) & 0xFFFFFFFFFFFFFFFELL));
  uint64_t v12 = *(void *)(v9 + 88);
  if (v12) {
    int v13 = (long long **)(v12 + 8);
  }
  else {
    int v13 = 0;
  }
  sub_1000DD5FC(a3 + 64, v13, &v13[*(int *)(v9 + 80)], *(int *)(v9 + 80));
  return 1;
}

void sub_1000C5008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

BOOL google::protobuf::FieldDescriptor::is_packed(google::protobuf::FieldDescriptor *this)
{
  if (*((_DWORD *)this + 15) != 3) {
    return 0;
  }
  uint64_t v2 = (std::once_flag::_State_type *)*((void *)this + 6);
  if (v2)
  {
    int v5 = this;
    int v6 = google::protobuf::FieldDescriptor::TypeOnceInit;
    if (atomic_load_explicit((atomic_ullong *volatile)v2, memory_order_acquire) != -1)
    {
      v8[0] = &v6;
      v8[1] = &v5;
      uint64_t v7 = v8;
      std::__call_once(v2, &v7, (void (__cdecl *)(void *))sub_1000BB820);
    }
  }
  if ((*((_DWORD *)this + 14) - 13) > 0xFFFFFFFB) {
    return 0;
  }
  uint64_t v3 = *((void *)this + 15);
  if (*(_DWORD *)(*((void *)this + 5) + 60) != 2)
  {
    if (!v3 || (*(unsigned char *)(v3 + 40) & 2) == 0) {
      return 1;
    }
    return *(unsigned __int8 *)(v3 + 76) != 0;
  }
  if (v3) {
    return *(unsigned __int8 *)(v3 + 76) != 0;
  }
  return 0;
}

uint64_t google::protobuf::Descriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  google::protobuf::Descriptor::GetLocationPath(a1, (uint64_t)&__p);
  SourceLocatioint n = google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(a1 + 16), (std::string **)&__p, a2);
  if (__p)
  {
    uint64_t v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_1000C5158(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::Descriptor::GetLocationPath(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4)
  {
    int v10 = (void *)(a2 + 16);
    unint64_t v9 = *(void *)(a2 + 16);
    long long v11 = *(_DWORD **)(a2 + 8);
    if ((unint64_t)v11 >= v9)
    {
      long long v18 = *(_DWORD **)a2;
      uint64_t v19 = ((uint64_t)v11 - *(void *)a2) >> 2;
      unint64_t v20 = v19 + 1;
      if ((unint64_t)(v19 + 1) >> 62) {
        goto LABEL_70;
      }
      uint64_t v21 = v9 - (void)v18;
      if (v21 >> 1 > v20) {
        unint64_t v20 = v21 >> 1;
      }
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v22 = v20;
      }
      if (v22)
      {
        int v23 = (char *)sub_1000DD508(a2 + 16, v22);
        long long v18 = *(_DWORD **)a2;
        long long v11 = *(_DWORD **)(a2 + 8);
      }
      else
      {
        int v23 = 0;
      }
      uint64_t v40 = &v23[4 * v19];
      int v41 = &v23[4 * v22];
      *(_DWORD *)uint64_t v40 = 4;
      uint64_t v8 = v40 + 4;
      while (v11 != v18)
      {
        int v42 = *--v11;
        *((_DWORD *)v40 - sub_1000333D0((uint64_t *)this + 1) = v42;
        v40 -= 4;
      }
      *(void *)a2 = v40;
      *(void *)(a2 + 8) = v8;
      *(void *)(a2 + 1sub_100072180((void *)this + 6) = v41;
      if (v18) {
        operator delete(v18);
      }
    }
    else
    {
      *long long v11 = 4;
      uint64_t v8 = v11 + 1;
    }
    *(void *)(a2 + 8) = v8;
    uint64_t v43 = *(void *)(a1 + 24);
    if (v43) {
      uint64_t v44 = (void *)(v43 + 56);
    }
    else {
      uint64_t v44 = (void *)(*(void *)(a1 + 16) + 104);
    }
    int v29 = 954437177 * ((unint64_t)(a1 - *v44) >> 4);
    if ((unint64_t)v8 >= *v10)
    {
      long long v30 = *(_DWORD **)a2;
      uint64_t v45 = ((uint64_t)v8 - *(void *)a2) >> 2;
      unint64_t v46 = v45 + 1;
      if (!((unint64_t)(v45 + 1) >> 62))
      {
        uint64_t v47 = *v10 - (void)v30;
        if (v47 >> 1 > v46) {
          unint64_t v46 = v47 >> 1;
        }
        if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v48 = v46;
        }
        if (v48)
        {
          int v49 = (char *)sub_1000DD508(a2 + 16, v48);
          long long v30 = *(_DWORD **)a2;
          uint64_t v8 = *(_DWORD **)(a2 + 8);
        }
        else
        {
          int v49 = 0;
        }
        uint64_t v36 = &v49[4 * v45];
        int v37 = &v49[4 * v48];
        *(_DWORD *)uint64_t v36 = v29;
        uint64_t v38 = v36 + 4;
        while (v8 != v30)
        {
          int v50 = *--v8;
          *((_DWORD *)v36 - sub_1000333D0((uint64_t *)this + 1) = v50;
          v36 -= 4;
        }
        goto LABEL_67;
      }
LABEL_70:
      sub_100078F84();
    }
LABEL_54:
    *uint64_t v8 = v29;
    uint64_t v38 = v8 + 1;
    goto LABEL_69;
  }
  google::protobuf::Descriptor::GetLocationPath(v4, a2);
  int v6 = (void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  uint64_t v7 = *(_DWORD **)(a2 + 8);
  if ((unint64_t)v7 >= v5)
  {
    uint64_t v12 = *(_DWORD **)a2;
    uint64_t v13 = ((uint64_t)v7 - *(void *)a2) >> 2;
    unint64_t v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 62) {
      goto LABEL_70;
    }
    uint64_t v15 = v5 - (void)v12;
    if (v15 >> 1 > v14) {
      unint64_t v14 = v15 >> 1;
    }
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v16 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v16 = v14;
    }
    if (v16)
    {
      int v17 = (char *)sub_1000DD508(a2 + 16, v16);
      uint64_t v12 = *(_DWORD **)a2;
      uint64_t v7 = *(_DWORD **)(a2 + 8);
    }
    else
    {
      int v17 = 0;
    }
    uint64_t v24 = &v17[4 * v13];
    long long v25 = &v17[4 * v16];
    *(_DWORD *)uint64_t v24 = 3;
    uint64_t v8 = v24 + 4;
    while (v7 != v12)
    {
      int v26 = *--v7;
      *((_DWORD *)v24 - sub_1000333D0((uint64_t *)this + 1) = v26;
      v24 -= 4;
    }
    *(void *)a2 = v24;
    *(void *)(a2 + 8) = v8;
    *(void *)(a2 + 1sub_100072180((void *)this + 6) = v25;
    if (v12) {
      operator delete(v12);
    }
  }
  else
  {
    *uint64_t v7 = 3;
    uint64_t v8 = v7 + 1;
  }
  *(void *)(a2 + 8) = v8;
  uint64_t v27 = *(void *)(a1 + 24);
  if (v27) {
    __int16 v28 = (void *)(v27 + 56);
  }
  else {
    __int16 v28 = (void *)(*(void *)(a1 + 16) + 104);
  }
  int v29 = 954437177 * ((unint64_t)(a1 - *v28) >> 4);
  if ((unint64_t)v8 < *v6) {
    goto LABEL_54;
  }
  long long v30 = *(_DWORD **)a2;
  uint64_t v31 = ((uint64_t)v8 - *(void *)a2) >> 2;
  unint64_t v32 = v31 + 1;
  if ((unint64_t)(v31 + 1) >> 62) {
    goto LABEL_70;
  }
  uint64_t v33 = *v6 - (void)v30;
  if (v33 >> 1 > v32) {
    unint64_t v32 = v33 >> 1;
  }
  if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v34 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v34 = v32;
  }
  if (v34)
  {
    int v35 = (char *)sub_1000DD508(a2 + 16, v34);
    long long v30 = *(_DWORD **)a2;
    uint64_t v8 = *(_DWORD **)(a2 + 8);
  }
  else
  {
    int v35 = 0;
  }
  uint64_t v36 = &v35[4 * v31];
  int v37 = &v35[4 * v34];
  *(_DWORD *)uint64_t v36 = v29;
  uint64_t v38 = v36 + 4;
  while (v8 != v30)
  {
    int v39 = *--v8;
    *((_DWORD *)v36 - sub_1000333D0((uint64_t *)this + 1) = v39;
    v36 -= 4;
  }
LABEL_67:
  *(void *)a2 = v36;
  *(void *)(a2 + 8) = v38;
  *(void *)(a2 + 1sub_100072180((void *)this + 6) = v37;
  if (v30) {
    operator delete(v30);
  }
LABEL_69:
  *(void *)(a2 + 8) = v38;
}

uint64_t google::protobuf::FieldDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  google::protobuf::FieldDescriptor::GetLocationPath(a1, (char **)&__p);
  SourceLocatioint n = google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(a1 + 40), (std::string **)&__p, a2);
  if (__p)
  {
    uint64_t v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_1000C5514(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::FieldDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  if (!*(unsigned char *)(a1 + 67))
  {
    google::protobuf::Descriptor::GetLocationPath(*(void *)(a1 + 80), (uint64_t)a2);
    int v10 = a2 + 2;
    unint64_t v9 = (unint64_t)a2[2];
    long long v11 = a2[1];
    if ((unint64_t)v11 >= v9)
    {
      uint64_t v21 = *a2;
      uint64_t v22 = (v11 - *a2) >> 2;
      unint64_t v23 = v22 + 1;
      if ((unint64_t)(v22 + 1) >> 62) {
        goto LABEL_109;
      }
      uint64_t v24 = v9 - (void)v21;
      if (v24 >> 1 > v23) {
        unint64_t v23 = v24 >> 1;
      }
      if ((unint64_t)v24 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v25 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v25 = v23;
      }
      if (v25)
      {
        int v26 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v25);
        uint64_t v21 = *a2;
        long long v11 = a2[1];
      }
      else
      {
        int v26 = 0;
      }
      int v49 = &v26[4 * v22];
      int v50 = &v26[4 * v25];
      *(_DWORD *)int v49 = 2;
      uint64_t v8 = v49 + 4;
      while (v11 != v21)
      {
        int v51 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v49 - sub_1000333D0((uint64_t *)this + 1) = v51;
        v49 -= 4;
      }
      *a2 = v49;
      a2[1] = v8;
      a2[2] = v50;
      if (v21) {
        operator delete(v21);
      }
    }
    else
    {
      *(_DWORD *)long long v11 = 2;
      uint64_t v8 = v11 + 4;
    }
    a2[1] = v8;
    if (*(unsigned char *)(a1 + 67))
    {
      uint64_t v52 = *(void *)(a1 + 96);
      if (v52) {
        int v53 = (void *)(v52 + 80);
      }
      else {
        int v53 = (void *)(*(void *)(a1 + 40) + 128);
      }
    }
    else
    {
      int v53 = (void *)(*(void *)(a1 + 80) + 40);
    }
    int v38 = 678152731 * ((unint64_t)(a1 - *v53) >> 3);
    if ((unint64_t)v8 < *v10) {
      goto LABEL_93;
    }
    int v39 = *a2;
    uint64_t v54 = (v8 - *a2) >> 2;
    unint64_t v55 = v54 + 1;
    if (!((unint64_t)(v54 + 1) >> 62))
    {
      uint64_t v56 = *v10 - (void)v39;
      if (v56 >> 1 > v55) {
        unint64_t v55 = v56 >> 1;
      }
      if ((unint64_t)v56 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v57 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v57 = v55;
      }
      if (v57)
      {
        long long v58 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v57);
        int v39 = *a2;
        uint64_t v8 = a2[1];
      }
      else
      {
        long long v58 = 0;
      }
      uint64_t v45 = &v58[4 * v54];
      unint64_t v46 = &v58[4 * v57];
      *(_DWORD *)uint64_t v45 = v38;
      uint64_t v47 = v45 + 4;
      while (v8 != v39)
      {
        int v59 = *((_DWORD *)v8 - 1);
        v8 -= 4;
        *((_DWORD *)v45 - sub_1000333D0((uint64_t *)this + 1) = v59;
        v45 -= 4;
      }
      goto LABEL_106;
    }
    goto LABEL_109;
  }
  uint64_t v4 = *(void *)(a1 + 96);
  if (!v4)
  {
    uint64_t v13 = a2 + 2;
    unint64_t v12 = (unint64_t)a2[2];
    unint64_t v14 = a2[1];
    if ((unint64_t)v14 >= v12)
    {
      uint64_t v27 = *a2;
      uint64_t v28 = (v14 - *a2) >> 2;
      unint64_t v29 = v28 + 1;
      if ((unint64_t)(v28 + 1) >> 62) {
        goto LABEL_109;
      }
      uint64_t v30 = v12 - (void)v27;
      if (v30 >> 1 > v29) {
        unint64_t v29 = v30 >> 1;
      }
      if ((unint64_t)v30 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v31 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v31 = v29;
      }
      if (v31)
      {
        unint64_t v32 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v31);
        uint64_t v27 = *a2;
        unint64_t v14 = a2[1];
      }
      else
      {
        unint64_t v32 = 0;
      }
      uint64_t v60 = &v32[4 * v28];
      __int16 v61 = &v32[4 * v31];
      *(_DWORD *)uint64_t v60 = 7;
      uint64_t v8 = v60 + 4;
      while (v14 != v27)
      {
        int v62 = *((_DWORD *)v14 - 1);
        v14 -= 4;
        *((_DWORD *)v60 - sub_1000333D0((uint64_t *)this + 1) = v62;
        v60 -= 4;
      }
      *a2 = v60;
      a2[1] = v8;
      a2[2] = v61;
      if (v27) {
        operator delete(v27);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v14 = 7;
      uint64_t v8 = v14 + 4;
    }
    a2[1] = v8;
    if (*(unsigned char *)(a1 + 67))
    {
      uint64_t v63 = *(void *)(a1 + 96);
      if (v63) {
        uint64_t v64 = (void *)(v63 + 80);
      }
      else {
        uint64_t v64 = (void *)(*(void *)(a1 + 40) + 128);
      }
    }
    else
    {
      uint64_t v64 = (void *)(*(void *)(a1 + 80) + 40);
    }
    int v38 = 678152731 * ((unint64_t)(a1 - *v64) >> 3);
    if ((unint64_t)v8 < *v13)
    {
LABEL_93:
      *(_DWORD *)uint64_t v8 = v38;
      uint64_t v47 = v8 + 4;
      goto LABEL_108;
    }
    int v39 = *a2;
    uint64_t v65 = (v8 - *a2) >> 2;
    unint64_t v66 = v65 + 1;
    if (!((unint64_t)(v65 + 1) >> 62))
    {
      uint64_t v67 = *v13 - (void)v39;
      if (v67 >> 1 > v66) {
        unint64_t v66 = v67 >> 1;
      }
      if ((unint64_t)v67 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v68 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v68 = v66;
      }
      if (v68)
      {
        int v69 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v68);
        int v39 = *a2;
        uint64_t v8 = a2[1];
      }
      else
      {
        int v69 = 0;
      }
      uint64_t v45 = &v69[4 * v65];
      unint64_t v46 = &v69[4 * v68];
      *(_DWORD *)uint64_t v45 = v38;
      uint64_t v47 = v45 + 4;
      while (v8 != v39)
      {
        int v70 = *((_DWORD *)v8 - 1);
        v8 -= 4;
        *((_DWORD *)v45 - sub_1000333D0((uint64_t *)this + 1) = v70;
        v45 -= 4;
      }
      goto LABEL_106;
    }
LABEL_109:
    sub_100078F84();
  }
  google::protobuf::Descriptor::GetLocationPath(v4, (uint64_t)a2);
  int v6 = a2 + 2;
  unint64_t v5 = (unint64_t)a2[2];
  uint64_t v7 = a2[1];
  if ((unint64_t)v7 >= v5)
  {
    uint64_t v15 = *a2;
    uint64_t v16 = (v7 - *a2) >> 2;
    unint64_t v17 = v16 + 1;
    if ((unint64_t)(v16 + 1) >> 62) {
      goto LABEL_109;
    }
    uint64_t v18 = v5 - (void)v15;
    if (v18 >> 1 > v17) {
      unint64_t v17 = v18 >> 1;
    }
    if ((unint64_t)v18 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v19 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v19 = v17;
    }
    if (v19)
    {
      unint64_t v20 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v19);
      uint64_t v15 = *a2;
      uint64_t v7 = a2[1];
    }
    else
    {
      unint64_t v20 = 0;
    }
    uint64_t v33 = &v20[4 * v16];
    unint64_t v34 = &v20[4 * v19];
    *(_DWORD *)uint64_t v33 = 6;
    uint64_t v8 = v33 + 4;
    while (v7 != v15)
    {
      int v35 = *((_DWORD *)v7 - 1);
      v7 -= 4;
      *((_DWORD *)v33 - sub_1000333D0((uint64_t *)this + 1) = v35;
      v33 -= 4;
    }
    *a2 = v33;
    a2[1] = v8;
    a2[2] = v34;
    if (v15) {
      operator delete(v15);
    }
  }
  else
  {
    *(_DWORD *)uint64_t v7 = 6;
    uint64_t v8 = v7 + 4;
  }
  a2[1] = v8;
  if (*(unsigned char *)(a1 + 67))
  {
    uint64_t v36 = *(void *)(a1 + 96);
    if (v36) {
      int v37 = (void *)(v36 + 80);
    }
    else {
      int v37 = (void *)(*(void *)(a1 + 40) + 128);
    }
  }
  else
  {
    int v37 = (void *)(*(void *)(a1 + 80) + 40);
  }
  int v38 = 678152731 * ((unint64_t)(a1 - *v37) >> 3);
  if ((unint64_t)v8 < *v6) {
    goto LABEL_93;
  }
  int v39 = *a2;
  uint64_t v40 = (v8 - *a2) >> 2;
  unint64_t v41 = v40 + 1;
  if ((unint64_t)(v40 + 1) >> 62) {
    goto LABEL_109;
  }
  uint64_t v42 = *v6 - (void)v39;
  if (v42 >> 1 > v41) {
    unint64_t v41 = v42 >> 1;
  }
  if ((unint64_t)v42 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v43 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v43 = v41;
  }
  if (v43)
  {
    uint64_t v44 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v43);
    int v39 = *a2;
    uint64_t v8 = a2[1];
  }
  else
  {
    uint64_t v44 = 0;
  }
  uint64_t v45 = &v44[4 * v40];
  unint64_t v46 = &v44[4 * v43];
  *(_DWORD *)uint64_t v45 = v38;
  uint64_t v47 = v45 + 4;
  while (v8 != v39)
  {
    int v48 = *((_DWORD *)v8 - 1);
    v8 -= 4;
    *((_DWORD *)v45 - sub_1000333D0((uint64_t *)this + 1) = v48;
    v45 -= 4;
  }
LABEL_106:
  *a2 = v45;
  a2[1] = v47;
  a2[2] = v46;
  if (v39) {
    operator delete(v39);
  }
LABEL_108:
  a2[1] = v47;
}

uint64_t google::protobuf::OneofDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  google::protobuf::OneofDescriptor::GetLocationPath(a1, (char **)&__p);
  SourceLocatioint n = google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(*(void *)(a1 + 16) + 16), (std::string **)&__p, a2);
  if (__p)
  {
    uint64_t v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_1000C5A8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::OneofDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  google::protobuf::Descriptor::GetLocationPath(*(void *)(a1 + 16), (uint64_t)a2);
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    uint64_t v7 = *a2;
    uint64_t v8 = (v5 - *a2) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      goto LABEL_34;
    }
    uint64_t v10 = v4 - v7;
    if (v10 >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      unint64_t v12 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v11);
      uint64_t v7 = *a2;
      unint64_t v5 = a2[1];
    }
    else
    {
      unint64_t v12 = 0;
    }
    uint64_t v13 = &v12[4 * v8];
    uint64_t v4 = &v12[4 * v11];
    *(_DWORD *)uint64_t v13 = 8;
    int v6 = v13 + 4;
    while (v5 != v7)
    {
      int v14 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - sub_1000333D0((uint64_t *)this + 1) = v14;
      v13 -= 4;
    }
    *a2 = v13;
    a2[1] = v6;
    a2[2] = v4;
    if (v7)
    {
      operator delete(v7);
      uint64_t v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)unint64_t v5 = 8;
    int v6 = v5 + 4;
  }
  a2[1] = v6;
  int v15 = -1431655765 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 16) + 48)) >> 4);
  if (v6 < v4)
  {
    *(_DWORD *)int v6 = v15;
    uint64_t v16 = v6 + 4;
    goto LABEL_33;
  }
  unint64_t v17 = *a2;
  uint64_t v18 = (v6 - *a2) >> 2;
  unint64_t v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 62) {
LABEL_34:
  }
    sub_100078F84();
  uint64_t v20 = v4 - v17;
  if (v20 >> 1 > v19) {
    unint64_t v19 = v20 >> 1;
  }
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v21 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v21 = v19;
  }
  if (v21)
  {
    uint64_t v22 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v21);
    unint64_t v17 = *a2;
    int v6 = a2[1];
  }
  else
  {
    uint64_t v22 = 0;
  }
  unint64_t v23 = &v22[4 * v18];
  uint64_t v24 = &v22[4 * v21];
  *(_DWORD *)unint64_t v23 = v15;
  uint64_t v16 = v23 + 4;
  while (v6 != v17)
  {
    int v25 = *((_DWORD *)v6 - 1);
    v6 -= 4;
    *((_DWORD *)v23 - sub_1000333D0((uint64_t *)this + 1) = v25;
    v23 -= 4;
  }
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v24;
  if (v17) {
    operator delete(v17);
  }
LABEL_33:
  a2[1] = v16;
}

uint64_t google::protobuf::EnumDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  google::protobuf::EnumDescriptor::GetLocationPath(a1, (char **)&__p);
  SourceLocatioint n = google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(a1 + 16), (std::string **)&__p, a2);
  if (__p)
  {
    uint64_t v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_1000C5CC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::EnumDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  uint64_t v4 = *(void *)(a1 + 24);
  if (!v4)
  {
    uint64_t v10 = a2 + 2;
    unint64_t v9 = (unint64_t)a2[2];
    unint64_t v11 = a2[1];
    if ((unint64_t)v11 >= v9)
    {
      uint64_t v18 = *a2;
      uint64_t v19 = (v11 - *a2) >> 2;
      unint64_t v20 = v19 + 1;
      if ((unint64_t)(v19 + 1) >> 62) {
        goto LABEL_70;
      }
      uint64_t v21 = v9 - (void)v18;
      if (v21 >> 1 > v20) {
        unint64_t v20 = v21 >> 1;
      }
      if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
        unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v22 = v20;
      }
      if (v22)
      {
        unint64_t v23 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v22);
        uint64_t v18 = *a2;
        unint64_t v11 = a2[1];
      }
      else
      {
        unint64_t v23 = 0;
      }
      uint64_t v40 = &v23[4 * v19];
      unint64_t v41 = &v23[4 * v22];
      *(_DWORD *)uint64_t v40 = 5;
      uint64_t v8 = v40 + 4;
      while (v11 != v18)
      {
        int v42 = *((_DWORD *)v11 - 1);
        v11 -= 4;
        *((_DWORD *)v40 - sub_1000333D0((uint64_t *)this + 1) = v42;
        v40 -= 4;
      }
      *a2 = v40;
      a2[1] = v8;
      a2[2] = v41;
      if (v18) {
        operator delete(v18);
      }
    }
    else
    {
      *(_DWORD *)unint64_t v11 = 5;
      uint64_t v8 = v11 + 4;
    }
    a2[1] = v8;
    uint64_t v43 = *(void *)(a1 + 24);
    if (v43) {
      uint64_t v44 = (void *)(v43 + 64);
    }
    else {
      uint64_t v44 = (void *)(*(void *)(a1 + 16) + 112);
    }
    int v29 = -858993459 * ((unint64_t)(a1 - *v44) >> 4);
    if ((unint64_t)v8 >= *v10)
    {
      uint64_t v30 = *a2;
      uint64_t v45 = (v8 - *a2) >> 2;
      unint64_t v46 = v45 + 1;
      if (!((unint64_t)(v45 + 1) >> 62))
      {
        uint64_t v47 = *v10 - (void)v30;
        if (v47 >> 1 > v46) {
          unint64_t v46 = v47 >> 1;
        }
        if ((unint64_t)v47 >= 0x7FFFFFFFFFFFFFFCLL) {
          unint64_t v48 = 0x3FFFFFFFFFFFFFFFLL;
        }
        else {
          unint64_t v48 = v46;
        }
        if (v48)
        {
          int v49 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v48);
          uint64_t v30 = *a2;
          uint64_t v8 = a2[1];
        }
        else
        {
          int v49 = 0;
        }
        uint64_t v36 = &v49[4 * v45];
        int v37 = &v49[4 * v48];
        *(_DWORD *)uint64_t v36 = v29;
        int v38 = v36 + 4;
        while (v8 != v30)
        {
          int v50 = *((_DWORD *)v8 - 1);
          v8 -= 4;
          *((_DWORD *)v36 - sub_1000333D0((uint64_t *)this + 1) = v50;
          v36 -= 4;
        }
        goto LABEL_67;
      }
LABEL_70:
      sub_100078F84();
    }
LABEL_54:
    *(_DWORD *)uint64_t v8 = v29;
    int v38 = v8 + 4;
    goto LABEL_69;
  }
  google::protobuf::Descriptor::GetLocationPath(v4, (uint64_t)a2);
  int v6 = a2 + 2;
  unint64_t v5 = (unint64_t)a2[2];
  uint64_t v7 = a2[1];
  if ((unint64_t)v7 >= v5)
  {
    unint64_t v12 = *a2;
    uint64_t v13 = (v7 - *a2) >> 2;
    unint64_t v14 = v13 + 1;
    if ((unint64_t)(v13 + 1) >> 62) {
      goto LABEL_70;
    }
    uint64_t v15 = v5 - (void)v12;
    if (v15 >> 1 > v14) {
      unint64_t v14 = v15 >> 1;
    }
    if ((unint64_t)v15 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v16 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v16 = v14;
    }
    if (v16)
    {
      unint64_t v17 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v16);
      unint64_t v12 = *a2;
      uint64_t v7 = a2[1];
    }
    else
    {
      unint64_t v17 = 0;
    }
    uint64_t v24 = &v17[4 * v13];
    int v25 = &v17[4 * v16];
    *(_DWORD *)uint64_t v24 = 4;
    uint64_t v8 = v24 + 4;
    while (v7 != v12)
    {
      int v26 = *((_DWORD *)v7 - 1);
      v7 -= 4;
      *((_DWORD *)v24 - sub_1000333D0((uint64_t *)this + 1) = v26;
      v24 -= 4;
    }
    *a2 = v24;
    a2[1] = v8;
    a2[2] = v25;
    if (v12) {
      operator delete(v12);
    }
  }
  else
  {
    *(_DWORD *)uint64_t v7 = 4;
    uint64_t v8 = v7 + 4;
  }
  a2[1] = v8;
  uint64_t v27 = *(void *)(a1 + 24);
  if (v27) {
    uint64_t v28 = (void *)(v27 + 64);
  }
  else {
    uint64_t v28 = (void *)(*(void *)(a1 + 16) + 112);
  }
  int v29 = -858993459 * ((unint64_t)(a1 - *v28) >> 4);
  if ((unint64_t)v8 < *v6) {
    goto LABEL_54;
  }
  uint64_t v30 = *a2;
  uint64_t v31 = (v8 - *a2) >> 2;
  unint64_t v32 = v31 + 1;
  if ((unint64_t)(v31 + 1) >> 62) {
    goto LABEL_70;
  }
  uint64_t v33 = *v6 - (void)v30;
  if (v33 >> 1 > v32) {
    unint64_t v32 = v33 >> 1;
  }
  if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v34 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v34 = v32;
  }
  if (v34)
  {
    int v35 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v34);
    uint64_t v30 = *a2;
    uint64_t v8 = a2[1];
  }
  else
  {
    int v35 = 0;
  }
  uint64_t v36 = &v35[4 * v31];
  int v37 = &v35[4 * v34];
  *(_DWORD *)uint64_t v36 = v29;
  int v38 = v36 + 4;
  while (v8 != v30)
  {
    int v39 = *((_DWORD *)v8 - 1);
    v8 -= 4;
    *((_DWORD *)v36 - sub_1000333D0((uint64_t *)this + 1) = v39;
    v36 -= 4;
  }
LABEL_67:
  *a2 = v36;
  a2[1] = v38;
  a2[2] = v37;
  if (v30) {
    operator delete(v30);
  }
LABEL_69:
  a2[1] = v38;
}

void google::protobuf::MethodDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  google::protobuf::ServiceDescriptor::GetLocationPath(*(void *)(a1 + 16), a2);
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    uint64_t v7 = *a2;
    uint64_t v8 = (v5 - *a2) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      goto LABEL_34;
    }
    uint64_t v10 = v4 - v7;
    if (v10 >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      unint64_t v12 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v11);
      uint64_t v7 = *a2;
      unint64_t v5 = a2[1];
    }
    else
    {
      unint64_t v12 = 0;
    }
    uint64_t v13 = &v12[4 * v8];
    uint64_t v4 = &v12[4 * v11];
    *(_DWORD *)uint64_t v13 = 2;
    int v6 = v13 + 4;
    while (v5 != v7)
    {
      int v14 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - sub_1000333D0((uint64_t *)this + 1) = v14;
      v13 -= 4;
    }
    *a2 = v13;
    a2[1] = v6;
    a2[2] = v4;
    if (v7)
    {
      operator delete(v7);
      uint64_t v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)unint64_t v5 = 2;
    int v6 = v5 + 4;
  }
  a2[1] = v6;
  int v15 = -991146299 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 16) + 32)) >> 3);
  if (v6 < v4)
  {
    *(_DWORD *)int v6 = v15;
    unint64_t v16 = v6 + 4;
    goto LABEL_33;
  }
  unint64_t v17 = *a2;
  uint64_t v18 = (v6 - *a2) >> 2;
  unint64_t v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 62) {
LABEL_34:
  }
    sub_100078F84();
  uint64_t v20 = v4 - v17;
  if (v20 >> 1 > v19) {
    unint64_t v19 = v20 >> 1;
  }
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v21 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v21 = v19;
  }
  if (v21)
  {
    unint64_t v22 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v21);
    unint64_t v17 = *a2;
    int v6 = a2[1];
  }
  else
  {
    unint64_t v22 = 0;
  }
  unint64_t v23 = &v22[4 * v18];
  uint64_t v24 = &v22[4 * v21];
  *(_DWORD *)unint64_t v23 = v15;
  unint64_t v16 = v23 + 4;
  while (v6 != v17)
  {
    int v25 = *((_DWORD *)v6 - 1);
    v6 -= 4;
    *((_DWORD *)v23 - sub_1000333D0((uint64_t *)this + 1) = v25;
    v23 -= 4;
  }
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v24;
  if (v17) {
    operator delete(v17);
  }
LABEL_33:
  a2[1] = v16;
}

void google::protobuf::ServiceDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  unint64_t v5 = a2 + 2;
  uint64_t v4 = a2[2];
  int v6 = a2[1];
  if (v6 >= v4)
  {
    uint64_t v8 = *a2;
    uint64_t v9 = (v6 - *a2) >> 2;
    unint64_t v10 = v9 + 1;
    if ((unint64_t)(v9 + 1) >> 62) {
      goto LABEL_34;
    }
    uint64_t v11 = v4 - v8;
    if (v11 >> 1 > v10) {
      unint64_t v10 = v11 >> 1;
    }
    if ((unint64_t)v11 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v12 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v12 = v10;
    }
    if (v12)
    {
      uint64_t v13 = (char *)sub_1000DD508((uint64_t)v5, v12);
      uint64_t v8 = *a2;
      int v6 = a2[1];
    }
    else
    {
      uint64_t v13 = 0;
    }
    int v14 = &v13[4 * v9];
    uint64_t v4 = &v13[4 * v12];
    *(_DWORD *)int v14 = 6;
    uint64_t v7 = v14 + 4;
    while (v6 != v8)
    {
      int v15 = *((_DWORD *)v6 - 1);
      v6 -= 4;
      *((_DWORD *)v14 - sub_1000333D0((uint64_t *)this + 1) = v15;
      v14 -= 4;
    }
    *a2 = v14;
    a2[1] = v7;
    a2[2] = v4;
    if (v8)
    {
      operator delete(v8);
      uint64_t v4 = *v5;
    }
  }
  else
  {
    *(_DWORD *)int v6 = 6;
    uint64_t v7 = v6 + 4;
  }
  a2[1] = v7;
  int v16 = -1431655765 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 16) + 120)) >> 4);
  if (v7 < v4)
  {
    *(_DWORD *)uint64_t v7 = v16;
    unint64_t v17 = v7 + 4;
    goto LABEL_33;
  }
  uint64_t v18 = *a2;
  uint64_t v19 = (v7 - *a2) >> 2;
  unint64_t v20 = v19 + 1;
  if ((unint64_t)(v19 + 1) >> 62) {
LABEL_34:
  }
    sub_100078F84();
  uint64_t v21 = v4 - v18;
  if (v21 >> 1 > v20) {
    unint64_t v20 = v21 >> 1;
  }
  if ((unint64_t)v21 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v22 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v22 = v20;
  }
  if (v22)
  {
    unint64_t v23 = (char *)sub_1000DD508((uint64_t)v5, v22);
    uint64_t v18 = *a2;
    uint64_t v7 = a2[1];
  }
  else
  {
    unint64_t v23 = 0;
  }
  uint64_t v24 = &v23[4 * v19];
  int v25 = &v23[4 * v22];
  *(_DWORD *)uint64_t v24 = v16;
  unint64_t v17 = v24 + 4;
  while (v7 != v18)
  {
    int v26 = *((_DWORD *)v7 - 1);
    v7 -= 4;
    *((_DWORD *)v24 - sub_1000333D0((uint64_t *)this + 1) = v26;
    v24 -= 4;
  }
  *a2 = v24;
  a2[1] = v17;
  a2[2] = v25;
  if (v18) {
    operator delete(v18);
  }
LABEL_33:
  a2[1] = v17;
}

uint64_t google::protobuf::EnumValueDescriptor::GetSourceLocation(uint64_t a1, uint64_t a2)
{
  std::string __p = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  google::protobuf::EnumValueDescriptor::GetLocationPath(a1, (char **)&__p);
  SourceLocatioint n = google::protobuf::FileDescriptor::GetSourceLocation(*(void *)(*(void *)(a1 + 24) + 16), (std::string **)&__p, a2);
  if (__p)
  {
    uint64_t v7 = __p;
    operator delete(__p);
  }
  return SourceLocation;
}

void sub_1000C63EC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::EnumValueDescriptor::GetLocationPath(uint64_t a1, char **a2)
{
  google::protobuf::EnumDescriptor::GetLocationPath(*(void *)(a1 + 24), a2);
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[1];
  if (v5 >= v4)
  {
    uint64_t v7 = *a2;
    uint64_t v8 = (v5 - *a2) >> 2;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 62) {
      goto LABEL_34;
    }
    uint64_t v10 = v4 - v7;
    if (v10 >> 1 > v9) {
      unint64_t v9 = v10 >> 1;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFFCLL) {
      unint64_t v11 = 0x3FFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11)
    {
      unint64_t v12 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v11);
      uint64_t v7 = *a2;
      unint64_t v5 = a2[1];
    }
    else
    {
      unint64_t v12 = 0;
    }
    uint64_t v13 = &v12[4 * v8];
    uint64_t v4 = &v12[4 * v11];
    *(_DWORD *)uint64_t v13 = 2;
    int v6 = v13 + 4;
    while (v5 != v7)
    {
      int v14 = *((_DWORD *)v5 - 1);
      v5 -= 4;
      *((_DWORD *)v13 - sub_1000333D0((uint64_t *)this + 1) = v14;
      v13 -= 4;
    }
    *a2 = v13;
    a2[1] = v6;
    a2[2] = v4;
    if (v7)
    {
      operator delete(v7);
      uint64_t v4 = a2[2];
    }
  }
  else
  {
    *(_DWORD *)unint64_t v5 = 2;
    int v6 = v5 + 4;
  }
  a2[1] = v6;
  int v15 = -858993459 * ((unint64_t)(a1 - *(void *)(*(void *)(a1 + 24) + 48)) >> 3);
  if (v6 < v4)
  {
    *(_DWORD *)int v6 = v15;
    int v16 = v6 + 4;
    goto LABEL_33;
  }
  unint64_t v17 = *a2;
  uint64_t v18 = (v6 - *a2) >> 2;
  unint64_t v19 = v18 + 1;
  if ((unint64_t)(v18 + 1) >> 62) {
LABEL_34:
  }
    sub_100078F84();
  uint64_t v20 = v4 - v17;
  if (v20 >> 1 > v19) {
    unint64_t v19 = v20 >> 1;
  }
  if ((unint64_t)v20 >= 0x7FFFFFFFFFFFFFFCLL) {
    unint64_t v21 = 0x3FFFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v21 = v19;
  }
  if (v21)
  {
    unint64_t v22 = (char *)sub_1000DD508((uint64_t)(a2 + 2), v21);
    unint64_t v17 = *a2;
    int v6 = a2[1];
  }
  else
  {
    unint64_t v22 = 0;
  }
  unint64_t v23 = &v22[4 * v18];
  uint64_t v24 = &v22[4 * v21];
  *(_DWORD *)unint64_t v23 = v15;
  int v16 = v23 + 4;
  while (v6 != v17)
  {
    int v25 = *((_DWORD *)v6 - 1);
    v6 -= 4;
    *((_DWORD *)v23 - sub_1000333D0((uint64_t *)this + 1) = v25;
    v23 -= 4;
  }
  *a2 = v23;
  a2[1] = v16;
  a2[2] = v24;
  if (v17) {
    operator delete(v17);
  }
LABEL_33:
  a2[1] = v16;
}

google::protobuf::FileDescriptor *google::protobuf::DescriptorBuilder::BuildFile(google::protobuf::DescriptorBuilder *this, const google::protobuf::FileDescriptorProto *a2)
{
  uint64_t v4 = (uint64_t *)((char *)this + 56);
  std::string::operator=((std::string *)((char *)this + 56), (const std::string *)(*((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL));
  uint64_t v5 = *((void *)this + 1);
  sub_1000BB974(&v51, v4, v6);
  long long v54 = v51;
  uint64_t v7 = sub_1000D7974((void *)(v5 + 344), (char **)&v54);
  if (!v7 || (uint64_t v8 = (google::protobuf::FileDescriptor *)v7[4]) == 0)
  {
LABEL_34:
    uint64_t v24 = (uint64_t *)*((void *)this + 1);
    uint64_t v25 = *v24;
    unint64_t v48 = v24[1];
    if (v48 != *v24)
    {
      uint64_t v26 = 0;
      unint64_t v27 = *((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL;
      int v28 = *(char *)(v27 + 23);
      if (v28 >= 0) {
        uint64_t v29 = *(unsigned __int8 *)(v27 + 23);
      }
      else {
        uint64_t v29 = *(void *)(v27 + 8);
      }
      if ((unint64_t)((uint64_t)(v48 - v25) / 24) <= 1) {
        uint64_t v30 = 1;
      }
      else {
        uint64_t v30 = (uint64_t)(v48 - v25) / 24;
      }
      do
      {
        uint64_t v31 = (unsigned __int8 *)(v25 + 24 * v26);
        uint64_t v32 = v31[23];
        if ((v32 & 0x80u) == 0) {
          uint64_t v33 = v31[23];
        }
        else {
          uint64_t v33 = *((void *)v31 + 1);
        }
        if (v33 == v29)
        {
          if (v28 >= 0) {
            unint64_t v34 = (unsigned __int8 *)v27;
          }
          else {
            unint64_t v34 = *(unsigned __int8 **)v27;
          }
          if ((v32 & 0x80) != 0)
          {
            if (!memcmp(*(const void **)v31, v34, *((void *)v31 + 1)))
            {
LABEL_59:
              google::protobuf::DescriptorBuilder::AddRecursiveImportError(this, a2, v26);
              return 0;
            }
          }
          else
          {
            if (!v31[23]) {
              goto LABEL_59;
            }
            while (*v31 == *v34)
            {
              ++v31;
              ++v34;
              if (!--v32) {
                goto LABEL_59;
              }
            }
          }
        }
        ++v26;
      }
      while (v26 != v30);
    }
    if (!*(unsigned char *)(*(void *)this + 41) && *(void *)(*(void *)this + 8))
    {
      int v35 = (long long *)(*((void *)a2 + 22) & 0xFFFFFFFFFFFFFFFELL);
      if (v48 >= v24[2])
      {
        uint64_t v37 = sub_1000DE360(v24, v35);
      }
      else
      {
        sub_1000DE300(v24, v35);
        uint64_t v37 = v48 + 24;
      }
      v24[1] = v37;
      if (*((int *)a2 + 8) >= 1)
      {
        uint64_t v38 = 1;
        while (1)
        {
          uint64_t v39 = *((void *)this + 1);
          sub_1000BB974(&v50, *(uint64_t **)(*((void *)a2 + 5) + 8 * v38), v36);
          long long v54 = v50;
          uint64_t v40 = sub_1000D7974((void *)(v39 + 344), (char **)&v54);
          if (v40 && v40[4]) {
            goto LABEL_71;
          }
          unint64_t v41 = *(google::protobuf::DescriptorPool **)this;
          uint64_t v42 = *(void *)(*(void *)this + 24);
          if (!v42) {
            goto LABEL_70;
          }
          if (!google::protobuf::DescriptorPool::FindFileByName(v42, *(uint64_t **)(*((void *)a2 + 5) + 8 * v38), v36)) {
            break;
          }
LABEL_71:
          if (v38++ >= *((int *)a2 + 8)) {
            goto LABEL_72;
          }
        }
        unint64_t v41 = *(google::protobuf::DescriptorPool **)this;
LABEL_70:
        sub_1000BB974(v49, *(uint64_t **)(*((void *)a2 + 5) + 8 * v38), v36);
        google::protobuf::DescriptorPool::TryFindFileInFallbackDatabase(v41, v49[0], v49[1]);
        goto LABEL_71;
      }
LABEL_72:
      uint64_t v44 = (uint64_t *)*((void *)this + 1);
      uint64_t v45 = v44[1];
      unint64_t v46 = (void **)(v45 - 24);
      uint64_t v24 = v44;
      if (*(char *)(v45 - 1) < 0)
      {
        operator delete(*v46);
        uint64_t v24 = (uint64_t *)*((void *)this + 1);
      }
      v44[1] = (uint64_t)v46;
    }
    google::protobuf::DescriptorPool::Tables::AddCheckpoint((google::protobuf::DescriptorPool::Tables *)v24);
    google::protobuf::DescriptorBuilder::BuildFileImpl((google::protobuf::DescriptorPool::Tables **)this, a2);
  }
  google::protobuf::FileDescriptorProto::FileDescriptorProto((google::protobuf::FileDescriptorProto *)&v54, 0);
  google::protobuf::FileDescriptor::CopyTo(v8, (google::protobuf::FileDescriptorProto *)&v54);
  if (*((_DWORD *)v8 + 15) == 2 && (*((unsigned char *)a2 + 16) & 4) != 0)
  {
    v55 |= 4u;
    sub_1000BBA84(&v57, "proto2");
    unint64_t v9 = (google::protobuf::Arena *)(*((void *)&v54 + 1) & 0xFFFFFFFFFFFFFFFELL);
    if (BYTE8(v54)) {
      unint64_t v9 = *(google::protobuf::Arena **)v9;
    }
    google::protobuf::internal::ArenaStringPtr::Set(v56, &v57, v9);
    if ((char)v58 < 0) {
      operator delete((void *)v57.n128_u64[0]);
    }
  }
  google::protobuf::MessageLite::SerializeAsString((google::protobuf::MessageLite *)&v54, (uint64_t)&v57);
  google::protobuf::MessageLite::SerializeAsString(a2, (uint64_t)__p);
  unsigned __int8 v10 = v58;
  if ((v58 & 0x80u) == 0) {
    unint64_t v11 = v58;
  }
  else {
    unint64_t v11 = v57.n128_u64[1];
  }
  unint64_t v12 = v53;
  int v13 = (char)v53;
  if ((v53 & 0x80u) != 0) {
    unint64_t v12 = (unint64_t)__p[1];
  }
  if (v11 != v12)
  {
    BOOL v23 = 0;
    if (((char)v53 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_28;
  }
  if ((v53 & 0x80u) == 0) {
    int v14 = __p;
  }
  else {
    int v14 = (void **)__p[0];
  }
  if ((char)v58 < 0)
  {
    BOOL v23 = memcmp((const void *)v57.n128_u64[0], v14, v57.n128_u64[1]) == 0;
    goto LABEL_31;
  }
  if (v58)
  {
    uint64_t v15 = v58 - 1;
    int v16 = &v57;
    do
    {
      int v18 = v16->n128_u8[0];
      int v16 = (__n128 *)((char *)v16 + 1);
      int v17 = v18;
      int v20 = *(unsigned __int8 *)v14;
      int v14 = (void **)((char *)v14 + 1);
      int v19 = v20;
      BOOL v22 = v15-- != 0;
      BOOL v23 = v17 == v19;
    }
    while (v17 == v19 && v22);
LABEL_31:
    if ((v13 & 0x80000000) == 0) {
      goto LABEL_32;
    }
LABEL_28:
    operator delete(__p[0]);
    if ((v58 & 0x80) == 0) {
      goto LABEL_33;
    }
    goto LABEL_29;
  }
  BOOL v23 = 1;
  if ((char)v53 < 0) {
    goto LABEL_28;
  }
LABEL_32:
  if ((v10 & 0x80) != 0) {
LABEL_29:
  }
    operator delete((void *)v57.n128_u64[0]);
LABEL_33:
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)&v54);
  if (!v23) {
    goto LABEL_34;
  }
  return v8;
}

void sub_1000C6A00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  if (*(char *)(v13 - 89) < 0) {
    operator delete(*(void **)(v13 - 112));
  }
  google::protobuf::FileDescriptorProto::~FileDescriptorProto((google::protobuf::FileDescriptorProto *)va);
  _Unwind_Resume(a1);
}

uint64_t google::protobuf::DescriptorBuilder::DescriptorBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = a3;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 5sub_100072180((void *)this + 6) = 0;
  *(void *)(a1 + 1sub_100072180((void *)this + 6) = a4;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 7sub_100072180((void *)this + 2) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 9sub_100072180((void *)this + 6) = a1 + 104;
  *(void *)(a1 + 11sub_100072180((void *)this + 2) = 0;
  *(void *)(a1 + 3sub_100072180((void *)this + 2) = 0;
  *(void *)(a1 + 4google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 12google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = a1 + 128;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 13sub_100072180((void *)this + 6) = 0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 16google::protobuf::internal::AssignDescriptors((uint64_t)&descriptor_table_TSPMessages_2eproto, 0) = 0u;
  sub_1000BBA84((void *)(a1 + 176), "");
  return a1;
}

void sub_1000C6ACC(_Unwind_Exception *a1)
{
  if (*(char *)(v2 + 175) < 0) {
    operator delete(*(void **)(v2 + 152));
  }
  sub_10002770C(v4, *(void **)(v2 + 128));
  sub_10002770C(v3, *(void **)(v2 + 104));
  if (*(char *)(v2 + 79) < 0) {
    operator delete(*v5);
  }
  sub_1000C6B18(v1);
  _Unwind_Resume(a1);
}

void **sub_1000C6B18(void **a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    uint64_t v3 = (uint64_t)a1[1];
    uint64_t v4 = *a1;
    if ((void *)v3 != v2)
    {
      do
      {
        v3 -= 88;
        sub_1000DDD60(v3);
      }
      while ((void *)v3 != v2);
      uint64_t v4 = *a1;
    }
    a1[1] = v2;
    operator delete(v4);
  }
  return a1;
}

void google::protobuf::DescriptorBuilder::~DescriptorBuilder(void **this)
{
  if (*((char *)this + 199) < 0) {
    operator delete(this[22]);
  }
  if (*((char *)this + 175) < 0) {
    operator delete(this[19]);
  }
  sub_10002770C((uint64_t)(this + 15), this[16]);
  sub_10002770C((uint64_t)(this + 12), this[13]);
  if (*((char *)this + 79) < 0) {
    operator delete(this[7]);
  }
  sub_1000C6B18(this + 3);
}

void google::protobuf::DescriptorBuilder::AddError(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, const std::string::value_type *a5)
{
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    (*(void (**)(uint64_t, uint64_t, const std::string::value_type *, uint64_t, uint64_t, const std::string::value_type *))(*(void *)v8 + 16))(v8, a1 + 56, a2, a3, a4, a5);
  }
  else
  {
    if (!*(unsigned char *)(a1 + 48))
    {
      google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 3620);
      unint64_t v9 = google::protobuf::internal::LogMessage::operator<<(v17, "Invalid proto descriptor for file \"");
      unsigned __int8 v10 = google::protobuf::internal::LogMessage::operator<<(v9, (const std::string::value_type *)(a1 + 56));
      unint64_t v11 = google::protobuf::internal::LogMessage::operator<<(v10, "\":");
      google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v11->__r_.__value_.__l.__data_);
      google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
    }
    google::protobuf::internal::LogMessage::LogMessage((uint64_t)v17, 2, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/iWorkXPC/shared/persistence/google/protobuf/descriptor.cc", 3623);
    unint64_t v12 = google::protobuf::internal::LogMessage::operator<<(v17, "  ");
    uint64_t v13 = google::protobuf::internal::LogMessage::operator<<(v12, a2);
    int v14 = google::protobuf::internal::LogMessage::operator<<(v13, ": ");
    uint64_t v15 = google::protobuf::internal::LogMessage::operator<<(v14, a5);
    google::protobuf::internal::LogFinisher::operator=((int)&v16, (const char **)&v15->__r_.__value_.__l.__data_);
    google::protobuf::internal::LogMessage::~LogMessage((void **)&v17[0].__r_.__value_.__l.__data_);
  }
  *(unsigned char *)(a1 + 48) = 1;
}

void sub_1000C6D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  google::protobuf::internal::LogMessage::~LogMessage((void **)va);
  _Unwind_Resume(a1);
}

void google::protobuf::DescriptorBuilder::AddError(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, char *__s)
{
  sub_1000BBA84(__p, __s);
  google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)__p);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
}

void sub_1000C6DB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void google::protobuf::DescriptorBuilder::AddNotDefinedError(uint64_t a1, const std::string::value_type *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(a1 + 144))
  {
    std::operator+<char>();
    char v10 = std::string::append(&v47, "\" seems to be defined in \"");
    long long v11 = *(_OWORD *)&v10->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v10->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v11;
    v10->__r_.__value_.__l.__size_ = 0;
    v10->__r_.__value_.__r.__words[2] = 0;
    v10->__r_.__value_.__r.__words[0] = 0;
    uint64_t v12 = **(void **)(a1 + 144);
    int v13 = *(char *)(v12 + 23);
    if (v13 >= 0) {
      int v14 = **(const std::string::value_type ***)(a1 + 144);
    }
    else {
      int v14 = *(const std::string::value_type **)v12;
    }
    if (v13 >= 0) {
      std::string::size_type v15 = *(unsigned __int8 *)(v12 + 23);
    }
    else {
      std::string::size_type v15 = *(void *)(v12 + 8);
    }
    char v16 = std::string::append(&v48, v14, v15);
    long long v17 = *(_OWORD *)&v16->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v16->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v17;
    v16->__r_.__value_.__l.__size_ = 0;
    v16->__r_.__value_.__r.__words[2] = 0;
    v16->__r_.__value_.__r.__words[0] = 0;
    int v18 = std::string::append(&v49, "\", which is not imported by \"");
    long long v19 = *(_OWORD *)&v18->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v18->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v19;
    v18->__r_.__value_.__l.__size_ = 0;
    v18->__r_.__value_.__r.__words[2] = 0;
    v18->__r_.__value_.__r.__words[0] = 0;
    int v20 = *(char *)(a1 + 79);
    if (v20 >= 0) {
      unint64_t v21 = (const std::string::value_type *)(a1 + 56);
    }
    else {
      unint64_t v21 = *(const std::string::value_type **)(a1 + 56);
    }
    if (v20 >= 0) {
      std::string::size_type v22 = *(unsigned __int8 *)(a1 + 79);
    }
    else {
      std::string::size_type v22 = *(void *)(a1 + 64);
    }
    BOOL v23 = std::string::append(&v50, v21, v22);
    long long v24 = *(_OWORD *)&v23->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v23->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v24;
    v23->__r_.__value_.__l.__size_ = 0;
    v23->__r_.__value_.__r.__words[2] = 0;
    v23->__r_.__value_.__r.__words[0] = 0;
    uint64_t v25 = std::string::append(&v51, "\".  To use it here, please add the necessary import.");
    long long v26 = *(_OWORD *)&v25->__r_.__value_.__l.__data_;
    std::string::size_type v53 = v25->__r_.__value_.__r.__words[2];
    long long v52 = v26;
    v25->__r_.__value_.__l.__size_ = 0;
    v25->__r_.__value_.__r.__words[2] = 0;
    v25->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)&v52);
    if (SHIBYTE(v53) < 0) {
      operator delete((void *)v52);
    }
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v51.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v50.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v47.__r_.__value_.__l.__data_);
    }
    LOBYTE(v27) = *(unsigned char *)(a1 + 199);
LABEL_27:
    if ((v27 & 0x80) != 0)
    {
      if (!*(void *)(a1 + 184)) {
        return;
      }
    }
    else if (!(_BYTE)v27)
    {
      return;
    }
    std::operator+<char>();
    int v28 = std::string::append(&v47, "\" is resolved to \"");
    long long v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v48.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v48.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    int v30 = *(char *)(a1 + 199);
    if (v30 >= 0) {
      uint64_t v31 = (const std::string::value_type *)(a1 + 176);
    }
    else {
      uint64_t v31 = *(const std::string::value_type **)(a1 + 176);
    }
    if (v30 >= 0) {
      std::string::size_type v32 = *(unsigned __int8 *)(a1 + 199);
    }
    else {
      std::string::size_type v32 = *(void *)(a1 + 184);
    }
    uint64_t v33 = std::string::append(&v48, v31, v32);
    long long v34 = *(_OWORD *)&v33->__r_.__value_.__l.__data_;
    v49.__r_.__value_.__r.__words[2] = v33->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v49.__r_.__value_.__l.__data_ = v34;
    v33->__r_.__value_.__l.__size_ = 0;
    v33->__r_.__value_.__r.__words[2] = 0;
    v33->__r_.__value_.__r.__words[0] = 0;
    int v35 = std::string::append(&v49, "\", which is not defined. The innermost scope is searched first in name resolution. Consider using a leading '.'(i.e., \".");
    long long v36 = *(_OWORD *)&v35->__r_.__value_.__l.__data_;
    v50.__r_.__value_.__r.__words[2] = v35->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v50.__r_.__value_.__l.__data_ = v36;
    v35->__r_.__value_.__l.__size_ = 0;
    v35->__r_.__value_.__r.__words[2] = 0;
    v35->__r_.__value_.__r.__words[0] = 0;
    int v37 = *(char *)(a5 + 23);
    if (v37 >= 0) {
      uint64_t v38 = (const std::string::value_type *)a5;
    }
    else {
      uint64_t v38 = *(const std::string::value_type **)a5;
    }
    if (v37 >= 0) {
      std::string::size_type v39 = *(unsigned __int8 *)(a5 + 23);
    }
    else {
      std::string::size_type v39 = *(void *)(a5 + 8);
    }
    uint64_t v40 = std::string::append(&v50, v38, v39);
    long long v41 = *(_OWORD *)&v40->__r_.__value_.__l.__data_;
    v51.__r_.__value_.__r.__words[2] = v40->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v51.__r_.__value_.__l.__data_ = v41;
    v40->__r_.__value_.__l.__size_ = 0;
    v40->__r_.__value_.__r.__words[2] = 0;
    v40->__r_.__value_.__r.__words[0] = 0;
    uint64_t v42 = std::string::append(&v51, "\") to start from the outermost scope.");
    long long v43 = *(_OWORD *)&v42->__r_.__value_.__l.__data_;
    std::string::size_type v53 = v42->__r_.__value_.__r.__words[2];
    long long v52 = v43;
    v42->__r_.__value_.__l.__size_ = 0;
    v42->__r_.__value_.__r.__words[2] = 0;
    v42->__r_.__value_.__r.__words[0] = 0;
    google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)&v52);
    if (SHIBYTE(v53) < 0) {
      operator delete((void *)v52);
    }
    if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v51.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v50.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v49.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v49.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v48.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v48.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v44 = (void *)v47.__r_.__value_.__r.__words[0];
LABEL_63:
      operator delete(v44);
      return;
    }
    return;
  }
  int v27 = *(char *)(a1 + 199);
  if (v27 < 0)
  {
    if (*(void *)(a1 + 184)) {
      goto LABEL_27;
    }
  }
  else if (*(unsigned char *)(a1 + 199))
  {
    goto LABEL_27;
  }
  std::operator+<char>();
  uint64_t v45 = std::string::append(&v51, "\" is not defined.");
  long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
  std::string::size_type v53 = v45->__r_.__value_.__r.__words[2];
  long long v52 = v46;
  v45->__r_.__value_.__l.__size_ = 0;
  v45->__r_.__value_.__r.__words[2] = 0;
  v45->__r_.__value_.__r.__words[0] = 0;
  google::protobuf::DescriptorBuilder::AddError(a1, a2, a3, a4, (const std::string::value_type *)&v52);
  if (SHIBYTE(v53) < 0) {
    operator delete((void *)v52);
  }
  if (SHIBYTE(v51.__r_.__value_.__r.__words[2]) < 0)
  {
    uint64_t v44 = (void *)v51.__r_.__value_.__r.__words[0];
    goto LABEL_63;
  }
}